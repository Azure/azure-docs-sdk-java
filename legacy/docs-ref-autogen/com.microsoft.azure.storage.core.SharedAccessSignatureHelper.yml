### YamlMime:JavaType
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
methods:
- fullName: com.microsoft.azure.storage.core.SharedAccessSignatureHelper.generateSharedAccessSignatureForAccount(final SharedAccessAccountPolicy policy, final String signature)
  name: generateSharedAccessSignatureForAccount(final SharedAccessAccountPolicy policy, final String signature)
  nameWithType: SharedAccessSignatureHelper.generateSharedAccessSignatureForAccount(final SharedAccessAccountPolicy policy, final String signature)
  parameters:
  - description: <p>The shared access policy to hash. </p>
    name: policy
    type: final <xref href="com.microsoft.azure.storage.SharedAccessAccountPolicy?alt=com.microsoft.azure.storage.SharedAccessAccountPolicy&text=SharedAccessAccountPolicy" data-throw-if-not-resolved="False"/>
  - description: <p>The signature to use.</p>
    name: signature
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>The finished query builder </p>
    type: <xref href="com.microsoft.azure.storage.core.UriQueryBuilder?alt=com.microsoft.azure.storage.core.UriQueryBuilder&text=UriQueryBuilder" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the signature hash embedded inside the Shared Access Signature for a <xref uid="com.microsoft.azure.storage.CloudStorageAccount" data-throw-if-not-resolved="false" data-raw-source="CloudStorageAccount"></xref>.</p>

    <p></p>
  syntax: public static UriQueryBuilder generateSharedAccessSignatureForAccount(final SharedAccessAccountPolicy policy, final String signature)
  uid: com.microsoft.azure.storage.core.SharedAccessSignatureHelper.generateSharedAccessSignatureForAccount(final SharedAccessAccountPolicy,final String)
- fullName: com.microsoft.azure.storage.core.SharedAccessSignatureHelper.generateSharedAccessSignatureForBlobAndFile(final SharedAccessPolicy policy, final SharedAccessHeaders headers, final String groupPolicyIdentifier, final String resourceType, final IPRange ipRange, final SharedAccessProtocols protocols, final String signature)
  name: generateSharedAccessSignatureForBlobAndFile(final SharedAccessPolicy policy, final SharedAccessHeaders headers, final String groupPolicyIdentifier, final String resourceType, final IPRange ipRange, final SharedAccessProtocols protocols, final String signature)
  nameWithType: SharedAccessSignatureHelper.generateSharedAccessSignatureForBlobAndFile(final SharedAccessPolicy policy, final SharedAccessHeaders headers, final String groupPolicyIdentifier, final String resourceType, final IPRange ipRange, final SharedAccessProtocols protocols, final String signature)
  parameters:
  - description: <p>The shared access policy for the shared access signature. </p>
    name: policy
    type: final <xref href="com.microsoft.azure.storage.SharedAccessPolicy?alt=com.microsoft.azure.storage.SharedAccessPolicy&text=SharedAccessPolicy" data-throw-if-not-resolved="False"/>
  - description: <p>The optional header values to set for a blob or file accessed with this shared access signature. </p>
    name: headers
    type: final <xref href="com.microsoft.azure.storage.SharedAccessHeaders?alt=com.microsoft.azure.storage.SharedAccessHeaders&text=SharedAccessHeaders" data-throw-if-not-resolved="False"/>
  - description: <p>An optional identifier for the policy. </p>
    name: groupPolicyIdentifier
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>Either "b" for blobs, "c" for containers, "f" for files, or "s" for shares. </p>
    name: resourceType
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>The range of IP addresses for the shared access signature. </p>
    name: ipRange
    type: final <xref href="com.microsoft.azure.storage.IPRange?alt=com.microsoft.azure.storage.IPRange&text=IPRange" data-throw-if-not-resolved="False"/>
  - description: <p>The Internet protocols for the shared access signature. </p>
    name: protocols
    type: final <xref href="com.microsoft.azure.storage.SharedAccessProtocols?alt=com.microsoft.azure.storage.SharedAccessProtocols&text=SharedAccessProtocols" data-throw-if-not-resolved="False"/>
  - description: <p>The signature to use.</p>
    name: signature
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>The finished query builder </p>
    type: <xref href="com.microsoft.azure.storage.core.UriQueryBuilder?alt=com.microsoft.azure.storage.core.UriQueryBuilder&text=UriQueryBuilder" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the complete query builder for creating the Shared Access Signature query.</p>

    <p></p>
  syntax: public static UriQueryBuilder generateSharedAccessSignatureForBlobAndFile(final SharedAccessPolicy policy, final SharedAccessHeaders headers, final String groupPolicyIdentifier, final String resourceType, final IPRange ipRange, final SharedAccessProtocols protocols, final String signature)
  uid: com.microsoft.azure.storage.core.SharedAccessSignatureHelper.generateSharedAccessSignatureForBlobAndFile(final SharedAccessPolicy,final SharedAccessHeaders,final String,final String,final IPRange,final SharedAccessProtocols,final String)
- fullName: com.microsoft.azure.storage.core.SharedAccessSignatureHelper.generateSharedAccessSignatureForQueue(final SharedAccessQueuePolicy policy, final String groupPolicyIdentifier, final IPRange ipRange, final SharedAccessProtocols protocols, final String signature)
  name: generateSharedAccessSignatureForQueue(final SharedAccessQueuePolicy policy, final String groupPolicyIdentifier, final IPRange ipRange, final SharedAccessProtocols protocols, final String signature)
  nameWithType: SharedAccessSignatureHelper.generateSharedAccessSignatureForQueue(final SharedAccessQueuePolicy policy, final String groupPolicyIdentifier, final IPRange ipRange, final SharedAccessProtocols protocols, final String signature)
  parameters:
  - description: <p>The shared access policy for the shared access signature. </p>
    name: policy
    type: final <xref href="com.microsoft.azure.storage.queue.SharedAccessQueuePolicy?alt=com.microsoft.azure.storage.queue.SharedAccessQueuePolicy&text=SharedAccessQueuePolicy" data-throw-if-not-resolved="False"/>
  - description: <p>An optional identifier for the policy. </p>
    name: groupPolicyIdentifier
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>The range of IP addresses for the shared access signature. </p>
    name: ipRange
    type: final <xref href="com.microsoft.azure.storage.IPRange?alt=com.microsoft.azure.storage.IPRange&text=IPRange" data-throw-if-not-resolved="False"/>
  - description: <p>The Internet protocols for the shared access signature. </p>
    name: protocols
    type: final <xref href="com.microsoft.azure.storage.SharedAccessProtocols?alt=com.microsoft.azure.storage.SharedAccessProtocols&text=SharedAccessProtocols" data-throw-if-not-resolved="False"/>
  - description: <p>The signature to use.</p>
    name: signature
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>The finished query builder </p>
    type: <xref href="com.microsoft.azure.storage.core.UriQueryBuilder?alt=com.microsoft.azure.storage.core.UriQueryBuilder&text=UriQueryBuilder" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the complete query builder for creating the Shared Access Signature query.</p>

    <p></p>
  syntax: public static UriQueryBuilder generateSharedAccessSignatureForQueue(final SharedAccessQueuePolicy policy, final String groupPolicyIdentifier, final IPRange ipRange, final SharedAccessProtocols protocols, final String signature)
  uid: com.microsoft.azure.storage.core.SharedAccessSignatureHelper.generateSharedAccessSignatureForQueue(final SharedAccessQueuePolicy,final String,final IPRange,final SharedAccessProtocols,final String)
- fullName: com.microsoft.azure.storage.core.SharedAccessSignatureHelper.generateSharedAccessSignatureForTable(final SharedAccessTablePolicy policy, final String startPartitionKey, final String startRowKey, final String endPartitionKey, final String endRowKey, final String accessPolicyIdentifier, final IPRange ipRange, final SharedAccessProtocols protocols, final String tableName, final String signature)
  name: generateSharedAccessSignatureForTable(final SharedAccessTablePolicy policy, final String startPartitionKey, final String startRowKey, final String endPartitionKey, final String endRowKey, final String accessPolicyIdentifier, final IPRange ipRange, final SharedAccessProtocols protocols, final String tableName, final String signature)
  nameWithType: SharedAccessSignatureHelper.generateSharedAccessSignatureForTable(final SharedAccessTablePolicy policy, final String startPartitionKey, final String startRowKey, final String endPartitionKey, final String endRowKey, final String accessPolicyIdentifier, final IPRange ipRange, final SharedAccessProtocols protocols, final String tableName, final String signature)
  parameters:
  - description: <p>The shared access policy for the shared access signature. </p>
    name: policy
    type: final <xref href="com.microsoft.azure.storage.table.SharedAccessTablePolicy?alt=com.microsoft.azure.storage.table.SharedAccessTablePolicy&text=SharedAccessTablePolicy" data-throw-if-not-resolved="False"/>
  - description: <p>An optional restriction of the beginning of the range of partition keys to include. </p>
    name: startPartitionKey
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>An optional restriction of the beginning of the range of row keys to include. </p>
    name: startRowKey
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>An optional restriction of the end of the range of partition keys to include. </p>
    name: endPartitionKey
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>An optional restriction of the end of the range of row keys to include. </p>
    name: endRowKey
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>An optional identifier for the policy. </p>
    name: accessPolicyIdentifier
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>The range of IP addresses for the shared access signature. </p>
    name: ipRange
    type: final <xref href="com.microsoft.azure.storage.IPRange?alt=com.microsoft.azure.storage.IPRange&text=IPRange" data-throw-if-not-resolved="False"/>
  - description: <p>The Internet protocols for the shared access signature. </p>
    name: protocols
    type: final <xref href="com.microsoft.azure.storage.SharedAccessProtocols?alt=com.microsoft.azure.storage.SharedAccessProtocols&text=SharedAccessProtocols" data-throw-if-not-resolved="False"/>
  - description: <p>The table name. </p>
    name: tableName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>The signature to use.</p>
    name: signature
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>The finished query builder </p>
    type: <xref href="com.microsoft.azure.storage.core.UriQueryBuilder?alt=com.microsoft.azure.storage.core.UriQueryBuilder&text=UriQueryBuilder" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the complete query builder for creating the Shared Access Signature query.</p>

    <p></p>
  syntax: public static UriQueryBuilder generateSharedAccessSignatureForTable(final SharedAccessTablePolicy policy, final String startPartitionKey, final String startRowKey, final String endPartitionKey, final String endRowKey, final String accessPolicyIdentifier, final IPRange ipRange, final SharedAccessProtocols protocols, final String tableName, final String signature)
  uid: com.microsoft.azure.storage.core.SharedAccessSignatureHelper.generateSharedAccessSignatureForTable(final SharedAccessTablePolicy,final String,final String,final String,final String,final String,final IPRange,final SharedAccessProtocols,final String,final String)
- fullName: com.microsoft.azure.storage.core.SharedAccessSignatureHelper.generateSharedAccessSignatureHashForAccount(final String accountName, final SharedAccessAccountPolicy policy, final StorageCredentials creds)
  name: generateSharedAccessSignatureHashForAccount(final String accountName, final SharedAccessAccountPolicy policy, final StorageCredentials creds)
  nameWithType: SharedAccessSignatureHelper.generateSharedAccessSignatureHashForAccount(final String accountName, final SharedAccessAccountPolicy policy, final StorageCredentials creds)
  parameters:
  - description: <p>The name of the account to use for the SAS. </p>
    name: accountName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>The shared access policy to hash. </p>
    name: policy
    type: final <xref href="com.microsoft.azure.storage.SharedAccessAccountPolicy?alt=com.microsoft.azure.storage.SharedAccessAccountPolicy&text=SharedAccessAccountPolicy" data-throw-if-not-resolved="False"/>
  - description: <p>The <xref uid="com.microsoft.azure.storage.StorageCredentials" data-throw-if-not-resolved="false" data-raw-source="StorageCredentials"></xref> associated with the object.</p>
    name: creds
    type: final <xref href="com.microsoft.azure.storage.StorageCredentials?alt=com.microsoft.azure.storage.StorageCredentials&text=StorageCredentials" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="InvalidKeyException?alt=InvalidKeyException&text=InvalidKeyException" data-throw-if-not-resolved="False"/>
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>The signature hash embedded inside the Shared Access Signature. </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the signature hash embedded inside the Shared Access Signature for a <xref uid="com.microsoft.azure.storage.CloudStorageAccount" data-throw-if-not-resolved="false" data-raw-source="CloudStorageAccount"></xref>.</p>

    <p></p>
  syntax: public static String generateSharedAccessSignatureHashForAccount(final String accountName, final SharedAccessAccountPolicy policy, final StorageCredentials creds)
  uid: com.microsoft.azure.storage.core.SharedAccessSignatureHelper.generateSharedAccessSignatureHashForAccount(final String,final SharedAccessAccountPolicy,final StorageCredentials)
- fullName: com.microsoft.azure.storage.core.SharedAccessSignatureHelper.generateSharedAccessSignatureHashForBlobAndFile(final SharedAccessPolicy policy, SharedAccessHeaders headers, final String accessPolicyIdentifier, final String resourceName, final IPRange ipRange, final SharedAccessProtocols protocols, final ServiceClient client, final String service, final String snapshotId)
  name: generateSharedAccessSignatureHashForBlobAndFile(final SharedAccessPolicy policy, SharedAccessHeaders headers, final String accessPolicyIdentifier, final String resourceName, final IPRange ipRange, final SharedAccessProtocols protocols, final ServiceClient client, final String service, final String snapshotId)
  nameWithType: SharedAccessSignatureHelper.generateSharedAccessSignatureHashForBlobAndFile(final SharedAccessPolicy policy, SharedAccessHeaders headers, final String accessPolicyIdentifier, final String resourceName, final IPRange ipRange, final SharedAccessProtocols protocols, final ServiceClient client, final String service, final String snapshotId)
  parameters:
  - description: <p>The shared access policy to hash. </p>
    name: policy
    type: final <xref href="com.microsoft.azure.storage.SharedAccessPolicy?alt=com.microsoft.azure.storage.SharedAccessPolicy&text=SharedAccessPolicy" data-throw-if-not-resolved="False"/>
  - description: <p>The optional header values to set for a blob or file accessed with this shared access signature. </p>
    name: headers
    type: <xref href="com.microsoft.azure.storage.SharedAccessHeaders?alt=com.microsoft.azure.storage.SharedAccessHeaders&text=SharedAccessHeaders" data-throw-if-not-resolved="False"/>
  - description: <p>An optional identifier for the policy. </p>
    name: accessPolicyIdentifier
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>The resource name. </p>
    name: resourceName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>The range of IP addresses to hash. </p>
    name: ipRange
    type: final <xref href="com.microsoft.azure.storage.IPRange?alt=com.microsoft.azure.storage.IPRange&text=IPRange" data-throw-if-not-resolved="False"/>
  - description: <p>The Internet protocols to hash. </p>
    name: protocols
    type: final <xref href="com.microsoft.azure.storage.SharedAccessProtocols?alt=com.microsoft.azure.storage.SharedAccessProtocols&text=SharedAccessProtocols" data-throw-if-not-resolved="False"/>
  - description: <p>The ServiceClient associated with the object.</p>
    name: client
    type: final <xref href="com.microsoft.azure.storage.ServiceClient?alt=com.microsoft.azure.storage.ServiceClient&text=ServiceClient" data-throw-if-not-resolved="False"/>
  - name: service
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - name: snapshotId
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="InvalidKeyException?alt=InvalidKeyException&text=InvalidKeyException" data-throw-if-not-resolved="False"/>
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>The signature hash embedded inside the Shared Access Signature. </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the signature hash embedded inside the Shared Access Signature for the blob or file service.</p>

    <p></p>
  syntax: public static String generateSharedAccessSignatureHashForBlobAndFile(final SharedAccessPolicy policy, SharedAccessHeaders headers, final String accessPolicyIdentifier, final String resourceName, final IPRange ipRange, final SharedAccessProtocols protocols, final ServiceClient client, final String service, final String snapshotId)
  uid: com.microsoft.azure.storage.core.SharedAccessSignatureHelper.generateSharedAccessSignatureHashForBlobAndFile(final SharedAccessPolicy,SharedAccessHeaders,final String,final String,final IPRange,final SharedAccessProtocols,final ServiceClient,final String,final String)
- fullName: com.microsoft.azure.storage.core.SharedAccessSignatureHelper.generateSharedAccessSignatureHashForBlobAndFile(final SharedAccessPolicy policy, SharedAccessHeaders headers, final String accessPolicyIdentifier, final String resourceName, final IPRange ipRange, final SharedAccessProtocols protocols, final ServiceClient client, final String service, final String snapshotId, boolean skipDecoding)
  name: generateSharedAccessSignatureHashForBlobAndFile(final SharedAccessPolicy policy, SharedAccessHeaders headers, final String accessPolicyIdentifier, final String resourceName, final IPRange ipRange, final SharedAccessProtocols protocols, final ServiceClient client, final String service, final String snapshotId, boolean skipDecoding)
  nameWithType: SharedAccessSignatureHelper.generateSharedAccessSignatureHashForBlobAndFile(final SharedAccessPolicy policy, SharedAccessHeaders headers, final String accessPolicyIdentifier, final String resourceName, final IPRange ipRange, final SharedAccessProtocols protocols, final ServiceClient client, final String service, final String snapshotId, boolean skipDecoding)
  parameters:
  - description: <p>The shared access policy to hash. </p>
    name: policy
    type: final <xref href="com.microsoft.azure.storage.SharedAccessPolicy?alt=com.microsoft.azure.storage.SharedAccessPolicy&text=SharedAccessPolicy" data-throw-if-not-resolved="False"/>
  - description: <p>The optional header values to set for a blob or file accessed with this shared access signature. </p>
    name: headers
    type: <xref href="com.microsoft.azure.storage.SharedAccessHeaders?alt=com.microsoft.azure.storage.SharedAccessHeaders&text=SharedAccessHeaders" data-throw-if-not-resolved="False"/>
  - description: <p>An optional identifier for the policy. </p>
    name: accessPolicyIdentifier
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>The resource name. </p>
    name: resourceName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>The range of IP addresses to hash. </p>
    name: ipRange
    type: final <xref href="com.microsoft.azure.storage.IPRange?alt=com.microsoft.azure.storage.IPRange&text=IPRange" data-throw-if-not-resolved="False"/>
  - description: <p>The Internet protocols to hash. </p>
    name: protocols
    type: final <xref href="com.microsoft.azure.storage.SharedAccessProtocols?alt=com.microsoft.azure.storage.SharedAccessProtocols&text=SharedAccessProtocols" data-throw-if-not-resolved="False"/>
  - description: <p>The ServiceClient associated with the object. </p>
    name: client
    type: final <xref href="com.microsoft.azure.storage.ServiceClient?alt=com.microsoft.azure.storage.ServiceClient&text=ServiceClient" data-throw-if-not-resolved="False"/>
  - name: service
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - name: snapshotId
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>Skip decoding the string to sign before signing.</p>
    name: skipDecoding
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="InvalidKeyException?alt=InvalidKeyException&text=InvalidKeyException" data-throw-if-not-resolved="False"/>
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>The signature hash embedded inside the Shared Access Signature. </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the signature hash embedded inside the Shared Access Signature for the blob or file service.</p>

    <p></p>
  syntax: public static String generateSharedAccessSignatureHashForBlobAndFile(final SharedAccessPolicy policy, SharedAccessHeaders headers, final String accessPolicyIdentifier, final String resourceName, final IPRange ipRange, final SharedAccessProtocols protocols, final ServiceClient client, final String service, final String snapshotId, boolean skipDecoding)
  uid: com.microsoft.azure.storage.core.SharedAccessSignatureHelper.generateSharedAccessSignatureHashForBlobAndFile(final SharedAccessPolicy,SharedAccessHeaders,final String,final String,final IPRange,final SharedAccessProtocols,final ServiceClient,final String,final String,boolean)
- fullName: com.microsoft.azure.storage.core.SharedAccessSignatureHelper.generateSharedAccessSignatureHashForQueue(final SharedAccessQueuePolicy policy, final String accessPolicyIdentifier, final String resourceName, final IPRange ipRange, final SharedAccessProtocols protocols, final ServiceClient client)
  name: generateSharedAccessSignatureHashForQueue(final SharedAccessQueuePolicy policy, final String accessPolicyIdentifier, final String resourceName, final IPRange ipRange, final SharedAccessProtocols protocols, final ServiceClient client)
  nameWithType: SharedAccessSignatureHelper.generateSharedAccessSignatureHashForQueue(final SharedAccessQueuePolicy policy, final String accessPolicyIdentifier, final String resourceName, final IPRange ipRange, final SharedAccessProtocols protocols, final ServiceClient client)
  parameters:
  - description: <p>The shared access policy to hash. </p>
    name: policy
    type: final <xref href="com.microsoft.azure.storage.queue.SharedAccessQueuePolicy?alt=com.microsoft.azure.storage.queue.SharedAccessQueuePolicy&text=SharedAccessQueuePolicy" data-throw-if-not-resolved="False"/>
  - description: <p>An optional identifier for the policy. </p>
    name: accessPolicyIdentifier
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>The resource name. </p>
    name: resourceName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>The range of IP addresses to hash. </p>
    name: ipRange
    type: final <xref href="com.microsoft.azure.storage.IPRange?alt=com.microsoft.azure.storage.IPRange&text=IPRange" data-throw-if-not-resolved="False"/>
  - description: <p>The Internet protocols to hash. </p>
    name: protocols
    type: final <xref href="com.microsoft.azure.storage.SharedAccessProtocols?alt=com.microsoft.azure.storage.SharedAccessProtocols&text=SharedAccessProtocols" data-throw-if-not-resolved="False"/>
  - description: <p>The ServiceClient associated with the object.</p>
    name: client
    type: final <xref href="com.microsoft.azure.storage.ServiceClient?alt=com.microsoft.azure.storage.ServiceClient&text=ServiceClient" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="InvalidKeyException?alt=InvalidKeyException&text=InvalidKeyException" data-throw-if-not-resolved="False"/>
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>The signature hash embedded inside the Shared Access Signature. </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the signature hash embedded inside the Shared Access Signature for queue service.</p>

    <p></p>
  syntax: public static String generateSharedAccessSignatureHashForQueue(final SharedAccessQueuePolicy policy, final String accessPolicyIdentifier, final String resourceName, final IPRange ipRange, final SharedAccessProtocols protocols, final ServiceClient client)
  uid: com.microsoft.azure.storage.core.SharedAccessSignatureHelper.generateSharedAccessSignatureHashForQueue(final SharedAccessQueuePolicy,final String,final String,final IPRange,final SharedAccessProtocols,final ServiceClient)
- fullName: com.microsoft.azure.storage.core.SharedAccessSignatureHelper.generateSharedAccessSignatureHashForTable(final SharedAccessTablePolicy policy, final String accessPolicyIdentifier, final String resourceName, final IPRange ipRange, final SharedAccessProtocols protocols, final String startPartitionKey, final String startRowKey, final String endPartitionKey, final String endRowKey, final ServiceClient client)
  name: generateSharedAccessSignatureHashForTable(final SharedAccessTablePolicy policy, final String accessPolicyIdentifier, final String resourceName, final IPRange ipRange, final SharedAccessProtocols protocols, final String startPartitionKey, final String startRowKey, final String endPartitionKey, final String endRowKey, final ServiceClient client)
  nameWithType: SharedAccessSignatureHelper.generateSharedAccessSignatureHashForTable(final SharedAccessTablePolicy policy, final String accessPolicyIdentifier, final String resourceName, final IPRange ipRange, final SharedAccessProtocols protocols, final String startPartitionKey, final String startRowKey, final String endPartitionKey, final String endRowKey, final ServiceClient client)
  parameters:
  - description: <p>The shared access policy to hash. </p>
    name: policy
    type: final <xref href="com.microsoft.azure.storage.table.SharedAccessTablePolicy?alt=com.microsoft.azure.storage.table.SharedAccessTablePolicy&text=SharedAccessTablePolicy" data-throw-if-not-resolved="False"/>
  - description: <p>An optional identifier for the policy. </p>
    name: accessPolicyIdentifier
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>The resource name. </p>
    name: resourceName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>The range of IP addresses to hash. </p>
    name: ipRange
    type: final <xref href="com.microsoft.azure.storage.IPRange?alt=com.microsoft.azure.storage.IPRange&text=IPRange" data-throw-if-not-resolved="False"/>
  - description: <p>The Internet protocols to hash. </p>
    name: protocols
    type: final <xref href="com.microsoft.azure.storage.SharedAccessProtocols?alt=com.microsoft.azure.storage.SharedAccessProtocols&text=SharedAccessProtocols" data-throw-if-not-resolved="False"/>
  - description: <p>An optional restriction of the beginning of the range of partition keys to hash. </p>
    name: startPartitionKey
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>An optional restriction of the beginning of the range of row keys to hash. </p>
    name: startRowKey
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>An optional restriction of the end of the range of partition keys to hash. </p>
    name: endPartitionKey
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>An optional restriction of the end of the range of row keys to hash. </p>
    name: endRowKey
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>The ServiceClient associated with the object.</p>
    name: client
    type: final <xref href="com.microsoft.azure.storage.ServiceClient?alt=com.microsoft.azure.storage.ServiceClient&text=ServiceClient" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="InvalidKeyException?alt=InvalidKeyException&text=InvalidKeyException" data-throw-if-not-resolved="False"/>
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>The signature hash embedded inside the Shared Access Signature. </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the signature hash embedded inside the Shared Access Signature for the table service.</p>

    <p></p>
  syntax: public static String generateSharedAccessSignatureHashForTable(final SharedAccessTablePolicy policy, final String accessPolicyIdentifier, final String resourceName, final IPRange ipRange, final SharedAccessProtocols protocols, final String startPartitionKey, final String startRowKey, final String endPartitionKey, final String endRowKey, final ServiceClient client)
  uid: com.microsoft.azure.storage.core.SharedAccessSignatureHelper.generateSharedAccessSignatureHashForTable(final SharedAccessTablePolicy,final String,final String,final IPRange,final SharedAccessProtocols,final String,final String,final String,final String,final ServiceClient)
- fullName: com.microsoft.azure.storage.core.SharedAccessSignatureHelper.generateUserDelegationSharedAccessSignatureForBlob(final SharedAccessPolicy policy, final SharedAccessHeaders headers, final String resourceType, final IPRange ipRange, final SharedAccessProtocols protocols, final String signature, final UserDelegationKey delegationKey)
  name: generateUserDelegationSharedAccessSignatureForBlob(final SharedAccessPolicy policy, final SharedAccessHeaders headers, final String resourceType, final IPRange ipRange, final SharedAccessProtocols protocols, final String signature, final UserDelegationKey delegationKey)
  nameWithType: SharedAccessSignatureHelper.generateUserDelegationSharedAccessSignatureForBlob(final SharedAccessPolicy policy, final SharedAccessHeaders headers, final String resourceType, final IPRange ipRange, final SharedAccessProtocols protocols, final String signature, final UserDelegationKey delegationKey)
  parameters:
  - description: <p>The shared access policy for the shared access signature. </p>
    name: policy
    type: final <xref href="com.microsoft.azure.storage.SharedAccessPolicy?alt=com.microsoft.azure.storage.SharedAccessPolicy&text=SharedAccessPolicy" data-throw-if-not-resolved="False"/>
  - description: <p>The optional header values to set for a blob or file accessed with this shared access signature. </p>
    name: headers
    type: final <xref href="com.microsoft.azure.storage.SharedAccessHeaders?alt=com.microsoft.azure.storage.SharedAccessHeaders&text=SharedAccessHeaders" data-throw-if-not-resolved="False"/>
  - description: <p>Currently only "b" for blobs. </p>
    name: resourceType
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>The range of IP addresses for the shared access signature. </p>
    name: ipRange
    type: final <xref href="com.microsoft.azure.storage.IPRange?alt=com.microsoft.azure.storage.IPRange&text=IPRange" data-throw-if-not-resolved="False"/>
  - description: <p>The Internet protocols for the shared access signature. </p>
    name: protocols
    type: final <xref href="com.microsoft.azure.storage.SharedAccessProtocols?alt=com.microsoft.azure.storage.SharedAccessProtocols&text=SharedAccessProtocols" data-throw-if-not-resolved="False"/>
  - description: <p>The signature to use. </p>
    name: signature
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>The key for constructing the token. </p>
    name: delegationKey
    type: final <xref href="com.microsoft.azure.storage.UserDelegationKey?alt=com.microsoft.azure.storage.UserDelegationKey&text=UserDelegationKey" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>The finished query builder. </p>
    type: <xref href="com.microsoft.azure.storage.core.UriQueryBuilder?alt=com.microsoft.azure.storage.core.UriQueryBuilder&text=UriQueryBuilder" data-throw-if-not-resolved="False"/>
  summary: <p>Get the complete query builder for creating the Shared Access Signature query. </p>
  syntax: public static UriQueryBuilder generateUserDelegationSharedAccessSignatureForBlob(final SharedAccessPolicy policy, final SharedAccessHeaders headers, final String resourceType, final IPRange ipRange, final SharedAccessProtocols protocols, final String signature, final UserDelegationKey delegationKey)
  uid: com.microsoft.azure.storage.core.SharedAccessSignatureHelper.generateUserDelegationSharedAccessSignatureForBlob(final SharedAccessPolicy,final SharedAccessHeaders,final String,final IPRange,final SharedAccessProtocols,final String,final UserDelegationKey)
- fullName: com.microsoft.azure.storage.core.SharedAccessSignatureHelper.generateUserDelegationSharedAccessSignatureHashForBlob(final SharedAccessBlobPolicy policy, SharedAccessBlobHeaders headers, final String resourceName, final IPRange ipRange, final SharedAccessProtocols protocols, final UserDelegationKey delegationKey)
  name: generateUserDelegationSharedAccessSignatureHashForBlob(final SharedAccessBlobPolicy policy, SharedAccessBlobHeaders headers, final String resourceName, final IPRange ipRange, final SharedAccessProtocols protocols, final UserDelegationKey delegationKey)
  nameWithType: SharedAccessSignatureHelper.generateUserDelegationSharedAccessSignatureHashForBlob(final SharedAccessBlobPolicy policy, SharedAccessBlobHeaders headers, final String resourceName, final IPRange ipRange, final SharedAccessProtocols protocols, final UserDelegationKey delegationKey)
  parameters:
  - description: <p>The shared access policy to hash. </p>
    name: policy
    type: final <xref href="com.microsoft.azure.storage.blob.SharedAccessBlobPolicy?alt=com.microsoft.azure.storage.blob.SharedAccessBlobPolicy&text=SharedAccessBlobPolicy" data-throw-if-not-resolved="False"/>
  - description: <p>The optional header values to set for a blob or file accessed with this shared access signature. </p>
    name: headers
    type: <xref href="com.microsoft.azure.storage.blob.SharedAccessBlobHeaders?alt=com.microsoft.azure.storage.blob.SharedAccessBlobHeaders&text=SharedAccessBlobHeaders" data-throw-if-not-resolved="False"/>
  - description: <p>The resource name. </p>
    name: resourceName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>The range of IP addresses to hash. </p>
    name: ipRange
    type: final <xref href="com.microsoft.azure.storage.IPRange?alt=com.microsoft.azure.storage.IPRange&text=IPRange" data-throw-if-not-resolved="False"/>
  - description: <p>The Internet protocols to hash. </p>
    name: protocols
    type: final <xref href="com.microsoft.azure.storage.SharedAccessProtocols?alt=com.microsoft.azure.storage.SharedAccessProtocols&text=SharedAccessProtocols" data-throw-if-not-resolved="False"/>
  - description: <p>The key data to sign and the secret to sign with. </p>
    name: delegationKey
    type: final <xref href="com.microsoft.azure.storage.UserDelegationKey?alt=com.microsoft.azure.storage.UserDelegationKey&text=UserDelegationKey" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>The signature hash to embed inside the Shared Access Signature. </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the signature hash embedded inside the user delegation Shared Access Signature for the blob service.</p>

    <p></p>
  syntax: public static String generateUserDelegationSharedAccessSignatureHashForBlob(final SharedAccessBlobPolicy policy, SharedAccessBlobHeaders headers, final String resourceName, final IPRange ipRange, final SharedAccessProtocols protocols, final UserDelegationKey delegationKey)
  uid: com.microsoft.azure.storage.core.SharedAccessSignatureHelper.generateUserDelegationSharedAccessSignatureHashForBlob(final SharedAccessBlobPolicy,SharedAccessBlobHeaders,final String,final IPRange,final SharedAccessProtocols,final UserDelegationKey)
- fullName: com.microsoft.azure.storage.core.SharedAccessSignatureHelper.parseQuery(final HashMap<String, String[]> queryParams)
  name: parseQuery(final HashMap<String, String[]> queryParams)
  nameWithType: SharedAccessSignatureHelper.parseQuery(final HashMap<String, String[]> queryParams)
  parameters:
  - description: <p>The parameters to parse.</p>
    name: queryParams
    type: <xref href="final+HashMap%3CString%2C+String%5B%5D%3E?alt=final+HashMap%3CString%2C+String%5B%5D%3E&text=final+HashMap%3CString%2C+String%5B%5D%3E" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>An exception representing any error which occurred during the operation. </p>
  returns:
    description: <p>The StorageCredentialsSharedAccessSignature if one is present, otherwise null. </p>
    type: <xref href="com.microsoft.azure.storage.StorageCredentialsSharedAccessSignature?alt=com.microsoft.azure.storage.StorageCredentialsSharedAccessSignature&text=StorageCredentialsSharedAccessSignature" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Parses the query parameters and populates a StorageCredentialsSharedAccessSignature object if one is present.</p>

    <p></p>
  syntax: public static StorageCredentialsSharedAccessSignature parseQuery(final HashMap<String, String[]> queryParams)
  uid: com.microsoft.azure.storage.core.SharedAccessSignatureHelper.parseQuery(final HashMap<String, String[]>)
- fullName: com.microsoft.azure.storage.core.SharedAccessSignatureHelper.parseQuery(final StorageUri completeUri)
  name: parseQuery(final StorageUri completeUri)
  nameWithType: SharedAccessSignatureHelper.parseQuery(final StorageUri completeUri)
  parameters:
  - description: <p>A <xref uid="com.microsoft.azure.storage.StorageUri" data-throw-if-not-resolved="false" data-raw-source="StorageUri"></xref> object which represents the complete Uri.</p>
    name: completeUri
    type: final <xref href="com.microsoft.azure.storage.StorageUri?alt=com.microsoft.azure.storage.StorageUri&text=StorageUri" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>An exception representing any error which occurred during the operation. </p>
  returns:
    description: <p>The StorageCredentialsSharedAccessSignature if one is present, otherwise null. </p>
    type: <xref href="com.microsoft.azure.storage.StorageCredentialsSharedAccessSignature?alt=com.microsoft.azure.storage.StorageCredentialsSharedAccessSignature&text=StorageCredentialsSharedAccessSignature" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Parses the query parameters and populates a StorageCredentialsSharedAccessSignature object if one is present.</p>

    <p></p>
  syntax: public static StorageCredentialsSharedAccessSignature parseQuery(final StorageUri completeUri)
  uid: com.microsoft.azure.storage.core.SharedAccessSignatureHelper.parseQuery(final StorageUri)
nameWithType: SharedAccessSignatureHelper
syntax: public class SharedAccessSignatureHelper
type: class
uid: com.microsoft.azure.storage.core.SharedAccessSignatureHelper
fullName: com.microsoft.azure.storage.core.SharedAccessSignatureHelper
name: SharedAccessSignatureHelper
package: com.microsoft.azure.storage.core
summary: <p>RESERVED FOR INTERNAL USE. Contains helper methods for implementing shared access signatures. </p>
metadata: {}
