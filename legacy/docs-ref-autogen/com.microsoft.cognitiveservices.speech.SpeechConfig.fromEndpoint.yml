### YamlMime:JavaMember
nameWithType: SpeechConfig.fromEndpoint
type: method
members:
- fullName: com.microsoft.cognitiveservices.speech.SpeechConfig.fromEndpoint(java.net.URI endpoint)
  name: fromEndpoint(java.net.URI endpoint)
  nameWithType: SpeechConfig.fromEndpoint(java.net.URI endpoint)
  parameters:
  - description: <p>The service endpoint to connect to. </p>
    name: endpoint
    type: <xref href="java.net.URI?alt=java.net.URI&text=java.net.URI" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>A speech config instance. </p>
    type: <xref href="com.microsoft.cognitiveservices.speech.SpeechConfig?alt=com.microsoft.cognitiveservices.speech.SpeechConfig&text=SpeechConfig" data-throw-if-not-resolved="False"/>
  summary: '<p>Creates an instance of the speech config with specified endpoint. This method is intended only for users who use a non-standard service endpoint or parameters. Note: The query parameters specified in the endpoint URI are not changed, even if they are set by any other APIs. For example, if the recognition language is defined in URI as query parameter "language=de-DE", and also set by setSpeechRecognitionLanguage("en-US"), the language setting in URI takes precedence, and the effective language is "de-DE". Only the parameters that are not specified in the endpoint URI can be set by other APIs. Note: if the endpoint requires a subscription key for authentication, please use fromEndpoint(java.net.URI, String) to pass the subscription key as parameter. To use an authorization token with fromEndpoint, use this method to create a SpeechConfig instance, and then call setAuthorizationToken() on the created SpeechConfig instance. Note: Added in version 1.5.0. </p>'
  syntax: public static SpeechConfig fromEndpoint(java.net.URI endpoint)
  uid: com.microsoft.cognitiveservices.speech.SpeechConfig.fromEndpoint(java.net.URI)
- fullName: com.microsoft.cognitiveservices.speech.SpeechConfig.fromEndpoint(java.net.URI endpoint, String subscriptionKey)
  name: fromEndpoint(java.net.URI endpoint, String subscriptionKey)
  nameWithType: SpeechConfig.fromEndpoint(java.net.URI endpoint, String subscriptionKey)
  parameters:
  - description: <p>The service endpoint to connect to. </p>
    name: endpoint
    type: <xref href="java.net.URI?alt=java.net.URI&text=java.net.URI" data-throw-if-not-resolved="False"/>
  - description: <p>The subscription key. </p>
    name: subscriptionKey
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>A speech config instance. </p>
    type: <xref href="com.microsoft.cognitiveservices.speech.SpeechConfig?alt=com.microsoft.cognitiveservices.speech.SpeechConfig&text=SpeechConfig" data-throw-if-not-resolved="False"/>
  summary: '<p>Creates an instance of the speech config with specified endpoint and subscription key. This method is intended only for users who use a non-standard service endpoint or parameters. Note: The query parameters specified in the endpoint URI are not changed, even if they are set by any other APIs. For example, if the recognition language is defined in URI as query parameter "language=de-DE", and also set by setSpeechRecognitionLanguage("en-US"), the language setting in URI takes precedence, and the effective language is "de-DE". Only the parameters that are not specified in the endpoint URI can be set by other APIs. Note: To use an authorization token with fromEndpoint, please use fromEndpoint(java.net.URI), and then call setAuthorizationToken() on the created SpeechConfig instance. </p>'
  syntax: public static SpeechConfig fromEndpoint(java.net.URI endpoint, String subscriptionKey)
  uid: com.microsoft.cognitiveservices.speech.SpeechConfig.fromEndpoint(java.net.URI,String)
uid: com.microsoft.cognitiveservices.speech.SpeechConfig.fromEndpoint*
fullName: com.microsoft.cognitiveservices.speech.SpeechConfig.fromEndpoint(java.net.URI endpoint)
name: fromEndpoint(java.net.URI endpoint)
package: com.microsoft.cognitiveservices.speech
metadata: {}
