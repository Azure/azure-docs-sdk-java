### YamlMime:JavaEnum
fields:
- fullName: microsoft.servicefabric.actors.runtime.ActorCallType.ActorInterfaceMethod
  name: ActorInterfaceMethod
  nameWithType: ActorCallType.ActorInterfaceMethod
  summary: <p>The method invoked is an actor interface method for a given client request. </p>
  uid: microsoft.servicefabric.actors.runtime.ActorCallType.ActorInterfaceMethod
- fullName: microsoft.servicefabric.actors.runtime.ActorCallType.ReminderMethod
  name: ReminderMethod
  nameWithType: ActorCallType.ReminderMethod
  summary: <p>The method invoked on <xref uid="microsoft.servicefabric.actors.runtime.Remindable" data-throw-if-not-resolved="false">Remindable</xref> interface when a reminder fires. </p>
  uid: microsoft.servicefabric.actors.runtime.ActorCallType.ReminderMethod
- fullName: microsoft.servicefabric.actors.runtime.ActorCallType.TimerMethod
  name: TimerMethod
  nameWithType: ActorCallType.TimerMethod
  summary: <p>The method invoked is a timer callback method. </p>
  uid: microsoft.servicefabric.actors.runtime.ActorCallType.TimerMethod
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
- <xref href="java.lang.Enum&lt;ActorCallType&gt;" data-throw-if-not-resolved="False"/>
methods:
- fullName: microsoft.servicefabric.actors.runtime.ActorCallType.getValue()
  name: getValue()
  nameWithType: ActorCallType.getValue()
  returns:
    description: <p>An integer value indicating the actor call type. </p>
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  summary: <p>Get the actor call type. </p>
  syntax: public int getValue()
  uid: microsoft.servicefabric.actors.runtime.ActorCallType.getValue()
nameWithType: ActorCallType
syntax: public enum ActorCallType
uid: microsoft.servicefabric.actors.runtime.ActorCallType
name: ActorCallType
package: microsoft.servicefabric.actors.runtime
summary: >-
  <p>Represents the call-type associated with the method invoked by actor runtime. </p>

  <p>

    <b>Remarks:</b>This is provided as part of <xref uid="microsoft.servicefabric.actors.runtime.ActorMethodContext" data-throw-if-not-resolved="false">ActorMethodContext</xref> which is passed as argument to <xref uid="microsoft.servicefabric.actors.runtime.ActorBase.onPreActorMethodAsync(ActorMethodContext)" data-throw-if-not-resolved="false">ActorBase#onPreActorMethodAsync(ActorMethodContext)</xref> and <xref uid="microsoft.servicefabric.actors.runtime.ActorBase.onPostActorMethodAsync(ActorMethodContext)" data-throw-if-not-resolved="false">ActorBase#onPostActorMethodAsync(ActorMethodContext)</xref>. </p>
metadata: {}
