### YamlMime:JavaMember
nameWithType: ComputeNodes.getRemoteDesktop
type: method
members:
- fullName: com.microsoft.azure.batch.protocol.ComputeNodes.getRemoteDesktop(String poolId, String nodeId, ComputeNodeGetRemoteDesktopOptions computeNodeGetRemoteDesktopOptions, OutputStream outputStream)
  name: getRemoteDesktop(String poolId, String nodeId, ComputeNodeGetRemoteDesktopOptions computeNodeGetRemoteDesktopOptions, OutputStream outputStream)
  nameWithType: ComputeNodes.getRemoteDesktop(String poolId, String nodeId, ComputeNodeGetRemoteDesktopOptions computeNodeGetRemoteDesktopOptions, OutputStream outputStream)
  parameters:
  - description: <p>The ID of the pool that contains the compute node. </p>
    name: poolId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The ID of the compute node for which you want to get the Remote Desktop Protocol file. </p>
    name: nodeId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>Additional parameters for the operation </p>
    name: computeNodeGetRemoteDesktopOptions
    type: <xref href="com.microsoft.azure.batch.protocol.models.ComputeNodeGetRemoteDesktopOptions?alt=com.microsoft.azure.batch.protocol.models.ComputeNodeGetRemoteDesktopOptions&text=ComputeNodeGetRemoteDesktopOptions" data-throw-if-not-resolved="False"/>
  - description: <p>The OutputStream object which data will be written to if successful. </p>
    name: outputStream
    type: <xref href="OutputStream?alt=OutputStream&text=OutputStream" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="BatchErrorException?alt=BatchErrorException&text=BatchErrorException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  summary: <p>Gets the Remote Desktop Protocol file for the specified compute node. </p>
  syntax: public void getRemoteDesktop(String poolId, String nodeId, ComputeNodeGetRemoteDesktopOptions computeNodeGetRemoteDesktopOptions, OutputStream outputStream)
  uid: com.microsoft.azure.batch.protocol.ComputeNodes.getRemoteDesktop(String,String,ComputeNodeGetRemoteDesktopOptions,OutputStream)
- fullName: com.microsoft.azure.batch.protocol.ComputeNodes.getRemoteDesktop(String poolId, String nodeId, OutputStream outputStream)
  name: getRemoteDesktop(String poolId, String nodeId, OutputStream outputStream)
  nameWithType: ComputeNodes.getRemoteDesktop(String poolId, String nodeId, OutputStream outputStream)
  parameters:
  - description: <p>The ID of the pool that contains the compute node. </p>
    name: poolId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The ID of the compute node for which you want to get the Remote Desktop Protocol file. </p>
    name: nodeId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The OutputStream object which data will be written to if successful. </p>
    name: outputStream
    type: <xref href="OutputStream?alt=OutputStream&text=OutputStream" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="BatchErrorException?alt=BatchErrorException&text=BatchErrorException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  syntax: public void getRemoteDesktop(String poolId, String nodeId, OutputStream outputStream)
  uid: com.microsoft.azure.batch.protocol.ComputeNodes.getRemoteDesktop(String,String,OutputStream)
uid: com.microsoft.azure.batch.protocol.ComputeNodes.getRemoteDesktop*
fullName: com.microsoft.azure.batch.protocol.ComputeNodes.getRemoteDesktop(String poolId, String nodeId, ComputeNodeGetRemoteDesktopOptions computeNodeGetRemoteDesktopOptions, OutputStream outputStream)
name: getRemoteDesktop(String poolId, String nodeId, ComputeNodeGetRemoteDesktopOptions computeNodeGetRemoteDesktopOptions, OutputStream outputStream)
package: com.microsoft.azure.batch.protocol
metadata: {}
