### YamlMime:JavaType
constructors:
- com.microsoft.azure.sdk.iot.service.messaging.MessagingClient.MessagingClient(String,IotHubServiceClientProtocol)
- com.microsoft.azure.sdk.iot.service.messaging.MessagingClient.MessagingClient(String,IotHubServiceClientProtocol,MessagingClientOptions)
- com.microsoft.azure.sdk.iot.service.messaging.MessagingClient.MessagingClient(String,AzureSasCredential,IotHubServiceClientProtocol)
- com.microsoft.azure.sdk.iot.service.messaging.MessagingClient.MessagingClient(String,AzureSasCredential,IotHubServiceClientProtocol,MessagingClientOptions)
- com.microsoft.azure.sdk.iot.service.messaging.MessagingClient.MessagingClient(String,TokenCredential,IotHubServiceClientProtocol)
- com.microsoft.azure.sdk.iot.service.messaging.MessagingClient.MessagingClient(String,TokenCredential,IotHubServiceClientProtocol,MessagingClientOptions)
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
methods:
- com.microsoft.azure.sdk.iot.service.messaging.MessagingClient.close()
- com.microsoft.azure.sdk.iot.service.messaging.MessagingClient.close(int)
- com.microsoft.azure.sdk.iot.service.messaging.MessagingClient.isOpen()
- com.microsoft.azure.sdk.iot.service.messaging.MessagingClient.open()
- com.microsoft.azure.sdk.iot.service.messaging.MessagingClient.open(int)
- com.microsoft.azure.sdk.iot.service.messaging.MessagingClient.send(String,Message)
- com.microsoft.azure.sdk.iot.service.messaging.MessagingClient.send(String,Message,int)
- com.microsoft.azure.sdk.iot.service.messaging.MessagingClient.send(String,String,Message)
- com.microsoft.azure.sdk.iot.service.messaging.MessagingClient.send(String,String,Message,int)
- com.microsoft.azure.sdk.iot.service.messaging.MessagingClient.sendAsync(String,Message,Consumer<SendResult>,Object)
- com.microsoft.azure.sdk.iot.service.messaging.MessagingClient.sendAsync(String,String,Message,Consumer<SendResult>,Object)
nameWithType: MessagingClient
syntax: public class MessagingClient
type: class
uid: com.microsoft.azure.sdk.iot.service.messaging.MessagingClient
fullName: com.microsoft.azure.sdk.iot.service.messaging.MessagingClient
name: MessagingClient
package: com.microsoft.azure.sdk.iot.service.messaging
summary: >-
  <p>A client for sending cloud to device and cloud to module messages. For more details on what cloud to device messages are, see <a href="https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messages-c2d#message-feedback">this document</a>.</p>

  <p>This client relies on a persistent amqp/amqp_ws connection to IoT Hub that may break due to network instability. While optional to monitor, users are highly encouraged to utilize the errorProcessorHandler defined in the <xref uid="com.microsoft.azure.sdk.iot.service.messaging.MessagingClientOptions" data-throw-if-not-resolved="false" data-raw-source="MessagingClientOptions"></xref> when constructing this client in order to monitor the connection state and to re-open the connection when needed. See the messaging client sample in this repo for best practices for monitoring and handling disconnection events. </p>
metadata: {}
