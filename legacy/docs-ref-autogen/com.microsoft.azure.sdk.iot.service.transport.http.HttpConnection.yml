### YamlMime:JavaType
constructors:
- com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.HttpConnection()
- com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.HttpConnection(URL,HttpMethod)
fields:
- com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.body
- com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.connection
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
methods:
- com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.connect()
- com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.getResponseHeaders()
- com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.getResponseStatus()
- com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.readError()
- com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.readInput()
- com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.readInputStream(InputStream)
- com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.setReadTimeoutMillis(int)
- com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.setRequestHeader(String,String)
- com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.setRequestMethod(HttpMethod)
- com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.writeOutput(byte [])
nameWithType: HttpConnection
syntax: public class HttpConnection
type: class
uid: com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection
fullName: com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection
name: HttpConnection
package: com.microsoft.azure.sdk.iot.service.transport.http
summary: >-
  <p>A wrapper for the Java SE class HttpsURLConnection. Used to avoid compatibility issues when testing with the mocking framework JMockit, as well as to avoid some undocumented side effects when using HttpsURLConnection. </p>

  <p>The underlying HttpsURLConnection is transparently managed by Java. To reuse connections, for each time connect() is called, the input streams (input stream or error stream, if input stream is not accessible) must be completely read. Otherwise, the data remains in the stream and the connection will not be reusable. </p>
metadata: {}
