### YamlMime:JavaType
inheritedMembers:
- com.microsoft.azure.management.resources.fluentcore.arm.models.HasId.id()
- com.microsoft.azure.management.resources.fluentcore.model.HasInner.inner()
- com.microsoft.azure.management.resources.fluentcore.model.Indexable.key()
- com.microsoft.azure.management.resources.fluentcore.arm.models.HasManager.manager()
- com.microsoft.azure.management.resources.fluentcore.arm.models.HasName.name()
- com.microsoft.azure.management.resources.fluentcore.model.Refreshable.refresh()
- com.microsoft.azure.management.resources.fluentcore.model.Refreshable.refreshAsync()
- com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.region()
- com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.regionName()
- com.microsoft.azure.management.resources.fluentcore.arm.models.HasResourceGroup.resourceGroupName()
- com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.tags()
- com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.type()
- com.microsoft.azure.management.resources.fluentcore.model.Updatable.update()
methods:
- fullName: com.microsoft.azure.management.keyvault.Vault.accessPolicies()
  name: accessPolicies()
  nameWithType: Vault.accessPolicies()
  returns:
    description: <p>an array of 0 to 16 identities that have access to the key vault. All identities in the array must use the same tenant ID as the key vault's tenant ID. </p>
    type: List&lt;<xref href="com.microsoft.azure.management.keyvault.AccessPolicy?alt=com.microsoft.azure.management.keyvault.AccessPolicy&text=AccessPolicy" data-throw-if-not-resolved="False"/>&gt;
  syntax: public List<AccessPolicy> accessPolicies()
  uid: com.microsoft.azure.management.keyvault.Vault.accessPolicies()
- fullName: com.microsoft.azure.management.keyvault.Vault.enabledForDeployment()
  name: enabledForDeployment()
  nameWithType: Vault.enabledForDeployment()
  returns:
    description: <p>whether Azure Virtual Machines are permitted to retrieve certificates stored as secrets from the key vault. </p>
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False"/>
  syntax: public boolean enabledForDeployment()
  uid: com.microsoft.azure.management.keyvault.Vault.enabledForDeployment()
- fullName: com.microsoft.azure.management.keyvault.Vault.enabledForDiskEncryption()
  name: enabledForDiskEncryption()
  nameWithType: Vault.enabledForDiskEncryption()
  returns:
    description: <p>whether Azure Disk Encryption is permitted to retrieve secrets from the vault and unwrap keys. </p>
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False"/>
  syntax: public boolean enabledForDiskEncryption()
  uid: com.microsoft.azure.management.keyvault.Vault.enabledForDiskEncryption()
- fullName: com.microsoft.azure.management.keyvault.Vault.enabledForTemplateDeployment()
  name: enabledForTemplateDeployment()
  nameWithType: Vault.enabledForTemplateDeployment()
  returns:
    description: <p>whether Azure Resource Manager is permitted to retrieve secrets from the key vault. </p>
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False"/>
  syntax: public boolean enabledForTemplateDeployment()
  uid: com.microsoft.azure.management.keyvault.Vault.enabledForTemplateDeployment()
- fullName: com.microsoft.azure.management.keyvault.Vault.sku()
  name: sku()
  nameWithType: Vault.sku()
  returns:
    description: <p>SKU details. </p>
    type: <xref href="com.microsoft.azure.management.keyvault.Sku?alt=com.microsoft.azure.management.keyvault.Sku&text=Sku" data-throw-if-not-resolved="False"/>
  syntax: public Sku sku()
  uid: com.microsoft.azure.management.keyvault.Vault.sku()
- fullName: com.microsoft.azure.management.keyvault.Vault.tenantId()
  name: tenantId()
  nameWithType: Vault.tenantId()
  returns:
    description: <p>the Azure Active Directory tenant ID that should be used for authenticating requests to the key vault. </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  syntax: public String tenantId()
  uid: com.microsoft.azure.management.keyvault.Vault.tenantId()
- fullName: com.microsoft.azure.management.keyvault.Vault.vaultUri()
  name: vaultUri()
  nameWithType: Vault.vaultUri()
  returns:
    description: <p>the URI of the vault for performing operations on keys and secrets. </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  syntax: public String vaultUri()
  uid: com.microsoft.azure.management.keyvault.Vault.vaultUri()
nameWithType: Vault
syntax: public interface Vault extends GroupableResource<KeyVaultManager, VaultInner>,Refreshable<Vault>,Updatable<Vault.Update>
type: interface
uid: com.microsoft.azure.management.keyvault.Vault
fullName: com.microsoft.azure.management.keyvault.Vault
name: Vault
package: com.microsoft.azure.management.keyvault
summary: <p>An immutable client-side representation of an Azure Key Vault. </p>
metadata: {}
