### YamlMime:JavaMember
nameWithType: RunsInner.updateAsync
type: method
members:
- fullName: com.microsoft.azure.management.containerregistry.implementation.RunsInner.updateAsync(String resourceGroupName, String registryName, String runId)
  name: updateAsync(String resourceGroupName, String registryName, String runId)
  nameWithType: RunsInner.updateAsync(String resourceGroupName, String registryName, String runId)
  parameters:
  - description: <p>The name of the resource group to which the container registry belongs. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the container registry. </p>
    name: registryName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The run ID. </p>
    name: runId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable for the request </p>
    type: Observable&lt;<xref href="com.microsoft.azure.management.containerregistry.implementation.RunInner?alt=com.microsoft.azure.management.containerregistry.implementation.RunInner&text=RunInner" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Patch the run properties.</p>

    <p></p>
  syntax: public Observable<RunInner> updateAsync(String resourceGroupName, String registryName, String runId)
  uid: com.microsoft.azure.management.containerregistry.implementation.RunsInner.updateAsync(String,String,String)
- fullName: com.microsoft.azure.management.containerregistry.implementation.RunsInner.updateAsync(String resourceGroupName, String registryName, String runId, Boolean isArchiveEnabled)
  name: updateAsync(String resourceGroupName, String registryName, String runId, Boolean isArchiveEnabled)
  nameWithType: RunsInner.updateAsync(String resourceGroupName, String registryName, String runId, Boolean isArchiveEnabled)
  parameters:
  - description: <p>The name of the resource group to which the container registry belongs. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the container registry. </p>
    name: registryName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The run ID. </p>
    name: runId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The value that indicates whether archiving is enabled or not. </p>
    name: isArchiveEnabled
    type: <xref href="Boolean?alt=Boolean&text=Boolean" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable for the request </p>
    type: Observable&lt;<xref href="com.microsoft.azure.management.containerregistry.implementation.RunInner?alt=com.microsoft.azure.management.containerregistry.implementation.RunInner&text=RunInner" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Patch the run properties.</p>

    <p></p>
  syntax: public Observable<RunInner> updateAsync(String resourceGroupName, String registryName, String runId, Boolean isArchiveEnabled)
  uid: com.microsoft.azure.management.containerregistry.implementation.RunsInner.updateAsync(String,String,String,Boolean)
- fullName: com.microsoft.azure.management.containerregistry.implementation.RunsInner.updateAsync(String resourceGroupName, String registryName, String runId, Boolean isArchiveEnabled, final ServiceCallback<RunInner> serviceCallback)
  name: updateAsync(String resourceGroupName, String registryName, String runId, Boolean isArchiveEnabled, final ServiceCallback<RunInner> serviceCallback)
  nameWithType: RunsInner.updateAsync(String resourceGroupName, String registryName, String runId, Boolean isArchiveEnabled, final ServiceCallback<RunInner> serviceCallback)
  parameters:
  - description: <p>The name of the resource group to which the container registry belongs. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the container registry. </p>
    name: registryName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The run ID. </p>
    name: runId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The value that indicates whether archiving is enabled or not. </p>
    name: isArchiveEnabled
    type: <xref href="Boolean?alt=Boolean&text=Boolean" data-throw-if-not-resolved="False"/>
  - description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    name: serviceCallback
    type: final ServiceCallback&lt;<xref href="com.microsoft.azure.management.containerregistry.implementation.RunInner?alt=com.microsoft.azure.management.containerregistry.implementation.RunInner&text=RunInner" data-throw-if-not-resolved="False"/>&gt;
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
    type: ServiceFuture&lt;<xref href="com.microsoft.azure.management.containerregistry.implementation.RunInner?alt=com.microsoft.azure.management.containerregistry.implementation.RunInner&text=RunInner" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Patch the run properties.</p>

    <p></p>
  syntax: public ServiceFuture<RunInner> updateAsync(String resourceGroupName, String registryName, String runId, Boolean isArchiveEnabled, final ServiceCallback<RunInner> serviceCallback)
  uid: com.microsoft.azure.management.containerregistry.implementation.RunsInner.updateAsync(String,String,String,Boolean,final ServiceCallback<RunInner>)
- fullName: com.microsoft.azure.management.containerregistry.implementation.RunsInner.updateAsync(String resourceGroupName, String registryName, String runId, final ServiceCallback<RunInner> serviceCallback)
  name: updateAsync(String resourceGroupName, String registryName, String runId, final ServiceCallback<RunInner> serviceCallback)
  nameWithType: RunsInner.updateAsync(String resourceGroupName, String registryName, String runId, final ServiceCallback<RunInner> serviceCallback)
  parameters:
  - description: <p>The name of the resource group to which the container registry belongs. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the container registry. </p>
    name: registryName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The run ID. </p>
    name: runId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    name: serviceCallback
    type: final ServiceCallback&lt;<xref href="com.microsoft.azure.management.containerregistry.implementation.RunInner?alt=com.microsoft.azure.management.containerregistry.implementation.RunInner&text=RunInner" data-throw-if-not-resolved="False"/>&gt;
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
    type: ServiceFuture&lt;<xref href="com.microsoft.azure.management.containerregistry.implementation.RunInner?alt=com.microsoft.azure.management.containerregistry.implementation.RunInner&text=RunInner" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Patch the run properties.</p>

    <p></p>
  syntax: public ServiceFuture<RunInner> updateAsync(String resourceGroupName, String registryName, String runId, final ServiceCallback<RunInner> serviceCallback)
  uid: com.microsoft.azure.management.containerregistry.implementation.RunsInner.updateAsync(String,String,String,final ServiceCallback<RunInner>)
uid: com.microsoft.azure.management.containerregistry.implementation.RunsInner.updateAsync*
fullName: com.microsoft.azure.management.containerregistry.implementation.RunsInner.updateAsync(String resourceGroupName, String registryName, String runId)
name: updateAsync(String resourceGroupName, String registryName, String runId)
package: com.microsoft.azure.management.containerregistry.implementation
metadata: {}
