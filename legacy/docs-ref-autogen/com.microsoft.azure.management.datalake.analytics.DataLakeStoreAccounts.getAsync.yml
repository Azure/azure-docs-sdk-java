### YamlMime:JavaMember
nameWithType: DataLakeStoreAccounts.getAsync
type: method
members:
- fullName: com.microsoft.azure.management.datalake.analytics.DataLakeStoreAccounts.getAsync(String resourceGroupName, String accountName, String dataLakeStoreAccountName)
  name: getAsync(String resourceGroupName, String accountName, String dataLakeStoreAccountName)
  nameWithType: DataLakeStoreAccounts.getAsync(String resourceGroupName, String accountName, String dataLakeStoreAccountName)
  parameters:
  - description: <p>The name of the Azure resource group that contains the Data Lake Analytics account. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the Data Lake Analytics account from which to retrieve the Data Lake Store account details. </p>
    name: accountName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the Data Lake Store account to retrieve </p>
    name: dataLakeStoreAccountName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the DataLakeStoreAccountInfo object </p>
    type: Observable&lt;<xref href="com.microsoft.azure.management.datalake.analytics.models.DataLakeStoreAccountInfo?alt=com.microsoft.azure.management.datalake.analytics.models.DataLakeStoreAccountInfo&text=DataLakeStoreAccountInfo" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Gets the specified Data Lake Store account details in the specified Data Lake Analytics account.</p>

    <p></p>
  syntax: public Observable<DataLakeStoreAccountInfo> getAsync(String resourceGroupName, String accountName, String dataLakeStoreAccountName)
  uid: com.microsoft.azure.management.datalake.analytics.DataLakeStoreAccounts.getAsync(String,String,String)
- fullName: com.microsoft.azure.management.datalake.analytics.DataLakeStoreAccounts.getAsync(String resourceGroupName, String accountName, String dataLakeStoreAccountName, final ServiceCallback<DataLakeStoreAccountInfo> serviceCallback)
  name: getAsync(String resourceGroupName, String accountName, String dataLakeStoreAccountName, final ServiceCallback<DataLakeStoreAccountInfo> serviceCallback)
  nameWithType: DataLakeStoreAccounts.getAsync(String resourceGroupName, String accountName, String dataLakeStoreAccountName, final ServiceCallback<DataLakeStoreAccountInfo> serviceCallback)
  parameters:
  - description: <p>The name of the Azure resource group that contains the Data Lake Analytics account. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the Data Lake Analytics account from which to retrieve the Data Lake Store account details. </p>
    name: accountName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the Data Lake Store account to retrieve </p>
    name: dataLakeStoreAccountName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    name: serviceCallback
    type: final ServiceCallback&lt;<xref href="com.microsoft.azure.management.datalake.analytics.models.DataLakeStoreAccountInfo?alt=com.microsoft.azure.management.datalake.analytics.models.DataLakeStoreAccountInfo&text=DataLakeStoreAccountInfo" data-throw-if-not-resolved="False"/>&gt;
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
    type: ServiceFuture&lt;<xref href="com.microsoft.azure.management.datalake.analytics.models.DataLakeStoreAccountInfo?alt=com.microsoft.azure.management.datalake.analytics.models.DataLakeStoreAccountInfo&text=DataLakeStoreAccountInfo" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Gets the specified Data Lake Store account details in the specified Data Lake Analytics account.</p>

    <p></p>
  syntax: public ServiceFuture<DataLakeStoreAccountInfo> getAsync(String resourceGroupName, String accountName, String dataLakeStoreAccountName, final ServiceCallback<DataLakeStoreAccountInfo> serviceCallback)
  uid: com.microsoft.azure.management.datalake.analytics.DataLakeStoreAccounts.getAsync(String,String,String,final ServiceCallback<DataLakeStoreAccountInfo>)
uid: com.microsoft.azure.management.datalake.analytics.DataLakeStoreAccounts.getAsync*
fullName: com.microsoft.azure.management.datalake.analytics.DataLakeStoreAccounts.getAsync(String resourceGroupName, String accountName, String dataLakeStoreAccountName)
name: getAsync(String resourceGroupName, String accountName, String dataLakeStoreAccountName)
package: com.microsoft.azure.management.datalake.analytics
metadata: {}
