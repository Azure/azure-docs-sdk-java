### YamlMime:JavaType
methods:
- fullName: com.microsoft.azure.functions.annotation.KafkaOutput.authenticationMode()
  name: authenticationMode()
  nameWithType: KafkaOutput.authenticationMode()
  returns:
    description: <p>The SASL mechanism. </p>
    type: <xref href="com.microsoft.azure.functions.BrokerAuthenticationMode?alt=com.microsoft.azure.functions.BrokerAuthenticationMode&text=BrokerAuthenticationMode" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>SASL mechanism to use for authentication. Default: PLAIN</p>

    <p></p>
  syntax: public BrokerAuthenticationMode authenticationMode() default BrokerAuthenticationMode.NOTSET
  uid: com.microsoft.azure.functions.annotation.KafkaOutput.authenticationMode()
- fullName: com.microsoft.azure.functions.annotation.KafkaOutput.batchSize()
  name: batchSize()
  nameWithType: KafkaOutput.batchSize()
  returns:
    description: <p>The maximum number of messages batched in one MessageSet. </p>
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Defines the maximum number of messages batched in one MessageSet. default: 10000</p>

    <p></p>
  syntax: public int batchSize() default 10000
  uid: com.microsoft.azure.functions.annotation.KafkaOutput.batchSize()
- fullName: com.microsoft.azure.functions.annotation.KafkaOutput.brokerList()
  name: brokerList()
  nameWithType: KafkaOutput.brokerList()
  returns:
    description: <p>The brokerList name string. </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Defines the BrokerList.</p>

    <p></p>
  syntax: public String brokerList()
  uid: com.microsoft.azure.functions.annotation.KafkaOutput.brokerList()
- fullName: com.microsoft.azure.functions.annotation.KafkaOutput.dataType()
  name: dataType()
  nameWithType: KafkaOutput.dataType()
  returns:
    description: <p>The dataType which will be used by the Functions runtime. </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Defines how Functions runtime should treat the parameter value. Possible values are:</p>

    <p>

      <ul>

        <li>

          <p>"" or string: treat it as a string whose value is serialized from the parameter </p>

        </li>

        <li>

          <p>binary: treat it as a binary data whose value comes from for example OutputBinding&lt;byte[]&lt;</p>

        </li>

      </ul>

    </p>
  syntax: public String dataType() default ""
  uid: com.microsoft.azure.functions.annotation.KafkaOutput.dataType()
- fullName: com.microsoft.azure.functions.annotation.KafkaOutput.enableIdempotence()
  name: enableIdempotence()
  nameWithType: KafkaOutput.enableIdempotence()
  returns:
    description: <p>whether idempotence is enabled. </p>
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>When set to `true`, the producer will ensure that messages are successfully produced exactly once and in the original produce order. default: false</p>

    <p></p>
  syntax: public boolean enableIdempotence() default false
  uid: com.microsoft.azure.functions.annotation.KafkaOutput.enableIdempotence()
- fullName: com.microsoft.azure.functions.annotation.KafkaOutput.maxMessageBytes()
  name: maxMessageBytes()
  nameWithType: KafkaOutput.maxMessageBytes()
  returns:
    description: <p>The maximum trnasmit message size. </p>
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Defines the maximum transmit message size. Default: 1MB</p>

    <p></p>
  syntax: public int maxMessageBytes() default 1000012
  uid: com.microsoft.azure.functions.annotation.KafkaOutput.maxMessageBytes()
- fullName: com.microsoft.azure.functions.annotation.KafkaOutput.maxRetries()
  name: maxRetries()
  nameWithType: KafkaOutput.maxRetries()
  returns:
    description: <p>The number of the max retries. </p>
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  summary: '<p>How many times to retry sending a failing Message. **Note:** default: 2 Retrying may cause reordering unless EnableIdempotence is set to true. </p>'
  syntax: public int maxRetries() default 2
  uid: com.microsoft.azure.functions.annotation.KafkaOutput.maxRetries()
- fullName: com.microsoft.azure.functions.annotation.KafkaOutput.messageTimeoutMs()
  name: messageTimeoutMs()
  nameWithType: KafkaOutput.messageTimeoutMs()
  returns:
    description: <p>The local message timeout. </p>
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Local message timeout. This value is only enforced locally and limits the time a produced message waits for successful delivery. A time of 0 is infinite. This is the maximum time used to deliver a message (including retries). Delivery error occurs when either the retry count or the message timeout are exceeded. default: 300000</p>

    <p></p>
  syntax: public int messageTimeoutMs() default 300000
  uid: com.microsoft.azure.functions.annotation.KafkaOutput.messageTimeoutMs()
- fullName: com.microsoft.azure.functions.annotation.KafkaOutput.name()
  name: name()
  nameWithType: KafkaOutput.name()
  returns:
    description: <p>The variable name used in function.json. </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>The variable name used in function.json.</p>

    <p></p>
  syntax: public String name()
  uid: com.microsoft.azure.functions.annotation.KafkaOutput.name()
- fullName: com.microsoft.azure.functions.annotation.KafkaOutput.password()
  name: password()
  nameWithType: KafkaOutput.password()
  returns:
    description: <p>The SASL password. </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>SASL password with the PLAIN and SASL-SCRAM-.. mechanisms Default is plaintext</p>

    <p>security.protocol in librdkafka</p>

    <p></p>
  syntax: public String password() default ""
  uid: com.microsoft.azure.functions.annotation.KafkaOutput.password()
- fullName: com.microsoft.azure.functions.annotation.KafkaOutput.protocol()
  name: protocol()
  nameWithType: KafkaOutput.protocol()
  returns:
    description: <p>The protocol. </p>
    type: <xref href="com.microsoft.azure.functions.BrokerProtocol?alt=com.microsoft.azure.functions.BrokerProtocol&text=BrokerProtocol" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets or sets the security protocol used to communicate with brokers default is PLAINTEXT</p>

    <p></p>
  syntax: public BrokerProtocol protocol() default BrokerProtocol.NOTSET
  uid: com.microsoft.azure.functions.annotation.KafkaOutput.protocol()
- fullName: com.microsoft.azure.functions.annotation.KafkaOutput.requestTimeoutMs()
  name: requestTimeoutMs()
  nameWithType: KafkaOutput.requestTimeoutMs()
  returns:
    description: <p>The ack timeout of the producer request in milliseconds. </p>
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>The ack timeout of the producer request in milliseconds. default: 5000</p>

    <p></p>
  syntax: public int requestTimeoutMs() default 5000
  uid: com.microsoft.azure.functions.annotation.KafkaOutput.requestTimeoutMs()
- fullName: com.microsoft.azure.functions.annotation.KafkaOutput.sslCaLocation()
  name: sslCaLocation()
  nameWithType: KafkaOutput.sslCaLocation()
  returns:
    description: <p>The ssl ca location. </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Path to CA certificate file for verifying the broker's certificate. ssl.ca.location in librdkafka</p>

    <p></p>
  syntax: public String sslCaLocation() default ""
  uid: com.microsoft.azure.functions.annotation.KafkaOutput.sslCaLocation()
- fullName: com.microsoft.azure.functions.annotation.KafkaOutput.sslCertificateLocation()
  name: sslCertificateLocation()
  nameWithType: KafkaOutput.sslCertificateLocation()
  returns:
    description: <p>The ssl certificate location. </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Path to client's certificate. ssl.certificate.location in librdkafka</p>

    <p></p>
  syntax: public String sslCertificateLocation() default ""
  uid: com.microsoft.azure.functions.annotation.KafkaOutput.sslCertificateLocation()
- fullName: com.microsoft.azure.functions.annotation.KafkaOutput.sslKeyLocation()
  name: sslKeyLocation()
  nameWithType: KafkaOutput.sslKeyLocation()
  returns:
    description: <p>The ssl key location. </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Path to client's private key (PEM) used for authentication. Default "" ssl.key.location in librdkafka</p>

    <p></p>
  syntax: public String sslKeyLocation() default ""
  uid: com.microsoft.azure.functions.annotation.KafkaOutput.sslKeyLocation()
- fullName: com.microsoft.azure.functions.annotation.KafkaOutput.sslKeyPassword()
  name: sslKeyPassword()
  nameWithType: KafkaOutput.sslKeyPassword()
  returns:
    description: <p>The ssl key password. </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Password for client's certificate. ssl.key.password in librdkafka</p>

    <p></p>
  syntax: public String sslKeyPassword() default ""
  uid: com.microsoft.azure.functions.annotation.KafkaOutput.sslKeyPassword()
- fullName: com.microsoft.azure.functions.annotation.KafkaOutput.topic()
  name: topic()
  nameWithType: KafkaOutput.topic()
  returns:
    description: <p>The topic name. </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Defines the Topic.</p>

    <p></p>
  syntax: public String topic()
  uid: com.microsoft.azure.functions.annotation.KafkaOutput.topic()
- fullName: com.microsoft.azure.functions.annotation.KafkaOutput.username()
  name: username()
  nameWithType: KafkaOutput.username()
  returns:
    description: <p>The SASL username. </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>SASL username with the PLAIN and SASL-SCRAM-.. mechanisms Default: ""</p>

    <p></p>
  syntax: public String username() default ""
  uid: com.microsoft.azure.functions.annotation.KafkaOutput.username()
nameWithType: KafkaOutput
syntax: public interface KafkaOutput
type: interface
uid: com.microsoft.azure.functions.annotation.KafkaOutput
fullName: com.microsoft.azure.functions.annotation.KafkaOutput
name: KafkaOutput
package: com.microsoft.azure.functions.annotation
summary: >-
  <p>KafkaOutput(name = "event", topic = "users", brokerList="broker:29092") OutputBinding&lt;String&lt;output, final ExecutionContext context) { context.getLogger().info("Message:" + message); output.setValue(message); return "{ \"id": "" + System.currentTimeMillis() + "", "description": "" + message + "" }"; } </p>

  <p></p>
metadata: {}
