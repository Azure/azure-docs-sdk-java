### YamlMime:JavaType
constructors:
- fullName: com.microsoft.azure.sdk.iot.device.auth.IotHubSasTokenAuthenticationProvider.IotHubSasTokenAuthenticationProvider(String hostname, String gatewayHostname, String deviceId, String moduleId)
  name: IotHubSasTokenAuthenticationProvider(String hostname, String gatewayHostname, String deviceId, String moduleId)
  nameWithType: IotHubSasTokenAuthenticationProvider.IotHubSasTokenAuthenticationProvider(String hostname, String gatewayHostname, String deviceId, String moduleId)
  parameters:
  - name: hostname
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - name: gatewayHostname
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - name: deviceId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - name: moduleId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  syntax: public IotHubSasTokenAuthenticationProvider(String hostname, String gatewayHostname, String deviceId, String moduleId)
  uid: com.microsoft.azure.sdk.iot.device.auth.IotHubSasTokenAuthenticationProvider.IotHubSasTokenAuthenticationProvider(String,String,String,String)
- fullName: com.microsoft.azure.sdk.iot.device.auth.IotHubSasTokenAuthenticationProvider.IotHubSasTokenAuthenticationProvider(String hostname, String gatewayHostname, String deviceId, String moduleId, long tokenValidSecs, int timeBufferPercentage)
  name: IotHubSasTokenAuthenticationProvider(String hostname, String gatewayHostname, String deviceId, String moduleId, long tokenValidSecs, int timeBufferPercentage)
  nameWithType: IotHubSasTokenAuthenticationProvider.IotHubSasTokenAuthenticationProvider(String hostname, String gatewayHostname, String deviceId, String moduleId, long tokenValidSecs, int timeBufferPercentage)
  parameters:
  - name: hostname
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - name: gatewayHostname
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - name: deviceId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - name: moduleId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - name: tokenValidSecs
    type: <xref href="long?alt=long&text=long" data-throw-if-not-resolved="False"/>
  - name: timeBufferPercentage
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  syntax: public IotHubSasTokenAuthenticationProvider(String hostname, String gatewayHostname, String deviceId, String moduleId, long tokenValidSecs, int timeBufferPercentage)
  uid: com.microsoft.azure.sdk.iot.device.auth.IotHubSasTokenAuthenticationProvider.IotHubSasTokenAuthenticationProvider(String,String,String,String,long,int)
fields:
- field:
    type: <xref href="com.microsoft.azure.sdk.iot.device.auth.IotHubSasToken?alt=com.microsoft.azure.sdk.iot.device.auth.IotHubSasToken&text=IotHubSasToken" data-throw-if-not-resolved="False"/>
  fullName: com.microsoft.azure.sdk.iot.device.auth.IotHubSasTokenAuthenticationProvider.sasToken
  name: sasToken
  nameWithType: IotHubSasTokenAuthenticationProvider.sasToken
  syntax: protected IotHubSasToken sasToken
  uid: com.microsoft.azure.sdk.iot.device.auth.IotHubSasTokenAuthenticationProvider.sasToken
- field:
    type: <xref href="long?alt=long&text=long" data-throw-if-not-resolved="False"/>
  fullName: com.microsoft.azure.sdk.iot.device.auth.IotHubSasTokenAuthenticationProvider.tokenValidSecs
  name: tokenValidSecs
  nameWithType: IotHubSasTokenAuthenticationProvider.tokenValidSecs
  summary: >-
    <p>The number of seconds after which the generated SAS token for a message will become invalid. We also use the expiry time, which is computed as <code>currentTime() + DEVICE_KEY_VALID_LENGTH 

        </code> , as a salt when generating our SAS token. </p>
  syntax: protected long tokenValidSecs= 3600
  uid: com.microsoft.azure.sdk.iot.device.auth.IotHubSasTokenAuthenticationProvider.tokenValidSecs
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
- <xref href="com.microsoft.azure.sdk.iot.device.auth.IotHubAuthenticationProvider?alt=com.microsoft.azure.sdk.iot.device.auth.IotHubAuthenticationProvider&text=IotHubAuthenticationProvider" data-throw-if-not-resolved="False"/>
inheritedMembers:
- com.microsoft.azure.sdk.iot.device.auth.IotHubAuthenticationProvider.deviceId
- com.microsoft.azure.sdk.iot.device.auth.IotHubAuthenticationProvider.gatewayHostname
- com.microsoft.azure.sdk.iot.device.auth.IotHubAuthenticationProvider.getDeviceId()
- com.microsoft.azure.sdk.iot.device.auth.IotHubAuthenticationProvider.getGatewayHostname()
- com.microsoft.azure.sdk.iot.device.auth.IotHubAuthenticationProvider.getHostname()
- com.microsoft.azure.sdk.iot.device.auth.IotHubAuthenticationProvider.getModuleId()
- com.microsoft.azure.sdk.iot.device.auth.IotHubAuthenticationProvider.getSSLContext()
- com.microsoft.azure.sdk.iot.device.auth.IotHubAuthenticationProvider.hostname
- com.microsoft.azure.sdk.iot.device.auth.IotHubAuthenticationProvider.IotHubAuthenticationProvider(String,String,String,String)
- com.microsoft.azure.sdk.iot.device.auth.IotHubAuthenticationProvider.IotHubAuthenticationProvider(String,String,String,String,SSLContext)
- com.microsoft.azure.sdk.iot.device.auth.IotHubAuthenticationProvider.moduleId
methods:
- fullName: com.microsoft.azure.sdk.iot.device.auth.IotHubSasTokenAuthenticationProvider.canRefreshToken()
  name: canRefreshToken()
  nameWithType: IotHubSasTokenAuthenticationProvider.canRefreshToken()
  returns:
    type: <xref href="abstract+boolean?alt=abstract+boolean&text=abstract+boolean" data-throw-if-not-resolved="False"/>
  syntax: public abstract boolean canRefreshToken()
  uid: com.microsoft.azure.sdk.iot.device.auth.IotHubSasTokenAuthenticationProvider.canRefreshToken()
- fullName: com.microsoft.azure.sdk.iot.device.auth.IotHubSasTokenAuthenticationProvider.getMillisecondsBeforeProactiveRenewal()
  name: getMillisecondsBeforeProactiveRenewal()
  nameWithType: IotHubSasTokenAuthenticationProvider.getMillisecondsBeforeProactiveRenewal()
  returns:
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  syntax: public int getMillisecondsBeforeProactiveRenewal()
  uid: com.microsoft.azure.sdk.iot.device.auth.IotHubSasTokenAuthenticationProvider.getMillisecondsBeforeProactiveRenewal()
- fullName: com.microsoft.azure.sdk.iot.device.auth.IotHubSasTokenAuthenticationProvider.getSasToken()
  name: getSasToken()
  nameWithType: IotHubSasTokenAuthenticationProvider.getSasToken()
  returns:
    type: <xref href="abstract+char+%5B%5D?alt=abstract+char+%5B%5D&text=abstract+char+%5B%5D" data-throw-if-not-resolved="False"/>
  syntax: public abstract char [] getSasToken()
  uid: com.microsoft.azure.sdk.iot.device.auth.IotHubSasTokenAuthenticationProvider.getSasToken()
- fullName: com.microsoft.azure.sdk.iot.device.auth.IotHubSasTokenAuthenticationProvider.getTokenValidSecs()
  name: getTokenValidSecs()
  nameWithType: IotHubSasTokenAuthenticationProvider.getTokenValidSecs()
  returns:
    type: <xref href="long?alt=long&text=long" data-throw-if-not-resolved="False"/>
  syntax: public long getTokenValidSecs()
  uid: com.microsoft.azure.sdk.iot.device.auth.IotHubSasTokenAuthenticationProvider.getTokenValidSecs()
- fullName: com.microsoft.azure.sdk.iot.device.auth.IotHubSasTokenAuthenticationProvider.isAuthenticationProviderRenewalNecessary()
  name: isAuthenticationProviderRenewalNecessary()
  nameWithType: IotHubSasTokenAuthenticationProvider.isAuthenticationProviderRenewalNecessary()
  returns:
    description: <p>true if the this authentication provider is no longer valid. False otherwise </p>
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False"/>
  summary: <p>Returns true if the this authentication provider is no longer valid. If true, users will need to create a new DeviceClient instance to get a new authentication provider. The most common case for this is if the user provides a SAS token, but no symmetric key, and that SAS token has expired. At that point, the user's client won't be able to authenticate anymore. </p>
  syntax: public boolean isAuthenticationProviderRenewalNecessary()
  uid: com.microsoft.azure.sdk.iot.device.auth.IotHubSasTokenAuthenticationProvider.isAuthenticationProviderRenewalNecessary()
- fullName: com.microsoft.azure.sdk.iot.device.auth.IotHubSasTokenAuthenticationProvider.isSasTokenExpired()
  name: isSasTokenExpired()
  nameWithType: IotHubSasTokenAuthenticationProvider.isSasTokenExpired()
  returns:
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False"/>
  syntax: public boolean isSasTokenExpired()
  uid: com.microsoft.azure.sdk.iot.device.auth.IotHubSasTokenAuthenticationProvider.isSasTokenExpired()
- fullName: com.microsoft.azure.sdk.iot.device.auth.IotHubSasTokenAuthenticationProvider.setTokenValidSecs(long tokenValidSecs)
  name: setTokenValidSecs(long tokenValidSecs)
  nameWithType: IotHubSasTokenAuthenticationProvider.setTokenValidSecs(long tokenValidSecs)
  parameters:
  - name: tokenValidSecs
    type: <xref href="long?alt=long&text=long" data-throw-if-not-resolved="False"/>
  syntax: public void setTokenValidSecs(long tokenValidSecs)
  uid: com.microsoft.azure.sdk.iot.device.auth.IotHubSasTokenAuthenticationProvider.setTokenValidSecs(long)
- fullName: com.microsoft.azure.sdk.iot.device.auth.IotHubSasTokenAuthenticationProvider.shouldRefreshToken(boolean proactivelyRenew)
  name: shouldRefreshToken(boolean proactivelyRenew)
  nameWithType: IotHubSasTokenAuthenticationProvider.shouldRefreshToken(boolean proactivelyRenew)
  parameters:
  - description: <p>if true, this function will return true even if the saved token has not expired, but only if the token has lived beyond its time buffer percentage </p>
    name: proactivelyRenew
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>true if the caller should refresh the saved sas token </p>
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Returns true if the saved token should be refreshed</p>

    <p></p>
  syntax: public boolean shouldRefreshToken(boolean proactivelyRenew)
  uid: com.microsoft.azure.sdk.iot.device.auth.IotHubSasTokenAuthenticationProvider.shouldRefreshToken(boolean)
nameWithType: IotHubSasTokenAuthenticationProvider
syntax: public class IotHubSasTokenAuthenticationProvider extends IotHubAuthenticationProvider
type: class
uid: com.microsoft.azure.sdk.iot.device.auth.IotHubSasTokenAuthenticationProvider
fullName: com.microsoft.azure.sdk.iot.device.auth.IotHubSasTokenAuthenticationProvider
name: IotHubSasTokenAuthenticationProvider
package: com.microsoft.azure.sdk.iot.device.auth
metadata: {}
