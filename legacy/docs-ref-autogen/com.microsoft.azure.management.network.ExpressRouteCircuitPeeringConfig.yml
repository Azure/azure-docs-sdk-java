### YamlMime:JavaType
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
methods:
- fullName: com.microsoft.azure.management.network.ExpressRouteCircuitPeeringConfig.advertisedCommunities()
  name: advertisedCommunities()
  nameWithType: ExpressRouteCircuitPeeringConfig.advertisedCommunities()
  returns:
    description: <p>the advertisedCommunities value </p>
    type: <xref href="List%3CString%3E?alt=List%3CString%3E&text=List%3CString%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the advertisedCommunities value.</p>

    <p></p>
  syntax: public List<String> advertisedCommunities()
  uid: com.microsoft.azure.management.network.ExpressRouteCircuitPeeringConfig.advertisedCommunities()
- fullName: com.microsoft.azure.management.network.ExpressRouteCircuitPeeringConfig.advertisedPublicPrefixes()
  name: advertisedPublicPrefixes()
  nameWithType: ExpressRouteCircuitPeeringConfig.advertisedPublicPrefixes()
  returns:
    description: <p>the advertisedPublicPrefixes value </p>
    type: <xref href="List%3CString%3E?alt=List%3CString%3E&text=List%3CString%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the advertisedPublicPrefixes value.</p>

    <p></p>
  syntax: public List<String> advertisedPublicPrefixes()
  uid: com.microsoft.azure.management.network.ExpressRouteCircuitPeeringConfig.advertisedPublicPrefixes()
- fullName: com.microsoft.azure.management.network.ExpressRouteCircuitPeeringConfig.advertisedPublicPrefixesState()
  name: advertisedPublicPrefixesState()
  nameWithType: ExpressRouteCircuitPeeringConfig.advertisedPublicPrefixesState()
  returns:
    description: <p>the advertisedPublicPrefixesState value </p>
    type: <xref href="com.microsoft.azure.management.network.ExpressRouteCircuitPeeringAdvertisedPublicPrefixState?alt=com.microsoft.azure.management.network.ExpressRouteCircuitPeeringAdvertisedPublicPrefixState&text=ExpressRouteCircuitPeeringAdvertisedPublicPrefixState" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the advertisedPublicPrefixesState value.</p>

    <p></p>
  syntax: public ExpressRouteCircuitPeeringAdvertisedPublicPrefixState advertisedPublicPrefixesState()
  uid: com.microsoft.azure.management.network.ExpressRouteCircuitPeeringConfig.advertisedPublicPrefixesState()
- fullName: com.microsoft.azure.management.network.ExpressRouteCircuitPeeringConfig.customerASN()
  name: customerASN()
  nameWithType: ExpressRouteCircuitPeeringConfig.customerASN()
  returns:
    description: <p>the customerASN value </p>
    type: <xref href="Integer?alt=Integer&text=Integer" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the customerASN value.</p>

    <p></p>
  syntax: public Integer customerASN()
  uid: com.microsoft.azure.management.network.ExpressRouteCircuitPeeringConfig.customerASN()
- fullName: com.microsoft.azure.management.network.ExpressRouteCircuitPeeringConfig.legacyMode()
  name: legacyMode()
  nameWithType: ExpressRouteCircuitPeeringConfig.legacyMode()
  returns:
    description: <p>the legacyMode value </p>
    type: <xref href="Integer?alt=Integer&text=Integer" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the legacyMode value.</p>

    <p></p>
  syntax: public Integer legacyMode()
  uid: com.microsoft.azure.management.network.ExpressRouteCircuitPeeringConfig.legacyMode()
- fullName: com.microsoft.azure.management.network.ExpressRouteCircuitPeeringConfig.routingRegistryName()
  name: routingRegistryName()
  nameWithType: ExpressRouteCircuitPeeringConfig.routingRegistryName()
  returns:
    description: <p>the routingRegistryName value </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the routingRegistryName value.</p>

    <p></p>
  syntax: public String routingRegistryName()
  uid: com.microsoft.azure.management.network.ExpressRouteCircuitPeeringConfig.routingRegistryName()
- fullName: com.microsoft.azure.management.network.ExpressRouteCircuitPeeringConfig.withAdvertisedCommunities(List<String> advertisedCommunities)
  name: withAdvertisedCommunities(List<String> advertisedCommunities)
  nameWithType: ExpressRouteCircuitPeeringConfig.withAdvertisedCommunities(List<String> advertisedCommunities)
  parameters:
  - description: <p>the advertisedCommunities value to set </p>
    name: advertisedCommunities
    type: <xref href="List%3CString%3E?alt=List%3CString%3E&text=List%3CString%3E" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the ExpressRouteCircuitPeeringConfig object itself. </p>
    type: <xref href="com.microsoft.azure.management.network.ExpressRouteCircuitPeeringConfig?alt=com.microsoft.azure.management.network.ExpressRouteCircuitPeeringConfig&text=ExpressRouteCircuitPeeringConfig" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the advertisedCommunities value.</p>

    <p></p>
  syntax: public ExpressRouteCircuitPeeringConfig withAdvertisedCommunities(List<String> advertisedCommunities)
  uid: com.microsoft.azure.management.network.ExpressRouteCircuitPeeringConfig.withAdvertisedCommunities(List<String>)
- fullName: com.microsoft.azure.management.network.ExpressRouteCircuitPeeringConfig.withAdvertisedPublicPrefixes(List<String> advertisedPublicPrefixes)
  name: withAdvertisedPublicPrefixes(List<String> advertisedPublicPrefixes)
  nameWithType: ExpressRouteCircuitPeeringConfig.withAdvertisedPublicPrefixes(List<String> advertisedPublicPrefixes)
  parameters:
  - description: <p>the advertisedPublicPrefixes value to set </p>
    name: advertisedPublicPrefixes
    type: <xref href="List%3CString%3E?alt=List%3CString%3E&text=List%3CString%3E" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the ExpressRouteCircuitPeeringConfig object itself. </p>
    type: <xref href="com.microsoft.azure.management.network.ExpressRouteCircuitPeeringConfig?alt=com.microsoft.azure.management.network.ExpressRouteCircuitPeeringConfig&text=ExpressRouteCircuitPeeringConfig" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the advertisedPublicPrefixes value.</p>

    <p></p>
  syntax: public ExpressRouteCircuitPeeringConfig withAdvertisedPublicPrefixes(List<String> advertisedPublicPrefixes)
  uid: com.microsoft.azure.management.network.ExpressRouteCircuitPeeringConfig.withAdvertisedPublicPrefixes(List<String>)
- fullName: com.microsoft.azure.management.network.ExpressRouteCircuitPeeringConfig.withAdvertisedPublicPrefixesState(ExpressRouteCircuitPeeringAdvertisedPublicPrefixState advertisedPublicPrefixesState)
  name: withAdvertisedPublicPrefixesState(ExpressRouteCircuitPeeringAdvertisedPublicPrefixState advertisedPublicPrefixesState)
  nameWithType: ExpressRouteCircuitPeeringConfig.withAdvertisedPublicPrefixesState(ExpressRouteCircuitPeeringAdvertisedPublicPrefixState advertisedPublicPrefixesState)
  parameters:
  - description: <p>the advertisedPublicPrefixesState value to set </p>
    name: advertisedPublicPrefixesState
    type: <xref href="com.microsoft.azure.management.network.ExpressRouteCircuitPeeringAdvertisedPublicPrefixState?alt=com.microsoft.azure.management.network.ExpressRouteCircuitPeeringAdvertisedPublicPrefixState&text=ExpressRouteCircuitPeeringAdvertisedPublicPrefixState" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the ExpressRouteCircuitPeeringConfig object itself. </p>
    type: <xref href="com.microsoft.azure.management.network.ExpressRouteCircuitPeeringConfig?alt=com.microsoft.azure.management.network.ExpressRouteCircuitPeeringConfig&text=ExpressRouteCircuitPeeringConfig" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the advertisedPublicPrefixesState value.</p>

    <p></p>
  syntax: public ExpressRouteCircuitPeeringConfig withAdvertisedPublicPrefixesState(ExpressRouteCircuitPeeringAdvertisedPublicPrefixState advertisedPublicPrefixesState)
  uid: com.microsoft.azure.management.network.ExpressRouteCircuitPeeringConfig.withAdvertisedPublicPrefixesState(ExpressRouteCircuitPeeringAdvertisedPublicPrefixState)
- fullName: com.microsoft.azure.management.network.ExpressRouteCircuitPeeringConfig.withCustomerASN(Integer customerASN)
  name: withCustomerASN(Integer customerASN)
  nameWithType: ExpressRouteCircuitPeeringConfig.withCustomerASN(Integer customerASN)
  parameters:
  - description: <p>the customerASN value to set </p>
    name: customerASN
    type: <xref href="Integer?alt=Integer&text=Integer" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the ExpressRouteCircuitPeeringConfig object itself. </p>
    type: <xref href="com.microsoft.azure.management.network.ExpressRouteCircuitPeeringConfig?alt=com.microsoft.azure.management.network.ExpressRouteCircuitPeeringConfig&text=ExpressRouteCircuitPeeringConfig" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the customerASN value.</p>

    <p></p>
  syntax: public ExpressRouteCircuitPeeringConfig withCustomerASN(Integer customerASN)
  uid: com.microsoft.azure.management.network.ExpressRouteCircuitPeeringConfig.withCustomerASN(Integer)
- fullName: com.microsoft.azure.management.network.ExpressRouteCircuitPeeringConfig.withLegacyMode(Integer legacyMode)
  name: withLegacyMode(Integer legacyMode)
  nameWithType: ExpressRouteCircuitPeeringConfig.withLegacyMode(Integer legacyMode)
  parameters:
  - description: <p>the legacyMode value to set </p>
    name: legacyMode
    type: <xref href="Integer?alt=Integer&text=Integer" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the ExpressRouteCircuitPeeringConfig object itself. </p>
    type: <xref href="com.microsoft.azure.management.network.ExpressRouteCircuitPeeringConfig?alt=com.microsoft.azure.management.network.ExpressRouteCircuitPeeringConfig&text=ExpressRouteCircuitPeeringConfig" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the legacyMode value.</p>

    <p></p>
  syntax: public ExpressRouteCircuitPeeringConfig withLegacyMode(Integer legacyMode)
  uid: com.microsoft.azure.management.network.ExpressRouteCircuitPeeringConfig.withLegacyMode(Integer)
- fullName: com.microsoft.azure.management.network.ExpressRouteCircuitPeeringConfig.withRoutingRegistryName(String routingRegistryName)
  name: withRoutingRegistryName(String routingRegistryName)
  nameWithType: ExpressRouteCircuitPeeringConfig.withRoutingRegistryName(String routingRegistryName)
  parameters:
  - description: <p>the routingRegistryName value to set </p>
    name: routingRegistryName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the ExpressRouteCircuitPeeringConfig object itself. </p>
    type: <xref href="com.microsoft.azure.management.network.ExpressRouteCircuitPeeringConfig?alt=com.microsoft.azure.management.network.ExpressRouteCircuitPeeringConfig&text=ExpressRouteCircuitPeeringConfig" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the routingRegistryName value.</p>

    <p></p>
  syntax: public ExpressRouteCircuitPeeringConfig withRoutingRegistryName(String routingRegistryName)
  uid: com.microsoft.azure.management.network.ExpressRouteCircuitPeeringConfig.withRoutingRegistryName(String)
nameWithType: ExpressRouteCircuitPeeringConfig
syntax: public class ExpressRouteCircuitPeeringConfig
type: class
uid: com.microsoft.azure.management.network.ExpressRouteCircuitPeeringConfig
fullName: com.microsoft.azure.management.network.ExpressRouteCircuitPeeringConfig
name: ExpressRouteCircuitPeeringConfig
package: com.microsoft.azure.management.network
summary: <p>Specifies the peering configuration. </p>
metadata: {}
