### YamlMime:JavaMember
nameWithType: Accounts.deleteAsync
type: method
members:
- fullName: com.microsoft.azure.management.datalake.store.Accounts.deleteAsync(String resourceGroupName, String name)
  name: deleteAsync(String resourceGroupName, String name)
  nameWithType: Accounts.deleteAsync(String resourceGroupName, String name)
  parameters:
  - description: <p>The name of the Azure resource group that contains the Data Lake Store account. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the Data Lake Store account to delete. </p>
    name: name
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceResponse"></xref> object if successful. </p>
    type: <xref href="Observable%3CVoid%3E?alt=Observable%3CVoid%3E&text=Observable%3CVoid%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Deletes the specified Data Lake Store account.</p>

    <p></p>
  syntax: public Observable<Void> deleteAsync(String resourceGroupName, String name)
  uid: com.microsoft.azure.management.datalake.store.Accounts.deleteAsync(String,String)
- fullName: com.microsoft.azure.management.datalake.store.Accounts.deleteAsync(String resourceGroupName, String name, final ServiceCallback<Void> serviceCallback)
  name: deleteAsync(String resourceGroupName, String name, final ServiceCallback<Void> serviceCallback)
  nameWithType: Accounts.deleteAsync(String resourceGroupName, String name, final ServiceCallback<Void> serviceCallback)
  parameters:
  - description: <p>The name of the Azure resource group that contains the Data Lake Store account. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the Data Lake Store account to delete. </p>
    name: name
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    name: serviceCallback
    type: <xref href="final+ServiceCallback%3CVoid%3E?alt=final+ServiceCallback%3CVoid%3E&text=final+ServiceCallback%3CVoid%3E" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
    type: <xref href="ServiceFuture%3CVoid%3E?alt=ServiceFuture%3CVoid%3E&text=ServiceFuture%3CVoid%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Deletes the specified Data Lake Store account.</p>

    <p></p>
  syntax: public ServiceFuture<Void> deleteAsync(String resourceGroupName, String name, final ServiceCallback<Void> serviceCallback)
  uid: com.microsoft.azure.management.datalake.store.Accounts.deleteAsync(String,String,final ServiceCallback<Void>)
uid: com.microsoft.azure.management.datalake.store.Accounts.deleteAsync*
fullName: com.microsoft.azure.management.datalake.store.Accounts.deleteAsync
name: deleteAsync(String resourceGroupName, String name)
package: com.microsoft.azure.management.datalake.store
metadata: {}
