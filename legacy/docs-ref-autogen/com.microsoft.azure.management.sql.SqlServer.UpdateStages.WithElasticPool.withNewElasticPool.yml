### YamlMime:JavaMember
nameWithType: SqlServer.UpdateStages.WithElasticPool.withNewElasticPool
type: method
members:
- fullName: com.microsoft.azure.management.sql.SqlServer.UpdateStages.WithElasticPool.withNewElasticPool(String elasticPoolName, ElasticPoolEdition elasticPoolEdition)
  name: withNewElasticPool(String elasticPoolName, ElasticPoolEdition elasticPoolEdition)
  nameWithType: SqlServer.UpdateStages.WithElasticPool.withNewElasticPool(String elasticPoolName, ElasticPoolEdition elasticPoolEdition)
  parameters:
  - description: <p>name of the elastic pool to be created </p>
    name: elasticPoolName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>edition of the elastic pool </p>
    name: elasticPoolEdition
    type: <xref href="com.microsoft.azure.management.sql.ElasticPoolEdition?alt=com.microsoft.azure.management.sql.ElasticPoolEdition&text=ElasticPoolEdition" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>Next stage of the SQL Server update </p>
    type: <xref href="com.microsoft.azure.management.sql.SqlServer.Update?alt=com.microsoft.azure.management.sql.SqlServer.Update&text=SqlServer.Update" data-throw-if-not-resolved="False"/>
  summary: <p>Create new elastic pool in the SQL Server. </p>
  syntax: public Update withNewElasticPool(String elasticPoolName, ElasticPoolEdition elasticPoolEdition)
  uid: com.microsoft.azure.management.sql.SqlServer.UpdateStages.WithElasticPool.withNewElasticPool(String,ElasticPoolEdition)
- fullName: com.microsoft.azure.management.sql.SqlServer.UpdateStages.WithElasticPool.withNewElasticPool(String elasticPoolName, ElasticPoolEdition elasticPoolEdition, String... databaseNames)
  name: withNewElasticPool(String elasticPoolName, ElasticPoolEdition elasticPoolEdition, String... databaseNames)
  nameWithType: SqlServer.UpdateStages.WithElasticPool.withNewElasticPool(String elasticPoolName, ElasticPoolEdition elasticPoolEdition, String... databaseNames)
  parameters:
  - description: <p>name of the elastic pool to be created </p>
    name: elasticPoolName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>edition of the elastic pool </p>
    name: elasticPoolEdition
    type: <xref href="com.microsoft.azure.management.sql.ElasticPoolEdition?alt=com.microsoft.azure.management.sql.ElasticPoolEdition&text=ElasticPoolEdition" data-throw-if-not-resolved="False"/>
  - description: <p>names of the database to be included in the elastic pool </p>
    name: databaseNames
    type: <xref href="String...?alt=String...&text=String..." data-throw-if-not-resolved="False"/>
  returns:
    description: <p>Next stage of the SQL Server update </p>
    type: <xref href="com.microsoft.azure.management.sql.SqlServer.Update?alt=com.microsoft.azure.management.sql.SqlServer.Update&text=SqlServer.Update" data-throw-if-not-resolved="False"/>
  summary: <p>Create new elastic pool in the SQL Server. </p>
  syntax: public Update withNewElasticPool(String elasticPoolName, ElasticPoolEdition elasticPoolEdition, String... databaseNames)
  uid: com.microsoft.azure.management.sql.SqlServer.UpdateStages.WithElasticPool.withNewElasticPool(String,ElasticPoolEdition,String...)
- fullName: com.microsoft.azure.management.sql.SqlServer.UpdateStages.WithElasticPool.withNewElasticPool(String elasticPoolName, ElasticPoolEditions elasticPoolEdition)
  name: withNewElasticPool(String elasticPoolName, ElasticPoolEditions elasticPoolEdition)
  nameWithType: SqlServer.UpdateStages.WithElasticPool.withNewElasticPool(String elasticPoolName, ElasticPoolEditions elasticPoolEdition)
  parameters:
  - description: <p>name of the elastic pool to be created </p>
    name: elasticPoolName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>edition of the elastic pool </p>
    name: elasticPoolEdition
    type: <xref href="com.microsoft.azure.management.sql.ElasticPoolEditions?alt=com.microsoft.azure.management.sql.ElasticPoolEditions&text=ElasticPoolEditions" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>Next stage of the SQL Server update </p>
    type: <xref href="com.microsoft.azure.management.sql.SqlServer.Update?alt=com.microsoft.azure.management.sql.SqlServer.Update&text=SqlServer.Update" data-throw-if-not-resolved="False"/>
  summary: <p>Create new elastic pool in the SQL Server. </p>
  syntax: public Update withNewElasticPool(String elasticPoolName, ElasticPoolEditions elasticPoolEdition)
  uid: com.microsoft.azure.management.sql.SqlServer.UpdateStages.WithElasticPool.withNewElasticPool(String,ElasticPoolEditions)
- fullName: com.microsoft.azure.management.sql.SqlServer.UpdateStages.WithElasticPool.withNewElasticPool(String elasticPoolName, ElasticPoolEditions elasticPoolEdition, String... databaseNames)
  name: withNewElasticPool(String elasticPoolName, ElasticPoolEditions elasticPoolEdition, String... databaseNames)
  nameWithType: SqlServer.UpdateStages.WithElasticPool.withNewElasticPool(String elasticPoolName, ElasticPoolEditions elasticPoolEdition, String... databaseNames)
  parameters:
  - description: <p>name of the elastic pool to be created </p>
    name: elasticPoolName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>edition of the elastic pool </p>
    name: elasticPoolEdition
    type: <xref href="com.microsoft.azure.management.sql.ElasticPoolEditions?alt=com.microsoft.azure.management.sql.ElasticPoolEditions&text=ElasticPoolEditions" data-throw-if-not-resolved="False"/>
  - description: <p>names of the database to be included in the elastic pool </p>
    name: databaseNames
    type: <xref href="String...?alt=String...&text=String..." data-throw-if-not-resolved="False"/>
  returns:
    description: <p>Next stage of the SQL Server update </p>
    type: <xref href="com.microsoft.azure.management.sql.SqlServer.Update?alt=com.microsoft.azure.management.sql.SqlServer.Update&text=SqlServer.Update" data-throw-if-not-resolved="False"/>
  summary: <p>Create new elastic pool in the SQL Server. </p>
  syntax: public Update withNewElasticPool(String elasticPoolName, ElasticPoolEditions elasticPoolEdition, String... databaseNames)
  uid: com.microsoft.azure.management.sql.SqlServer.UpdateStages.WithElasticPool.withNewElasticPool(String,ElasticPoolEditions,String...)
uid: com.microsoft.azure.management.sql.SqlServer.UpdateStages.WithElasticPool.withNewElasticPool*
fullName: com.microsoft.azure.management.sql.SqlServer.UpdateStages.WithElasticPool.withNewElasticPool(String elasticPoolName, ElasticPoolEdition elasticPoolEdition)
name: withNewElasticPool(String elasticPoolName, ElasticPoolEdition elasticPoolEdition)
package: com.microsoft.azure.management.sql
metadata: {}
