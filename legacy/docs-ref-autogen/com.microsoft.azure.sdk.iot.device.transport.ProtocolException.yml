### YamlMime:JavaType
constructors:
- fullName: com.microsoft.azure.sdk.iot.device.transport.ProtocolException.ProtocolException()
  name: ProtocolException()
  nameWithType: ProtocolException.ProtocolException()
  syntax: public ProtocolException()
  uid: com.microsoft.azure.sdk.iot.device.transport.ProtocolException.ProtocolException()
- fullName: com.microsoft.azure.sdk.iot.device.transport.ProtocolException.ProtocolException(String message)
  name: ProtocolException(String message)
  nameWithType: ProtocolException.ProtocolException(String message)
  parameters:
  - name: message
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  syntax: public ProtocolException(String message)
  uid: com.microsoft.azure.sdk.iot.device.transport.ProtocolException.ProtocolException(String)
- fullName: com.microsoft.azure.sdk.iot.device.transport.ProtocolException.ProtocolException(String message, Throwable cause)
  name: ProtocolException(String message, Throwable cause)
  nameWithType: ProtocolException.ProtocolException(String message, Throwable cause)
  parameters:
  - name: message
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - name: cause
    type: <xref href="Throwable?alt=Throwable&text=Throwable" data-throw-if-not-resolved="False"/>
  syntax: public ProtocolException(String message, Throwable cause)
  uid: com.microsoft.azure.sdk.iot.device.transport.ProtocolException.ProtocolException(String,Throwable)
- fullName: com.microsoft.azure.sdk.iot.device.transport.ProtocolException.ProtocolException(Throwable cause)
  name: ProtocolException(Throwable cause)
  nameWithType: ProtocolException.ProtocolException(Throwable cause)
  parameters:
  - name: cause
    type: <xref href="Throwable?alt=Throwable&text=Throwable" data-throw-if-not-resolved="False"/>
  syntax: public ProtocolException(Throwable cause)
  uid: com.microsoft.azure.sdk.iot.device.transport.ProtocolException.ProtocolException(Throwable)
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
- <xref href="Exception" data-throw-if-not-resolved="False"/>
- <xref href="com.microsoft.azure.sdk.iot.device.transport.TransportException?alt=com.microsoft.azure.sdk.iot.device.transport.TransportException&text=TransportException" data-throw-if-not-resolved="False"/>
inheritedMembers:
- com.microsoft.azure.sdk.iot.device.transport.TransportException.isRetryable
- com.microsoft.azure.sdk.iot.device.transport.TransportException.isRetryable()
- com.microsoft.azure.sdk.iot.device.transport.TransportException.setRetryable(boolean)
- com.microsoft.azure.sdk.iot.device.transport.TransportException.toIotHubClientException()
- com.microsoft.azure.sdk.iot.device.transport.TransportException.TransportException()
- com.microsoft.azure.sdk.iot.device.transport.TransportException.TransportException(String)
- com.microsoft.azure.sdk.iot.device.transport.TransportException.TransportException(String,Throwable)
- com.microsoft.azure.sdk.iot.device.transport.TransportException.TransportException(Throwable)
nameWithType: ProtocolException
syntax: public class ProtocolException extends TransportException
type: class
uid: com.microsoft.azure.sdk.iot.device.transport.ProtocolException
fullName: com.microsoft.azure.sdk.iot.device.transport.ProtocolException
name: ProtocolException
package: com.microsoft.azure.sdk.iot.device.transport
summary: <p>Exception class that covers all exceptions that occur within transport protocol communication. For example, if a amqp:connection:forced exception is given by AMQP. </p>
metadata: {}
