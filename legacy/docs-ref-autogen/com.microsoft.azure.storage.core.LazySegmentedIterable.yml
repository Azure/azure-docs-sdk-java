### YamlMime:JavaType
constructors:
- fullName: com.microsoft.azure.storage.core.LazySegmentedIterable<CLIENT_TYPE, PARENT_TYPE, ENTITY_TYPE>.LazySegmentedIterable(final StorageRequest<CLIENT_TYPE, PARENT_TYPE, ResultSegment<ENTITY_TYPE>> segmentGenerator, final CLIENT_TYPE client, final PARENT_TYPE parent, final RetryPolicyFactory policyFactory, final OperationContext opContext)
  name: LazySegmentedIterable(final StorageRequest<CLIENT_TYPE, PARENT_TYPE, ResultSegment<ENTITY_TYPE>> segmentGenerator, final CLIENT_TYPE client, final PARENT_TYPE parent, final RetryPolicyFactory policyFactory, final OperationContext opContext)
  nameWithType: LazySegmentedIterable<CLIENT_TYPE,PARENT_TYPE,ENTITY_TYPE>.LazySegmentedIterable(final StorageRequest<CLIENT_TYPE, PARENT_TYPE, ResultSegment<ENTITY_TYPE>> segmentGenerator, final CLIENT_TYPE client, final PARENT_TYPE parent, final RetryPolicyFactory policyFactory, final OperationContext opContext)
  parameters:
  - name: segmentGenerator
    type: final <xref href="com.microsoft.azure.storage.core.StorageRequest?alt=com.microsoft.azure.storage.core.StorageRequest&text=StorageRequest" data-throw-if-not-resolved="False"/>&lt;CLIENT_TYPE, PARENT_TYPE, <xref href="com.microsoft.azure.storage.ResultSegment?alt=com.microsoft.azure.storage.ResultSegment&text=ResultSegment" data-throw-if-not-resolved="False"/>&lt;ENTITY_TYPE&gt;&gt;
  - name: client
    type: <xref href="final+CLIENT_TYPE?alt=final+CLIENT_TYPE&text=final+CLIENT_TYPE" data-throw-if-not-resolved="False"/>
  - name: parent
    type: <xref href="final+PARENT_TYPE?alt=final+PARENT_TYPE&text=final+PARENT_TYPE" data-throw-if-not-resolved="False"/>
  - name: policyFactory
    type: final <xref href="com.microsoft.azure.storage.RetryPolicyFactory?alt=com.microsoft.azure.storage.RetryPolicyFactory&text=RetryPolicyFactory" data-throw-if-not-resolved="False"/>
  - name: opContext
    type: final <xref href="com.microsoft.azure.storage.OperationContext?alt=com.microsoft.azure.storage.OperationContext&text=OperationContext" data-throw-if-not-resolved="False"/>
  syntax: public LazySegmentedIterable(final StorageRequest<CLIENT_TYPE, PARENT_TYPE, ResultSegment<ENTITY_TYPE>> segmentGenerator, final CLIENT_TYPE client, final PARENT_TYPE parent, final RetryPolicyFactory policyFactory, final OperationContext opContext)
  uid: com.microsoft.azure.storage.core.LazySegmentedIterable.LazySegmentedIterable(final StorageRequest<CLIENT_TYPE, PARENT_TYPE, ResultSegment<ENTITY_TYPE>>,final CLIENT_TYPE,final PARENT_TYPE,final RetryPolicyFactory,final OperationContext)
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
- <xref href="Iterable&lt;ENTITY_TYPE&gt;" data-throw-if-not-resolved="False"/>
methods:
- fullName: com.microsoft.azure.storage.core.LazySegmentedIterable<CLIENT_TYPE, PARENT_TYPE, ENTITY_TYPE>.iterator()
  name: iterator()
  nameWithType: LazySegmentedIterable<CLIENT_TYPE,PARENT_TYPE,ENTITY_TYPE>.iterator()
  returns:
    type: <xref href="Iterator%3CENTITY_TYPE%3E?alt=Iterator%3CENTITY_TYPE%3E&text=Iterator%3CENTITY_TYPE%3E" data-throw-if-not-resolved="False"/>
  syntax: public Iterator<ENTITY_TYPE> iterator()
  uid: com.microsoft.azure.storage.core.LazySegmentedIterable.iterator()
nameWithType: LazySegmentedIterable<CLIENT_TYPE,PARENT_TYPE,ENTITY_TYPE>
syntax: public class LazySegmentedIterable<CLIENT_TYPE,PARENT_TYPE,ENTITY_TYPE>
type: class
typeParameters:
- description: <p>The service client type </p>
  name: CLIENT_TYPE
- description: <p>The type of the parent object, i.e. CloudBlobClient for ListContainers etc. </p>
  name: PARENT_TYPE
- description: <p>The type of the objects the resulting iterable objects </p>
  name: ENTITY_TYPE
uid: com.microsoft.azure.storage.core.LazySegmentedIterable
fullName: com.microsoft.azure.storage.core.LazySegmentedIterable<CLIENT_TYPE,PARENT_TYPE,ENTITY_TYPE>
name: LazySegmentedIterable<CLIENT_TYPE,PARENT_TYPE,ENTITY_TYPE>
package: com.microsoft.azure.storage.core
summary: >-
  <p>RESERVED FOR INTERNAL USE. Provides a lazy iterator which will retrieve the next segment of a result as the iterator is consumed</p>

  <p></p>
metadata: {}
