### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.sdk.iot.provisioning.security.SecurityProviderSymmetricKey
  id: SecurityProviderSymmetricKey
  parent: com.microsoft.azure.sdk.iot.provisioning.security
  children:
  - com.microsoft.azure.sdk.iot.provisioning.security.SecurityProviderSymmetricKey.getRegistrationId()
  - com.microsoft.azure.sdk.iot.provisioning.security.SecurityProviderSymmetricKey.getSSLContext()
  - com.microsoft.azure.sdk.iot.provisioning.security.SecurityProviderSymmetricKey.getSymmetricKey()
  - com.microsoft.azure.sdk.iot.provisioning.security.SecurityProviderSymmetricKey.HMACSignData(byte [],byte [])
  - com.microsoft.azure.sdk.iot.provisioning.security.SecurityProviderSymmetricKey.SecurityProviderSymmetricKey(byte [],String)
  - com.microsoft.azure.sdk.iot.provisioning.security.SecurityProviderSymmetricKey.SecurityProviderSymmetricKey(String,String,String)
  href: com.microsoft.azure.sdk.iot.provisioning.security.SecurityProviderSymmetricKey.yml
  langs:
  - java
  name: SecurityProviderSymmetricKey
  nameWithType: SecurityProviderSymmetricKey
  fullName: com.microsoft.azure.sdk.iot.provisioning.security.SecurityProviderSymmetricKey
  type: Class
  source:
    remote: &o0
      path: provisioning/security/security-provider/src/main/java/com/microsoft/azure/sdk/iot/provisioning/security/SecurityProviderSymmetricKey.java
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-java
    path: provisioning/security/security-provider/src/main/java/com/microsoft/azure/sdk/iot/provisioning/security/SecurityProviderSymmetricKey.java
    startLine: 19
  package: com.microsoft.azure.sdk.iot.provisioning.security
  syntax:
    content: public class SecurityProviderSymmetricKey extends SecurityProvider
  inheritance:
  - java.lang.Object
  - com.microsoft.azure.sdk.iot.provisioning.security.SecurityProvider
- uid: com.microsoft.azure.sdk.iot.provisioning.security.SecurityProviderSymmetricKey.getRegistrationId()
  id: getRegistrationId()
  parent: com.microsoft.azure.sdk.iot.provisioning.security.SecurityProviderSymmetricKey
  href: com.microsoft.azure.sdk.iot.provisioning.security.SecurityProviderSymmetricKey.yml
  langs:
  - java
  name: getRegistrationId()
  nameWithType: SecurityProviderSymmetricKey.getRegistrationId()
  fullName: com.microsoft.azure.sdk.iot.provisioning.security.SecurityProviderSymmetricKey.getRegistrationId()
  overload: com.microsoft.azure.sdk.iot.provisioning.security.SecurityProviderSymmetricKey.getRegistrationId*
  type: Method
  source:
    remote: *o0
    path: provisioning/security/security-provider/src/main/java/com/microsoft/azure/sdk/iot/provisioning/security/SecurityProviderSymmetricKey.java
    startLine: 86
  package: com.microsoft.azure.sdk.iot.provisioning.security
  summary: "<p>Unique id required for registration</p>\r\n<p></p>"
  syntax:
    content: public String getRegistrationId()
    return:
      type: "26831127"
      description: <p>Returns the registration Id used needed for the service </p>
  exceptions:
  - type: f44c259f
    description: <p>If registration id with the underlying implementation could not be retrieved </p>
- uid: com.microsoft.azure.sdk.iot.provisioning.security.SecurityProviderSymmetricKey.getSSLContext()
  id: getSSLContext()
  parent: com.microsoft.azure.sdk.iot.provisioning.security.SecurityProviderSymmetricKey
  href: com.microsoft.azure.sdk.iot.provisioning.security.SecurityProviderSymmetricKey.yml
  langs:
  - java
  name: getSSLContext()
  nameWithType: SecurityProviderSymmetricKey.getSSLContext()
  fullName: com.microsoft.azure.sdk.iot.provisioning.security.SecurityProviderSymmetricKey.getSSLContext()
  overload: com.microsoft.azure.sdk.iot.provisioning.security.SecurityProviderSymmetricKey.getSSLContext*
  type: Method
  source:
    remote: *o0
    path: provisioning/security/security-provider/src/main/java/com/microsoft/azure/sdk/iot/provisioning/security/SecurityProviderSymmetricKey.java
    startLine: 103
  package: com.microsoft.azure.sdk.iot.provisioning.security
  summary: "<p>Retrieves the SSL context loaded with trusted certs. In case of X509 SSL context shall be loaded with complete chain all the way till the leaf along with its private key.</p>\r\n<p></p>"
  syntax:
    content: public SSLContext getSSLContext()
    return:
      type: 13e89c07
      description: <p>The SSLContext relevant to the flow </p>
  exceptions:
  - type: f44c259f
    description: <p>If ssl context could not be generated for any of the reason </p>
- uid: com.microsoft.azure.sdk.iot.provisioning.security.SecurityProviderSymmetricKey.getSymmetricKey()
  id: getSymmetricKey()
  parent: com.microsoft.azure.sdk.iot.provisioning.security.SecurityProviderSymmetricKey
  href: com.microsoft.azure.sdk.iot.provisioning.security.SecurityProviderSymmetricKey.yml
  langs:
  - java
  name: getSymmetricKey()
  nameWithType: SecurityProviderSymmetricKey.getSymmetricKey()
  fullName: com.microsoft.azure.sdk.iot.provisioning.security.SecurityProviderSymmetricKey.getSymmetricKey()
  overload: com.microsoft.azure.sdk.iot.provisioning.security.SecurityProviderSymmetricKey.getSymmetricKey*
  type: Method
  source:
    remote: *o0
    path: provisioning/security/security-provider/src/main/java/com/microsoft/azure/sdk/iot/provisioning/security/SecurityProviderSymmetricKey.java
    startLine: 74
  package: com.microsoft.azure.sdk.iot.provisioning.security
  summary: "<p>Getter for Symmetric key </p>"
  syntax:
    content: public byte [] getSymmetricKey()
    return:
      type: ccd9418d
      description: <p>Returns Symmetric Key byte array </p>
- uid: com.microsoft.azure.sdk.iot.provisioning.security.SecurityProviderSymmetricKey.HMACSignData(byte [],byte [])
  id: HMACSignData(byte [],byte [])
  parent: com.microsoft.azure.sdk.iot.provisioning.security.SecurityProviderSymmetricKey
  href: com.microsoft.azure.sdk.iot.provisioning.security.SecurityProviderSymmetricKey.yml
  langs:
  - java
  name: HMACSignData(byte[] signature, byte[] base64DecodedKey)
  nameWithType: SecurityProviderSymmetricKey.HMACSignData(byte[] signature, byte[] base64DecodedKey)
  fullName: com.microsoft.azure.sdk.iot.provisioning.security.SecurityProviderSymmetricKey.HMACSignData(byte[] signature, byte[] base64DecodedKey)
  overload: com.microsoft.azure.sdk.iot.provisioning.security.SecurityProviderSymmetricKey.HMACSignData*
  type: Method
  source:
    remote: *o0
    path: provisioning/security/security-provider/src/main/java/com/microsoft/azure/sdk/iot/provisioning/security/SecurityProviderSymmetricKey.java
    startLine: 139
  package: com.microsoft.azure.sdk.iot.provisioning.security
  summary: "<p>Signs data using the provided base 64 decoded key using HMAC SHA 256 </p>"
  syntax:
    content: public byte [] HMACSignData(byte[] signature, byte[] base64DecodedKey)
    parameters:
    - id: signature
      type: ccd9418d
      description: <p>Data to be signed </p>
    - id: base64DecodedKey
      type: ccd9418d
      description: <p>Key used for signing </p>
    return:
      type: ccd9418d
      description: <p>Returns signed data </p>
  exceptions:
  - type: f44c259f
    description: <p>If signing was not successful </p>
- uid: com.microsoft.azure.sdk.iot.provisioning.security.SecurityProviderSymmetricKey.SecurityProviderSymmetricKey(byte [],String)
  id: SecurityProviderSymmetricKey(byte [],String)
  parent: com.microsoft.azure.sdk.iot.provisioning.security.SecurityProviderSymmetricKey
  href: com.microsoft.azure.sdk.iot.provisioning.security.SecurityProviderSymmetricKey.yml
  langs:
  - java
  name: SecurityProviderSymmetricKey(byte[] symmetricKey, String registrationId)
  nameWithType: SecurityProviderSymmetricKey.SecurityProviderSymmetricKey(byte[] symmetricKey, String registrationId)
  fullName: com.microsoft.azure.sdk.iot.provisioning.security.SecurityProviderSymmetricKey.SecurityProviderSymmetricKey(byte[] symmetricKey, String registrationId)
  overload: com.microsoft.azure.sdk.iot.provisioning.security.SecurityProviderSymmetricKey.SecurityProviderSymmetricKey*
  type: Constructor
  source:
    remote: *o0
    path: provisioning/security/security-provider/src/main/java/com/microsoft/azure/sdk/iot/provisioning/security/SecurityProviderSymmetricKey.java
    startLine: 31
  package: com.microsoft.azure.sdk.iot.provisioning.security
  summary: "<p>Constructor for Symmetric key security provider </p>"
  syntax:
    content: public SecurityProviderSymmetricKey(byte[] symmetricKey, String registrationId)
    parameters:
    - id: symmetricKey
      type: ccd9418d
      description: <p>Symmetric key to be used </p>
    - id: registrationId
      type: "26831127"
      description: <p>Registration ID to be used </p>
- uid: com.microsoft.azure.sdk.iot.provisioning.security.SecurityProviderSymmetricKey.SecurityProviderSymmetricKey(String,String,String)
  id: SecurityProviderSymmetricKey(String,String,String)
  parent: com.microsoft.azure.sdk.iot.provisioning.security.SecurityProviderSymmetricKey
  href: com.microsoft.azure.sdk.iot.provisioning.security.SecurityProviderSymmetricKey.yml
  langs:
  - java
  name: SecurityProviderSymmetricKey(String primaryKey, String secondaryKey, String registrationId)
  nameWithType: SecurityProviderSymmetricKey.SecurityProviderSymmetricKey(String primaryKey, String secondaryKey, String registrationId)
  fullName: com.microsoft.azure.sdk.iot.provisioning.security.SecurityProviderSymmetricKey.SecurityProviderSymmetricKey(String primaryKey, String secondaryKey, String registrationId)
  overload: com.microsoft.azure.sdk.iot.provisioning.security.SecurityProviderSymmetricKey.SecurityProviderSymmetricKey*
  type: Constructor
  source:
    remote: *o0
    path: provisioning/security/security-provider/src/main/java/com/microsoft/azure/sdk/iot/provisioning/security/SecurityProviderSymmetricKey.java
    startLine: 53
  package: com.microsoft.azure.sdk.iot.provisioning.security
  summary: "<p>Constructor for Symmetric key security provider that takes both keys </p>"
  syntax:
    content: public SecurityProviderSymmetricKey(String primaryKey, String secondaryKey, String registrationId)
    parameters:
    - id: primaryKey
      type: "26831127"
      description: <p>Primary key to be used </p>
    - id: secondaryKey
      type: "26831127"
      description: <p>Secondary key to be used </p>
    - id: registrationId
      type: "26831127"
      description: <p>Registration ID to be used </p>
references:
- uid: ccd9418d
  spec.java:
  - name: byte []
    fullName: byte []
- uid: "26831127"
  spec.java:
  - name: String
    fullName: String
- uid: com.microsoft.azure.sdk.iot.provisioning.security.SecurityProviderSymmetricKey.SecurityProviderSymmetricKey*
  name: SecurityProviderSymmetricKey
  nameWithType: SecurityProviderSymmetricKey.SecurityProviderSymmetricKey
  fullName: com.microsoft.azure.sdk.iot.provisioning.security.SecurityProviderSymmetricKey.SecurityProviderSymmetricKey
  package: com.microsoft.azure.sdk.iot.provisioning.security
- uid: com.microsoft.azure.sdk.iot.provisioning.security.SecurityProviderSymmetricKey.getSymmetricKey*
  name: getSymmetricKey
  nameWithType: SecurityProviderSymmetricKey.getSymmetricKey
  fullName: com.microsoft.azure.sdk.iot.provisioning.security.SecurityProviderSymmetricKey.getSymmetricKey
  package: com.microsoft.azure.sdk.iot.provisioning.security
- uid: f44c259f
  spec.java:
  - name: SecurityProviderException
    fullName: SecurityProviderException
- uid: com.microsoft.azure.sdk.iot.provisioning.security.SecurityProviderSymmetricKey.getRegistrationId*
  name: getRegistrationId
  nameWithType: SecurityProviderSymmetricKey.getRegistrationId
  fullName: com.microsoft.azure.sdk.iot.provisioning.security.SecurityProviderSymmetricKey.getRegistrationId
  package: com.microsoft.azure.sdk.iot.provisioning.security
- uid: 13e89c07
  spec.java:
  - name: SSLContext
    fullName: SSLContext
- uid: com.microsoft.azure.sdk.iot.provisioning.security.SecurityProviderSymmetricKey.getSSLContext*
  name: getSSLContext
  nameWithType: SecurityProviderSymmetricKey.getSSLContext
  fullName: com.microsoft.azure.sdk.iot.provisioning.security.SecurityProviderSymmetricKey.getSSLContext
  package: com.microsoft.azure.sdk.iot.provisioning.security
- uid: com.microsoft.azure.sdk.iot.provisioning.security.SecurityProviderSymmetricKey.HMACSignData*
  name: HMACSignData
  nameWithType: SecurityProviderSymmetricKey.HMACSignData
  fullName: com.microsoft.azure.sdk.iot.provisioning.security.SecurityProviderSymmetricKey.HMACSignData
  package: com.microsoft.azure.sdk.iot.provisioning.security
- uid: com.microsoft.azure.sdk.iot.provisioning.security.SecurityProvider
  parent: com.microsoft.azure.sdk.iot.provisioning.security
  href: com.microsoft.azure.sdk.iot.provisioning.security.SecurityProvider.yml
  name: SecurityProvider
  nameWithType: SecurityProvider
  fullName: com.microsoft.azure.sdk.iot.provisioning.security.SecurityProvider
  type: Class
  syntax:
    content: public class SecurityProvider
- uid: com.microsoft.azure.sdk.iot.provisioning.security.exceptions.SecurityProviderException
  parent: com.microsoft.azure.sdk.iot.provisioning.security.exceptions
  href: com.microsoft.azure.sdk.iot.provisioning.security.exceptions.SecurityProviderException.yml
  name: SecurityProviderException
  nameWithType: SecurityProviderException
  fullName: com.microsoft.azure.sdk.iot.provisioning.security.exceptions.SecurityProviderException
  type: Class
  syntax:
    content: public class SecurityProviderException
