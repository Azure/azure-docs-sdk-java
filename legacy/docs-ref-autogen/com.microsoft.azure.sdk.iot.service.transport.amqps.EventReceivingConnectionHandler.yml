### YamlMime:JavaType
constructors:
- fullName: com.microsoft.azure.sdk.iot.service.transport.amqps.EventReceivingConnectionHandler.EventReceivingConnectionHandler(String hostName, AzureSasCredential azureSasCredential, IotHubServiceClientProtocol protocol, Function<FileUploadNotification, AcknowledgementType> fileUploadNotificationReceivedCallback, Function<FeedbackBatch, AcknowledgementType> messageFeedbackReceivedCallback, Consumer<ErrorContext> errorProcessor, ProxyOptions proxyOptions, SSLContext sslContext, int keepAliveIntervalSeconds)
  name: EventReceivingConnectionHandler(String hostName, AzureSasCredential azureSasCredential, IotHubServiceClientProtocol protocol, Function<FileUploadNotification, AcknowledgementType> fileUploadNotificationReceivedCallback, Function<FeedbackBatch, AcknowledgementType> messageFeedbackReceivedCallback, Consumer<ErrorContext> errorProcessor, ProxyOptions proxyOptions, SSLContext sslContext, int keepAliveIntervalSeconds)
  nameWithType: EventReceivingConnectionHandler.EventReceivingConnectionHandler(String hostName, AzureSasCredential azureSasCredential, IotHubServiceClientProtocol protocol, Function<FileUploadNotification, AcknowledgementType> fileUploadNotificationReceivedCallback, Function<FeedbackBatch, AcknowledgementType> messageFeedbackReceivedCallback, Consumer<ErrorContext> errorProcessor, ProxyOptions proxyOptions, SSLContext sslContext, int keepAliveIntervalSeconds)
  parameters:
  - name: hostName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - name: azureSasCredential
    type: <xref href="AzureSasCredential?alt=AzureSasCredential&text=AzureSasCredential" data-throw-if-not-resolved="False"/>
  - name: protocol
    type: <xref href="com.microsoft.azure.sdk.iot.service.messaging.IotHubServiceClientProtocol?alt=com.microsoft.azure.sdk.iot.service.messaging.IotHubServiceClientProtocol&text=IotHubServiceClientProtocol" data-throw-if-not-resolved="False"/>
  - name: fileUploadNotificationReceivedCallback
    type: Function&lt;<xref href="com.microsoft.azure.sdk.iot.service.messaging.FileUploadNotification?alt=com.microsoft.azure.sdk.iot.service.messaging.FileUploadNotification&text=FileUploadNotification" data-throw-if-not-resolved="False"/>, <xref href="com.microsoft.azure.sdk.iot.service.messaging.AcknowledgementType?alt=com.microsoft.azure.sdk.iot.service.messaging.AcknowledgementType&text=AcknowledgementType" data-throw-if-not-resolved="False"/>&gt;
  - name: messageFeedbackReceivedCallback
    type: Function&lt;<xref href="com.microsoft.azure.sdk.iot.service.messaging.FeedbackBatch?alt=com.microsoft.azure.sdk.iot.service.messaging.FeedbackBatch&text=FeedbackBatch" data-throw-if-not-resolved="False"/>, <xref href="com.microsoft.azure.sdk.iot.service.messaging.AcknowledgementType?alt=com.microsoft.azure.sdk.iot.service.messaging.AcknowledgementType&text=AcknowledgementType" data-throw-if-not-resolved="False"/>&gt;
  - name: errorProcessor
    type: Consumer&lt;<xref href="com.microsoft.azure.sdk.iot.service.messaging.ErrorContext?alt=com.microsoft.azure.sdk.iot.service.messaging.ErrorContext&text=ErrorContext" data-throw-if-not-resolved="False"/>&gt;
  - name: proxyOptions
    type: <xref href="com.microsoft.azure.sdk.iot.service.ProxyOptions?alt=com.microsoft.azure.sdk.iot.service.ProxyOptions&text=ProxyOptions" data-throw-if-not-resolved="False"/>
  - name: sslContext
    type: <xref href="SSLContext?alt=SSLContext&text=SSLContext" data-throw-if-not-resolved="False"/>
  - name: keepAliveIntervalSeconds
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  syntax: public EventReceivingConnectionHandler(String hostName, AzureSasCredential azureSasCredential, IotHubServiceClientProtocol protocol, Function<FileUploadNotification, AcknowledgementType> fileUploadNotificationReceivedCallback, Function<FeedbackBatch, AcknowledgementType> messageFeedbackReceivedCallback, Consumer<ErrorContext> errorProcessor, ProxyOptions proxyOptions, SSLContext sslContext, int keepAliveIntervalSeconds)
  uid: com.microsoft.azure.sdk.iot.service.transport.amqps.EventReceivingConnectionHandler.EventReceivingConnectionHandler(String,AzureSasCredential,IotHubServiceClientProtocol,Function<FileUploadNotification, AcknowledgementType>,Function<FeedbackBatch, AcknowledgementType>,Consumer<ErrorContext>,ProxyOptions,SSLContext,int)
- fullName: com.microsoft.azure.sdk.iot.service.transport.amqps.EventReceivingConnectionHandler.EventReceivingConnectionHandler(String connectionString, IotHubServiceClientProtocol protocol, Function<FileUploadNotification, AcknowledgementType> fileUploadNotificationReceivedCallback, Function<FeedbackBatch, AcknowledgementType> messageFeedbackReceivedCallback, Consumer<ErrorContext> errorProcessor, ProxyOptions proxyOptions, SSLContext sslContext, int keepAliveIntervalSeconds)
  name: EventReceivingConnectionHandler(String connectionString, IotHubServiceClientProtocol protocol, Function<FileUploadNotification, AcknowledgementType> fileUploadNotificationReceivedCallback, Function<FeedbackBatch, AcknowledgementType> messageFeedbackReceivedCallback, Consumer<ErrorContext> errorProcessor, ProxyOptions proxyOptions, SSLContext sslContext, int keepAliveIntervalSeconds)
  nameWithType: EventReceivingConnectionHandler.EventReceivingConnectionHandler(String connectionString, IotHubServiceClientProtocol protocol, Function<FileUploadNotification, AcknowledgementType> fileUploadNotificationReceivedCallback, Function<FeedbackBatch, AcknowledgementType> messageFeedbackReceivedCallback, Consumer<ErrorContext> errorProcessor, ProxyOptions proxyOptions, SSLContext sslContext, int keepAliveIntervalSeconds)
  parameters:
  - name: connectionString
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - name: protocol
    type: <xref href="com.microsoft.azure.sdk.iot.service.messaging.IotHubServiceClientProtocol?alt=com.microsoft.azure.sdk.iot.service.messaging.IotHubServiceClientProtocol&text=IotHubServiceClientProtocol" data-throw-if-not-resolved="False"/>
  - name: fileUploadNotificationReceivedCallback
    type: Function&lt;<xref href="com.microsoft.azure.sdk.iot.service.messaging.FileUploadNotification?alt=com.microsoft.azure.sdk.iot.service.messaging.FileUploadNotification&text=FileUploadNotification" data-throw-if-not-resolved="False"/>, <xref href="com.microsoft.azure.sdk.iot.service.messaging.AcknowledgementType?alt=com.microsoft.azure.sdk.iot.service.messaging.AcknowledgementType&text=AcknowledgementType" data-throw-if-not-resolved="False"/>&gt;
  - name: messageFeedbackReceivedCallback
    type: Function&lt;<xref href="com.microsoft.azure.sdk.iot.service.messaging.FeedbackBatch?alt=com.microsoft.azure.sdk.iot.service.messaging.FeedbackBatch&text=FeedbackBatch" data-throw-if-not-resolved="False"/>, <xref href="com.microsoft.azure.sdk.iot.service.messaging.AcknowledgementType?alt=com.microsoft.azure.sdk.iot.service.messaging.AcknowledgementType&text=AcknowledgementType" data-throw-if-not-resolved="False"/>&gt;
  - name: errorProcessor
    type: Consumer&lt;<xref href="com.microsoft.azure.sdk.iot.service.messaging.ErrorContext?alt=com.microsoft.azure.sdk.iot.service.messaging.ErrorContext&text=ErrorContext" data-throw-if-not-resolved="False"/>&gt;
  - name: proxyOptions
    type: <xref href="com.microsoft.azure.sdk.iot.service.ProxyOptions?alt=com.microsoft.azure.sdk.iot.service.ProxyOptions&text=ProxyOptions" data-throw-if-not-resolved="False"/>
  - name: sslContext
    type: <xref href="SSLContext?alt=SSLContext&text=SSLContext" data-throw-if-not-resolved="False"/>
  - name: keepAliveIntervalSeconds
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  syntax: public EventReceivingConnectionHandler(String connectionString, IotHubServiceClientProtocol protocol, Function<FileUploadNotification, AcknowledgementType> fileUploadNotificationReceivedCallback, Function<FeedbackBatch, AcknowledgementType> messageFeedbackReceivedCallback, Consumer<ErrorContext> errorProcessor, ProxyOptions proxyOptions, SSLContext sslContext, int keepAliveIntervalSeconds)
  uid: com.microsoft.azure.sdk.iot.service.transport.amqps.EventReceivingConnectionHandler.EventReceivingConnectionHandler(String,IotHubServiceClientProtocol,Function<FileUploadNotification, AcknowledgementType>,Function<FeedbackBatch, AcknowledgementType>,Consumer<ErrorContext>,ProxyOptions,SSLContext,int)
- fullName: com.microsoft.azure.sdk.iot.service.transport.amqps.EventReceivingConnectionHandler.EventReceivingConnectionHandler(String hostName, TokenCredential credential, IotHubServiceClientProtocol protocol, Function<FileUploadNotification, AcknowledgementType> fileUploadNotificationReceivedCallback, Function<FeedbackBatch, AcknowledgementType> messageFeedbackReceivedCallback, Consumer<ErrorContext> errorProcessor, ProxyOptions proxyOptions, SSLContext sslContext, int keepAliveIntervalSeconds)
  name: EventReceivingConnectionHandler(String hostName, TokenCredential credential, IotHubServiceClientProtocol protocol, Function<FileUploadNotification, AcknowledgementType> fileUploadNotificationReceivedCallback, Function<FeedbackBatch, AcknowledgementType> messageFeedbackReceivedCallback, Consumer<ErrorContext> errorProcessor, ProxyOptions proxyOptions, SSLContext sslContext, int keepAliveIntervalSeconds)
  nameWithType: EventReceivingConnectionHandler.EventReceivingConnectionHandler(String hostName, TokenCredential credential, IotHubServiceClientProtocol protocol, Function<FileUploadNotification, AcknowledgementType> fileUploadNotificationReceivedCallback, Function<FeedbackBatch, AcknowledgementType> messageFeedbackReceivedCallback, Consumer<ErrorContext> errorProcessor, ProxyOptions proxyOptions, SSLContext sslContext, int keepAliveIntervalSeconds)
  parameters:
  - name: hostName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - name: credential
    type: <xref href="TokenCredential?alt=TokenCredential&text=TokenCredential" data-throw-if-not-resolved="False"/>
  - name: protocol
    type: <xref href="com.microsoft.azure.sdk.iot.service.messaging.IotHubServiceClientProtocol?alt=com.microsoft.azure.sdk.iot.service.messaging.IotHubServiceClientProtocol&text=IotHubServiceClientProtocol" data-throw-if-not-resolved="False"/>
  - name: fileUploadNotificationReceivedCallback
    type: Function&lt;<xref href="com.microsoft.azure.sdk.iot.service.messaging.FileUploadNotification?alt=com.microsoft.azure.sdk.iot.service.messaging.FileUploadNotification&text=FileUploadNotification" data-throw-if-not-resolved="False"/>, <xref href="com.microsoft.azure.sdk.iot.service.messaging.AcknowledgementType?alt=com.microsoft.azure.sdk.iot.service.messaging.AcknowledgementType&text=AcknowledgementType" data-throw-if-not-resolved="False"/>&gt;
  - name: messageFeedbackReceivedCallback
    type: Function&lt;<xref href="com.microsoft.azure.sdk.iot.service.messaging.FeedbackBatch?alt=com.microsoft.azure.sdk.iot.service.messaging.FeedbackBatch&text=FeedbackBatch" data-throw-if-not-resolved="False"/>, <xref href="com.microsoft.azure.sdk.iot.service.messaging.AcknowledgementType?alt=com.microsoft.azure.sdk.iot.service.messaging.AcknowledgementType&text=AcknowledgementType" data-throw-if-not-resolved="False"/>&gt;
  - name: errorProcessor
    type: Consumer&lt;<xref href="com.microsoft.azure.sdk.iot.service.messaging.ErrorContext?alt=com.microsoft.azure.sdk.iot.service.messaging.ErrorContext&text=ErrorContext" data-throw-if-not-resolved="False"/>&gt;
  - name: proxyOptions
    type: <xref href="com.microsoft.azure.sdk.iot.service.ProxyOptions?alt=com.microsoft.azure.sdk.iot.service.ProxyOptions&text=ProxyOptions" data-throw-if-not-resolved="False"/>
  - name: sslContext
    type: <xref href="SSLContext?alt=SSLContext&text=SSLContext" data-throw-if-not-resolved="False"/>
  - name: keepAliveIntervalSeconds
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  syntax: public EventReceivingConnectionHandler(String hostName, TokenCredential credential, IotHubServiceClientProtocol protocol, Function<FileUploadNotification, AcknowledgementType> fileUploadNotificationReceivedCallback, Function<FeedbackBatch, AcknowledgementType> messageFeedbackReceivedCallback, Consumer<ErrorContext> errorProcessor, ProxyOptions proxyOptions, SSLContext sslContext, int keepAliveIntervalSeconds)
  uid: com.microsoft.azure.sdk.iot.service.transport.amqps.EventReceivingConnectionHandler.EventReceivingConnectionHandler(String,TokenCredential,IotHubServiceClientProtocol,Function<FileUploadNotification, AcknowledgementType>,Function<FeedbackBatch, AcknowledgementType>,Consumer<ErrorContext>,ProxyOptions,SSLContext,int)
fields:
- field:
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  fullName: com.microsoft.azure.sdk.iot.service.transport.amqps.EventReceivingConnectionHandler.MESSAGE_FEEDBACK_RECEIVE_TAG
  name: MESSAGE_FEEDBACK_RECEIVE_TAG
  nameWithType: EventReceivingConnectionHandler.MESSAGE_FEEDBACK_RECEIVE_TAG
  syntax: public static final String MESSAGE_FEEDBACK_RECEIVE_TAG= "cloudToDeviceMessageFeedbackReceiver"
  uid: com.microsoft.azure.sdk.iot.service.transport.amqps.EventReceivingConnectionHandler.MESSAGE_FEEDBACK_RECEIVE_TAG
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
- <xref href="BaseHandler" data-throw-if-not-resolved="False"/>
- <xref href="com.microsoft.azure.sdk.iot.service.transport.amqps.ErrorLoggingBaseHandler" data-throw-if-not-resolved="False"/>
- <xref href="com.microsoft.azure.sdk.iot.service.transport.amqps.ErrorLoggingBaseHandlerWithCleanup" data-throw-if-not-resolved="False"/>
- <xref href="com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpConnectionHandler" data-throw-if-not-resolved="False"/>
inheritedMembers:
- com.microsoft.azure.sdk.iot.service.transport.amqps.ErrorLoggingBaseHandler.errorProcessor
- com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpConnectionHandler.getConnectionId()
- com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpConnectionHandler.hostName
- com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpConnectionHandler.isOpen()
- com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpConnectionHandler.onAuthenticationFailed(IotHubException)
- com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpConnectionHandler.onConnectionBound(Event)
- com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpConnectionHandler.onConnectionInit(Event)
- com.microsoft.azure.sdk.iot.service.transport.amqps.ErrorLoggingBaseHandlerWithCleanup.onConnectionLocalClose(Event)
- com.microsoft.azure.sdk.iot.service.transport.amqps.ErrorLoggingBaseHandlerWithCleanup.onConnectionLocalOpen(Event)
- com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpConnectionHandler.onConnectionRemoteClose(Event)
- com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpConnectionHandler.onConnectionRemoteOpen(Event)
- com.microsoft.azure.sdk.iot.service.transport.amqps.ErrorLoggingBaseHandlerWithCleanup.onLinkLocalClose(Event)
- com.microsoft.azure.sdk.iot.service.transport.amqps.ErrorLoggingBaseHandlerWithCleanup.onLinkLocalOpen(Event)
- com.microsoft.azure.sdk.iot.service.transport.amqps.ErrorLoggingBaseHandlerWithCleanup.onLinkRemoteClose(Event)
- com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpConnectionHandler.onLinkRemoteOpen(Event)
- com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpConnectionHandler.onReactorInit(Event)
- com.microsoft.azure.sdk.iot.service.transport.amqps.ErrorLoggingBaseHandlerWithCleanup.onSessionLocalClose(Event)
- com.microsoft.azure.sdk.iot.service.transport.amqps.ErrorLoggingBaseHandlerWithCleanup.onSessionLocalOpen(Event)
- com.microsoft.azure.sdk.iot.service.transport.amqps.ErrorLoggingBaseHandlerWithCleanup.onSessionRemoteClose(Event)
- com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpConnectionHandler.onSessionRemoteOpen(Event)
- com.microsoft.azure.sdk.iot.service.transport.amqps.ErrorLoggingBaseHandlerWithCleanup.onTransportError(Event)
- com.microsoft.azure.sdk.iot.service.transport.amqps.ErrorLoggingBaseHandler.protonJExceptionParser
- com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpConnectionHandler.verifyConnectionWasOpened()
methods:
- fullName: com.microsoft.azure.sdk.iot.service.transport.amqps.EventReceivingConnectionHandler.closeAsync(Runnable onConnectionClosedCallback)
  name: closeAsync(Runnable onConnectionClosedCallback)
  nameWithType: EventReceivingConnectionHandler.closeAsync(Runnable onConnectionClosedCallback)
  parameters:
  - name: onConnectionClosedCallback
    type: <xref href="Runnable?alt=Runnable&text=Runnable" data-throw-if-not-resolved="False"/>
  syntax: public void closeAsync(Runnable onConnectionClosedCallback)
  uid: com.microsoft.azure.sdk.iot.service.transport.amqps.EventReceivingConnectionHandler.closeAsync(Runnable)
- fullName: com.microsoft.azure.sdk.iot.service.transport.amqps.EventReceivingConnectionHandler.onAuthenticationSucceeded()
  name: onAuthenticationSucceeded()
  nameWithType: EventReceivingConnectionHandler.onAuthenticationSucceeded()
  syntax: public void onAuthenticationSucceeded()
  uid: com.microsoft.azure.sdk.iot.service.transport.amqps.EventReceivingConnectionHandler.onAuthenticationSucceeded()
- fullName: com.microsoft.azure.sdk.iot.service.transport.amqps.EventReceivingConnectionHandler.onReactorFinal(Event event)
  name: onReactorFinal(Event event)
  nameWithType: EventReceivingConnectionHandler.onReactorFinal(Event event)
  parameters:
  - name: event
    type: <xref href="Event?alt=Event&text=Event" data-throw-if-not-resolved="False"/>
  syntax: public void onReactorFinal(Event event)
  uid: com.microsoft.azure.sdk.iot.service.transport.amqps.EventReceivingConnectionHandler.onReactorFinal(Event)
- fullName: com.microsoft.azure.sdk.iot.service.transport.amqps.EventReceivingConnectionHandler.onReceiverLinkRemoteOpen()
  name: onReceiverLinkRemoteOpen()
  nameWithType: EventReceivingConnectionHandler.onReceiverLinkRemoteOpen()
  syntax: public void onReceiverLinkRemoteOpen()
  uid: com.microsoft.azure.sdk.iot.service.transport.amqps.EventReceivingConnectionHandler.onReceiverLinkRemoteOpen()
- fullName: com.microsoft.azure.sdk.iot.service.transport.amqps.EventReceivingConnectionHandler.onSenderLinkRemoteOpen()
  name: onSenderLinkRemoteOpen()
  nameWithType: EventReceivingConnectionHandler.onSenderLinkRemoteOpen()
  syntax: public void onSenderLinkRemoteOpen()
  uid: com.microsoft.azure.sdk.iot.service.transport.amqps.EventReceivingConnectionHandler.onSenderLinkRemoteOpen()
nameWithType: EventReceivingConnectionHandler
syntax: public class EventReceivingConnectionHandler
type: class
uid: com.microsoft.azure.sdk.iot.service.transport.amqps.EventReceivingConnectionHandler
fullName: com.microsoft.azure.sdk.iot.service.transport.amqps.EventReceivingConnectionHandler
name: EventReceivingConnectionHandler
package: com.microsoft.azure.sdk.iot.service.transport.amqps
summary: <p>Instance of the QPID-Proton-J BaseHandler class to override the events what are needed to handle the receive operation Contains and sets connection parameters (path, port, endpoint) Maintains the layers of AMQP protocol (Link, Session, Connection, Transport) Creates and sets SASL authentication for transport </p>
metadata: {}
