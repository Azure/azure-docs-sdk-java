### YamlMime:JavaMember
nameWithType: CloudBlockBlob.openOutputStream
type: method
members:
- fullName: com.microsoft.azure.storage.blob.CloudBlockBlob.openOutputStream()
  name: openOutputStream()
  nameWithType: CloudBlockBlob.openOutputStream()
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  returns:
    description: <p>A <xref uid="com.microsoft.azure.storage.blob.BlobOutputStream" data-throw-if-not-resolved="false">BlobOutputStream</xref> object used to write data to the blob.</p>
    type: <xref href="com.microsoft.azure.storage.blob.BlobOutputStream?alt=com.microsoft.azure.storage.blob.BlobOutputStream&text=BlobOutputStream" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Creates and opens an output stream to write data to the block blob. If the blob already exists on the service, it will be overwritten. </p>

    <p>To avoid overwriting and instead throw an error, please use the <xref uid="com.microsoft.azure.storage.blob.CloudBlockBlob.openOutputStream(AccessCondition,BlobRequestOptions,OperationContext)" data-throw-if-not-resolved="false">openOutputStream(AccessCondition, BlobRequestOptions, OperationContext)</xref> overload with the appropriate <xref uid="com.microsoft.azure.storage.AccessCondition" data-throw-if-not-resolved="false">AccessCondition</xref>.</p>

    <p></p>
  syntax: public BlobOutputStream openOutputStream()
  uid: com.microsoft.azure.storage.blob.CloudBlockBlob.openOutputStream()
- fullName: com.microsoft.azure.storage.blob.CloudBlockBlob.openOutputStream(AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  name: openOutputStream(AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  nameWithType: CloudBlockBlob.openOutputStream(AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  parameters:
  - description: <p>An <xref uid="com.microsoft.azure.storage.AccessCondition" data-throw-if-not-resolved="false">AccessCondition</xref> object that represents the access conditions for the blob. </p>
    name: accessCondition
    type: <xref href="com.microsoft.azure.storage.AccessCondition?alt=com.microsoft.azure.storage.AccessCondition&text=AccessCondition" data-throw-if-not-resolved="False"/>
  - description: <p>A <xref uid="com.microsoft.azure.storage.blob.BlobRequestOptions" data-throw-if-not-resolved="false">BlobRequestOptions</xref> object that specifies any additional options for the request. Specifying <code>null</code> will use the default request options from the associated service client ( <xref uid="com.microsoft.azure.storage.blob.CloudBlobClient" data-throw-if-not-resolved="false">CloudBlobClient</xref>). </p>
    name: options
    type: <xref href="com.microsoft.azure.storage.blob.BlobRequestOptions?alt=com.microsoft.azure.storage.blob.BlobRequestOptions&text=BlobRequestOptions" data-throw-if-not-resolved="False"/>
  - description: <p>An <xref uid="com.microsoft.azure.storage.OperationContext" data-throw-if-not-resolved="false">OperationContext</xref> object that represents the context for the current operation. This object is used to track requests to the storage service, and to provide additional runtime information about the operation.</p>
    name: opContext
    type: <xref href="com.microsoft.azure.storage.OperationContext?alt=com.microsoft.azure.storage.OperationContext&text=OperationContext" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  returns:
    description: <p>A <xref uid="com.microsoft.azure.storage.blob.BlobOutputStream" data-throw-if-not-resolved="false">BlobOutputStream</xref> object used to write data to the blob.</p>
    type: <xref href="com.microsoft.azure.storage.blob.BlobOutputStream?alt=com.microsoft.azure.storage.blob.BlobOutputStream&text=BlobOutputStream" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Creates and opens an output stream to write data to the block blob using the specified request options and operation context. If the blob already exists on the service, it will be overwritten. </p>

    <p>To avoid overwriting and instead throw an error, please pass in an <xref uid="com.microsoft.azure.storage.AccessCondition" data-throw-if-not-resolved="false">AccessCondition</xref> generated using <xref uid="com.microsoft.azure.storage.AccessCondition.generateIfNotExistsCondition()" data-throw-if-not-resolved="false">AccessCondition#generateIfNotExistsCondition()</xref>.</p>

    <p></p>
  syntax: public BlobOutputStream openOutputStream(AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  uid: com.microsoft.azure.storage.blob.CloudBlockBlob.openOutputStream(AccessCondition,BlobRequestOptions,OperationContext)
uid: com.microsoft.azure.storage.blob.CloudBlockBlob.openOutputStream*
fullName: com.microsoft.azure.storage.blob.CloudBlockBlob.openOutputStream()
name: openOutputStream()
package: com.microsoft.azure.storage.blob
metadata: {}
