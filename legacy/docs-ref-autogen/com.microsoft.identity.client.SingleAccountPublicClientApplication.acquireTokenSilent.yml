### YamlMime:JavaMember
nameWithType: SingleAccountPublicClientApplication.acquireTokenSilent
type: method
members:
- fullName: com.microsoft.identity.client.SingleAccountPublicClientApplication.acquireTokenSilent(@NonNull final AcquireTokenSilentParameters acquireTokenSilentParameters)
  name: acquireTokenSilent(@NonNull final AcquireTokenSilentParameters acquireTokenSilentParameters)
  nameWithType: SingleAccountPublicClientApplication.acquireTokenSilent(@NonNull final AcquireTokenSilentParameters acquireTokenSilentParameters)
  overridden: com.microsoft.identity.client.IPublicClientApplication.acquireTokenSilent(@NonNull final AcquireTokenSilentParameters)
  parameters:
  - name: acquireTokenSilentParameters
    type: '@NonNull final <xref href="com.microsoft.identity.client.AcquireTokenSilentParameters?alt=com.microsoft.identity.client.AcquireTokenSilentParameters&text=AcquireTokenSilentParameters" data-throw-if-not-resolved="False"/>'
  returns:
    type: <xref href="com.microsoft.identity.client.IAuthenticationResult?alt=com.microsoft.identity.client.IAuthenticationResult&text=IAuthenticationResult" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Perform acquire token silent call. If there is a valid access token in the cache, the sdk will return the access token; If no valid access token exists, the sdk will try to find a refresh token and use the refresh token to get a new access token. If refresh token does not exist or it fails the refresh, exception will be sent back via callback.</p>

    <p></p>
  syntax: public IAuthenticationResult acquireTokenSilent(@NonNull final AcquireTokenSilentParameters acquireTokenSilentParameters)
  uid: com.microsoft.identity.client.SingleAccountPublicClientApplication.acquireTokenSilent(@NonNull final AcquireTokenSilentParameters)
- fullName: com.microsoft.identity.client.SingleAccountPublicClientApplication.acquireTokenSilent(@NonNull final String[] scopes, @NonNull final String authority)
  name: acquireTokenSilent(@NonNull final String[] scopes, @NonNull final String authority)
  nameWithType: SingleAccountPublicClientApplication.acquireTokenSilent(@NonNull final String[] scopes, @NonNull final String authority)
  parameters:
  - name: scopes
    type: <xref href="%40NonNull+final+String+%5B%5D?alt=@NonNull final String []&text=%40NonNull+final+String+%5B%5D" data-throw-if-not-resolved="False"/>
  - name: authority
    type: <xref href="%40NonNull+final+String?alt=@NonNull final String&text=%40NonNull+final+String" data-throw-if-not-resolved="False"/>
  returns:
    type: <xref href="com.microsoft.identity.client.IAuthenticationResult?alt=com.microsoft.identity.client.IAuthenticationResult&text=IAuthenticationResult" data-throw-if-not-resolved="False"/>
  syntax: public IAuthenticationResult acquireTokenSilent(@NonNull final String[] scopes, @NonNull final String authority)
  uid: com.microsoft.identity.client.SingleAccountPublicClientApplication.acquireTokenSilent(@NonNull final String [],@NonNull final String)
uid: com.microsoft.identity.client.SingleAccountPublicClientApplication.acquireTokenSilent*
fullName: com.microsoft.identity.client.SingleAccountPublicClientApplication.acquireTokenSilent(@NonNull final AcquireTokenSilentParameters acquireTokenSilentParameters)
name: acquireTokenSilent(@NonNull final AcquireTokenSilentParameters acquireTokenSilentParameters)
package: com.microsoft.identity.client
metadata: {}
