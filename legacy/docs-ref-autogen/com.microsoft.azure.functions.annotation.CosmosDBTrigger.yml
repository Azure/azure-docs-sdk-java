### YamlMime:JavaType
methods:
- com.microsoft.azure.functions.annotation.CosmosDBTrigger.checkpointDocumentCount()
- com.microsoft.azure.functions.annotation.CosmosDBTrigger.checkpointInterval()
- com.microsoft.azure.functions.annotation.CosmosDBTrigger.collectionName()
- com.microsoft.azure.functions.annotation.CosmosDBTrigger.connectionStringSetting()
- com.microsoft.azure.functions.annotation.CosmosDBTrigger.createLeaseCollectionIfNotExists()
- com.microsoft.azure.functions.annotation.CosmosDBTrigger.databaseName()
- com.microsoft.azure.functions.annotation.CosmosDBTrigger.dataType()
- com.microsoft.azure.functions.annotation.CosmosDBTrigger.feedPollDelay()
- com.microsoft.azure.functions.annotation.CosmosDBTrigger.leaseAcquireInterval()
- com.microsoft.azure.functions.annotation.CosmosDBTrigger.leaseCollectionName()
- com.microsoft.azure.functions.annotation.CosmosDBTrigger.leaseCollectionPrefix()
- com.microsoft.azure.functions.annotation.CosmosDBTrigger.leaseConnectionStringSetting()
- com.microsoft.azure.functions.annotation.CosmosDBTrigger.leaseDatabaseName()
- com.microsoft.azure.functions.annotation.CosmosDBTrigger.leaseExpirationInterval()
- com.microsoft.azure.functions.annotation.CosmosDBTrigger.leaseRenewInterval()
- com.microsoft.azure.functions.annotation.CosmosDBTrigger.leasesCollectionThroughput()
- com.microsoft.azure.functions.annotation.CosmosDBTrigger.maxItemsPerInvocation()
- com.microsoft.azure.functions.annotation.CosmosDBTrigger.name()
- com.microsoft.azure.functions.annotation.CosmosDBTrigger.preferredLocations()
- com.microsoft.azure.functions.annotation.CosmosDBTrigger.startFromBeginning()
nameWithType: CosmosDBTrigger
syntax: public interface CosmosDBTrigger
type: interface
uid: com.microsoft.azure.functions.annotation.CosmosDBTrigger
fullName: com.microsoft.azure.functions.annotation.CosmosDBTrigger
name: CosmosDBTrigger
package: com.microsoft.azure.functions.annotation
summary: >-
  <p>CosmosDBTrigger(name = "database", databaseName = "ToDoList", collectionName = "Items", leaseCollectionName = "leases", createLeaseCollectionIfNotExists = true, connectionStringSetting = "AzureCosmosDBConnection") List&lt;Map&lt;String, String&gt;&gt; items, final ExecutionContext context ) { context.getLogger().info(items.size() + " item(s) is/are inserted."); if (!items.isEmpty()) { context.getLogger().info("The ID of the first item is: " + items.get(0).get("id")); } } </p>

  <p></p>
metadata: {}
