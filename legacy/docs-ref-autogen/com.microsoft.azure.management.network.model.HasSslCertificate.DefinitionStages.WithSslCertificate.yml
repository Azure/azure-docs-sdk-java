### YamlMime:JavaType
methods:
- fullName: ReturnT com.microsoft.azure.management.network.model.HasSslCertificate<T>.DefinitionStages.WithSslCertificate<ReturnT>.withSslCertificate(String name)
  name: withSslCertificate(String name)
  nameWithType: HasSslCertificate.DefinitionStages.WithSslCertificate<ReturnT>.withSslCertificate(String name)
  parameters:
  - description: <p>the name of an existing SSL certificate. </p>
    name: name
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the next stage of the definition </p>
    type: <xref href="ReturnT?alt=ReturnT&text=ReturnT" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Specifies an SSL certificate to associate with this resource. </p>

    <p>If the certificate does not exist yet, it must be defined in the optional part of the parent resource definition. </p>
  syntax: public ReturnT withSslCertificate(String name)
  uid: com.microsoft.azure.management.network.model.HasSslCertificate.DefinitionStages.WithSslCertificate.withSslCertificate(String)
- fullName: WithSslPassword<ReturnT> com.microsoft.azure.management.network.model.HasSslCertificate<T>.DefinitionStages.WithSslCertificate<ReturnT>.withSslCertificateFromPfxFile(File pfxFile)
  name: withSslCertificateFromPfxFile(File pfxFile)
  nameWithType: HasSslCertificate.DefinitionStages.WithSslCertificate<ReturnT>.withSslCertificateFromPfxFile(File pfxFile)
  parameters:
  - description: <p>an existing PFX file </p>
    name: pfxFile
    type: <xref href="File?alt=File&text=File" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
    description: <p>when there are issues with the provided file </p>
  returns:
    description: <p>the next stage of the definition </p>
    type: <xref href="com.microsoft.azure.management.network.model.HasSslCertificate.DefinitionStages.WithSslPassword?alt=com.microsoft.azure.management.network.model.HasSslCertificate.DefinitionStages.WithSslPassword&text=HasSslCertificate.DefinitionStages.WithSslPassword" data-throw-if-not-resolved="False"/>&lt;ReturnT&gt;
  summary: >-
    <p>Specifies the PFX file to import the SSL certificate from to associated with this resource. </p>

    <p>The certificate will be named using an auto-generated name. </p>
  syntax: public WithSslPassword<ReturnT> withSslCertificateFromPfxFile(File pfxFile)
  uid: com.microsoft.azure.management.network.model.HasSslCertificate.DefinitionStages.WithSslCertificate.withSslCertificateFromPfxFile(File)
nameWithType: HasSslCertificate.DefinitionStages.WithSslCertificate<ReturnT>
syntax: public interface WithSslCertificate<ReturnT>
type: interface
typeParameters:
- description: <p>the next stage of the definition </p>
  name: ReturnT
uid: com.microsoft.azure.management.network.model.HasSslCertificate.DefinitionStages.WithSslCertificate
fullName: com.microsoft.azure.management.network.model.HasSslCertificate.DefinitionStages.WithSslCertificate<ReturnT>
name: HasSslCertificate.DefinitionStages.WithSslCertificate<ReturnT>
package: com.microsoft.azure.management.network.model
summary: <p>The stage of a resource definition allowing to specify the SSL certificate to associate with it. </p>
metadata: {}
