### YamlMime:JavaType
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
methods:
- fullName: com.microsoft.azure.keyvault.models.KeySignParameters.algorithm()
  name: algorithm()
  nameWithType: KeySignParameters.algorithm()
  returns:
    description: <p>the algorithm value </p>
    type: <xref href="com.microsoft.azure.keyvault.webkey.JsonWebKeySignatureAlgorithm?alt=com.microsoft.azure.keyvault.webkey.JsonWebKeySignatureAlgorithm&text=JsonWebKeySignatureAlgorithm" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the algorithm value.</p>

    <p></p>
  syntax: public JsonWebKeySignatureAlgorithm algorithm()
  uid: com.microsoft.azure.keyvault.models.KeySignParameters.algorithm()
- fullName: com.microsoft.azure.keyvault.models.KeySignParameters.value()
  name: value()
  nameWithType: KeySignParameters.value()
  returns:
    description: <p>the value value </p>
    type: <xref href="byte+%5B%5D?alt=byte+%5B%5D&text=byte+%5B%5D" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the value value.</p>

    <p></p>
  syntax: public byte [] value()
  uid: com.microsoft.azure.keyvault.models.KeySignParameters.value()
- fullName: com.microsoft.azure.keyvault.models.KeySignParameters.withAlgorithm(JsonWebKeySignatureAlgorithm algorithm)
  name: withAlgorithm(JsonWebKeySignatureAlgorithm algorithm)
  nameWithType: KeySignParameters.withAlgorithm(JsonWebKeySignatureAlgorithm algorithm)
  parameters:
  - description: <p>the algorithm value to set </p>
    name: algorithm
    type: <xref href="com.microsoft.azure.keyvault.webkey.JsonWebKeySignatureAlgorithm?alt=com.microsoft.azure.keyvault.webkey.JsonWebKeySignatureAlgorithm&text=JsonWebKeySignatureAlgorithm" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the KeySignParameters object itself. </p>
    type: <xref href="com.microsoft.azure.keyvault.models.KeySignParameters?alt=com.microsoft.azure.keyvault.models.KeySignParameters&text=KeySignParameters" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the algorithm value.</p>

    <p></p>
  syntax: public KeySignParameters withAlgorithm(JsonWebKeySignatureAlgorithm algorithm)
  uid: com.microsoft.azure.keyvault.models.KeySignParameters.withAlgorithm(JsonWebKeySignatureAlgorithm)
- fullName: com.microsoft.azure.keyvault.models.KeySignParameters.withValue(byte[] value)
  name: withValue(byte[] value)
  nameWithType: KeySignParameters.withValue(byte[] value)
  parameters:
  - description: <p>the value value to set </p>
    name: value
    type: <xref href="byte+%5B%5D?alt=byte+%5B%5D&text=byte+%5B%5D" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the KeySignParameters object itself. </p>
    type: <xref href="com.microsoft.azure.keyvault.models.KeySignParameters?alt=com.microsoft.azure.keyvault.models.KeySignParameters&text=KeySignParameters" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the value value.</p>

    <p></p>
  syntax: public KeySignParameters withValue(byte[] value)
  uid: com.microsoft.azure.keyvault.models.KeySignParameters.withValue(byte [])
nameWithType: KeySignParameters
syntax: public class KeySignParameters
type: class
uid: com.microsoft.azure.keyvault.models.KeySignParameters
fullName: com.microsoft.azure.keyvault.models.KeySignParameters
name: KeySignParameters
package: com.microsoft.azure.keyvault.models
summary: <p>The key operations parameters. </p>
metadata: {}
