### YamlMime:JavaMember
nameWithType: MultipleAccountPublicClientApplication.getAccounts
type: method
members:
- fullName: com.microsoft.identity.client.MultipleAccountPublicClientApplication.getAccounts()
  name: getAccounts()
  nameWithType: MultipleAccountPublicClientApplication.getAccounts()
  overridden: com.microsoft.identity.client.IMultipleAccountPublicClientApplication.getAccounts()
  returns:
    type: List&lt;<xref href="com.microsoft.identity.client.IAccount?alt=com.microsoft.identity.client.IAccount&text=IAccount" data-throw-if-not-resolved="False"/>&gt;
  summary: <p>Returns a List of <xref uid="com.microsoft.identity.client.IAccount" data-throw-if-not-resolved="false">IAccount</xref> objects for which this application has RefreshTokens. </p>
  syntax: public List<IAccount> getAccounts()
  uid: com.microsoft.identity.client.MultipleAccountPublicClientApplication.getAccounts()
- fullName: com.microsoft.identity.client.MultipleAccountPublicClientApplication.getAccounts(@NonNull final LoadAccountsCallback callback)
  name: getAccounts(@NonNull final LoadAccountsCallback callback)
  nameWithType: MultipleAccountPublicClientApplication.getAccounts(@NonNull final LoadAccountsCallback callback)
  overridden: com.microsoft.identity.client.IMultipleAccountPublicClientApplication.getAccounts(@NonNull final LoadAccountsCallback)
  parameters:
  - description: <p>The callback to notify once this action has finished. </p>
    name: callback
    type: '@NonNull final <xref href="com.microsoft.identity.client.IPublicClientApplication.LoadAccountsCallback?alt=com.microsoft.identity.client.IPublicClientApplication.LoadAccountsCallback&text=IPublicClientApplication.LoadAccountsCallback" data-throw-if-not-resolved="False"/>'
  summary: >-
    <p>Asynchronously returns a List of <xref uid="com.microsoft.identity.client.IAccount" data-throw-if-not-resolved="false">IAccount</xref> objects for which this application has RefreshTokens.</p>

    <p></p>
  syntax: public void getAccounts(@NonNull final LoadAccountsCallback callback)
  uid: com.microsoft.identity.client.MultipleAccountPublicClientApplication.getAccounts(@NonNull final LoadAccountsCallback)
uid: com.microsoft.identity.client.MultipleAccountPublicClientApplication.getAccounts*
fullName: com.microsoft.identity.client.MultipleAccountPublicClientApplication.getAccounts()
name: getAccounts()
package: com.microsoft.identity.client
metadata: {}
