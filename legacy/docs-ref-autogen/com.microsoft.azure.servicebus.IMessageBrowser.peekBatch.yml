### YamlMime:JavaMember
nameWithType: IMessageBrowser.peekBatch
type: method
members:
- fullName: com.microsoft.azure.servicebus.IMessageBrowser.peekBatch(int messageCount)
  name: peekBatch(int messageCount)
  nameWithType: IMessageBrowser.peekBatch(int messageCount)
  parameters:
  - description: <p>The number of messages. </p>
    name: messageCount
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="InterruptedException?alt=InterruptedException&text=InterruptedException" data-throw-if-not-resolved="False"/>
    description: <p>if the current thread was interrupted while waiting </p>
  - type: <xref href="ServiceBusException?alt=ServiceBusException&text=ServiceBusException" data-throw-if-not-resolved="False"/>
    description: <p>if peek failed </p>
  returns:
    description: <p>Batch of <xref uid="com.microsoft.azure.servicebus.Message" data-throw-if-not-resolved="false">Message</xref> peeked </p>
    type: Collection&lt;<xref href="com.microsoft.azure.servicebus.IMessage?alt=com.microsoft.azure.servicebus.IMessage&text=IMessage" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Reads next batch of the active messages without changing the state of the receiver or the message source.</p>

    <p></p>
  syntax: public Collection<IMessage> peekBatch(int messageCount)
  uid: com.microsoft.azure.servicebus.IMessageBrowser.peekBatch(int)
- fullName: com.microsoft.azure.servicebus.IMessageBrowser.peekBatch(long fromSequenceNumber, int messageCount)
  name: peekBatch(long fromSequenceNumber, int messageCount)
  nameWithType: IMessageBrowser.peekBatch(long fromSequenceNumber, int messageCount)
  parameters:
  - description: <p>The sequence number from where to read the message. </p>
    name: fromSequenceNumber
    type: <xref href="long?alt=long&text=long" data-throw-if-not-resolved="False"/>
  - description: <p>The number of messages. </p>
    name: messageCount
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="InterruptedException?alt=InterruptedException&text=InterruptedException" data-throw-if-not-resolved="False"/>
    description: <p>if the current thread was interrupted while waiting </p>
  - type: <xref href="ServiceBusException?alt=ServiceBusException&text=ServiceBusException" data-throw-if-not-resolved="False"/>
    description: <p>if peek failed </p>
  returns:
    description: <p>Batch of <xref uid="com.microsoft.azure.servicebus.Message" data-throw-if-not-resolved="false">Message</xref> peeked </p>
    type: Collection&lt;<xref href="com.microsoft.azure.servicebus.IMessage?alt=com.microsoft.azure.servicebus.IMessage&text=IMessage" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Reads next batch of the active messages without changing the state of the receiver or the message source.</p>

    <p></p>
  syntax: public Collection<IMessage> peekBatch(long fromSequenceNumber, int messageCount)
  uid: com.microsoft.azure.servicebus.IMessageBrowser.peekBatch(long,int)
uid: com.microsoft.azure.servicebus.IMessageBrowser.peekBatch*
fullName: com.microsoft.azure.servicebus.IMessageBrowser.peekBatch(int messageCount)
name: peekBatch(int messageCount)
package: com.microsoft.azure.servicebus
metadata: {}
