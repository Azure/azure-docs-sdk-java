### YamlMime:JavaMember
nameWithType: Accounts.listPoolNodeCounts
type: method
members:
- fullName: com.microsoft.azure.batch.protocol.Accounts.listPoolNodeCounts()
  name: listPoolNodeCounts()
  nameWithType: Accounts.listPoolNodeCounts()
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="BatchErrorException?alt=BatchErrorException&text=BatchErrorException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  returns:
    description: <p>the PagedList&lt;PoolNodeCounts&gt; object if successful. </p>
    type: PagedList&lt;<xref href="com.microsoft.azure.batch.protocol.models.PoolNodeCounts?alt=com.microsoft.azure.batch.protocol.models.PoolNodeCounts&text=PoolNodeCounts" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Gets the number of nodes in each state, grouped by pool.</p>

    <p></p>
  syntax: public PagedList<PoolNodeCounts> listPoolNodeCounts()
  uid: com.microsoft.azure.batch.protocol.Accounts.listPoolNodeCounts()
- fullName: com.microsoft.azure.batch.protocol.Accounts.listPoolNodeCounts(final AccountListPoolNodeCountsOptions accountListPoolNodeCountsOptions)
  name: listPoolNodeCounts(final AccountListPoolNodeCountsOptions accountListPoolNodeCountsOptions)
  nameWithType: Accounts.listPoolNodeCounts(final AccountListPoolNodeCountsOptions accountListPoolNodeCountsOptions)
  parameters:
  - description: <p>Additional parameters for the operation </p>
    name: accountListPoolNodeCountsOptions
    type: final <xref href="com.microsoft.azure.batch.protocol.models.AccountListPoolNodeCountsOptions?alt=com.microsoft.azure.batch.protocol.models.AccountListPoolNodeCountsOptions&text=AccountListPoolNodeCountsOptions" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="BatchErrorException?alt=BatchErrorException&text=BatchErrorException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  returns:
    description: <p>the PagedList&lt;PoolNodeCounts&gt; object if successful. </p>
    type: PagedList&lt;<xref href="com.microsoft.azure.batch.protocol.models.PoolNodeCounts?alt=com.microsoft.azure.batch.protocol.models.PoolNodeCounts&text=PoolNodeCounts" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Gets the number of nodes in each state, grouped by pool.</p>

    <p></p>
  syntax: public PagedList<PoolNodeCounts> listPoolNodeCounts(final AccountListPoolNodeCountsOptions accountListPoolNodeCountsOptions)
  uid: com.microsoft.azure.batch.protocol.Accounts.listPoolNodeCounts(final AccountListPoolNodeCountsOptions)
uid: com.microsoft.azure.batch.protocol.Accounts.listPoolNodeCounts*
fullName: com.microsoft.azure.batch.protocol.Accounts.listPoolNodeCounts()
name: listPoolNodeCounts()
package: com.microsoft.azure.batch.protocol
metadata: {}
