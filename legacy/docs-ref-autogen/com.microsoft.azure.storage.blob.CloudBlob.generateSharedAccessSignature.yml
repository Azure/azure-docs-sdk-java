### YamlMime:JavaMember
nameWithType: CloudBlob.generateSharedAccessSignature
type: method
members:
- fullName: com.microsoft.azure.storage.blob.CloudBlob.generateSharedAccessSignature(final SharedAccessBlobPolicy policy, final SharedAccessBlobHeaders headers, final String groupPolicyIdentifier)
  name: generateSharedAccessSignature(final SharedAccessBlobPolicy policy, final SharedAccessBlobHeaders headers, final String groupPolicyIdentifier)
  nameWithType: CloudBlob.generateSharedAccessSignature(final SharedAccessBlobPolicy policy, final SharedAccessBlobHeaders headers, final String groupPolicyIdentifier)
  parameters:
  - description: <p>A <code>SharedAccessPolicy</code> object that represents the access policy for the shared access signature. </p>
    name: policy
    type: final <xref href="com.microsoft.azure.storage.blob.SharedAccessBlobPolicy?alt=com.microsoft.azure.storage.blob.SharedAccessBlobPolicy&text=SharedAccessBlobPolicy" data-throw-if-not-resolved="False"/>
  - description: <p>A <code><xref uid="com.microsoft.azure.storage.blob.SharedAccessBlobHeaders" data-throw-if-not-resolved="false" data-raw-source="SharedAccessBlobHeaders"></xref></code> object that represents the optional header values to set for a blob accessed with this shared access signature. </p>
    name: headers
    type: final <xref href="com.microsoft.azure.storage.blob.SharedAccessBlobHeaders?alt=com.microsoft.azure.storage.blob.SharedAccessBlobHeaders&text=SharedAccessBlobHeaders" data-throw-if-not-resolved="False"/>
  - description: <p>A <code>String</code> that represents the container-level access policy.</p>
    name: groupPolicyIdentifier
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>If the credentials are invalid or the blob is a snapshot. </p>
  - type: <xref href="InvalidKeyException?alt=InvalidKeyException&text=InvalidKeyException" data-throw-if-not-resolved="False"/>
    description: <p>If the credentials are invalid. </p>
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  returns:
    description: <p>A <code>String</code> that represents the shared access signature.</p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Returns a shared access signature for the blob using the specified group policy identifier and operation context. Note this does not contain the leading "?".</p>

    <p></p>
  syntax: public String generateSharedAccessSignature(final SharedAccessBlobPolicy policy, final SharedAccessBlobHeaders headers, final String groupPolicyIdentifier)
  uid: com.microsoft.azure.storage.blob.CloudBlob.generateSharedAccessSignature(final SharedAccessBlobPolicy,final SharedAccessBlobHeaders,final String)
- fullName: com.microsoft.azure.storage.blob.CloudBlob.generateSharedAccessSignature(final SharedAccessBlobPolicy policy, final SharedAccessBlobHeaders headers, final String groupPolicyIdentifier, final IPRange ipRange, final SharedAccessProtocols protocols)
  name: generateSharedAccessSignature(final SharedAccessBlobPolicy policy, final SharedAccessBlobHeaders headers, final String groupPolicyIdentifier, final IPRange ipRange, final SharedAccessProtocols protocols)
  nameWithType: CloudBlob.generateSharedAccessSignature(final SharedAccessBlobPolicy policy, final SharedAccessBlobHeaders headers, final String groupPolicyIdentifier, final IPRange ipRange, final SharedAccessProtocols protocols)
  parameters:
  - description: <p>A <code><xref uid="com.microsoft.azure.storage.SharedAccessPolicy" data-throw-if-not-resolved="false" data-raw-source="SharedAccessPolicy"></xref></code> object that represents the access policy for the shared access signature. </p>
    name: policy
    type: final <xref href="com.microsoft.azure.storage.blob.SharedAccessBlobPolicy?alt=com.microsoft.azure.storage.blob.SharedAccessBlobPolicy&text=SharedAccessBlobPolicy" data-throw-if-not-resolved="False"/>
  - description: <p>A <code><xref uid="com.microsoft.azure.storage.blob.SharedAccessBlobHeaders" data-throw-if-not-resolved="false" data-raw-source="SharedAccessBlobHeaders"></xref></code> object that represents the optional header values to set for a blob accessed with this shared access signature. </p>
    name: headers
    type: final <xref href="com.microsoft.azure.storage.blob.SharedAccessBlobHeaders?alt=com.microsoft.azure.storage.blob.SharedAccessBlobHeaders&text=SharedAccessBlobHeaders" data-throw-if-not-resolved="False"/>
  - description: <p>A <code>String</code> that represents the container-level access policy. </p>
    name: groupPolicyIdentifier
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>A <xref uid="com.microsoft.azure.storage.IPRange" data-throw-if-not-resolved="false" data-raw-source="IPRange"></xref> object containing the range of allowed IP addresses. </p>
    name: ipRange
    type: final <xref href="com.microsoft.azure.storage.IPRange?alt=com.microsoft.azure.storage.IPRange&text=IPRange" data-throw-if-not-resolved="False"/>
  - description: <p>A <xref uid="com.microsoft.azure.storage.SharedAccessProtocols" data-throw-if-not-resolved="false" data-raw-source="SharedAccessProtocols"></xref> representing the allowed Internet protocols.</p>
    name: protocols
    type: final <xref href="com.microsoft.azure.storage.SharedAccessProtocols?alt=com.microsoft.azure.storage.SharedAccessProtocols&text=SharedAccessProtocols" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>If the credentials are invalid or the blob is a snapshot. </p>
  - type: <xref href="InvalidKeyException?alt=InvalidKeyException&text=InvalidKeyException" data-throw-if-not-resolved="False"/>
    description: <p>If the credentials are invalid. </p>
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  returns:
    description: <p>A <code>String</code> that represents the shared access signature.</p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Returns a shared access signature for the blob using the specified group policy identifier and operation context. Note this does not contain the leading "?".</p>

    <p></p>
  syntax: public String generateSharedAccessSignature(final SharedAccessBlobPolicy policy, final SharedAccessBlobHeaders headers, final String groupPolicyIdentifier, final IPRange ipRange, final SharedAccessProtocols protocols)
  uid: com.microsoft.azure.storage.blob.CloudBlob.generateSharedAccessSignature(final SharedAccessBlobPolicy,final SharedAccessBlobHeaders,final String,final IPRange,final SharedAccessProtocols)
- fullName: com.microsoft.azure.storage.blob.CloudBlob.generateSharedAccessSignature(final SharedAccessBlobPolicy policy, final SharedAccessBlobHeaders headers, final String groupPolicyIdentifier, final IPRange ipRange, final SharedAccessProtocols protocols, boolean skipDecoding)
  name: generateSharedAccessSignature(final SharedAccessBlobPolicy policy, final SharedAccessBlobHeaders headers, final String groupPolicyIdentifier, final IPRange ipRange, final SharedAccessProtocols protocols, boolean skipDecoding)
  nameWithType: CloudBlob.generateSharedAccessSignature(final SharedAccessBlobPolicy policy, final SharedAccessBlobHeaders headers, final String groupPolicyIdentifier, final IPRange ipRange, final SharedAccessProtocols protocols, boolean skipDecoding)
  parameters:
  - description: <p>A <code><xref uid="com.microsoft.azure.storage.SharedAccessPolicy" data-throw-if-not-resolved="false" data-raw-source="SharedAccessPolicy"></xref></code> object that represents the access policy for the shared access signature. </p>
    name: policy
    type: final <xref href="com.microsoft.azure.storage.blob.SharedAccessBlobPolicy?alt=com.microsoft.azure.storage.blob.SharedAccessBlobPolicy&text=SharedAccessBlobPolicy" data-throw-if-not-resolved="False"/>
  - description: <p>A <code><xref uid="com.microsoft.azure.storage.blob.SharedAccessBlobHeaders" data-throw-if-not-resolved="false" data-raw-source="SharedAccessBlobHeaders"></xref></code> object that represents the optional header values to set for a blob accessed with this shared access signature. </p>
    name: headers
    type: final <xref href="com.microsoft.azure.storage.blob.SharedAccessBlobHeaders?alt=com.microsoft.azure.storage.blob.SharedAccessBlobHeaders&text=SharedAccessBlobHeaders" data-throw-if-not-resolved="False"/>
  - description: <p>A <code>String</code> that represents the container-level access policy. </p>
    name: groupPolicyIdentifier
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>A <xref uid="com.microsoft.azure.storage.IPRange" data-throw-if-not-resolved="false" data-raw-source="IPRange"></xref> object containing the range of allowed IP addresses. </p>
    name: ipRange
    type: final <xref href="com.microsoft.azure.storage.IPRange?alt=com.microsoft.azure.storage.IPRange&text=IPRange" data-throw-if-not-resolved="False"/>
  - description: <p>A <xref uid="com.microsoft.azure.storage.SharedAccessProtocols" data-throw-if-not-resolved="false" data-raw-source="SharedAccessProtocols"></xref> representing the allowed Internet protocols. </p>
    name: protocols
    type: final <xref href="com.microsoft.azure.storage.SharedAccessProtocols?alt=com.microsoft.azure.storage.SharedAccessProtocols&text=SharedAccessProtocols" data-throw-if-not-resolved="False"/>
  - description: <p>A <code>boolean</code> to indicate that the query parameters should not be decoded before being signed. This should only be used if the customer is sure the values passed are in the desired format. This may be useful in some scenarios where the client is used to generate a sas to a third party that will not be using this sdk to make the requests.</p>
    name: skipDecoding
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>If the credentials are invalid or the blob is a snapshot. </p>
  - type: <xref href="InvalidKeyException?alt=InvalidKeyException&text=InvalidKeyException" data-throw-if-not-resolved="False"/>
    description: <p>If the credentials are invalid. </p>
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  returns:
    description: <p>A <code>String</code> that represents the shared access signature.</p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Returns a shared access signature for the blob using the specified group policy identifier and operation context. Note this does not contain the leading "?".</p>

    <p></p>
  syntax: public String generateSharedAccessSignature(final SharedAccessBlobPolicy policy, final SharedAccessBlobHeaders headers, final String groupPolicyIdentifier, final IPRange ipRange, final SharedAccessProtocols protocols, boolean skipDecoding)
  uid: com.microsoft.azure.storage.blob.CloudBlob.generateSharedAccessSignature(final SharedAccessBlobPolicy,final SharedAccessBlobHeaders,final String,final IPRange,final SharedAccessProtocols,boolean)
- fullName: com.microsoft.azure.storage.blob.CloudBlob.generateSharedAccessSignature(final SharedAccessBlobPolicy policy, final String groupPolicyIdentifier)
  name: generateSharedAccessSignature(final SharedAccessBlobPolicy policy, final String groupPolicyIdentifier)
  nameWithType: CloudBlob.generateSharedAccessSignature(final SharedAccessBlobPolicy policy, final String groupPolicyIdentifier)
  parameters:
  - description: <p>A <code>SharedAccessPolicy</code> object that represents the access policy for the shared access signature. </p>
    name: policy
    type: final <xref href="com.microsoft.azure.storage.blob.SharedAccessBlobPolicy?alt=com.microsoft.azure.storage.blob.SharedAccessBlobPolicy&text=SharedAccessBlobPolicy" data-throw-if-not-resolved="False"/>
  - description: <p>A <code>String</code> that represents the container-level access policy.</p>
    name: groupPolicyIdentifier
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>If the credentials are invalid or the blob is a snapshot. </p>
  - type: <xref href="InvalidKeyException?alt=InvalidKeyException&text=InvalidKeyException" data-throw-if-not-resolved="False"/>
    description: <p>If the credentials are invalid. </p>
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  returns:
    description: <p>A <code>String</code> that represents the shared access signature.</p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Returns a shared access signature for the blob using the specified group policy identifier and operation context. Note this does not contain the leading "?".</p>

    <p></p>
  syntax: public String generateSharedAccessSignature(final SharedAccessBlobPolicy policy, final String groupPolicyIdentifier)
  uid: com.microsoft.azure.storage.blob.CloudBlob.generateSharedAccessSignature(final SharedAccessBlobPolicy,final String)
uid: com.microsoft.azure.storage.blob.CloudBlob.generateSharedAccessSignature*
fullName: com.microsoft.azure.storage.blob.CloudBlob.generateSharedAccessSignature
name: generateSharedAccessSignature(final SharedAccessBlobPolicy policy, final SharedAccessBlobHeaders headers, final String groupPolicyIdentifier)
package: com.microsoft.azure.storage.blob
metadata: {}
