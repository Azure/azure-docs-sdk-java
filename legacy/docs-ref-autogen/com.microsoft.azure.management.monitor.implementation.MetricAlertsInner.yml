### YamlMime:JavaType
constructors:
- fullName: com.microsoft.azure.management.monitor.implementation.MetricAlertsInner.MetricAlertsInner(Retrofit retrofit, MonitorManagementClientImpl client)
  name: MetricAlertsInner(Retrofit retrofit, MonitorManagementClientImpl client)
  nameWithType: MetricAlertsInner.MetricAlertsInner(Retrofit retrofit, MonitorManagementClientImpl client)
  parameters:
  - description: <p>the Retrofit instance built from a Retrofit Builder. </p>
    name: retrofit
    type: <xref href="Retrofit?alt=Retrofit&text=Retrofit" data-throw-if-not-resolved="False"/>
  - description: <p>the instance of the service client containing this operation class. </p>
    name: client
    type: <xref href="com.microsoft.azure.management.monitor.implementation.MonitorManagementClientImpl?alt=com.microsoft.azure.management.monitor.implementation.MonitorManagementClientImpl&text=MonitorManagementClientImpl" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Initializes an instance of MetricAlertsInner.</p>

    <p></p>
  syntax: public MetricAlertsInner(Retrofit retrofit, MonitorManagementClientImpl client)
  uid: com.microsoft.azure.management.monitor.implementation.MetricAlertsInner.MetricAlertsInner(Retrofit,MonitorManagementClientImpl)
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
- <xref href="com.microsoft.azure.management.resources.fluentcore.collection.InnerSupportsGet?alt=com.microsoft.azure.management.resources.fluentcore.collection.InnerSupportsGet&text=InnerSupportsGet%3CInnerT%3E" data-throw-if-not-resolved="False"/>
inheritedMembers:
- com.microsoft.azure.management.resources.fluentcore.collection.InnerSupportsGet.getByResourceGroupAsync(String,String,ServiceCallback<InnerT>)
methods:
- fullName: com.microsoft.azure.management.monitor.implementation.MetricAlertsInner.createOrUpdate(String resourceGroupName, String ruleName, MetricAlertResourceInner parameters)
  name: createOrUpdate(String resourceGroupName, String ruleName, MetricAlertResourceInner parameters)
  nameWithType: MetricAlertsInner.createOrUpdate(String resourceGroupName, String ruleName, MetricAlertResourceInner parameters)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the rule. </p>
    name: ruleName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The parameters of the rule to create or update. </p>
    name: parameters
    type: <xref href="com.microsoft.azure.management.monitor.implementation.MetricAlertResourceInner?alt=com.microsoft.azure.management.monitor.implementation.MetricAlertResourceInner&text=MetricAlertResourceInner" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="ErrorResponseException?alt=ErrorResponseException&text=ErrorResponseException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  returns:
    description: <p>the MetricAlertResourceInner object if successful. </p>
    type: <xref href="com.microsoft.azure.management.monitor.implementation.MetricAlertResourceInner?alt=com.microsoft.azure.management.monitor.implementation.MetricAlertResourceInner&text=MetricAlertResourceInner" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Create or update an metric alert definition.</p>

    <p></p>
  syntax: public MetricAlertResourceInner createOrUpdate(String resourceGroupName, String ruleName, MetricAlertResourceInner parameters)
  uid: com.microsoft.azure.management.monitor.implementation.MetricAlertsInner.createOrUpdate(String,String,MetricAlertResourceInner)
- fullName: com.microsoft.azure.management.monitor.implementation.MetricAlertsInner.createOrUpdateAsync(String resourceGroupName, String ruleName, MetricAlertResourceInner parameters)
  name: createOrUpdateAsync(String resourceGroupName, String ruleName, MetricAlertResourceInner parameters)
  nameWithType: MetricAlertsInner.createOrUpdateAsync(String resourceGroupName, String ruleName, MetricAlertResourceInner parameters)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the rule. </p>
    name: ruleName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The parameters of the rule to create or update. </p>
    name: parameters
    type: <xref href="com.microsoft.azure.management.monitor.implementation.MetricAlertResourceInner?alt=com.microsoft.azure.management.monitor.implementation.MetricAlertResourceInner&text=MetricAlertResourceInner" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the MetricAlertResourceInner object </p>
    type: Observable&lt;<xref href="com.microsoft.azure.management.monitor.implementation.MetricAlertResourceInner?alt=com.microsoft.azure.management.monitor.implementation.MetricAlertResourceInner&text=MetricAlertResourceInner" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Create or update an metric alert definition.</p>

    <p></p>
  syntax: public Observable<MetricAlertResourceInner> createOrUpdateAsync(String resourceGroupName, String ruleName, MetricAlertResourceInner parameters)
  uid: com.microsoft.azure.management.monitor.implementation.MetricAlertsInner.createOrUpdateAsync(String,String,MetricAlertResourceInner)
- fullName: com.microsoft.azure.management.monitor.implementation.MetricAlertsInner.createOrUpdateAsync(String resourceGroupName, String ruleName, MetricAlertResourceInner parameters, final ServiceCallback<MetricAlertResourceInner> serviceCallback)
  name: createOrUpdateAsync(String resourceGroupName, String ruleName, MetricAlertResourceInner parameters, final ServiceCallback<MetricAlertResourceInner> serviceCallback)
  nameWithType: MetricAlertsInner.createOrUpdateAsync(String resourceGroupName, String ruleName, MetricAlertResourceInner parameters, final ServiceCallback<MetricAlertResourceInner> serviceCallback)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the rule. </p>
    name: ruleName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The parameters of the rule to create or update. </p>
    name: parameters
    type: <xref href="com.microsoft.azure.management.monitor.implementation.MetricAlertResourceInner?alt=com.microsoft.azure.management.monitor.implementation.MetricAlertResourceInner&text=MetricAlertResourceInner" data-throw-if-not-resolved="False"/>
  - description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    name: serviceCallback
    type: final ServiceCallback&lt;<xref href="com.microsoft.azure.management.monitor.implementation.MetricAlertResourceInner?alt=com.microsoft.azure.management.monitor.implementation.MetricAlertResourceInner&text=MetricAlertResourceInner" data-throw-if-not-resolved="False"/>&gt;
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
    type: ServiceFuture&lt;<xref href="com.microsoft.azure.management.monitor.implementation.MetricAlertResourceInner?alt=com.microsoft.azure.management.monitor.implementation.MetricAlertResourceInner&text=MetricAlertResourceInner" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Create or update an metric alert definition.</p>

    <p></p>
  syntax: public ServiceFuture<MetricAlertResourceInner> createOrUpdateAsync(String resourceGroupName, String ruleName, MetricAlertResourceInner parameters, final ServiceCallback<MetricAlertResourceInner> serviceCallback)
  uid: com.microsoft.azure.management.monitor.implementation.MetricAlertsInner.createOrUpdateAsync(String,String,MetricAlertResourceInner,final ServiceCallback<MetricAlertResourceInner>)
- fullName: com.microsoft.azure.management.monitor.implementation.MetricAlertsInner.createOrUpdateWithServiceResponseAsync(String resourceGroupName, String ruleName, MetricAlertResourceInner parameters)
  name: createOrUpdateWithServiceResponseAsync(String resourceGroupName, String ruleName, MetricAlertResourceInner parameters)
  nameWithType: MetricAlertsInner.createOrUpdateWithServiceResponseAsync(String resourceGroupName, String ruleName, MetricAlertResourceInner parameters)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the rule. </p>
    name: ruleName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The parameters of the rule to create or update. </p>
    name: parameters
    type: <xref href="com.microsoft.azure.management.monitor.implementation.MetricAlertResourceInner?alt=com.microsoft.azure.management.monitor.implementation.MetricAlertResourceInner&text=MetricAlertResourceInner" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the MetricAlertResourceInner object </p>
    type: Observable&lt;ServiceResponse&lt;<xref href="com.microsoft.azure.management.monitor.implementation.MetricAlertResourceInner?alt=com.microsoft.azure.management.monitor.implementation.MetricAlertResourceInner&text=MetricAlertResourceInner" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Create or update an metric alert definition.</p>

    <p></p>
  syntax: public Observable<ServiceResponse<MetricAlertResourceInner>> createOrUpdateWithServiceResponseAsync(String resourceGroupName, String ruleName, MetricAlertResourceInner parameters)
  uid: com.microsoft.azure.management.monitor.implementation.MetricAlertsInner.createOrUpdateWithServiceResponseAsync(String,String,MetricAlertResourceInner)
- fullName: com.microsoft.azure.management.monitor.implementation.MetricAlertsInner.delete(String resourceGroupName, String ruleName)
  name: delete(String resourceGroupName, String ruleName)
  nameWithType: MetricAlertsInner.delete(String resourceGroupName, String ruleName)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the rule. </p>
    name: ruleName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="CloudException?alt=CloudException&text=CloudException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  summary: >-
    <p>Delete an alert rule definition.</p>

    <p></p>
  syntax: public void delete(String resourceGroupName, String ruleName)
  uid: com.microsoft.azure.management.monitor.implementation.MetricAlertsInner.delete(String,String)
- fullName: com.microsoft.azure.management.monitor.implementation.MetricAlertsInner.deleteAsync(String resourceGroupName, String ruleName)
  name: deleteAsync(String resourceGroupName, String ruleName)
  nameWithType: MetricAlertsInner.deleteAsync(String resourceGroupName, String ruleName)
  overridden: com.microsoft.azure.management.resources.fluentcore.collection.InnerSupportsDelete.deleteAsync(String,String)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the rule. </p>
    name: ruleName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceResponse"></xref> object if successful. </p>
    type: <xref href="Observable%3CVoid%3E?alt=Observable%3CVoid%3E&text=Observable%3CVoid%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Delete an alert rule definition.</p>

    <p></p>
  syntax: public Observable<Void> deleteAsync(String resourceGroupName, String ruleName)
  uid: com.microsoft.azure.management.monitor.implementation.MetricAlertsInner.deleteAsync(String,String)
- fullName: com.microsoft.azure.management.monitor.implementation.MetricAlertsInner.deleteAsync(String resourceGroupName, String ruleName, final ServiceCallback<Void> serviceCallback)
  name: deleteAsync(String resourceGroupName, String ruleName, final ServiceCallback<Void> serviceCallback)
  nameWithType: MetricAlertsInner.deleteAsync(String resourceGroupName, String ruleName, final ServiceCallback<Void> serviceCallback)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the rule. </p>
    name: ruleName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    name: serviceCallback
    type: <xref href="final+ServiceCallback%3CVoid%3E?alt=final+ServiceCallback%3CVoid%3E&text=final+ServiceCallback%3CVoid%3E" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
    type: <xref href="ServiceFuture%3CVoid%3E?alt=ServiceFuture%3CVoid%3E&text=ServiceFuture%3CVoid%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Delete an alert rule definition.</p>

    <p></p>
  syntax: public ServiceFuture<Void> deleteAsync(String resourceGroupName, String ruleName, final ServiceCallback<Void> serviceCallback)
  uid: com.microsoft.azure.management.monitor.implementation.MetricAlertsInner.deleteAsync(String,String,final ServiceCallback<Void>)
- fullName: com.microsoft.azure.management.monitor.implementation.MetricAlertsInner.deleteWithServiceResponseAsync(String resourceGroupName, String ruleName)
  name: deleteWithServiceResponseAsync(String resourceGroupName, String ruleName)
  nameWithType: MetricAlertsInner.deleteWithServiceResponseAsync(String resourceGroupName, String ruleName)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the rule. </p>
    name: ruleName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceResponse"></xref> object if successful. </p>
    type: <xref href="Observable%3CServiceResponse%3CVoid%3E%3E?alt=Observable%3CServiceResponse%3CVoid%3E%3E&text=Observable%3CServiceResponse%3CVoid%3E%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Delete an alert rule definition.</p>

    <p></p>
  syntax: public Observable<ServiceResponse<Void>> deleteWithServiceResponseAsync(String resourceGroupName, String ruleName)
  uid: com.microsoft.azure.management.monitor.implementation.MetricAlertsInner.deleteWithServiceResponseAsync(String,String)
- fullName: com.microsoft.azure.management.monitor.implementation.MetricAlertsInner.getByResourceGroup(String resourceGroupName, String ruleName)
  name: getByResourceGroup(String resourceGroupName, String ruleName)
  nameWithType: MetricAlertsInner.getByResourceGroup(String resourceGroupName, String ruleName)
  overridden: com.microsoft.azure.management.resources.fluentcore.collection.InnerSupportsGet.getByResourceGroup(String,String)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the rule. </p>
    name: ruleName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="ErrorResponseException?alt=ErrorResponseException&text=ErrorResponseException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  returns:
    description: <p>the MetricAlertResourceInner object if successful. </p>
    type: <xref href="com.microsoft.azure.management.monitor.implementation.MetricAlertResourceInner?alt=com.microsoft.azure.management.monitor.implementation.MetricAlertResourceInner&text=MetricAlertResourceInner" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Retrieve an alert rule definition.</p>

    <p></p>
  syntax: public MetricAlertResourceInner getByResourceGroup(String resourceGroupName, String ruleName)
  uid: com.microsoft.azure.management.monitor.implementation.MetricAlertsInner.getByResourceGroup(String,String)
- fullName: com.microsoft.azure.management.monitor.implementation.MetricAlertsInner.getByResourceGroupAsync(String resourceGroupName, String ruleName)
  name: getByResourceGroupAsync(String resourceGroupName, String ruleName)
  nameWithType: MetricAlertsInner.getByResourceGroupAsync(String resourceGroupName, String ruleName)
  overridden: com.microsoft.azure.management.resources.fluentcore.collection.InnerSupportsGet.getByResourceGroupAsync(String,String)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the rule. </p>
    name: ruleName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the MetricAlertResourceInner object </p>
    type: Observable&lt;<xref href="com.microsoft.azure.management.monitor.implementation.MetricAlertResourceInner?alt=com.microsoft.azure.management.monitor.implementation.MetricAlertResourceInner&text=MetricAlertResourceInner" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Retrieve an alert rule definition.</p>

    <p></p>
  syntax: public Observable<MetricAlertResourceInner> getByResourceGroupAsync(String resourceGroupName, String ruleName)
  uid: com.microsoft.azure.management.monitor.implementation.MetricAlertsInner.getByResourceGroupAsync(String,String)
- fullName: com.microsoft.azure.management.monitor.implementation.MetricAlertsInner.getByResourceGroupAsync(String resourceGroupName, String ruleName, final ServiceCallback<MetricAlertResourceInner> serviceCallback)
  name: getByResourceGroupAsync(String resourceGroupName, String ruleName, final ServiceCallback<MetricAlertResourceInner> serviceCallback)
  nameWithType: MetricAlertsInner.getByResourceGroupAsync(String resourceGroupName, String ruleName, final ServiceCallback<MetricAlertResourceInner> serviceCallback)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the rule. </p>
    name: ruleName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    name: serviceCallback
    type: final ServiceCallback&lt;<xref href="com.microsoft.azure.management.monitor.implementation.MetricAlertResourceInner?alt=com.microsoft.azure.management.monitor.implementation.MetricAlertResourceInner&text=MetricAlertResourceInner" data-throw-if-not-resolved="False"/>&gt;
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
    type: ServiceFuture&lt;<xref href="com.microsoft.azure.management.monitor.implementation.MetricAlertResourceInner?alt=com.microsoft.azure.management.monitor.implementation.MetricAlertResourceInner&text=MetricAlertResourceInner" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Retrieve an alert rule definition.</p>

    <p></p>
  syntax: public ServiceFuture<MetricAlertResourceInner> getByResourceGroupAsync(String resourceGroupName, String ruleName, final ServiceCallback<MetricAlertResourceInner> serviceCallback)
  uid: com.microsoft.azure.management.monitor.implementation.MetricAlertsInner.getByResourceGroupAsync(String,String,final ServiceCallback<MetricAlertResourceInner>)
- fullName: com.microsoft.azure.management.monitor.implementation.MetricAlertsInner.getByResourceGroupWithServiceResponseAsync(String resourceGroupName, String ruleName)
  name: getByResourceGroupWithServiceResponseAsync(String resourceGroupName, String ruleName)
  nameWithType: MetricAlertsInner.getByResourceGroupWithServiceResponseAsync(String resourceGroupName, String ruleName)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the rule. </p>
    name: ruleName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the MetricAlertResourceInner object </p>
    type: Observable&lt;ServiceResponse&lt;<xref href="com.microsoft.azure.management.monitor.implementation.MetricAlertResourceInner?alt=com.microsoft.azure.management.monitor.implementation.MetricAlertResourceInner&text=MetricAlertResourceInner" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Retrieve an alert rule definition.</p>

    <p></p>
  syntax: public Observable<ServiceResponse<MetricAlertResourceInner>> getByResourceGroupWithServiceResponseAsync(String resourceGroupName, String ruleName)
  uid: com.microsoft.azure.management.monitor.implementation.MetricAlertsInner.getByResourceGroupWithServiceResponseAsync(String,String)
- fullName: com.microsoft.azure.management.monitor.implementation.MetricAlertsInner.list()
  name: list()
  nameWithType: MetricAlertsInner.list()
  overridden: com.microsoft.azure.management.resources.fluentcore.collection.InnerSupportsListing.list()
  returns:
    description: <p>the PagedList&lt;MetricAlertResourceInner&gt; object if successful. </p>
    type: PagedList&lt;<xref href="com.microsoft.azure.management.monitor.implementation.MetricAlertResourceInner?alt=com.microsoft.azure.management.monitor.implementation.MetricAlertResourceInner&text=MetricAlertResourceInner" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Retrieve alert rule definitions in a subscription.</p>

    <p></p>
  syntax: public PagedList<MetricAlertResourceInner> list()
  uid: com.microsoft.azure.management.monitor.implementation.MetricAlertsInner.list()
- fullName: com.microsoft.azure.management.monitor.implementation.MetricAlertsInner.listAsync()
  name: listAsync()
  nameWithType: MetricAlertsInner.listAsync()
  overridden: com.microsoft.azure.management.resources.fluentcore.collection.InnerSupportsListing.listAsync()
  returns:
    description: <p>the observable to the List&lt;MetricAlertResourceInner&gt; object </p>
    type: Observable&lt;Page&lt;<xref href="com.microsoft.azure.management.monitor.implementation.MetricAlertResourceInner?alt=com.microsoft.azure.management.monitor.implementation.MetricAlertResourceInner&text=MetricAlertResourceInner" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Retrieve alert rule definitions in a subscription.</p>

    <p></p>
  syntax: public Observable<Page<MetricAlertResourceInner>> listAsync()
  uid: com.microsoft.azure.management.monitor.implementation.MetricAlertsInner.listAsync()
- fullName: com.microsoft.azure.management.monitor.implementation.MetricAlertsInner.listAsync(final ServiceCallback<List<MetricAlertResourceInner>> serviceCallback)
  name: listAsync(final ServiceCallback<List<MetricAlertResourceInner>> serviceCallback)
  nameWithType: MetricAlertsInner.listAsync(final ServiceCallback<List<MetricAlertResourceInner>> serviceCallback)
  parameters:
  - description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    name: serviceCallback
    type: final ServiceCallback&lt;List&lt;<xref href="com.microsoft.azure.management.monitor.implementation.MetricAlertResourceInner?alt=com.microsoft.azure.management.monitor.implementation.MetricAlertResourceInner&text=MetricAlertResourceInner" data-throw-if-not-resolved="False"/>&gt;&gt;
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
    type: ServiceFuture&lt;List&lt;<xref href="com.microsoft.azure.management.monitor.implementation.MetricAlertResourceInner?alt=com.microsoft.azure.management.monitor.implementation.MetricAlertResourceInner&text=MetricAlertResourceInner" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Retrieve alert rule definitions in a subscription.</p>

    <p></p>
  syntax: public ServiceFuture<List<MetricAlertResourceInner>> listAsync(final ServiceCallback<List<MetricAlertResourceInner>> serviceCallback)
  uid: com.microsoft.azure.management.monitor.implementation.MetricAlertsInner.listAsync(final ServiceCallback<List<MetricAlertResourceInner>>)
- fullName: com.microsoft.azure.management.monitor.implementation.MetricAlertsInner.listByResourceGroup(String resourceGroupName)
  name: listByResourceGroup(String resourceGroupName)
  nameWithType: MetricAlertsInner.listByResourceGroup(String resourceGroupName)
  overridden: com.microsoft.azure.management.resources.fluentcore.collection.InnerSupportsListing.listByResourceGroup(String)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the PagedList&lt;MetricAlertResourceInner&gt; object if successful. </p>
    type: PagedList&lt;<xref href="com.microsoft.azure.management.monitor.implementation.MetricAlertResourceInner?alt=com.microsoft.azure.management.monitor.implementation.MetricAlertResourceInner&text=MetricAlertResourceInner" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Retrieve alert rule definitions in a resource group.</p>

    <p></p>
  syntax: public PagedList<MetricAlertResourceInner> listByResourceGroup(String resourceGroupName)
  uid: com.microsoft.azure.management.monitor.implementation.MetricAlertsInner.listByResourceGroup(String)
- fullName: com.microsoft.azure.management.monitor.implementation.MetricAlertsInner.listByResourceGroupAsync(String resourceGroupName)
  name: listByResourceGroupAsync(String resourceGroupName)
  nameWithType: MetricAlertsInner.listByResourceGroupAsync(String resourceGroupName)
  overridden: com.microsoft.azure.management.resources.fluentcore.collection.InnerSupportsListing.listByResourceGroupAsync(String)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the observable to the List&lt;MetricAlertResourceInner&gt; object </p>
    type: Observable&lt;Page&lt;<xref href="com.microsoft.azure.management.monitor.implementation.MetricAlertResourceInner?alt=com.microsoft.azure.management.monitor.implementation.MetricAlertResourceInner&text=MetricAlertResourceInner" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Retrieve alert rule definitions in a resource group.</p>

    <p></p>
  syntax: public Observable<Page<MetricAlertResourceInner>> listByResourceGroupAsync(String resourceGroupName)
  uid: com.microsoft.azure.management.monitor.implementation.MetricAlertsInner.listByResourceGroupAsync(String)
- fullName: com.microsoft.azure.management.monitor.implementation.MetricAlertsInner.listByResourceGroupAsync(String resourceGroupName, final ServiceCallback<List<MetricAlertResourceInner>> serviceCallback)
  name: listByResourceGroupAsync(String resourceGroupName, final ServiceCallback<List<MetricAlertResourceInner>> serviceCallback)
  nameWithType: MetricAlertsInner.listByResourceGroupAsync(String resourceGroupName, final ServiceCallback<List<MetricAlertResourceInner>> serviceCallback)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    name: serviceCallback
    type: final ServiceCallback&lt;List&lt;<xref href="com.microsoft.azure.management.monitor.implementation.MetricAlertResourceInner?alt=com.microsoft.azure.management.monitor.implementation.MetricAlertResourceInner&text=MetricAlertResourceInner" data-throw-if-not-resolved="False"/>&gt;&gt;
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
    type: ServiceFuture&lt;List&lt;<xref href="com.microsoft.azure.management.monitor.implementation.MetricAlertResourceInner?alt=com.microsoft.azure.management.monitor.implementation.MetricAlertResourceInner&text=MetricAlertResourceInner" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Retrieve alert rule definitions in a resource group.</p>

    <p></p>
  syntax: public ServiceFuture<List<MetricAlertResourceInner>> listByResourceGroupAsync(String resourceGroupName, final ServiceCallback<List<MetricAlertResourceInner>> serviceCallback)
  uid: com.microsoft.azure.management.monitor.implementation.MetricAlertsInner.listByResourceGroupAsync(String,final ServiceCallback<List<MetricAlertResourceInner>>)
- fullName: com.microsoft.azure.management.monitor.implementation.MetricAlertsInner.listByResourceGroupWithServiceResponseAsync(String resourceGroupName)
  name: listByResourceGroupWithServiceResponseAsync(String resourceGroupName)
  nameWithType: MetricAlertsInner.listByResourceGroupWithServiceResponseAsync(String resourceGroupName)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the observable to the List&lt;MetricAlertResourceInner&gt; object </p>
    type: Observable&lt;ServiceResponse&lt;List&lt;<xref href="com.microsoft.azure.management.monitor.implementation.MetricAlertResourceInner?alt=com.microsoft.azure.management.monitor.implementation.MetricAlertResourceInner&text=MetricAlertResourceInner" data-throw-if-not-resolved="False"/>&gt;&gt;&gt;
  summary: >-
    <p>Retrieve alert rule definitions in a resource group.</p>

    <p></p>
  syntax: public Observable<ServiceResponse<List<MetricAlertResourceInner>>> listByResourceGroupWithServiceResponseAsync(String resourceGroupName)
  uid: com.microsoft.azure.management.monitor.implementation.MetricAlertsInner.listByResourceGroupWithServiceResponseAsync(String)
- fullName: com.microsoft.azure.management.monitor.implementation.MetricAlertsInner.listWithServiceResponseAsync()
  name: listWithServiceResponseAsync()
  nameWithType: MetricAlertsInner.listWithServiceResponseAsync()
  returns:
    description: <p>the observable to the List&lt;MetricAlertResourceInner&gt; object </p>
    type: Observable&lt;ServiceResponse&lt;List&lt;<xref href="com.microsoft.azure.management.monitor.implementation.MetricAlertResourceInner?alt=com.microsoft.azure.management.monitor.implementation.MetricAlertResourceInner&text=MetricAlertResourceInner" data-throw-if-not-resolved="False"/>&gt;&gt;&gt;
  summary: >-
    <p>Retrieve alert rule definitions in a subscription.</p>

    <p></p>
  syntax: public Observable<ServiceResponse<List<MetricAlertResourceInner>>> listWithServiceResponseAsync()
  uid: com.microsoft.azure.management.monitor.implementation.MetricAlertsInner.listWithServiceResponseAsync()
- fullName: com.microsoft.azure.management.monitor.implementation.MetricAlertsInner.update(String resourceGroupName, String ruleName, MetricAlertResourcePatch parameters)
  name: update(String resourceGroupName, String ruleName, MetricAlertResourcePatch parameters)
  nameWithType: MetricAlertsInner.update(String resourceGroupName, String ruleName, MetricAlertResourcePatch parameters)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the rule. </p>
    name: ruleName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The parameters of the rule to update. </p>
    name: parameters
    type: <xref href="com.microsoft.azure.management.monitor.MetricAlertResourcePatch?alt=com.microsoft.azure.management.monitor.MetricAlertResourcePatch&text=MetricAlertResourcePatch" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="ErrorResponseException?alt=ErrorResponseException&text=ErrorResponseException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  returns:
    description: <p>the MetricAlertResourceInner object if successful. </p>
    type: <xref href="com.microsoft.azure.management.monitor.implementation.MetricAlertResourceInner?alt=com.microsoft.azure.management.monitor.implementation.MetricAlertResourceInner&text=MetricAlertResourceInner" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Update an metric alert definition.</p>

    <p></p>
  syntax: public MetricAlertResourceInner update(String resourceGroupName, String ruleName, MetricAlertResourcePatch parameters)
  uid: com.microsoft.azure.management.monitor.implementation.MetricAlertsInner.update(String,String,MetricAlertResourcePatch)
- fullName: com.microsoft.azure.management.monitor.implementation.MetricAlertsInner.updateAsync(String resourceGroupName, String ruleName, MetricAlertResourcePatch parameters)
  name: updateAsync(String resourceGroupName, String ruleName, MetricAlertResourcePatch parameters)
  nameWithType: MetricAlertsInner.updateAsync(String resourceGroupName, String ruleName, MetricAlertResourcePatch parameters)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the rule. </p>
    name: ruleName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The parameters of the rule to update. </p>
    name: parameters
    type: <xref href="com.microsoft.azure.management.monitor.MetricAlertResourcePatch?alt=com.microsoft.azure.management.monitor.MetricAlertResourcePatch&text=MetricAlertResourcePatch" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the MetricAlertResourceInner object </p>
    type: Observable&lt;<xref href="com.microsoft.azure.management.monitor.implementation.MetricAlertResourceInner?alt=com.microsoft.azure.management.monitor.implementation.MetricAlertResourceInner&text=MetricAlertResourceInner" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Update an metric alert definition.</p>

    <p></p>
  syntax: public Observable<MetricAlertResourceInner> updateAsync(String resourceGroupName, String ruleName, MetricAlertResourcePatch parameters)
  uid: com.microsoft.azure.management.monitor.implementation.MetricAlertsInner.updateAsync(String,String,MetricAlertResourcePatch)
- fullName: com.microsoft.azure.management.monitor.implementation.MetricAlertsInner.updateAsync(String resourceGroupName, String ruleName, MetricAlertResourcePatch parameters, final ServiceCallback<MetricAlertResourceInner> serviceCallback)
  name: updateAsync(String resourceGroupName, String ruleName, MetricAlertResourcePatch parameters, final ServiceCallback<MetricAlertResourceInner> serviceCallback)
  nameWithType: MetricAlertsInner.updateAsync(String resourceGroupName, String ruleName, MetricAlertResourcePatch parameters, final ServiceCallback<MetricAlertResourceInner> serviceCallback)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the rule. </p>
    name: ruleName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The parameters of the rule to update. </p>
    name: parameters
    type: <xref href="com.microsoft.azure.management.monitor.MetricAlertResourcePatch?alt=com.microsoft.azure.management.monitor.MetricAlertResourcePatch&text=MetricAlertResourcePatch" data-throw-if-not-resolved="False"/>
  - description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    name: serviceCallback
    type: final ServiceCallback&lt;<xref href="com.microsoft.azure.management.monitor.implementation.MetricAlertResourceInner?alt=com.microsoft.azure.management.monitor.implementation.MetricAlertResourceInner&text=MetricAlertResourceInner" data-throw-if-not-resolved="False"/>&gt;
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
    type: ServiceFuture&lt;<xref href="com.microsoft.azure.management.monitor.implementation.MetricAlertResourceInner?alt=com.microsoft.azure.management.monitor.implementation.MetricAlertResourceInner&text=MetricAlertResourceInner" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Update an metric alert definition.</p>

    <p></p>
  syntax: public ServiceFuture<MetricAlertResourceInner> updateAsync(String resourceGroupName, String ruleName, MetricAlertResourcePatch parameters, final ServiceCallback<MetricAlertResourceInner> serviceCallback)
  uid: com.microsoft.azure.management.monitor.implementation.MetricAlertsInner.updateAsync(String,String,MetricAlertResourcePatch,final ServiceCallback<MetricAlertResourceInner>)
- fullName: com.microsoft.azure.management.monitor.implementation.MetricAlertsInner.updateWithServiceResponseAsync(String resourceGroupName, String ruleName, MetricAlertResourcePatch parameters)
  name: updateWithServiceResponseAsync(String resourceGroupName, String ruleName, MetricAlertResourcePatch parameters)
  nameWithType: MetricAlertsInner.updateWithServiceResponseAsync(String resourceGroupName, String ruleName, MetricAlertResourcePatch parameters)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the rule. </p>
    name: ruleName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The parameters of the rule to update. </p>
    name: parameters
    type: <xref href="com.microsoft.azure.management.monitor.MetricAlertResourcePatch?alt=com.microsoft.azure.management.monitor.MetricAlertResourcePatch&text=MetricAlertResourcePatch" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the MetricAlertResourceInner object </p>
    type: Observable&lt;ServiceResponse&lt;<xref href="com.microsoft.azure.management.monitor.implementation.MetricAlertResourceInner?alt=com.microsoft.azure.management.monitor.implementation.MetricAlertResourceInner&text=MetricAlertResourceInner" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Update an metric alert definition.</p>

    <p></p>
  syntax: public Observable<ServiceResponse<MetricAlertResourceInner>> updateWithServiceResponseAsync(String resourceGroupName, String ruleName, MetricAlertResourcePatch parameters)
  uid: com.microsoft.azure.management.monitor.implementation.MetricAlertsInner.updateWithServiceResponseAsync(String,String,MetricAlertResourcePatch)
nameWithType: MetricAlertsInner
syntax: public class MetricAlertsInner implements InnerSupportsGet<MetricAlertResourceInner>,InnerSupportsDelete<Void>,InnerSupportsListing<MetricAlertResourceInner>
type: class
uid: com.microsoft.azure.management.monitor.implementation.MetricAlertsInner
fullName: com.microsoft.azure.management.monitor.implementation.MetricAlertsInner
name: MetricAlertsInner
package: com.microsoft.azure.management.monitor.implementation
summary: <p>An instance of this class provides access to all the operations defined in MetricAlerts. </p>
metadata: {}
