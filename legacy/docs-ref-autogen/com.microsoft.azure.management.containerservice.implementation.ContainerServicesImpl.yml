### YamlMime:JavaType
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
- <xref href="com.microsoft.azure.management.resources.fluentcore.arm.collection.implementation.GroupableResourcesImpl&lt;ContainerService, ContainerServiceImpl, ContainerServiceInner, ContainerServicesInner, ContainerServiceManager&gt;" data-throw-if-not-resolved="False"/>
inheritedMembers:
- com.microsoft.azure.management.resources.fluentcore.collection.SupportsBatchCreation.create(Creatable<ResourceT>...)
- com.microsoft.azure.management.resources.fluentcore.collection.SupportsBatchCreation.create(List<Creatable<ResourceT>>)
- com.microsoft.azure.management.resources.fluentcore.collection.SupportsBatchCreation.createAsync(Creatable<ResourceT>...)
- com.microsoft.azure.management.resources.fluentcore.collection.SupportsBatchCreation.createAsync(List<Creatable<ResourceT>>)
- com.microsoft.azure.management.resources.fluentcore.collection.SupportsBatchCreation.createAsync(ServiceCallback<CreatedResources<ResourceT>>,Creatable<ResourceT>...)
- com.microsoft.azure.management.resources.fluentcore.collection.SupportsBatchCreation.createAsync(final ServiceCallback<CreatedResources<ResourceT>>,List<Creatable<ResourceT>>)
- com.microsoft.azure.management.resources.fluentcore.collection.SupportsDeletingById.deleteById(String)
- com.microsoft.azure.management.resources.fluentcore.collection.SupportsDeletingById.deleteByIdAsync(String,ServiceCallback<Void>)
- com.microsoft.azure.management.resources.fluentcore.collection.SupportsDeletingById.deleteByIdAsync(String)
- com.microsoft.azure.management.resources.fluentcore.arm.collection.SupportsDeletingByResourceGroup.deleteByResourceGroup(String,String)
- com.microsoft.azure.management.resources.fluentcore.arm.collection.SupportsDeletingByResourceGroup.deleteByResourceGroupAsync(String,String,ServiceCallback<Void>)
- com.microsoft.azure.management.resources.fluentcore.arm.collection.SupportsDeletingByResourceGroup.deleteByResourceGroupAsync(String,String)
- com.microsoft.azure.management.resources.fluentcore.arm.collection.SupportsGettingById.getById(String)
- com.microsoft.azure.management.resources.fluentcore.arm.collection.SupportsGettingById.getByIdAsync(String)
- com.microsoft.azure.management.resources.fluentcore.arm.collection.SupportsGettingById.getByIdAsync(String,ServiceCallback<T>)
- com.microsoft.azure.management.resources.fluentcore.arm.collection.SupportsGettingByResourceGroup.getByResourceGroup(String,String)
- com.microsoft.azure.management.resources.fluentcore.arm.collection.SupportsGettingByResourceGroup.getByResourceGroupAsync(String,String)
- com.microsoft.azure.management.resources.fluentcore.arm.collection.SupportsGettingByResourceGroup.getByResourceGroupAsync(String,String,ServiceCallback<T>)
- com.microsoft.azure.management.resources.fluentcore.model.HasInner.inner()
- com.microsoft.azure.management.resources.fluentcore.arm.models.HasManager.manager()
methods:
- fullName: com.microsoft.azure.management.containerservice.implementation.ContainerServicesImpl.define(String name)
  name: define(String name)
  nameWithType: ContainerServicesImpl.define(String name)
  overridden: com.microsoft.azure.management.resources.fluentcore.collection.SupportsCreating.define(String)
  parameters:
  - description: <p>the name of the new resource </p>
    name: name
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the first stage of the new resource definition </p>
    type: <xref href="com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl?alt=com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl&text=ContainerServiceImpl" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Begins a definition for a new resource. </p>

    <p>This is the beginning of the builder pattern used to create top level resources in Azure. The final method completing the definition and starting the actual resource creation process in Azure is <xref uid="com.microsoft.azure.management.resources.fluentcore.model.Creatable.create()" data-throw-if-not-resolved="false" data-raw-source="Creatable#create()"></xref>. </p>

    <p>Note that the <xref uid="com.microsoft.azure.management.resources.fluentcore.model.Creatable.create()" data-throw-if-not-resolved="false" data-raw-source="Creatable#create()"></xref> method is only available at the stage of the resource definition that has the minimum set of input parameters specified. If you do not see <xref uid="com.microsoft.azure.management.resources.fluentcore.model.Creatable.create()" data-throw-if-not-resolved="false" data-raw-source="Creatable#create()"></xref> among the available methods, it means you have not yet specified all the required input settings. Input settings generally begin with the word "with", for example:  and return the next stage of the resource definition, as an interface in the "fluent interface" style. </p>
  syntax: public ContainerServiceImpl define(String name)
  uid: com.microsoft.azure.management.containerservice.implementation.ContainerServicesImpl.define(String)
- fullName: com.microsoft.azure.management.containerservice.implementation.ContainerServicesImpl.deleteInnerAsync(String groupName, String name)
  name: deleteInnerAsync(String groupName, String name)
  nameWithType: ContainerServicesImpl.deleteInnerAsync(String groupName, String name)
  parameters:
  - name: groupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - name: name
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    type: <xref href="Completable?alt=Completable&text=Completable" data-throw-if-not-resolved="False"/>
  syntax: protected Completable deleteInnerAsync(String groupName, String name)
  uid: com.microsoft.azure.management.containerservice.implementation.ContainerServicesImpl.deleteInnerAsync(String,String)
- fullName: com.microsoft.azure.management.containerservice.implementation.ContainerServicesImpl.getInnerAsync(String resourceGroupName, String name)
  name: getInnerAsync(String resourceGroupName, String name)
  nameWithType: ContainerServicesImpl.getInnerAsync(String resourceGroupName, String name)
  parameters:
  - name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - name: name
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    type: Observable&lt;<xref href="com.microsoft.azure.management.containerservice.implementation.ContainerServiceInner?alt=com.microsoft.azure.management.containerservice.implementation.ContainerServiceInner&text=ContainerServiceInner" data-throw-if-not-resolved="False"/>&gt;
  syntax: protected Observable<ContainerServiceInner> getInnerAsync(String resourceGroupName, String name)
  uid: com.microsoft.azure.management.containerservice.implementation.ContainerServicesImpl.getInnerAsync(String,String)
- fullName: com.microsoft.azure.management.containerservice.implementation.ContainerServicesImpl.list()
  name: list()
  nameWithType: ContainerServicesImpl.list()
  overridden: com.microsoft.azure.management.resources.fluentcore.collection.SupportsListing.list()
  returns:
    description: <p>list of resources </p>
    type: PagedList&lt;<xref href="com.microsoft.azure.management.containerservice.ContainerService?alt=com.microsoft.azure.management.containerservice.ContainerService&text=ContainerService" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Lists all the resources of the specified type in the currently selected subscription.</p>

    <p></p>
  syntax: public PagedList<ContainerService> list()
  uid: com.microsoft.azure.management.containerservice.implementation.ContainerServicesImpl.list()
- fullName: com.microsoft.azure.management.containerservice.implementation.ContainerServicesImpl.listAsync()
  name: listAsync()
  nameWithType: ContainerServicesImpl.listAsync()
  overridden: com.microsoft.azure.management.resources.fluentcore.collection.SupportsListing.listAsync()
  returns:
    description: <p>list of resources </p>
    type: Observable&lt;<xref href="com.microsoft.azure.management.containerservice.ContainerService?alt=com.microsoft.azure.management.containerservice.ContainerService&text=ContainerService" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Lists all the resources of the specified type in the currently selected subscription.</p>

    <p></p>
  syntax: public Observable<ContainerService> listAsync()
  uid: com.microsoft.azure.management.containerservice.implementation.ContainerServicesImpl.listAsync()
- fullName: com.microsoft.azure.management.containerservice.implementation.ContainerServicesImpl.listByResourceGroup(String groupName)
  name: listByResourceGroup(String groupName)
  nameWithType: ContainerServicesImpl.listByResourceGroup(String groupName)
  overridden: com.microsoft.azure.management.resources.fluentcore.arm.collection.SupportsListingByResourceGroup.listByResourceGroup(String)
  parameters:
  - description: <p>the name of the resource group to list the resources from </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the list of resources </p>
    type: PagedList&lt;<xref href="com.microsoft.azure.management.containerservice.ContainerService?alt=com.microsoft.azure.management.containerservice.ContainerService&text=ContainerService" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Lists resources of the specified type in the specified resource group.</p>

    <p></p>
  syntax: public PagedList<ContainerService> listByResourceGroup(String groupName)
  uid: com.microsoft.azure.management.containerservice.implementation.ContainerServicesImpl.listByResourceGroup(String)
- fullName: com.microsoft.azure.management.containerservice.implementation.ContainerServicesImpl.listByResourceGroupAsync(String resourceGroupName)
  name: listByResourceGroupAsync(String resourceGroupName)
  nameWithType: ContainerServicesImpl.listByResourceGroupAsync(String resourceGroupName)
  overridden: com.microsoft.azure.management.resources.fluentcore.arm.collection.SupportsListingByResourceGroup.listByResourceGroupAsync(String)
  parameters:
  - description: <p>the name of the resource group to list the resources from </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the list of resources </p>
    type: Observable&lt;<xref href="com.microsoft.azure.management.containerservice.ContainerService?alt=com.microsoft.azure.management.containerservice.ContainerService&text=ContainerService" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Lists resources of the specified type in the specified resource group.</p>

    <p></p>
  syntax: public Observable<ContainerService> listByResourceGroupAsync(String resourceGroupName)
  uid: com.microsoft.azure.management.containerservice.implementation.ContainerServicesImpl.listByResourceGroupAsync(String)
- fullName: com.microsoft.azure.management.containerservice.implementation.ContainerServicesImpl.wrapModel(ContainerServiceInner containerServiceInner)
  name: wrapModel(ContainerServiceInner containerServiceInner)
  nameWithType: ContainerServicesImpl.wrapModel(ContainerServiceInner containerServiceInner)
  parameters:
  - name: containerServiceInner
    type: <xref href="com.microsoft.azure.management.containerservice.implementation.ContainerServiceInner?alt=com.microsoft.azure.management.containerservice.implementation.ContainerServiceInner&text=ContainerServiceInner" data-throw-if-not-resolved="False"/>
  returns:
    type: <xref href="com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl?alt=com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl&text=ContainerServiceImpl" data-throw-if-not-resolved="False"/>
  syntax: protected ContainerServiceImpl wrapModel(ContainerServiceInner containerServiceInner)
  uid: com.microsoft.azure.management.containerservice.implementation.ContainerServicesImpl.wrapModel(ContainerServiceInner)
- fullName: com.microsoft.azure.management.containerservice.implementation.ContainerServicesImpl.wrapModel(String name)
  name: wrapModel(String name)
  nameWithType: ContainerServicesImpl.wrapModel(String name)
  parameters:
  - name: name
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    type: <xref href="com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl?alt=com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl&text=ContainerServiceImpl" data-throw-if-not-resolved="False"/>
  syntax: protected ContainerServiceImpl wrapModel(String name)
  uid: com.microsoft.azure.management.containerservice.implementation.ContainerServicesImpl.wrapModel(String)
nameWithType: ContainerServicesImpl
syntax: public class ContainerServicesImpl implements ContainerServices
type: class
uid: com.microsoft.azure.management.containerservice.implementation.ContainerServicesImpl
fullName: com.microsoft.azure.management.containerservice.implementation.ContainerServicesImpl
name: ContainerServicesImpl
package: com.microsoft.azure.management.containerservice.implementation
summary: <p>The implementation for ContainerServices. </p>
metadata: {}
