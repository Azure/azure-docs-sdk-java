### YamlMime:JavaType
methods:
- fullName: com.microsoft.azure.management.containerregistry.Registry.DefinitionStages.WithSku.withBasicSku()
  name: withBasicSku()
  nameWithType: Registry.DefinitionStages.WithSku.withBasicSku()
  returns:
    description: <p>the next stage of the definition </p>
    type: <xref href="com.microsoft.azure.management.containerregistry.Registry.DefinitionStages.WithCreate?alt=com.microsoft.azure.management.containerregistry.Registry.DefinitionStages.WithCreate&text=Registry.DefinitionStages.WithCreate" data-throw-if-not-resolved="False"/>
  summary: <p>Creates a 'managed' registry with a 'Basic' SKU type. </p>
  syntax: public WithCreate withBasicSku()
  uid: com.microsoft.azure.management.containerregistry.Registry.DefinitionStages.WithSku.withBasicSku()
- fullName: com.microsoft.azure.management.containerregistry.Registry.DefinitionStages.WithSku.withClassicSku()
  name: withClassicSku()
  nameWithType: Registry.DefinitionStages.WithSku.withClassicSku()
  returns:
    description: <p>the next stage of the definition </p>
    type: <xref href="com.microsoft.azure.management.containerregistry.Registry.DefinitionStages.WithStorageAccount?alt=com.microsoft.azure.management.containerregistry.Registry.DefinitionStages.WithStorageAccount&text=Registry.DefinitionStages.WithStorageAccount" data-throw-if-not-resolved="False"/>
  summary: <p>Creates a container registry with a 'Classic' SKU type. </p>
  syntax: public WithStorageAccount withClassicSku()
  uid: com.microsoft.azure.management.containerregistry.Registry.DefinitionStages.WithSku.withClassicSku()
- fullName: com.microsoft.azure.management.containerregistry.Registry.DefinitionStages.WithSku.withPremiumSku()
  name: withPremiumSku()
  nameWithType: Registry.DefinitionStages.WithSku.withPremiumSku()
  returns:
    description: <p>the next stage of the definition </p>
    type: <xref href="com.microsoft.azure.management.containerregistry.Registry.DefinitionStages.WithCreate?alt=com.microsoft.azure.management.containerregistry.Registry.DefinitionStages.WithCreate&text=Registry.DefinitionStages.WithCreate" data-throw-if-not-resolved="False"/>
  summary: <p>Creates a 'managed' registry with a 'Premium' SKU type. </p>
  syntax: public WithCreate withPremiumSku()
  uid: com.microsoft.azure.management.containerregistry.Registry.DefinitionStages.WithSku.withPremiumSku()
- fullName: com.microsoft.azure.management.containerregistry.Registry.DefinitionStages.WithSku.withStandardSku()
  name: withStandardSku()
  nameWithType: Registry.DefinitionStages.WithSku.withStandardSku()
  returns:
    description: <p>the next stage of the definition </p>
    type: <xref href="com.microsoft.azure.management.containerregistry.Registry.DefinitionStages.WithCreate?alt=com.microsoft.azure.management.containerregistry.Registry.DefinitionStages.WithCreate&text=Registry.DefinitionStages.WithCreate" data-throw-if-not-resolved="False"/>
  summary: <p>Creates a 'managed' registry with a 'Standard' SKU type. </p>
  syntax: public WithCreate withStandardSku()
  uid: com.microsoft.azure.management.containerregistry.Registry.DefinitionStages.WithSku.withStandardSku()
nameWithType: Registry.DefinitionStages.WithSku
syntax: public interface WithSku
type: interface
uid: com.microsoft.azure.management.containerregistry.Registry.DefinitionStages.WithSku
fullName: com.microsoft.azure.management.containerregistry.Registry.DefinitionStages.WithSku
name: Registry.DefinitionStages.WithSku
package: com.microsoft.azure.management.containerregistry
summary: <p>The stage of the registry definition allowing to specify the SKU type. </p>
metadata: {}
