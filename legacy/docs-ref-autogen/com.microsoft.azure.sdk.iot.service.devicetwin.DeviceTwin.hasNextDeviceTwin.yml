### YamlMime:JavaMember
nameWithType: DeviceTwin.hasNextDeviceTwin
type: method
members:
- fullName: com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwin.hasNextDeviceTwin(Query deviceTwinQuery)
  name: hasNextDeviceTwin(Query deviceTwinQuery)
  nameWithType: DeviceTwin.hasNextDeviceTwin(Query deviceTwinQuery)
  parameters:
  - description: <p>Query object returned upon creation of query. </p>
    name: deviceTwinQuery
    type: <xref href="com.microsoft.azure.sdk.iot.service.devicetwin.Query?alt=com.microsoft.azure.sdk.iot.service.devicetwin.Query&text=Query" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IotHubException?alt=IotHubException&text=IotHubException" data-throw-if-not-resolved="False"/>
    description: <p>If IotHub could not respond back to the query successfully. </p>
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
    description: <p>If input parameter is incorrect. </p>
  returns:
    description: <p>True if next is available and false other wise. </p>
    type: <xref href="synchronized+boolean?alt=synchronized+boolean&text=synchronized+boolean" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Returns the availability of next twin element upon query. If non was found, Query is sent over again and response is updated accordingly until no response for the query was found.</p>

    <p></p>
  syntax: public synchronized boolean hasNextDeviceTwin(Query deviceTwinQuery)
  uid: com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwin.hasNextDeviceTwin(Query)
uid: com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwin.hasNextDeviceTwin*
fullName: com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwin.hasNextDeviceTwin
name: hasNextDeviceTwin(Query deviceTwinQuery)
package: com.microsoft.azure.sdk.iot.service.devicetwin
metadata: {}
