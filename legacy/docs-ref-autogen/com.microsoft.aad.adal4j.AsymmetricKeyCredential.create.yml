### YamlMime:JavaMember
nameWithType: AsymmetricKeyCredential.create
type: method
members:
- fullName: com.microsoft.aad.adal4j.AsymmetricKeyCredential.create(final String clientId, final InputStream pkcs12Certificate, final String password)
  name: create(final String clientId, final InputStream pkcs12Certificate, final String password)
  nameWithType: AsymmetricKeyCredential.create(final String clientId, final InputStream pkcs12Certificate, final String password)
  parameters:
  - description: <p>Identifier of the client requesting the token. </p>
    name: clientId
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>PKCS12 certificate stream containing public and private key. Caller is responsible for handling the input stream. </p>
    name: pkcs12Certificate
    type: <xref href="final+InputStream?alt=final+InputStream&text=final+InputStream" data-throw-if-not-resolved="False"/>
  - description: <p>certificate password </p>
    name: password
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="KeyStoreException?alt=KeyStoreException&text=KeyStoreException" data-throw-if-not-resolved="False"/>
    description: >-
      <p>

        <xref uid="" data-throw-if-not-resolved="false" data-raw-source="KeyStoreException"></xref>

      </p>
  - type: <xref href="NoSuchProviderException?alt=NoSuchProviderException&text=NoSuchProviderException" data-throw-if-not-resolved="False"/>
    description: >-
      <p>

        <xref uid="" data-throw-if-not-resolved="false" data-raw-source="NoSuchProviderException"></xref>

      </p>
  - type: <xref href="NoSuchAlgorithmException?alt=NoSuchAlgorithmException&text=NoSuchAlgorithmException" data-throw-if-not-resolved="False"/>
    description: >-
      <p>

        <xref uid="" data-throw-if-not-resolved="false" data-raw-source="NoSuchAlgorithmException"></xref>

      </p>
  - type: <xref href="CertificateException?alt=CertificateException&text=CertificateException" data-throw-if-not-resolved="False"/>
    description: >-
      <p>

        <xref uid="" data-throw-if-not-resolved="false" data-raw-source="CertificateException"></xref>

      </p>
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
    description: >-
      <p>

        <xref uid="" data-throw-if-not-resolved="false" data-raw-source="IOException"></xref>

      </p>
  - type: <xref href="UnrecoverableKeyException?alt=UnrecoverableKeyException&text=UnrecoverableKeyException" data-throw-if-not-resolved="False"/>
    description: >-
      <p>

        <xref uid="" data-throw-if-not-resolved="false" data-raw-source="UnrecoverableKeyException"></xref>

      </p>
  returns:
    description: <p>KeyCredential instance </p>
    type: <xref href="com.microsoft.aad.adal4j.AsymmetricKeyCredential?alt=com.microsoft.aad.adal4j.AsymmetricKeyCredential&text=AsymmetricKeyCredential" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Static method to create KeyCredential instance.</p>

    <p></p>
  syntax: public static AsymmetricKeyCredential create(final String clientId, final InputStream pkcs12Certificate, final String password)
  uid: com.microsoft.aad.adal4j.AsymmetricKeyCredential.create(final String,final InputStream,final String)
- fullName: com.microsoft.aad.adal4j.AsymmetricKeyCredential.create(final String clientId, final PrivateKey key, final X509Certificate publicCertificate)
  name: create(final String clientId, final PrivateKey key, final X509Certificate publicCertificate)
  nameWithType: AsymmetricKeyCredential.create(final String clientId, final PrivateKey key, final X509Certificate publicCertificate)
  parameters:
  - description: <p>Identifier of the client requesting the token. </p>
    name: clientId
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>RSA private key to sign the assertion. </p>
    name: key
    type: <xref href="final+PrivateKey?alt=final+PrivateKey&text=final+PrivateKey" data-throw-if-not-resolved="False"/>
  - description: <p>Public certificate used for thumb print. </p>
    name: publicCertificate
    type: <xref href="final+X509Certificate?alt=final+X509Certificate&text=final+X509Certificate" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>KeyCredential instance </p>
    type: <xref href="com.microsoft.aad.adal4j.AsymmetricKeyCredential?alt=com.microsoft.aad.adal4j.AsymmetricKeyCredential&text=AsymmetricKeyCredential" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Static method to create KeyCredential instance.</p>

    <p></p>
  syntax: public static AsymmetricKeyCredential create(final String clientId, final PrivateKey key, final X509Certificate publicCertificate)
  uid: com.microsoft.aad.adal4j.AsymmetricKeyCredential.create(final String,final PrivateKey,final X509Certificate)
uid: com.microsoft.aad.adal4j.AsymmetricKeyCredential.create*
fullName: com.microsoft.aad.adal4j.AsymmetricKeyCredential.create
name: create(final String clientId, final InputStream pkcs12Certificate, final String password)
package: com.microsoft.aad.adal4j
metadata: {}
