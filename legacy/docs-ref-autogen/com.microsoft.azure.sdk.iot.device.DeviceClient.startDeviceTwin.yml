### YamlMime:JavaMember
nameWithType: DeviceClient.startDeviceTwin
type: method
members:
- fullName: com.microsoft.azure.sdk.iot.device.DeviceClient.startDeviceTwin(IotHubEventCallback deviceTwinStatusCallback, Object deviceTwinStatusCallbackContext, PropertyCallBack genericPropertyCallBack, Object genericPropertyCallBackContext)
  name: startDeviceTwin(IotHubEventCallback deviceTwinStatusCallback, Object deviceTwinStatusCallbackContext, PropertyCallBack genericPropertyCallBack, Object genericPropertyCallBackContext)
  nameWithType: DeviceClient.startDeviceTwin(IotHubEventCallback deviceTwinStatusCallback, Object deviceTwinStatusCallbackContext, PropertyCallBack genericPropertyCallBack, Object genericPropertyCallBackContext)
  parameters:
  - description: >-
      <p>the IotHubEventCallback callback for providing the status of Device Twin operations. Cannot be<code>null 

          </code> . </p>
    name: deviceTwinStatusCallback
    type: <xref href="com.microsoft.azure.sdk.iot.device.IotHubEventCallback?alt=com.microsoft.azure.sdk.iot.device.IotHubEventCallback&text=IotHubEventCallback" data-throw-if-not-resolved="False"/>
  - description: >-
      <p>the context to be passed to the status callback. Can be<code>null 

          </code> . </p>
    name: deviceTwinStatusCallbackContext
    type: <xref href="Object?alt=Object&text=Object" data-throw-if-not-resolved="False"/>
  - description: >-
      <p>the PropertyCallBack callback for providing any changes in desired properties. Cannot be<code>null 

          </code> . </p>
    name: genericPropertyCallBack
    type: <xref href="com.microsoft.azure.sdk.iot.device.DeviceTwin.PropertyCallBack?alt=com.microsoft.azure.sdk.iot.device.DeviceTwin.PropertyCallBack&text=PropertyCallBack%3CType1%2CType2%3E" data-throw-if-not-resolved="False"/>
  - description: >-
      <p>the context to be passed to the property callback. Can be<code>null 

          </code> . *</p>
    name: genericPropertyCallBackContext
    type: <xref href="Object?alt=Object&text=Object" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: >-
      <p>if the callback is<code>null 

          </code></p>
  - type: <xref href="UnsupportedOperationException?alt=UnsupportedOperationException&text=UnsupportedOperationException" data-throw-if-not-resolved="False"/>
    description: <p>if called more than once on the same device </p>
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
    description: <p>if called when client is not opened </p>
  summary: >-
    <p>Starts the device twin.</p>

    <p></p>
  syntax: public void startDeviceTwin(IotHubEventCallback deviceTwinStatusCallback, Object deviceTwinStatusCallbackContext, PropertyCallBack genericPropertyCallBack, Object genericPropertyCallBackContext)
  uid: com.microsoft.azure.sdk.iot.device.DeviceClient.startDeviceTwin(IotHubEventCallback,Object,PropertyCallBack,Object)
- fullName: com.microsoft.azure.sdk.iot.device.DeviceClient.startDeviceTwin(IotHubEventCallback deviceTwinStatusCallback, Object deviceTwinStatusCallbackContext, TwinPropertyCallBack genericPropertyCallBack, Object genericPropertyCallBackContext)
  name: startDeviceTwin(IotHubEventCallback deviceTwinStatusCallback, Object deviceTwinStatusCallbackContext, TwinPropertyCallBack genericPropertyCallBack, Object genericPropertyCallBackContext)
  nameWithType: DeviceClient.startDeviceTwin(IotHubEventCallback deviceTwinStatusCallback, Object deviceTwinStatusCallbackContext, TwinPropertyCallBack genericPropertyCallBack, Object genericPropertyCallBackContext)
  parameters:
  - description: >-
      <p>the IotHubEventCallback callback for providing the status of Device Twin operations. Cannot be<code>null 

          </code> . </p>
    name: deviceTwinStatusCallback
    type: <xref href="com.microsoft.azure.sdk.iot.device.IotHubEventCallback?alt=com.microsoft.azure.sdk.iot.device.IotHubEventCallback&text=IotHubEventCallback" data-throw-if-not-resolved="False"/>
  - description: >-
      <p>the context to be passed to the status callback. Can be<code>null 

          </code> . </p>
    name: deviceTwinStatusCallbackContext
    type: <xref href="Object?alt=Object&text=Object" data-throw-if-not-resolved="False"/>
  - description: >-
      <p>the TwinPropertyCallBack callback for providing any changes in desired properties. Cannot be<code>null 

          </code> . </p>
    name: genericPropertyCallBack
    type: <xref href="com.microsoft.azure.sdk.iot.device.DeviceTwin.TwinPropertyCallBack?alt=com.microsoft.azure.sdk.iot.device.DeviceTwin.TwinPropertyCallBack&text=TwinPropertyCallBack" data-throw-if-not-resolved="False"/>
  - description: >-
      <p>the context to be passed to the property callback. Can be<code>null 

          </code> . *</p>
    name: genericPropertyCallBackContext
    type: <xref href="Object?alt=Object&text=Object" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: >-
      <p>if the callback is<code>null 

          </code></p>
  - type: <xref href="UnsupportedOperationException?alt=UnsupportedOperationException&text=UnsupportedOperationException" data-throw-if-not-resolved="False"/>
    description: <p>if called more than once on the same device </p>
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
    description: <p>if called when client is not opened </p>
  summary: >-
    <p>Starts the device twin.</p>

    <p></p>
  syntax: public void startDeviceTwin(IotHubEventCallback deviceTwinStatusCallback, Object deviceTwinStatusCallbackContext, TwinPropertyCallBack genericPropertyCallBack, Object genericPropertyCallBackContext)
  uid: com.microsoft.azure.sdk.iot.device.DeviceClient.startDeviceTwin(IotHubEventCallback,Object,TwinPropertyCallBack,Object)
uid: com.microsoft.azure.sdk.iot.device.DeviceClient.startDeviceTwin*
fullName: com.microsoft.azure.sdk.iot.device.DeviceClient.startDeviceTwin(IotHubEventCallback deviceTwinStatusCallback, Object deviceTwinStatusCallbackContext, PropertyCallBack genericPropertyCallBack, Object genericPropertyCallBackContext)
name: startDeviceTwin(IotHubEventCallback deviceTwinStatusCallback, Object deviceTwinStatusCallbackContext, PropertyCallBack genericPropertyCallBack, Object genericPropertyCallBackContext)
package: com.microsoft.azure.sdk.iot.device
metadata: {}
