### YamlMime:JavaMember
nameWithType: LocationsInner.getQuotasAsync
type: method
members:
- fullName: com.microsoft.azure.management.batch.implementation.LocationsInner.getQuotasAsync(String locationName)
  name: getQuotasAsync(String locationName)
  nameWithType: LocationsInner.getQuotasAsync(String locationName)
  parameters:
  - description: <p>The region for which to retrieve Batch service quotas. </p>
    name: locationName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the BatchLocationQuotaInner object </p>
    type: Observable&lt;<xref href="com.microsoft.azure.management.batch.implementation.BatchLocationQuotaInner?alt=com.microsoft.azure.management.batch.implementation.BatchLocationQuotaInner&text=BatchLocationQuotaInner" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Gets the Batch service quotas for the specified subscription at the given location.</p>

    <p></p>
  syntax: public Observable<BatchLocationQuotaInner> getQuotasAsync(String locationName)
  uid: com.microsoft.azure.management.batch.implementation.LocationsInner.getQuotasAsync(String)
- fullName: com.microsoft.azure.management.batch.implementation.LocationsInner.getQuotasAsync(String locationName, final ServiceCallback<BatchLocationQuotaInner> serviceCallback)
  name: getQuotasAsync(String locationName, final ServiceCallback<BatchLocationQuotaInner> serviceCallback)
  nameWithType: LocationsInner.getQuotasAsync(String locationName, final ServiceCallback<BatchLocationQuotaInner> serviceCallback)
  parameters:
  - description: <p>The region for which to retrieve Batch service quotas. </p>
    name: locationName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    name: serviceCallback
    type: final ServiceCallback&lt;<xref href="com.microsoft.azure.management.batch.implementation.BatchLocationQuotaInner?alt=com.microsoft.azure.management.batch.implementation.BatchLocationQuotaInner&text=BatchLocationQuotaInner" data-throw-if-not-resolved="False"/>&gt;
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
    type: ServiceFuture&lt;<xref href="com.microsoft.azure.management.batch.implementation.BatchLocationQuotaInner?alt=com.microsoft.azure.management.batch.implementation.BatchLocationQuotaInner&text=BatchLocationQuotaInner" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Gets the Batch service quotas for the specified subscription at the given location.</p>

    <p></p>
  syntax: public ServiceFuture<BatchLocationQuotaInner> getQuotasAsync(String locationName, final ServiceCallback<BatchLocationQuotaInner> serviceCallback)
  uid: com.microsoft.azure.management.batch.implementation.LocationsInner.getQuotasAsync(String,final ServiceCallback<BatchLocationQuotaInner>)
uid: com.microsoft.azure.management.batch.implementation.LocationsInner.getQuotasAsync*
fullName: com.microsoft.azure.management.batch.implementation.LocationsInner.getQuotasAsync(String locationName)
name: getQuotasAsync(String locationName)
package: com.microsoft.azure.management.batch.implementation
metadata: {}
