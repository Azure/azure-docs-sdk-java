### YamlMime:JavaMember
nameWithType: BingCustomInstances.search
type: method
members:
- fullName: com.microsoft.azure.cognitiveservices.search.customsearch.BingCustomInstances.search()
  name: search()
  nameWithType: BingCustomInstances.search()
  returns:
    description: <p>the first stage of the search call </p>
    type: <xref href="BingCustomInstancesSearchDefinitionStages.WithCustomConfig?alt=BingCustomInstancesSearchDefinitionStages.WithCustomConfig&text=BingCustomInstancesSearchDefinitionStages.WithCustomConfig" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>The Custom Search API lets you send a search query to Bing and get back web pages found in your custom view of the web.</p>

    <p></p>
  syntax: public BingCustomInstancesSearchDefinitionStages.WithCustomConfig search()
  uid: com.microsoft.azure.cognitiveservices.search.customsearch.BingCustomInstances.search()
- fullName: com.microsoft.azure.cognitiveservices.search.customsearch.BingCustomInstances.search(long customConfig, String query, SearchOptionalParameter searchOptionalParameter)
  name: search(long customConfig, String query, SearchOptionalParameter searchOptionalParameter)
  nameWithType: BingCustomInstances.search(long customConfig, String query, SearchOptionalParameter searchOptionalParameter)
  parameters:
  - description: <p>The identifier for the custom search configuration. </p>
    name: customConfig
    type: <xref href="long?alt=long&text=long" data-throw-if-not-resolved="False"/>
  - description: "<p>The user's search query term. The term may not be empty. The term may contain Bing Advanced Operators. For example, to limit results to a specific domain, use the site: operator. </p>"
    name: query
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the object representing the optional parameters to be set before calling this API </p>
    name: searchOptionalParameter
    type: <xref href="com.microsoft.azure.cognitiveservices.search.customsearch.models.SearchOptionalParameter?alt=com.microsoft.azure.cognitiveservices.search.customsearch.models.SearchOptionalParameter&text=SearchOptionalParameter" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="ErrorResponseException?alt=ErrorResponseException&text=ErrorResponseException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  returns:
    description: <p>the SearchResponse object if successful. </p>
    type: <xref href="com.microsoft.azure.cognitiveservices.search.customsearch.models.SearchResponse?alt=com.microsoft.azure.cognitiveservices.search.customsearch.models.SearchResponse&text=SearchResponse" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>The Custom Search API lets you send a search query to Bing and get back web pages found in your custom view of the web.</p>

    <p></p>
  syntax: public SearchResponse search(long customConfig, String query, SearchOptionalParameter searchOptionalParameter)
  uid: com.microsoft.azure.cognitiveservices.search.customsearch.BingCustomInstances.search(long,String,SearchOptionalParameter)
uid: com.microsoft.azure.cognitiveservices.search.customsearch.BingCustomInstances.search*
fullName: com.microsoft.azure.cognitiveservices.search.customsearch.BingCustomInstances.search()
name: search()
package: com.microsoft.azure.cognitiveservices.search.customsearch
metadata: {}
