### YamlMime:JavaMember
nameWithType: CancellationToken.canBeCancelled
type: method
members:
- fullName: system.fabric.CancellationToken.canBeCancelled()
  name: canBeCancelled()
  nameWithType: CancellationToken.canBeCancelled()
  returns:
    description: <p>Returns true if the token can be cancelled, else false. </p>
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False"/>
  summary: <p>Specifies if the Cancellation token can be cancelled or not. If the <xref uid="" data-throw-if-not-resolved="false">system.fabric.CancellationToken</xref> is created using <xref uid="system.fabric.CancellationTokenSource.getToken()" data-throw-if-not-resolved="false">system.fabric.CancellationTokenSource#getToken()</xref>, then the token can cancelled using <xref uid="system.fabric.CancellationTokenSource.cancel()" data-throw-if-not-resolved="false">system.fabric.CancellationTokenSource#cancel()</xref> method. If the <xref uid="" data-throw-if-not-resolved="false">system.fabric.CancellationToken</xref> is created using <xref uid="system.fabric.CancellationToken.getDefault()" data-throw-if-not-resolved="false">system.fabric.CancellationToken#getDefault()</xref>, then it can not be cancelled. It simply acts as a dummy token. </p>
  syntax: public boolean canBeCancelled()
  uid: system.fabric.CancellationToken.canBeCancelled()
uid: system.fabric.CancellationToken.canBeCancelled*
fullName: system.fabric.CancellationToken.canBeCancelled()
name: canBeCancelled()
package: system.fabric
metadata: {}
