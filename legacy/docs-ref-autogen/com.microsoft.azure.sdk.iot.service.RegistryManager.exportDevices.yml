### YamlMime:JavaMember
nameWithType: RegistryManager.exportDevices
type: method
members:
- fullName: com.microsoft.azure.sdk.iot.service.RegistryManager.exportDevices(JobProperties exportDevicesParameters)
  name: exportDevices(JobProperties exportDevicesParameters)
  nameWithType: RegistryManager.exportDevices(JobProperties exportDevicesParameters)
  parameters:
  - description: <p>A JobProperties object containing input parameters for export Devices job</p>
    name: exportDevicesParameters
    type: <xref href="com.microsoft.azure.sdk.iot.service.JobProperties?alt=com.microsoft.azure.sdk.iot.service.JobProperties&text=JobProperties" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>This exception is thrown if the exportBlobContainerUri or excludeKeys parameters are null </p>
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
    description: <p>This exception is thrown if the IO operation failed </p>
  - type: <xref href="IotHubException?alt=IotHubException&text=IotHubException" data-throw-if-not-resolved="False"/>
    description: <p>This exception is thrown if the response verification failed </p>
  returns:
    description: <p>A JobProperties object for the newly created bulk export job</p>
    type: <xref href="com.microsoft.azure.sdk.iot.service.JobProperties?alt=com.microsoft.azure.sdk.iot.service.JobProperties&text=JobProperties" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Create a bulk export job.</p>

    <p></p>
  syntax: public JobProperties exportDevices(JobProperties exportDevicesParameters)
  uid: com.microsoft.azure.sdk.iot.service.RegistryManager.exportDevices(JobProperties)
- fullName: com.microsoft.azure.sdk.iot.service.RegistryManager.exportDevices(String exportBlobContainerUri, Boolean excludeKeys)
  name: exportDevices(String exportBlobContainerUri, Boolean excludeKeys)
  nameWithType: RegistryManager.exportDevices(String exportBlobContainerUri, Boolean excludeKeys)
  parameters:
  - description: <p>URI containing SAS token to a blob container where export data will be placed </p>
    name: exportBlobContainerUri
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>Whether the devices keys should be excluded from the exported data or not</p>
    name: excludeKeys
    type: <xref href="Boolean?alt=Boolean&text=Boolean" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>This exception is thrown if the exportBlobContainerUri or excludeKeys parameters are null </p>
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
    description: <p>This exception is thrown if the IO operation failed </p>
  - type: <xref href="IotHubException?alt=IotHubException&text=IotHubException" data-throw-if-not-resolved="False"/>
    description: <p>This exception is thrown if the response verification failed </p>
  returns:
    description: <p>A JobProperties object for the newly created bulk export job</p>
    type: <xref href="com.microsoft.azure.sdk.iot.service.JobProperties?alt=com.microsoft.azure.sdk.iot.service.JobProperties&text=JobProperties" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Create a bulk export job.</p>

    <p></p>
  syntax: public JobProperties exportDevices(String exportBlobContainerUri, Boolean excludeKeys)
  uid: com.microsoft.azure.sdk.iot.service.RegistryManager.exportDevices(String,Boolean)
uid: com.microsoft.azure.sdk.iot.service.RegistryManager.exportDevices*
fullName: com.microsoft.azure.sdk.iot.service.RegistryManager.exportDevices(JobProperties exportDevicesParameters)
name: exportDevices(JobProperties exportDevicesParameters)
package: com.microsoft.azure.sdk.iot.service
metadata: {}
