### YamlMime:JavaType
constructors:
- fullName: com.microsoft.azure.sdk.iot.provisioning.device.transport.amqp.AmqpsConnection.AmqpsConnection(String hostName, AmqpDeviceOperations amqpDeviceOperations, SSLContext sslContext, SaslHandler saslHandler, boolean useWebSockets)
  name: AmqpsConnection(String hostName, AmqpDeviceOperations amqpDeviceOperations, SSLContext sslContext, SaslHandler saslHandler, boolean useWebSockets)
  nameWithType: AmqpsConnection.AmqpsConnection(String hostName, AmqpDeviceOperations amqpDeviceOperations, SSLContext sslContext, SaslHandler saslHandler, boolean useWebSockets)
  parameters:
  - description: <p>Name of the AMQP Endpoint </p>
    name: hostName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>Object holding details of the links used in this connection </p>
    name: amqpDeviceOperations
    type: <xref href="com.microsoft.azure.sdk.iot.provisioning.device.transport.amqp.AmqpDeviceOperations?alt=com.microsoft.azure.sdk.iot.provisioning.device.transport.amqp.AmqpDeviceOperations&text=AmqpDeviceOperations" data-throw-if-not-resolved="False"/>
  - description: <p>SSL Context to be set over TLS. </p>
    name: sslContext
    type: <xref href="SSLContext?alt=SSLContext&text=SSLContext" data-throw-if-not-resolved="False"/>
  - description: <p>The sasl frame handler. This may be null if no sasl frames will be exchanged (When using x509 authentication for example) </p>
    name: saslHandler
    type: <xref href="com.microsoft.azure.sdk.iot.provisioning.device.transport.amqp.SaslHandler?alt=com.microsoft.azure.sdk.iot.provisioning.device.transport.amqp.SaslHandler&text=SaslHandler" data-throw-if-not-resolved="False"/>
  - description: <p>WebSockets to be used or disabled. </p>
    name: useWebSockets
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
    description: <p>This exception is thrown if for any reason constructor cannot succeed. </p>
  summary: <p>Constructor for the Amqp library </p>
  syntax: public AmqpsConnection(String hostName, AmqpDeviceOperations amqpDeviceOperations, SSLContext sslContext, SaslHandler saslHandler, boolean useWebSockets)
  uid: com.microsoft.azure.sdk.iot.provisioning.device.transport.amqp.AmqpsConnection.AmqpsConnection(String,AmqpDeviceOperations,SSLContext,SaslHandler,boolean)
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
- <xref href="BaseHandler" data-throw-if-not-resolved="False"/>
- <xref href="com.microsoft.azure.sdk.iot.provisioning.device.transport.amqp.ErrorLoggingBaseHandler" data-throw-if-not-resolved="False"/>
- <xref href="com.microsoft.azure.sdk.iot.provisioning.device.transport.amqp.ErrorLoggingBaseHandlerWithCleanup?alt=com.microsoft.azure.sdk.iot.provisioning.device.transport.amqp.ErrorLoggingBaseHandlerWithCleanup&text=ErrorLoggingBaseHandlerWithCleanup" data-throw-if-not-resolved="False"/>
inheritedMembers:
- com.microsoft.azure.sdk.iot.provisioning.device.transport.amqp.ErrorLoggingBaseHandlerWithCleanup.onConnectionLocalClose(Event)
- com.microsoft.azure.sdk.iot.provisioning.device.transport.amqp.ErrorLoggingBaseHandlerWithCleanup.onConnectionLocalOpen(Event)
- com.microsoft.azure.sdk.iot.provisioning.device.transport.amqp.ErrorLoggingBaseHandlerWithCleanup.onConnectionRemoteClose(Event)
- com.microsoft.azure.sdk.iot.provisioning.device.transport.amqp.ErrorLoggingBaseHandlerWithCleanup.onConnectionRemoteOpen(Event)
- com.microsoft.azure.sdk.iot.provisioning.device.transport.amqp.ErrorLoggingBaseHandlerWithCleanup.onLinkLocalClose(Event)
- com.microsoft.azure.sdk.iot.provisioning.device.transport.amqp.ErrorLoggingBaseHandlerWithCleanup.onLinkLocalOpen(Event)
- com.microsoft.azure.sdk.iot.provisioning.device.transport.amqp.ErrorLoggingBaseHandlerWithCleanup.onLinkRemoteClose(Event)
- com.microsoft.azure.sdk.iot.provisioning.device.transport.amqp.ErrorLoggingBaseHandlerWithCleanup.onSessionLocalClose(Event)
- com.microsoft.azure.sdk.iot.provisioning.device.transport.amqp.ErrorLoggingBaseHandlerWithCleanup.onSessionLocalOpen(Event)
- com.microsoft.azure.sdk.iot.provisioning.device.transport.amqp.ErrorLoggingBaseHandlerWithCleanup.onSessionRemoteClose(Event)
- com.microsoft.azure.sdk.iot.provisioning.device.transport.amqp.ErrorLoggingBaseHandlerWithCleanup.onSessionRemoteOpen(Event)
- com.microsoft.azure.sdk.iot.provisioning.device.transport.amqp.ErrorLoggingBaseHandler.protonJExceptionParser
methods:
- fullName: com.microsoft.azure.sdk.iot.provisioning.device.transport.amqp.AmqpsConnection.close()
  name: close()
  nameWithType: AmqpsConnection.close()
  exceptions:
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
    description: <p>If connection could not be closed. </p>
  summary: <p>Closes the connection </p>
  syntax: public void close()
  uid: com.microsoft.azure.sdk.iot.provisioning.device.transport.amqp.AmqpsConnection.close()
- fullName: com.microsoft.azure.sdk.iot.provisioning.device.transport.amqp.AmqpsConnection.getConnectionId()
  name: getConnectionId()
  nameWithType: AmqpsConnection.getConnectionId()
  returns:
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  syntax: public String getConnectionId()
  uid: com.microsoft.azure.sdk.iot.provisioning.device.transport.amqp.AmqpsConnection.getConnectionId()
- fullName: com.microsoft.azure.sdk.iot.provisioning.device.transport.amqp.AmqpsConnection.getHostName()
  name: getHostName()
  nameWithType: AmqpsConnection.getHostName()
  returns:
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  syntax: public String getHostName()
  uid: com.microsoft.azure.sdk.iot.provisioning.device.transport.amqp.AmqpsConnection.getHostName()
- fullName: com.microsoft.azure.sdk.iot.provisioning.device.transport.amqp.AmqpsConnection.isConnected()
  name: isConnected()
  nameWithType: AmqpsConnection.isConnected()
  returns:
    description: <p>status of the connection </p>
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False"/>
  summary: <p>Returns the status of the connection </p>
  syntax: public boolean isConnected()
  uid: com.microsoft.azure.sdk.iot.provisioning.device.transport.amqp.AmqpsConnection.isConnected()
- fullName: com.microsoft.azure.sdk.iot.provisioning.device.transport.amqp.AmqpsConnection.onConnectionBound(Event event)
  name: onConnectionBound(Event event)
  nameWithType: AmqpsConnection.onConnectionBound(Event event)
  parameters:
  - name: event
    type: <xref href="Event?alt=Event&text=Event" data-throw-if-not-resolved="False"/>
  syntax: public void onConnectionBound(Event event)
  uid: com.microsoft.azure.sdk.iot.provisioning.device.transport.amqp.AmqpsConnection.onConnectionBound(Event)
- fullName: com.microsoft.azure.sdk.iot.provisioning.device.transport.amqp.AmqpsConnection.onConnectionInit(Event event)
  name: onConnectionInit(Event event)
  nameWithType: AmqpsConnection.onConnectionInit(Event event)
  parameters:
  - description: <p>The Proton Event object. </p>
    name: event
    type: <xref href="Event?alt=Event&text=Event" data-throw-if-not-resolved="False"/>
  summary: <p>Event handler for the connection init event </p>
  syntax: public void onConnectionInit(Event event)
  uid: com.microsoft.azure.sdk.iot.provisioning.device.transport.amqp.AmqpsConnection.onConnectionInit(Event)
- fullName: com.microsoft.azure.sdk.iot.provisioning.device.transport.amqp.AmqpsConnection.onConnectionUnbound(Event event)
  name: onConnectionUnbound(Event event)
  nameWithType: AmqpsConnection.onConnectionUnbound(Event event)
  parameters:
  - name: event
    type: <xref href="Event?alt=Event&text=Event" data-throw-if-not-resolved="False"/>
  syntax: public void onConnectionUnbound(Event event)
  uid: com.microsoft.azure.sdk.iot.provisioning.device.transport.amqp.AmqpsConnection.onConnectionUnbound(Event)
- fullName: com.microsoft.azure.sdk.iot.provisioning.device.transport.amqp.AmqpsConnection.onDelivery(Event event)
  name: onDelivery(Event event)
  nameWithType: AmqpsConnection.onDelivery(Event event)
  parameters:
  - description: <p>The Proton Event object. </p>
    name: event
    type: <xref href="Event?alt=Event&text=Event" data-throw-if-not-resolved="False"/>
  summary: <p>Event handler for the delivery event. This method handles both sending and receiving a message. </p>
  syntax: public void onDelivery(Event event)
  uid: com.microsoft.azure.sdk.iot.provisioning.device.transport.amqp.AmqpsConnection.onDelivery(Event)
- fullName: com.microsoft.azure.sdk.iot.provisioning.device.transport.amqp.AmqpsConnection.onLinkFlow(Event event)
  name: onLinkFlow(Event event)
  nameWithType: AmqpsConnection.onLinkFlow(Event event)
  parameters:
  - description: <p>The Proton Event object. </p>
    name: event
    type: <xref href="Event?alt=Event&text=Event" data-throw-if-not-resolved="False"/>
  summary: <p>Event handler for the link flow event. Handles sending a single message. </p>
  syntax: public void onLinkFlow(Event event)
  uid: com.microsoft.azure.sdk.iot.provisioning.device.transport.amqp.AmqpsConnection.onLinkFlow(Event)
- fullName: com.microsoft.azure.sdk.iot.provisioning.device.transport.amqp.AmqpsConnection.onLinkInit(Event event)
  name: onLinkInit(Event event)
  nameWithType: AmqpsConnection.onLinkInit(Event event)
  parameters:
  - description: <p>The Proton Event object. </p>
    name: event
    type: <xref href="Event?alt=Event&text=Event" data-throw-if-not-resolved="False"/>
  summary: <p>Event handler for the link init event. Sets the proper target address on the link. </p>
  syntax: public void onLinkInit(Event event)
  uid: com.microsoft.azure.sdk.iot.provisioning.device.transport.amqp.AmqpsConnection.onLinkInit(Event)
- fullName: com.microsoft.azure.sdk.iot.provisioning.device.transport.amqp.AmqpsConnection.onLinkRemoteOpen(Event event)
  name: onLinkRemoteOpen(Event event)
  nameWithType: AmqpsConnection.onLinkRemoteOpen(Event event)
  parameters:
  - description: <p>The Proton Event object. </p>
    name: event
    type: <xref href="Event?alt=Event&text=Event" data-throw-if-not-resolved="False"/>
  summary: <p>Event handler for the link remote open event. This signifies that the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="org.apache.qpid.proton.reactor.Reactor"></xref> is ready, so we set the connection to OPEN. </p>
  syntax: public void onLinkRemoteOpen(Event event)
  uid: com.microsoft.azure.sdk.iot.provisioning.device.transport.amqp.AmqpsConnection.onLinkRemoteOpen(Event)
- fullName: com.microsoft.azure.sdk.iot.provisioning.device.transport.amqp.AmqpsConnection.onReactorFinal(Event event)
  name: onReactorFinal(Event event)
  nameWithType: AmqpsConnection.onReactorFinal(Event event)
  parameters:
  - name: event
    type: <xref href="Event?alt=Event&text=Event" data-throw-if-not-resolved="False"/>
  syntax: public void onReactorFinal(Event event)
  uid: com.microsoft.azure.sdk.iot.provisioning.device.transport.amqp.AmqpsConnection.onReactorFinal(Event)
- fullName: com.microsoft.azure.sdk.iot.provisioning.device.transport.amqp.AmqpsConnection.onReactorInit(Event event)
  name: onReactorInit(Event event)
  nameWithType: AmqpsConnection.onReactorInit(Event event)
  parameters:
  - description: <p>Proton Event object </p>
    name: event
    type: <xref href="Event?alt=Event&text=Event" data-throw-if-not-resolved="False"/>
  summary: <p>Event handler for reactor init event. </p>
  syntax: public void onReactorInit(Event event)
  uid: com.microsoft.azure.sdk.iot.provisioning.device.transport.amqp.AmqpsConnection.onReactorInit(Event)
- fullName: com.microsoft.azure.sdk.iot.provisioning.device.transport.amqp.AmqpsConnection.onTransportError(Event event)
  name: onTransportError(Event event)
  nameWithType: AmqpsConnection.onTransportError(Event event)
  parameters:
  - description: <p>The Proton Event object. </p>
    name: event
    type: <xref href="Event?alt=Event&text=Event" data-throw-if-not-resolved="False"/>
  summary: <p>Event handler for the transport error event. This triggers reconnection attempts until successful. </p>
  syntax: public void onTransportError(Event event)
  uid: com.microsoft.azure.sdk.iot.provisioning.device.transport.amqp.AmqpsConnection.onTransportError(Event)
- fullName: com.microsoft.azure.sdk.iot.provisioning.device.transport.amqp.AmqpsConnection.onTransportHeadClosed(Event event)
  name: onTransportHeadClosed(Event event)
  nameWithType: AmqpsConnection.onTransportHeadClosed(Event event)
  parameters:
  - name: event
    type: <xref href="Event?alt=Event&text=Event" data-throw-if-not-resolved="False"/>
  syntax: public void onTransportHeadClosed(Event event)
  uid: com.microsoft.azure.sdk.iot.provisioning.device.transport.amqp.AmqpsConnection.onTransportHeadClosed(Event)
- fullName: com.microsoft.azure.sdk.iot.provisioning.device.transport.amqp.AmqpsConnection.open()
  name: open()
  nameWithType: AmqpsConnection.open()
  exceptions:
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
    description: <p>If connection could not be opened. </p>
  summary: <p>Opens the connection. </p>
  syntax: public void open()
  uid: com.microsoft.azure.sdk.iot.provisioning.device.transport.amqp.AmqpsConnection.open()
- fullName: com.microsoft.azure.sdk.iot.provisioning.device.transport.amqp.AmqpsConnection.openAmqpAsync()
  name: openAmqpAsync()
  nameWithType: AmqpsConnection.openAmqpAsync()
  summary: <p>Spawns another thread that attempts to open the AMQP connection. Use <xref uid="com.microsoft.azure.sdk.iot.provisioning.device.transport.amqp.AmqpsConnection.isConnected()" data-throw-if-not-resolved="false" data-raw-source="isConnected()"></xref> to check when this operation has succeeded. Do not attempt to send messages before this connection has been opened </p>
  syntax: public void openAmqpAsync()
  uid: com.microsoft.azure.sdk.iot.provisioning.device.transport.amqp.AmqpsConnection.openAmqpAsync()
- fullName: com.microsoft.azure.sdk.iot.provisioning.device.transport.amqp.AmqpsConnection.sendAmqpMessage(AmqpMessage message)
  name: sendAmqpMessage(AmqpMessage message)
  nameWithType: AmqpsConnection.sendAmqpMessage(AmqpMessage message)
  parameters:
  - description: <p>Message to be sent </p>
    name: message
    type: <xref href="com.microsoft.azure.sdk.iot.provisioning.device.transport.amqp.AmqpMessage?alt=com.microsoft.azure.sdk.iot.provisioning.device.transport.amqp.AmqpMessage&text=AmqpMessage" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
    description: <p>If message could not be sent. </p>
  returns:
    description: <p>true if message was sent successfully, false other wise. </p>
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False"/>
  summary: <p>Send message to the Amqp Endpoint </p>
  syntax: public boolean sendAmqpMessage(AmqpMessage message)
  uid: com.microsoft.azure.sdk.iot.provisioning.device.transport.amqp.AmqpsConnection.sendAmqpMessage(AmqpMessage)
- fullName: com.microsoft.azure.sdk.iot.provisioning.device.transport.amqp.AmqpsConnection.setListener(AmqpListener listener)
  name: setListener(AmqpListener listener)
  nameWithType: AmqpsConnection.setListener(AmqpListener listener)
  parameters:
  - description: <p>Listener to be used for this connection. </p>
    name: listener
    type: <xref href="com.microsoft.azure.sdk.iot.provisioning.device.transport.amqp.AmqpListener?alt=com.microsoft.azure.sdk.iot.provisioning.device.transport.amqp.AmqpListener&text=AmqpListener" data-throw-if-not-resolved="False"/>
  summary: <p>Sets the listener for this connection. </p>
  syntax: public void setListener(AmqpListener listener)
  uid: com.microsoft.azure.sdk.iot.provisioning.device.transport.amqp.AmqpsConnection.setListener(AmqpListener)
nameWithType: AmqpsConnection
syntax: public class AmqpsConnection extends ErrorLoggingBaseHandlerWithCleanup
type: class
uid: com.microsoft.azure.sdk.iot.provisioning.device.transport.amqp.AmqpsConnection
fullName: com.microsoft.azure.sdk.iot.provisioning.device.transport.amqp.AmqpsConnection
name: AmqpsConnection
package: com.microsoft.azure.sdk.iot.provisioning.device.transport.amqp
metadata: {}
