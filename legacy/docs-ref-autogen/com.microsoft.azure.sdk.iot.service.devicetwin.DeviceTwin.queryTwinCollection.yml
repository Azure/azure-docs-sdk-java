### YamlMime:JavaMember
nameWithType: DeviceTwin.queryTwinCollection
type: method
members:
- fullName: com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwin.queryTwinCollection(String sqlQuery)
  name: queryTwinCollection(String sqlQuery)
  nameWithType: DeviceTwin.queryTwinCollection(String sqlQuery)
  parameters:
  - description: <p>the sql query to run </p>
    name: sqlQuery
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="MalformedURLException?alt=MalformedURLException&text=MalformedURLException" data-throw-if-not-resolved="False"/>
    description: <p>If twin query url is not correct </p>
  returns:
    description: <p>the created QueryCollection object that can be used to query the service </p>
    type: synchronized <xref href="com.microsoft.azure.sdk.iot.service.devicetwin.QueryCollection?alt=com.microsoft.azure.sdk.iot.service.devicetwin.QueryCollection&text=QueryCollection" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Create a QueryCollection object that can be used to query whole pages of results at a time. QueryCollection objects also allow you to provide a continuation token for the query to pick up from</p>

    <p></p>
  syntax: public synchronized QueryCollection queryTwinCollection(String sqlQuery)
  uid: com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwin.queryTwinCollection(String)
- fullName: com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwin.queryTwinCollection(String sqlQuery, Integer pageSize)
  name: queryTwinCollection(String sqlQuery, Integer pageSize)
  nameWithType: DeviceTwin.queryTwinCollection(String sqlQuery, Integer pageSize)
  parameters:
  - description: <p>the sql query to run </p>
    name: sqlQuery
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the number of results to return at a time </p>
    name: pageSize
    type: <xref href="Integer?alt=Integer&text=Integer" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="MalformedURLException?alt=MalformedURLException&text=MalformedURLException" data-throw-if-not-resolved="False"/>
    description: <p>If twin query url is not correct </p>
  returns:
    description: <p>the created QueryCollection object that can be used to query the service </p>
    type: synchronized <xref href="com.microsoft.azure.sdk.iot.service.devicetwin.QueryCollection?alt=com.microsoft.azure.sdk.iot.service.devicetwin.QueryCollection&text=QueryCollection" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Create a QueryCollection object that can be used to query whole pages of results at a time. QueryCollection objects also allow you to provide a continuation token for the query to pick up from</p>

    <p></p>
  syntax: public synchronized QueryCollection queryTwinCollection(String sqlQuery, Integer pageSize)
  uid: com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwin.queryTwinCollection(String,Integer)
uid: com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwin.queryTwinCollection*
fullName: com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwin.queryTwinCollection(String sqlQuery)
name: queryTwinCollection(String sqlQuery)
package: com.microsoft.azure.sdk.iot.service.devicetwin
metadata: {}
