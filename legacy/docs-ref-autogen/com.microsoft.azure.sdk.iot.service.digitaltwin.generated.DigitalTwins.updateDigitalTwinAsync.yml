### YamlMime:JavaMember
nameWithType: DigitalTwins.updateDigitalTwinAsync
type: method
members:
- fullName: com.microsoft.azure.sdk.iot.service.digitaltwin.generated.DigitalTwins.updateDigitalTwinAsync(String id, List<Object> digitalTwinPatch)
  name: updateDigitalTwinAsync(String id, List<Object> digitalTwinPatch)
  nameWithType: DigitalTwins.updateDigitalTwinAsync(String id, List<Object> digitalTwinPatch)
  parameters:
  - description: <p>Digital Twin ID. </p>
    name: id
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>json-patch contents to update. </p>
    name: digitalTwinPatch
    type: <xref href="List%3CObject%3E?alt=List%3CObject%3E&text=List%3CObject%3E" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceResponseWithHeaders"></xref> object if successful. </p>
    type: <xref href="Observable%3CVoid%3E?alt=Observable%3CVoid%3E&text=Observable%3CVoid%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Updates a digital twin.</p>

    <p></p>
  syntax: public Observable<Void> updateDigitalTwinAsync(String id, List<Object> digitalTwinPatch)
  uid: com.microsoft.azure.sdk.iot.service.digitaltwin.generated.DigitalTwins.updateDigitalTwinAsync(String,List<Object>)
- fullName: com.microsoft.azure.sdk.iot.service.digitaltwin.generated.DigitalTwins.updateDigitalTwinAsync(String id, List<Object> digitalTwinPatch, final ServiceCallback<Void> serviceCallback)
  name: updateDigitalTwinAsync(String id, List<Object> digitalTwinPatch, final ServiceCallback<Void> serviceCallback)
  nameWithType: DigitalTwins.updateDigitalTwinAsync(String id, List<Object> digitalTwinPatch, final ServiceCallback<Void> serviceCallback)
  parameters:
  - description: <p>Digital Twin ID. </p>
    name: id
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>json-patch contents to update. </p>
    name: digitalTwinPatch
    type: <xref href="List%3CObject%3E?alt=List%3CObject%3E&text=List%3CObject%3E" data-throw-if-not-resolved="False"/>
  - description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    name: serviceCallback
    type: <xref href="final+ServiceCallback%3CVoid%3E?alt=final+ServiceCallback%3CVoid%3E&text=final+ServiceCallback%3CVoid%3E" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
    type: <xref href="ServiceFuture%3CVoid%3E?alt=ServiceFuture%3CVoid%3E&text=ServiceFuture%3CVoid%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Updates a digital twin.</p>

    <p></p>
  syntax: public ServiceFuture<Void> updateDigitalTwinAsync(String id, List<Object> digitalTwinPatch, final ServiceCallback<Void> serviceCallback)
  uid: com.microsoft.azure.sdk.iot.service.digitaltwin.generated.DigitalTwins.updateDigitalTwinAsync(String,List<Object>,final ServiceCallback<Void>)
- fullName: com.microsoft.azure.sdk.iot.service.digitaltwin.generated.DigitalTwins.updateDigitalTwinAsync(String id, List<Object> digitalTwinPatch, String ifMatch)
  name: updateDigitalTwinAsync(String id, List<Object> digitalTwinPatch, String ifMatch)
  nameWithType: DigitalTwins.updateDigitalTwinAsync(String id, List<Object> digitalTwinPatch, String ifMatch)
  parameters:
  - description: <p>Digital Twin ID. </p>
    name: id
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>json-patch contents to update. </p>
    name: digitalTwinPatch
    type: <xref href="List%3CObject%3E?alt=List%3CObject%3E&text=List%3CObject%3E" data-throw-if-not-resolved="False"/>
  - description: <p>the String value </p>
    name: ifMatch
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceResponseWithHeaders"></xref> object if successful. </p>
    type: <xref href="Observable%3CVoid%3E?alt=Observable%3CVoid%3E&text=Observable%3CVoid%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Updates a digital twin.</p>

    <p></p>
  syntax: public Observable<Void> updateDigitalTwinAsync(String id, List<Object> digitalTwinPatch, String ifMatch)
  uid: com.microsoft.azure.sdk.iot.service.digitaltwin.generated.DigitalTwins.updateDigitalTwinAsync(String,List<Object>,String)
- fullName: com.microsoft.azure.sdk.iot.service.digitaltwin.generated.DigitalTwins.updateDigitalTwinAsync(String id, List<Object> digitalTwinPatch, String ifMatch, final ServiceCallback<Void> serviceCallback)
  name: updateDigitalTwinAsync(String id, List<Object> digitalTwinPatch, String ifMatch, final ServiceCallback<Void> serviceCallback)
  nameWithType: DigitalTwins.updateDigitalTwinAsync(String id, List<Object> digitalTwinPatch, String ifMatch, final ServiceCallback<Void> serviceCallback)
  parameters:
  - description: <p>Digital Twin ID. </p>
    name: id
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>json-patch contents to update. </p>
    name: digitalTwinPatch
    type: <xref href="List%3CObject%3E?alt=List%3CObject%3E&text=List%3CObject%3E" data-throw-if-not-resolved="False"/>
  - description: <p>the String value </p>
    name: ifMatch
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    name: serviceCallback
    type: <xref href="final+ServiceCallback%3CVoid%3E?alt=final+ServiceCallback%3CVoid%3E&text=final+ServiceCallback%3CVoid%3E" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
    type: <xref href="ServiceFuture%3CVoid%3E?alt=ServiceFuture%3CVoid%3E&text=ServiceFuture%3CVoid%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Updates a digital twin.</p>

    <p></p>
  syntax: public ServiceFuture<Void> updateDigitalTwinAsync(String id, List<Object> digitalTwinPatch, String ifMatch, final ServiceCallback<Void> serviceCallback)
  uid: com.microsoft.azure.sdk.iot.service.digitaltwin.generated.DigitalTwins.updateDigitalTwinAsync(String,List<Object>,String,final ServiceCallback<Void>)
uid: com.microsoft.azure.sdk.iot.service.digitaltwin.generated.DigitalTwins.updateDigitalTwinAsync*
fullName: com.microsoft.azure.sdk.iot.service.digitaltwin.generated.DigitalTwins.updateDigitalTwinAsync
name: updateDigitalTwinAsync(String id, List<Object> digitalTwinPatch)
package: com.microsoft.azure.sdk.iot.service.digitaltwin.generated
metadata: {}
