### YamlMime:JavaMember
nameWithType: KeyVaultKey.unwrapKeyAsync
type: method
members:
- fullName: com.microsoft.azure.keyvault.extensions.KeyVaultKey.unwrapKeyAsync(byte[] ciphertext, String algorithm)
  name: unwrapKeyAsync(byte[] ciphertext, String algorithm)
  nameWithType: KeyVaultKey.unwrapKeyAsync(byte[] ciphertext, String algorithm)
  overridden: com.microsoft.azure.keyvault.core.IKey.unwrapKeyAsync(final byte [],final String)
  parameters:
  - description: <p>The encrypted key to decrypt </p>
    name: encryptedKey
    type: <xref href="byte+%5B%5D?alt=byte+%5B%5D&text=byte+%5B%5D" data-throw-if-not-resolved="False"/>
  - description: <p>The algorithm to use, must be supplied </p>
    name: algorithm
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="NoSuchAlgorithmException?alt=NoSuchAlgorithmException&text=NoSuchAlgorithmException" data-throw-if-not-resolved="False"/>
    description: <p>the algorithm is not valid </p>
  returns:
    description: <p>A ListenableFuture containing the unwrapped key </p>
    type: <xref href="ListenableFuture%3Cbyte%5B%5D%3E?alt=ListenableFuture%3Cbyte%5B%5D%3E&text=ListenableFuture%3Cbyte%5B%5D%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Unwraps (decrypts) the specified encryped key material.</p>

    <p></p>
  syntax: public ListenableFuture<byte[]> unwrapKeyAsync(byte[] ciphertext, String algorithm)
  uid: com.microsoft.azure.keyvault.extensions.KeyVaultKey.unwrapKeyAsync(byte [],String)
uid: com.microsoft.azure.keyvault.extensions.KeyVaultKey.unwrapKeyAsync*
fullName: com.microsoft.azure.keyvault.extensions.KeyVaultKey.unwrapKeyAsync
name: unwrapKeyAsync(byte[] ciphertext, String algorithm)
package: com.microsoft.azure.keyvault.extensions
metadata: {}
