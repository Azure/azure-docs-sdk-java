### YamlMime:JavaType
constructors:
- fullName: com.microsoft.azure.sdk.iot.device.Message.Message()
  name: Message()
  nameWithType: Message.Message()
  summary: <p>Constructor. </p>
  syntax: public Message()
  uid: com.microsoft.azure.sdk.iot.device.Message.Message()
- fullName: com.microsoft.azure.sdk.iot.device.Message.Message(byte[] body)
  name: Message(byte[] body)
  nameWithType: Message.Message(byte[] body)
  parameters:
  - description: <p>The body of the new Message instance. </p>
    name: body
    type: <xref href="byte+%5B%5D?alt=byte+%5B%5D&text=byte+%5B%5D" data-throw-if-not-resolved="False"/>
  summary: <p>Constructor. </p>
  syntax: public Message(byte[] body)
  uid: com.microsoft.azure.sdk.iot.device.Message.Message(byte [])
- fullName: com.microsoft.azure.sdk.iot.device.Message.Message(String body)
  name: Message(String body)
  nameWithType: Message.Message(String body)
  parameters:
  - description: <p>The body of the new Message instance. It is internally serialized to a byte array using UTF-8 encoding. </p>
    name: body
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: <p>Constructor. </p>
  syntax: public Message(String body)
  uid: com.microsoft.azure.sdk.iot.device.Message.Message(String)
fields:
- field:
    type: <xref href="final+Charset?alt=final+Charset&text=final+Charset" data-throw-if-not-resolved="False"/>
  fullName: com.microsoft.azure.sdk.iot.device.Message.DEFAULT_IOTHUB_MESSAGE_CHARSET
  name: DEFAULT_IOTHUB_MESSAGE_CHARSET
  nameWithType: Message.DEFAULT_IOTHUB_MESSAGE_CHARSET
  syntax: public static final Charset DEFAULT_IOTHUB_MESSAGE_CHARSET= StandardCharsets.UTF_8
  uid: com.microsoft.azure.sdk.iot.device.Message.DEFAULT_IOTHUB_MESSAGE_CHARSET
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
methods:
- fullName: com.microsoft.azure.sdk.iot.device.Message.getBodyStream()
  name: getBodyStream()
  nameWithType: Message.getBodyStream()
  returns:
    description: <p>always returns null. </p>
    type: <xref href="ByteArrayOutputStream?alt=ByteArrayOutputStream&text=ByteArrayOutputStream" data-throw-if-not-resolved="False"/>
  summary: <p>The stream content of the body. </p>
  syntax: public ByteArrayOutputStream getBodyStream()
  uid: com.microsoft.azure.sdk.iot.device.Message.getBodyStream()
- fullName: com.microsoft.azure.sdk.iot.device.Message.getBytes()
  name: getBytes()
  nameWithType: Message.getBytes()
  returns:
    description: <p>A copy of this Message body, as a byte array. </p>
    type: <xref href="byte+%5B%5D?alt=byte+%5B%5D&text=byte+%5B%5D" data-throw-if-not-resolved="False"/>
  summary: <p>The byte content of the body. </p>
  syntax: public byte [] getBytes()
  uid: com.microsoft.azure.sdk.iot.device.Message.getBytes()
- fullName: com.microsoft.azure.sdk.iot.device.Message.getConnectionDeviceId()
  name: getConnectionDeviceId()
  nameWithType: Message.getConnectionDeviceId()
  returns:
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  syntax: public String getConnectionDeviceId()
  uid: com.microsoft.azure.sdk.iot.device.Message.getConnectionDeviceId()
- fullName: com.microsoft.azure.sdk.iot.device.Message.getConnectionModuleId()
  name: getConnectionModuleId()
  nameWithType: Message.getConnectionModuleId()
  returns:
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  syntax: public String getConnectionModuleId()
  uid: com.microsoft.azure.sdk.iot.device.Message.getConnectionModuleId()
- fullName: com.microsoft.azure.sdk.iot.device.Message.getContentEncoding()
  name: getContentEncoding()
  nameWithType: Message.getContentEncoding()
  returns:
    description: <p>the message's content encoding. </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: <p>Returns this message's content encoding. This value is null by default </p>
  syntax: public String getContentEncoding()
  uid: com.microsoft.azure.sdk.iot.device.Message.getContentEncoding()
- fullName: com.microsoft.azure.sdk.iot.device.Message.getContentType()
  name: getContentType()
  nameWithType: Message.getContentType()
  returns:
    description: <p>the message's content type </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: <p>Return the message's content type. This value is null by default </p>
  syntax: public String getContentType()
  uid: com.microsoft.azure.sdk.iot.device.Message.getContentType()
- fullName: com.microsoft.azure.sdk.iot.device.Message.getCorrelatingMessageCallback()
  name: getCorrelatingMessageCallback()
  nameWithType: Message.getCorrelatingMessageCallback()
  returns:
    type: <xref href="com.microsoft.azure.sdk.iot.device.CorrelatingMessageCallback?alt=com.microsoft.azure.sdk.iot.device.CorrelatingMessageCallback&text=CorrelatingMessageCallback" data-throw-if-not-resolved="False"/>
  syntax: public CorrelatingMessageCallback getCorrelatingMessageCallback()
  uid: com.microsoft.azure.sdk.iot.device.Message.getCorrelatingMessageCallback()
- fullName: com.microsoft.azure.sdk.iot.device.Message.getCorrelatingMessageCallbackContext()
  name: getCorrelatingMessageCallbackContext()
  nameWithType: Message.getCorrelatingMessageCallbackContext()
  returns:
    type: <xref href="Object?alt=Object&text=Object" data-throw-if-not-resolved="False"/>
  syntax: public Object getCorrelatingMessageCallbackContext()
  uid: com.microsoft.azure.sdk.iot.device.Message.getCorrelatingMessageCallbackContext()
- fullName: com.microsoft.azure.sdk.iot.device.Message.getCorrelationId()
  name: getCorrelationId()
  nameWithType: Message.getCorrelationId()
  returns:
    description: <p>The property value </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: <p>Getter for the correlationId property </p>
  syntax: public String getCorrelationId()
  uid: com.microsoft.azure.sdk.iot.device.Message.getCorrelationId()
- fullName: com.microsoft.azure.sdk.iot.device.Message.getCreationTimeUTC()
  name: getCreationTimeUTC()
  nameWithType: Message.getCreationTimeUTC()
  returns:
    type: <xref href="Date?alt=Date&text=Date" data-throw-if-not-resolved="False"/>
  syntax: public Date getCreationTimeUTC()
  uid: com.microsoft.azure.sdk.iot.device.Message.getCreationTimeUTC()
- fullName: com.microsoft.azure.sdk.iot.device.Message.getCreationTimeUTCString()
  name: getCreationTimeUTCString()
  nameWithType: Message.getCreationTimeUTCString()
  returns:
    description: <p>the iot hub accepted format for the creation time utc </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Returns the iot hub accepted format for the creation time utc</p>

    <p>ex: oct 1st, 2018 yields 2008-10-01T17:04:32.0000000</p>

    <p></p>
  syntax: public String getCreationTimeUTCString()
  uid: com.microsoft.azure.sdk.iot.device.Message.getCreationTimeUTCString()
- fullName: com.microsoft.azure.sdk.iot.device.Message.getDeliveryAcknowledgement()
  name: getDeliveryAcknowledgement()
  nameWithType: Message.getDeliveryAcknowledgement()
  returns:
    description: <p>the delivery acknowledgement value </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: <p>Getter for the delivery acknowledgement system property </p>
  syntax: public String getDeliveryAcknowledgement()
  uid: com.microsoft.azure.sdk.iot.device.Message.getDeliveryAcknowledgement()
- fullName: com.microsoft.azure.sdk.iot.device.Message.getInputName()
  name: getInputName()
  nameWithType: Message.getInputName()
  returns:
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  syntax: public String getInputName()
  uid: com.microsoft.azure.sdk.iot.device.Message.getInputName()
- fullName: com.microsoft.azure.sdk.iot.device.Message.getIotHubConnectionString()
  name: getIotHubConnectionString()
  nameWithType: Message.getIotHubConnectionString()
  returns:
    description: <p>the iotHubConnectionString value </p>
    type: <xref href="com.microsoft.azure.sdk.iot.device.IotHubConnectionString?alt=com.microsoft.azure.sdk.iot.device.IotHubConnectionString&text=IotHubConnectionString" data-throw-if-not-resolved="False"/>
  summary: <p>Getter for the iotHubConnectionString property </p>
  syntax: public IotHubConnectionString getIotHubConnectionString()
  uid: com.microsoft.azure.sdk.iot.device.Message.getIotHubConnectionString()
- fullName: com.microsoft.azure.sdk.iot.device.Message.getMessageId()
  name: getMessageId()
  nameWithType: Message.getMessageId()
  returns:
    description: <p>The property value </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: <p>Getter for the messageId property </p>
  syntax: public String getMessageId()
  uid: com.microsoft.azure.sdk.iot.device.Message.getMessageId()
- fullName: com.microsoft.azure.sdk.iot.device.Message.getMessageType()
  name: getMessageType()
  nameWithType: Message.getMessageType()
  returns:
    description: <p>the Message type value </p>
    type: <xref href="com.microsoft.azure.sdk.iot.device.MessageType?alt=com.microsoft.azure.sdk.iot.device.MessageType&text=MessageType" data-throw-if-not-resolved="False"/>
  summary: <p>Getter for the Message type </p>
  syntax: public MessageType getMessageType()
  uid: com.microsoft.azure.sdk.iot.device.Message.getMessageType()
- fullName: com.microsoft.azure.sdk.iot.device.Message.getOutputName()
  name: getOutputName()
  nameWithType: Message.getOutputName()
  returns:
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  syntax: public String getOutputName()
  uid: com.microsoft.azure.sdk.iot.device.Message.getOutputName()
- fullName: com.microsoft.azure.sdk.iot.device.Message.getProperties()
  name: getProperties()
  nameWithType: Message.getProperties()
  returns:
    description: <p>a copy of the message properties. </p>
    type: <xref href="com.microsoft.azure.sdk.iot.device.MessageProperty?alt=com.microsoft.azure.sdk.iot.device.MessageProperty&text=MessageProperty" data-throw-if-not-resolved="False"/> []
  summary: >-
    <p>Returns a copy of the message properties.</p>

    <p></p>
  syntax: public MessageProperty [] getProperties()
  uid: com.microsoft.azure.sdk.iot.device.Message.getProperties()
- fullName: com.microsoft.azure.sdk.iot.device.Message.getProperty(String name)
  name: getProperty(String name)
  nameWithType: Message.getProperty(String name)
  parameters:
  - description: <p>Name of the user-defined property to search for. </p>
    name: name
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>The value of the property if it is set, or null otherwise. </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: <p>Gets the values of user-defined properties of this Message. </p>
  syntax: public String getProperty(String name)
  uid: com.microsoft.azure.sdk.iot.device.Message.getProperty(String)
- fullName: com.microsoft.azure.sdk.iot.device.Message.getTo()
  name: getTo()
  nameWithType: Message.getTo()
  returns:
    description: <p>the To value </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: <p>Getter for the To system property </p>
  syntax: public String getTo()
  uid: com.microsoft.azure.sdk.iot.device.Message.getTo()
- fullName: com.microsoft.azure.sdk.iot.device.Message.getUserId()
  name: getUserId()
  nameWithType: Message.getUserId()
  returns:
    description: <p>the User ID value </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: <p>Getter for the User ID system property </p>
  syntax: public String getUserId()
  uid: com.microsoft.azure.sdk.iot.device.Message.getUserId()
- fullName: com.microsoft.azure.sdk.iot.device.Message.isExpired()
  name: isExpired()
  nameWithType: Message.isExpired()
  returns:
    description: <p>true if the message is expired, false otherwise </p>
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False"/>
  summary: <p>Verifies whether the message is expired or not </p>
  syntax: public boolean isExpired()
  uid: com.microsoft.azure.sdk.iot.device.Message.isExpired()
- fullName: com.microsoft.azure.sdk.iot.device.Message.isSecurityMessage()
  name: isSecurityMessage()
  nameWithType: Message.isSecurityMessage()
  returns:
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False"/>
  syntax: public boolean isSecurityMessage()
  uid: com.microsoft.azure.sdk.iot.device.Message.isSecurityMessage()
- fullName: com.microsoft.azure.sdk.iot.device.Message.setAbsoluteExpiryTime(long absoluteTimeout)
  name: setAbsoluteExpiryTime(long absoluteTimeout)
  nameWithType: Message.setAbsoluteExpiryTime(long absoluteTimeout)
  parameters:
  - description: <p>The time out for the message, in milliseconds. </p>
    name: absoluteTimeout
    type: <xref href="long?alt=long&text=long" data-throw-if-not-resolved="False"/>
  summary: <p>Setter for the expiryTime property using absolute time </p>
  syntax: public void setAbsoluteExpiryTime(long absoluteTimeout)
  uid: com.microsoft.azure.sdk.iot.device.Message.setAbsoluteExpiryTime(long)
- fullName: com.microsoft.azure.sdk.iot.device.Message.setAsSecurityMessage()
  name: setAsSecurityMessage()
  nameWithType: Message.setAsSecurityMessage()
  syntax: public void setAsSecurityMessage()
  uid: com.microsoft.azure.sdk.iot.device.Message.setAsSecurityMessage()
- fullName: com.microsoft.azure.sdk.iot.device.Message.setConnectionDeviceId(String connectionDeviceId)
  name: setConnectionDeviceId(String connectionDeviceId)
  nameWithType: Message.setConnectionDeviceId(String connectionDeviceId)
  parameters:
  - name: connectionDeviceId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  syntax: public void setConnectionDeviceId(String connectionDeviceId)
  uid: com.microsoft.azure.sdk.iot.device.Message.setConnectionDeviceId(String)
- fullName: com.microsoft.azure.sdk.iot.device.Message.setConnectionModuleId(String connectionModuleId)
  name: setConnectionModuleId(String connectionModuleId)
  nameWithType: Message.setConnectionModuleId(String connectionModuleId)
  parameters:
  - name: connectionModuleId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  syntax: public void setConnectionModuleId(String connectionModuleId)
  uid: com.microsoft.azure.sdk.iot.device.Message.setConnectionModuleId(String)
- fullName: com.microsoft.azure.sdk.iot.device.Message.setContentEncoding(String contentEncoding)
  name: setContentEncoding(String contentEncoding)
  nameWithType: Message.setContentEncoding(String contentEncoding)
  parameters:
  - description: <p>the content encoding of the message. May be null if you don't want to specify a content encoding. </p>
    name: contentEncoding
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: <p>Set the content encoding of this message. Used in message routing. </p>
  syntax: public void setContentEncoding(String contentEncoding)
  uid: com.microsoft.azure.sdk.iot.device.Message.setContentEncoding(String)
- fullName: com.microsoft.azure.sdk.iot.device.Message.setContentType(String contentType)
  name: setContentType(String contentType)
  nameWithType: Message.setContentType(String contentType)
  parameters:
  - description: <p>the content type of the message. May be null if you don't want to specify a content type. </p>
    name: contentType
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    type: <xref href="final+void?alt=final+void&text=final+void" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the content type of this message. Used in message routing.</p>

    <p></p>
  syntax: public final void setContentType(String contentType)
  uid: com.microsoft.azure.sdk.iot.device.Message.setContentType(String)
- fullName: com.microsoft.azure.sdk.iot.device.Message.setCorrelatingMessageCallback(CorrelatingMessageCallback correlatingMessageCallback)
  name: setCorrelatingMessageCallback(CorrelatingMessageCallback correlatingMessageCallback)
  nameWithType: Message.setCorrelatingMessageCallback(CorrelatingMessageCallback correlatingMessageCallback)
  parameters:
  - name: correlatingMessageCallback
    type: <xref href="com.microsoft.azure.sdk.iot.device.CorrelatingMessageCallback?alt=com.microsoft.azure.sdk.iot.device.CorrelatingMessageCallback&text=CorrelatingMessageCallback" data-throw-if-not-resolved="False"/>
  syntax: public void setCorrelatingMessageCallback(CorrelatingMessageCallback correlatingMessageCallback)
  uid: com.microsoft.azure.sdk.iot.device.Message.setCorrelatingMessageCallback(CorrelatingMessageCallback)
- fullName: com.microsoft.azure.sdk.iot.device.Message.setCorrelatingMessageCallbackContext(Object correlatingMessageCallbackContext)
  name: setCorrelatingMessageCallbackContext(Object correlatingMessageCallbackContext)
  nameWithType: Message.setCorrelatingMessageCallbackContext(Object correlatingMessageCallbackContext)
  parameters:
  - name: correlatingMessageCallbackContext
    type: <xref href="Object?alt=Object&text=Object" data-throw-if-not-resolved="False"/>
  syntax: public void setCorrelatingMessageCallbackContext(Object correlatingMessageCallbackContext)
  uid: com.microsoft.azure.sdk.iot.device.Message.setCorrelatingMessageCallbackContext(Object)
- fullName: com.microsoft.azure.sdk.iot.device.Message.setCorrelationId(String correlationId)
  name: setCorrelationId(String correlationId)
  nameWithType: Message.setCorrelationId(String correlationId)
  parameters:
  - description: <p>The string containing the property value </p>
    name: correlationId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: <p>Setter for the correlationId property </p>
  syntax: public void setCorrelationId(String correlationId)
  uid: com.microsoft.azure.sdk.iot.device.Message.setCorrelationId(String)
- fullName: com.microsoft.azure.sdk.iot.device.Message.setCreationTimeUTC(Date creationTimeUTC)
  name: setCreationTimeUTC(Date creationTimeUTC)
  nameWithType: Message.setCreationTimeUTC(Date creationTimeUTC)
  parameters:
  - name: creationTimeUTC
    type: <xref href="Date?alt=Date&text=Date" data-throw-if-not-resolved="False"/>
  returns:
    type: <xref href="final+void?alt=final+void&text=final+void" data-throw-if-not-resolved="False"/>
  syntax: public final void setCreationTimeUTC(Date creationTimeUTC)
  uid: com.microsoft.azure.sdk.iot.device.Message.setCreationTimeUTC(Date)
- fullName: com.microsoft.azure.sdk.iot.device.Message.setExpiryTime(long timeOut)
  name: setExpiryTime(long timeOut)
  nameWithType: Message.setExpiryTime(long timeOut)
  parameters:
  - description: <p>The time out for the message, in milliseconds, from the current time. </p>
    name: timeOut
    type: <xref href="long?alt=long&text=long" data-throw-if-not-resolved="False"/>
  summary: <p>Setter for the expiryTime property. This setter uses relative time, not absolute time. </p>
  syntax: public void setExpiryTime(long timeOut)
  uid: com.microsoft.azure.sdk.iot.device.Message.setExpiryTime(long)
- fullName: com.microsoft.azure.sdk.iot.device.Message.setInputName(String inputName)
  name: setInputName(String inputName)
  nameWithType: Message.setInputName(String inputName)
  parameters:
  - description: <p>the input channel the message was received from </p>
    name: inputName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: <p>Set the input name of the message, used in routing for module communications </p>
  syntax: public void setInputName(String inputName)
  uid: com.microsoft.azure.sdk.iot.device.Message.setInputName(String)
- fullName: com.microsoft.azure.sdk.iot.device.Message.setIotHubConnectionString(IotHubConnectionString iotHubConnectionString)
  name: setIotHubConnectionString(IotHubConnectionString iotHubConnectionString)
  nameWithType: Message.setIotHubConnectionString(IotHubConnectionString iotHubConnectionString)
  parameters:
  - description: <p>The iotHubConnectionString value to set </p>
    name: iotHubConnectionString
    type: <xref href="com.microsoft.azure.sdk.iot.device.IotHubConnectionString?alt=com.microsoft.azure.sdk.iot.device.IotHubConnectionString&text=IotHubConnectionString" data-throw-if-not-resolved="False"/>
  summary: <p>Setter for the iotHubConnectionString type </p>
  syntax: public void setIotHubConnectionString(IotHubConnectionString iotHubConnectionString)
  uid: com.microsoft.azure.sdk.iot.device.Message.setIotHubConnectionString(IotHubConnectionString)
- fullName: com.microsoft.azure.sdk.iot.device.Message.setMessageId(String messageId)
  name: setMessageId(String messageId)
  nameWithType: Message.setMessageId(String messageId)
  parameters:
  - description: <p>The string containing the property value </p>
    name: messageId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: <p>Setter for the messageId property </p>
  syntax: public void setMessageId(String messageId)
  uid: com.microsoft.azure.sdk.iot.device.Message.setMessageId(String)
- fullName: com.microsoft.azure.sdk.iot.device.Message.setMessageType(MessageType type)
  name: setMessageType(MessageType type)
  nameWithType: Message.setMessageType(MessageType type)
  parameters:
  - description: <p>The enum containing the Message type value </p>
    name: type
    type: <xref href="com.microsoft.azure.sdk.iot.device.MessageType?alt=com.microsoft.azure.sdk.iot.device.MessageType&text=MessageType" data-throw-if-not-resolved="False"/>
  summary: <p>Setter for the Message type </p>
  syntax: public void setMessageType(MessageType type)
  uid: com.microsoft.azure.sdk.iot.device.Message.setMessageType(MessageType)
- fullName: com.microsoft.azure.sdk.iot.device.Message.setOutputName(String outputName)
  name: setOutputName(String outputName)
  nameWithType: Message.setOutputName(String outputName)
  parameters:
  - description: <p>the output channel name to send to </p>
    name: outputName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: <p>Set the output channel name to send to. Used in routing for module communications </p>
  syntax: public void setOutputName(String outputName)
  uid: com.microsoft.azure.sdk.iot.device.Message.setOutputName(String)
- fullName: com.microsoft.azure.sdk.iot.device.Message.setProperty(String name, String value)
  name: setProperty(String name, String value)
  nameWithType: Message.setProperty(String name, String value)
  parameters:
  - description: <p>Name of the property to be set. </p>
    name: name
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>Value of the property to be set. </p>
    name: value
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>If any of the arguments provided is null. </p>
  summary: <p>Adds or sets user-defined properties of this Message. </p>
  syntax: public void setProperty(String name, String value)
  uid: com.microsoft.azure.sdk.iot.device.Message.setProperty(String,String)
- fullName: com.microsoft.azure.sdk.iot.device.Message.setUserId(String userId)
  name: setUserId(String userId)
  nameWithType: Message.setUserId(String userId)
  parameters:
  - name: userId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  syntax: public void setUserId(String userId)
  uid: com.microsoft.azure.sdk.iot.device.Message.setUserId(String)
- fullName: com.microsoft.azure.sdk.iot.device.Message.toString()
  name: toString()
  nameWithType: Message.toString()
  returns:
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  syntax: public String toString()
  uid: com.microsoft.azure.sdk.iot.device.Message.toString()
nameWithType: Message
syntax: public class Message
type: class
uid: com.microsoft.azure.sdk.iot.device.Message
fullName: com.microsoft.azure.sdk.iot.device.Message
name: Message
package: com.microsoft.azure.sdk.iot.device
metadata: {}
