### YamlMime:JavaType
methods:
- fullName: com.microsoft.azure.functions.annotation.HttpTrigger.authLevel()
  name: authLevel()
  nameWithType: HttpTrigger.authLevel()
  returns:
    description: <p>An <xref uid="com.microsoft.azure.functions.annotation.AuthorizationLevel" data-throw-if-not-resolved="false" data-raw-source="AuthorizationLevel"></xref> value representing the level required to access the function. </p>
    type: <xref href="com.microsoft.azure.functions.annotation.AuthorizationLevel?alt=com.microsoft.azure.functions.annotation.AuthorizationLevel&text=AuthorizationLevel" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Determines what keys, if any, need to be present on the request in order to invoke the function. The authorization level can be one of the following values: </p>

    <p>

      <ul>

        <li>

          <p>

            <b>anonymous</b>: No API key is required. </p>

        </li>

        <li>

          <p>

            <b>function</b>: A function-specific API key is required. This is the default value if none is provided. </p>

        </li>

        <li>

          <p>

            <b>admin</b>: The master key is required. </p>

        </li>

      </ul>

    </p>

    <p>For more information, see the <a href="https://docs.microsoft.com/azure/azure-functions/functions-bindings-http-webhook#authorization-keys">documentation about authorization keys</a>. </p>

    <p></p>
  syntax: public AuthorizationLevel authLevel() default AuthorizationLevel.FUNCTION
  uid: com.microsoft.azure.functions.annotation.HttpTrigger.authLevel()
- fullName: com.microsoft.azure.functions.annotation.HttpTrigger.dataType()
  name: dataType()
  nameWithType: HttpTrigger.dataType()
  returns:
    description: <p>The dataType which will be used by the Functions runtime. </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Defines how Functions runtime should treat the parameter value. Possible values are: </p>

    <p>

      <ul>

        <li>

          <p>"": get the value as a string, and try to deserialize to actual parameter type like POJO </p>

        </li>

        <li>

          <p>string: always get the value as a string </p>

        </li>

        <li>

          <p>binary: get the value as a binary data, and try to deserialize to actual parameter type byte[] </p>

        </li>

      </ul>

    </p>

    <p></p>
  syntax: public String dataType() default ""
  uid: com.microsoft.azure.functions.annotation.HttpTrigger.dataType()
- fullName: com.microsoft.azure.functions.annotation.HttpTrigger.methods()
  name: methods()
  nameWithType: HttpTrigger.methods()
  returns:
    description: <p>An array containing all valid HTTP methods. </p>
    type: <xref href="com.microsoft.azure.functions.HttpMethod?alt=com.microsoft.azure.functions.HttpMethod&text=HttpMethod" data-throw-if-not-resolved="False"/> []
  summary: >-
    <p>An array of the HTTP methods to which the function responds. If not specified, the function responds to all HTTP methods.</p>

    <p></p>
  syntax: public HttpMethod [] methods() default
  uid: com.microsoft.azure.functions.annotation.HttpTrigger.methods()
- fullName: com.microsoft.azure.functions.annotation.HttpTrigger.name()
  name: name()
  nameWithType: HttpTrigger.name()
  returns:
    description: <p>The variable name used in function code for the request or request body. </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>The variable name used in function code for the request or request body.</p>

    <p></p>
  syntax: public String name()
  uid: com.microsoft.azure.functions.annotation.HttpTrigger.name()
- fullName: com.microsoft.azure.functions.annotation.HttpTrigger.route()
  name: route()
  nameWithType: HttpTrigger.route()
  returns:
    description: <p>The route template to use for the annotated function. </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>BindingName("id") int id, final ExecutionContext context ) { .... context.getLogger().info("We have " + category + " with id " + id); .... } </p>

    <p>For more details on the route syntax, refer to the <a href="https://docs.microsoft.com/en-us/aspnet/web-api/overview/web-api-routing-and-actions">online documentation</a>. </p>

    <p></p>
  syntax: public String route() default ""
  uid: com.microsoft.azure.functions.annotation.HttpTrigger.route()
nameWithType: HttpTrigger
syntax: public interface HttpTrigger
type: interface
uid: com.microsoft.azure.functions.annotation.HttpTrigger
fullName: com.microsoft.azure.functions.annotation.HttpTrigger
name: HttpTrigger
package: com.microsoft.azure.functions.annotation
summary: >-
  <p>HttpTrigger(name = "req", methods = {HttpMethod.GET, HttpMethod.POST}, authLevel = AuthorizationLevel.ANONYMOUS) final HttpRequestMessage&lt;Optional&lt;String&gt;&gt; request) { String name = request.getBody().orElseGet(() -&gt; request.getQueryParameters().get("name")); return name == null ? "Please pass a name on the query string or in the request body" : "Hello " + name; } </p>

  <p></p>
metadata: {}
