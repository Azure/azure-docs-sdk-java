### YamlMime:JavaMember
nameWithType: ImageModerations.findFacesUrlInput
type: method
members:
- fullName: com.microsoft.azure.cognitiveservices.vision.contentmoderator.ImageModerations.findFacesUrlInput()
  name: findFacesUrlInput()
  nameWithType: ImageModerations.findFacesUrlInput()
  returns:
    description: <p>the first stage of the findFacesUrlInput call </p>
    type: <xref href="ImageModerationsFindFacesUrlInputDefinitionStages.WithContentType?alt=ImageModerationsFindFacesUrlInputDefinitionStages.WithContentType&text=ImageModerationsFindFacesUrlInputDefinitionStages.WithContentType" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Returns the list of faces found.</p>

    <p></p>
  syntax: public ImageModerationsFindFacesUrlInputDefinitionStages.WithContentType findFacesUrlInput()
  uid: com.microsoft.azure.cognitiveservices.vision.contentmoderator.ImageModerations.findFacesUrlInput()
- fullName: com.microsoft.azure.cognitiveservices.vision.contentmoderator.ImageModerations.findFacesUrlInput(String contentType, BodyModelModel imageUrl, FindFacesUrlInputOptionalParameter findFacesUrlInputOptionalParameter)
  name: findFacesUrlInput(String contentType, BodyModelModel imageUrl, FindFacesUrlInputOptionalParameter findFacesUrlInputOptionalParameter)
  nameWithType: ImageModerations.findFacesUrlInput(String contentType, BodyModelModel imageUrl, FindFacesUrlInputOptionalParameter findFacesUrlInputOptionalParameter)
  parameters:
  - description: <p>The content type. </p>
    name: contentType
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The image url. </p>
    name: imageUrl
    type: <xref href="com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.BodyModelModel?alt=com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.BodyModelModel&text=BodyModelModel" data-throw-if-not-resolved="False"/>
  - description: <p>the object representing the optional parameters to be set before calling this API </p>
    name: findFacesUrlInputOptionalParameter
    type: <xref href="com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.FindFacesUrlInputOptionalParameter?alt=com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.FindFacesUrlInputOptionalParameter&text=FindFacesUrlInputOptionalParameter" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="APIErrorException?alt=APIErrorException&text=APIErrorException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  returns:
    description: <p>the FoundFaces object if successful. </p>
    type: <xref href="com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.FoundFaces?alt=com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.FoundFaces&text=FoundFaces" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Returns the list of faces found.</p>

    <p></p>
  syntax: public FoundFaces findFacesUrlInput(String contentType, BodyModelModel imageUrl, FindFacesUrlInputOptionalParameter findFacesUrlInputOptionalParameter)
  uid: com.microsoft.azure.cognitiveservices.vision.contentmoderator.ImageModerations.findFacesUrlInput(String,BodyModelModel,FindFacesUrlInputOptionalParameter)
uid: com.microsoft.azure.cognitiveservices.vision.contentmoderator.ImageModerations.findFacesUrlInput*
fullName: com.microsoft.azure.cognitiveservices.vision.contentmoderator.ImageModerations.findFacesUrlInput()
name: findFacesUrlInput()
package: com.microsoft.azure.cognitiveservices.vision.contentmoderator
metadata: {}
