### YamlMime:JavaType
constructors:
- fullName: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.ManagedClustersInner(Retrofit retrofit, ContainerServiceManagementClientImpl client)
  name: ManagedClustersInner(Retrofit retrofit, ContainerServiceManagementClientImpl client)
  nameWithType: ManagedClustersInner.ManagedClustersInner(Retrofit retrofit, ContainerServiceManagementClientImpl client)
  parameters:
  - description: <p>the Retrofit instance built from a Retrofit Builder. </p>
    name: retrofit
    type: <xref href="Retrofit?alt=Retrofit&text=Retrofit" data-throw-if-not-resolved="False"/>
  - description: <p>the instance of the service client containing this operation class. </p>
    name: client
    type: <xref href="com.microsoft.azure.management.containerservice.implementation.ContainerServiceManagementClientImpl?alt=com.microsoft.azure.management.containerservice.implementation.ContainerServiceManagementClientImpl&text=ContainerServiceManagementClientImpl" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Initializes an instance of ManagedClustersInner.</p>

    <p></p>
  syntax: public ManagedClustersInner(Retrofit retrofit, ContainerServiceManagementClientImpl client)
  uid: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.ManagedClustersInner(Retrofit,ContainerServiceManagementClientImpl)
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
- <xref href="com.microsoft.azure.management.resources.fluentcore.collection.InnerSupportsGet?alt=com.microsoft.azure.management.resources.fluentcore.collection.InnerSupportsGet&text=InnerSupportsGet%3CInnerT%3E" data-throw-if-not-resolved="False"/>
inheritedMembers:
- com.microsoft.azure.management.resources.fluentcore.collection.InnerSupportsGet.getByResourceGroupAsync(String,String,ServiceCallback<InnerT>)
methods:
- fullName: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.beginCreateOrUpdate(String resourceGroupName, String resourceName, ManagedClusterInner parameters)
  name: beginCreateOrUpdate(String resourceGroupName, String resourceName, ManagedClusterInner parameters)
  nameWithType: ManagedClustersInner.beginCreateOrUpdate(String resourceGroupName, String resourceName, ManagedClusterInner parameters)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the managed cluster resource. </p>
    name: resourceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>Parameters supplied to the Create or Update a Managed Cluster operation. </p>
    name: parameters
    type: <xref href="com.microsoft.azure.management.containerservice.implementation.ManagedClusterInner?alt=com.microsoft.azure.management.containerservice.implementation.ManagedClusterInner&text=ManagedClusterInner" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="CloudException?alt=CloudException&text=CloudException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  returns:
    description: <p>the ManagedClusterInner object if successful. </p>
    type: <xref href="com.microsoft.azure.management.containerservice.implementation.ManagedClusterInner?alt=com.microsoft.azure.management.containerservice.implementation.ManagedClusterInner&text=ManagedClusterInner" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Creates or updates a managed cluster. Creates or updates a managed cluster with the specified configuration for agents and Kubernetes version.</p>

    <p></p>
  syntax: public ManagedClusterInner beginCreateOrUpdate(String resourceGroupName, String resourceName, ManagedClusterInner parameters)
  uid: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.beginCreateOrUpdate(String,String,ManagedClusterInner)
- fullName: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.beginCreateOrUpdateAsync(String resourceGroupName, String resourceName, ManagedClusterInner parameters)
  name: beginCreateOrUpdateAsync(String resourceGroupName, String resourceName, ManagedClusterInner parameters)
  nameWithType: ManagedClustersInner.beginCreateOrUpdateAsync(String resourceGroupName, String resourceName, ManagedClusterInner parameters)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the managed cluster resource. </p>
    name: resourceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>Parameters supplied to the Create or Update a Managed Cluster operation. </p>
    name: parameters
    type: <xref href="com.microsoft.azure.management.containerservice.implementation.ManagedClusterInner?alt=com.microsoft.azure.management.containerservice.implementation.ManagedClusterInner&text=ManagedClusterInner" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the ManagedClusterInner object </p>
    type: Observable&lt;<xref href="com.microsoft.azure.management.containerservice.implementation.ManagedClusterInner?alt=com.microsoft.azure.management.containerservice.implementation.ManagedClusterInner&text=ManagedClusterInner" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Creates or updates a managed cluster. Creates or updates a managed cluster with the specified configuration for agents and Kubernetes version.</p>

    <p></p>
  syntax: public Observable<ManagedClusterInner> beginCreateOrUpdateAsync(String resourceGroupName, String resourceName, ManagedClusterInner parameters)
  uid: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.beginCreateOrUpdateAsync(String,String,ManagedClusterInner)
- fullName: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.beginCreateOrUpdateAsync(String resourceGroupName, String resourceName, ManagedClusterInner parameters, final ServiceCallback<ManagedClusterInner> serviceCallback)
  name: beginCreateOrUpdateAsync(String resourceGroupName, String resourceName, ManagedClusterInner parameters, final ServiceCallback<ManagedClusterInner> serviceCallback)
  nameWithType: ManagedClustersInner.beginCreateOrUpdateAsync(String resourceGroupName, String resourceName, ManagedClusterInner parameters, final ServiceCallback<ManagedClusterInner> serviceCallback)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the managed cluster resource. </p>
    name: resourceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>Parameters supplied to the Create or Update a Managed Cluster operation. </p>
    name: parameters
    type: <xref href="com.microsoft.azure.management.containerservice.implementation.ManagedClusterInner?alt=com.microsoft.azure.management.containerservice.implementation.ManagedClusterInner&text=ManagedClusterInner" data-throw-if-not-resolved="False"/>
  - description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    name: serviceCallback
    type: final ServiceCallback&lt;<xref href="com.microsoft.azure.management.containerservice.implementation.ManagedClusterInner?alt=com.microsoft.azure.management.containerservice.implementation.ManagedClusterInner&text=ManagedClusterInner" data-throw-if-not-resolved="False"/>&gt;
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
    type: ServiceFuture&lt;<xref href="com.microsoft.azure.management.containerservice.implementation.ManagedClusterInner?alt=com.microsoft.azure.management.containerservice.implementation.ManagedClusterInner&text=ManagedClusterInner" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Creates or updates a managed cluster. Creates or updates a managed cluster with the specified configuration for agents and Kubernetes version.</p>

    <p></p>
  syntax: public ServiceFuture<ManagedClusterInner> beginCreateOrUpdateAsync(String resourceGroupName, String resourceName, ManagedClusterInner parameters, final ServiceCallback<ManagedClusterInner> serviceCallback)
  uid: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.beginCreateOrUpdateAsync(String,String,ManagedClusterInner,final ServiceCallback<ManagedClusterInner>)
- fullName: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.beginCreateOrUpdateWithServiceResponseAsync(String resourceGroupName, String resourceName, ManagedClusterInner parameters)
  name: beginCreateOrUpdateWithServiceResponseAsync(String resourceGroupName, String resourceName, ManagedClusterInner parameters)
  nameWithType: ManagedClustersInner.beginCreateOrUpdateWithServiceResponseAsync(String resourceGroupName, String resourceName, ManagedClusterInner parameters)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the managed cluster resource. </p>
    name: resourceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>Parameters supplied to the Create or Update a Managed Cluster operation. </p>
    name: parameters
    type: <xref href="com.microsoft.azure.management.containerservice.implementation.ManagedClusterInner?alt=com.microsoft.azure.management.containerservice.implementation.ManagedClusterInner&text=ManagedClusterInner" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the ManagedClusterInner object </p>
    type: Observable&lt;ServiceResponse&lt;<xref href="com.microsoft.azure.management.containerservice.implementation.ManagedClusterInner?alt=com.microsoft.azure.management.containerservice.implementation.ManagedClusterInner&text=ManagedClusterInner" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Creates or updates a managed cluster. Creates or updates a managed cluster with the specified configuration for agents and Kubernetes version.</p>

    <p></p>
  syntax: public Observable<ServiceResponse<ManagedClusterInner>> beginCreateOrUpdateWithServiceResponseAsync(String resourceGroupName, String resourceName, ManagedClusterInner parameters)
  uid: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.beginCreateOrUpdateWithServiceResponseAsync(String,String,ManagedClusterInner)
- fullName: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.beginDelete(String resourceGroupName, String resourceName)
  name: beginDelete(String resourceGroupName, String resourceName)
  nameWithType: ManagedClustersInner.beginDelete(String resourceGroupName, String resourceName)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the managed cluster resource. </p>
    name: resourceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="CloudException?alt=CloudException&text=CloudException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  summary: >-
    <p>Deletes a managed cluster. Deletes the managed cluster with a specified resource group and name.</p>

    <p></p>
  syntax: public void beginDelete(String resourceGroupName, String resourceName)
  uid: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.beginDelete(String,String)
- fullName: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.beginDeleteAsync(String resourceGroupName, String resourceName)
  name: beginDeleteAsync(String resourceGroupName, String resourceName)
  nameWithType: ManagedClustersInner.beginDeleteAsync(String resourceGroupName, String resourceName)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the managed cluster resource. </p>
    name: resourceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceResponse"></xref> object if successful. </p>
    type: <xref href="Observable%3CVoid%3E?alt=Observable%3CVoid%3E&text=Observable%3CVoid%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Deletes a managed cluster. Deletes the managed cluster with a specified resource group and name.</p>

    <p></p>
  syntax: public Observable<Void> beginDeleteAsync(String resourceGroupName, String resourceName)
  uid: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.beginDeleteAsync(String,String)
- fullName: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.beginDeleteAsync(String resourceGroupName, String resourceName, final ServiceCallback<Void> serviceCallback)
  name: beginDeleteAsync(String resourceGroupName, String resourceName, final ServiceCallback<Void> serviceCallback)
  nameWithType: ManagedClustersInner.beginDeleteAsync(String resourceGroupName, String resourceName, final ServiceCallback<Void> serviceCallback)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the managed cluster resource. </p>
    name: resourceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    name: serviceCallback
    type: <xref href="final+ServiceCallback%3CVoid%3E?alt=final+ServiceCallback%3CVoid%3E&text=final+ServiceCallback%3CVoid%3E" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
    type: <xref href="ServiceFuture%3CVoid%3E?alt=ServiceFuture%3CVoid%3E&text=ServiceFuture%3CVoid%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Deletes a managed cluster. Deletes the managed cluster with a specified resource group and name.</p>

    <p></p>
  syntax: public ServiceFuture<Void> beginDeleteAsync(String resourceGroupName, String resourceName, final ServiceCallback<Void> serviceCallback)
  uid: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.beginDeleteAsync(String,String,final ServiceCallback<Void>)
- fullName: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.beginDeleteWithServiceResponseAsync(String resourceGroupName, String resourceName)
  name: beginDeleteWithServiceResponseAsync(String resourceGroupName, String resourceName)
  nameWithType: ManagedClustersInner.beginDeleteWithServiceResponseAsync(String resourceGroupName, String resourceName)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the managed cluster resource. </p>
    name: resourceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceResponse"></xref> object if successful. </p>
    type: <xref href="Observable%3CServiceResponse%3CVoid%3E%3E?alt=Observable%3CServiceResponse%3CVoid%3E%3E&text=Observable%3CServiceResponse%3CVoid%3E%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Deletes a managed cluster. Deletes the managed cluster with a specified resource group and name.</p>

    <p></p>
  syntax: public Observable<ServiceResponse<Void>> beginDeleteWithServiceResponseAsync(String resourceGroupName, String resourceName)
  uid: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.beginDeleteWithServiceResponseAsync(String,String)
- fullName: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.beginResetAADProfile(String resourceGroupName, String resourceName, ManagedClusterAADProfile parameters)
  name: beginResetAADProfile(String resourceGroupName, String resourceName, ManagedClusterAADProfile parameters)
  nameWithType: ManagedClustersInner.beginResetAADProfile(String resourceGroupName, String resourceName, ManagedClusterAADProfile parameters)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the managed cluster resource. </p>
    name: resourceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>Parameters supplied to the Reset AAD Profile operation for a Managed Cluster. </p>
    name: parameters
    type: <xref href="com.microsoft.azure.management.containerservice.ManagedClusterAADProfile?alt=com.microsoft.azure.management.containerservice.ManagedClusterAADProfile&text=ManagedClusterAADProfile" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="CloudException?alt=CloudException&text=CloudException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  summary: >-
    <p>Reset AAD Profile of a managed cluster. Update the AAD Profile for a managed cluster.</p>

    <p></p>
  syntax: public void beginResetAADProfile(String resourceGroupName, String resourceName, ManagedClusterAADProfile parameters)
  uid: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.beginResetAADProfile(String,String,ManagedClusterAADProfile)
- fullName: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.beginResetAADProfileAsync(String resourceGroupName, String resourceName, ManagedClusterAADProfile parameters)
  name: beginResetAADProfileAsync(String resourceGroupName, String resourceName, ManagedClusterAADProfile parameters)
  nameWithType: ManagedClustersInner.beginResetAADProfileAsync(String resourceGroupName, String resourceName, ManagedClusterAADProfile parameters)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the managed cluster resource. </p>
    name: resourceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>Parameters supplied to the Reset AAD Profile operation for a Managed Cluster. </p>
    name: parameters
    type: <xref href="com.microsoft.azure.management.containerservice.ManagedClusterAADProfile?alt=com.microsoft.azure.management.containerservice.ManagedClusterAADProfile&text=ManagedClusterAADProfile" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceResponse"></xref> object if successful. </p>
    type: <xref href="Observable%3CVoid%3E?alt=Observable%3CVoid%3E&text=Observable%3CVoid%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Reset AAD Profile of a managed cluster. Update the AAD Profile for a managed cluster.</p>

    <p></p>
  syntax: public Observable<Void> beginResetAADProfileAsync(String resourceGroupName, String resourceName, ManagedClusterAADProfile parameters)
  uid: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.beginResetAADProfileAsync(String,String,ManagedClusterAADProfile)
- fullName: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.beginResetAADProfileAsync(String resourceGroupName, String resourceName, ManagedClusterAADProfile parameters, final ServiceCallback<Void> serviceCallback)
  name: beginResetAADProfileAsync(String resourceGroupName, String resourceName, ManagedClusterAADProfile parameters, final ServiceCallback<Void> serviceCallback)
  nameWithType: ManagedClustersInner.beginResetAADProfileAsync(String resourceGroupName, String resourceName, ManagedClusterAADProfile parameters, final ServiceCallback<Void> serviceCallback)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the managed cluster resource. </p>
    name: resourceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>Parameters supplied to the Reset AAD Profile operation for a Managed Cluster. </p>
    name: parameters
    type: <xref href="com.microsoft.azure.management.containerservice.ManagedClusterAADProfile?alt=com.microsoft.azure.management.containerservice.ManagedClusterAADProfile&text=ManagedClusterAADProfile" data-throw-if-not-resolved="False"/>
  - description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    name: serviceCallback
    type: <xref href="final+ServiceCallback%3CVoid%3E?alt=final+ServiceCallback%3CVoid%3E&text=final+ServiceCallback%3CVoid%3E" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
    type: <xref href="ServiceFuture%3CVoid%3E?alt=ServiceFuture%3CVoid%3E&text=ServiceFuture%3CVoid%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Reset AAD Profile of a managed cluster. Update the AAD Profile for a managed cluster.</p>

    <p></p>
  syntax: public ServiceFuture<Void> beginResetAADProfileAsync(String resourceGroupName, String resourceName, ManagedClusterAADProfile parameters, final ServiceCallback<Void> serviceCallback)
  uid: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.beginResetAADProfileAsync(String,String,ManagedClusterAADProfile,final ServiceCallback<Void>)
- fullName: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.beginResetAADProfileWithServiceResponseAsync(String resourceGroupName, String resourceName, ManagedClusterAADProfile parameters)
  name: beginResetAADProfileWithServiceResponseAsync(String resourceGroupName, String resourceName, ManagedClusterAADProfile parameters)
  nameWithType: ManagedClustersInner.beginResetAADProfileWithServiceResponseAsync(String resourceGroupName, String resourceName, ManagedClusterAADProfile parameters)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the managed cluster resource. </p>
    name: resourceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>Parameters supplied to the Reset AAD Profile operation for a Managed Cluster. </p>
    name: parameters
    type: <xref href="com.microsoft.azure.management.containerservice.ManagedClusterAADProfile?alt=com.microsoft.azure.management.containerservice.ManagedClusterAADProfile&text=ManagedClusterAADProfile" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceResponse"></xref> object if successful. </p>
    type: <xref href="Observable%3CServiceResponse%3CVoid%3E%3E?alt=Observable%3CServiceResponse%3CVoid%3E%3E&text=Observable%3CServiceResponse%3CVoid%3E%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Reset AAD Profile of a managed cluster. Update the AAD Profile for a managed cluster.</p>

    <p></p>
  syntax: public Observable<ServiceResponse<Void>> beginResetAADProfileWithServiceResponseAsync(String resourceGroupName, String resourceName, ManagedClusterAADProfile parameters)
  uid: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.beginResetAADProfileWithServiceResponseAsync(String,String,ManagedClusterAADProfile)
- fullName: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.beginResetServicePrincipalProfile(String resourceGroupName, String resourceName, ManagedClusterServicePrincipalProfile parameters)
  name: beginResetServicePrincipalProfile(String resourceGroupName, String resourceName, ManagedClusterServicePrincipalProfile parameters)
  nameWithType: ManagedClustersInner.beginResetServicePrincipalProfile(String resourceGroupName, String resourceName, ManagedClusterServicePrincipalProfile parameters)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the managed cluster resource. </p>
    name: resourceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>Parameters supplied to the Reset Service Principal Profile operation for a Managed Cluster. </p>
    name: parameters
    type: <xref href="com.microsoft.azure.management.containerservice.ManagedClusterServicePrincipalProfile?alt=com.microsoft.azure.management.containerservice.ManagedClusterServicePrincipalProfile&text=ManagedClusterServicePrincipalProfile" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="CloudException?alt=CloudException&text=CloudException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  summary: >-
    <p>Reset Service Principal Profile of a managed cluster. Update the service principal Profile for a managed cluster.</p>

    <p></p>
  syntax: public void beginResetServicePrincipalProfile(String resourceGroupName, String resourceName, ManagedClusterServicePrincipalProfile parameters)
  uid: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.beginResetServicePrincipalProfile(String,String,ManagedClusterServicePrincipalProfile)
- fullName: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.beginResetServicePrincipalProfileAsync(String resourceGroupName, String resourceName, ManagedClusterServicePrincipalProfile parameters)
  name: beginResetServicePrincipalProfileAsync(String resourceGroupName, String resourceName, ManagedClusterServicePrincipalProfile parameters)
  nameWithType: ManagedClustersInner.beginResetServicePrincipalProfileAsync(String resourceGroupName, String resourceName, ManagedClusterServicePrincipalProfile parameters)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the managed cluster resource. </p>
    name: resourceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>Parameters supplied to the Reset Service Principal Profile operation for a Managed Cluster. </p>
    name: parameters
    type: <xref href="com.microsoft.azure.management.containerservice.ManagedClusterServicePrincipalProfile?alt=com.microsoft.azure.management.containerservice.ManagedClusterServicePrincipalProfile&text=ManagedClusterServicePrincipalProfile" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceResponse"></xref> object if successful. </p>
    type: <xref href="Observable%3CVoid%3E?alt=Observable%3CVoid%3E&text=Observable%3CVoid%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Reset Service Principal Profile of a managed cluster. Update the service principal Profile for a managed cluster.</p>

    <p></p>
  syntax: public Observable<Void> beginResetServicePrincipalProfileAsync(String resourceGroupName, String resourceName, ManagedClusterServicePrincipalProfile parameters)
  uid: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.beginResetServicePrincipalProfileAsync(String,String,ManagedClusterServicePrincipalProfile)
- fullName: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.beginResetServicePrincipalProfileAsync(String resourceGroupName, String resourceName, ManagedClusterServicePrincipalProfile parameters, final ServiceCallback<Void> serviceCallback)
  name: beginResetServicePrincipalProfileAsync(String resourceGroupName, String resourceName, ManagedClusterServicePrincipalProfile parameters, final ServiceCallback<Void> serviceCallback)
  nameWithType: ManagedClustersInner.beginResetServicePrincipalProfileAsync(String resourceGroupName, String resourceName, ManagedClusterServicePrincipalProfile parameters, final ServiceCallback<Void> serviceCallback)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the managed cluster resource. </p>
    name: resourceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>Parameters supplied to the Reset Service Principal Profile operation for a Managed Cluster. </p>
    name: parameters
    type: <xref href="com.microsoft.azure.management.containerservice.ManagedClusterServicePrincipalProfile?alt=com.microsoft.azure.management.containerservice.ManagedClusterServicePrincipalProfile&text=ManagedClusterServicePrincipalProfile" data-throw-if-not-resolved="False"/>
  - description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    name: serviceCallback
    type: <xref href="final+ServiceCallback%3CVoid%3E?alt=final+ServiceCallback%3CVoid%3E&text=final+ServiceCallback%3CVoid%3E" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
    type: <xref href="ServiceFuture%3CVoid%3E?alt=ServiceFuture%3CVoid%3E&text=ServiceFuture%3CVoid%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Reset Service Principal Profile of a managed cluster. Update the service principal Profile for a managed cluster.</p>

    <p></p>
  syntax: public ServiceFuture<Void> beginResetServicePrincipalProfileAsync(String resourceGroupName, String resourceName, ManagedClusterServicePrincipalProfile parameters, final ServiceCallback<Void> serviceCallback)
  uid: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.beginResetServicePrincipalProfileAsync(String,String,ManagedClusterServicePrincipalProfile,final ServiceCallback<Void>)
- fullName: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.beginResetServicePrincipalProfileWithServiceResponseAsync(String resourceGroupName, String resourceName, ManagedClusterServicePrincipalProfile parameters)
  name: beginResetServicePrincipalProfileWithServiceResponseAsync(String resourceGroupName, String resourceName, ManagedClusterServicePrincipalProfile parameters)
  nameWithType: ManagedClustersInner.beginResetServicePrincipalProfileWithServiceResponseAsync(String resourceGroupName, String resourceName, ManagedClusterServicePrincipalProfile parameters)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the managed cluster resource. </p>
    name: resourceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>Parameters supplied to the Reset Service Principal Profile operation for a Managed Cluster. </p>
    name: parameters
    type: <xref href="com.microsoft.azure.management.containerservice.ManagedClusterServicePrincipalProfile?alt=com.microsoft.azure.management.containerservice.ManagedClusterServicePrincipalProfile&text=ManagedClusterServicePrincipalProfile" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceResponse"></xref> object if successful. </p>
    type: <xref href="Observable%3CServiceResponse%3CVoid%3E%3E?alt=Observable%3CServiceResponse%3CVoid%3E%3E&text=Observable%3CServiceResponse%3CVoid%3E%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Reset Service Principal Profile of a managed cluster. Update the service principal Profile for a managed cluster.</p>

    <p></p>
  syntax: public Observable<ServiceResponse<Void>> beginResetServicePrincipalProfileWithServiceResponseAsync(String resourceGroupName, String resourceName, ManagedClusterServicePrincipalProfile parameters)
  uid: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.beginResetServicePrincipalProfileWithServiceResponseAsync(String,String,ManagedClusterServicePrincipalProfile)
- fullName: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.beginRotateClusterCertificates(String resourceGroupName, String resourceName)
  name: beginRotateClusterCertificates(String resourceGroupName, String resourceName)
  nameWithType: ManagedClustersInner.beginRotateClusterCertificates(String resourceGroupName, String resourceName)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the managed cluster resource. </p>
    name: resourceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="CloudException?alt=CloudException&text=CloudException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  summary: >-
    <p>Rotate certificates of a managed cluster. Rotate certificates of a managed cluster.</p>

    <p></p>
  syntax: public void beginRotateClusterCertificates(String resourceGroupName, String resourceName)
  uid: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.beginRotateClusterCertificates(String,String)
- fullName: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.beginRotateClusterCertificatesAsync(String resourceGroupName, String resourceName)
  name: beginRotateClusterCertificatesAsync(String resourceGroupName, String resourceName)
  nameWithType: ManagedClustersInner.beginRotateClusterCertificatesAsync(String resourceGroupName, String resourceName)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the managed cluster resource. </p>
    name: resourceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceResponse"></xref> object if successful. </p>
    type: <xref href="Observable%3CVoid%3E?alt=Observable%3CVoid%3E&text=Observable%3CVoid%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Rotate certificates of a managed cluster. Rotate certificates of a managed cluster.</p>

    <p></p>
  syntax: public Observable<Void> beginRotateClusterCertificatesAsync(String resourceGroupName, String resourceName)
  uid: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.beginRotateClusterCertificatesAsync(String,String)
- fullName: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.beginRotateClusterCertificatesAsync(String resourceGroupName, String resourceName, final ServiceCallback<Void> serviceCallback)
  name: beginRotateClusterCertificatesAsync(String resourceGroupName, String resourceName, final ServiceCallback<Void> serviceCallback)
  nameWithType: ManagedClustersInner.beginRotateClusterCertificatesAsync(String resourceGroupName, String resourceName, final ServiceCallback<Void> serviceCallback)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the managed cluster resource. </p>
    name: resourceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    name: serviceCallback
    type: <xref href="final+ServiceCallback%3CVoid%3E?alt=final+ServiceCallback%3CVoid%3E&text=final+ServiceCallback%3CVoid%3E" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
    type: <xref href="ServiceFuture%3CVoid%3E?alt=ServiceFuture%3CVoid%3E&text=ServiceFuture%3CVoid%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Rotate certificates of a managed cluster. Rotate certificates of a managed cluster.</p>

    <p></p>
  syntax: public ServiceFuture<Void> beginRotateClusterCertificatesAsync(String resourceGroupName, String resourceName, final ServiceCallback<Void> serviceCallback)
  uid: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.beginRotateClusterCertificatesAsync(String,String,final ServiceCallback<Void>)
- fullName: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.beginRotateClusterCertificatesWithServiceResponseAsync(String resourceGroupName, String resourceName)
  name: beginRotateClusterCertificatesWithServiceResponseAsync(String resourceGroupName, String resourceName)
  nameWithType: ManagedClustersInner.beginRotateClusterCertificatesWithServiceResponseAsync(String resourceGroupName, String resourceName)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the managed cluster resource. </p>
    name: resourceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceResponse"></xref> object if successful. </p>
    type: <xref href="Observable%3CServiceResponse%3CVoid%3E%3E?alt=Observable%3CServiceResponse%3CVoid%3E%3E&text=Observable%3CServiceResponse%3CVoid%3E%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Rotate certificates of a managed cluster. Rotate certificates of a managed cluster.</p>

    <p></p>
  syntax: public Observable<ServiceResponse<Void>> beginRotateClusterCertificatesWithServiceResponseAsync(String resourceGroupName, String resourceName)
  uid: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.beginRotateClusterCertificatesWithServiceResponseAsync(String,String)
- fullName: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.beginStart(String resourceGroupName, String resourceName)
  name: beginStart(String resourceGroupName, String resourceName)
  nameWithType: ManagedClustersInner.beginStart(String resourceGroupName, String resourceName)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the managed cluster resource. </p>
    name: resourceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="CloudException?alt=CloudException&text=CloudException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  summary: >-
    <p>Start Managed Cluster. Starts a Stopped Managed Cluster.</p>

    <p></p>
  syntax: public void beginStart(String resourceGroupName, String resourceName)
  uid: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.beginStart(String,String)
- fullName: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.beginStartAsync(String resourceGroupName, String resourceName)
  name: beginStartAsync(String resourceGroupName, String resourceName)
  nameWithType: ManagedClustersInner.beginStartAsync(String resourceGroupName, String resourceName)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the managed cluster resource. </p>
    name: resourceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceResponse"></xref> object if successful. </p>
    type: <xref href="Observable%3CVoid%3E?alt=Observable%3CVoid%3E&text=Observable%3CVoid%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Start Managed Cluster. Starts a Stopped Managed Cluster.</p>

    <p></p>
  syntax: public Observable<Void> beginStartAsync(String resourceGroupName, String resourceName)
  uid: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.beginStartAsync(String,String)
- fullName: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.beginStartAsync(String resourceGroupName, String resourceName, final ServiceCallback<Void> serviceCallback)
  name: beginStartAsync(String resourceGroupName, String resourceName, final ServiceCallback<Void> serviceCallback)
  nameWithType: ManagedClustersInner.beginStartAsync(String resourceGroupName, String resourceName, final ServiceCallback<Void> serviceCallback)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the managed cluster resource. </p>
    name: resourceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    name: serviceCallback
    type: <xref href="final+ServiceCallback%3CVoid%3E?alt=final+ServiceCallback%3CVoid%3E&text=final+ServiceCallback%3CVoid%3E" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
    type: <xref href="ServiceFuture%3CVoid%3E?alt=ServiceFuture%3CVoid%3E&text=ServiceFuture%3CVoid%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Start Managed Cluster. Starts a Stopped Managed Cluster.</p>

    <p></p>
  syntax: public ServiceFuture<Void> beginStartAsync(String resourceGroupName, String resourceName, final ServiceCallback<Void> serviceCallback)
  uid: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.beginStartAsync(String,String,final ServiceCallback<Void>)
- fullName: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.beginStartWithServiceResponseAsync(String resourceGroupName, String resourceName)
  name: beginStartWithServiceResponseAsync(String resourceGroupName, String resourceName)
  nameWithType: ManagedClustersInner.beginStartWithServiceResponseAsync(String resourceGroupName, String resourceName)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the managed cluster resource. </p>
    name: resourceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceResponse"></xref> object if successful. </p>
    type: <xref href="Observable%3CServiceResponse%3CVoid%3E%3E?alt=Observable%3CServiceResponse%3CVoid%3E%3E&text=Observable%3CServiceResponse%3CVoid%3E%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Start Managed Cluster. Starts a Stopped Managed Cluster.</p>

    <p></p>
  syntax: public Observable<ServiceResponse<Void>> beginStartWithServiceResponseAsync(String resourceGroupName, String resourceName)
  uid: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.beginStartWithServiceResponseAsync(String,String)
- fullName: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.beginStop(String resourceGroupName, String resourceName)
  name: beginStop(String resourceGroupName, String resourceName)
  nameWithType: ManagedClustersInner.beginStop(String resourceGroupName, String resourceName)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the managed cluster resource. </p>
    name: resourceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="CloudException?alt=CloudException&text=CloudException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  summary: >-
    <p>Stop Managed Cluster. Stops a Running Managed Cluster.</p>

    <p></p>
  syntax: public void beginStop(String resourceGroupName, String resourceName)
  uid: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.beginStop(String,String)
- fullName: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.beginStopAsync(String resourceGroupName, String resourceName)
  name: beginStopAsync(String resourceGroupName, String resourceName)
  nameWithType: ManagedClustersInner.beginStopAsync(String resourceGroupName, String resourceName)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the managed cluster resource. </p>
    name: resourceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceResponse"></xref> object if successful. </p>
    type: <xref href="Observable%3CVoid%3E?alt=Observable%3CVoid%3E&text=Observable%3CVoid%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Stop Managed Cluster. Stops a Running Managed Cluster.</p>

    <p></p>
  syntax: public Observable<Void> beginStopAsync(String resourceGroupName, String resourceName)
  uid: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.beginStopAsync(String,String)
- fullName: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.beginStopAsync(String resourceGroupName, String resourceName, final ServiceCallback<Void> serviceCallback)
  name: beginStopAsync(String resourceGroupName, String resourceName, final ServiceCallback<Void> serviceCallback)
  nameWithType: ManagedClustersInner.beginStopAsync(String resourceGroupName, String resourceName, final ServiceCallback<Void> serviceCallback)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the managed cluster resource. </p>
    name: resourceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    name: serviceCallback
    type: <xref href="final+ServiceCallback%3CVoid%3E?alt=final+ServiceCallback%3CVoid%3E&text=final+ServiceCallback%3CVoid%3E" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
    type: <xref href="ServiceFuture%3CVoid%3E?alt=ServiceFuture%3CVoid%3E&text=ServiceFuture%3CVoid%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Stop Managed Cluster. Stops a Running Managed Cluster.</p>

    <p></p>
  syntax: public ServiceFuture<Void> beginStopAsync(String resourceGroupName, String resourceName, final ServiceCallback<Void> serviceCallback)
  uid: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.beginStopAsync(String,String,final ServiceCallback<Void>)
- fullName: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.beginStopWithServiceResponseAsync(String resourceGroupName, String resourceName)
  name: beginStopWithServiceResponseAsync(String resourceGroupName, String resourceName)
  nameWithType: ManagedClustersInner.beginStopWithServiceResponseAsync(String resourceGroupName, String resourceName)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the managed cluster resource. </p>
    name: resourceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceResponse"></xref> object if successful. </p>
    type: <xref href="Observable%3CServiceResponse%3CVoid%3E%3E?alt=Observable%3CServiceResponse%3CVoid%3E%3E&text=Observable%3CServiceResponse%3CVoid%3E%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Stop Managed Cluster. Stops a Running Managed Cluster.</p>

    <p></p>
  syntax: public Observable<ServiceResponse<Void>> beginStopWithServiceResponseAsync(String resourceGroupName, String resourceName)
  uid: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.beginStopWithServiceResponseAsync(String,String)
- fullName: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.beginUpdateTags(String resourceGroupName, String resourceName)
  name: beginUpdateTags(String resourceGroupName, String resourceName)
  nameWithType: ManagedClustersInner.beginUpdateTags(String resourceGroupName, String resourceName)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the managed cluster resource. </p>
    name: resourceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="CloudException?alt=CloudException&text=CloudException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  returns:
    description: <p>the ManagedClusterInner object if successful. </p>
    type: <xref href="com.microsoft.azure.management.containerservice.implementation.ManagedClusterInner?alt=com.microsoft.azure.management.containerservice.implementation.ManagedClusterInner&text=ManagedClusterInner" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Updates tags on a managed cluster. Updates a managed cluster with the specified tags.</p>

    <p></p>
  syntax: public ManagedClusterInner beginUpdateTags(String resourceGroupName, String resourceName)
  uid: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.beginUpdateTags(String,String)
- fullName: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.beginUpdateTags(String resourceGroupName, String resourceName, Map<String, String> tags)
  name: beginUpdateTags(String resourceGroupName, String resourceName, Map<String, String> tags)
  nameWithType: ManagedClustersInner.beginUpdateTags(String resourceGroupName, String resourceName, Map<String, String> tags)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the managed cluster resource. </p>
    name: resourceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>Resource tags. </p>
    name: tags
    type: <xref href="Map%3CString%2C+String%3E?alt=Map%3CString%2C+String%3E&text=Map%3CString%2C+String%3E" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="CloudException?alt=CloudException&text=CloudException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  returns:
    description: <p>the ManagedClusterInner object if successful. </p>
    type: <xref href="com.microsoft.azure.management.containerservice.implementation.ManagedClusterInner?alt=com.microsoft.azure.management.containerservice.implementation.ManagedClusterInner&text=ManagedClusterInner" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Updates tags on a managed cluster. Updates a managed cluster with the specified tags.</p>

    <p></p>
  syntax: public ManagedClusterInner beginUpdateTags(String resourceGroupName, String resourceName, Map<String, String> tags)
  uid: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.beginUpdateTags(String,String,Map<String, String>)
- fullName: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.beginUpdateTagsAsync(String resourceGroupName, String resourceName)
  name: beginUpdateTagsAsync(String resourceGroupName, String resourceName)
  nameWithType: ManagedClustersInner.beginUpdateTagsAsync(String resourceGroupName, String resourceName)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the managed cluster resource. </p>
    name: resourceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the ManagedClusterInner object </p>
    type: Observable&lt;<xref href="com.microsoft.azure.management.containerservice.implementation.ManagedClusterInner?alt=com.microsoft.azure.management.containerservice.implementation.ManagedClusterInner&text=ManagedClusterInner" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Updates tags on a managed cluster. Updates a managed cluster with the specified tags.</p>

    <p></p>
  syntax: public Observable<ManagedClusterInner> beginUpdateTagsAsync(String resourceGroupName, String resourceName)
  uid: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.beginUpdateTagsAsync(String,String)
- fullName: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.beginUpdateTagsAsync(String resourceGroupName, String resourceName, final ServiceCallback<ManagedClusterInner> serviceCallback)
  name: beginUpdateTagsAsync(String resourceGroupName, String resourceName, final ServiceCallback<ManagedClusterInner> serviceCallback)
  nameWithType: ManagedClustersInner.beginUpdateTagsAsync(String resourceGroupName, String resourceName, final ServiceCallback<ManagedClusterInner> serviceCallback)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the managed cluster resource. </p>
    name: resourceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    name: serviceCallback
    type: final ServiceCallback&lt;<xref href="com.microsoft.azure.management.containerservice.implementation.ManagedClusterInner?alt=com.microsoft.azure.management.containerservice.implementation.ManagedClusterInner&text=ManagedClusterInner" data-throw-if-not-resolved="False"/>&gt;
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
    type: ServiceFuture&lt;<xref href="com.microsoft.azure.management.containerservice.implementation.ManagedClusterInner?alt=com.microsoft.azure.management.containerservice.implementation.ManagedClusterInner&text=ManagedClusterInner" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Updates tags on a managed cluster. Updates a managed cluster with the specified tags.</p>

    <p></p>
  syntax: public ServiceFuture<ManagedClusterInner> beginUpdateTagsAsync(String resourceGroupName, String resourceName, final ServiceCallback<ManagedClusterInner> serviceCallback)
  uid: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.beginUpdateTagsAsync(String,String,final ServiceCallback<ManagedClusterInner>)
- fullName: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.beginUpdateTagsAsync(String resourceGroupName, String resourceName, Map<String, String> tags)
  name: beginUpdateTagsAsync(String resourceGroupName, String resourceName, Map<String, String> tags)
  nameWithType: ManagedClustersInner.beginUpdateTagsAsync(String resourceGroupName, String resourceName, Map<String, String> tags)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the managed cluster resource. </p>
    name: resourceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>Resource tags. </p>
    name: tags
    type: <xref href="Map%3CString%2C+String%3E?alt=Map%3CString%2C+String%3E&text=Map%3CString%2C+String%3E" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the ManagedClusterInner object </p>
    type: Observable&lt;<xref href="com.microsoft.azure.management.containerservice.implementation.ManagedClusterInner?alt=com.microsoft.azure.management.containerservice.implementation.ManagedClusterInner&text=ManagedClusterInner" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Updates tags on a managed cluster. Updates a managed cluster with the specified tags.</p>

    <p></p>
  syntax: public Observable<ManagedClusterInner> beginUpdateTagsAsync(String resourceGroupName, String resourceName, Map<String, String> tags)
  uid: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.beginUpdateTagsAsync(String,String,Map<String, String>)
- fullName: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.beginUpdateTagsAsync(String resourceGroupName, String resourceName, Map<String, String> tags, final ServiceCallback<ManagedClusterInner> serviceCallback)
  name: beginUpdateTagsAsync(String resourceGroupName, String resourceName, Map<String, String> tags, final ServiceCallback<ManagedClusterInner> serviceCallback)
  nameWithType: ManagedClustersInner.beginUpdateTagsAsync(String resourceGroupName, String resourceName, Map<String, String> tags, final ServiceCallback<ManagedClusterInner> serviceCallback)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the managed cluster resource. </p>
    name: resourceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>Resource tags. </p>
    name: tags
    type: <xref href="Map%3CString%2C+String%3E?alt=Map%3CString%2C+String%3E&text=Map%3CString%2C+String%3E" data-throw-if-not-resolved="False"/>
  - description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    name: serviceCallback
    type: final ServiceCallback&lt;<xref href="com.microsoft.azure.management.containerservice.implementation.ManagedClusterInner?alt=com.microsoft.azure.management.containerservice.implementation.ManagedClusterInner&text=ManagedClusterInner" data-throw-if-not-resolved="False"/>&gt;
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
    type: ServiceFuture&lt;<xref href="com.microsoft.azure.management.containerservice.implementation.ManagedClusterInner?alt=com.microsoft.azure.management.containerservice.implementation.ManagedClusterInner&text=ManagedClusterInner" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Updates tags on a managed cluster. Updates a managed cluster with the specified tags.</p>

    <p></p>
  syntax: public ServiceFuture<ManagedClusterInner> beginUpdateTagsAsync(String resourceGroupName, String resourceName, Map<String, String> tags, final ServiceCallback<ManagedClusterInner> serviceCallback)
  uid: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.beginUpdateTagsAsync(String,String,Map<String, String>,final ServiceCallback<ManagedClusterInner>)
- fullName: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.beginUpdateTagsWithServiceResponseAsync(String resourceGroupName, String resourceName)
  name: beginUpdateTagsWithServiceResponseAsync(String resourceGroupName, String resourceName)
  nameWithType: ManagedClustersInner.beginUpdateTagsWithServiceResponseAsync(String resourceGroupName, String resourceName)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the managed cluster resource. </p>
    name: resourceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the ManagedClusterInner object </p>
    type: Observable&lt;ServiceResponse&lt;<xref href="com.microsoft.azure.management.containerservice.implementation.ManagedClusterInner?alt=com.microsoft.azure.management.containerservice.implementation.ManagedClusterInner&text=ManagedClusterInner" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Updates tags on a managed cluster. Updates a managed cluster with the specified tags.</p>

    <p></p>
  syntax: public Observable<ServiceResponse<ManagedClusterInner>> beginUpdateTagsWithServiceResponseAsync(String resourceGroupName, String resourceName)
  uid: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.beginUpdateTagsWithServiceResponseAsync(String,String)
- fullName: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.beginUpdateTagsWithServiceResponseAsync(String resourceGroupName, String resourceName, Map<String, String> tags)
  name: beginUpdateTagsWithServiceResponseAsync(String resourceGroupName, String resourceName, Map<String, String> tags)
  nameWithType: ManagedClustersInner.beginUpdateTagsWithServiceResponseAsync(String resourceGroupName, String resourceName, Map<String, String> tags)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the managed cluster resource. </p>
    name: resourceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>Resource tags. </p>
    name: tags
    type: <xref href="Map%3CString%2C+String%3E?alt=Map%3CString%2C+String%3E&text=Map%3CString%2C+String%3E" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the ManagedClusterInner object </p>
    type: Observable&lt;ServiceResponse&lt;<xref href="com.microsoft.azure.management.containerservice.implementation.ManagedClusterInner?alt=com.microsoft.azure.management.containerservice.implementation.ManagedClusterInner&text=ManagedClusterInner" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Updates tags on a managed cluster. Updates a managed cluster with the specified tags.</p>

    <p></p>
  syntax: public Observable<ServiceResponse<ManagedClusterInner>> beginUpdateTagsWithServiceResponseAsync(String resourceGroupName, String resourceName, Map<String, String> tags)
  uid: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.beginUpdateTagsWithServiceResponseAsync(String,String,Map<String, String>)
- fullName: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.createOrUpdate(String resourceGroupName, String resourceName, ManagedClusterInner parameters)
  name: createOrUpdate(String resourceGroupName, String resourceName, ManagedClusterInner parameters)
  nameWithType: ManagedClustersInner.createOrUpdate(String resourceGroupName, String resourceName, ManagedClusterInner parameters)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the managed cluster resource. </p>
    name: resourceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>Parameters supplied to the Create or Update a Managed Cluster operation. </p>
    name: parameters
    type: <xref href="com.microsoft.azure.management.containerservice.implementation.ManagedClusterInner?alt=com.microsoft.azure.management.containerservice.implementation.ManagedClusterInner&text=ManagedClusterInner" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="CloudException?alt=CloudException&text=CloudException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  returns:
    description: <p>the ManagedClusterInner object if successful. </p>
    type: <xref href="com.microsoft.azure.management.containerservice.implementation.ManagedClusterInner?alt=com.microsoft.azure.management.containerservice.implementation.ManagedClusterInner&text=ManagedClusterInner" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Creates or updates a managed cluster. Creates or updates a managed cluster with the specified configuration for agents and Kubernetes version.</p>

    <p></p>
  syntax: public ManagedClusterInner createOrUpdate(String resourceGroupName, String resourceName, ManagedClusterInner parameters)
  uid: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.createOrUpdate(String,String,ManagedClusterInner)
- fullName: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.createOrUpdateAsync(String resourceGroupName, String resourceName, ManagedClusterInner parameters)
  name: createOrUpdateAsync(String resourceGroupName, String resourceName, ManagedClusterInner parameters)
  nameWithType: ManagedClustersInner.createOrUpdateAsync(String resourceGroupName, String resourceName, ManagedClusterInner parameters)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the managed cluster resource. </p>
    name: resourceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>Parameters supplied to the Create or Update a Managed Cluster operation. </p>
    name: parameters
    type: <xref href="com.microsoft.azure.management.containerservice.implementation.ManagedClusterInner?alt=com.microsoft.azure.management.containerservice.implementation.ManagedClusterInner&text=ManagedClusterInner" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable for the request </p>
    type: Observable&lt;<xref href="com.microsoft.azure.management.containerservice.implementation.ManagedClusterInner?alt=com.microsoft.azure.management.containerservice.implementation.ManagedClusterInner&text=ManagedClusterInner" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Creates or updates a managed cluster. Creates or updates a managed cluster with the specified configuration for agents and Kubernetes version.</p>

    <p></p>
  syntax: public Observable<ManagedClusterInner> createOrUpdateAsync(String resourceGroupName, String resourceName, ManagedClusterInner parameters)
  uid: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.createOrUpdateAsync(String,String,ManagedClusterInner)
- fullName: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.createOrUpdateAsync(String resourceGroupName, String resourceName, ManagedClusterInner parameters, final ServiceCallback<ManagedClusterInner> serviceCallback)
  name: createOrUpdateAsync(String resourceGroupName, String resourceName, ManagedClusterInner parameters, final ServiceCallback<ManagedClusterInner> serviceCallback)
  nameWithType: ManagedClustersInner.createOrUpdateAsync(String resourceGroupName, String resourceName, ManagedClusterInner parameters, final ServiceCallback<ManagedClusterInner> serviceCallback)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the managed cluster resource. </p>
    name: resourceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>Parameters supplied to the Create or Update a Managed Cluster operation. </p>
    name: parameters
    type: <xref href="com.microsoft.azure.management.containerservice.implementation.ManagedClusterInner?alt=com.microsoft.azure.management.containerservice.implementation.ManagedClusterInner&text=ManagedClusterInner" data-throw-if-not-resolved="False"/>
  - description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    name: serviceCallback
    type: final ServiceCallback&lt;<xref href="com.microsoft.azure.management.containerservice.implementation.ManagedClusterInner?alt=com.microsoft.azure.management.containerservice.implementation.ManagedClusterInner&text=ManagedClusterInner" data-throw-if-not-resolved="False"/>&gt;
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
    type: ServiceFuture&lt;<xref href="com.microsoft.azure.management.containerservice.implementation.ManagedClusterInner?alt=com.microsoft.azure.management.containerservice.implementation.ManagedClusterInner&text=ManagedClusterInner" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Creates or updates a managed cluster. Creates or updates a managed cluster with the specified configuration for agents and Kubernetes version.</p>

    <p></p>
  syntax: public ServiceFuture<ManagedClusterInner> createOrUpdateAsync(String resourceGroupName, String resourceName, ManagedClusterInner parameters, final ServiceCallback<ManagedClusterInner> serviceCallback)
  uid: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.createOrUpdateAsync(String,String,ManagedClusterInner,final ServiceCallback<ManagedClusterInner>)
- fullName: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.createOrUpdateWithServiceResponseAsync(String resourceGroupName, String resourceName, ManagedClusterInner parameters)
  name: createOrUpdateWithServiceResponseAsync(String resourceGroupName, String resourceName, ManagedClusterInner parameters)
  nameWithType: ManagedClustersInner.createOrUpdateWithServiceResponseAsync(String resourceGroupName, String resourceName, ManagedClusterInner parameters)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the managed cluster resource. </p>
    name: resourceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>Parameters supplied to the Create or Update a Managed Cluster operation. </p>
    name: parameters
    type: <xref href="com.microsoft.azure.management.containerservice.implementation.ManagedClusterInner?alt=com.microsoft.azure.management.containerservice.implementation.ManagedClusterInner&text=ManagedClusterInner" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable for the request </p>
    type: Observable&lt;ServiceResponse&lt;<xref href="com.microsoft.azure.management.containerservice.implementation.ManagedClusterInner?alt=com.microsoft.azure.management.containerservice.implementation.ManagedClusterInner&text=ManagedClusterInner" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Creates or updates a managed cluster. Creates or updates a managed cluster with the specified configuration for agents and Kubernetes version.</p>

    <p></p>
  syntax: public Observable<ServiceResponse<ManagedClusterInner>> createOrUpdateWithServiceResponseAsync(String resourceGroupName, String resourceName, ManagedClusterInner parameters)
  uid: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.createOrUpdateWithServiceResponseAsync(String,String,ManagedClusterInner)
- fullName: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.delete(String resourceGroupName, String resourceName)
  name: delete(String resourceGroupName, String resourceName)
  nameWithType: ManagedClustersInner.delete(String resourceGroupName, String resourceName)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the managed cluster resource. </p>
    name: resourceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="CloudException?alt=CloudException&text=CloudException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  summary: >-
    <p>Deletes a managed cluster. Deletes the managed cluster with a specified resource group and name.</p>

    <p></p>
  syntax: public void delete(String resourceGroupName, String resourceName)
  uid: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.delete(String,String)
- fullName: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.deleteAsync(String resourceGroupName, String resourceName)
  name: deleteAsync(String resourceGroupName, String resourceName)
  nameWithType: ManagedClustersInner.deleteAsync(String resourceGroupName, String resourceName)
  overridden: com.microsoft.azure.management.resources.fluentcore.collection.InnerSupportsDelete.deleteAsync(String,String)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the managed cluster resource. </p>
    name: resourceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable for the request </p>
    type: <xref href="Observable%3CVoid%3E?alt=Observable%3CVoid%3E&text=Observable%3CVoid%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Deletes a managed cluster. Deletes the managed cluster with a specified resource group and name.</p>

    <p></p>
  syntax: public Observable<Void> deleteAsync(String resourceGroupName, String resourceName)
  uid: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.deleteAsync(String,String)
- fullName: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.deleteAsync(String resourceGroupName, String resourceName, final ServiceCallback<Void> serviceCallback)
  name: deleteAsync(String resourceGroupName, String resourceName, final ServiceCallback<Void> serviceCallback)
  nameWithType: ManagedClustersInner.deleteAsync(String resourceGroupName, String resourceName, final ServiceCallback<Void> serviceCallback)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the managed cluster resource. </p>
    name: resourceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    name: serviceCallback
    type: <xref href="final+ServiceCallback%3CVoid%3E?alt=final+ServiceCallback%3CVoid%3E&text=final+ServiceCallback%3CVoid%3E" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
    type: <xref href="ServiceFuture%3CVoid%3E?alt=ServiceFuture%3CVoid%3E&text=ServiceFuture%3CVoid%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Deletes a managed cluster. Deletes the managed cluster with a specified resource group and name.</p>

    <p></p>
  syntax: public ServiceFuture<Void> deleteAsync(String resourceGroupName, String resourceName, final ServiceCallback<Void> serviceCallback)
  uid: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.deleteAsync(String,String,final ServiceCallback<Void>)
- fullName: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.deleteWithServiceResponseAsync(String resourceGroupName, String resourceName)
  name: deleteWithServiceResponseAsync(String resourceGroupName, String resourceName)
  nameWithType: ManagedClustersInner.deleteWithServiceResponseAsync(String resourceGroupName, String resourceName)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the managed cluster resource. </p>
    name: resourceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable for the request </p>
    type: <xref href="Observable%3CServiceResponse%3CVoid%3E%3E?alt=Observable%3CServiceResponse%3CVoid%3E%3E&text=Observable%3CServiceResponse%3CVoid%3E%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Deletes a managed cluster. Deletes the managed cluster with a specified resource group and name.</p>

    <p></p>
  syntax: public Observable<ServiceResponse<Void>> deleteWithServiceResponseAsync(String resourceGroupName, String resourceName)
  uid: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.deleteWithServiceResponseAsync(String,String)
- fullName: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.getAccessProfile(String resourceGroupName, String resourceName, String roleName)
  name: getAccessProfile(String resourceGroupName, String resourceName, String roleName)
  nameWithType: ManagedClustersInner.getAccessProfile(String resourceGroupName, String resourceName, String roleName)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the managed cluster resource. </p>
    name: resourceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the role for managed cluster accessProfile resource. </p>
    name: roleName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="CloudException?alt=CloudException&text=CloudException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  returns:
    description: <p>the ManagedClusterAccessProfileInner object if successful. </p>
    type: <xref href="com.microsoft.azure.management.containerservice.implementation.ManagedClusterAccessProfileInner?alt=com.microsoft.azure.management.containerservice.implementation.ManagedClusterAccessProfileInner&text=ManagedClusterAccessProfileInner" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets an access profile of a managed cluster. Gets the accessProfile for the specified role name of the managed cluster with a specified resource group and name. **WARNING**: This API will be deprecated. Instead use [ListClusterUserCredentials](<a href="https://docs.microsoft.com/en-us/rest/api/aks/managedclusters/listclusterusercredentials">https://docs.microsoft.com/en-us/rest/api/aks/managedclusters/listclusterusercredentials</a>) or [ListClusterAdminCredentials](<a href="https://docs.microsoft.com/en-us/rest/api/aks/managedclusters/listclusteradmincredentials">https://docs.microsoft.com/en-us/rest/api/aks/managedclusters/listclusteradmincredentials</a>) .</p>

    <p></p>
  syntax: public ManagedClusterAccessProfileInner getAccessProfile(String resourceGroupName, String resourceName, String roleName)
  uid: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.getAccessProfile(String,String,String)
- fullName: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.getAccessProfileAsync(String resourceGroupName, String resourceName, String roleName)
  name: getAccessProfileAsync(String resourceGroupName, String resourceName, String roleName)
  nameWithType: ManagedClustersInner.getAccessProfileAsync(String resourceGroupName, String resourceName, String roleName)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the managed cluster resource. </p>
    name: resourceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the role for managed cluster accessProfile resource. </p>
    name: roleName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the ManagedClusterAccessProfileInner object </p>
    type: Observable&lt;<xref href="com.microsoft.azure.management.containerservice.implementation.ManagedClusterAccessProfileInner?alt=com.microsoft.azure.management.containerservice.implementation.ManagedClusterAccessProfileInner&text=ManagedClusterAccessProfileInner" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Gets an access profile of a managed cluster. Gets the accessProfile for the specified role name of the managed cluster with a specified resource group and name. **WARNING**: This API will be deprecated. Instead use [ListClusterUserCredentials](<a href="https://docs.microsoft.com/en-us/rest/api/aks/managedclusters/listclusterusercredentials">https://docs.microsoft.com/en-us/rest/api/aks/managedclusters/listclusterusercredentials</a>) or [ListClusterAdminCredentials](<a href="https://docs.microsoft.com/en-us/rest/api/aks/managedclusters/listclusteradmincredentials">https://docs.microsoft.com/en-us/rest/api/aks/managedclusters/listclusteradmincredentials</a>) .</p>

    <p></p>
  syntax: public Observable<ManagedClusterAccessProfileInner> getAccessProfileAsync(String resourceGroupName, String resourceName, String roleName)
  uid: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.getAccessProfileAsync(String,String,String)
- fullName: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.getAccessProfileAsync(String resourceGroupName, String resourceName, String roleName, final ServiceCallback<ManagedClusterAccessProfileInner> serviceCallback)
  name: getAccessProfileAsync(String resourceGroupName, String resourceName, String roleName, final ServiceCallback<ManagedClusterAccessProfileInner> serviceCallback)
  nameWithType: ManagedClustersInner.getAccessProfileAsync(String resourceGroupName, String resourceName, String roleName, final ServiceCallback<ManagedClusterAccessProfileInner> serviceCallback)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the managed cluster resource. </p>
    name: resourceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the role for managed cluster accessProfile resource. </p>
    name: roleName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    name: serviceCallback
    type: final ServiceCallback&lt;<xref href="com.microsoft.azure.management.containerservice.implementation.ManagedClusterAccessProfileInner?alt=com.microsoft.azure.management.containerservice.implementation.ManagedClusterAccessProfileInner&text=ManagedClusterAccessProfileInner" data-throw-if-not-resolved="False"/>&gt;
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
    type: ServiceFuture&lt;<xref href="com.microsoft.azure.management.containerservice.implementation.ManagedClusterAccessProfileInner?alt=com.microsoft.azure.management.containerservice.implementation.ManagedClusterAccessProfileInner&text=ManagedClusterAccessProfileInner" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Gets an access profile of a managed cluster. Gets the accessProfile for the specified role name of the managed cluster with a specified resource group and name. **WARNING**: This API will be deprecated. Instead use [ListClusterUserCredentials](<a href="https://docs.microsoft.com/en-us/rest/api/aks/managedclusters/listclusterusercredentials">https://docs.microsoft.com/en-us/rest/api/aks/managedclusters/listclusterusercredentials</a>) or [ListClusterAdminCredentials](<a href="https://docs.microsoft.com/en-us/rest/api/aks/managedclusters/listclusteradmincredentials">https://docs.microsoft.com/en-us/rest/api/aks/managedclusters/listclusteradmincredentials</a>) .</p>

    <p></p>
  syntax: public ServiceFuture<ManagedClusterAccessProfileInner> getAccessProfileAsync(String resourceGroupName, String resourceName, String roleName, final ServiceCallback<ManagedClusterAccessProfileInner> serviceCallback)
  uid: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.getAccessProfileAsync(String,String,String,final ServiceCallback<ManagedClusterAccessProfileInner>)
- fullName: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.getAccessProfileWithServiceResponseAsync(String resourceGroupName, String resourceName, String roleName)
  name: getAccessProfileWithServiceResponseAsync(String resourceGroupName, String resourceName, String roleName)
  nameWithType: ManagedClustersInner.getAccessProfileWithServiceResponseAsync(String resourceGroupName, String resourceName, String roleName)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the managed cluster resource. </p>
    name: resourceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the role for managed cluster accessProfile resource. </p>
    name: roleName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the ManagedClusterAccessProfileInner object </p>
    type: Observable&lt;ServiceResponse&lt;<xref href="com.microsoft.azure.management.containerservice.implementation.ManagedClusterAccessProfileInner?alt=com.microsoft.azure.management.containerservice.implementation.ManagedClusterAccessProfileInner&text=ManagedClusterAccessProfileInner" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Gets an access profile of a managed cluster. Gets the accessProfile for the specified role name of the managed cluster with a specified resource group and name. **WARNING**: This API will be deprecated. Instead use [ListClusterUserCredentials](<a href="https://docs.microsoft.com/en-us/rest/api/aks/managedclusters/listclusterusercredentials">https://docs.microsoft.com/en-us/rest/api/aks/managedclusters/listclusterusercredentials</a>) or [ListClusterAdminCredentials](<a href="https://docs.microsoft.com/en-us/rest/api/aks/managedclusters/listclusteradmincredentials">https://docs.microsoft.com/en-us/rest/api/aks/managedclusters/listclusteradmincredentials</a>) .</p>

    <p></p>
  syntax: public Observable<ServiceResponse<ManagedClusterAccessProfileInner>> getAccessProfileWithServiceResponseAsync(String resourceGroupName, String resourceName, String roleName)
  uid: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.getAccessProfileWithServiceResponseAsync(String,String,String)
- fullName: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.getByResourceGroup(String resourceGroupName, String resourceName)
  name: getByResourceGroup(String resourceGroupName, String resourceName)
  nameWithType: ManagedClustersInner.getByResourceGroup(String resourceGroupName, String resourceName)
  overridden: com.microsoft.azure.management.resources.fluentcore.collection.InnerSupportsGet.getByResourceGroup(String,String)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the managed cluster resource. </p>
    name: resourceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="CloudException?alt=CloudException&text=CloudException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  returns:
    description: <p>the ManagedClusterInner object if successful. </p>
    type: <xref href="com.microsoft.azure.management.containerservice.implementation.ManagedClusterInner?alt=com.microsoft.azure.management.containerservice.implementation.ManagedClusterInner&text=ManagedClusterInner" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets a managed cluster. Gets the details of the managed cluster with a specified resource group and name.</p>

    <p></p>
  syntax: public ManagedClusterInner getByResourceGroup(String resourceGroupName, String resourceName)
  uid: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.getByResourceGroup(String,String)
- fullName: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.getByResourceGroupAsync(String resourceGroupName, String resourceName)
  name: getByResourceGroupAsync(String resourceGroupName, String resourceName)
  nameWithType: ManagedClustersInner.getByResourceGroupAsync(String resourceGroupName, String resourceName)
  overridden: com.microsoft.azure.management.resources.fluentcore.collection.InnerSupportsGet.getByResourceGroupAsync(String,String)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the managed cluster resource. </p>
    name: resourceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the ManagedClusterInner object </p>
    type: Observable&lt;<xref href="com.microsoft.azure.management.containerservice.implementation.ManagedClusterInner?alt=com.microsoft.azure.management.containerservice.implementation.ManagedClusterInner&text=ManagedClusterInner" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Gets a managed cluster. Gets the details of the managed cluster with a specified resource group and name.</p>

    <p></p>
  syntax: public Observable<ManagedClusterInner> getByResourceGroupAsync(String resourceGroupName, String resourceName)
  uid: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.getByResourceGroupAsync(String,String)
- fullName: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.getByResourceGroupAsync(String resourceGroupName, String resourceName, final ServiceCallback<ManagedClusterInner> serviceCallback)
  name: getByResourceGroupAsync(String resourceGroupName, String resourceName, final ServiceCallback<ManagedClusterInner> serviceCallback)
  nameWithType: ManagedClustersInner.getByResourceGroupAsync(String resourceGroupName, String resourceName, final ServiceCallback<ManagedClusterInner> serviceCallback)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the managed cluster resource. </p>
    name: resourceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    name: serviceCallback
    type: final ServiceCallback&lt;<xref href="com.microsoft.azure.management.containerservice.implementation.ManagedClusterInner?alt=com.microsoft.azure.management.containerservice.implementation.ManagedClusterInner&text=ManagedClusterInner" data-throw-if-not-resolved="False"/>&gt;
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
    type: ServiceFuture&lt;<xref href="com.microsoft.azure.management.containerservice.implementation.ManagedClusterInner?alt=com.microsoft.azure.management.containerservice.implementation.ManagedClusterInner&text=ManagedClusterInner" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Gets a managed cluster. Gets the details of the managed cluster with a specified resource group and name.</p>

    <p></p>
  syntax: public ServiceFuture<ManagedClusterInner> getByResourceGroupAsync(String resourceGroupName, String resourceName, final ServiceCallback<ManagedClusterInner> serviceCallback)
  uid: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.getByResourceGroupAsync(String,String,final ServiceCallback<ManagedClusterInner>)
- fullName: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.getByResourceGroupWithServiceResponseAsync(String resourceGroupName, String resourceName)
  name: getByResourceGroupWithServiceResponseAsync(String resourceGroupName, String resourceName)
  nameWithType: ManagedClustersInner.getByResourceGroupWithServiceResponseAsync(String resourceGroupName, String resourceName)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the managed cluster resource. </p>
    name: resourceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the ManagedClusterInner object </p>
    type: Observable&lt;ServiceResponse&lt;<xref href="com.microsoft.azure.management.containerservice.implementation.ManagedClusterInner?alt=com.microsoft.azure.management.containerservice.implementation.ManagedClusterInner&text=ManagedClusterInner" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Gets a managed cluster. Gets the details of the managed cluster with a specified resource group and name.</p>

    <p></p>
  syntax: public Observable<ServiceResponse<ManagedClusterInner>> getByResourceGroupWithServiceResponseAsync(String resourceGroupName, String resourceName)
  uid: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.getByResourceGroupWithServiceResponseAsync(String,String)
- fullName: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.getUpgradeProfile(String resourceGroupName, String resourceName)
  name: getUpgradeProfile(String resourceGroupName, String resourceName)
  nameWithType: ManagedClustersInner.getUpgradeProfile(String resourceGroupName, String resourceName)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the managed cluster resource. </p>
    name: resourceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="CloudException?alt=CloudException&text=CloudException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  returns:
    description: <p>the ManagedClusterUpgradeProfileInner object if successful. </p>
    type: <xref href="com.microsoft.azure.management.containerservice.implementation.ManagedClusterUpgradeProfileInner?alt=com.microsoft.azure.management.containerservice.implementation.ManagedClusterUpgradeProfileInner&text=ManagedClusterUpgradeProfileInner" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets upgrade profile for a managed cluster. Gets the details of the upgrade profile for a managed cluster with a specified resource group and name.</p>

    <p></p>
  syntax: public ManagedClusterUpgradeProfileInner getUpgradeProfile(String resourceGroupName, String resourceName)
  uid: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.getUpgradeProfile(String,String)
- fullName: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.getUpgradeProfileAsync(String resourceGroupName, String resourceName)
  name: getUpgradeProfileAsync(String resourceGroupName, String resourceName)
  nameWithType: ManagedClustersInner.getUpgradeProfileAsync(String resourceGroupName, String resourceName)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the managed cluster resource. </p>
    name: resourceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the ManagedClusterUpgradeProfileInner object </p>
    type: Observable&lt;<xref href="com.microsoft.azure.management.containerservice.implementation.ManagedClusterUpgradeProfileInner?alt=com.microsoft.azure.management.containerservice.implementation.ManagedClusterUpgradeProfileInner&text=ManagedClusterUpgradeProfileInner" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Gets upgrade profile for a managed cluster. Gets the details of the upgrade profile for a managed cluster with a specified resource group and name.</p>

    <p></p>
  syntax: public Observable<ManagedClusterUpgradeProfileInner> getUpgradeProfileAsync(String resourceGroupName, String resourceName)
  uid: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.getUpgradeProfileAsync(String,String)
- fullName: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.getUpgradeProfileAsync(String resourceGroupName, String resourceName, final ServiceCallback<ManagedClusterUpgradeProfileInner> serviceCallback)
  name: getUpgradeProfileAsync(String resourceGroupName, String resourceName, final ServiceCallback<ManagedClusterUpgradeProfileInner> serviceCallback)
  nameWithType: ManagedClustersInner.getUpgradeProfileAsync(String resourceGroupName, String resourceName, final ServiceCallback<ManagedClusterUpgradeProfileInner> serviceCallback)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the managed cluster resource. </p>
    name: resourceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    name: serviceCallback
    type: final ServiceCallback&lt;<xref href="com.microsoft.azure.management.containerservice.implementation.ManagedClusterUpgradeProfileInner?alt=com.microsoft.azure.management.containerservice.implementation.ManagedClusterUpgradeProfileInner&text=ManagedClusterUpgradeProfileInner" data-throw-if-not-resolved="False"/>&gt;
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
    type: ServiceFuture&lt;<xref href="com.microsoft.azure.management.containerservice.implementation.ManagedClusterUpgradeProfileInner?alt=com.microsoft.azure.management.containerservice.implementation.ManagedClusterUpgradeProfileInner&text=ManagedClusterUpgradeProfileInner" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Gets upgrade profile for a managed cluster. Gets the details of the upgrade profile for a managed cluster with a specified resource group and name.</p>

    <p></p>
  syntax: public ServiceFuture<ManagedClusterUpgradeProfileInner> getUpgradeProfileAsync(String resourceGroupName, String resourceName, final ServiceCallback<ManagedClusterUpgradeProfileInner> serviceCallback)
  uid: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.getUpgradeProfileAsync(String,String,final ServiceCallback<ManagedClusterUpgradeProfileInner>)
- fullName: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.getUpgradeProfileWithServiceResponseAsync(String resourceGroupName, String resourceName)
  name: getUpgradeProfileWithServiceResponseAsync(String resourceGroupName, String resourceName)
  nameWithType: ManagedClustersInner.getUpgradeProfileWithServiceResponseAsync(String resourceGroupName, String resourceName)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the managed cluster resource. </p>
    name: resourceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the ManagedClusterUpgradeProfileInner object </p>
    type: Observable&lt;ServiceResponse&lt;<xref href="com.microsoft.azure.management.containerservice.implementation.ManagedClusterUpgradeProfileInner?alt=com.microsoft.azure.management.containerservice.implementation.ManagedClusterUpgradeProfileInner&text=ManagedClusterUpgradeProfileInner" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Gets upgrade profile for a managed cluster. Gets the details of the upgrade profile for a managed cluster with a specified resource group and name.</p>

    <p></p>
  syntax: public Observable<ServiceResponse<ManagedClusterUpgradeProfileInner>> getUpgradeProfileWithServiceResponseAsync(String resourceGroupName, String resourceName)
  uid: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.getUpgradeProfileWithServiceResponseAsync(String,String)
- fullName: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.list()
  name: list()
  nameWithType: ManagedClustersInner.list()
  overridden: com.microsoft.azure.management.resources.fluentcore.collection.InnerSupportsListing.list()
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="CloudException?alt=CloudException&text=CloudException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  returns:
    description: <p>the PagedList&lt;ManagedClusterInner&gt; object if successful. </p>
    type: PagedList&lt;<xref href="com.microsoft.azure.management.containerservice.implementation.ManagedClusterInner?alt=com.microsoft.azure.management.containerservice.implementation.ManagedClusterInner&text=ManagedClusterInner" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Gets a list of managed clusters in the specified subscription. Gets a list of managed clusters in the specified subscription. The operation returns properties of each managed cluster.</p>

    <p></p>
  syntax: public PagedList<ManagedClusterInner> list()
  uid: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.list()
- fullName: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.listAsync()
  name: listAsync()
  nameWithType: ManagedClustersInner.listAsync()
  overridden: com.microsoft.azure.management.resources.fluentcore.collection.InnerSupportsListing.listAsync()
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the PagedList&lt;ManagedClusterInner&gt; object </p>
    type: Observable&lt;Page&lt;<xref href="com.microsoft.azure.management.containerservice.implementation.ManagedClusterInner?alt=com.microsoft.azure.management.containerservice.implementation.ManagedClusterInner&text=ManagedClusterInner" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Gets a list of managed clusters in the specified subscription. Gets a list of managed clusters in the specified subscription. The operation returns properties of each managed cluster.</p>

    <p></p>
  syntax: public Observable<Page<ManagedClusterInner>> listAsync()
  uid: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.listAsync()
- fullName: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.listAsync(final ListOperationCallback<ManagedClusterInner> serviceCallback)
  name: listAsync(final ListOperationCallback<ManagedClusterInner> serviceCallback)
  nameWithType: ManagedClustersInner.listAsync(final ListOperationCallback<ManagedClusterInner> serviceCallback)
  parameters:
  - description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    name: serviceCallback
    type: final ListOperationCallback&lt;<xref href="com.microsoft.azure.management.containerservice.implementation.ManagedClusterInner?alt=com.microsoft.azure.management.containerservice.implementation.ManagedClusterInner&text=ManagedClusterInner" data-throw-if-not-resolved="False"/>&gt;
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
    type: ServiceFuture&lt;List&lt;<xref href="com.microsoft.azure.management.containerservice.implementation.ManagedClusterInner?alt=com.microsoft.azure.management.containerservice.implementation.ManagedClusterInner&text=ManagedClusterInner" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Gets a list of managed clusters in the specified subscription. Gets a list of managed clusters in the specified subscription. The operation returns properties of each managed cluster.</p>

    <p></p>
  syntax: public ServiceFuture<List<ManagedClusterInner>> listAsync(final ListOperationCallback<ManagedClusterInner> serviceCallback)
  uid: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.listAsync(final ListOperationCallback<ManagedClusterInner>)
- fullName: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.listByResourceGroup(final String resourceGroupName)
  name: listByResourceGroup(final String resourceGroupName)
  nameWithType: ManagedClustersInner.listByResourceGroup(final String resourceGroupName)
  overridden: com.microsoft.azure.management.resources.fluentcore.collection.InnerSupportsListing.listByResourceGroup(String)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="CloudException?alt=CloudException&text=CloudException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  returns:
    description: <p>the PagedList&lt;ManagedClusterInner&gt; object if successful. </p>
    type: PagedList&lt;<xref href="com.microsoft.azure.management.containerservice.implementation.ManagedClusterInner?alt=com.microsoft.azure.management.containerservice.implementation.ManagedClusterInner&text=ManagedClusterInner" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Lists managed clusters in the specified subscription and resource group. Lists managed clusters in the specified subscription and resource group. The operation returns properties of each managed cluster.</p>

    <p></p>
  syntax: public PagedList<ManagedClusterInner> listByResourceGroup(final String resourceGroupName)
  uid: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.listByResourceGroup(final String)
- fullName: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.listByResourceGroupAsync(final String resourceGroupName)
  name: listByResourceGroupAsync(final String resourceGroupName)
  nameWithType: ManagedClustersInner.listByResourceGroupAsync(final String resourceGroupName)
  overridden: com.microsoft.azure.management.resources.fluentcore.collection.InnerSupportsListing.listByResourceGroupAsync(String)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the PagedList&lt;ManagedClusterInner&gt; object </p>
    type: Observable&lt;Page&lt;<xref href="com.microsoft.azure.management.containerservice.implementation.ManagedClusterInner?alt=com.microsoft.azure.management.containerservice.implementation.ManagedClusterInner&text=ManagedClusterInner" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Lists managed clusters in the specified subscription and resource group. Lists managed clusters in the specified subscription and resource group. The operation returns properties of each managed cluster.</p>

    <p></p>
  syntax: public Observable<Page<ManagedClusterInner>> listByResourceGroupAsync(final String resourceGroupName)
  uid: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.listByResourceGroupAsync(final String)
- fullName: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.listByResourceGroupAsync(final String resourceGroupName, final ListOperationCallback<ManagedClusterInner> serviceCallback)
  name: listByResourceGroupAsync(final String resourceGroupName, final ListOperationCallback<ManagedClusterInner> serviceCallback)
  nameWithType: ManagedClustersInner.listByResourceGroupAsync(final String resourceGroupName, final ListOperationCallback<ManagedClusterInner> serviceCallback)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    name: serviceCallback
    type: final ListOperationCallback&lt;<xref href="com.microsoft.azure.management.containerservice.implementation.ManagedClusterInner?alt=com.microsoft.azure.management.containerservice.implementation.ManagedClusterInner&text=ManagedClusterInner" data-throw-if-not-resolved="False"/>&gt;
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
    type: ServiceFuture&lt;List&lt;<xref href="com.microsoft.azure.management.containerservice.implementation.ManagedClusterInner?alt=com.microsoft.azure.management.containerservice.implementation.ManagedClusterInner&text=ManagedClusterInner" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Lists managed clusters in the specified subscription and resource group. Lists managed clusters in the specified subscription and resource group. The operation returns properties of each managed cluster.</p>

    <p></p>
  syntax: public ServiceFuture<List<ManagedClusterInner>> listByResourceGroupAsync(final String resourceGroupName, final ListOperationCallback<ManagedClusterInner> serviceCallback)
  uid: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.listByResourceGroupAsync(final String,final ListOperationCallback<ManagedClusterInner>)
- fullName: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.listByResourceGroupNext(final String nextPageLink)
  name: listByResourceGroupNext(final String nextPageLink)
  nameWithType: ManagedClustersInner.listByResourceGroupNext(final String nextPageLink)
  parameters:
  - description: <p>The NextLink from the previous successful call to List operation. </p>
    name: nextPageLink
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="CloudException?alt=CloudException&text=CloudException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  returns:
    description: <p>the PagedList&lt;ManagedClusterInner&gt; object if successful. </p>
    type: PagedList&lt;<xref href="com.microsoft.azure.management.containerservice.implementation.ManagedClusterInner?alt=com.microsoft.azure.management.containerservice.implementation.ManagedClusterInner&text=ManagedClusterInner" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Lists managed clusters in the specified subscription and resource group. Lists managed clusters in the specified subscription and resource group. The operation returns properties of each managed cluster.</p>

    <p></p>
  syntax: public PagedList<ManagedClusterInner> listByResourceGroupNext(final String nextPageLink)
  uid: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.listByResourceGroupNext(final String)
- fullName: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.listByResourceGroupNextAsync(final String nextPageLink)
  name: listByResourceGroupNextAsync(final String nextPageLink)
  nameWithType: ManagedClustersInner.listByResourceGroupNextAsync(final String nextPageLink)
  parameters:
  - description: <p>The NextLink from the previous successful call to List operation. </p>
    name: nextPageLink
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the PagedList&lt;ManagedClusterInner&gt; object </p>
    type: Observable&lt;Page&lt;<xref href="com.microsoft.azure.management.containerservice.implementation.ManagedClusterInner?alt=com.microsoft.azure.management.containerservice.implementation.ManagedClusterInner&text=ManagedClusterInner" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Lists managed clusters in the specified subscription and resource group. Lists managed clusters in the specified subscription and resource group. The operation returns properties of each managed cluster.</p>

    <p></p>
  syntax: public Observable<Page<ManagedClusterInner>> listByResourceGroupNextAsync(final String nextPageLink)
  uid: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.listByResourceGroupNextAsync(final String)
- fullName: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.listByResourceGroupNextAsync(final String nextPageLink, final ServiceFuture<List<ManagedClusterInner>> serviceFuture, final ListOperationCallback<ManagedClusterInner> serviceCallback)
  name: listByResourceGroupNextAsync(final String nextPageLink, final ServiceFuture<List<ManagedClusterInner>> serviceFuture, final ListOperationCallback<ManagedClusterInner> serviceCallback)
  nameWithType: ManagedClustersInner.listByResourceGroupNextAsync(final String nextPageLink, final ServiceFuture<List<ManagedClusterInner>> serviceFuture, final ListOperationCallback<ManagedClusterInner> serviceCallback)
  parameters:
  - description: <p>The NextLink from the previous successful call to List operation. </p>
    name: nextPageLink
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>the ServiceFuture object tracking the Retrofit calls </p>
    name: serviceFuture
    type: final ServiceFuture&lt;List&lt;<xref href="com.microsoft.azure.management.containerservice.implementation.ManagedClusterInner?alt=com.microsoft.azure.management.containerservice.implementation.ManagedClusterInner&text=ManagedClusterInner" data-throw-if-not-resolved="False"/>&gt;&gt;
  - description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    name: serviceCallback
    type: final ListOperationCallback&lt;<xref href="com.microsoft.azure.management.containerservice.implementation.ManagedClusterInner?alt=com.microsoft.azure.management.containerservice.implementation.ManagedClusterInner&text=ManagedClusterInner" data-throw-if-not-resolved="False"/>&gt;
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
    type: ServiceFuture&lt;List&lt;<xref href="com.microsoft.azure.management.containerservice.implementation.ManagedClusterInner?alt=com.microsoft.azure.management.containerservice.implementation.ManagedClusterInner&text=ManagedClusterInner" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Lists managed clusters in the specified subscription and resource group. Lists managed clusters in the specified subscription and resource group. The operation returns properties of each managed cluster.</p>

    <p></p>
  syntax: public ServiceFuture<List<ManagedClusterInner>> listByResourceGroupNextAsync(final String nextPageLink, final ServiceFuture<List<ManagedClusterInner>> serviceFuture, final ListOperationCallback<ManagedClusterInner> serviceCallback)
  uid: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.listByResourceGroupNextAsync(final String,final ServiceFuture<List<ManagedClusterInner>>,final ListOperationCallback<ManagedClusterInner>)
- fullName: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.listByResourceGroupNextSinglePageAsync(final String nextPageLink)
  name: listByResourceGroupNextSinglePageAsync(final String nextPageLink)
  nameWithType: ManagedClustersInner.listByResourceGroupNextSinglePageAsync(final String nextPageLink)
  parameters:
  - description: <p>The NextLink from the previous successful call to List operation. </p>
    name: nextPageLink
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the PagedList&lt;ManagedClusterInner&gt; object wrapped in <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceResponse"></xref> if successful. </p>
    type: Observable&lt;ServiceResponse&lt;Page&lt;<xref href="com.microsoft.azure.management.containerservice.implementation.ManagedClusterInner?alt=com.microsoft.azure.management.containerservice.implementation.ManagedClusterInner&text=ManagedClusterInner" data-throw-if-not-resolved="False"/>&gt;&gt;&gt;
  summary: >-
    <p>Lists managed clusters in the specified subscription and resource group. Lists managed clusters in the specified subscription and resource group. The operation returns properties of each managed cluster.</p>

    <p>ServiceResponse&lt;PageImpl&lt;ManagedClusterInner&gt;&gt; * </p>
  syntax: public Observable<ServiceResponse<Page<ManagedClusterInner>>> listByResourceGroupNextSinglePageAsync(final String nextPageLink)
  uid: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.listByResourceGroupNextSinglePageAsync(final String)
- fullName: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.listByResourceGroupNextWithServiceResponseAsync(final String nextPageLink)
  name: listByResourceGroupNextWithServiceResponseAsync(final String nextPageLink)
  nameWithType: ManagedClustersInner.listByResourceGroupNextWithServiceResponseAsync(final String nextPageLink)
  parameters:
  - description: <p>The NextLink from the previous successful call to List operation. </p>
    name: nextPageLink
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the PagedList&lt;ManagedClusterInner&gt; object </p>
    type: Observable&lt;ServiceResponse&lt;Page&lt;<xref href="com.microsoft.azure.management.containerservice.implementation.ManagedClusterInner?alt=com.microsoft.azure.management.containerservice.implementation.ManagedClusterInner&text=ManagedClusterInner" data-throw-if-not-resolved="False"/>&gt;&gt;&gt;
  summary: >-
    <p>Lists managed clusters in the specified subscription and resource group. Lists managed clusters in the specified subscription and resource group. The operation returns properties of each managed cluster.</p>

    <p></p>
  syntax: public Observable<ServiceResponse<Page<ManagedClusterInner>>> listByResourceGroupNextWithServiceResponseAsync(final String nextPageLink)
  uid: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.listByResourceGroupNextWithServiceResponseAsync(final String)
- fullName: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.listByResourceGroupSinglePageAsync(final String resourceGroupName)
  name: listByResourceGroupSinglePageAsync(final String resourceGroupName)
  nameWithType: ManagedClustersInner.listByResourceGroupSinglePageAsync(final String resourceGroupName)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the PagedList&lt;ManagedClusterInner&gt; object wrapped in <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceResponse"></xref> if successful. </p>
    type: Observable&lt;ServiceResponse&lt;Page&lt;<xref href="com.microsoft.azure.management.containerservice.implementation.ManagedClusterInner?alt=com.microsoft.azure.management.containerservice.implementation.ManagedClusterInner&text=ManagedClusterInner" data-throw-if-not-resolved="False"/>&gt;&gt;&gt;
  summary: >-
    <p>Lists managed clusters in the specified subscription and resource group. Lists managed clusters in the specified subscription and resource group. The operation returns properties of each managed cluster.</p>

    <p>ServiceResponse&lt;PageImpl&lt;ManagedClusterInner&gt;&gt; * </p>
  syntax: public Observable<ServiceResponse<Page<ManagedClusterInner>>> listByResourceGroupSinglePageAsync(final String resourceGroupName)
  uid: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.listByResourceGroupSinglePageAsync(final String)
- fullName: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.listByResourceGroupWithServiceResponseAsync(final String resourceGroupName)
  name: listByResourceGroupWithServiceResponseAsync(final String resourceGroupName)
  nameWithType: ManagedClustersInner.listByResourceGroupWithServiceResponseAsync(final String resourceGroupName)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the PagedList&lt;ManagedClusterInner&gt; object </p>
    type: Observable&lt;ServiceResponse&lt;Page&lt;<xref href="com.microsoft.azure.management.containerservice.implementation.ManagedClusterInner?alt=com.microsoft.azure.management.containerservice.implementation.ManagedClusterInner&text=ManagedClusterInner" data-throw-if-not-resolved="False"/>&gt;&gt;&gt;
  summary: >-
    <p>Lists managed clusters in the specified subscription and resource group. Lists managed clusters in the specified subscription and resource group. The operation returns properties of each managed cluster.</p>

    <p></p>
  syntax: public Observable<ServiceResponse<Page<ManagedClusterInner>>> listByResourceGroupWithServiceResponseAsync(final String resourceGroupName)
  uid: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.listByResourceGroupWithServiceResponseAsync(final String)
- fullName: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.listClusterAdminCredentials(String resourceGroupName, String resourceName)
  name: listClusterAdminCredentials(String resourceGroupName, String resourceName)
  nameWithType: ManagedClustersInner.listClusterAdminCredentials(String resourceGroupName, String resourceName)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the managed cluster resource. </p>
    name: resourceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="CloudException?alt=CloudException&text=CloudException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  returns:
    description: <p>the CredentialResultsInner object if successful. </p>
    type: <xref href="com.microsoft.azure.management.containerservice.implementation.CredentialResultsInner?alt=com.microsoft.azure.management.containerservice.implementation.CredentialResultsInner&text=CredentialResultsInner" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets cluster admin credential of a managed cluster. Gets cluster admin credential of the managed cluster with a specified resource group and name.</p>

    <p></p>
  syntax: public CredentialResultsInner listClusterAdminCredentials(String resourceGroupName, String resourceName)
  uid: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.listClusterAdminCredentials(String,String)
- fullName: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.listClusterAdminCredentialsAsync(String resourceGroupName, String resourceName)
  name: listClusterAdminCredentialsAsync(String resourceGroupName, String resourceName)
  nameWithType: ManagedClustersInner.listClusterAdminCredentialsAsync(String resourceGroupName, String resourceName)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the managed cluster resource. </p>
    name: resourceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the CredentialResultsInner object </p>
    type: Observable&lt;<xref href="com.microsoft.azure.management.containerservice.implementation.CredentialResultsInner?alt=com.microsoft.azure.management.containerservice.implementation.CredentialResultsInner&text=CredentialResultsInner" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Gets cluster admin credential of a managed cluster. Gets cluster admin credential of the managed cluster with a specified resource group and name.</p>

    <p></p>
  syntax: public Observable<CredentialResultsInner> listClusterAdminCredentialsAsync(String resourceGroupName, String resourceName)
  uid: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.listClusterAdminCredentialsAsync(String,String)
- fullName: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.listClusterAdminCredentialsAsync(String resourceGroupName, String resourceName, final ServiceCallback<CredentialResultsInner> serviceCallback)
  name: listClusterAdminCredentialsAsync(String resourceGroupName, String resourceName, final ServiceCallback<CredentialResultsInner> serviceCallback)
  nameWithType: ManagedClustersInner.listClusterAdminCredentialsAsync(String resourceGroupName, String resourceName, final ServiceCallback<CredentialResultsInner> serviceCallback)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the managed cluster resource. </p>
    name: resourceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    name: serviceCallback
    type: final ServiceCallback&lt;<xref href="com.microsoft.azure.management.containerservice.implementation.CredentialResultsInner?alt=com.microsoft.azure.management.containerservice.implementation.CredentialResultsInner&text=CredentialResultsInner" data-throw-if-not-resolved="False"/>&gt;
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
    type: ServiceFuture&lt;<xref href="com.microsoft.azure.management.containerservice.implementation.CredentialResultsInner?alt=com.microsoft.azure.management.containerservice.implementation.CredentialResultsInner&text=CredentialResultsInner" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Gets cluster admin credential of a managed cluster. Gets cluster admin credential of the managed cluster with a specified resource group and name.</p>

    <p></p>
  syntax: public ServiceFuture<CredentialResultsInner> listClusterAdminCredentialsAsync(String resourceGroupName, String resourceName, final ServiceCallback<CredentialResultsInner> serviceCallback)
  uid: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.listClusterAdminCredentialsAsync(String,String,final ServiceCallback<CredentialResultsInner>)
- fullName: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.listClusterAdminCredentialsWithServiceResponseAsync(String resourceGroupName, String resourceName)
  name: listClusterAdminCredentialsWithServiceResponseAsync(String resourceGroupName, String resourceName)
  nameWithType: ManagedClustersInner.listClusterAdminCredentialsWithServiceResponseAsync(String resourceGroupName, String resourceName)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the managed cluster resource. </p>
    name: resourceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the CredentialResultsInner object </p>
    type: Observable&lt;ServiceResponse&lt;<xref href="com.microsoft.azure.management.containerservice.implementation.CredentialResultsInner?alt=com.microsoft.azure.management.containerservice.implementation.CredentialResultsInner&text=CredentialResultsInner" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Gets cluster admin credential of a managed cluster. Gets cluster admin credential of the managed cluster with a specified resource group and name.</p>

    <p></p>
  syntax: public Observable<ServiceResponse<CredentialResultsInner>> listClusterAdminCredentialsWithServiceResponseAsync(String resourceGroupName, String resourceName)
  uid: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.listClusterAdminCredentialsWithServiceResponseAsync(String,String)
- fullName: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.listClusterMonitoringUserCredentials(String resourceGroupName, String resourceName)
  name: listClusterMonitoringUserCredentials(String resourceGroupName, String resourceName)
  nameWithType: ManagedClustersInner.listClusterMonitoringUserCredentials(String resourceGroupName, String resourceName)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the managed cluster resource. </p>
    name: resourceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="CloudException?alt=CloudException&text=CloudException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  returns:
    description: <p>the CredentialResultsInner object if successful. </p>
    type: <xref href="com.microsoft.azure.management.containerservice.implementation.CredentialResultsInner?alt=com.microsoft.azure.management.containerservice.implementation.CredentialResultsInner&text=CredentialResultsInner" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets cluster monitoring user credential of a managed cluster. Gets cluster monitoring user credential of the managed cluster with a specified resource group and name.</p>

    <p></p>
  syntax: public CredentialResultsInner listClusterMonitoringUserCredentials(String resourceGroupName, String resourceName)
  uid: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.listClusterMonitoringUserCredentials(String,String)
- fullName: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.listClusterMonitoringUserCredentialsAsync(String resourceGroupName, String resourceName)
  name: listClusterMonitoringUserCredentialsAsync(String resourceGroupName, String resourceName)
  nameWithType: ManagedClustersInner.listClusterMonitoringUserCredentialsAsync(String resourceGroupName, String resourceName)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the managed cluster resource. </p>
    name: resourceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the CredentialResultsInner object </p>
    type: Observable&lt;<xref href="com.microsoft.azure.management.containerservice.implementation.CredentialResultsInner?alt=com.microsoft.azure.management.containerservice.implementation.CredentialResultsInner&text=CredentialResultsInner" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Gets cluster monitoring user credential of a managed cluster. Gets cluster monitoring user credential of the managed cluster with a specified resource group and name.</p>

    <p></p>
  syntax: public Observable<CredentialResultsInner> listClusterMonitoringUserCredentialsAsync(String resourceGroupName, String resourceName)
  uid: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.listClusterMonitoringUserCredentialsAsync(String,String)
- fullName: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.listClusterMonitoringUserCredentialsAsync(String resourceGroupName, String resourceName, final ServiceCallback<CredentialResultsInner> serviceCallback)
  name: listClusterMonitoringUserCredentialsAsync(String resourceGroupName, String resourceName, final ServiceCallback<CredentialResultsInner> serviceCallback)
  nameWithType: ManagedClustersInner.listClusterMonitoringUserCredentialsAsync(String resourceGroupName, String resourceName, final ServiceCallback<CredentialResultsInner> serviceCallback)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the managed cluster resource. </p>
    name: resourceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    name: serviceCallback
    type: final ServiceCallback&lt;<xref href="com.microsoft.azure.management.containerservice.implementation.CredentialResultsInner?alt=com.microsoft.azure.management.containerservice.implementation.CredentialResultsInner&text=CredentialResultsInner" data-throw-if-not-resolved="False"/>&gt;
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
    type: ServiceFuture&lt;<xref href="com.microsoft.azure.management.containerservice.implementation.CredentialResultsInner?alt=com.microsoft.azure.management.containerservice.implementation.CredentialResultsInner&text=CredentialResultsInner" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Gets cluster monitoring user credential of a managed cluster. Gets cluster monitoring user credential of the managed cluster with a specified resource group and name.</p>

    <p></p>
  syntax: public ServiceFuture<CredentialResultsInner> listClusterMonitoringUserCredentialsAsync(String resourceGroupName, String resourceName, final ServiceCallback<CredentialResultsInner> serviceCallback)
  uid: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.listClusterMonitoringUserCredentialsAsync(String,String,final ServiceCallback<CredentialResultsInner>)
- fullName: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.listClusterMonitoringUserCredentialsWithServiceResponseAsync(String resourceGroupName, String resourceName)
  name: listClusterMonitoringUserCredentialsWithServiceResponseAsync(String resourceGroupName, String resourceName)
  nameWithType: ManagedClustersInner.listClusterMonitoringUserCredentialsWithServiceResponseAsync(String resourceGroupName, String resourceName)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the managed cluster resource. </p>
    name: resourceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the CredentialResultsInner object </p>
    type: Observable&lt;ServiceResponse&lt;<xref href="com.microsoft.azure.management.containerservice.implementation.CredentialResultsInner?alt=com.microsoft.azure.management.containerservice.implementation.CredentialResultsInner&text=CredentialResultsInner" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Gets cluster monitoring user credential of a managed cluster. Gets cluster monitoring user credential of the managed cluster with a specified resource group and name.</p>

    <p></p>
  syntax: public Observable<ServiceResponse<CredentialResultsInner>> listClusterMonitoringUserCredentialsWithServiceResponseAsync(String resourceGroupName, String resourceName)
  uid: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.listClusterMonitoringUserCredentialsWithServiceResponseAsync(String,String)
- fullName: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.listClusterUserCredentials(String resourceGroupName, String resourceName)
  name: listClusterUserCredentials(String resourceGroupName, String resourceName)
  nameWithType: ManagedClustersInner.listClusterUserCredentials(String resourceGroupName, String resourceName)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the managed cluster resource. </p>
    name: resourceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="CloudException?alt=CloudException&text=CloudException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  returns:
    description: <p>the CredentialResultsInner object if successful. </p>
    type: <xref href="com.microsoft.azure.management.containerservice.implementation.CredentialResultsInner?alt=com.microsoft.azure.management.containerservice.implementation.CredentialResultsInner&text=CredentialResultsInner" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets cluster user credential of a managed cluster. Gets cluster user credential of the managed cluster with a specified resource group and name.</p>

    <p></p>
  syntax: public CredentialResultsInner listClusterUserCredentials(String resourceGroupName, String resourceName)
  uid: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.listClusterUserCredentials(String,String)
- fullName: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.listClusterUserCredentialsAsync(String resourceGroupName, String resourceName)
  name: listClusterUserCredentialsAsync(String resourceGroupName, String resourceName)
  nameWithType: ManagedClustersInner.listClusterUserCredentialsAsync(String resourceGroupName, String resourceName)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the managed cluster resource. </p>
    name: resourceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the CredentialResultsInner object </p>
    type: Observable&lt;<xref href="com.microsoft.azure.management.containerservice.implementation.CredentialResultsInner?alt=com.microsoft.azure.management.containerservice.implementation.CredentialResultsInner&text=CredentialResultsInner" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Gets cluster user credential of a managed cluster. Gets cluster user credential of the managed cluster with a specified resource group and name.</p>

    <p></p>
  syntax: public Observable<CredentialResultsInner> listClusterUserCredentialsAsync(String resourceGroupName, String resourceName)
  uid: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.listClusterUserCredentialsAsync(String,String)
- fullName: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.listClusterUserCredentialsAsync(String resourceGroupName, String resourceName, final ServiceCallback<CredentialResultsInner> serviceCallback)
  name: listClusterUserCredentialsAsync(String resourceGroupName, String resourceName, final ServiceCallback<CredentialResultsInner> serviceCallback)
  nameWithType: ManagedClustersInner.listClusterUserCredentialsAsync(String resourceGroupName, String resourceName, final ServiceCallback<CredentialResultsInner> serviceCallback)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the managed cluster resource. </p>
    name: resourceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    name: serviceCallback
    type: final ServiceCallback&lt;<xref href="com.microsoft.azure.management.containerservice.implementation.CredentialResultsInner?alt=com.microsoft.azure.management.containerservice.implementation.CredentialResultsInner&text=CredentialResultsInner" data-throw-if-not-resolved="False"/>&gt;
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
    type: ServiceFuture&lt;<xref href="com.microsoft.azure.management.containerservice.implementation.CredentialResultsInner?alt=com.microsoft.azure.management.containerservice.implementation.CredentialResultsInner&text=CredentialResultsInner" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Gets cluster user credential of a managed cluster. Gets cluster user credential of the managed cluster with a specified resource group and name.</p>

    <p></p>
  syntax: public ServiceFuture<CredentialResultsInner> listClusterUserCredentialsAsync(String resourceGroupName, String resourceName, final ServiceCallback<CredentialResultsInner> serviceCallback)
  uid: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.listClusterUserCredentialsAsync(String,String,final ServiceCallback<CredentialResultsInner>)
- fullName: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.listClusterUserCredentialsWithServiceResponseAsync(String resourceGroupName, String resourceName)
  name: listClusterUserCredentialsWithServiceResponseAsync(String resourceGroupName, String resourceName)
  nameWithType: ManagedClustersInner.listClusterUserCredentialsWithServiceResponseAsync(String resourceGroupName, String resourceName)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the managed cluster resource. </p>
    name: resourceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the CredentialResultsInner object </p>
    type: Observable&lt;ServiceResponse&lt;<xref href="com.microsoft.azure.management.containerservice.implementation.CredentialResultsInner?alt=com.microsoft.azure.management.containerservice.implementation.CredentialResultsInner&text=CredentialResultsInner" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Gets cluster user credential of a managed cluster. Gets cluster user credential of the managed cluster with a specified resource group and name.</p>

    <p></p>
  syntax: public Observable<ServiceResponse<CredentialResultsInner>> listClusterUserCredentialsWithServiceResponseAsync(String resourceGroupName, String resourceName)
  uid: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.listClusterUserCredentialsWithServiceResponseAsync(String,String)
- fullName: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.listNext(final String nextPageLink)
  name: listNext(final String nextPageLink)
  nameWithType: ManagedClustersInner.listNext(final String nextPageLink)
  parameters:
  - description: <p>The NextLink from the previous successful call to List operation. </p>
    name: nextPageLink
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="CloudException?alt=CloudException&text=CloudException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  returns:
    description: <p>the PagedList&lt;ManagedClusterInner&gt; object if successful. </p>
    type: PagedList&lt;<xref href="com.microsoft.azure.management.containerservice.implementation.ManagedClusterInner?alt=com.microsoft.azure.management.containerservice.implementation.ManagedClusterInner&text=ManagedClusterInner" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Gets a list of managed clusters in the specified subscription. Gets a list of managed clusters in the specified subscription. The operation returns properties of each managed cluster.</p>

    <p></p>
  syntax: public PagedList<ManagedClusterInner> listNext(final String nextPageLink)
  uid: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.listNext(final String)
- fullName: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.listNextAsync(final String nextPageLink)
  name: listNextAsync(final String nextPageLink)
  nameWithType: ManagedClustersInner.listNextAsync(final String nextPageLink)
  parameters:
  - description: <p>The NextLink from the previous successful call to List operation. </p>
    name: nextPageLink
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the PagedList&lt;ManagedClusterInner&gt; object </p>
    type: Observable&lt;Page&lt;<xref href="com.microsoft.azure.management.containerservice.implementation.ManagedClusterInner?alt=com.microsoft.azure.management.containerservice.implementation.ManagedClusterInner&text=ManagedClusterInner" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Gets a list of managed clusters in the specified subscription. Gets a list of managed clusters in the specified subscription. The operation returns properties of each managed cluster.</p>

    <p></p>
  syntax: public Observable<Page<ManagedClusterInner>> listNextAsync(final String nextPageLink)
  uid: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.listNextAsync(final String)
- fullName: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.listNextAsync(final String nextPageLink, final ServiceFuture<List<ManagedClusterInner>> serviceFuture, final ListOperationCallback<ManagedClusterInner> serviceCallback)
  name: listNextAsync(final String nextPageLink, final ServiceFuture<List<ManagedClusterInner>> serviceFuture, final ListOperationCallback<ManagedClusterInner> serviceCallback)
  nameWithType: ManagedClustersInner.listNextAsync(final String nextPageLink, final ServiceFuture<List<ManagedClusterInner>> serviceFuture, final ListOperationCallback<ManagedClusterInner> serviceCallback)
  parameters:
  - description: <p>The NextLink from the previous successful call to List operation. </p>
    name: nextPageLink
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>the ServiceFuture object tracking the Retrofit calls </p>
    name: serviceFuture
    type: final ServiceFuture&lt;List&lt;<xref href="com.microsoft.azure.management.containerservice.implementation.ManagedClusterInner?alt=com.microsoft.azure.management.containerservice.implementation.ManagedClusterInner&text=ManagedClusterInner" data-throw-if-not-resolved="False"/>&gt;&gt;
  - description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    name: serviceCallback
    type: final ListOperationCallback&lt;<xref href="com.microsoft.azure.management.containerservice.implementation.ManagedClusterInner?alt=com.microsoft.azure.management.containerservice.implementation.ManagedClusterInner&text=ManagedClusterInner" data-throw-if-not-resolved="False"/>&gt;
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
    type: ServiceFuture&lt;List&lt;<xref href="com.microsoft.azure.management.containerservice.implementation.ManagedClusterInner?alt=com.microsoft.azure.management.containerservice.implementation.ManagedClusterInner&text=ManagedClusterInner" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Gets a list of managed clusters in the specified subscription. Gets a list of managed clusters in the specified subscription. The operation returns properties of each managed cluster.</p>

    <p></p>
  syntax: public ServiceFuture<List<ManagedClusterInner>> listNextAsync(final String nextPageLink, final ServiceFuture<List<ManagedClusterInner>> serviceFuture, final ListOperationCallback<ManagedClusterInner> serviceCallback)
  uid: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.listNextAsync(final String,final ServiceFuture<List<ManagedClusterInner>>,final ListOperationCallback<ManagedClusterInner>)
- fullName: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.listNextSinglePageAsync(final String nextPageLink)
  name: listNextSinglePageAsync(final String nextPageLink)
  nameWithType: ManagedClustersInner.listNextSinglePageAsync(final String nextPageLink)
  parameters:
  - description: <p>The NextLink from the previous successful call to List operation. </p>
    name: nextPageLink
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the PagedList&lt;ManagedClusterInner&gt; object wrapped in <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceResponse"></xref> if successful. </p>
    type: Observable&lt;ServiceResponse&lt;Page&lt;<xref href="com.microsoft.azure.management.containerservice.implementation.ManagedClusterInner?alt=com.microsoft.azure.management.containerservice.implementation.ManagedClusterInner&text=ManagedClusterInner" data-throw-if-not-resolved="False"/>&gt;&gt;&gt;
  summary: >-
    <p>Gets a list of managed clusters in the specified subscription. Gets a list of managed clusters in the specified subscription. The operation returns properties of each managed cluster.</p>

    <p>ServiceResponse&lt;PageImpl&lt;ManagedClusterInner&gt;&gt; * </p>
  syntax: public Observable<ServiceResponse<Page<ManagedClusterInner>>> listNextSinglePageAsync(final String nextPageLink)
  uid: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.listNextSinglePageAsync(final String)
- fullName: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.listNextWithServiceResponseAsync(final String nextPageLink)
  name: listNextWithServiceResponseAsync(final String nextPageLink)
  nameWithType: ManagedClustersInner.listNextWithServiceResponseAsync(final String nextPageLink)
  parameters:
  - description: <p>The NextLink from the previous successful call to List operation. </p>
    name: nextPageLink
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the PagedList&lt;ManagedClusterInner&gt; object </p>
    type: Observable&lt;ServiceResponse&lt;Page&lt;<xref href="com.microsoft.azure.management.containerservice.implementation.ManagedClusterInner?alt=com.microsoft.azure.management.containerservice.implementation.ManagedClusterInner&text=ManagedClusterInner" data-throw-if-not-resolved="False"/>&gt;&gt;&gt;
  summary: >-
    <p>Gets a list of managed clusters in the specified subscription. Gets a list of managed clusters in the specified subscription. The operation returns properties of each managed cluster.</p>

    <p></p>
  syntax: public Observable<ServiceResponse<Page<ManagedClusterInner>>> listNextWithServiceResponseAsync(final String nextPageLink)
  uid: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.listNextWithServiceResponseAsync(final String)
- fullName: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.listSinglePageAsync()
  name: listSinglePageAsync()
  nameWithType: ManagedClustersInner.listSinglePageAsync()
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the PagedList&lt;ManagedClusterInner&gt; object wrapped in <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceResponse"></xref> if successful. </p>
    type: Observable&lt;ServiceResponse&lt;Page&lt;<xref href="com.microsoft.azure.management.containerservice.implementation.ManagedClusterInner?alt=com.microsoft.azure.management.containerservice.implementation.ManagedClusterInner&text=ManagedClusterInner" data-throw-if-not-resolved="False"/>&gt;&gt;&gt;
  summary: >-
    <p>Gets a list of managed clusters in the specified subscription. Gets a list of managed clusters in the specified subscription. The operation returns properties of each managed cluster.</p>

    <p></p>
  syntax: public Observable<ServiceResponse<Page<ManagedClusterInner>>> listSinglePageAsync()
  uid: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.listSinglePageAsync()
- fullName: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.listWithServiceResponseAsync()
  name: listWithServiceResponseAsync()
  nameWithType: ManagedClustersInner.listWithServiceResponseAsync()
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the PagedList&lt;ManagedClusterInner&gt; object </p>
    type: Observable&lt;ServiceResponse&lt;Page&lt;<xref href="com.microsoft.azure.management.containerservice.implementation.ManagedClusterInner?alt=com.microsoft.azure.management.containerservice.implementation.ManagedClusterInner&text=ManagedClusterInner" data-throw-if-not-resolved="False"/>&gt;&gt;&gt;
  summary: >-
    <p>Gets a list of managed clusters in the specified subscription. Gets a list of managed clusters in the specified subscription. The operation returns properties of each managed cluster.</p>

    <p></p>
  syntax: public Observable<ServiceResponse<Page<ManagedClusterInner>>> listWithServiceResponseAsync()
  uid: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.listWithServiceResponseAsync()
- fullName: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.resetAADProfile(String resourceGroupName, String resourceName, ManagedClusterAADProfile parameters)
  name: resetAADProfile(String resourceGroupName, String resourceName, ManagedClusterAADProfile parameters)
  nameWithType: ManagedClustersInner.resetAADProfile(String resourceGroupName, String resourceName, ManagedClusterAADProfile parameters)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the managed cluster resource. </p>
    name: resourceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>Parameters supplied to the Reset AAD Profile operation for a Managed Cluster. </p>
    name: parameters
    type: <xref href="com.microsoft.azure.management.containerservice.ManagedClusterAADProfile?alt=com.microsoft.azure.management.containerservice.ManagedClusterAADProfile&text=ManagedClusterAADProfile" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="CloudException?alt=CloudException&text=CloudException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  summary: >-
    <p>Reset AAD Profile of a managed cluster. Update the AAD Profile for a managed cluster.</p>

    <p></p>
  syntax: public void resetAADProfile(String resourceGroupName, String resourceName, ManagedClusterAADProfile parameters)
  uid: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.resetAADProfile(String,String,ManagedClusterAADProfile)
- fullName: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.resetAADProfileAsync(String resourceGroupName, String resourceName, ManagedClusterAADProfile parameters)
  name: resetAADProfileAsync(String resourceGroupName, String resourceName, ManagedClusterAADProfile parameters)
  nameWithType: ManagedClustersInner.resetAADProfileAsync(String resourceGroupName, String resourceName, ManagedClusterAADProfile parameters)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the managed cluster resource. </p>
    name: resourceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>Parameters supplied to the Reset AAD Profile operation for a Managed Cluster. </p>
    name: parameters
    type: <xref href="com.microsoft.azure.management.containerservice.ManagedClusterAADProfile?alt=com.microsoft.azure.management.containerservice.ManagedClusterAADProfile&text=ManagedClusterAADProfile" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable for the request </p>
    type: <xref href="Observable%3CVoid%3E?alt=Observable%3CVoid%3E&text=Observable%3CVoid%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Reset AAD Profile of a managed cluster. Update the AAD Profile for a managed cluster.</p>

    <p></p>
  syntax: public Observable<Void> resetAADProfileAsync(String resourceGroupName, String resourceName, ManagedClusterAADProfile parameters)
  uid: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.resetAADProfileAsync(String,String,ManagedClusterAADProfile)
- fullName: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.resetAADProfileAsync(String resourceGroupName, String resourceName, ManagedClusterAADProfile parameters, final ServiceCallback<Void> serviceCallback)
  name: resetAADProfileAsync(String resourceGroupName, String resourceName, ManagedClusterAADProfile parameters, final ServiceCallback<Void> serviceCallback)
  nameWithType: ManagedClustersInner.resetAADProfileAsync(String resourceGroupName, String resourceName, ManagedClusterAADProfile parameters, final ServiceCallback<Void> serviceCallback)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the managed cluster resource. </p>
    name: resourceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>Parameters supplied to the Reset AAD Profile operation for a Managed Cluster. </p>
    name: parameters
    type: <xref href="com.microsoft.azure.management.containerservice.ManagedClusterAADProfile?alt=com.microsoft.azure.management.containerservice.ManagedClusterAADProfile&text=ManagedClusterAADProfile" data-throw-if-not-resolved="False"/>
  - description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    name: serviceCallback
    type: <xref href="final+ServiceCallback%3CVoid%3E?alt=final+ServiceCallback%3CVoid%3E&text=final+ServiceCallback%3CVoid%3E" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
    type: <xref href="ServiceFuture%3CVoid%3E?alt=ServiceFuture%3CVoid%3E&text=ServiceFuture%3CVoid%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Reset AAD Profile of a managed cluster. Update the AAD Profile for a managed cluster.</p>

    <p></p>
  syntax: public ServiceFuture<Void> resetAADProfileAsync(String resourceGroupName, String resourceName, ManagedClusterAADProfile parameters, final ServiceCallback<Void> serviceCallback)
  uid: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.resetAADProfileAsync(String,String,ManagedClusterAADProfile,final ServiceCallback<Void>)
- fullName: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.resetAADProfileWithServiceResponseAsync(String resourceGroupName, String resourceName, ManagedClusterAADProfile parameters)
  name: resetAADProfileWithServiceResponseAsync(String resourceGroupName, String resourceName, ManagedClusterAADProfile parameters)
  nameWithType: ManagedClustersInner.resetAADProfileWithServiceResponseAsync(String resourceGroupName, String resourceName, ManagedClusterAADProfile parameters)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the managed cluster resource. </p>
    name: resourceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>Parameters supplied to the Reset AAD Profile operation for a Managed Cluster. </p>
    name: parameters
    type: <xref href="com.microsoft.azure.management.containerservice.ManagedClusterAADProfile?alt=com.microsoft.azure.management.containerservice.ManagedClusterAADProfile&text=ManagedClusterAADProfile" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable for the request </p>
    type: <xref href="Observable%3CServiceResponse%3CVoid%3E%3E?alt=Observable%3CServiceResponse%3CVoid%3E%3E&text=Observable%3CServiceResponse%3CVoid%3E%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Reset AAD Profile of a managed cluster. Update the AAD Profile for a managed cluster.</p>

    <p></p>
  syntax: public Observable<ServiceResponse<Void>> resetAADProfileWithServiceResponseAsync(String resourceGroupName, String resourceName, ManagedClusterAADProfile parameters)
  uid: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.resetAADProfileWithServiceResponseAsync(String,String,ManagedClusterAADProfile)
- fullName: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.resetServicePrincipalProfile(String resourceGroupName, String resourceName, ManagedClusterServicePrincipalProfile parameters)
  name: resetServicePrincipalProfile(String resourceGroupName, String resourceName, ManagedClusterServicePrincipalProfile parameters)
  nameWithType: ManagedClustersInner.resetServicePrincipalProfile(String resourceGroupName, String resourceName, ManagedClusterServicePrincipalProfile parameters)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the managed cluster resource. </p>
    name: resourceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>Parameters supplied to the Reset Service Principal Profile operation for a Managed Cluster. </p>
    name: parameters
    type: <xref href="com.microsoft.azure.management.containerservice.ManagedClusterServicePrincipalProfile?alt=com.microsoft.azure.management.containerservice.ManagedClusterServicePrincipalProfile&text=ManagedClusterServicePrincipalProfile" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="CloudException?alt=CloudException&text=CloudException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  summary: >-
    <p>Reset Service Principal Profile of a managed cluster. Update the service principal Profile for a managed cluster.</p>

    <p></p>
  syntax: public void resetServicePrincipalProfile(String resourceGroupName, String resourceName, ManagedClusterServicePrincipalProfile parameters)
  uid: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.resetServicePrincipalProfile(String,String,ManagedClusterServicePrincipalProfile)
- fullName: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.resetServicePrincipalProfileAsync(String resourceGroupName, String resourceName, ManagedClusterServicePrincipalProfile parameters)
  name: resetServicePrincipalProfileAsync(String resourceGroupName, String resourceName, ManagedClusterServicePrincipalProfile parameters)
  nameWithType: ManagedClustersInner.resetServicePrincipalProfileAsync(String resourceGroupName, String resourceName, ManagedClusterServicePrincipalProfile parameters)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the managed cluster resource. </p>
    name: resourceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>Parameters supplied to the Reset Service Principal Profile operation for a Managed Cluster. </p>
    name: parameters
    type: <xref href="com.microsoft.azure.management.containerservice.ManagedClusterServicePrincipalProfile?alt=com.microsoft.azure.management.containerservice.ManagedClusterServicePrincipalProfile&text=ManagedClusterServicePrincipalProfile" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable for the request </p>
    type: <xref href="Observable%3CVoid%3E?alt=Observable%3CVoid%3E&text=Observable%3CVoid%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Reset Service Principal Profile of a managed cluster. Update the service principal Profile for a managed cluster.</p>

    <p></p>
  syntax: public Observable<Void> resetServicePrincipalProfileAsync(String resourceGroupName, String resourceName, ManagedClusterServicePrincipalProfile parameters)
  uid: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.resetServicePrincipalProfileAsync(String,String,ManagedClusterServicePrincipalProfile)
- fullName: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.resetServicePrincipalProfileAsync(String resourceGroupName, String resourceName, ManagedClusterServicePrincipalProfile parameters, final ServiceCallback<Void> serviceCallback)
  name: resetServicePrincipalProfileAsync(String resourceGroupName, String resourceName, ManagedClusterServicePrincipalProfile parameters, final ServiceCallback<Void> serviceCallback)
  nameWithType: ManagedClustersInner.resetServicePrincipalProfileAsync(String resourceGroupName, String resourceName, ManagedClusterServicePrincipalProfile parameters, final ServiceCallback<Void> serviceCallback)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the managed cluster resource. </p>
    name: resourceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>Parameters supplied to the Reset Service Principal Profile operation for a Managed Cluster. </p>
    name: parameters
    type: <xref href="com.microsoft.azure.management.containerservice.ManagedClusterServicePrincipalProfile?alt=com.microsoft.azure.management.containerservice.ManagedClusterServicePrincipalProfile&text=ManagedClusterServicePrincipalProfile" data-throw-if-not-resolved="False"/>
  - description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    name: serviceCallback
    type: <xref href="final+ServiceCallback%3CVoid%3E?alt=final+ServiceCallback%3CVoid%3E&text=final+ServiceCallback%3CVoid%3E" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
    type: <xref href="ServiceFuture%3CVoid%3E?alt=ServiceFuture%3CVoid%3E&text=ServiceFuture%3CVoid%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Reset Service Principal Profile of a managed cluster. Update the service principal Profile for a managed cluster.</p>

    <p></p>
  syntax: public ServiceFuture<Void> resetServicePrincipalProfileAsync(String resourceGroupName, String resourceName, ManagedClusterServicePrincipalProfile parameters, final ServiceCallback<Void> serviceCallback)
  uid: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.resetServicePrincipalProfileAsync(String,String,ManagedClusterServicePrincipalProfile,final ServiceCallback<Void>)
- fullName: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.resetServicePrincipalProfileWithServiceResponseAsync(String resourceGroupName, String resourceName, ManagedClusterServicePrincipalProfile parameters)
  name: resetServicePrincipalProfileWithServiceResponseAsync(String resourceGroupName, String resourceName, ManagedClusterServicePrincipalProfile parameters)
  nameWithType: ManagedClustersInner.resetServicePrincipalProfileWithServiceResponseAsync(String resourceGroupName, String resourceName, ManagedClusterServicePrincipalProfile parameters)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the managed cluster resource. </p>
    name: resourceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>Parameters supplied to the Reset Service Principal Profile operation for a Managed Cluster. </p>
    name: parameters
    type: <xref href="com.microsoft.azure.management.containerservice.ManagedClusterServicePrincipalProfile?alt=com.microsoft.azure.management.containerservice.ManagedClusterServicePrincipalProfile&text=ManagedClusterServicePrincipalProfile" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable for the request </p>
    type: <xref href="Observable%3CServiceResponse%3CVoid%3E%3E?alt=Observable%3CServiceResponse%3CVoid%3E%3E&text=Observable%3CServiceResponse%3CVoid%3E%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Reset Service Principal Profile of a managed cluster. Update the service principal Profile for a managed cluster.</p>

    <p></p>
  syntax: public Observable<ServiceResponse<Void>> resetServicePrincipalProfileWithServiceResponseAsync(String resourceGroupName, String resourceName, ManagedClusterServicePrincipalProfile parameters)
  uid: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.resetServicePrincipalProfileWithServiceResponseAsync(String,String,ManagedClusterServicePrincipalProfile)
- fullName: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.rotateClusterCertificates(String resourceGroupName, String resourceName)
  name: rotateClusterCertificates(String resourceGroupName, String resourceName)
  nameWithType: ManagedClustersInner.rotateClusterCertificates(String resourceGroupName, String resourceName)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the managed cluster resource. </p>
    name: resourceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="CloudException?alt=CloudException&text=CloudException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  summary: >-
    <p>Rotate certificates of a managed cluster. Rotate certificates of a managed cluster.</p>

    <p></p>
  syntax: public void rotateClusterCertificates(String resourceGroupName, String resourceName)
  uid: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.rotateClusterCertificates(String,String)
- fullName: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.rotateClusterCertificatesAsync(String resourceGroupName, String resourceName)
  name: rotateClusterCertificatesAsync(String resourceGroupName, String resourceName)
  nameWithType: ManagedClustersInner.rotateClusterCertificatesAsync(String resourceGroupName, String resourceName)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the managed cluster resource. </p>
    name: resourceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable for the request </p>
    type: <xref href="Observable%3CVoid%3E?alt=Observable%3CVoid%3E&text=Observable%3CVoid%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Rotate certificates of a managed cluster. Rotate certificates of a managed cluster.</p>

    <p></p>
  syntax: public Observable<Void> rotateClusterCertificatesAsync(String resourceGroupName, String resourceName)
  uid: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.rotateClusterCertificatesAsync(String,String)
- fullName: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.rotateClusterCertificatesAsync(String resourceGroupName, String resourceName, final ServiceCallback<Void> serviceCallback)
  name: rotateClusterCertificatesAsync(String resourceGroupName, String resourceName, final ServiceCallback<Void> serviceCallback)
  nameWithType: ManagedClustersInner.rotateClusterCertificatesAsync(String resourceGroupName, String resourceName, final ServiceCallback<Void> serviceCallback)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the managed cluster resource. </p>
    name: resourceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    name: serviceCallback
    type: <xref href="final+ServiceCallback%3CVoid%3E?alt=final+ServiceCallback%3CVoid%3E&text=final+ServiceCallback%3CVoid%3E" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
    type: <xref href="ServiceFuture%3CVoid%3E?alt=ServiceFuture%3CVoid%3E&text=ServiceFuture%3CVoid%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Rotate certificates of a managed cluster. Rotate certificates of a managed cluster.</p>

    <p></p>
  syntax: public ServiceFuture<Void> rotateClusterCertificatesAsync(String resourceGroupName, String resourceName, final ServiceCallback<Void> serviceCallback)
  uid: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.rotateClusterCertificatesAsync(String,String,final ServiceCallback<Void>)
- fullName: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.rotateClusterCertificatesWithServiceResponseAsync(String resourceGroupName, String resourceName)
  name: rotateClusterCertificatesWithServiceResponseAsync(String resourceGroupName, String resourceName)
  nameWithType: ManagedClustersInner.rotateClusterCertificatesWithServiceResponseAsync(String resourceGroupName, String resourceName)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the managed cluster resource. </p>
    name: resourceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable for the request </p>
    type: <xref href="Observable%3CServiceResponse%3CVoid%3E%3E?alt=Observable%3CServiceResponse%3CVoid%3E%3E&text=Observable%3CServiceResponse%3CVoid%3E%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Rotate certificates of a managed cluster. Rotate certificates of a managed cluster.</p>

    <p></p>
  syntax: public Observable<ServiceResponse<Void>> rotateClusterCertificatesWithServiceResponseAsync(String resourceGroupName, String resourceName)
  uid: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.rotateClusterCertificatesWithServiceResponseAsync(String,String)
- fullName: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.start(String resourceGroupName, String resourceName)
  name: start(String resourceGroupName, String resourceName)
  nameWithType: ManagedClustersInner.start(String resourceGroupName, String resourceName)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the managed cluster resource. </p>
    name: resourceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="CloudException?alt=CloudException&text=CloudException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  summary: >-
    <p>Start Managed Cluster. Starts a Stopped Managed Cluster.</p>

    <p></p>
  syntax: public void start(String resourceGroupName, String resourceName)
  uid: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.start(String,String)
- fullName: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.startAsync(String resourceGroupName, String resourceName)
  name: startAsync(String resourceGroupName, String resourceName)
  nameWithType: ManagedClustersInner.startAsync(String resourceGroupName, String resourceName)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the managed cluster resource. </p>
    name: resourceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable for the request </p>
    type: <xref href="Observable%3CVoid%3E?alt=Observable%3CVoid%3E&text=Observable%3CVoid%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Start Managed Cluster. Starts a Stopped Managed Cluster.</p>

    <p></p>
  syntax: public Observable<Void> startAsync(String resourceGroupName, String resourceName)
  uid: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.startAsync(String,String)
- fullName: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.startAsync(String resourceGroupName, String resourceName, final ServiceCallback<Void> serviceCallback)
  name: startAsync(String resourceGroupName, String resourceName, final ServiceCallback<Void> serviceCallback)
  nameWithType: ManagedClustersInner.startAsync(String resourceGroupName, String resourceName, final ServiceCallback<Void> serviceCallback)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the managed cluster resource. </p>
    name: resourceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    name: serviceCallback
    type: <xref href="final+ServiceCallback%3CVoid%3E?alt=final+ServiceCallback%3CVoid%3E&text=final+ServiceCallback%3CVoid%3E" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
    type: <xref href="ServiceFuture%3CVoid%3E?alt=ServiceFuture%3CVoid%3E&text=ServiceFuture%3CVoid%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Start Managed Cluster. Starts a Stopped Managed Cluster.</p>

    <p></p>
  syntax: public ServiceFuture<Void> startAsync(String resourceGroupName, String resourceName, final ServiceCallback<Void> serviceCallback)
  uid: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.startAsync(String,String,final ServiceCallback<Void>)
- fullName: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.startWithServiceResponseAsync(String resourceGroupName, String resourceName)
  name: startWithServiceResponseAsync(String resourceGroupName, String resourceName)
  nameWithType: ManagedClustersInner.startWithServiceResponseAsync(String resourceGroupName, String resourceName)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the managed cluster resource. </p>
    name: resourceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable for the request </p>
    type: <xref href="Observable%3CServiceResponse%3CVoid%3E%3E?alt=Observable%3CServiceResponse%3CVoid%3E%3E&text=Observable%3CServiceResponse%3CVoid%3E%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Start Managed Cluster. Starts a Stopped Managed Cluster.</p>

    <p></p>
  syntax: public Observable<ServiceResponse<Void>> startWithServiceResponseAsync(String resourceGroupName, String resourceName)
  uid: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.startWithServiceResponseAsync(String,String)
- fullName: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.stop(String resourceGroupName, String resourceName)
  name: stop(String resourceGroupName, String resourceName)
  nameWithType: ManagedClustersInner.stop(String resourceGroupName, String resourceName)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the managed cluster resource. </p>
    name: resourceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="CloudException?alt=CloudException&text=CloudException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  summary: >-
    <p>Stop Managed Cluster. Stops a Running Managed Cluster.</p>

    <p></p>
  syntax: public void stop(String resourceGroupName, String resourceName)
  uid: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.stop(String,String)
- fullName: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.stopAsync(String resourceGroupName, String resourceName)
  name: stopAsync(String resourceGroupName, String resourceName)
  nameWithType: ManagedClustersInner.stopAsync(String resourceGroupName, String resourceName)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the managed cluster resource. </p>
    name: resourceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable for the request </p>
    type: <xref href="Observable%3CVoid%3E?alt=Observable%3CVoid%3E&text=Observable%3CVoid%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Stop Managed Cluster. Stops a Running Managed Cluster.</p>

    <p></p>
  syntax: public Observable<Void> stopAsync(String resourceGroupName, String resourceName)
  uid: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.stopAsync(String,String)
- fullName: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.stopAsync(String resourceGroupName, String resourceName, final ServiceCallback<Void> serviceCallback)
  name: stopAsync(String resourceGroupName, String resourceName, final ServiceCallback<Void> serviceCallback)
  nameWithType: ManagedClustersInner.stopAsync(String resourceGroupName, String resourceName, final ServiceCallback<Void> serviceCallback)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the managed cluster resource. </p>
    name: resourceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    name: serviceCallback
    type: <xref href="final+ServiceCallback%3CVoid%3E?alt=final+ServiceCallback%3CVoid%3E&text=final+ServiceCallback%3CVoid%3E" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
    type: <xref href="ServiceFuture%3CVoid%3E?alt=ServiceFuture%3CVoid%3E&text=ServiceFuture%3CVoid%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Stop Managed Cluster. Stops a Running Managed Cluster.</p>

    <p></p>
  syntax: public ServiceFuture<Void> stopAsync(String resourceGroupName, String resourceName, final ServiceCallback<Void> serviceCallback)
  uid: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.stopAsync(String,String,final ServiceCallback<Void>)
- fullName: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.stopWithServiceResponseAsync(String resourceGroupName, String resourceName)
  name: stopWithServiceResponseAsync(String resourceGroupName, String resourceName)
  nameWithType: ManagedClustersInner.stopWithServiceResponseAsync(String resourceGroupName, String resourceName)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the managed cluster resource. </p>
    name: resourceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable for the request </p>
    type: <xref href="Observable%3CServiceResponse%3CVoid%3E%3E?alt=Observable%3CServiceResponse%3CVoid%3E%3E&text=Observable%3CServiceResponse%3CVoid%3E%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Stop Managed Cluster. Stops a Running Managed Cluster.</p>

    <p></p>
  syntax: public Observable<ServiceResponse<Void>> stopWithServiceResponseAsync(String resourceGroupName, String resourceName)
  uid: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.stopWithServiceResponseAsync(String,String)
- fullName: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.updateTags(String resourceGroupName, String resourceName)
  name: updateTags(String resourceGroupName, String resourceName)
  nameWithType: ManagedClustersInner.updateTags(String resourceGroupName, String resourceName)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the managed cluster resource. </p>
    name: resourceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="CloudException?alt=CloudException&text=CloudException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  returns:
    description: <p>the ManagedClusterInner object if successful. </p>
    type: <xref href="com.microsoft.azure.management.containerservice.implementation.ManagedClusterInner?alt=com.microsoft.azure.management.containerservice.implementation.ManagedClusterInner&text=ManagedClusterInner" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Updates tags on a managed cluster. Updates a managed cluster with the specified tags.</p>

    <p></p>
  syntax: public ManagedClusterInner updateTags(String resourceGroupName, String resourceName)
  uid: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.updateTags(String,String)
- fullName: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.updateTags(String resourceGroupName, String resourceName, Map<String, String> tags)
  name: updateTags(String resourceGroupName, String resourceName, Map<String, String> tags)
  nameWithType: ManagedClustersInner.updateTags(String resourceGroupName, String resourceName, Map<String, String> tags)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the managed cluster resource. </p>
    name: resourceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>Resource tags. </p>
    name: tags
    type: <xref href="Map%3CString%2C+String%3E?alt=Map%3CString%2C+String%3E&text=Map%3CString%2C+String%3E" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="CloudException?alt=CloudException&text=CloudException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  returns:
    description: <p>the ManagedClusterInner object if successful. </p>
    type: <xref href="com.microsoft.azure.management.containerservice.implementation.ManagedClusterInner?alt=com.microsoft.azure.management.containerservice.implementation.ManagedClusterInner&text=ManagedClusterInner" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Updates tags on a managed cluster. Updates a managed cluster with the specified tags.</p>

    <p></p>
  syntax: public ManagedClusterInner updateTags(String resourceGroupName, String resourceName, Map<String, String> tags)
  uid: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.updateTags(String,String,Map<String, String>)
- fullName: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.updateTagsAsync(String resourceGroupName, String resourceName)
  name: updateTagsAsync(String resourceGroupName, String resourceName)
  nameWithType: ManagedClustersInner.updateTagsAsync(String resourceGroupName, String resourceName)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the managed cluster resource. </p>
    name: resourceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable for the request </p>
    type: Observable&lt;<xref href="com.microsoft.azure.management.containerservice.implementation.ManagedClusterInner?alt=com.microsoft.azure.management.containerservice.implementation.ManagedClusterInner&text=ManagedClusterInner" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Updates tags on a managed cluster. Updates a managed cluster with the specified tags.</p>

    <p></p>
  syntax: public Observable<ManagedClusterInner> updateTagsAsync(String resourceGroupName, String resourceName)
  uid: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.updateTagsAsync(String,String)
- fullName: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.updateTagsAsync(String resourceGroupName, String resourceName, final ServiceCallback<ManagedClusterInner> serviceCallback)
  name: updateTagsAsync(String resourceGroupName, String resourceName, final ServiceCallback<ManagedClusterInner> serviceCallback)
  nameWithType: ManagedClustersInner.updateTagsAsync(String resourceGroupName, String resourceName, final ServiceCallback<ManagedClusterInner> serviceCallback)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the managed cluster resource. </p>
    name: resourceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    name: serviceCallback
    type: final ServiceCallback&lt;<xref href="com.microsoft.azure.management.containerservice.implementation.ManagedClusterInner?alt=com.microsoft.azure.management.containerservice.implementation.ManagedClusterInner&text=ManagedClusterInner" data-throw-if-not-resolved="False"/>&gt;
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
    type: ServiceFuture&lt;<xref href="com.microsoft.azure.management.containerservice.implementation.ManagedClusterInner?alt=com.microsoft.azure.management.containerservice.implementation.ManagedClusterInner&text=ManagedClusterInner" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Updates tags on a managed cluster. Updates a managed cluster with the specified tags.</p>

    <p></p>
  syntax: public ServiceFuture<ManagedClusterInner> updateTagsAsync(String resourceGroupName, String resourceName, final ServiceCallback<ManagedClusterInner> serviceCallback)
  uid: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.updateTagsAsync(String,String,final ServiceCallback<ManagedClusterInner>)
- fullName: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.updateTagsAsync(String resourceGroupName, String resourceName, Map<String, String> tags)
  name: updateTagsAsync(String resourceGroupName, String resourceName, Map<String, String> tags)
  nameWithType: ManagedClustersInner.updateTagsAsync(String resourceGroupName, String resourceName, Map<String, String> tags)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the managed cluster resource. </p>
    name: resourceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>Resource tags. </p>
    name: tags
    type: <xref href="Map%3CString%2C+String%3E?alt=Map%3CString%2C+String%3E&text=Map%3CString%2C+String%3E" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable for the request </p>
    type: Observable&lt;<xref href="com.microsoft.azure.management.containerservice.implementation.ManagedClusterInner?alt=com.microsoft.azure.management.containerservice.implementation.ManagedClusterInner&text=ManagedClusterInner" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Updates tags on a managed cluster. Updates a managed cluster with the specified tags.</p>

    <p></p>
  syntax: public Observable<ManagedClusterInner> updateTagsAsync(String resourceGroupName, String resourceName, Map<String, String> tags)
  uid: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.updateTagsAsync(String,String,Map<String, String>)
- fullName: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.updateTagsAsync(String resourceGroupName, String resourceName, Map<String, String> tags, final ServiceCallback<ManagedClusterInner> serviceCallback)
  name: updateTagsAsync(String resourceGroupName, String resourceName, Map<String, String> tags, final ServiceCallback<ManagedClusterInner> serviceCallback)
  nameWithType: ManagedClustersInner.updateTagsAsync(String resourceGroupName, String resourceName, Map<String, String> tags, final ServiceCallback<ManagedClusterInner> serviceCallback)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the managed cluster resource. </p>
    name: resourceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>Resource tags. </p>
    name: tags
    type: <xref href="Map%3CString%2C+String%3E?alt=Map%3CString%2C+String%3E&text=Map%3CString%2C+String%3E" data-throw-if-not-resolved="False"/>
  - description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    name: serviceCallback
    type: final ServiceCallback&lt;<xref href="com.microsoft.azure.management.containerservice.implementation.ManagedClusterInner?alt=com.microsoft.azure.management.containerservice.implementation.ManagedClusterInner&text=ManagedClusterInner" data-throw-if-not-resolved="False"/>&gt;
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
    type: ServiceFuture&lt;<xref href="com.microsoft.azure.management.containerservice.implementation.ManagedClusterInner?alt=com.microsoft.azure.management.containerservice.implementation.ManagedClusterInner&text=ManagedClusterInner" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Updates tags on a managed cluster. Updates a managed cluster with the specified tags.</p>

    <p></p>
  syntax: public ServiceFuture<ManagedClusterInner> updateTagsAsync(String resourceGroupName, String resourceName, Map<String, String> tags, final ServiceCallback<ManagedClusterInner> serviceCallback)
  uid: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.updateTagsAsync(String,String,Map<String, String>,final ServiceCallback<ManagedClusterInner>)
- fullName: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.updateTagsWithServiceResponseAsync(String resourceGroupName, String resourceName)
  name: updateTagsWithServiceResponseAsync(String resourceGroupName, String resourceName)
  nameWithType: ManagedClustersInner.updateTagsWithServiceResponseAsync(String resourceGroupName, String resourceName)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the managed cluster resource. </p>
    name: resourceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable for the request </p>
    type: Observable&lt;ServiceResponse&lt;<xref href="com.microsoft.azure.management.containerservice.implementation.ManagedClusterInner?alt=com.microsoft.azure.management.containerservice.implementation.ManagedClusterInner&text=ManagedClusterInner" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Updates tags on a managed cluster. Updates a managed cluster with the specified tags.</p>

    <p></p>
  syntax: public Observable<ServiceResponse<ManagedClusterInner>> updateTagsWithServiceResponseAsync(String resourceGroupName, String resourceName)
  uid: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.updateTagsWithServiceResponseAsync(String,String)
- fullName: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.updateTagsWithServiceResponseAsync(String resourceGroupName, String resourceName, Map<String, String> tags)
  name: updateTagsWithServiceResponseAsync(String resourceGroupName, String resourceName, Map<String, String> tags)
  nameWithType: ManagedClustersInner.updateTagsWithServiceResponseAsync(String resourceGroupName, String resourceName, Map<String, String> tags)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the managed cluster resource. </p>
    name: resourceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>Resource tags. </p>
    name: tags
    type: <xref href="Map%3CString%2C+String%3E?alt=Map%3CString%2C+String%3E&text=Map%3CString%2C+String%3E" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable for the request </p>
    type: Observable&lt;ServiceResponse&lt;<xref href="com.microsoft.azure.management.containerservice.implementation.ManagedClusterInner?alt=com.microsoft.azure.management.containerservice.implementation.ManagedClusterInner&text=ManagedClusterInner" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Updates tags on a managed cluster. Updates a managed cluster with the specified tags.</p>

    <p></p>
  syntax: public Observable<ServiceResponse<ManagedClusterInner>> updateTagsWithServiceResponseAsync(String resourceGroupName, String resourceName, Map<String, String> tags)
  uid: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner.updateTagsWithServiceResponseAsync(String,String,Map<String, String>)
nameWithType: ManagedClustersInner
syntax: public class ManagedClustersInner implements InnerSupportsGet<ManagedClusterInner>,InnerSupportsDelete<Void>,InnerSupportsListing<ManagedClusterInner>
type: class
uid: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner
fullName: com.microsoft.azure.management.containerservice.implementation.ManagedClustersInner
name: ManagedClustersInner
package: com.microsoft.azure.management.containerservice.implementation
summary: <p>An instance of this class provides access to all the operations defined in ManagedClusters. </p>
metadata: {}
