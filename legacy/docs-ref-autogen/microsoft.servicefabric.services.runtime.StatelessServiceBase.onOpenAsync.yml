### YamlMime:JavaMember
nameWithType: StatelessServiceBase.onOpenAsync
type: method
members:
- fullName: microsoft.servicefabric.services.runtime.StatelessServiceBase.onOpenAsync(CancellationToken cancellationToken)
  name: onOpenAsync(CancellationToken cancellationToken)
  nameWithType: StatelessServiceBase.onOpenAsync(CancellationToken cancellationToken)
  parameters:
  - description: >-
      <p>

        <xref uid="system.fabric.CancellationToken" data-throw-if-not-resolved="false">system.fabric.CancellationToken</xref> object to indicate the cancellation status of the operation. </p>
    name: cancellationToken
    type: <xref href="system.fabric.CancellationToken?alt=system.fabric.CancellationToken&text=CancellationToken" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>A <xref uid="" data-throw-if-not-resolved="false">CompletableFuture</xref> that represents outstanding operation. </p>
    type: <xref href="CompletableFuture%3C%3F%3E?alt=CompletableFuture<?>&text=CompletableFuture%3C%3F%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>This method is called as the final step of opening the service. Override this method to be notified that Open has completed for this instance's internal components.</p>

    <p></p>
  syntax: protected CompletableFuture<?> onOpenAsync(CancellationToken cancellationToken)
  uid: microsoft.servicefabric.services.runtime.StatelessServiceBase.onOpenAsync(CancellationToken)
uid: microsoft.servicefabric.services.runtime.StatelessServiceBase.onOpenAsync*
fullName: microsoft.servicefabric.services.runtime.StatelessServiceBase.onOpenAsync(CancellationToken cancellationToken)
name: onOpenAsync(CancellationToken cancellationToken)
package: microsoft.servicefabric.services.runtime
metadata: {}
