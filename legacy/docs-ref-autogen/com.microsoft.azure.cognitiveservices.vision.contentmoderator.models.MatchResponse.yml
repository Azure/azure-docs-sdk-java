### YamlMime:JavaType
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
methods:
- fullName: com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.MatchResponse.cacheID()
  name: cacheID()
  nameWithType: MatchResponse.cacheID()
  returns:
    description: <p>the cacheID value </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the cacheID value.</p>

    <p></p>
  syntax: public String cacheID()
  uid: com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.MatchResponse.cacheID()
- fullName: com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.MatchResponse.isMatch()
  name: isMatch()
  nameWithType: MatchResponse.isMatch()
  returns:
    description: <p>the isMatch value </p>
    type: <xref href="Boolean?alt=Boolean&text=Boolean" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the isMatch value.</p>

    <p></p>
  syntax: public Boolean isMatch()
  uid: com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.MatchResponse.isMatch()
- fullName: com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.MatchResponse.matches()
  name: matches()
  nameWithType: MatchResponse.matches()
  returns:
    description: <p>the matches value </p>
    type: List&lt;<xref href="com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.Match?alt=com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.Match&text=Match" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Get the matches value.</p>

    <p></p>
  syntax: public List<Match> matches()
  uid: com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.MatchResponse.matches()
- fullName: com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.MatchResponse.status()
  name: status()
  nameWithType: MatchResponse.status()
  returns:
    description: <p>the status value </p>
    type: <xref href="com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.Status?alt=com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.Status&text=Status" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the status value.</p>

    <p></p>
  syntax: public Status status()
  uid: com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.MatchResponse.status()
- fullName: com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.MatchResponse.trackingId()
  name: trackingId()
  nameWithType: MatchResponse.trackingId()
  returns:
    description: <p>the trackingId value </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the trackingId value.</p>

    <p></p>
  syntax: public String trackingId()
  uid: com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.MatchResponse.trackingId()
- fullName: com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.MatchResponse.withCacheID(String cacheID)
  name: withCacheID(String cacheID)
  nameWithType: MatchResponse.withCacheID(String cacheID)
  parameters:
  - description: <p>the cacheID value to set </p>
    name: cacheID
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the MatchResponse object itself. </p>
    type: <xref href="com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.MatchResponse?alt=com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.MatchResponse&text=MatchResponse" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the cacheID value.</p>

    <p></p>
  syntax: public MatchResponse withCacheID(String cacheID)
  uid: com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.MatchResponse.withCacheID(String)
- fullName: com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.MatchResponse.withIsMatch(Boolean isMatch)
  name: withIsMatch(Boolean isMatch)
  nameWithType: MatchResponse.withIsMatch(Boolean isMatch)
  parameters:
  - description: <p>the isMatch value to set </p>
    name: isMatch
    type: <xref href="Boolean?alt=Boolean&text=Boolean" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the MatchResponse object itself. </p>
    type: <xref href="com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.MatchResponse?alt=com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.MatchResponse&text=MatchResponse" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the isMatch value.</p>

    <p></p>
  syntax: public MatchResponse withIsMatch(Boolean isMatch)
  uid: com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.MatchResponse.withIsMatch(Boolean)
- fullName: com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.MatchResponse.withMatches(List<Match> matches)
  name: withMatches(List<Match> matches)
  nameWithType: MatchResponse.withMatches(List<Match> matches)
  parameters:
  - description: <p>the matches value to set </p>
    name: matches
    type: List&lt;<xref href="com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.Match?alt=com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.Match&text=Match" data-throw-if-not-resolved="False"/>&gt;
  returns:
    description: <p>the MatchResponse object itself. </p>
    type: <xref href="com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.MatchResponse?alt=com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.MatchResponse&text=MatchResponse" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the matches value.</p>

    <p></p>
  syntax: public MatchResponse withMatches(List<Match> matches)
  uid: com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.MatchResponse.withMatches(List<Match>)
- fullName: com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.MatchResponse.withStatus(Status status)
  name: withStatus(Status status)
  nameWithType: MatchResponse.withStatus(Status status)
  parameters:
  - description: <p>the status value to set </p>
    name: status
    type: <xref href="com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.Status?alt=com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.Status&text=Status" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the MatchResponse object itself. </p>
    type: <xref href="com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.MatchResponse?alt=com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.MatchResponse&text=MatchResponse" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the status value.</p>

    <p></p>
  syntax: public MatchResponse withStatus(Status status)
  uid: com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.MatchResponse.withStatus(Status)
- fullName: com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.MatchResponse.withTrackingId(String trackingId)
  name: withTrackingId(String trackingId)
  nameWithType: MatchResponse.withTrackingId(String trackingId)
  parameters:
  - description: <p>the trackingId value to set </p>
    name: trackingId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the MatchResponse object itself. </p>
    type: <xref href="com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.MatchResponse?alt=com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.MatchResponse&text=MatchResponse" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the trackingId value.</p>

    <p></p>
  syntax: public MatchResponse withTrackingId(String trackingId)
  uid: com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.MatchResponse.withTrackingId(String)
nameWithType: MatchResponse
syntax: public class MatchResponse
type: class
uid: com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.MatchResponse
fullName: com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.MatchResponse
name: MatchResponse
package: com.microsoft.azure.cognitiveservices.vision.contentmoderator.models
summary: <p>The response for a Match request. </p>
metadata: {}
