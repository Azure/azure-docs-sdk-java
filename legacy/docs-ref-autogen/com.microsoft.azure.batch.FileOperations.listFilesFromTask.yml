### YamlMime:JavaMember
nameWithType: FileOperations.listFilesFromTask
type: method
members:
- fullName: com.microsoft.azure.batch.FileOperations.listFilesFromTask(String jobId, String taskId)
  name: listFilesFromTask(String jobId, String taskId)
  nameWithType: FileOperations.listFilesFromTask(String jobId, String taskId)
  parameters:
  - description: <p>The ID of the job. </p>
    name: jobId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The ID of the task. </p>
    name: taskId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="BatchErrorException?alt=BatchErrorException&text=BatchErrorException" data-throw-if-not-resolved="False"/>
    description: <p>Exception thrown when an error response is received from the Batch service. </p>
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
    description: <p>Exception thrown when there is an error in serialization/deserialization of data sent to/received from the Batch service. </p>
  returns:
    description: <p>A list of <xref uid="" data-throw-if-not-resolved="false">NodeFile</xref> objects. </p>
    type: PagedList&lt;<xref href="com.microsoft.azure.batch.protocol.models.NodeFile?alt=com.microsoft.azure.batch.protocol.models.NodeFile&text=NodeFile" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Lists the files in the specified task's directory on its compute node.</p>

    <p></p>
  syntax: public PagedList<NodeFile> listFilesFromTask(String jobId, String taskId)
  uid: com.microsoft.azure.batch.FileOperations.listFilesFromTask(String,String)
- fullName: com.microsoft.azure.batch.FileOperations.listFilesFromTask(String jobId, String taskId, Boolean recursive, DetailLevel detailLevel)
  name: listFilesFromTask(String jobId, String taskId, Boolean recursive, DetailLevel detailLevel)
  nameWithType: FileOperations.listFilesFromTask(String jobId, String taskId, Boolean recursive, DetailLevel detailLevel)
  parameters:
  - description: <p>The ID of the job. </p>
    name: jobId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The ID of the task. </p>
    name: taskId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>If true, performs a recursive list of all files of the task. If false or null, returns only the files in the root task directory. </p>
    name: recursive
    type: <xref href="Boolean?alt=Boolean&text=Boolean" data-throw-if-not-resolved="False"/>
  - description: <p>A <xref uid="com.microsoft.azure.batch.DetailLevel" data-throw-if-not-resolved="false">DetailLevel</xref> used for filtering the list and for controlling which properties are retrieved from the service. </p>
    name: detailLevel
    type: <xref href="com.microsoft.azure.batch.DetailLevel?alt=com.microsoft.azure.batch.DetailLevel&text=DetailLevel" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="BatchErrorException?alt=BatchErrorException&text=BatchErrorException" data-throw-if-not-resolved="False"/>
    description: <p>Exception thrown when an error response is received from the Batch service. </p>
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
    description: <p>Exception thrown when there is an error in serialization/deserialization of data sent to/received from the Batch service. </p>
  returns:
    description: <p>A list of <xref uid="" data-throw-if-not-resolved="false">NodeFile</xref> objects. </p>
    type: PagedList&lt;<xref href="com.microsoft.azure.batch.protocol.models.NodeFile?alt=com.microsoft.azure.batch.protocol.models.NodeFile&text=NodeFile" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Lists the files in the specified task's directory on its compute node.</p>

    <p></p>
  syntax: public PagedList<NodeFile> listFilesFromTask(String jobId, String taskId, Boolean recursive, DetailLevel detailLevel)
  uid: com.microsoft.azure.batch.FileOperations.listFilesFromTask(String,String,Boolean,DetailLevel)
- fullName: com.microsoft.azure.batch.FileOperations.listFilesFromTask(String jobId, String taskId, Boolean recursive, DetailLevel detailLevel, Iterable<BatchClientBehavior> additionalBehaviors)
  name: listFilesFromTask(String jobId, String taskId, Boolean recursive, DetailLevel detailLevel, Iterable<BatchClientBehavior> additionalBehaviors)
  nameWithType: FileOperations.listFilesFromTask(String jobId, String taskId, Boolean recursive, DetailLevel detailLevel, Iterable<BatchClientBehavior> additionalBehaviors)
  parameters:
  - description: <p>The ID of the job. </p>
    name: jobId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The ID of the task. </p>
    name: taskId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>If true, performs a recursive list of all files of the task. If false or null, returns only the files in the root task directory. </p>
    name: recursive
    type: <xref href="Boolean?alt=Boolean&text=Boolean" data-throw-if-not-resolved="False"/>
  - description: <p>A <xref uid="com.microsoft.azure.batch.DetailLevel" data-throw-if-not-resolved="false">DetailLevel</xref> used for filtering the list and for controlling which properties are retrieved from the service. </p>
    name: detailLevel
    type: <xref href="com.microsoft.azure.batch.DetailLevel?alt=com.microsoft.azure.batch.DetailLevel&text=DetailLevel" data-throw-if-not-resolved="False"/>
  - description: <p>A collection of <xref uid="com.microsoft.azure.batch.BatchClientBehavior" data-throw-if-not-resolved="false">BatchClientBehavior</xref> instances that are applied to the Batch service request. </p>
    name: additionalBehaviors
    type: Iterable&lt;<xref href="com.microsoft.azure.batch.BatchClientBehavior?alt=com.microsoft.azure.batch.BatchClientBehavior&text=BatchClientBehavior" data-throw-if-not-resolved="False"/>&gt;
  exceptions:
  - type: <xref href="BatchErrorException?alt=BatchErrorException&text=BatchErrorException" data-throw-if-not-resolved="False"/>
    description: <p>Exception thrown when an error response is received from the Batch service. </p>
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
    description: <p>Exception thrown when there is an error in serialization/deserialization of data sent to/received from the Batch service. </p>
  returns:
    description: <p>A list of <xref uid="" data-throw-if-not-resolved="false">NodeFile</xref> objects. </p>
    type: PagedList&lt;<xref href="com.microsoft.azure.batch.protocol.models.NodeFile?alt=com.microsoft.azure.batch.protocol.models.NodeFile&text=NodeFile" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Lists the files in the specified task's directory on its compute node.</p>

    <p></p>
  syntax: public PagedList<NodeFile> listFilesFromTask(String jobId, String taskId, Boolean recursive, DetailLevel detailLevel, Iterable<BatchClientBehavior> additionalBehaviors)
  uid: com.microsoft.azure.batch.FileOperations.listFilesFromTask(String,String,Boolean,DetailLevel,Iterable<BatchClientBehavior>)
uid: com.microsoft.azure.batch.FileOperations.listFilesFromTask*
fullName: com.microsoft.azure.batch.FileOperations.listFilesFromTask(String jobId, String taskId)
name: listFilesFromTask(String jobId, String taskId)
package: com.microsoft.azure.batch
metadata: {}
