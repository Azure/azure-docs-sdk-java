### YamlMime:JavaType
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
methods:
- fullName: com.microsoft.azure.batch.protocol.models.TaskStatistics.kernelCPUTime()
  name: kernelCPUTime()
  nameWithType: TaskStatistics.kernelCPUTime()
  returns:
    description: <p>the kernelCPUTime value </p>
    type: <xref href="Period?alt=Period&text=Period" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the kernelCPUTime value.</p>

    <p></p>
  syntax: public Period kernelCPUTime()
  uid: com.microsoft.azure.batch.protocol.models.TaskStatistics.kernelCPUTime()
- fullName: com.microsoft.azure.batch.protocol.models.TaskStatistics.lastUpdateTime()
  name: lastUpdateTime()
  nameWithType: TaskStatistics.lastUpdateTime()
  returns:
    description: <p>the lastUpdateTime value </p>
    type: <xref href="DateTime?alt=DateTime&text=DateTime" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the lastUpdateTime value.</p>

    <p></p>
  syntax: public DateTime lastUpdateTime()
  uid: com.microsoft.azure.batch.protocol.models.TaskStatistics.lastUpdateTime()
- fullName: com.microsoft.azure.batch.protocol.models.TaskStatistics.readIOGiB()
  name: readIOGiB()
  nameWithType: TaskStatistics.readIOGiB()
  returns:
    description: <p>the readIOGiB value </p>
    type: <xref href="double?alt=double&text=double" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the readIOGiB value.</p>

    <p></p>
  syntax: public double readIOGiB()
  uid: com.microsoft.azure.batch.protocol.models.TaskStatistics.readIOGiB()
- fullName: com.microsoft.azure.batch.protocol.models.TaskStatistics.readIOps()
  name: readIOps()
  nameWithType: TaskStatistics.readIOps()
  returns:
    description: <p>the readIOps value </p>
    type: <xref href="long?alt=long&text=long" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the readIOps value.</p>

    <p></p>
  syntax: public long readIOps()
  uid: com.microsoft.azure.batch.protocol.models.TaskStatistics.readIOps()
- fullName: com.microsoft.azure.batch.protocol.models.TaskStatistics.startTime()
  name: startTime()
  nameWithType: TaskStatistics.startTime()
  returns:
    description: <p>the startTime value </p>
    type: <xref href="DateTime?alt=DateTime&text=DateTime" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the startTime value.</p>

    <p></p>
  syntax: public DateTime startTime()
  uid: com.microsoft.azure.batch.protocol.models.TaskStatistics.startTime()
- fullName: com.microsoft.azure.batch.protocol.models.TaskStatistics.url()
  name: url()
  nameWithType: TaskStatistics.url()
  returns:
    description: <p>the url value </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the url value.</p>

    <p></p>
  syntax: public String url()
  uid: com.microsoft.azure.batch.protocol.models.TaskStatistics.url()
- fullName: com.microsoft.azure.batch.protocol.models.TaskStatistics.userCPUTime()
  name: userCPUTime()
  nameWithType: TaskStatistics.userCPUTime()
  returns:
    description: <p>the userCPUTime value </p>
    type: <xref href="Period?alt=Period&text=Period" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the userCPUTime value.</p>

    <p></p>
  syntax: public Period userCPUTime()
  uid: com.microsoft.azure.batch.protocol.models.TaskStatistics.userCPUTime()
- fullName: com.microsoft.azure.batch.protocol.models.TaskStatistics.waitTime()
  name: waitTime()
  nameWithType: TaskStatistics.waitTime()
  returns:
    description: <p>the waitTime value </p>
    type: <xref href="Period?alt=Period&text=Period" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the waitTime value.</p>

    <p></p>
  syntax: public Period waitTime()
  uid: com.microsoft.azure.batch.protocol.models.TaskStatistics.waitTime()
- fullName: com.microsoft.azure.batch.protocol.models.TaskStatistics.wallClockTime()
  name: wallClockTime()
  nameWithType: TaskStatistics.wallClockTime()
  returns:
    description: <p>the wallClockTime value </p>
    type: <xref href="Period?alt=Period&text=Period" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the wall clock time is the elapsed time from when the task started running on a compute node to when it finished (or to the last time the statistics were updated, if the task had not finished by then). If the task was retried, this includes the wall clock time of all the task retries.</p>

    <p></p>
  syntax: public Period wallClockTime()
  uid: com.microsoft.azure.batch.protocol.models.TaskStatistics.wallClockTime()
- fullName: com.microsoft.azure.batch.protocol.models.TaskStatistics.withKernelCPUTime(Period kernelCPUTime)
  name: withKernelCPUTime(Period kernelCPUTime)
  nameWithType: TaskStatistics.withKernelCPUTime(Period kernelCPUTime)
  parameters:
  - description: <p>the kernelCPUTime value to set </p>
    name: kernelCPUTime
    type: <xref href="Period?alt=Period&text=Period" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the TaskStatistics object itself. </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.TaskStatistics?alt=com.microsoft.azure.batch.protocol.models.TaskStatistics&text=TaskStatistics" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the kernelCPUTime value.</p>

    <p></p>
  syntax: public TaskStatistics withKernelCPUTime(Period kernelCPUTime)
  uid: com.microsoft.azure.batch.protocol.models.TaskStatistics.withKernelCPUTime(Period)
- fullName: com.microsoft.azure.batch.protocol.models.TaskStatistics.withLastUpdateTime(DateTime lastUpdateTime)
  name: withLastUpdateTime(DateTime lastUpdateTime)
  nameWithType: TaskStatistics.withLastUpdateTime(DateTime lastUpdateTime)
  parameters:
  - description: <p>the lastUpdateTime value to set </p>
    name: lastUpdateTime
    type: <xref href="DateTime?alt=DateTime&text=DateTime" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the TaskStatistics object itself. </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.TaskStatistics?alt=com.microsoft.azure.batch.protocol.models.TaskStatistics&text=TaskStatistics" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the lastUpdateTime value.</p>

    <p></p>
  syntax: public TaskStatistics withLastUpdateTime(DateTime lastUpdateTime)
  uid: com.microsoft.azure.batch.protocol.models.TaskStatistics.withLastUpdateTime(DateTime)
- fullName: com.microsoft.azure.batch.protocol.models.TaskStatistics.withReadIOGiB(double readIOGiB)
  name: withReadIOGiB(double readIOGiB)
  nameWithType: TaskStatistics.withReadIOGiB(double readIOGiB)
  parameters:
  - description: <p>the readIOGiB value to set </p>
    name: readIOGiB
    type: <xref href="double?alt=double&text=double" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the TaskStatistics object itself. </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.TaskStatistics?alt=com.microsoft.azure.batch.protocol.models.TaskStatistics&text=TaskStatistics" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the readIOGiB value.</p>

    <p></p>
  syntax: public TaskStatistics withReadIOGiB(double readIOGiB)
  uid: com.microsoft.azure.batch.protocol.models.TaskStatistics.withReadIOGiB(double)
- fullName: com.microsoft.azure.batch.protocol.models.TaskStatistics.withReadIOps(long readIOps)
  name: withReadIOps(long readIOps)
  nameWithType: TaskStatistics.withReadIOps(long readIOps)
  parameters:
  - description: <p>the readIOps value to set </p>
    name: readIOps
    type: <xref href="long?alt=long&text=long" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the TaskStatistics object itself. </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.TaskStatistics?alt=com.microsoft.azure.batch.protocol.models.TaskStatistics&text=TaskStatistics" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the readIOps value.</p>

    <p></p>
  syntax: public TaskStatistics withReadIOps(long readIOps)
  uid: com.microsoft.azure.batch.protocol.models.TaskStatistics.withReadIOps(long)
- fullName: com.microsoft.azure.batch.protocol.models.TaskStatistics.withStartTime(DateTime startTime)
  name: withStartTime(DateTime startTime)
  nameWithType: TaskStatistics.withStartTime(DateTime startTime)
  parameters:
  - description: <p>the startTime value to set </p>
    name: startTime
    type: <xref href="DateTime?alt=DateTime&text=DateTime" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the TaskStatistics object itself. </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.TaskStatistics?alt=com.microsoft.azure.batch.protocol.models.TaskStatistics&text=TaskStatistics" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the startTime value.</p>

    <p></p>
  syntax: public TaskStatistics withStartTime(DateTime startTime)
  uid: com.microsoft.azure.batch.protocol.models.TaskStatistics.withStartTime(DateTime)
- fullName: com.microsoft.azure.batch.protocol.models.TaskStatistics.withUrl(String url)
  name: withUrl(String url)
  nameWithType: TaskStatistics.withUrl(String url)
  parameters:
  - description: <p>the url value to set </p>
    name: url
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the TaskStatistics object itself. </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.TaskStatistics?alt=com.microsoft.azure.batch.protocol.models.TaskStatistics&text=TaskStatistics" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the url value.</p>

    <p></p>
  syntax: public TaskStatistics withUrl(String url)
  uid: com.microsoft.azure.batch.protocol.models.TaskStatistics.withUrl(String)
- fullName: com.microsoft.azure.batch.protocol.models.TaskStatistics.withUserCPUTime(Period userCPUTime)
  name: withUserCPUTime(Period userCPUTime)
  nameWithType: TaskStatistics.withUserCPUTime(Period userCPUTime)
  parameters:
  - description: <p>the userCPUTime value to set </p>
    name: userCPUTime
    type: <xref href="Period?alt=Period&text=Period" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the TaskStatistics object itself. </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.TaskStatistics?alt=com.microsoft.azure.batch.protocol.models.TaskStatistics&text=TaskStatistics" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the userCPUTime value.</p>

    <p></p>
  syntax: public TaskStatistics withUserCPUTime(Period userCPUTime)
  uid: com.microsoft.azure.batch.protocol.models.TaskStatistics.withUserCPUTime(Period)
- fullName: com.microsoft.azure.batch.protocol.models.TaskStatistics.withWaitTime(Period waitTime)
  name: withWaitTime(Period waitTime)
  nameWithType: TaskStatistics.withWaitTime(Period waitTime)
  parameters:
  - description: <p>the waitTime value to set </p>
    name: waitTime
    type: <xref href="Period?alt=Period&text=Period" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the TaskStatistics object itself. </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.TaskStatistics?alt=com.microsoft.azure.batch.protocol.models.TaskStatistics&text=TaskStatistics" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the waitTime value.</p>

    <p></p>
  syntax: public TaskStatistics withWaitTime(Period waitTime)
  uid: com.microsoft.azure.batch.protocol.models.TaskStatistics.withWaitTime(Period)
- fullName: com.microsoft.azure.batch.protocol.models.TaskStatistics.withWallClockTime(Period wallClockTime)
  name: withWallClockTime(Period wallClockTime)
  nameWithType: TaskStatistics.withWallClockTime(Period wallClockTime)
  parameters:
  - description: <p>the wallClockTime value to set </p>
    name: wallClockTime
    type: <xref href="Period?alt=Period&text=Period" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the TaskStatistics object itself. </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.TaskStatistics?alt=com.microsoft.azure.batch.protocol.models.TaskStatistics&text=TaskStatistics" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the wall clock time is the elapsed time from when the task started running on a compute node to when it finished (or to the last time the statistics were updated, if the task had not finished by then). If the task was retried, this includes the wall clock time of all the task retries.</p>

    <p></p>
  syntax: public TaskStatistics withWallClockTime(Period wallClockTime)
  uid: com.microsoft.azure.batch.protocol.models.TaskStatistics.withWallClockTime(Period)
- fullName: com.microsoft.azure.batch.protocol.models.TaskStatistics.withWriteIOGiB(double writeIOGiB)
  name: withWriteIOGiB(double writeIOGiB)
  nameWithType: TaskStatistics.withWriteIOGiB(double writeIOGiB)
  parameters:
  - description: <p>the writeIOGiB value to set </p>
    name: writeIOGiB
    type: <xref href="double?alt=double&text=double" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the TaskStatistics object itself. </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.TaskStatistics?alt=com.microsoft.azure.batch.protocol.models.TaskStatistics&text=TaskStatistics" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the writeIOGiB value.</p>

    <p></p>
  syntax: public TaskStatistics withWriteIOGiB(double writeIOGiB)
  uid: com.microsoft.azure.batch.protocol.models.TaskStatistics.withWriteIOGiB(double)
- fullName: com.microsoft.azure.batch.protocol.models.TaskStatistics.withWriteIOps(long writeIOps)
  name: withWriteIOps(long writeIOps)
  nameWithType: TaskStatistics.withWriteIOps(long writeIOps)
  parameters:
  - description: <p>the writeIOps value to set </p>
    name: writeIOps
    type: <xref href="long?alt=long&text=long" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the TaskStatistics object itself. </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.TaskStatistics?alt=com.microsoft.azure.batch.protocol.models.TaskStatistics&text=TaskStatistics" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the writeIOps value.</p>

    <p></p>
  syntax: public TaskStatistics withWriteIOps(long writeIOps)
  uid: com.microsoft.azure.batch.protocol.models.TaskStatistics.withWriteIOps(long)
- fullName: com.microsoft.azure.batch.protocol.models.TaskStatistics.writeIOGiB()
  name: writeIOGiB()
  nameWithType: TaskStatistics.writeIOGiB()
  returns:
    description: <p>the writeIOGiB value </p>
    type: <xref href="double?alt=double&text=double" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the writeIOGiB value.</p>

    <p></p>
  syntax: public double writeIOGiB()
  uid: com.microsoft.azure.batch.protocol.models.TaskStatistics.writeIOGiB()
- fullName: com.microsoft.azure.batch.protocol.models.TaskStatistics.writeIOps()
  name: writeIOps()
  nameWithType: TaskStatistics.writeIOps()
  returns:
    description: <p>the writeIOps value </p>
    type: <xref href="long?alt=long&text=long" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the writeIOps value.</p>

    <p></p>
  syntax: public long writeIOps()
  uid: com.microsoft.azure.batch.protocol.models.TaskStatistics.writeIOps()
nameWithType: TaskStatistics
syntax: public class TaskStatistics
type: class
uid: com.microsoft.azure.batch.protocol.models.TaskStatistics
fullName: com.microsoft.azure.batch.protocol.models.TaskStatistics
name: TaskStatistics
package: com.microsoft.azure.batch.protocol.models
summary: <p>Resource usage statistics for a task. </p>
metadata: {}
