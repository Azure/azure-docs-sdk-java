### YamlMime:JavaType
constructors:
- fullName: microsoft.servicefabric.services.remoting.fabrictransport.runtime.FabricTransportServiceRemotingListener.FabricTransportServiceRemotingListener(ServiceContext serviceContext, Service serviceImplementation)
  name: FabricTransportServiceRemotingListener(ServiceContext serviceContext, Service serviceImplementation)
  nameWithType: FabricTransportServiceRemotingListener.FabricTransportServiceRemotingListener(ServiceContext serviceContext, Service serviceImplementation)
  parameters:
  - description: <p>The context of the service for which the remoting listener is being constructed. </p>
    name: serviceContext
    type: <xref href="system.fabric.ServiceContext?alt=system.fabric.ServiceContext&text=ServiceContext" data-throw-if-not-resolved="False"/>
  - description: <p>The service implementation object. </p>
    name: serviceImplementation
    type: <xref href="microsoft.servicefabric.services.remoting.Service?alt=microsoft.servicefabric.services.remoting.Service&text=Service" data-throw-if-not-resolved="False"/>
  summary: <p>Constructs a fabric transport based service remoting listener. </p>
  syntax: public FabricTransportServiceRemotingListener(ServiceContext serviceContext, Service serviceImplementation)
  uid: microsoft.servicefabric.services.remoting.fabrictransport.runtime.FabricTransportServiceRemotingListener.FabricTransportServiceRemotingListener(ServiceContext,Service)
- fullName: microsoft.servicefabric.services.remoting.fabrictransport.runtime.FabricTransportServiceRemotingListener.FabricTransportServiceRemotingListener(ServiceContext serviceContext, Service serviceImplementation, FabricTransportRemotingListenerSettings listenerSettings)
  name: FabricTransportServiceRemotingListener(ServiceContext serviceContext, Service serviceImplementation, FabricTransportRemotingListenerSettings listenerSettings)
  nameWithType: FabricTransportServiceRemotingListener.FabricTransportServiceRemotingListener(ServiceContext serviceContext, Service serviceImplementation, FabricTransportRemotingListenerSettings listenerSettings)
  parameters:
  - description: <p>The context of the service for which the remoting listener is being constructed. </p>
    name: serviceContext
    type: <xref href="system.fabric.ServiceContext?alt=system.fabric.ServiceContext&text=ServiceContext" data-throw-if-not-resolved="False"/>
  - description: <p>The service implementation object. </p>
    name: serviceImplementation
    type: <xref href="microsoft.servicefabric.services.remoting.Service?alt=microsoft.servicefabric.services.remoting.Service&text=Service" data-throw-if-not-resolved="False"/>
  - description: <p>The settings for the listener. </p>
    name: listenerSettings
    type: <xref href="microsoft.servicefabric.services.remoting.fabrictransport.runtime.FabricTransportRemotingListenerSettings?alt=microsoft.servicefabric.services.remoting.fabrictransport.runtime.FabricTransportRemotingListenerSettings&text=FabricTransportRemotingListenerSettings" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Constructs a fabric transport based service remoting listener that uses the specified settings.</p>

    <p></p>
  syntax: public FabricTransportServiceRemotingListener(ServiceContext serviceContext, Service serviceImplementation, FabricTransportRemotingListenerSettings listenerSettings)
  uid: microsoft.servicefabric.services.remoting.fabrictransport.runtime.FabricTransportServiceRemotingListener.FabricTransportServiceRemotingListener(ServiceContext,Service,FabricTransportRemotingListenerSettings)
- fullName: microsoft.servicefabric.services.remoting.fabrictransport.runtime.FabricTransportServiceRemotingListener.FabricTransportServiceRemotingListener(ServiceContext serviceContext, Service serviceImplementation, String listenerSettingsConfigSectionName)
  name: FabricTransportServiceRemotingListener(ServiceContext serviceContext, Service serviceImplementation, String listenerSettingsConfigSectionName)
  nameWithType: FabricTransportServiceRemotingListener.FabricTransportServiceRemotingListener(ServiceContext serviceContext, Service serviceImplementation, String listenerSettingsConfigSectionName)
  parameters:
  - description: <p>The context of the service for which the remoting listener is being constructed. </p>
    name: serviceContext
    type: <xref href="system.fabric.ServiceContext?alt=system.fabric.ServiceContext&text=ServiceContext" data-throw-if-not-resolved="False"/>
  - description: <p>The service implementation object. </p>
    name: serviceImplementation
    type: <xref href="microsoft.servicefabric.services.remoting.Service?alt=microsoft.servicefabric.services.remoting.Service&text=Service" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the configuration section in the configuration package named "Config" in the service manifest that defines the settings for the listener. </p>
    name: listenerSettingsConfigSectionName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: <p>Constructs a fabric Transport based service remoting listener. </p>
  syntax: public FabricTransportServiceRemotingListener(ServiceContext serviceContext, Service serviceImplementation, String listenerSettingsConfigSectionName)
  uid: microsoft.servicefabric.services.remoting.fabrictransport.runtime.FabricTransportServiceRemotingListener.FabricTransportServiceRemotingListener(ServiceContext,Service,String)
- fullName: microsoft.servicefabric.services.remoting.fabrictransport.runtime.FabricTransportServiceRemotingListener.FabricTransportServiceRemotingListener(ServiceContext serviceContext, ServiceRemotingMessageHandler messageHandler)
  name: FabricTransportServiceRemotingListener(ServiceContext serviceContext, ServiceRemotingMessageHandler messageHandler)
  nameWithType: FabricTransportServiceRemotingListener.FabricTransportServiceRemotingListener(ServiceContext serviceContext, ServiceRemotingMessageHandler messageHandler)
  parameters:
  - description: <p>The context of the service for which the remoting listener is being constructed. </p>
    name: serviceContext
    type: <xref href="system.fabric.ServiceContext?alt=system.fabric.ServiceContext&text=ServiceContext" data-throw-if-not-resolved="False"/>
  - description: <p>The handler for processing remoting messages. As the messages are received, the listener delivers them to this handler. </p>
    name: messageHandler
    type: <xref href="microsoft.servicefabric.services.remoting.ServiceRemotingMessageHandler?alt=microsoft.servicefabric.services.remoting.ServiceRemotingMessageHandler&text=ServiceRemotingMessageHandler" data-throw-if-not-resolved="False"/>
  summary: <p>Constructs a fabric transport based service remoting listener. </p>
  syntax: public FabricTransportServiceRemotingListener(ServiceContext serviceContext, ServiceRemotingMessageHandler messageHandler)
  uid: microsoft.servicefabric.services.remoting.fabrictransport.runtime.FabricTransportServiceRemotingListener.FabricTransportServiceRemotingListener(ServiceContext,ServiceRemotingMessageHandler)
- fullName: microsoft.servicefabric.services.remoting.fabrictransport.runtime.FabricTransportServiceRemotingListener.FabricTransportServiceRemotingListener(ServiceContext serviceContext, ServiceRemotingMessageHandler messageHandler, FabricTransportRemotingListenerSettings listenerSettings)
  name: FabricTransportServiceRemotingListener(ServiceContext serviceContext, ServiceRemotingMessageHandler messageHandler, FabricTransportRemotingListenerSettings listenerSettings)
  nameWithType: FabricTransportServiceRemotingListener.FabricTransportServiceRemotingListener(ServiceContext serviceContext, ServiceRemotingMessageHandler messageHandler, FabricTransportRemotingListenerSettings listenerSettings)
  parameters:
  - description: <p>The context of the service for which the remoting listener is being constructed. </p>
    name: serviceContext
    type: <xref href="system.fabric.ServiceContext?alt=system.fabric.ServiceContext&text=ServiceContext" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the configuration section in the configuration package named "Config" in the service manifest that defines the settings for the listener. </p>
    name: messageHandler
    type: <xref href="microsoft.servicefabric.services.remoting.ServiceRemotingMessageHandler?alt=microsoft.servicefabric.services.remoting.ServiceRemotingMessageHandler&text=ServiceRemotingMessageHandler" data-throw-if-not-resolved="False"/>
  - description: <p>The service implementation object. </p>
    name: listenerSettings
    type: <xref href="microsoft.servicefabric.services.remoting.fabrictransport.runtime.FabricTransportRemotingListenerSettings?alt=microsoft.servicefabric.services.remoting.fabrictransport.runtime.FabricTransportRemotingListenerSettings&text=FabricTransportRemotingListenerSettings" data-throw-if-not-resolved="False"/>
  summary: <p>Constructs a fabric Transport based service remoting listener. </p>
  syntax: public FabricTransportServiceRemotingListener(ServiceContext serviceContext, ServiceRemotingMessageHandler messageHandler, FabricTransportRemotingListenerSettings listenerSettings)
  uid: microsoft.servicefabric.services.remoting.fabrictransport.runtime.FabricTransportServiceRemotingListener.FabricTransportServiceRemotingListener(ServiceContext,ServiceRemotingMessageHandler,FabricTransportRemotingListenerSettings)
- fullName: microsoft.servicefabric.services.remoting.fabrictransport.runtime.FabricTransportServiceRemotingListener.FabricTransportServiceRemotingListener(ServiceContext serviceContext, ServiceRemotingMessageHandler messageHandler, String listenerSettingsConfigSectionName)
  name: FabricTransportServiceRemotingListener(ServiceContext serviceContext, ServiceRemotingMessageHandler messageHandler, String listenerSettingsConfigSectionName)
  nameWithType: FabricTransportServiceRemotingListener.FabricTransportServiceRemotingListener(ServiceContext serviceContext, ServiceRemotingMessageHandler messageHandler, String listenerSettingsConfigSectionName)
  parameters:
  - description: <p>The context of the service for which the remoting listener is being constructed. </p>
    name: serviceContext
    type: <xref href="system.fabric.ServiceContext?alt=system.fabric.ServiceContext&text=ServiceContext" data-throw-if-not-resolved="False"/>
  - description: <p>The handler for processing remoting messages. As the messages are received, the listener delivers them to this handler. </p>
    name: messageHandler
    type: <xref href="microsoft.servicefabric.services.remoting.ServiceRemotingMessageHandler?alt=microsoft.servicefabric.services.remoting.ServiceRemotingMessageHandler&text=ServiceRemotingMessageHandler" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the configuration section in the configuration package named "Config" in the service manifest that defines the settings for the listener. </p>
    name: listenerSettingsConfigSectionName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: <p>Constructs a fabric transport based service remoting listener. </p>
  syntax: public FabricTransportServiceRemotingListener(ServiceContext serviceContext, ServiceRemotingMessageHandler messageHandler, String listenerSettingsConfigSectionName)
  uid: microsoft.servicefabric.services.remoting.fabrictransport.runtime.FabricTransportServiceRemotingListener.FabricTransportServiceRemotingListener(ServiceContext,ServiceRemotingMessageHandler,String)
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
- <xref href="microsoft.servicefabric.services.communication.runtime.CommunicationListener" data-throw-if-not-resolved="False"/>
- <xref href="microsoft.servicefabric.services.remoting.runtime.ServiceRemotingListener?alt=microsoft.servicefabric.services.remoting.runtime.ServiceRemotingListener&text=ServiceRemotingListener" data-throw-if-not-resolved="False"/>
methods:
- fullName: microsoft.servicefabric.services.remoting.fabrictransport.runtime.FabricTransportServiceRemotingListener.abort()
  name: abort()
  nameWithType: FabricTransportServiceRemotingListener.abort()
  overridden: microsoft.servicefabric.services.communication.runtime.CommunicationListener.abort()
  summary: <p>This method causes the communication listener to close. Close is a terminal state and this method causes the transition to close ungracefully. Any outstanding operations (including close) should be canceled when this method is called. </p>
  syntax: public void abort()
  uid: microsoft.servicefabric.services.remoting.fabrictransport.runtime.FabricTransportServiceRemotingListener.abort()
- fullName: microsoft.servicefabric.services.remoting.fabrictransport.runtime.FabricTransportServiceRemotingListener.closeAsync(CancellationToken cancellationToken)
  name: closeAsync(CancellationToken cancellationToken)
  nameWithType: FabricTransportServiceRemotingListener.closeAsync(CancellationToken cancellationToken)
  overridden: microsoft.servicefabric.services.communication.runtime.CommunicationListener.closeAsync(CancellationToken)
  parameters:
  - description: >-
      <p>

        <xref uid="system.fabric.CancellationToken" data-throw-if-not-resolved="false" data-raw-source="system.fabric.CancellationToken"></xref> object to indicate the cancellation status of the operation. </p>
    name: cancellationToken
    type: <xref href="system.fabric.CancellationToken?alt=system.fabric.CancellationToken&text=CancellationToken" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>A <xref uid="" data-throw-if-not-resolved="false" data-raw-source="CompletableFuture"></xref> that represents outstanding operation. </p>
    type: <xref href="CompletableFuture%3C%3F%3E?alt=CompletableFuture%3C%3F%3E&text=CompletableFuture%3C%3F%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>This method causes the communication listener to close. Close is a terminal state and this method allows the communication listener to transition to this state in a graceful manner.</p>

    <p></p>
  syntax: public CompletableFuture<?> closeAsync(CancellationToken cancellationToken)
  uid: microsoft.servicefabric.services.remoting.fabrictransport.runtime.FabricTransportServiceRemotingListener.closeAsync(CancellationToken)
- fullName: microsoft.servicefabric.services.remoting.fabrictransport.runtime.FabricTransportServiceRemotingListener.openAsync(CancellationToken cancellationToken)
  name: openAsync(CancellationToken cancellationToken)
  nameWithType: FabricTransportServiceRemotingListener.openAsync(CancellationToken cancellationToken)
  overridden: microsoft.servicefabric.services.communication.runtime.CommunicationListener.openAsync(CancellationToken)
  parameters:
  - description: >-
      <p>

        <xref uid="system.fabric.CancellationToken" data-throw-if-not-resolved="false" data-raw-source="system.fabric.CancellationToken"></xref> object to indicate the cancellation status of the operation. </p>
    name: cancellationToken
    type: <xref href="system.fabric.CancellationToken?alt=system.fabric.CancellationToken&text=CancellationToken" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>A <xref uid="" data-throw-if-not-resolved="false" data-raw-source="CompletableFuture"></xref> that represents outstanding operation. The result of the Task is the endpoint string. </p>
    type: <xref href="CompletableFuture%3CString%3E?alt=CompletableFuture%3CString%3E&text=CompletableFuture%3CString%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>This method causes the communication listener to be opened. Once the Open completes, the communication listener becomes usable - accepts and sends messages.</p>

    <p></p>
  syntax: public CompletableFuture<String> openAsync(CancellationToken cancellationToken)
  uid: microsoft.servicefabric.services.remoting.fabrictransport.runtime.FabricTransportServiceRemotingListener.openAsync(CancellationToken)
nameWithType: FabricTransportServiceRemotingListener
syntax: public class FabricTransportServiceRemotingListener implements ServiceRemotingListener
type: class
uid: microsoft.servicefabric.services.remoting.fabrictransport.runtime.FabricTransportServiceRemotingListener
fullName: microsoft.servicefabric.services.remoting.fabrictransport.runtime.FabricTransportServiceRemotingListener
name: FabricTransportServiceRemotingListener
package: microsoft.servicefabric.services.remoting.fabrictransport.runtime
summary: <p>An <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceRemotingListener"></xref> that uses fabric TCP transport to provide interface remoting for stateless and stateful services. </p>
metadata: {}
