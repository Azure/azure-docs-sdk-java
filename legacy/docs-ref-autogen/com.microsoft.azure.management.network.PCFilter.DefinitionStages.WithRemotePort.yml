### YamlMime:JavaType
methods:
- fullName: com.microsoft.azure.management.network.PCFilter.DefinitionStages.WithRemotePort<ParentT>.withRemotePort(int port)
  name: withRemotePort(int port)
  nameWithType: PCFilter.DefinitionStages.WithRemotePort<ParentT>.withRemotePort(int port)
  parameters:
  - description: <p>port number </p>
    name: port
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the next stage </p>
    type: <xref href="com.microsoft.azure.management.network.PCFilter.Definition?alt=com.microsoft.azure.management.network.PCFilter.Definition&text=PCFilter.Definition" data-throw-if-not-resolved="False"/>&lt;ParentT&gt;
  summary: >-
    <p>Set the remote port to be filtered on.</p>

    <p></p>
  syntax: public Definition<ParentT> withRemotePort(int port)
  uid: com.microsoft.azure.management.network.PCFilter.DefinitionStages.WithRemotePort.withRemotePort(int)
- fullName: com.microsoft.azure.management.network.PCFilter.DefinitionStages.WithRemotePort<ParentT>.withRemotePortRange(int startPort, int endPort)
  name: withRemotePortRange(int startPort, int endPort)
  nameWithType: PCFilter.DefinitionStages.WithRemotePort<ParentT>.withRemotePortRange(int startPort, int endPort)
  parameters:
  - description: <p>range start port number </p>
    name: startPort
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  - description: <p>range end port number </p>
    name: endPort
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the next stage </p>
    type: <xref href="com.microsoft.azure.management.network.PCFilter.Definition?alt=com.microsoft.azure.management.network.PCFilter.Definition&text=PCFilter.Definition" data-throw-if-not-resolved="False"/>&lt;ParentT&gt;
  summary: >-
    <p>Set the remote port range to be filtered on.</p>

    <p></p>
  syntax: public Definition<ParentT> withRemotePortRange(int startPort, int endPort)
  uid: com.microsoft.azure.management.network.PCFilter.DefinitionStages.WithRemotePort.withRemotePortRange(int,int)
- fullName: com.microsoft.azure.management.network.PCFilter.DefinitionStages.WithRemotePort<ParentT>.withRemotePorts(List<Integer> ports)
  name: withRemotePorts(List<Integer> ports)
  nameWithType: PCFilter.DefinitionStages.WithRemotePort<ParentT>.withRemotePorts(List<Integer> ports)
  parameters:
  - description: <p>list of remote ports </p>
    name: ports
    type: <xref href="List%3CInteger%3E?alt=List%3CInteger%3E&text=List%3CInteger%3E" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the next stage </p>
    type: <xref href="com.microsoft.azure.management.network.PCFilter.Definition?alt=com.microsoft.azure.management.network.PCFilter.Definition&text=PCFilter.Definition" data-throw-if-not-resolved="False"/>&lt;ParentT&gt;
  summary: >-
    <p>Set the list of remote ports to be filtered on.</p>

    <p></p>
  syntax: public Definition<ParentT> withRemotePorts(List<Integer> ports)
  uid: com.microsoft.azure.management.network.PCFilter.DefinitionStages.WithRemotePort.withRemotePorts(List<Integer>)
nameWithType: PCFilter.DefinitionStages.WithRemotePort<ParentT>
syntax: public interface WithRemotePort<ParentT>
type: interface
typeParameters:
- name: ParentT
uid: com.microsoft.azure.management.network.PCFilter.DefinitionStages.WithRemotePort
fullName: com.microsoft.azure.management.network.PCFilter.DefinitionStages.WithRemotePort<ParentT>
name: PCFilter.DefinitionStages.WithRemotePort<ParentT>
package: com.microsoft.azure.management.network
summary: '<p>Set local port to be filtered on. Notation: "80" for single port entry."80-85" for range. "80;443;" for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Default = null. </p>'
metadata: {}
