### YamlMime:JavaMember
nameWithType: ComputeNodes.deleteUserAsync
type: method
members:
- fullName: com.microsoft.azure.batch.protocol.ComputeNodes.deleteUserAsync(String poolId, String nodeId, String userName)
  name: deleteUserAsync(String poolId, String nodeId, String userName)
  nameWithType: ComputeNodes.deleteUserAsync(String poolId, String nodeId, String userName)
  parameters:
  - description: <p>The ID of the pool that contains the compute node. </p>
    name: poolId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The ID of the machine on which you want to delete a user account. </p>
    name: nodeId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the user account to delete. </p>
    name: userName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceResponseWithHeaders"></xref> object if successful. </p>
    type: <xref href="Observable%3CVoid%3E?alt=Observable%3CVoid%3E&text=Observable%3CVoid%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Deletes a user account from the specified compute node. You can delete a user account to a node only when it is in the idle or running state.</p>

    <p></p>
  syntax: public Observable<Void> deleteUserAsync(String poolId, String nodeId, String userName)
  uid: com.microsoft.azure.batch.protocol.ComputeNodes.deleteUserAsync(String,String,String)
- fullName: com.microsoft.azure.batch.protocol.ComputeNodes.deleteUserAsync(String poolId, String nodeId, String userName, ComputeNodeDeleteUserOptions computeNodeDeleteUserOptions)
  name: deleteUserAsync(String poolId, String nodeId, String userName, ComputeNodeDeleteUserOptions computeNodeDeleteUserOptions)
  nameWithType: ComputeNodes.deleteUserAsync(String poolId, String nodeId, String userName, ComputeNodeDeleteUserOptions computeNodeDeleteUserOptions)
  parameters:
  - description: <p>The ID of the pool that contains the compute node. </p>
    name: poolId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The ID of the machine on which you want to delete a user account. </p>
    name: nodeId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the user account to delete. </p>
    name: userName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>Additional parameters for the operation </p>
    name: computeNodeDeleteUserOptions
    type: <xref href="com.microsoft.azure.batch.protocol.models.ComputeNodeDeleteUserOptions?alt=com.microsoft.azure.batch.protocol.models.ComputeNodeDeleteUserOptions&text=ComputeNodeDeleteUserOptions" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceResponseWithHeaders"></xref> object if successful. </p>
    type: <xref href="Observable%3CVoid%3E?alt=Observable%3CVoid%3E&text=Observable%3CVoid%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Deletes a user account from the specified compute node. You can delete a user account to a node only when it is in the idle or running state.</p>

    <p></p>
  syntax: public Observable<Void> deleteUserAsync(String poolId, String nodeId, String userName, ComputeNodeDeleteUserOptions computeNodeDeleteUserOptions)
  uid: com.microsoft.azure.batch.protocol.ComputeNodes.deleteUserAsync(String,String,String,ComputeNodeDeleteUserOptions)
- fullName: com.microsoft.azure.batch.protocol.ComputeNodes.deleteUserAsync(String poolId, String nodeId, String userName, ComputeNodeDeleteUserOptions computeNodeDeleteUserOptions, final ServiceCallback<Void> serviceCallback)
  name: deleteUserAsync(String poolId, String nodeId, String userName, ComputeNodeDeleteUserOptions computeNodeDeleteUserOptions, final ServiceCallback<Void> serviceCallback)
  nameWithType: ComputeNodes.deleteUserAsync(String poolId, String nodeId, String userName, ComputeNodeDeleteUserOptions computeNodeDeleteUserOptions, final ServiceCallback<Void> serviceCallback)
  parameters:
  - description: <p>The ID of the pool that contains the compute node. </p>
    name: poolId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The ID of the machine on which you want to delete a user account. </p>
    name: nodeId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the user account to delete. </p>
    name: userName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>Additional parameters for the operation </p>
    name: computeNodeDeleteUserOptions
    type: <xref href="com.microsoft.azure.batch.protocol.models.ComputeNodeDeleteUserOptions?alt=com.microsoft.azure.batch.protocol.models.ComputeNodeDeleteUserOptions&text=ComputeNodeDeleteUserOptions" data-throw-if-not-resolved="False"/>
  - description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    name: serviceCallback
    type: <xref href="final+ServiceCallback%3CVoid%3E?alt=final+ServiceCallback%3CVoid%3E&text=final+ServiceCallback%3CVoid%3E" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
    type: <xref href="ServiceFuture%3CVoid%3E?alt=ServiceFuture%3CVoid%3E&text=ServiceFuture%3CVoid%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Deletes a user account from the specified compute node. You can delete a user account to a node only when it is in the idle or running state.</p>

    <p></p>
  syntax: public ServiceFuture<Void> deleteUserAsync(String poolId, String nodeId, String userName, ComputeNodeDeleteUserOptions computeNodeDeleteUserOptions, final ServiceCallback<Void> serviceCallback)
  uid: com.microsoft.azure.batch.protocol.ComputeNodes.deleteUserAsync(String,String,String,ComputeNodeDeleteUserOptions,final ServiceCallback<Void>)
- fullName: com.microsoft.azure.batch.protocol.ComputeNodes.deleteUserAsync(String poolId, String nodeId, String userName, final ServiceCallback<Void> serviceCallback)
  name: deleteUserAsync(String poolId, String nodeId, String userName, final ServiceCallback<Void> serviceCallback)
  nameWithType: ComputeNodes.deleteUserAsync(String poolId, String nodeId, String userName, final ServiceCallback<Void> serviceCallback)
  parameters:
  - description: <p>The ID of the pool that contains the compute node. </p>
    name: poolId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The ID of the machine on which you want to delete a user account. </p>
    name: nodeId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the user account to delete. </p>
    name: userName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    name: serviceCallback
    type: <xref href="final+ServiceCallback%3CVoid%3E?alt=final+ServiceCallback%3CVoid%3E&text=final+ServiceCallback%3CVoid%3E" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
    type: <xref href="ServiceFuture%3CVoid%3E?alt=ServiceFuture%3CVoid%3E&text=ServiceFuture%3CVoid%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Deletes a user account from the specified compute node. You can delete a user account to a node only when it is in the idle or running state.</p>

    <p></p>
  syntax: public ServiceFuture<Void> deleteUserAsync(String poolId, String nodeId, String userName, final ServiceCallback<Void> serviceCallback)
  uid: com.microsoft.azure.batch.protocol.ComputeNodes.deleteUserAsync(String,String,String,final ServiceCallback<Void>)
uid: com.microsoft.azure.batch.protocol.ComputeNodes.deleteUserAsync*
fullName: com.microsoft.azure.batch.protocol.ComputeNodes.deleteUserAsync
name: deleteUserAsync(String poolId, String nodeId, String userName)
package: com.microsoft.azure.batch.protocol
metadata: {}
