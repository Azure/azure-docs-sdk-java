### YamlMime:JavaType
constructors:
- com.microsoft.azure.sdk.iot.provisioning.service.Query.Query(ContractApiHttp,String,QuerySpecification,int)
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
- <xref href="Iterator" data-throw-if-not-resolved="False"/>
methods:
- com.microsoft.azure.sdk.iot.provisioning.service.Query.getPageSize()
- com.microsoft.azure.sdk.iot.provisioning.service.Query.hasNext()
- com.microsoft.azure.sdk.iot.provisioning.service.Query.next()
- com.microsoft.azure.sdk.iot.provisioning.service.Query.next(String)
- com.microsoft.azure.sdk.iot.provisioning.service.Query.setPageSize(int)
nameWithType: Query
syntax: public class Query
type: class
uid: com.microsoft.azure.sdk.iot.provisioning.service.Query
fullName: com.microsoft.azure.sdk.iot.provisioning.service.Query
name: Query
package: com.microsoft.azure.sdk.iot.provisioning.service
summary: >-
  <p>The query iterator.</p>

  <p>The<code>Query 

      </code> iterator is the result of the query factory for <table rows="3" cols="2"><caption>Query factories</caption><row><entry thead="no"><p><b>IndividualEnrollment:</b></p></entry><entry thead="no"><p><xref uid="com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.createIndividualEnrollmentQuery(QuerySpecification,int)" data-throw-if-not-resolved="false">ProvisioningServiceClient#createIndividualEnrollmentQuery(QuerySpecification, int)</xref></p></entry></row><row><entry thead="no"><p><b>EnrollmentGroup:</b></p></entry><entry thead="no"><p><xref uid="com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.createEnrollmentGroupQuery(QuerySpecification,int)" data-throw-if-not-resolved="false">ProvisioningServiceClient#createEnrollmentGroupQuery(QuerySpecification, int)</xref></p></entry></row><row><entry thead="no"><p><b>RegistrationStatus:</b></p></entry><entry thead="no"><p><xref uid="com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.createEnrollmentGroupRegistrationStatusQuery(QuerySpecification,String,int)" data-throw-if-not-resolved="false">ProvisioningServiceClient#createEnrollmentGroupRegistrationStatusQuery(QuerySpecification, String, int)</xref></p></entry></row></table></p>

  <p>On all cases, the <b>QuerySpecification</b> contains a SQL query that must follow the <a href="https://docs.microsoft.com/en-us/azure/iot-hub/iot-hub-devguide-query-language">Query Language</a> for the Device Provisioning Service.</p>

  <p>Optionally, an<code>Integer 

      </code> with the <b>pageSize</b>, can determine the maximum number of the items in the <xref uid="" data-throw-if-not-resolved="false">QueryResult</xref> returned by the <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.Query.next()" data-throw-if-not-resolved="false">next()</xref>. It must be any positive integer, and if it contains 0, the Device Provisioning Service will ignore it and use a standard page size.</p>

  <p>You can use this Object as a standard Iterator, just using the <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.Query.hasNext()" data-throw-if-not-resolved="false">hasNext()</xref> and <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.Query.next()" data-throw-if-not-resolved="false">next()</xref> in a <code>while 

      </code> loop, up to the point where the <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.Query.hasNext()" data-throw-if-not-resolved="false">hasNext()</xref> return<code>false 

      </code> . But, keep in mind that the <xref uid="" data-throw-if-not-resolved="false">QueryResult</xref> can contain a empty list, even if the <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.Query.hasNext()" data-throw-if-not-resolved="false">hasNext()</xref> returned<code>true 

      </code> . For example, image that you have 10 IndividualEnrollment in the Device Provisioning Service and you created new query with the<code>pageSize 

      </code> equals 5. The first<code>hasNext() 

      </code> will return<code>true 

      </code> , and the first<code>next() 

      </code> will return a<code>QueryResult 

      </code> with 5 items. After that you call the<code>hasNext 

      </code> , which will returns<code>true 

      </code> . Now, before you get the next page, somebody delete all the IndividualEnrollment, What happened, when you call the<code>next() 

      </code> , it will return a valid<code>QueryResult 

      </code> , but the <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs.QueryResult.getItems()" data-throw-if-not-resolved="false">QueryResult#getItems()</xref> will return a empty list.</p>

  <p>You can also store a query context (QuerySpecification + ContinuationToken) and restart it in the future, from the point where you stopped.</p>

  <p>Besides the Items, the queryResult contains the continuationToken, the <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs.QueryResult.getContinuationToken()" data-throw-if-not-resolved="false">QueryResult#getContinuationToken()</xref> shall return it. In any point in the future, you may recreate the query using the same query factories that you used for the first time, and call <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.Query.next(String)" data-throw-if-not-resolved="false">next(String)</xref> providing the stored continuationToken to get the next page.</p>

  <p></p>
metadata: {}
