### YamlMime:JavaType
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
methods:
- fullName: com.microsoft.azure.management.keyvault.AccessPolicyEntry.applicationId()
  name: applicationId()
  nameWithType: AccessPolicyEntry.applicationId()
  returns:
    description: <p>the applicationId value </p>
    type: <xref href="UUID?alt=UUID&text=UUID" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the applicationId value.</p>

    <p></p>
  syntax: public UUID applicationId()
  uid: com.microsoft.azure.management.keyvault.AccessPolicyEntry.applicationId()
- fullName: com.microsoft.azure.management.keyvault.AccessPolicyEntry.objectId()
  name: objectId()
  nameWithType: AccessPolicyEntry.objectId()
  returns:
    description: <p>the objectId value </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the objectId value.</p>

    <p></p>
  syntax: public String objectId()
  uid: com.microsoft.azure.management.keyvault.AccessPolicyEntry.objectId()
- fullName: com.microsoft.azure.management.keyvault.AccessPolicyEntry.permissions()
  name: permissions()
  nameWithType: AccessPolicyEntry.permissions()
  returns:
    description: <p>the permissions value </p>
    type: <xref href="com.microsoft.azure.management.keyvault.Permissions?alt=com.microsoft.azure.management.keyvault.Permissions&text=Permissions" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the permissions value.</p>

    <p></p>
  syntax: public Permissions permissions()
  uid: com.microsoft.azure.management.keyvault.AccessPolicyEntry.permissions()
- fullName: com.microsoft.azure.management.keyvault.AccessPolicyEntry.tenantId()
  name: tenantId()
  nameWithType: AccessPolicyEntry.tenantId()
  returns:
    description: <p>the tenantId value </p>
    type: <xref href="UUID?alt=UUID&text=UUID" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the tenantId value.</p>

    <p></p>
  syntax: public UUID tenantId()
  uid: com.microsoft.azure.management.keyvault.AccessPolicyEntry.tenantId()
- fullName: com.microsoft.azure.management.keyvault.AccessPolicyEntry.withApplicationId(UUID applicationId)
  name: withApplicationId(UUID applicationId)
  nameWithType: AccessPolicyEntry.withApplicationId(UUID applicationId)
  parameters:
  - description: <p>the applicationId value to set </p>
    name: applicationId
    type: <xref href="UUID?alt=UUID&text=UUID" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the AccessPolicyEntry object itself. </p>
    type: <xref href="com.microsoft.azure.management.keyvault.AccessPolicyEntry?alt=com.microsoft.azure.management.keyvault.AccessPolicyEntry&text=AccessPolicyEntry" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the applicationId value.</p>

    <p></p>
  syntax: public AccessPolicyEntry withApplicationId(UUID applicationId)
  uid: com.microsoft.azure.management.keyvault.AccessPolicyEntry.withApplicationId(UUID)
- fullName: com.microsoft.azure.management.keyvault.AccessPolicyEntry.withObjectId(String objectId)
  name: withObjectId(String objectId)
  nameWithType: AccessPolicyEntry.withObjectId(String objectId)
  parameters:
  - description: <p>the objectId value to set </p>
    name: objectId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the AccessPolicyEntry object itself. </p>
    type: <xref href="com.microsoft.azure.management.keyvault.AccessPolicyEntry?alt=com.microsoft.azure.management.keyvault.AccessPolicyEntry&text=AccessPolicyEntry" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the objectId value.</p>

    <p></p>
  syntax: public AccessPolicyEntry withObjectId(String objectId)
  uid: com.microsoft.azure.management.keyvault.AccessPolicyEntry.withObjectId(String)
- fullName: com.microsoft.azure.management.keyvault.AccessPolicyEntry.withPermissions(Permissions permissions)
  name: withPermissions(Permissions permissions)
  nameWithType: AccessPolicyEntry.withPermissions(Permissions permissions)
  parameters:
  - description: <p>the permissions value to set </p>
    name: permissions
    type: <xref href="com.microsoft.azure.management.keyvault.Permissions?alt=com.microsoft.azure.management.keyvault.Permissions&text=Permissions" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the AccessPolicyEntry object itself. </p>
    type: <xref href="com.microsoft.azure.management.keyvault.AccessPolicyEntry?alt=com.microsoft.azure.management.keyvault.AccessPolicyEntry&text=AccessPolicyEntry" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the permissions value.</p>

    <p></p>
  syntax: public AccessPolicyEntry withPermissions(Permissions permissions)
  uid: com.microsoft.azure.management.keyvault.AccessPolicyEntry.withPermissions(Permissions)
- fullName: com.microsoft.azure.management.keyvault.AccessPolicyEntry.withTenantId(UUID tenantId)
  name: withTenantId(UUID tenantId)
  nameWithType: AccessPolicyEntry.withTenantId(UUID tenantId)
  parameters:
  - description: <p>the tenantId value to set </p>
    name: tenantId
    type: <xref href="UUID?alt=UUID&text=UUID" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the AccessPolicyEntry object itself. </p>
    type: <xref href="com.microsoft.azure.management.keyvault.AccessPolicyEntry?alt=com.microsoft.azure.management.keyvault.AccessPolicyEntry&text=AccessPolicyEntry" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the tenantId value.</p>

    <p></p>
  syntax: public AccessPolicyEntry withTenantId(UUID tenantId)
  uid: com.microsoft.azure.management.keyvault.AccessPolicyEntry.withTenantId(UUID)
nameWithType: AccessPolicyEntry
syntax: public class AccessPolicyEntry
type: class
uid: com.microsoft.azure.management.keyvault.AccessPolicyEntry
fullName: com.microsoft.azure.management.keyvault.AccessPolicyEntry
name: AccessPolicyEntry
package: com.microsoft.azure.management.keyvault
summary: <p>An identity that have access to the key vault. All identities in the array must use the same tenant ID as the key vault's tenant ID. </p>
metadata: {}
