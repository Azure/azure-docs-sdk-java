### YamlMime:JavaType
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
- <xref href="com.microsoft.azure.management.resources.fluentcore.arm.implementation.Manager&lt;ContainerServiceManager, ContainerServiceManagementClientImpl&gt;" data-throw-if-not-resolved="False"/>
methods:
- fullName: com.microsoft.azure.management.containerservice.implementation.ContainerServiceManager.authenticate(AzureTokenCredentials credentials, String subscriptionId)
  name: authenticate(AzureTokenCredentials credentials, String subscriptionId)
  nameWithType: ContainerServiceManager.authenticate(AzureTokenCredentials credentials, String subscriptionId)
  parameters:
  - description: <p>the credentials to use </p>
    name: credentials
    type: <xref href="AzureTokenCredentials?alt=AzureTokenCredentials&text=AzureTokenCredentials" data-throw-if-not-resolved="False"/>
  - description: <p>the subscription </p>
    name: subscriptionId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the ContainerServiceManager </p>
    type: <xref href="com.microsoft.azure.management.containerservice.implementation.ContainerServiceManager?alt=com.microsoft.azure.management.containerservice.implementation.ContainerServiceManager&text=ContainerServiceManager" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Creates an instance of ContainerServiceManager that exposes Azure Container Service resource management API entry points.</p>

    <p></p>
  syntax: public static ContainerServiceManager authenticate(AzureTokenCredentials credentials, String subscriptionId)
  uid: com.microsoft.azure.management.containerservice.implementation.ContainerServiceManager.authenticate(AzureTokenCredentials,String)
- fullName: com.microsoft.azure.management.containerservice.implementation.ContainerServiceManager.authenticate(RestClient restClient, String subscriptionId)
  name: authenticate(RestClient restClient, String subscriptionId)
  nameWithType: ContainerServiceManager.authenticate(RestClient restClient, String subscriptionId)
  parameters:
  - description: <p>the RestClient to be used for API calls. </p>
    name: restClient
    type: <xref href="RestClient?alt=RestClient&text=RestClient" data-throw-if-not-resolved="False"/>
  - description: <p>the subscription </p>
    name: subscriptionId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the ContainerServiceManager </p>
    type: <xref href="com.microsoft.azure.management.containerservice.implementation.ContainerServiceManager?alt=com.microsoft.azure.management.containerservice.implementation.ContainerServiceManager&text=ContainerServiceManager" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Creates an instance of ContainerServiceManager that exposes Service resource management API entry points.</p>

    <p></p>
  syntax: public static ContainerServiceManager authenticate(RestClient restClient, String subscriptionId)
  uid: com.microsoft.azure.management.containerservice.implementation.ContainerServiceManager.authenticate(RestClient,String)
- fullName: com.microsoft.azure.management.containerservice.implementation.ContainerServiceManager.configure()
  name: configure()
  nameWithType: ContainerServiceManager.configure()
  returns:
    description: <p>Configurable </p>
    type: <xref href="com.microsoft.azure.management.containerservice.implementation.ContainerServiceManager.Configurable?alt=com.microsoft.azure.management.containerservice.implementation.ContainerServiceManager.Configurable&text=ContainerServiceManager.Configurable" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get a Configurable instance that can be used to create ContainerServiceManager with optional configuration.</p>

    <p></p>
  syntax: public static Configurable configure()
  uid: com.microsoft.azure.management.containerservice.implementation.ContainerServiceManager.configure()
- fullName: com.microsoft.azure.management.containerservice.implementation.ContainerServiceManager.containerServices()
  name: containerServices()
  nameWithType: ContainerServiceManager.containerServices()
  returns:
    description: <p>the Azure Container services resource management API entry point </p>
    type: <xref href="com.microsoft.azure.management.containerservice.ContainerServices?alt=com.microsoft.azure.management.containerservice.ContainerServices&text=ContainerServices" data-throw-if-not-resolved="False"/>
  syntax: public ContainerServices containerServices()
  uid: com.microsoft.azure.management.containerservice.implementation.ContainerServiceManager.containerServices()
- fullName: com.microsoft.azure.management.containerservice.implementation.ContainerServiceManager.kubernetesClusters()
  name: kubernetesClusters()
  nameWithType: ContainerServiceManager.kubernetesClusters()
  returns:
    description: <p>the Azure Kubernetes cluster resource management API entry point </p>
    type: <xref href="com.microsoft.azure.management.containerservice.KubernetesClusters?alt=com.microsoft.azure.management.containerservice.KubernetesClusters&text=KubernetesClusters" data-throw-if-not-resolved="False"/>
  syntax: public KubernetesClusters kubernetesClusters()
  uid: com.microsoft.azure.management.containerservice.implementation.ContainerServiceManager.kubernetesClusters()
nameWithType: ContainerServiceManager
syntax: public class ContainerServiceManager
type: class
uid: com.microsoft.azure.management.containerservice.implementation.ContainerServiceManager
fullName: com.microsoft.azure.management.containerservice.implementation.ContainerServiceManager
name: ContainerServiceManager
package: com.microsoft.azure.management.containerservice.implementation
summary: <p>Entry point to Azure Container Service management. </p>
metadata: {}
