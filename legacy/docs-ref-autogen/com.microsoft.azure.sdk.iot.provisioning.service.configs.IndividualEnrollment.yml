### YamlMime:JavaType
constructors:
- fullName: com.microsoft.azure.sdk.iot.provisioning.service.configs.IndividualEnrollment.IndividualEnrollment(String json)
  name: IndividualEnrollment(String json)
  nameWithType: IndividualEnrollment.IndividualEnrollment(String json)
  parameters:
  - description: >-
      <p>the<code>String 

          </code> with the JSON received from the provisioning service. </p>
    name: json
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>If the provided JSON is null, empty, or invalid. </p>
  summary: >-
    <p>CONSTRUCTOR</p>

    <p>This constructor creates an instance of the enrollment filling the class with the information provided in the JSON. It is used by the SDK to parse enrollment responses from the provisioning service.</p>

    <p>The following JSON is a sample of the IndividualEnrollment response, received from the provisioning service.</p>

    <p>

      <pre>

        <code>{

           "registrationId":"validRegistrationId",

           "deviceId":"ContosoDevice-123",

           "attestation":{

               "type":"tpm",

               "tpm":{

                   "endorsementKey":"validEndorsementKey"

               }

           },

           "iotHubHostName":"ContosoIoTHub.azure-devices.net",

           "provisioningStatus":"enabled"

           "createdDateTimeUtc": "2017-09-28T16:29:42.3447817Z",

           "lastUpdatedDateTimeUtc": "2017-09-28T16:29:42.3447817Z",

           "etag": "\"00000000-0000-0000-0000-00000000000\""

        }

        </code>

      </pre>

    </p>

    <p></p>
  syntax: public IndividualEnrollment(String json)
  uid: com.microsoft.azure.sdk.iot.provisioning.service.configs.IndividualEnrollment.IndividualEnrollment(String)
- fullName: com.microsoft.azure.sdk.iot.provisioning.service.configs.IndividualEnrollment.IndividualEnrollment(String registrationId, Attestation attestation)
  name: IndividualEnrollment(String registrationId, Attestation attestation)
  nameWithType: IndividualEnrollment.IndividualEnrollment(String registrationId, Attestation attestation)
  parameters:
  - description: >-
      <p>the<code>String 

          </code> with an unique id for this enrollment. </p>
    name: registrationId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs.Attestation" data-throw-if-not-resolved="false" data-raw-source="Attestation"></xref> mechanism that can be <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs.TpmAttestation" data-throw-if-not-resolved="false" data-raw-source="TpmAttestation"></xref>, <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs.X509Attestation" data-throw-if-not-resolved="false" data-raw-source="X509Attestation"></xref> or <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs.SymmetricKeyAttestation" data-throw-if-not-resolved="false" data-raw-source="SymmetricKeyAttestation"></xref>. </p>
    name: attestation
    type: <xref href="com.microsoft.azure.sdk.iot.provisioning.service.configs.Attestation?alt=com.microsoft.azure.sdk.iot.provisioning.service.configs.Attestation&text=Attestation" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>If one of the provided parameters is not correct. </p>
  summary: >-
    <p>CONSTRUCTOR</p>

    <p>This constructor creates an instance of the enrollment with the minimum set of information required by the provisioning service. A valid enrollment must contain the registrationId, which uniquely identify this enrollment, and the attestation mechanism, which can be TPM, X509 or SymmetricKey.</p>

    <p>Other parameters can be added by calling the setters on this class.</p>

    <p>When serialized, an IndividualEnrollment will look like the following example:</p>

    <p>

      <pre>

        <code>{

           "registrationId":"validRegistrationId",

           "attestation":{

               "type":"tpm",

               "tpm":{

                   "endorsementKey":"validEndorsementKey"

               }

           }

        }

        </code>

      </pre>

    </p>

    <p></p>
  syntax: public IndividualEnrollment(String registrationId, Attestation attestation)
  uid: com.microsoft.azure.sdk.iot.provisioning.service.configs.IndividualEnrollment.IndividualEnrollment(String,Attestation)
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
- <xref href="java.io.Serializable" data-throw-if-not-resolved="False"/>
- <xref href="com.microsoft.azure.sdk.iot.provisioning.service.configs.Serializable?alt=com.microsoft.azure.sdk.iot.provisioning.service.configs.Serializable&text=Serializable" data-throw-if-not-resolved="False"/>
inheritedMembers:
- com.microsoft.azure.sdk.iot.provisioning.service.configs.Serializable.toJson()
- com.microsoft.azure.sdk.iot.provisioning.service.configs.Serializable.toString()
methods:
- fullName: com.microsoft.azure.sdk.iot.provisioning.service.configs.IndividualEnrollment.getAttestation()
  name: getAttestation()
  nameWithType: IndividualEnrollment.getAttestation()
  exceptions:
  - type: <xref href="ProvisioningServiceClientException?alt=ProvisioningServiceClientException&text=ProvisioningServiceClientException" data-throw-if-not-resolved="False"/>
    description: <p>If the type of the attestation mechanism is unknown. </p>
  returns:
    description: >-
      <p>The<code>Attestation 

          </code> with the attestation content. It cannot be<code>null 

          </code> . </p>
    type: <xref href="com.microsoft.azure.sdk.iot.provisioning.service.configs.Attestation?alt=com.microsoft.azure.sdk.iot.provisioning.service.configs.Attestation&text=Attestation" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Getter for the attestation mechanism.</p>

    <p></p>
  syntax: public Attestation getAttestation()
  uid: com.microsoft.azure.sdk.iot.provisioning.service.configs.IndividualEnrollment.getAttestation()
- fullName: com.microsoft.azure.sdk.iot.provisioning.service.configs.IndividualEnrollment.setAttestation(Attestation attestation)
  name: setAttestation(Attestation attestation)
  nameWithType: IndividualEnrollment.setAttestation(Attestation attestation)
  parameters:
  - description: <p>the <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs.Attestation" data-throw-if-not-resolved="false" data-raw-source="Attestation"></xref> with the new attestation mechanism. It can be <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs.TpmAttestation" data-throw-if-not-resolved="false" data-raw-source="TpmAttestation"></xref>, <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs.X509Attestation" data-throw-if-not-resolved="false" data-raw-source="X509Attestation"></xref> or <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs.SymmetricKeyAttestation" data-throw-if-not-resolved="false" data-raw-source="SymmetricKeyAttestation"></xref>. </p>
    name: attestation
    type: <xref href="com.microsoft.azure.sdk.iot.provisioning.service.configs.Attestation?alt=com.microsoft.azure.sdk.iot.provisioning.service.configs.Attestation&text=Attestation" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: >-
      <p>If the provided attestation mechanism is<code>null 

          </code> . </p>
  summary: >-
    <p>Setter for the attestation.</p>

    <p>Attestation mechanism is a mandatory parameter that provides the mechanism type and the necessary keys/certificates</p>

    <p></p>
  syntax: public void setAttestation(Attestation attestation)
  uid: com.microsoft.azure.sdk.iot.provisioning.service.configs.IndividualEnrollment.setAttestation(Attestation)
- fullName: com.microsoft.azure.sdk.iot.provisioning.service.configs.IndividualEnrollment.setAttestation(AttestationMechanism attestationMechanism)
  name: setAttestation(AttestationMechanism attestationMechanism)
  nameWithType: IndividualEnrollment.setAttestation(AttestationMechanism attestationMechanism)
  parameters:
  - description: >-
      <p>the<code>AttestationMechanism 

          </code> with the new attestation mechanism. It can be `tpm`, `x509` or `SymmetricKey`. </p>
    name: attestationMechanism
    type: <xref href="com.microsoft.azure.sdk.iot.provisioning.service.configs.AttestationMechanism?alt=com.microsoft.azure.sdk.iot.provisioning.service.configs.AttestationMechanism&text=AttestationMechanism" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: >-
      <p>If the provided attestation mechanism is<code>null 

          </code> or invalid. </p>
  returns:
    type: <xref href="final+void?alt=final+void&text=final+void" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Setter for the attestation.</p>

    <p>Attestation mechanism is a mandatory parameter that provides the mechanism type and the necessary keys/certificates</p>

    <p></p>
  syntax: protected final void setAttestation(AttestationMechanism attestationMechanism)
  uid: com.microsoft.azure.sdk.iot.provisioning.service.configs.IndividualEnrollment.setAttestation(AttestationMechanism)
- fullName: com.microsoft.azure.sdk.iot.provisioning.service.configs.IndividualEnrollment.toJsonElement()
  name: toJsonElement()
  nameWithType: IndividualEnrollment.toJsonElement()
  returns:
    description: >-
      <p>The<code>JsonElement 

          </code> with the content of this class. </p>
    type: <xref href="JsonElement?alt=JsonElement&text=JsonElement" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Serializer</p>

    <p>Creates a<code>JsonElement 

        </code> , which the content represents the information in this class and its subclasses in a JSON format.</p>

    <p>This is useful if the caller will integrate this JSON with JSON from other classes to generate a consolidated JSON.</p>

    <p></p>
  syntax: public JsonElement toJsonElement()
  uid: com.microsoft.azure.sdk.iot.provisioning.service.configs.IndividualEnrollment.toJsonElement()
nameWithType: IndividualEnrollment
syntax: public class IndividualEnrollment extends Serializable
type: class
uid: com.microsoft.azure.sdk.iot.provisioning.service.configs.IndividualEnrollment
fullName: com.microsoft.azure.sdk.iot.provisioning.service.configs.IndividualEnrollment
name: IndividualEnrollment
package: com.microsoft.azure.sdk.iot.provisioning.service.configs
summary: >-
  <p>Representation of a single Device Provisioning Service enrollment with a JSON serializer and deserializer.</p>

  <p>This object is used to send IndividualEnrollment information to the provisioning service, or receive IndividualEnrollment information from the provisioning service.</p>

  <p>To create or update an IndividualEnrollment on the provisioning service you should fill this object and call the public API <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.createOrUpdateIndividualEnrollment(IndividualEnrollment)" data-throw-if-not-resolved="false" data-raw-source="ProvisioningServiceClient#createOrUpdateIndividualEnrollment(IndividualEnrollment)"></xref>. The minimum information required by the provisioning service is the<code>registrationId 

      </code> and the <code>attestation 

      </code> .</p>

  <p>A new device can be provisioned by three attestation mechanisms, Trust Platform Module (see <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs.TpmAttestation" data-throw-if-not-resolved="false" data-raw-source="TpmAttestation"></xref>), X509 (see <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs.X509Attestation" data-throw-if-not-resolved="false" data-raw-source="X509Attestation"></xref>) or <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs.SymmetricKeyAttestation" data-throw-if-not-resolved="false" data-raw-source="SymmetricKeyAttestation"></xref> mechanism. The definition of each one you should use depending on the physical authentication hardware that the device contains.</p>

  <p>The content of this class will be serialized in a JSON format and sent as a body of the rest API to the provisioning service.</p>

  <p>When serialized, an IndividualEnrollment will look like the following example:</p>

  <p>

    <pre>

      <code>{

         "registrationId":"validRegistrationId",

         "deviceId":"ContosoDevice-123",

         "attestation":{

             "type":"tpm",

             "tpm":{

                 "endorsementKey":"validEndorsementKey"

             }

         },

         "iotHubHostName":"ContosoIoTHub.azure-devices.net",

         "provisioningStatus":"enabled"

      }

      </code>

    </pre>

  </p>

  <p>The content of this class can be filled by a JSON, received from the provisioning service, as result of a IndividualEnrollment operation like create, update, or query enrollment.</p>

  <p>The following JSON is a sample or the IndividualEnrollment response, received from the provisioning service.</p>

  <p>

    <pre>

      <code>{

         "registrationId":"validRegistrationId",

         "deviceId":"ContosoDevice-123",

         "attestation":{

             "type":"tpm",

             "tpm":{

                 "endorsementKey":"validEndorsementKey"

             }

         },

         "iotHubHostName":"ContosoIoTHub.azure-devices.net",

         "provisioningStatus":"enabled"

         "createdDateTimeUtc": "2017-09-28T16:29:42.3447817Z",

         "lastUpdatedDateTimeUtc": "2017-09-28T16:29:42.3447817Z",

         "etag": "\"00000000-0000-0000-0000-00000000000\""

      }

      </code>

    </pre>

  </p>

  <p></p>
metadata: {}
