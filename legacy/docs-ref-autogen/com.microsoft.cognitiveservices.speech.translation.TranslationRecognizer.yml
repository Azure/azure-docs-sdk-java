### YamlMime:JavaType
constructors:
- fullName: com.microsoft.cognitiveservices.speech.translation.TranslationRecognizer.TranslationRecognizer(com.microsoft.cognitiveservices.speech.translation.SpeechTranslationConfig stc)
  name: TranslationRecognizer(com.microsoft.cognitiveservices.speech.translation.SpeechTranslationConfig stc)
  nameWithType: TranslationRecognizer.TranslationRecognizer(com.microsoft.cognitiveservices.speech.translation.SpeechTranslationConfig stc)
  parameters:
  - description: <p>speech translation config. </p>
    name: stc
    type: <xref href="com.microsoft.cognitiveservices.speech.translation.SpeechTranslationConfig?alt=com.microsoft.cognitiveservices.speech.translation.SpeechTranslationConfig&text=SpeechTranslationConfig" data-throw-if-not-resolved="False"/>
  summary: <p>Constructs an instance of a translation recognizer. </p>
  syntax: public TranslationRecognizer(com.microsoft.cognitiveservices.speech.translation.SpeechTranslationConfig stc)
  uid: com.microsoft.cognitiveservices.speech.translation.TranslationRecognizer.TranslationRecognizer(com.microsoft.cognitiveservices.speech.translation.SpeechTranslationConfig)
- fullName: com.microsoft.cognitiveservices.speech.translation.TranslationRecognizer.TranslationRecognizer(com.microsoft.cognitiveservices.speech.translation.SpeechTranslationConfig stc, AudioConfig audioConfig)
  name: TranslationRecognizer(com.microsoft.cognitiveservices.speech.translation.SpeechTranslationConfig stc, AudioConfig audioConfig)
  nameWithType: TranslationRecognizer.TranslationRecognizer(com.microsoft.cognitiveservices.speech.translation.SpeechTranslationConfig stc, AudioConfig audioConfig)
  parameters:
  - description: <p>speech translation config. </p>
    name: stc
    type: <xref href="com.microsoft.cognitiveservices.speech.translation.SpeechTranslationConfig?alt=com.microsoft.cognitiveservices.speech.translation.SpeechTranslationConfig&text=SpeechTranslationConfig" data-throw-if-not-resolved="False"/>
  - description: <p>audio config. </p>
    name: audioConfig
    type: <xref href="com.microsoft.cognitiveservices.speech.audio.AudioConfig?alt=com.microsoft.cognitiveservices.speech.audio.AudioConfig&text=AudioConfig" data-throw-if-not-resolved="False"/>
  summary: <p>Constructs an instance of a translation recognizer. </p>
  syntax: public TranslationRecognizer(com.microsoft.cognitiveservices.speech.translation.SpeechTranslationConfig stc, AudioConfig audioConfig)
  uid: com.microsoft.cognitiveservices.speech.translation.TranslationRecognizer.TranslationRecognizer(com.microsoft.cognitiveservices.speech.translation.SpeechTranslationConfig,AudioConfig)
fields:
- field:
    type: final EventHandlerImpl&lt;<xref href="com.microsoft.cognitiveservices.speech.translation.TranslationRecognitionCanceledEventArgs?alt=com.microsoft.cognitiveservices.speech.translation.TranslationRecognitionCanceledEventArgs&text=TranslationRecognitionCanceledEventArgs" data-throw-if-not-resolved="False"/>&gt;
  fullName: com.microsoft.cognitiveservices.speech.translation.TranslationRecognizer.canceled
  name: canceled
  nameWithType: TranslationRecognizer.canceled
  summary: <p>The event canceled signals that the recognition/translation was canceled. </p>
  syntax: public final EventHandlerImpl<TranslationRecognitionCanceledEventArgs> canceled= new EventHandlerImpl<TranslationRecognitionCanceledEventArgs>(eventCounter)
  uid: com.microsoft.cognitiveservices.speech.translation.TranslationRecognizer.canceled
- field:
    type: final EventHandlerImpl&lt;<xref href="com.microsoft.cognitiveservices.speech.translation.TranslationRecognitionEventArgs?alt=com.microsoft.cognitiveservices.speech.translation.TranslationRecognitionEventArgs&text=TranslationRecognitionEventArgs" data-throw-if-not-resolved="False"/>&gt;
  fullName: com.microsoft.cognitiveservices.speech.translation.TranslationRecognizer.recognized
  name: recognized
  nameWithType: TranslationRecognizer.recognized
  summary: <p>The event recognized signals that a final recognition result is received. </p>
  syntax: public final EventHandlerImpl<TranslationRecognitionEventArgs> recognized= new EventHandlerImpl<TranslationRecognitionEventArgs>(eventCounter)
  uid: com.microsoft.cognitiveservices.speech.translation.TranslationRecognizer.recognized
- field:
    type: final EventHandlerImpl&lt;<xref href="com.microsoft.cognitiveservices.speech.translation.TranslationRecognitionEventArgs?alt=com.microsoft.cognitiveservices.speech.translation.TranslationRecognitionEventArgs&text=TranslationRecognitionEventArgs" data-throw-if-not-resolved="False"/>&gt;
  fullName: com.microsoft.cognitiveservices.speech.translation.TranslationRecognizer.recognizing
  name: recognizing
  nameWithType: TranslationRecognizer.recognizing
  summary: <p>The event recognizing signals that an intermediate recognition result is received. </p>
  syntax: public final EventHandlerImpl<TranslationRecognitionEventArgs> recognizing= new EventHandlerImpl<TranslationRecognitionEventArgs>(eventCounter)
  uid: com.microsoft.cognitiveservices.speech.translation.TranslationRecognizer.recognizing
- field:
    type: final EventHandlerImpl&lt;<xref href="com.microsoft.cognitiveservices.speech.translation.TranslationSynthesisEventArgs?alt=com.microsoft.cognitiveservices.speech.translation.TranslationSynthesisEventArgs&text=TranslationSynthesisEventArgs" data-throw-if-not-resolved="False"/>&gt;
  fullName: com.microsoft.cognitiveservices.speech.translation.TranslationRecognizer.synthesizing
  name: synthesizing
  nameWithType: TranslationRecognizer.synthesizing
  summary: <p>The event synthesizing signals that a translation synthesis result is received. </p>
  syntax: public final EventHandlerImpl<TranslationSynthesisEventArgs> synthesizing= new EventHandlerImpl<TranslationSynthesisEventArgs>(eventCounter)
  uid: com.microsoft.cognitiveservices.speech.translation.TranslationRecognizer.synthesizing
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
- <xref href="AutoCloseable" data-throw-if-not-resolved="False"/>
- <xref href="com.microsoft.cognitiveservices.speech.Recognizer?alt=com.microsoft.cognitiveservices.speech.Recognizer&text=Recognizer" data-throw-if-not-resolved="False"/>
inheritedMembers:
- com.microsoft.cognitiveservices.speech.Recognizer.close()
- com.microsoft.cognitiveservices.speech.Recognizer.sessionStarted
- com.microsoft.cognitiveservices.speech.Recognizer.sessionStopped
- com.microsoft.cognitiveservices.speech.Recognizer.speechEndDetected
- com.microsoft.cognitiveservices.speech.Recognizer.speechStartDetected
methods:
- fullName: com.microsoft.cognitiveservices.speech.translation.TranslationRecognizer.addTargetLanguage(String value)
  name: addTargetLanguage(String value)
  nameWithType: TranslationRecognizer.addTargetLanguage(String value)
  parameters:
  - description: <p>the language identifier in BCP-47 format. </p>
    name: value
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: <p>Adds a target language for translation. Added in version 1.7.0. </p>
  syntax: public void addTargetLanguage(String value)
  uid: com.microsoft.cognitiveservices.speech.translation.TranslationRecognizer.addTargetLanguage(String)
- fullName: com.microsoft.cognitiveservices.speech.translation.TranslationRecognizer.getAuthorizationToken()
  name: getAuthorizationToken()
  nameWithType: TranslationRecognizer.getAuthorizationToken()
  returns:
    description: <p>Authorization token. </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: <p>Gets the authorization token used to communicate with the service. </p>
  syntax: public String getAuthorizationToken()
  uid: com.microsoft.cognitiveservices.speech.translation.TranslationRecognizer.getAuthorizationToken()
- fullName: com.microsoft.cognitiveservices.speech.translation.TranslationRecognizer.getProperties()
  name: getProperties()
  nameWithType: TranslationRecognizer.getProperties()
  returns:
    description: <p>The collection of properties and their values defined for this TranslationRecognizer. </p>
    type: <xref href="com.microsoft.cognitiveservices.speech.PropertyCollection?alt=com.microsoft.cognitiveservices.speech.PropertyCollection&text=PropertyCollection" data-throw-if-not-resolved="False"/>
  summary: <p>The collection of properties and their values defined for this TranslationRecognizer. </p>
  syntax: public PropertyCollection getProperties()
  uid: com.microsoft.cognitiveservices.speech.translation.TranslationRecognizer.getProperties()
- fullName: com.microsoft.cognitiveservices.speech.translation.TranslationRecognizer.getSpeechRecognitionLanguage()
  name: getSpeechRecognitionLanguage()
  nameWithType: TranslationRecognizer.getSpeechRecognitionLanguage()
  returns:
    description: <p>The spoken language of recognition. </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: <p>Gets the spoken language of recognition. </p>
  syntax: public String getSpeechRecognitionLanguage()
  uid: com.microsoft.cognitiveservices.speech.translation.TranslationRecognizer.getSpeechRecognitionLanguage()
- fullName: com.microsoft.cognitiveservices.speech.translation.TranslationRecognizer.getTargetLanguages()
  name: getTargetLanguages()
  nameWithType: TranslationRecognizer.getTargetLanguages()
  returns:
    description: <p>the list of target languages. </p>
    type: <xref href="ArrayList%3CString%3E?alt=ArrayList%3CString%3E&text=ArrayList%3CString%3E" data-throw-if-not-resolved="False"/>
  summary: <p>Gets all target languages that have been configured for translation. </p>
  syntax: public ArrayList<String> getTargetLanguages()
  uid: com.microsoft.cognitiveservices.speech.translation.TranslationRecognizer.getTargetLanguages()
- fullName: com.microsoft.cognitiveservices.speech.translation.TranslationRecognizer.getVoiceName()
  name: getVoiceName()
  nameWithType: TranslationRecognizer.getVoiceName()
  returns:
    description: <p>the name of output voice. </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: <p>Gets the name of output voice. </p>
  syntax: public String getVoiceName()
  uid: com.microsoft.cognitiveservices.speech.translation.TranslationRecognizer.getVoiceName()
- fullName: com.microsoft.cognitiveservices.speech.translation.TranslationRecognizer.recognizeOnceAsync()
  name: recognizeOnceAsync()
  nameWithType: TranslationRecognizer.recognizeOnceAsync()
  returns:
    description: <p>A task representing the recognition operation. The task returns a value of TranslationRecognitionResult. </p>
    type: Future&lt;<xref href="com.microsoft.cognitiveservices.speech.translation.TranslationRecognitionResult?alt=com.microsoft.cognitiveservices.speech.translation.TranslationRecognitionResult&text=TranslationRecognitionResult" data-throw-if-not-resolved="False"/>&gt;
  summary: '<p>Starts recognition and translation, and stops after the first utterance is recognized. The task returns the translation text as result. Note: RecognizeOnceAsync() returns when the first utterance has been recognized, so it is suitableonly for single shot recognition like command or query. For long-running recognition, use StartContinuousRecognitionAsync() instead. </p>'
  syntax: public Future<TranslationRecognitionResult> recognizeOnceAsync()
  uid: com.microsoft.cognitiveservices.speech.translation.TranslationRecognizer.recognizeOnceAsync()
- fullName: com.microsoft.cognitiveservices.speech.translation.TranslationRecognizer.removeTargetLanguage(String value)
  name: removeTargetLanguage(String value)
  nameWithType: TranslationRecognizer.removeTargetLanguage(String value)
  parameters:
  - description: <p>the language identifier in BCP-47 format. </p>
    name: value
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: <p>Removes a target language for translation. Added in version 1.7.0. </p>
  syntax: public void removeTargetLanguage(String value)
  uid: com.microsoft.cognitiveservices.speech.translation.TranslationRecognizer.removeTargetLanguage(String)
- fullName: com.microsoft.cognitiveservices.speech.translation.TranslationRecognizer.setAuthorizationToken(String token)
  name: setAuthorizationToken(String token)
  nameWithType: TranslationRecognizer.setAuthorizationToken(String token)
  parameters:
  - description: <p>Authorization token. </p>
    name: token
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: '<p>Sets the authorization token used to communicate with the service. Note: The caller needs to ensure that the authorization token is valid. Before the authorization token expires, the caller needs to refresh it by calling this setter with a new valid token. Otherwise, the recognizer will encounter errors during recognition. </p>'
  syntax: public void setAuthorizationToken(String token)
  uid: com.microsoft.cognitiveservices.speech.translation.TranslationRecognizer.setAuthorizationToken(String)
- fullName: com.microsoft.cognitiveservices.speech.translation.TranslationRecognizer.startContinuousRecognitionAsync()
  name: startContinuousRecognitionAsync()
  nameWithType: TranslationRecognizer.startContinuousRecognitionAsync()
  returns:
    description: <p>A task representing the asynchronous operation that starts the recognition. </p>
    type: <xref href="Future%3CVoid%3E?alt=Future%3CVoid%3E&text=Future%3CVoid%3E" data-throw-if-not-resolved="False"/>
  summary: <p>Starts recognition and translation on a continuous audio stream, until StopContinuousRecognitionAsync() is called. User must subscribe to events to receive translation results. </p>
  syntax: public Future<Void> startContinuousRecognitionAsync()
  uid: com.microsoft.cognitiveservices.speech.translation.TranslationRecognizer.startContinuousRecognitionAsync()
- fullName: com.microsoft.cognitiveservices.speech.translation.TranslationRecognizer.stopContinuousRecognitionAsync()
  name: stopContinuousRecognitionAsync()
  nameWithType: TranslationRecognizer.stopContinuousRecognitionAsync()
  returns:
    description: <p>A future that will complete when input processing has been stopped. Result generation, if applicable for the input provided, may happen after this task completes and should be handled with the appropriate event. </p>
    type: <xref href="Future%3CVoid%3E?alt=Future%3CVoid%3E&text=Future%3CVoid%3E" data-throw-if-not-resolved="False"/>
  summary: <p>Stops a running recognition operation as soon as possible and immediately requests a result based on the the input that has been processed so far. This works for all recognition operations, not just continuous ones, and facilitates the use of push-to-talk or "finish now" buttons for manual audio endpointing. </p>
  syntax: public Future<Void> stopContinuousRecognitionAsync()
  uid: com.microsoft.cognitiveservices.speech.translation.TranslationRecognizer.stopContinuousRecognitionAsync()
nameWithType: TranslationRecognizer
syntax: public class TranslationRecognizer extends Recognizer
type: class
uid: com.microsoft.cognitiveservices.speech.translation.TranslationRecognizer
fullName: com.microsoft.cognitiveservices.speech.translation.TranslationRecognizer
name: TranslationRecognizer
package: com.microsoft.cognitiveservices.speech.translation
summary: '<p>Performs translation on the speech input. Note: close() must be called in order to release underlying resources held by the object. </p>'
metadata: {}
