### YamlMime:JavaMember
nameWithType: KubernetesClusterAgentPool.DefinitionStages.WithOSType<ParentT>.withOSType
type: method
members:
- fullName: com.microsoft.azure.management.containerservice.KubernetesClusterAgentPool.DefinitionStages.WithOSType<ParentT>.withOSType(OSType osType)
  name: withOSType(OSType osType)
  nameWithType: KubernetesClusterAgentPool.DefinitionStages.WithOSType<ParentT>.withOSType(OSType osType)
  parameters:
  - description: <p>OS type to be used for each virtual machine in the agent pool </p>
    name: osType
    type: <xref href="com.microsoft.azure.management.containerservice.OSType?alt=com.microsoft.azure.management.containerservice.OSType&text=OSType" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the next stage of the definition </p>
    type: <xref href="com.microsoft.azure.management.containerservice.KubernetesClusterAgentPool.DefinitionStages.WithAttach?alt=com.microsoft.azure.management.containerservice.KubernetesClusterAgentPool.DefinitionStages.WithAttach&text=KubernetesClusterAgentPool.DefinitionStages.WithAttach" data-throw-if-not-resolved="False"/>&lt;ParentT&gt;
  summary: >-
    <p>OS type to be used for each virtual machine in the agent pool.</p>

    <p>Default is Linux. </p>
  syntax: public WithAttach<ParentT> withOSType(OSType osType)
  uid: com.microsoft.azure.management.containerservice.KubernetesClusterAgentPool.DefinitionStages.WithOSType.withOSType(OSType)
uid: com.microsoft.azure.management.containerservice.KubernetesClusterAgentPool.DefinitionStages.WithOSType.withOSType*
fullName: com.microsoft.azure.management.containerservice.KubernetesClusterAgentPool.DefinitionStages.WithOSType<ParentT>.withOSType(OSType osType)
name: withOSType(OSType osType)
package: com.microsoft.azure.management.containerservice
metadata: {}
