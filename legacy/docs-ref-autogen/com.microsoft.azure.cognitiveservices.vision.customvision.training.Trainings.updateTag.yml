### YamlMime:JavaMember
nameWithType: Trainings.updateTag
type: method
members:
- fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.updateTag(UUID projectId, UUID tagId, Tag updatedTag)
  name: updateTag(UUID projectId, UUID tagId, Tag updatedTag)
  nameWithType: Trainings.updateTag(UUID projectId, UUID tagId, Tag updatedTag)
  parameters:
  - description: <p>The project id. </p>
    name: projectId
    type: <xref href="UUID?alt=UUID&text=UUID" data-throw-if-not-resolved="False"/>
  - description: <p>The id of the target tag. </p>
    name: tagId
    type: <xref href="UUID?alt=UUID&text=UUID" data-throw-if-not-resolved="False"/>
  - description: <p>The updated tag model. </p>
    name: updatedTag
    type: <xref href="com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Tag?alt=com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Tag&text=Tag" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="CustomVisionErrorException?alt=CustomVisionErrorException&text=CustomVisionErrorException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  returns:
    description: <p>the Tag object if successful. </p>
    type: <xref href="com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Tag?alt=com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Tag&text=Tag" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Update a tag.</p>

    <p></p>
  syntax: public Tag updateTag(UUID projectId, UUID tagId, Tag updatedTag)
  uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.updateTag(UUID,UUID,Tag)
uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.updateTag*
fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.updateTag(UUID projectId, UUID tagId, Tag updatedTag)
name: updateTag(UUID projectId, UUID tagId, Tag updatedTag)
package: com.microsoft.azure.cognitiveservices.vision.customvision.training
metadata: {}
