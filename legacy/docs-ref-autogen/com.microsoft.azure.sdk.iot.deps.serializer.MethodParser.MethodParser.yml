### YamlMime:JavaMember
nameWithType: MethodParser.MethodParser
type: constructor
members:
- fullName: com.microsoft.azure.sdk.iot.deps.serializer.MethodParser.MethodParser()
  name: MethodParser()
  nameWithType: MethodParser.MethodParser()
  summary: <p>CONSTRUCTOR Create a MethodParser instance with provided values. </p>
  syntax: public MethodParser()
  uid: com.microsoft.azure.sdk.iot.deps.serializer.MethodParser.MethodParser()
- fullName: com.microsoft.azure.sdk.iot.deps.serializer.MethodParser.MethodParser(Object payload)
  name: MethodParser(Object payload)
  nameWithType: MethodParser.MethodParser(Object payload)
  parameters:
  - description: >-
      <p>- Object that contains the payload defined by the user. It can be<code>null 

          </code> . </p>
    name: payload
    type: <xref href="Object?alt=Object&text=Object" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>CONSTRUCTOR Create a MethodParser instance with provided values.</p>

    <p></p>
  syntax: public MethodParser(Object payload)
  uid: com.microsoft.azure.sdk.iot.deps.serializer.MethodParser.MethodParser(Object)
- fullName: com.microsoft.azure.sdk.iot.deps.serializer.MethodParser.MethodParser(String name, Long responseTimeout, Long connectTimeout, Object payload)
  name: MethodParser(String name, Long responseTimeout, Long connectTimeout, Object payload)
  nameWithType: MethodParser.MethodParser(String name, Long responseTimeout, Long connectTimeout, Object payload)
  parameters:
  - description: <p>- method name [required]. </p>
    name: name
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: >-
      <p>- maximum interval of time, in seconds, that the Direct Method will wait for answer. It can be<code>null 

          </code> . </p>
    name: responseTimeout
    type: <xref href="Long?alt=Long&text=Long" data-throw-if-not-resolved="False"/>
  - description: >-
      <p>- maximum interval of time, in seconds, that the Direct Method will wait for the connection. It can be<code>null 

          </code> . </p>
    name: connectTimeout
    type: <xref href="Long?alt=Long&text=Long" data-throw-if-not-resolved="False"/>
  - description: >-
      <p>- Object that contains the payload defined by the user. It can be<code>null 

          </code> . </p>
    name: payload
    type: <xref href="Object?alt=Object&text=Object" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>This exception is thrown if the one of the provided information do not fits the requirements. </p>
  summary: >-
    <p>CONSTRUCTOR Create a MethodParser instance with provided values.</p>

    <p></p>
  syntax: public MethodParser(String name, Long responseTimeout, Long connectTimeout, Object payload)
  uid: com.microsoft.azure.sdk.iot.deps.serializer.MethodParser.MethodParser(String,Long,Long,Object)
uid: com.microsoft.azure.sdk.iot.deps.serializer.MethodParser.MethodParser*
fullName: com.microsoft.azure.sdk.iot.deps.serializer.MethodParser.MethodParser
name: MethodParser
package: com.microsoft.azure.sdk.iot.deps.serializer
metadata: {}
