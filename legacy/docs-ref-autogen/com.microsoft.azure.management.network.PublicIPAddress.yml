### YamlMime:JavaType
inheritedMembers:
- com.microsoft.azure.management.resources.fluentcore.arm.models.HasId.id()
- com.microsoft.azure.management.resources.fluentcore.model.HasInner.inner()
- com.microsoft.azure.management.resources.fluentcore.model.Indexable.key()
- com.microsoft.azure.management.resources.fluentcore.arm.models.HasManager.manager()
- com.microsoft.azure.management.resources.fluentcore.arm.models.HasName.name()
- com.microsoft.azure.management.resources.fluentcore.model.Refreshable.refresh()
- com.microsoft.azure.management.resources.fluentcore.model.Refreshable.refreshAsync()
- com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.region()
- com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.regionName()
- com.microsoft.azure.management.resources.fluentcore.arm.models.HasResourceGroup.resourceGroupName()
- com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.tags()
- com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.type()
- com.microsoft.azure.management.resources.fluentcore.model.Updatable.update()
methods:
- fullName: com.microsoft.azure.management.network.PublicIPAddress.availabilityZones()
  name: availabilityZones()
  nameWithType: PublicIPAddress.availabilityZones()
  returns:
    description: <p>the availability zones assigned to the public IP address </p>
    type: Set&lt;<xref href="com.microsoft.azure.management.resources.fluentcore.arm.AvailabilityZoneId?alt=com.microsoft.azure.management.resources.fluentcore.arm.AvailabilityZoneId&text=AvailabilityZoneId" data-throw-if-not-resolved="False"/>&gt;
  syntax: public Set<AvailabilityZoneId> availabilityZones()
  uid: com.microsoft.azure.management.network.PublicIPAddress.availabilityZones()
- fullName: com.microsoft.azure.management.network.PublicIPAddress.fqdn()
  name: fqdn()
  nameWithType: PublicIPAddress.fqdn()
  returns:
    description: <p>the assigned FQDN (fully qualified domain name) </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  syntax: public String fqdn()
  uid: com.microsoft.azure.management.network.PublicIPAddress.fqdn()
- fullName: com.microsoft.azure.management.network.PublicIPAddress.getAssignedLoadBalancerFrontend()
  name: getAssignedLoadBalancerFrontend()
  nameWithType: PublicIPAddress.getAssignedLoadBalancerFrontend()
  returns:
    description: <p>the load balancer public frontend that this public IP address is assigned to </p>
    type: <xref href="com.microsoft.azure.management.network.LoadBalancerPublicFrontend?alt=com.microsoft.azure.management.network.LoadBalancerPublicFrontend&text=LoadBalancerPublicFrontend" data-throw-if-not-resolved="False"/>
  syntax: public LoadBalancerPublicFrontend getAssignedLoadBalancerFrontend()
  uid: com.microsoft.azure.management.network.PublicIPAddress.getAssignedLoadBalancerFrontend()
- fullName: com.microsoft.azure.management.network.PublicIPAddress.getAssignedNetworkInterfaceIPConfiguration()
  name: getAssignedNetworkInterfaceIPConfiguration()
  nameWithType: PublicIPAddress.getAssignedNetworkInterfaceIPConfiguration()
  returns:
    description: <p>the network interface IP configuration that this public IP address is assigned to </p>
    type: <xref href="com.microsoft.azure.management.network.NicIPConfiguration?alt=com.microsoft.azure.management.network.NicIPConfiguration&text=NicIPConfiguration" data-throw-if-not-resolved="False"/>
  syntax: public NicIPConfiguration getAssignedNetworkInterfaceIPConfiguration()
  uid: com.microsoft.azure.management.network.PublicIPAddress.getAssignedNetworkInterfaceIPConfiguration()
- fullName: com.microsoft.azure.management.network.PublicIPAddress.hasAssignedLoadBalancer()
  name: hasAssignedLoadBalancer()
  nameWithType: PublicIPAddress.hasAssignedLoadBalancer()
  returns:
    description: <p>true if this public IP address is assigned to a load balancer </p>
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False"/>
  syntax: public boolean hasAssignedLoadBalancer()
  uid: com.microsoft.azure.management.network.PublicIPAddress.hasAssignedLoadBalancer()
- fullName: com.microsoft.azure.management.network.PublicIPAddress.hasAssignedNetworkInterface()
  name: hasAssignedNetworkInterface()
  nameWithType: PublicIPAddress.hasAssignedNetworkInterface()
  returns:
    description: <p>true if this public IP address is assigned to a network interface </p>
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False"/>
  syntax: public boolean hasAssignedNetworkInterface()
  uid: com.microsoft.azure.management.network.PublicIPAddress.hasAssignedNetworkInterface()
- fullName: com.microsoft.azure.management.network.PublicIPAddress.idleTimeoutInMinutes()
  name: idleTimeoutInMinutes()
  nameWithType: PublicIPAddress.idleTimeoutInMinutes()
  returns:
    description: <p>the idle connection timeout setting (in minutes) </p>
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  syntax: public int idleTimeoutInMinutes()
  uid: com.microsoft.azure.management.network.PublicIPAddress.idleTimeoutInMinutes()
- fullName: com.microsoft.azure.management.network.PublicIPAddress.ipAddress()
  name: ipAddress()
  nameWithType: PublicIPAddress.ipAddress()
  returns:
    description: <p>the assigned IP address </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  syntax: public String ipAddress()
  uid: com.microsoft.azure.management.network.PublicIPAddress.ipAddress()
- fullName: com.microsoft.azure.management.network.PublicIPAddress.ipAllocationMethod()
  name: ipAllocationMethod()
  nameWithType: PublicIPAddress.ipAllocationMethod()
  returns:
    description: <p>the IP address allocation method (Static/Dynamic) </p>
    type: <xref href="com.microsoft.azure.management.network.IPAllocationMethod?alt=com.microsoft.azure.management.network.IPAllocationMethod&text=IPAllocationMethod" data-throw-if-not-resolved="False"/>
  syntax: public IPAllocationMethod ipAllocationMethod()
  uid: com.microsoft.azure.management.network.PublicIPAddress.ipAllocationMethod()
- fullName: com.microsoft.azure.management.network.PublicIPAddress.leafDomainLabel()
  name: leafDomainLabel()
  nameWithType: PublicIPAddress.leafDomainLabel()
  returns:
    description: <p>the assigned leaf domain label </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  syntax: public String leafDomainLabel()
  uid: com.microsoft.azure.management.network.PublicIPAddress.leafDomainLabel()
- fullName: com.microsoft.azure.management.network.PublicIPAddress.reverseFqdn()
  name: reverseFqdn()
  nameWithType: PublicIPAddress.reverseFqdn()
  returns:
    description: <p>the assigned reverse FQDN, if any </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  syntax: public String reverseFqdn()
  uid: com.microsoft.azure.management.network.PublicIPAddress.reverseFqdn()
- fullName: com.microsoft.azure.management.network.PublicIPAddress.sku()
  name: sku()
  nameWithType: PublicIPAddress.sku()
  returns:
    description: <p>public IP address sku. </p>
    type: <xref href="com.microsoft.azure.management.network.PublicIPSkuType?alt=com.microsoft.azure.management.network.PublicIPSkuType&text=PublicIPSkuType" data-throw-if-not-resolved="False"/>
  syntax: public PublicIPSkuType sku()
  uid: com.microsoft.azure.management.network.PublicIPAddress.sku()
- fullName: com.microsoft.azure.management.network.PublicIPAddress.version()
  name: version()
  nameWithType: PublicIPAddress.version()
  returns:
    description: <p>the IP version of the public IP address </p>
    type: <xref href="com.microsoft.azure.management.network.IPVersion?alt=com.microsoft.azure.management.network.IPVersion&text=IPVersion" data-throw-if-not-resolved="False"/>
  syntax: public IPVersion version()
  uid: com.microsoft.azure.management.network.PublicIPAddress.version()
nameWithType: PublicIPAddress
syntax: public interface PublicIPAddress extends GroupableResource<NetworkManager, PublicIPAddressInner>,Refreshable<PublicIPAddress>,Updatable<PublicIPAddress.Update>
type: interface
uid: com.microsoft.azure.management.network.PublicIPAddress
fullName: com.microsoft.azure.management.network.PublicIPAddress
name: PublicIPAddress
package: com.microsoft.azure.management.network
summary: <p>Public IP address. </p>
metadata: {}
