### YamlMime:JavaMember
nameWithType: TwinParser.updateTwin
type: method
members:
- fullName: com.microsoft.azure.sdk.iot.deps.serializer.TwinParser.updateTwin(Map<String, Object> desiredPropertyMap, Map<String, Object> reportedPropertyMap, Map<String, Object> tagsMap)
  name: updateTwin(Map<String, Object> desiredPropertyMap, Map<String, Object> reportedPropertyMap, Map<String, Object> tagsMap)
  nameWithType: TwinParser.updateTwin(Map<String, Object> desiredPropertyMap, Map<String, Object> reportedPropertyMap, Map<String, Object> tagsMap)
  parameters:
  - description: <p>- Map of `desired` property to change the collection. </p>
    name: desiredPropertyMap
    type: <xref href="Map%3CString%2C+Object%3E?alt=Map%3CString%2C+Object%3E&text=Map%3CString%2C+Object%3E" data-throw-if-not-resolved="False"/>
  - description: <p>- Map of `reported` property to change the collection. </p>
    name: reportedPropertyMap
    type: <xref href="Map%3CString%2C+Object%3E?alt=Map%3CString%2C+Object%3E&text=Map%3CString%2C+Object%3E" data-throw-if-not-resolved="False"/>
  - description: <p>- Map of `tags` to change the collection. </p>
    name: tagsMap
    type: <xref href="Map%3CString%2C+Object%3E?alt=Map%3CString%2C+Object%3E&text=Map%3CString%2C+Object%3E" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>This exception is thrown if the properties or tags in the maps do not fits the requirements. </p>
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
    description: <p>This exception is thrown if tags the is not enabled. </p>
  returns:
    description: <p>Json with added or changed properties and tags </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Update properties and tags information in the collection, and return a string with a json that contains a sub-collection of added properties, properties with new value, added tags, and tags with new values.</p>

    <p></p>
  syntax: public String updateTwin(Map<String, Object> desiredPropertyMap, Map<String, Object> reportedPropertyMap, Map<String, Object> tagsMap)
  uid: com.microsoft.azure.sdk.iot.deps.serializer.TwinParser.updateTwin(Map<String, Object>,Map<String, Object>,Map<String, Object>)
- fullName: com.microsoft.azure.sdk.iot.deps.serializer.TwinParser.updateTwin(String json)
  name: updateTwin(String json)
  nameWithType: TwinParser.updateTwin(String json)
  parameters:
  - description: <p>- Json with property to change the collection. </p>
    name: json
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>This exception is thrown if the Json is not well formed. </p>
  summary: >-
    <p>Update the properties information in the collection, using the information parsed from the provided json. It will fire a callback if any property was added, excluded, or had its value updated.</p>

    <p></p>
  syntax: public void updateTwin(String json)
  uid: com.microsoft.azure.sdk.iot.deps.serializer.TwinParser.updateTwin(String)
uid: com.microsoft.azure.sdk.iot.deps.serializer.TwinParser.updateTwin*
fullName: com.microsoft.azure.sdk.iot.deps.serializer.TwinParser.updateTwin
name: updateTwin(Map<String, Object> desiredPropertyMap, Map<String, Object> reportedPropertyMap, Map<String, Object> tagsMap)
package: com.microsoft.azure.sdk.iot.deps.serializer
metadata: {}
