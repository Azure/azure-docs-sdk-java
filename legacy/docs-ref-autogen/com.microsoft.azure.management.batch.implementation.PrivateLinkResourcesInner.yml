### YamlMime:JavaType
constructors:
- fullName: com.microsoft.azure.management.batch.implementation.PrivateLinkResourcesInner.PrivateLinkResourcesInner(Retrofit retrofit, BatchManagementClientImpl client)
  name: PrivateLinkResourcesInner(Retrofit retrofit, BatchManagementClientImpl client)
  nameWithType: PrivateLinkResourcesInner.PrivateLinkResourcesInner(Retrofit retrofit, BatchManagementClientImpl client)
  parameters:
  - description: <p>the Retrofit instance built from a Retrofit Builder. </p>
    name: retrofit
    type: <xref href="Retrofit?alt=Retrofit&text=Retrofit" data-throw-if-not-resolved="False"/>
  - description: <p>the instance of the service client containing this operation class. </p>
    name: client
    type: <xref href="com.microsoft.azure.management.batch.implementation.BatchManagementClientImpl?alt=com.microsoft.azure.management.batch.implementation.BatchManagementClientImpl&text=BatchManagementClientImpl" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Initializes an instance of PrivateLinkResourcesInner.</p>

    <p></p>
  syntax: public PrivateLinkResourcesInner(Retrofit retrofit, BatchManagementClientImpl client)
  uid: com.microsoft.azure.management.batch.implementation.PrivateLinkResourcesInner.PrivateLinkResourcesInner(Retrofit,BatchManagementClientImpl)
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
methods:
- fullName: com.microsoft.azure.management.batch.implementation.PrivateLinkResourcesInner.get(String resourceGroupName, String accountName, String privateLinkResourceName)
  name: get(String resourceGroupName, String accountName, String privateLinkResourceName)
  nameWithType: PrivateLinkResourcesInner.get(String resourceGroupName, String accountName, String privateLinkResourceName)
  parameters:
  - description: <p>The name of the resource group that contains the Batch account. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the Batch account. </p>
    name: accountName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The private link resource name. This must be unique within the account. </p>
    name: privateLinkResourceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="CloudException?alt=CloudException&text=CloudException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  returns:
    description: <p>the PrivateLinkResourceInner object if successful. </p>
    type: <xref href="com.microsoft.azure.management.batch.implementation.PrivateLinkResourceInner?alt=com.microsoft.azure.management.batch.implementation.PrivateLinkResourceInner&text=PrivateLinkResourceInner" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets information about the specified private link resource.</p>

    <p></p>
  syntax: public PrivateLinkResourceInner get(String resourceGroupName, String accountName, String privateLinkResourceName)
  uid: com.microsoft.azure.management.batch.implementation.PrivateLinkResourcesInner.get(String,String,String)
- fullName: com.microsoft.azure.management.batch.implementation.PrivateLinkResourcesInner.getAsync(String resourceGroupName, String accountName, String privateLinkResourceName)
  name: getAsync(String resourceGroupName, String accountName, String privateLinkResourceName)
  nameWithType: PrivateLinkResourcesInner.getAsync(String resourceGroupName, String accountName, String privateLinkResourceName)
  parameters:
  - description: <p>The name of the resource group that contains the Batch account. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the Batch account. </p>
    name: accountName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The private link resource name. This must be unique within the account. </p>
    name: privateLinkResourceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the PrivateLinkResourceInner object </p>
    type: Observable&lt;<xref href="com.microsoft.azure.management.batch.implementation.PrivateLinkResourceInner?alt=com.microsoft.azure.management.batch.implementation.PrivateLinkResourceInner&text=PrivateLinkResourceInner" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Gets information about the specified private link resource.</p>

    <p></p>
  syntax: public Observable<PrivateLinkResourceInner> getAsync(String resourceGroupName, String accountName, String privateLinkResourceName)
  uid: com.microsoft.azure.management.batch.implementation.PrivateLinkResourcesInner.getAsync(String,String,String)
- fullName: com.microsoft.azure.management.batch.implementation.PrivateLinkResourcesInner.getAsync(String resourceGroupName, String accountName, String privateLinkResourceName, final ServiceCallback<PrivateLinkResourceInner> serviceCallback)
  name: getAsync(String resourceGroupName, String accountName, String privateLinkResourceName, final ServiceCallback<PrivateLinkResourceInner> serviceCallback)
  nameWithType: PrivateLinkResourcesInner.getAsync(String resourceGroupName, String accountName, String privateLinkResourceName, final ServiceCallback<PrivateLinkResourceInner> serviceCallback)
  parameters:
  - description: <p>The name of the resource group that contains the Batch account. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the Batch account. </p>
    name: accountName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The private link resource name. This must be unique within the account. </p>
    name: privateLinkResourceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    name: serviceCallback
    type: final ServiceCallback&lt;<xref href="com.microsoft.azure.management.batch.implementation.PrivateLinkResourceInner?alt=com.microsoft.azure.management.batch.implementation.PrivateLinkResourceInner&text=PrivateLinkResourceInner" data-throw-if-not-resolved="False"/>&gt;
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
    type: ServiceFuture&lt;<xref href="com.microsoft.azure.management.batch.implementation.PrivateLinkResourceInner?alt=com.microsoft.azure.management.batch.implementation.PrivateLinkResourceInner&text=PrivateLinkResourceInner" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Gets information about the specified private link resource.</p>

    <p></p>
  syntax: public ServiceFuture<PrivateLinkResourceInner> getAsync(String resourceGroupName, String accountName, String privateLinkResourceName, final ServiceCallback<PrivateLinkResourceInner> serviceCallback)
  uid: com.microsoft.azure.management.batch.implementation.PrivateLinkResourcesInner.getAsync(String,String,String,final ServiceCallback<PrivateLinkResourceInner>)
- fullName: com.microsoft.azure.management.batch.implementation.PrivateLinkResourcesInner.getWithServiceResponseAsync(String resourceGroupName, String accountName, String privateLinkResourceName)
  name: getWithServiceResponseAsync(String resourceGroupName, String accountName, String privateLinkResourceName)
  nameWithType: PrivateLinkResourcesInner.getWithServiceResponseAsync(String resourceGroupName, String accountName, String privateLinkResourceName)
  parameters:
  - description: <p>The name of the resource group that contains the Batch account. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the Batch account. </p>
    name: accountName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The private link resource name. This must be unique within the account. </p>
    name: privateLinkResourceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the PrivateLinkResourceInner object </p>
    type: Observable&lt;ServiceResponse&lt;<xref href="com.microsoft.azure.management.batch.implementation.PrivateLinkResourceInner?alt=com.microsoft.azure.management.batch.implementation.PrivateLinkResourceInner&text=PrivateLinkResourceInner" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Gets information about the specified private link resource.</p>

    <p></p>
  syntax: public Observable<ServiceResponse<PrivateLinkResourceInner>> getWithServiceResponseAsync(String resourceGroupName, String accountName, String privateLinkResourceName)
  uid: com.microsoft.azure.management.batch.implementation.PrivateLinkResourcesInner.getWithServiceResponseAsync(String,String,String)
- fullName: com.microsoft.azure.management.batch.implementation.PrivateLinkResourcesInner.listByBatchAccount(final String resourceGroupName, final String accountName)
  name: listByBatchAccount(final String resourceGroupName, final String accountName)
  nameWithType: PrivateLinkResourcesInner.listByBatchAccount(final String resourceGroupName, final String accountName)
  parameters:
  - description: <p>The name of the resource group that contains the Batch account. </p>
    name: resourceGroupName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the Batch account. </p>
    name: accountName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="CloudException?alt=CloudException&text=CloudException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  returns:
    description: <p>the PagedList&lt;PrivateLinkResourceInner&gt; object if successful. </p>
    type: PagedList&lt;<xref href="com.microsoft.azure.management.batch.implementation.PrivateLinkResourceInner?alt=com.microsoft.azure.management.batch.implementation.PrivateLinkResourceInner&text=PrivateLinkResourceInner" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Lists all of the private link resources in the specified account.</p>

    <p></p>
  syntax: public PagedList<PrivateLinkResourceInner> listByBatchAccount(final String resourceGroupName, final String accountName)
  uid: com.microsoft.azure.management.batch.implementation.PrivateLinkResourcesInner.listByBatchAccount(final String,final String)
- fullName: com.microsoft.azure.management.batch.implementation.PrivateLinkResourcesInner.listByBatchAccount(final String resourceGroupName, final String accountName, final Integer maxresults)
  name: listByBatchAccount(final String resourceGroupName, final String accountName, final Integer maxresults)
  nameWithType: PrivateLinkResourcesInner.listByBatchAccount(final String resourceGroupName, final String accountName, final Integer maxresults)
  parameters:
  - description: <p>The name of the resource group that contains the Batch account. </p>
    name: resourceGroupName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the Batch account. </p>
    name: accountName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>The maximum number of items to return in the response. </p>
    name: maxresults
    type: <xref href="final+Integer?alt=final+Integer&text=final+Integer" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="CloudException?alt=CloudException&text=CloudException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  returns:
    description: <p>the PagedList&lt;PrivateLinkResourceInner&gt; object if successful. </p>
    type: PagedList&lt;<xref href="com.microsoft.azure.management.batch.implementation.PrivateLinkResourceInner?alt=com.microsoft.azure.management.batch.implementation.PrivateLinkResourceInner&text=PrivateLinkResourceInner" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Lists all of the private link resources in the specified account.</p>

    <p></p>
  syntax: public PagedList<PrivateLinkResourceInner> listByBatchAccount(final String resourceGroupName, final String accountName, final Integer maxresults)
  uid: com.microsoft.azure.management.batch.implementation.PrivateLinkResourcesInner.listByBatchAccount(final String,final String,final Integer)
- fullName: com.microsoft.azure.management.batch.implementation.PrivateLinkResourcesInner.listByBatchAccountAsync(final String resourceGroupName, final String accountName)
  name: listByBatchAccountAsync(final String resourceGroupName, final String accountName)
  nameWithType: PrivateLinkResourcesInner.listByBatchAccountAsync(final String resourceGroupName, final String accountName)
  parameters:
  - description: <p>The name of the resource group that contains the Batch account. </p>
    name: resourceGroupName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the Batch account. </p>
    name: accountName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the PagedList&lt;PrivateLinkResourceInner&gt; object </p>
    type: Observable&lt;Page&lt;<xref href="com.microsoft.azure.management.batch.implementation.PrivateLinkResourceInner?alt=com.microsoft.azure.management.batch.implementation.PrivateLinkResourceInner&text=PrivateLinkResourceInner" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Lists all of the private link resources in the specified account.</p>

    <p></p>
  syntax: public Observable<Page<PrivateLinkResourceInner>> listByBatchAccountAsync(final String resourceGroupName, final String accountName)
  uid: com.microsoft.azure.management.batch.implementation.PrivateLinkResourcesInner.listByBatchAccountAsync(final String,final String)
- fullName: com.microsoft.azure.management.batch.implementation.PrivateLinkResourcesInner.listByBatchAccountAsync(final String resourceGroupName, final String accountName, final Integer maxresults)
  name: listByBatchAccountAsync(final String resourceGroupName, final String accountName, final Integer maxresults)
  nameWithType: PrivateLinkResourcesInner.listByBatchAccountAsync(final String resourceGroupName, final String accountName, final Integer maxresults)
  parameters:
  - description: <p>The name of the resource group that contains the Batch account. </p>
    name: resourceGroupName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the Batch account. </p>
    name: accountName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>The maximum number of items to return in the response. </p>
    name: maxresults
    type: <xref href="final+Integer?alt=final+Integer&text=final+Integer" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the PagedList&lt;PrivateLinkResourceInner&gt; object </p>
    type: Observable&lt;Page&lt;<xref href="com.microsoft.azure.management.batch.implementation.PrivateLinkResourceInner?alt=com.microsoft.azure.management.batch.implementation.PrivateLinkResourceInner&text=PrivateLinkResourceInner" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Lists all of the private link resources in the specified account.</p>

    <p></p>
  syntax: public Observable<Page<PrivateLinkResourceInner>> listByBatchAccountAsync(final String resourceGroupName, final String accountName, final Integer maxresults)
  uid: com.microsoft.azure.management.batch.implementation.PrivateLinkResourcesInner.listByBatchAccountAsync(final String,final String,final Integer)
- fullName: com.microsoft.azure.management.batch.implementation.PrivateLinkResourcesInner.listByBatchAccountAsync(final String resourceGroupName, final String accountName, final Integer maxresults, final ListOperationCallback<PrivateLinkResourceInner> serviceCallback)
  name: listByBatchAccountAsync(final String resourceGroupName, final String accountName, final Integer maxresults, final ListOperationCallback<PrivateLinkResourceInner> serviceCallback)
  nameWithType: PrivateLinkResourcesInner.listByBatchAccountAsync(final String resourceGroupName, final String accountName, final Integer maxresults, final ListOperationCallback<PrivateLinkResourceInner> serviceCallback)
  parameters:
  - description: <p>The name of the resource group that contains the Batch account. </p>
    name: resourceGroupName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the Batch account. </p>
    name: accountName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>The maximum number of items to return in the response. </p>
    name: maxresults
    type: <xref href="final+Integer?alt=final+Integer&text=final+Integer" data-throw-if-not-resolved="False"/>
  - description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    name: serviceCallback
    type: final ListOperationCallback&lt;<xref href="com.microsoft.azure.management.batch.implementation.PrivateLinkResourceInner?alt=com.microsoft.azure.management.batch.implementation.PrivateLinkResourceInner&text=PrivateLinkResourceInner" data-throw-if-not-resolved="False"/>&gt;
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
    type: ServiceFuture&lt;List&lt;<xref href="com.microsoft.azure.management.batch.implementation.PrivateLinkResourceInner?alt=com.microsoft.azure.management.batch.implementation.PrivateLinkResourceInner&text=PrivateLinkResourceInner" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Lists all of the private link resources in the specified account.</p>

    <p></p>
  syntax: public ServiceFuture<List<PrivateLinkResourceInner>> listByBatchAccountAsync(final String resourceGroupName, final String accountName, final Integer maxresults, final ListOperationCallback<PrivateLinkResourceInner> serviceCallback)
  uid: com.microsoft.azure.management.batch.implementation.PrivateLinkResourcesInner.listByBatchAccountAsync(final String,final String,final Integer,final ListOperationCallback<PrivateLinkResourceInner>)
- fullName: com.microsoft.azure.management.batch.implementation.PrivateLinkResourcesInner.listByBatchAccountAsync(final String resourceGroupName, final String accountName, final ListOperationCallback<PrivateLinkResourceInner> serviceCallback)
  name: listByBatchAccountAsync(final String resourceGroupName, final String accountName, final ListOperationCallback<PrivateLinkResourceInner> serviceCallback)
  nameWithType: PrivateLinkResourcesInner.listByBatchAccountAsync(final String resourceGroupName, final String accountName, final ListOperationCallback<PrivateLinkResourceInner> serviceCallback)
  parameters:
  - description: <p>The name of the resource group that contains the Batch account. </p>
    name: resourceGroupName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the Batch account. </p>
    name: accountName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    name: serviceCallback
    type: final ListOperationCallback&lt;<xref href="com.microsoft.azure.management.batch.implementation.PrivateLinkResourceInner?alt=com.microsoft.azure.management.batch.implementation.PrivateLinkResourceInner&text=PrivateLinkResourceInner" data-throw-if-not-resolved="False"/>&gt;
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
    type: ServiceFuture&lt;List&lt;<xref href="com.microsoft.azure.management.batch.implementation.PrivateLinkResourceInner?alt=com.microsoft.azure.management.batch.implementation.PrivateLinkResourceInner&text=PrivateLinkResourceInner" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Lists all of the private link resources in the specified account.</p>

    <p></p>
  syntax: public ServiceFuture<List<PrivateLinkResourceInner>> listByBatchAccountAsync(final String resourceGroupName, final String accountName, final ListOperationCallback<PrivateLinkResourceInner> serviceCallback)
  uid: com.microsoft.azure.management.batch.implementation.PrivateLinkResourcesInner.listByBatchAccountAsync(final String,final String,final ListOperationCallback<PrivateLinkResourceInner>)
- fullName: com.microsoft.azure.management.batch.implementation.PrivateLinkResourcesInner.listByBatchAccountNext(final String nextPageLink)
  name: listByBatchAccountNext(final String nextPageLink)
  nameWithType: PrivateLinkResourcesInner.listByBatchAccountNext(final String nextPageLink)
  parameters:
  - description: <p>The NextLink from the previous successful call to List operation. </p>
    name: nextPageLink
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="CloudException?alt=CloudException&text=CloudException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  returns:
    description: <p>the PagedList&lt;PrivateLinkResourceInner&gt; object if successful. </p>
    type: PagedList&lt;<xref href="com.microsoft.azure.management.batch.implementation.PrivateLinkResourceInner?alt=com.microsoft.azure.management.batch.implementation.PrivateLinkResourceInner&text=PrivateLinkResourceInner" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Lists all of the private link resources in the specified account.</p>

    <p></p>
  syntax: public PagedList<PrivateLinkResourceInner> listByBatchAccountNext(final String nextPageLink)
  uid: com.microsoft.azure.management.batch.implementation.PrivateLinkResourcesInner.listByBatchAccountNext(final String)
- fullName: com.microsoft.azure.management.batch.implementation.PrivateLinkResourcesInner.listByBatchAccountNextAsync(final String nextPageLink)
  name: listByBatchAccountNextAsync(final String nextPageLink)
  nameWithType: PrivateLinkResourcesInner.listByBatchAccountNextAsync(final String nextPageLink)
  parameters:
  - description: <p>The NextLink from the previous successful call to List operation. </p>
    name: nextPageLink
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the PagedList&lt;PrivateLinkResourceInner&gt; object </p>
    type: Observable&lt;Page&lt;<xref href="com.microsoft.azure.management.batch.implementation.PrivateLinkResourceInner?alt=com.microsoft.azure.management.batch.implementation.PrivateLinkResourceInner&text=PrivateLinkResourceInner" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Lists all of the private link resources in the specified account.</p>

    <p></p>
  syntax: public Observable<Page<PrivateLinkResourceInner>> listByBatchAccountNextAsync(final String nextPageLink)
  uid: com.microsoft.azure.management.batch.implementation.PrivateLinkResourcesInner.listByBatchAccountNextAsync(final String)
- fullName: com.microsoft.azure.management.batch.implementation.PrivateLinkResourcesInner.listByBatchAccountNextAsync(final String nextPageLink, final ServiceFuture<List<PrivateLinkResourceInner>> serviceFuture, final ListOperationCallback<PrivateLinkResourceInner> serviceCallback)
  name: listByBatchAccountNextAsync(final String nextPageLink, final ServiceFuture<List<PrivateLinkResourceInner>> serviceFuture, final ListOperationCallback<PrivateLinkResourceInner> serviceCallback)
  nameWithType: PrivateLinkResourcesInner.listByBatchAccountNextAsync(final String nextPageLink, final ServiceFuture<List<PrivateLinkResourceInner>> serviceFuture, final ListOperationCallback<PrivateLinkResourceInner> serviceCallback)
  parameters:
  - description: <p>The NextLink from the previous successful call to List operation. </p>
    name: nextPageLink
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>the ServiceFuture object tracking the Retrofit calls </p>
    name: serviceFuture
    type: final ServiceFuture&lt;List&lt;<xref href="com.microsoft.azure.management.batch.implementation.PrivateLinkResourceInner?alt=com.microsoft.azure.management.batch.implementation.PrivateLinkResourceInner&text=PrivateLinkResourceInner" data-throw-if-not-resolved="False"/>&gt;&gt;
  - description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    name: serviceCallback
    type: final ListOperationCallback&lt;<xref href="com.microsoft.azure.management.batch.implementation.PrivateLinkResourceInner?alt=com.microsoft.azure.management.batch.implementation.PrivateLinkResourceInner&text=PrivateLinkResourceInner" data-throw-if-not-resolved="False"/>&gt;
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
    type: ServiceFuture&lt;List&lt;<xref href="com.microsoft.azure.management.batch.implementation.PrivateLinkResourceInner?alt=com.microsoft.azure.management.batch.implementation.PrivateLinkResourceInner&text=PrivateLinkResourceInner" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Lists all of the private link resources in the specified account.</p>

    <p></p>
  syntax: public ServiceFuture<List<PrivateLinkResourceInner>> listByBatchAccountNextAsync(final String nextPageLink, final ServiceFuture<List<PrivateLinkResourceInner>> serviceFuture, final ListOperationCallback<PrivateLinkResourceInner> serviceCallback)
  uid: com.microsoft.azure.management.batch.implementation.PrivateLinkResourcesInner.listByBatchAccountNextAsync(final String,final ServiceFuture<List<PrivateLinkResourceInner>>,final ListOperationCallback<PrivateLinkResourceInner>)
- fullName: com.microsoft.azure.management.batch.implementation.PrivateLinkResourcesInner.listByBatchAccountNextSinglePageAsync(final String nextPageLink)
  name: listByBatchAccountNextSinglePageAsync(final String nextPageLink)
  nameWithType: PrivateLinkResourcesInner.listByBatchAccountNextSinglePageAsync(final String nextPageLink)
  parameters:
  - description: <p>The NextLink from the previous successful call to List operation. </p>
    name: nextPageLink
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the PagedList&lt;PrivateLinkResourceInner&gt; object wrapped in <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceResponse"></xref> if successful. </p>
    type: Observable&lt;ServiceResponse&lt;Page&lt;<xref href="com.microsoft.azure.management.batch.implementation.PrivateLinkResourceInner?alt=com.microsoft.azure.management.batch.implementation.PrivateLinkResourceInner&text=PrivateLinkResourceInner" data-throw-if-not-resolved="False"/>&gt;&gt;&gt;
  summary: >-
    <p>Lists all of the private link resources in the specified account.</p>

    <p>ServiceResponse&lt;PageImpl&lt;PrivateLinkResourceInner&gt;&gt; * </p>
  syntax: public Observable<ServiceResponse<Page<PrivateLinkResourceInner>>> listByBatchAccountNextSinglePageAsync(final String nextPageLink)
  uid: com.microsoft.azure.management.batch.implementation.PrivateLinkResourcesInner.listByBatchAccountNextSinglePageAsync(final String)
- fullName: com.microsoft.azure.management.batch.implementation.PrivateLinkResourcesInner.listByBatchAccountNextWithServiceResponseAsync(final String nextPageLink)
  name: listByBatchAccountNextWithServiceResponseAsync(final String nextPageLink)
  nameWithType: PrivateLinkResourcesInner.listByBatchAccountNextWithServiceResponseAsync(final String nextPageLink)
  parameters:
  - description: <p>The NextLink from the previous successful call to List operation. </p>
    name: nextPageLink
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the PagedList&lt;PrivateLinkResourceInner&gt; object </p>
    type: Observable&lt;ServiceResponse&lt;Page&lt;<xref href="com.microsoft.azure.management.batch.implementation.PrivateLinkResourceInner?alt=com.microsoft.azure.management.batch.implementation.PrivateLinkResourceInner&text=PrivateLinkResourceInner" data-throw-if-not-resolved="False"/>&gt;&gt;&gt;
  summary: >-
    <p>Lists all of the private link resources in the specified account.</p>

    <p></p>
  syntax: public Observable<ServiceResponse<Page<PrivateLinkResourceInner>>> listByBatchAccountNextWithServiceResponseAsync(final String nextPageLink)
  uid: com.microsoft.azure.management.batch.implementation.PrivateLinkResourcesInner.listByBatchAccountNextWithServiceResponseAsync(final String)
- fullName: com.microsoft.azure.management.batch.implementation.PrivateLinkResourcesInner.listByBatchAccountSinglePageAsync(final String resourceGroupName, final String accountName)
  name: listByBatchAccountSinglePageAsync(final String resourceGroupName, final String accountName)
  nameWithType: PrivateLinkResourcesInner.listByBatchAccountSinglePageAsync(final String resourceGroupName, final String accountName)
  parameters:
  - description: <p>The name of the resource group that contains the Batch account. </p>
    name: resourceGroupName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the Batch account. </p>
    name: accountName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the PagedList&lt;PrivateLinkResourceInner&gt; object wrapped in <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceResponse"></xref> if successful. </p>
    type: Observable&lt;ServiceResponse&lt;Page&lt;<xref href="com.microsoft.azure.management.batch.implementation.PrivateLinkResourceInner?alt=com.microsoft.azure.management.batch.implementation.PrivateLinkResourceInner&text=PrivateLinkResourceInner" data-throw-if-not-resolved="False"/>&gt;&gt;&gt;
  summary: >-
    <p>Lists all of the private link resources in the specified account.</p>

    <p></p>
  syntax: public Observable<ServiceResponse<Page<PrivateLinkResourceInner>>> listByBatchAccountSinglePageAsync(final String resourceGroupName, final String accountName)
  uid: com.microsoft.azure.management.batch.implementation.PrivateLinkResourcesInner.listByBatchAccountSinglePageAsync(final String,final String)
- fullName: com.microsoft.azure.management.batch.implementation.PrivateLinkResourcesInner.listByBatchAccountSinglePageAsync(final String resourceGroupName, final String accountName, final Integer maxresults)
  name: listByBatchAccountSinglePageAsync(final String resourceGroupName, final String accountName, final Integer maxresults)
  nameWithType: PrivateLinkResourcesInner.listByBatchAccountSinglePageAsync(final String resourceGroupName, final String accountName, final Integer maxresults)
  parameters:
  - description: <p>The name of the resource group that contains the Batch account. ServiceResponse&lt;PageImpl&lt;PrivateLinkResourceInner&gt;&gt; * </p>
    name: resourceGroupName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the Batch account. ServiceResponse&lt;PageImpl&lt;PrivateLinkResourceInner&gt;&gt; * </p>
    name: accountName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>The maximum number of items to return in the response. </p>
    name: maxresults
    type: <xref href="final+Integer?alt=final+Integer&text=final+Integer" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the PagedList&lt;PrivateLinkResourceInner&gt; object wrapped in <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceResponse"></xref> if successful. </p>
    type: Observable&lt;ServiceResponse&lt;Page&lt;<xref href="com.microsoft.azure.management.batch.implementation.PrivateLinkResourceInner?alt=com.microsoft.azure.management.batch.implementation.PrivateLinkResourceInner&text=PrivateLinkResourceInner" data-throw-if-not-resolved="False"/>&gt;&gt;&gt;
  summary: >-
    <p>Lists all of the private link resources in the specified account.</p>

    <p>ServiceResponse&lt;PageImpl&lt;PrivateLinkResourceInner&gt;&gt; * </p>
  syntax: public Observable<ServiceResponse<Page<PrivateLinkResourceInner>>> listByBatchAccountSinglePageAsync(final String resourceGroupName, final String accountName, final Integer maxresults)
  uid: com.microsoft.azure.management.batch.implementation.PrivateLinkResourcesInner.listByBatchAccountSinglePageAsync(final String,final String,final Integer)
- fullName: com.microsoft.azure.management.batch.implementation.PrivateLinkResourcesInner.listByBatchAccountWithServiceResponseAsync(final String resourceGroupName, final String accountName)
  name: listByBatchAccountWithServiceResponseAsync(final String resourceGroupName, final String accountName)
  nameWithType: PrivateLinkResourcesInner.listByBatchAccountWithServiceResponseAsync(final String resourceGroupName, final String accountName)
  parameters:
  - description: <p>The name of the resource group that contains the Batch account. </p>
    name: resourceGroupName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the Batch account. </p>
    name: accountName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the PagedList&lt;PrivateLinkResourceInner&gt; object </p>
    type: Observable&lt;ServiceResponse&lt;Page&lt;<xref href="com.microsoft.azure.management.batch.implementation.PrivateLinkResourceInner?alt=com.microsoft.azure.management.batch.implementation.PrivateLinkResourceInner&text=PrivateLinkResourceInner" data-throw-if-not-resolved="False"/>&gt;&gt;&gt;
  summary: >-
    <p>Lists all of the private link resources in the specified account.</p>

    <p></p>
  syntax: public Observable<ServiceResponse<Page<PrivateLinkResourceInner>>> listByBatchAccountWithServiceResponseAsync(final String resourceGroupName, final String accountName)
  uid: com.microsoft.azure.management.batch.implementation.PrivateLinkResourcesInner.listByBatchAccountWithServiceResponseAsync(final String,final String)
- fullName: com.microsoft.azure.management.batch.implementation.PrivateLinkResourcesInner.listByBatchAccountWithServiceResponseAsync(final String resourceGroupName, final String accountName, final Integer maxresults)
  name: listByBatchAccountWithServiceResponseAsync(final String resourceGroupName, final String accountName, final Integer maxresults)
  nameWithType: PrivateLinkResourcesInner.listByBatchAccountWithServiceResponseAsync(final String resourceGroupName, final String accountName, final Integer maxresults)
  parameters:
  - description: <p>The name of the resource group that contains the Batch account. </p>
    name: resourceGroupName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the Batch account. </p>
    name: accountName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>The maximum number of items to return in the response. </p>
    name: maxresults
    type: <xref href="final+Integer?alt=final+Integer&text=final+Integer" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the PagedList&lt;PrivateLinkResourceInner&gt; object </p>
    type: Observable&lt;ServiceResponse&lt;Page&lt;<xref href="com.microsoft.azure.management.batch.implementation.PrivateLinkResourceInner?alt=com.microsoft.azure.management.batch.implementation.PrivateLinkResourceInner&text=PrivateLinkResourceInner" data-throw-if-not-resolved="False"/>&gt;&gt;&gt;
  summary: >-
    <p>Lists all of the private link resources in the specified account.</p>

    <p></p>
  syntax: public Observable<ServiceResponse<Page<PrivateLinkResourceInner>>> listByBatchAccountWithServiceResponseAsync(final String resourceGroupName, final String accountName, final Integer maxresults)
  uid: com.microsoft.azure.management.batch.implementation.PrivateLinkResourcesInner.listByBatchAccountWithServiceResponseAsync(final String,final String,final Integer)
nameWithType: PrivateLinkResourcesInner
syntax: public class PrivateLinkResourcesInner
type: class
uid: com.microsoft.azure.management.batch.implementation.PrivateLinkResourcesInner
fullName: com.microsoft.azure.management.batch.implementation.PrivateLinkResourcesInner
name: PrivateLinkResourcesInner
package: com.microsoft.azure.management.batch.implementation
summary: <p>An instance of this class provides access to all the operations defined in PrivateLinkResources. </p>
metadata: {}
