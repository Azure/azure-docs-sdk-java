### YamlMime:JavaMember
nameWithType: Pools.patchAsync
type: method
members:
- fullName: com.microsoft.azure.batch.protocol.Pools.patchAsync(String poolId, PoolPatchParameter poolPatchParameter)
  name: patchAsync(String poolId, PoolPatchParameter poolPatchParameter)
  nameWithType: Pools.patchAsync(String poolId, PoolPatchParameter poolPatchParameter)
  parameters:
  - description: <p>The ID of the pool to update. </p>
    name: poolId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The parameters for the request. </p>
    name: poolPatchParameter
    type: <xref href="com.microsoft.azure.batch.protocol.models.PoolPatchParameter?alt=com.microsoft.azure.batch.protocol.models.PoolPatchParameter&text=PoolPatchParameter" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceResponseWithHeaders"></xref> object if successful. </p>
    type: <xref href="Observable%3CVoid%3E?alt=Observable%3CVoid%3E&text=Observable%3CVoid%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Updates the properties of the specified pool. This only replaces the pool properties specified in the request. For example, if the pool has a start task associated with it, and a request does not specify a start task element, then the pool keeps the existing start task.</p>

    <p></p>
  syntax: public Observable<Void> patchAsync(String poolId, PoolPatchParameter poolPatchParameter)
  uid: com.microsoft.azure.batch.protocol.Pools.patchAsync(String,PoolPatchParameter)
- fullName: com.microsoft.azure.batch.protocol.Pools.patchAsync(String poolId, PoolPatchParameter poolPatchParameter, final ServiceCallback<Void> serviceCallback)
  name: patchAsync(String poolId, PoolPatchParameter poolPatchParameter, final ServiceCallback<Void> serviceCallback)
  nameWithType: Pools.patchAsync(String poolId, PoolPatchParameter poolPatchParameter, final ServiceCallback<Void> serviceCallback)
  parameters:
  - description: <p>The ID of the pool to update. </p>
    name: poolId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The parameters for the request. </p>
    name: poolPatchParameter
    type: <xref href="com.microsoft.azure.batch.protocol.models.PoolPatchParameter?alt=com.microsoft.azure.batch.protocol.models.PoolPatchParameter&text=PoolPatchParameter" data-throw-if-not-resolved="False"/>
  - description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    name: serviceCallback
    type: <xref href="final+ServiceCallback%3CVoid%3E?alt=final+ServiceCallback%3CVoid%3E&text=final+ServiceCallback%3CVoid%3E" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
    type: <xref href="ServiceFuture%3CVoid%3E?alt=ServiceFuture%3CVoid%3E&text=ServiceFuture%3CVoid%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Updates the properties of the specified pool. This only replaces the pool properties specified in the request. For example, if the pool has a start task associated with it, and a request does not specify a start task element, then the pool keeps the existing start task.</p>

    <p></p>
  syntax: public ServiceFuture<Void> patchAsync(String poolId, PoolPatchParameter poolPatchParameter, final ServiceCallback<Void> serviceCallback)
  uid: com.microsoft.azure.batch.protocol.Pools.patchAsync(String,PoolPatchParameter,final ServiceCallback<Void>)
- fullName: com.microsoft.azure.batch.protocol.Pools.patchAsync(String poolId, PoolPatchParameter poolPatchParameter, PoolPatchOptions poolPatchOptions)
  name: patchAsync(String poolId, PoolPatchParameter poolPatchParameter, PoolPatchOptions poolPatchOptions)
  nameWithType: Pools.patchAsync(String poolId, PoolPatchParameter poolPatchParameter, PoolPatchOptions poolPatchOptions)
  parameters:
  - description: <p>The ID of the pool to update. </p>
    name: poolId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The parameters for the request. </p>
    name: poolPatchParameter
    type: <xref href="com.microsoft.azure.batch.protocol.models.PoolPatchParameter?alt=com.microsoft.azure.batch.protocol.models.PoolPatchParameter&text=PoolPatchParameter" data-throw-if-not-resolved="False"/>
  - description: <p>Additional parameters for the operation </p>
    name: poolPatchOptions
    type: <xref href="com.microsoft.azure.batch.protocol.models.PoolPatchOptions?alt=com.microsoft.azure.batch.protocol.models.PoolPatchOptions&text=PoolPatchOptions" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceResponseWithHeaders"></xref> object if successful. </p>
    type: <xref href="Observable%3CVoid%3E?alt=Observable%3CVoid%3E&text=Observable%3CVoid%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Updates the properties of the specified pool. This only replaces the pool properties specified in the request. For example, if the pool has a start task associated with it, and a request does not specify a start task element, then the pool keeps the existing start task.</p>

    <p></p>
  syntax: public Observable<Void> patchAsync(String poolId, PoolPatchParameter poolPatchParameter, PoolPatchOptions poolPatchOptions)
  uid: com.microsoft.azure.batch.protocol.Pools.patchAsync(String,PoolPatchParameter,PoolPatchOptions)
- fullName: com.microsoft.azure.batch.protocol.Pools.patchAsync(String poolId, PoolPatchParameter poolPatchParameter, PoolPatchOptions poolPatchOptions, final ServiceCallback<Void> serviceCallback)
  name: patchAsync(String poolId, PoolPatchParameter poolPatchParameter, PoolPatchOptions poolPatchOptions, final ServiceCallback<Void> serviceCallback)
  nameWithType: Pools.patchAsync(String poolId, PoolPatchParameter poolPatchParameter, PoolPatchOptions poolPatchOptions, final ServiceCallback<Void> serviceCallback)
  parameters:
  - description: <p>The ID of the pool to update. </p>
    name: poolId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The parameters for the request. </p>
    name: poolPatchParameter
    type: <xref href="com.microsoft.azure.batch.protocol.models.PoolPatchParameter?alt=com.microsoft.azure.batch.protocol.models.PoolPatchParameter&text=PoolPatchParameter" data-throw-if-not-resolved="False"/>
  - description: <p>Additional parameters for the operation </p>
    name: poolPatchOptions
    type: <xref href="com.microsoft.azure.batch.protocol.models.PoolPatchOptions?alt=com.microsoft.azure.batch.protocol.models.PoolPatchOptions&text=PoolPatchOptions" data-throw-if-not-resolved="False"/>
  - description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    name: serviceCallback
    type: <xref href="final+ServiceCallback%3CVoid%3E?alt=final+ServiceCallback%3CVoid%3E&text=final+ServiceCallback%3CVoid%3E" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
    type: <xref href="ServiceFuture%3CVoid%3E?alt=ServiceFuture%3CVoid%3E&text=ServiceFuture%3CVoid%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Updates the properties of the specified pool. This only replaces the pool properties specified in the request. For example, if the pool has a start task associated with it, and a request does not specify a start task element, then the pool keeps the existing start task.</p>

    <p></p>
  syntax: public ServiceFuture<Void> patchAsync(String poolId, PoolPatchParameter poolPatchParameter, PoolPatchOptions poolPatchOptions, final ServiceCallback<Void> serviceCallback)
  uid: com.microsoft.azure.batch.protocol.Pools.patchAsync(String,PoolPatchParameter,PoolPatchOptions,final ServiceCallback<Void>)
uid: com.microsoft.azure.batch.protocol.Pools.patchAsync*
fullName: com.microsoft.azure.batch.protocol.Pools.patchAsync
name: patchAsync(String poolId, PoolPatchParameter poolPatchParameter)
package: com.microsoft.azure.batch.protocol
metadata: {}
