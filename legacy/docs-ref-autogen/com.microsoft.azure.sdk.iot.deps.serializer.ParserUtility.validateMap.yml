### YamlMime:JavaMember
nameWithType: ParserUtility.validateMap
type: method
members:
- fullName: com.microsoft.azure.sdk.iot.deps.serializer.ParserUtility.validateMap(Map<String, Object> map)
  name: validateMap(Map<String, Object> map)
  nameWithType: ParserUtility.validateMap(Map<String, Object> map)
  parameters:
  - description: >-
      <p>the<code>Map 

          </code> to be validate. It can be<code>null 

          </code> , and it will succeed in this case. </p>
    name: map
    type: <xref href="Map%3CString%2C+Object%3E?alt=Map%3CString%2C+Object%3E&text=Map%3CString%2C+Object%3E" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>If the Map contains more than maxLevel levels or do not allow metadata but contains metadata key. </p>
  summary: >-
    <p>Helper to validate if the provided map in terms of maximum levels and optionally if the keys ar not metadata.</p>

    <p></p>
  syntax: public static void validateMap(Map<String, Object> map)
  uid: com.microsoft.azure.sdk.iot.deps.serializer.ParserUtility.validateMap(Map<String, Object>)
uid: com.microsoft.azure.sdk.iot.deps.serializer.ParserUtility.validateMap*
fullName: com.microsoft.azure.sdk.iot.deps.serializer.ParserUtility.validateMap
name: validateMap(Map<String, Object> map)
package: com.microsoft.azure.sdk.iot.deps.serializer
metadata: {}
