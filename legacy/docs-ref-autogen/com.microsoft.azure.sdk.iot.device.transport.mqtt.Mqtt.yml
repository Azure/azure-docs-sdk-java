### YamlMime:JavaType
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
- <xref href="MqttCallback" data-throw-if-not-resolved="False"/>
methods:
- fullName: com.microsoft.azure.sdk.iot.device.transport.mqtt.Mqtt.connectionLost(Throwable throwable)
  name: connectionLost(Throwable throwable)
  nameWithType: Mqtt.connectionLost(Throwable throwable)
  parameters:
  - description: <p>Reason for losing the connection. </p>
    name: throwable
    type: <xref href="Throwable?alt=Throwable&text=Throwable" data-throw-if-not-resolved="False"/>
  summary: <p>Event fired when the connection with the MQTT broker is lost. </p>
  syntax: public void connectionLost(Throwable throwable)
  uid: com.microsoft.azure.sdk.iot.device.transport.mqtt.Mqtt.connectionLost(Throwable)
- fullName: com.microsoft.azure.sdk.iot.device.transport.mqtt.Mqtt.deliveryComplete(IMqttDeliveryToken iMqttDeliveryToken)
  name: deliveryComplete(IMqttDeliveryToken iMqttDeliveryToken)
  nameWithType: Mqtt.deliveryComplete(IMqttDeliveryToken iMqttDeliveryToken)
  parameters:
  - description: <p>the MqttDeliveryToken for which the message was successfully sent. </p>
    name: iMqttDeliveryToken
    type: <xref href="IMqttDeliveryToken?alt=IMqttDeliveryToken&text=IMqttDeliveryToken" data-throw-if-not-resolved="False"/>
  summary: <p>Event fired when the message arrived on the MQTT broker. </p>
  syntax: public void deliveryComplete(IMqttDeliveryToken iMqttDeliveryToken)
  uid: com.microsoft.azure.sdk.iot.device.transport.mqtt.Mqtt.deliveryComplete(IMqttDeliveryToken)
- fullName: com.microsoft.azure.sdk.iot.device.transport.mqtt.Mqtt.messageArrived(String topic, MqttMessage mqttMessage)
  name: messageArrived(String topic, MqttMessage mqttMessage)
  nameWithType: Mqtt.messageArrived(String topic, MqttMessage mqttMessage)
  parameters:
  - description: <p>the topic on which message arrived. </p>
    name: topic
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the message arrived on the Mqtt broker. </p>
    name: mqttMessage
    type: <xref href="MqttMessage?alt=MqttMessage&text=MqttMessage" data-throw-if-not-resolved="False"/>
  summary: <p>Event fired when the message arrived on the MQTT broker. </p>
  syntax: public void messageArrived(String topic, MqttMessage mqttMessage)
  uid: com.microsoft.azure.sdk.iot.device.transport.mqtt.Mqtt.messageArrived(String,MqttMessage)
- fullName: com.microsoft.azure.sdk.iot.device.transport.mqtt.Mqtt.receive()
  name: receive()
  nameWithType: Mqtt.receive()
  returns:
    description: >-
      <p>a received message. It can be<code>nullÂ 

          </code></p>
    type: <xref href="com.microsoft.azure.sdk.iot.device.transport.IotHubTransportMessage?alt=com.microsoft.azure.sdk.iot.device.transport.IotHubTransportMessage&text=IotHubTransportMessage" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Method to receive messages on mqtt broker connection.</p>

    <p></p>
  syntax: public IotHubTransportMessage receive()
  uid: com.microsoft.azure.sdk.iot.device.transport.mqtt.Mqtt.receive()
nameWithType: Mqtt
syntax: public class Mqtt
type: class
uid: com.microsoft.azure.sdk.iot.device.transport.mqtt.Mqtt
fullName: com.microsoft.azure.sdk.iot.device.transport.mqtt.Mqtt
name: Mqtt
package: com.microsoft.azure.sdk.iot.device.transport.mqtt
metadata: {}
