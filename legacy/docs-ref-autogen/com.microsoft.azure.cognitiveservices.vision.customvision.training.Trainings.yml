### YamlMime:JavaType
uid: "com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings"
fullName: "com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings"
name: "Trainings"
nameWithType: "Trainings"
summary: "An instance of this class provides access to all the operations defined in Trainings."
syntax: "public interface **Trainings**"
methods:
- uid: "com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.createImageRegions()"
  fullName: "com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.createImageRegions()"
  name: "createImageRegions()"
  nameWithType: "Trainings.createImageRegions()"
  summary: "Create a set of image regions."
  modifiers:
  - "abstract"
  syntax: "public abstract Trainings.TrainingsCreateImageRegionsDefinitionStages.WithProjectId createImageRegions()"
  desc: "Create a set of image regions. This API accepts a batch of image regions, and optionally tags, to update existing images with region information. There is a limit of 64 entries in the batch."
  returns:
    description: "the first stage of the createImageRegions call"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.TrainingsCreateImageRegionsDefinitionStages.WithProjectId?alt=com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.TrainingsCreateImageRegionsDefinitionStages.WithProjectId&text=WithProjectId\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.createImageRegions(java.util.UUID,com.microsoft.azure.cognitiveservices.vision.customvision.training.models.CreateImageRegionsOptionalParameter)"
  fullName: "com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.createImageRegions(UUID projectId, CreateImageRegionsOptionalParameter createImageRegionsOptionalParameter)"
  name: "createImageRegions(UUID projectId, CreateImageRegionsOptionalParameter createImageRegionsOptionalParameter)"
  nameWithType: "Trainings.createImageRegions(UUID projectId, CreateImageRegionsOptionalParameter createImageRegionsOptionalParameter)"
  summary: "Create a set of image regions."
  modifiers:
  - "abstract"
  parameters:
  - description: "The project id."
    name: "projectId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/UUID.html\">UUID</a>"
  - description: "the object representing the optional parameters to be set before calling this API"
    name: "createImageRegionsOptionalParameter"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.customvision.training.models.CreateImageRegionsOptionalParameter?alt=com.microsoft.azure.cognitiveservices.vision.customvision.training.models.CreateImageRegionsOptionalParameter&text=CreateImageRegionsOptionalParameter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract ImageRegionCreateSummary createImageRegions(UUID projectId, CreateImageRegionsOptionalParameter createImageRegionsOptionalParameter)"
  desc: "Create a set of image regions. This API accepts a batch of image regions, and optionally tags, to update existing images with region information. There is a limit of 64 entries in the batch."
  returns:
    description: "the ImageRegionCreateSummary object if successful."
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImageRegionCreateSummary?alt=com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImageRegionCreateSummary&text=ImageRegionCreateSummary\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.createImageRegionsAsync(java.util.UUID,com.microsoft.azure.cognitiveservices.vision.customvision.training.models.CreateImageRegionsOptionalParameter)"
  fullName: "com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.createImageRegionsAsync(UUID projectId, CreateImageRegionsOptionalParameter createImageRegionsOptionalParameter)"
  name: "createImageRegionsAsync(UUID projectId, CreateImageRegionsOptionalParameter createImageRegionsOptionalParameter)"
  nameWithType: "Trainings.createImageRegionsAsync(UUID projectId, CreateImageRegionsOptionalParameter createImageRegionsOptionalParameter)"
  summary: "Create a set of image regions."
  modifiers:
  - "abstract"
  parameters:
  - description: "The project id."
    name: "projectId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/UUID.html\">UUID</a>"
  - description: "the object representing the optional parameters to be set before calling this API"
    name: "createImageRegionsOptionalParameter"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.customvision.training.models.CreateImageRegionsOptionalParameter?alt=com.microsoft.azure.cognitiveservices.vision.customvision.training.models.CreateImageRegionsOptionalParameter&text=CreateImageRegionsOptionalParameter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<ImageRegionCreateSummary> createImageRegionsAsync(UUID projectId, CreateImageRegionsOptionalParameter createImageRegionsOptionalParameter)"
  desc: "Create a set of image regions. This API accepts a batch of image regions, and optionally tags, to update existing images with region information. There is a limit of 64 entries in the batch."
  returns:
    description: "the observable to the ImageRegionCreateSummary object"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImageRegionCreateSummary?alt=com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImageRegionCreateSummary&text=ImageRegionCreateSummary\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.createImageTags()"
  fullName: "com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.createImageTags()"
  name: "createImageTags()"
  nameWithType: "Trainings.createImageTags()"
  summary: "Associate a set of images with a set of tags."
  modifiers:
  - "abstract"
  syntax: "public abstract Trainings.TrainingsCreateImageTagsDefinitionStages.WithProjectId createImageTags()"
  desc: "Associate a set of images with a set of tags."
  returns:
    description: "the first stage of the createImageTags call"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.TrainingsCreateImageTagsDefinitionStages.WithProjectId?alt=com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.TrainingsCreateImageTagsDefinitionStages.WithProjectId&text=WithProjectId\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.createImageTags(java.util.UUID,com.microsoft.azure.cognitiveservices.vision.customvision.training.models.CreateImageTagsOptionalParameter)"
  fullName: "com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.createImageTags(UUID projectId, CreateImageTagsOptionalParameter createImageTagsOptionalParameter)"
  name: "createImageTags(UUID projectId, CreateImageTagsOptionalParameter createImageTagsOptionalParameter)"
  nameWithType: "Trainings.createImageTags(UUID projectId, CreateImageTagsOptionalParameter createImageTagsOptionalParameter)"
  summary: "Associate a set of images with a set of tags."
  modifiers:
  - "abstract"
  parameters:
  - description: "The project id."
    name: "projectId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/UUID.html\">UUID</a>"
  - description: "the object representing the optional parameters to be set before calling this API"
    name: "createImageTagsOptionalParameter"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.customvision.training.models.CreateImageTagsOptionalParameter?alt=com.microsoft.azure.cognitiveservices.vision.customvision.training.models.CreateImageTagsOptionalParameter&text=CreateImageTagsOptionalParameter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract ImageTagCreateSummary createImageTags(UUID projectId, CreateImageTagsOptionalParameter createImageTagsOptionalParameter)"
  desc: "Associate a set of images with a set of tags."
  returns:
    description: "the ImageTagCreateSummary object if successful."
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImageTagCreateSummary?alt=com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImageTagCreateSummary&text=ImageTagCreateSummary\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.createImageTagsAsync(java.util.UUID,com.microsoft.azure.cognitiveservices.vision.customvision.training.models.CreateImageTagsOptionalParameter)"
  fullName: "com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.createImageTagsAsync(UUID projectId, CreateImageTagsOptionalParameter createImageTagsOptionalParameter)"
  name: "createImageTagsAsync(UUID projectId, CreateImageTagsOptionalParameter createImageTagsOptionalParameter)"
  nameWithType: "Trainings.createImageTagsAsync(UUID projectId, CreateImageTagsOptionalParameter createImageTagsOptionalParameter)"
  summary: "Associate a set of images with a set of tags."
  modifiers:
  - "abstract"
  parameters:
  - description: "The project id."
    name: "projectId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/UUID.html\">UUID</a>"
  - description: "the object representing the optional parameters to be set before calling this API"
    name: "createImageTagsOptionalParameter"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.customvision.training.models.CreateImageTagsOptionalParameter?alt=com.microsoft.azure.cognitiveservices.vision.customvision.training.models.CreateImageTagsOptionalParameter&text=CreateImageTagsOptionalParameter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<ImageTagCreateSummary> createImageTagsAsync(UUID projectId, CreateImageTagsOptionalParameter createImageTagsOptionalParameter)"
  desc: "Associate a set of images with a set of tags."
  returns:
    description: "the observable to the ImageTagCreateSummary object"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImageTagCreateSummary?alt=com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImageTagCreateSummary&text=ImageTagCreateSummary\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.createImagesFromData()"
  fullName: "com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.createImagesFromData()"
  name: "createImagesFromData()"
  nameWithType: "Trainings.createImagesFromData()"
  summary: "Add the provided images to the set of training images."
  modifiers:
  - "abstract"
  syntax: "public abstract Trainings.TrainingsCreateImagesFromDataDefinitionStages.WithProjectId createImagesFromData()"
  desc: "Add the provided images to the set of training images. This API accepts body content as multipart/form-data and application/octet-stream. When using multipart multiple image files can be sent at once, with a maximum of 64 files."
  returns:
    description: "the first stage of the createImagesFromData call"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.TrainingsCreateImagesFromDataDefinitionStages.WithProjectId?alt=com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.TrainingsCreateImagesFromDataDefinitionStages.WithProjectId&text=WithProjectId\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.createImagesFromData(java.util.UUID,byte[],com.microsoft.azure.cognitiveservices.vision.customvision.training.models.CreateImagesFromDataOptionalParameter)"
  fullName: "com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.createImagesFromData(UUID projectId, byte[] imageData, CreateImagesFromDataOptionalParameter createImagesFromDataOptionalParameter)"
  name: "createImagesFromData(UUID projectId, byte[] imageData, CreateImagesFromDataOptionalParameter createImagesFromDataOptionalParameter)"
  nameWithType: "Trainings.createImagesFromData(UUID projectId, byte[] imageData, CreateImagesFromDataOptionalParameter createImagesFromDataOptionalParameter)"
  summary: "Add the provided images to the set of training images."
  modifiers:
  - "abstract"
  parameters:
  - description: "The project id."
    name: "projectId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/UUID.html\">UUID</a>"
  - description: "Binary image data. Supported formats are JPEG, GIF, PNG, and BMP. Supports images up to 6MB."
    name: "imageData"
    type: "<xref href=\"byte?alt=byte&text=byte\" data-throw-if-not-resolved=\"False\" />[]"
  - description: "the object representing the optional parameters to be set before calling this API"
    name: "createImagesFromDataOptionalParameter"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.customvision.training.models.CreateImagesFromDataOptionalParameter?alt=com.microsoft.azure.cognitiveservices.vision.customvision.training.models.CreateImagesFromDataOptionalParameter&text=CreateImagesFromDataOptionalParameter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract ImageCreateSummary createImagesFromData(UUID projectId, byte[] imageData, CreateImagesFromDataOptionalParameter createImagesFromDataOptionalParameter)"
  desc: "Add the provided images to the set of training images. This API accepts body content as multipart/form-data and application/octet-stream. When using multipart multiple image files can be sent at once, with a maximum of 64 files."
  returns:
    description: "the ImageCreateSummary object if successful."
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImageCreateSummary?alt=com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImageCreateSummary&text=ImageCreateSummary\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.createImagesFromDataAsync(java.util.UUID,byte[],com.microsoft.azure.cognitiveservices.vision.customvision.training.models.CreateImagesFromDataOptionalParameter)"
  fullName: "com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.createImagesFromDataAsync(UUID projectId, byte[] imageData, CreateImagesFromDataOptionalParameter createImagesFromDataOptionalParameter)"
  name: "createImagesFromDataAsync(UUID projectId, byte[] imageData, CreateImagesFromDataOptionalParameter createImagesFromDataOptionalParameter)"
  nameWithType: "Trainings.createImagesFromDataAsync(UUID projectId, byte[] imageData, CreateImagesFromDataOptionalParameter createImagesFromDataOptionalParameter)"
  summary: "Add the provided images to the set of training images."
  modifiers:
  - "abstract"
  parameters:
  - description: "The project id."
    name: "projectId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/UUID.html\">UUID</a>"
  - description: "Binary image data. Supported formats are JPEG, GIF, PNG, and BMP. Supports images up to 6MB."
    name: "imageData"
    type: "<xref href=\"byte?alt=byte&text=byte\" data-throw-if-not-resolved=\"False\" />[]"
  - description: "the object representing the optional parameters to be set before calling this API"
    name: "createImagesFromDataOptionalParameter"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.customvision.training.models.CreateImagesFromDataOptionalParameter?alt=com.microsoft.azure.cognitiveservices.vision.customvision.training.models.CreateImagesFromDataOptionalParameter&text=CreateImagesFromDataOptionalParameter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<ImageCreateSummary> createImagesFromDataAsync(UUID projectId, byte[] imageData, CreateImagesFromDataOptionalParameter createImagesFromDataOptionalParameter)"
  desc: "Add the provided images to the set of training images. This API accepts body content as multipart/form-data and application/octet-stream. When using multipart multiple image files can be sent at once, with a maximum of 64 files."
  returns:
    description: "the observable to the ImageCreateSummary object"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImageCreateSummary?alt=com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImageCreateSummary&text=ImageCreateSummary\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.createImagesFromFiles(java.util.UUID,com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImageFileCreateBatch)"
  fullName: "com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.createImagesFromFiles(UUID projectId, ImageFileCreateBatch batch)"
  name: "createImagesFromFiles(UUID projectId, ImageFileCreateBatch batch)"
  nameWithType: "Trainings.createImagesFromFiles(UUID projectId, ImageFileCreateBatch batch)"
  summary: "Add the provided batch of images to the set of training images."
  modifiers:
  - "abstract"
  parameters:
  - description: "The project id."
    name: "projectId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/UUID.html\">UUID</a>"
  - description: "The batch of image files to add. Limited to 64 images and 20 tags per batch."
    name: "batch"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImageFileCreateBatch?alt=com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImageFileCreateBatch&text=ImageFileCreateBatch\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract ImageCreateSummary createImagesFromFiles(UUID projectId, ImageFileCreateBatch batch)"
  desc: "Add the provided batch of images to the set of training images. This API accepts a batch of files, and optionally tags, to create images. There is a limit of 64 images and 20 tags."
  returns:
    description: "the ImageCreateSummary object if successful."
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImageCreateSummary?alt=com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImageCreateSummary&text=ImageCreateSummary\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.createImagesFromFilesAsync(java.util.UUID,com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImageFileCreateBatch)"
  fullName: "com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.createImagesFromFilesAsync(UUID projectId, ImageFileCreateBatch batch)"
  name: "createImagesFromFilesAsync(UUID projectId, ImageFileCreateBatch batch)"
  nameWithType: "Trainings.createImagesFromFilesAsync(UUID projectId, ImageFileCreateBatch batch)"
  summary: "Add the provided batch of images to the set of training images."
  modifiers:
  - "abstract"
  parameters:
  - description: "The project id."
    name: "projectId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/UUID.html\">UUID</a>"
  - description: "The batch of image files to add. Limited to 64 images and 20 tags per batch."
    name: "batch"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImageFileCreateBatch?alt=com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImageFileCreateBatch&text=ImageFileCreateBatch\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<ImageCreateSummary> createImagesFromFilesAsync(UUID projectId, ImageFileCreateBatch batch)"
  desc: "Add the provided batch of images to the set of training images. This API accepts a batch of files, and optionally tags, to create images. There is a limit of 64 images and 20 tags."
  returns:
    description: "the observable to the ImageCreateSummary object"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImageCreateSummary?alt=com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImageCreateSummary&text=ImageCreateSummary\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.createImagesFromPredictions(java.util.UUID,com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImageIdCreateBatch)"
  fullName: "com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.createImagesFromPredictions(UUID projectId, ImageIdCreateBatch batch)"
  name: "createImagesFromPredictions(UUID projectId, ImageIdCreateBatch batch)"
  nameWithType: "Trainings.createImagesFromPredictions(UUID projectId, ImageIdCreateBatch batch)"
  summary: "Add the specified predicted images to the set of training images."
  modifiers:
  - "abstract"
  parameters:
  - description: "The project id."
    name: "projectId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/UUID.html\">UUID</a>"
  - description: "Image and tag ids. Limited to 64 images and 20 tags per batch."
    name: "batch"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImageIdCreateBatch?alt=com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImageIdCreateBatch&text=ImageIdCreateBatch\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract ImageCreateSummary createImagesFromPredictions(UUID projectId, ImageIdCreateBatch batch)"
  desc: "Add the specified predicted images to the set of training images. This API creates a batch of images from predicted images specified. There is a limit of 64 images and 20 tags."
  returns:
    description: "the ImageCreateSummary object if successful."
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImageCreateSummary?alt=com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImageCreateSummary&text=ImageCreateSummary\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.createImagesFromPredictionsAsync(java.util.UUID,com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImageIdCreateBatch)"
  fullName: "com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.createImagesFromPredictionsAsync(UUID projectId, ImageIdCreateBatch batch)"
  name: "createImagesFromPredictionsAsync(UUID projectId, ImageIdCreateBatch batch)"
  nameWithType: "Trainings.createImagesFromPredictionsAsync(UUID projectId, ImageIdCreateBatch batch)"
  summary: "Add the specified predicted images to the set of training images."
  modifiers:
  - "abstract"
  parameters:
  - description: "The project id."
    name: "projectId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/UUID.html\">UUID</a>"
  - description: "Image and tag ids. Limited to 64 images and 20 tags per batch."
    name: "batch"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImageIdCreateBatch?alt=com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImageIdCreateBatch&text=ImageIdCreateBatch\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<ImageCreateSummary> createImagesFromPredictionsAsync(UUID projectId, ImageIdCreateBatch batch)"
  desc: "Add the specified predicted images to the set of training images. This API creates a batch of images from predicted images specified. There is a limit of 64 images and 20 tags."
  returns:
    description: "the observable to the ImageCreateSummary object"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImageCreateSummary?alt=com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImageCreateSummary&text=ImageCreateSummary\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.createImagesFromUrls(java.util.UUID,com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImageUrlCreateBatch)"
  fullName: "com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.createImagesFromUrls(UUID projectId, ImageUrlCreateBatch batch)"
  name: "createImagesFromUrls(UUID projectId, ImageUrlCreateBatch batch)"
  nameWithType: "Trainings.createImagesFromUrls(UUID projectId, ImageUrlCreateBatch batch)"
  summary: "Add the provided images urls to the set of training images."
  modifiers:
  - "abstract"
  parameters:
  - description: "The project id."
    name: "projectId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/UUID.html\">UUID</a>"
  - description: "Image urls and tag ids. Limited to 64 images and 20 tags per batch."
    name: "batch"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImageUrlCreateBatch?alt=com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImageUrlCreateBatch&text=ImageUrlCreateBatch\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract ImageCreateSummary createImagesFromUrls(UUID projectId, ImageUrlCreateBatch batch)"
  desc: "Add the provided images urls to the set of training images. This API accepts a batch of urls, and optionally tags, to create images. There is a limit of 64 images and 20 tags."
  returns:
    description: "the ImageCreateSummary object if successful."
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImageCreateSummary?alt=com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImageCreateSummary&text=ImageCreateSummary\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.createImagesFromUrlsAsync(java.util.UUID,com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImageUrlCreateBatch)"
  fullName: "com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.createImagesFromUrlsAsync(UUID projectId, ImageUrlCreateBatch batch)"
  name: "createImagesFromUrlsAsync(UUID projectId, ImageUrlCreateBatch batch)"
  nameWithType: "Trainings.createImagesFromUrlsAsync(UUID projectId, ImageUrlCreateBatch batch)"
  summary: "Add the provided images urls to the set of training images."
  modifiers:
  - "abstract"
  parameters:
  - description: "The project id."
    name: "projectId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/UUID.html\">UUID</a>"
  - description: "Image urls and tag ids. Limited to 64 images and 20 tags per batch."
    name: "batch"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImageUrlCreateBatch?alt=com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImageUrlCreateBatch&text=ImageUrlCreateBatch\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<ImageCreateSummary> createImagesFromUrlsAsync(UUID projectId, ImageUrlCreateBatch batch)"
  desc: "Add the provided images urls to the set of training images. This API accepts a batch of urls, and optionally tags, to create images. There is a limit of 64 images and 20 tags."
  returns:
    description: "the observable to the ImageCreateSummary object"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImageCreateSummary?alt=com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImageCreateSummary&text=ImageCreateSummary\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.createProject()"
  fullName: "com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.createProject()"
  name: "createProject()"
  nameWithType: "Trainings.createProject()"
  summary: "Create a project."
  modifiers:
  - "abstract"
  syntax: "public abstract Trainings.TrainingsCreateProjectDefinitionStages.WithName createProject()"
  desc: "Create a project."
  returns:
    description: "the first stage of the createProject call"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.TrainingsCreateProjectDefinitionStages.WithName?alt=com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.TrainingsCreateProjectDefinitionStages.WithName&text=WithName\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.createProject(java.lang.String,com.microsoft.azure.cognitiveservices.vision.customvision.training.models.CreateProjectOptionalParameter)"
  fullName: "com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.createProject(String name, CreateProjectOptionalParameter createProjectOptionalParameter)"
  name: "createProject(String name, CreateProjectOptionalParameter createProjectOptionalParameter)"
  nameWithType: "Trainings.createProject(String name, CreateProjectOptionalParameter createProjectOptionalParameter)"
  summary: "Create a project."
  modifiers:
  - "abstract"
  parameters:
  - description: "Name of the project."
    name: "name"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "the object representing the optional parameters to be set before calling this API"
    name: "createProjectOptionalParameter"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.customvision.training.models.CreateProjectOptionalParameter?alt=com.microsoft.azure.cognitiveservices.vision.customvision.training.models.CreateProjectOptionalParameter&text=CreateProjectOptionalParameter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Project createProject(String name, CreateProjectOptionalParameter createProjectOptionalParameter)"
  desc: "Create a project."
  returns:
    description: "the Project object if successful."
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Project?alt=com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Project&text=Project\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.createProjectAsync(java.lang.String,com.microsoft.azure.cognitiveservices.vision.customvision.training.models.CreateProjectOptionalParameter)"
  fullName: "com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.createProjectAsync(String name, CreateProjectOptionalParameter createProjectOptionalParameter)"
  name: "createProjectAsync(String name, CreateProjectOptionalParameter createProjectOptionalParameter)"
  nameWithType: "Trainings.createProjectAsync(String name, CreateProjectOptionalParameter createProjectOptionalParameter)"
  summary: "Create a project."
  modifiers:
  - "abstract"
  parameters:
  - description: "Name of the project."
    name: "name"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "the object representing the optional parameters to be set before calling this API"
    name: "createProjectOptionalParameter"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.customvision.training.models.CreateProjectOptionalParameter?alt=com.microsoft.azure.cognitiveservices.vision.customvision.training.models.CreateProjectOptionalParameter&text=CreateProjectOptionalParameter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<Project> createProjectAsync(String name, CreateProjectOptionalParameter createProjectOptionalParameter)"
  desc: "Create a project."
  returns:
    description: "the observable to the Project object"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Project?alt=com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Project&text=Project\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.createTag()"
  fullName: "com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.createTag()"
  name: "createTag()"
  nameWithType: "Trainings.createTag()"
  summary: "Create a tag for the project."
  modifiers:
  - "abstract"
  syntax: "public abstract Trainings.TrainingsCreateTagDefinitionStages.WithProjectId createTag()"
  desc: "Create a tag for the project."
  returns:
    description: "the first stage of the createTag call"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.TrainingsCreateTagDefinitionStages.WithProjectId?alt=com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.TrainingsCreateTagDefinitionStages.WithProjectId&text=WithProjectId\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.createTag(java.util.UUID,java.lang.String,com.microsoft.azure.cognitiveservices.vision.customvision.training.models.CreateTagOptionalParameter)"
  fullName: "com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.createTag(UUID projectId, String name, CreateTagOptionalParameter createTagOptionalParameter)"
  name: "createTag(UUID projectId, String name, CreateTagOptionalParameter createTagOptionalParameter)"
  nameWithType: "Trainings.createTag(UUID projectId, String name, CreateTagOptionalParameter createTagOptionalParameter)"
  summary: "Create a tag for the project."
  modifiers:
  - "abstract"
  parameters:
  - description: "The project id."
    name: "projectId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/UUID.html\">UUID</a>"
  - description: "The tag name."
    name: "name"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "the object representing the optional parameters to be set before calling this API"
    name: "createTagOptionalParameter"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.customvision.training.models.CreateTagOptionalParameter?alt=com.microsoft.azure.cognitiveservices.vision.customvision.training.models.CreateTagOptionalParameter&text=CreateTagOptionalParameter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Tag createTag(UUID projectId, String name, CreateTagOptionalParameter createTagOptionalParameter)"
  desc: "Create a tag for the project."
  returns:
    description: "the Tag object if successful."
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Tag?alt=com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Tag&text=Tag\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.createTagAsync(java.util.UUID,java.lang.String,com.microsoft.azure.cognitiveservices.vision.customvision.training.models.CreateTagOptionalParameter)"
  fullName: "com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.createTagAsync(UUID projectId, String name, CreateTagOptionalParameter createTagOptionalParameter)"
  name: "createTagAsync(UUID projectId, String name, CreateTagOptionalParameter createTagOptionalParameter)"
  nameWithType: "Trainings.createTagAsync(UUID projectId, String name, CreateTagOptionalParameter createTagOptionalParameter)"
  summary: "Create a tag for the project."
  modifiers:
  - "abstract"
  parameters:
  - description: "The project id."
    name: "projectId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/UUID.html\">UUID</a>"
  - description: "The tag name."
    name: "name"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "the object representing the optional parameters to be set before calling this API"
    name: "createTagOptionalParameter"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.customvision.training.models.CreateTagOptionalParameter?alt=com.microsoft.azure.cognitiveservices.vision.customvision.training.models.CreateTagOptionalParameter&text=CreateTagOptionalParameter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<Tag> createTagAsync(UUID projectId, String name, CreateTagOptionalParameter createTagOptionalParameter)"
  desc: "Create a tag for the project."
  returns:
    description: "the observable to the Tag object"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Tag?alt=com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Tag&text=Tag\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.deleteImageRegions(java.util.UUID,java.util.List<java.util.UUID>)"
  fullName: "com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.deleteImageRegions(UUID projectId, List<UUID> regionIds)"
  name: "deleteImageRegions(UUID projectId, List<UUID> regionIds)"
  nameWithType: "Trainings.deleteImageRegions(UUID projectId, List<UUID> regionIds)"
  summary: "Delete a set of image regions."
  modifiers:
  - "abstract"
  parameters:
  - description: "The project id."
    name: "projectId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/UUID.html\">UUID</a>"
  - description: "Regions to delete. Limited to 64."
    name: "regionIds"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/UUID.html\">UUID</a>&gt;"
  syntax: "public abstract void deleteImageRegions(UUID projectId, List<UUID> regionIds)"
  desc: "Delete a set of image regions."
- uid: "com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.deleteImageRegionsAsync(java.util.UUID,java.util.List<java.util.UUID>)"
  fullName: "com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.deleteImageRegionsAsync(UUID projectId, List<UUID> regionIds)"
  name: "deleteImageRegionsAsync(UUID projectId, List<UUID> regionIds)"
  nameWithType: "Trainings.deleteImageRegionsAsync(UUID projectId, List<UUID> regionIds)"
  summary: "Delete a set of image regions."
  modifiers:
  - "abstract"
  parameters:
  - description: "The project id."
    name: "projectId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/UUID.html\">UUID</a>"
  - description: "Regions to delete. Limited to 64."
    name: "regionIds"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/UUID.html\">UUID</a>&gt;"
  syntax: "public abstract Observable<Void> deleteImageRegionsAsync(UUID projectId, List<UUID> regionIds)"
  desc: "Delete a set of image regions."
  returns:
    description: "a representation of the deferred computation of this call if successful."
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Void.html\">Void</a>&gt;"
- uid: "com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.deleteImageTags(java.util.UUID,java.util.List<java.util.UUID>,java.util.List<java.util.UUID>)"
  fullName: "com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.deleteImageTags(UUID projectId, List<UUID> imageIds, List<UUID> tagIds)"
  name: "deleteImageTags(UUID projectId, List<UUID> imageIds, List<UUID> tagIds)"
  nameWithType: "Trainings.deleteImageTags(UUID projectId, List<UUID> imageIds, List<UUID> tagIds)"
  summary: "Remove a set of tags from a set of images."
  modifiers:
  - "abstract"
  parameters:
  - description: "The project id."
    name: "projectId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/UUID.html\">UUID</a>"
  - description: "Image ids. Limited to 64 images."
    name: "imageIds"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/UUID.html\">UUID</a>&gt;"
  - description: "Tags to be deleted from the specified images. Limited to 20 tags."
    name: "tagIds"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/UUID.html\">UUID</a>&gt;"
  syntax: "public abstract void deleteImageTags(UUID projectId, List<UUID> imageIds, List<UUID> tagIds)"
  desc: "Remove a set of tags from a set of images."
- uid: "com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.deleteImageTagsAsync(java.util.UUID,java.util.List<java.util.UUID>,java.util.List<java.util.UUID>)"
  fullName: "com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.deleteImageTagsAsync(UUID projectId, List<UUID> imageIds, List<UUID> tagIds)"
  name: "deleteImageTagsAsync(UUID projectId, List<UUID> imageIds, List<UUID> tagIds)"
  nameWithType: "Trainings.deleteImageTagsAsync(UUID projectId, List<UUID> imageIds, List<UUID> tagIds)"
  summary: "Remove a set of tags from a set of images."
  modifiers:
  - "abstract"
  parameters:
  - description: "The project id."
    name: "projectId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/UUID.html\">UUID</a>"
  - description: "Image ids. Limited to 64 images."
    name: "imageIds"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/UUID.html\">UUID</a>&gt;"
  - description: "Tags to be deleted from the specified images. Limited to 20 tags."
    name: "tagIds"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/UUID.html\">UUID</a>&gt;"
  syntax: "public abstract Observable<Void> deleteImageTagsAsync(UUID projectId, List<UUID> imageIds, List<UUID> tagIds)"
  desc: "Remove a set of tags from a set of images."
  returns:
    description: "a representation of the deferred computation of this call if successful."
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Void.html\">Void</a>&gt;"
- uid: "com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.deleteImages(java.util.UUID,java.util.List<java.util.UUID>)"
  fullName: "com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.deleteImages(UUID projectId, List<UUID> imageIds)"
  name: "deleteImages(UUID projectId, List<UUID> imageIds)"
  nameWithType: "Trainings.deleteImages(UUID projectId, List<UUID> imageIds)"
  summary: "Delete images from the set of training images."
  modifiers:
  - "abstract"
  parameters:
  - description: "The project id."
    name: "projectId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/UUID.html\">UUID</a>"
  - description: "Ids of the images to be deleted. Limited to 256 images per batch."
    name: "imageIds"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/UUID.html\">UUID</a>&gt;"
  syntax: "public abstract void deleteImages(UUID projectId, List<UUID> imageIds)"
  desc: "Delete images from the set of training images."
- uid: "com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.deleteImagesAsync(java.util.UUID,java.util.List<java.util.UUID>)"
  fullName: "com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.deleteImagesAsync(UUID projectId, List<UUID> imageIds)"
  name: "deleteImagesAsync(UUID projectId, List<UUID> imageIds)"
  nameWithType: "Trainings.deleteImagesAsync(UUID projectId, List<UUID> imageIds)"
  summary: "Delete images from the set of training images."
  modifiers:
  - "abstract"
  parameters:
  - description: "The project id."
    name: "projectId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/UUID.html\">UUID</a>"
  - description: "Ids of the images to be deleted. Limited to 256 images per batch."
    name: "imageIds"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/UUID.html\">UUID</a>&gt;"
  syntax: "public abstract Observable<Void> deleteImagesAsync(UUID projectId, List<UUID> imageIds)"
  desc: "Delete images from the set of training images."
  returns:
    description: "a representation of the deferred computation of this call if successful."
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Void.html\">Void</a>&gt;"
- uid: "com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.deleteIteration(java.util.UUID,java.util.UUID)"
  fullName: "com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.deleteIteration(UUID projectId, UUID iterationId)"
  name: "deleteIteration(UUID projectId, UUID iterationId)"
  nameWithType: "Trainings.deleteIteration(UUID projectId, UUID iterationId)"
  summary: "Delete a specific iteration of a project."
  modifiers:
  - "abstract"
  parameters:
  - description: "The project id."
    name: "projectId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/UUID.html\">UUID</a>"
  - description: "The iteration id."
    name: "iterationId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/UUID.html\">UUID</a>"
  syntax: "public abstract void deleteIteration(UUID projectId, UUID iterationId)"
  desc: "Delete a specific iteration of a project."
- uid: "com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.deleteIterationAsync(java.util.UUID,java.util.UUID)"
  fullName: "com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.deleteIterationAsync(UUID projectId, UUID iterationId)"
  name: "deleteIterationAsync(UUID projectId, UUID iterationId)"
  nameWithType: "Trainings.deleteIterationAsync(UUID projectId, UUID iterationId)"
  summary: "Delete a specific iteration of a project."
  modifiers:
  - "abstract"
  parameters:
  - description: "The project id."
    name: "projectId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/UUID.html\">UUID</a>"
  - description: "The iteration id."
    name: "iterationId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/UUID.html\">UUID</a>"
  syntax: "public abstract Observable<Void> deleteIterationAsync(UUID projectId, UUID iterationId)"
  desc: "Delete a specific iteration of a project."
  returns:
    description: "a representation of the deferred computation of this call if successful."
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Void.html\">Void</a>&gt;"
- uid: "com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.deletePrediction(java.util.UUID,java.util.List<java.util.UUID>)"
  fullName: "com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.deletePrediction(UUID projectId, List<UUID> ids)"
  name: "deletePrediction(UUID projectId, List<UUID> ids)"
  nameWithType: "Trainings.deletePrediction(UUID projectId, List<UUID> ids)"
  summary: "Delete a set of predicted images and their associated prediction results."
  modifiers:
  - "abstract"
  parameters:
  - description: "The project id."
    name: "projectId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/UUID.html\">UUID</a>"
  - description: "The prediction ids. Limited to 64."
    name: "ids"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/UUID.html\">UUID</a>&gt;"
  syntax: "public abstract void deletePrediction(UUID projectId, List<UUID> ids)"
  desc: "Delete a set of predicted images and their associated prediction results."
- uid: "com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.deletePredictionAsync(java.util.UUID,java.util.List<java.util.UUID>)"
  fullName: "com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.deletePredictionAsync(UUID projectId, List<UUID> ids)"
  name: "deletePredictionAsync(UUID projectId, List<UUID> ids)"
  nameWithType: "Trainings.deletePredictionAsync(UUID projectId, List<UUID> ids)"
  summary: "Delete a set of predicted images and their associated prediction results."
  modifiers:
  - "abstract"
  parameters:
  - description: "The project id."
    name: "projectId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/UUID.html\">UUID</a>"
  - description: "The prediction ids. Limited to 64."
    name: "ids"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/UUID.html\">UUID</a>&gt;"
  syntax: "public abstract Observable<Void> deletePredictionAsync(UUID projectId, List<UUID> ids)"
  desc: "Delete a set of predicted images and their associated prediction results."
  returns:
    description: "a representation of the deferred computation of this call if successful."
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Void.html\">Void</a>&gt;"
- uid: "com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.deleteProject(java.util.UUID)"
  fullName: "com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.deleteProject(UUID projectId)"
  name: "deleteProject(UUID projectId)"
  nameWithType: "Trainings.deleteProject(UUID projectId)"
  summary: "Delete a specific project."
  modifiers:
  - "abstract"
  parameters:
  - description: "The project id."
    name: "projectId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/UUID.html\">UUID</a>"
  syntax: "public abstract void deleteProject(UUID projectId)"
  desc: "Delete a specific project."
- uid: "com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.deleteProjectAsync(java.util.UUID)"
  fullName: "com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.deleteProjectAsync(UUID projectId)"
  name: "deleteProjectAsync(UUID projectId)"
  nameWithType: "Trainings.deleteProjectAsync(UUID projectId)"
  summary: "Delete a specific project."
  modifiers:
  - "abstract"
  parameters:
  - description: "The project id."
    name: "projectId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/UUID.html\">UUID</a>"
  syntax: "public abstract Observable<Void> deleteProjectAsync(UUID projectId)"
  desc: "Delete a specific project."
  returns:
    description: "a representation of the deferred computation of this call if successful."
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Void.html\">Void</a>&gt;"
- uid: "com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.deleteTag(java.util.UUID,java.util.UUID)"
  fullName: "com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.deleteTag(UUID projectId, UUID tagId)"
  name: "deleteTag(UUID projectId, UUID tagId)"
  nameWithType: "Trainings.deleteTag(UUID projectId, UUID tagId)"
  summary: "Delete a tag from the project."
  modifiers:
  - "abstract"
  parameters:
  - description: "The project id."
    name: "projectId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/UUID.html\">UUID</a>"
  - description: "Id of the tag to be deleted."
    name: "tagId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/UUID.html\">UUID</a>"
  syntax: "public abstract void deleteTag(UUID projectId, UUID tagId)"
  desc: "Delete a tag from the project."
- uid: "com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.deleteTagAsync(java.util.UUID,java.util.UUID)"
  fullName: "com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.deleteTagAsync(UUID projectId, UUID tagId)"
  name: "deleteTagAsync(UUID projectId, UUID tagId)"
  nameWithType: "Trainings.deleteTagAsync(UUID projectId, UUID tagId)"
  summary: "Delete a tag from the project."
  modifiers:
  - "abstract"
  parameters:
  - description: "The project id."
    name: "projectId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/UUID.html\">UUID</a>"
  - description: "Id of the tag to be deleted."
    name: "tagId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/UUID.html\">UUID</a>"
  syntax: "public abstract Observable<Void> deleteTagAsync(UUID projectId, UUID tagId)"
  desc: "Delete a tag from the project."
  returns:
    description: "a representation of the deferred computation of this call if successful."
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Void.html\">Void</a>&gt;"
- uid: "com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.exportIteration()"
  fullName: "com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.exportIteration()"
  name: "exportIteration()"
  nameWithType: "Trainings.exportIteration()"
  summary: "Export a trained iteration."
  modifiers:
  - "abstract"
  syntax: "public abstract Trainings.TrainingsExportIterationDefinitionStages.WithProjectId exportIteration()"
  desc: "Export a trained iteration."
  returns:
    description: "the first stage of the exportIteration call"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.TrainingsExportIterationDefinitionStages.WithProjectId?alt=com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.TrainingsExportIterationDefinitionStages.WithProjectId&text=WithProjectId\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.exportIteration(java.util.UUID,java.util.UUID,java.lang.String,com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ExportIterationOptionalParameter)"
  fullName: "com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.exportIteration(UUID projectId, UUID iterationId, String platform, ExportIterationOptionalParameter exportIterationOptionalParameter)"
  name: "exportIteration(UUID projectId, UUID iterationId, String platform, ExportIterationOptionalParameter exportIterationOptionalParameter)"
  nameWithType: "Trainings.exportIteration(UUID projectId, UUID iterationId, String platform, ExportIterationOptionalParameter exportIterationOptionalParameter)"
  summary: "Export a trained iteration."
  modifiers:
  - "abstract"
  parameters:
  - description: "The project id."
    name: "projectId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/UUID.html\">UUID</a>"
  - description: "The iteration id."
    name: "iterationId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/UUID.html\">UUID</a>"
  - description: "The target platform. Possible values include: 'CoreML', 'TensorFlow', 'DockerFile', 'ONNX', 'VAIDK'."
    name: "platform"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "the object representing the optional parameters to be set before calling this API"
    name: "exportIterationOptionalParameter"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ExportIterationOptionalParameter?alt=com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ExportIterationOptionalParameter&text=ExportIterationOptionalParameter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Export exportIteration(UUID projectId, UUID iterationId, String platform, ExportIterationOptionalParameter exportIterationOptionalParameter)"
  desc: "Export a trained iteration."
  returns:
    description: "the Export object if successful."
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Export?alt=com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Export&text=Export\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.exportIterationAsync(java.util.UUID,java.util.UUID,java.lang.String,com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ExportIterationOptionalParameter)"
  fullName: "com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.exportIterationAsync(UUID projectId, UUID iterationId, String platform, ExportIterationOptionalParameter exportIterationOptionalParameter)"
  name: "exportIterationAsync(UUID projectId, UUID iterationId, String platform, ExportIterationOptionalParameter exportIterationOptionalParameter)"
  nameWithType: "Trainings.exportIterationAsync(UUID projectId, UUID iterationId, String platform, ExportIterationOptionalParameter exportIterationOptionalParameter)"
  summary: "Export a trained iteration."
  modifiers:
  - "abstract"
  parameters:
  - description: "The project id."
    name: "projectId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/UUID.html\">UUID</a>"
  - description: "The iteration id."
    name: "iterationId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/UUID.html\">UUID</a>"
  - description: "The target platform. Possible values include: 'CoreML', 'TensorFlow', 'DockerFile', 'ONNX', 'VAIDK'."
    name: "platform"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "the object representing the optional parameters to be set before calling this API"
    name: "exportIterationOptionalParameter"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ExportIterationOptionalParameter?alt=com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ExportIterationOptionalParameter&text=ExportIterationOptionalParameter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<Export> exportIterationAsync(UUID projectId, UUID iterationId, String platform, ExportIterationOptionalParameter exportIterationOptionalParameter)"
  desc: "Export a trained iteration."
  returns:
    description: "the observable to the Export object"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Export?alt=com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Export&text=Export\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getDomain(java.util.UUID)"
  fullName: "com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getDomain(UUID domainId)"
  name: "getDomain(UUID domainId)"
  nameWithType: "Trainings.getDomain(UUID domainId)"
  summary: "Get information about a specific domain."
  modifiers:
  - "abstract"
  parameters:
  - description: "The id of the domain to get information about."
    name: "domainId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/UUID.html\">UUID</a>"
  syntax: "public abstract Domain getDomain(UUID domainId)"
  desc: "Get information about a specific domain."
  returns:
    description: "the Domain object if successful."
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Domain?alt=com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Domain&text=Domain\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getDomainAsync(java.util.UUID)"
  fullName: "com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getDomainAsync(UUID domainId)"
  name: "getDomainAsync(UUID domainId)"
  nameWithType: "Trainings.getDomainAsync(UUID domainId)"
  summary: "Get information about a specific domain."
  modifiers:
  - "abstract"
  parameters:
  - description: "The id of the domain to get information about."
    name: "domainId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/UUID.html\">UUID</a>"
  syntax: "public abstract Observable<Domain> getDomainAsync(UUID domainId)"
  desc: "Get information about a specific domain."
  returns:
    description: "the observable to the Domain object"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Domain?alt=com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Domain&text=Domain\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getDomains()"
  fullName: "com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getDomains()"
  name: "getDomains()"
  nameWithType: "Trainings.getDomains()"
  summary: "Get a list of the available domains."
  modifiers:
  - "abstract"
  syntax: "public abstract List<Domain> getDomains()"
  desc: "Get a list of the available domains."
  returns:
    description: "the List&lt;Domain&gt; object if successful."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<xref href=\"com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Domain?alt=com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Domain&text=Domain\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getDomainsAsync()"
  fullName: "com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getDomainsAsync()"
  name: "getDomainsAsync()"
  nameWithType: "Trainings.getDomainsAsync()"
  summary: "Get a list of the available domains."
  modifiers:
  - "abstract"
  syntax: "public abstract Observable<List<Domain>> getDomainsAsync()"
  desc: "Get a list of the available domains."
  returns:
    description: "the observable to the List&lt;Domain&gt; object"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<xref href=\"com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Domain?alt=com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Domain&text=Domain\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getExports(java.util.UUID,java.util.UUID)"
  fullName: "com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getExports(UUID projectId, UUID iterationId)"
  name: "getExports(UUID projectId, UUID iterationId)"
  nameWithType: "Trainings.getExports(UUID projectId, UUID iterationId)"
  summary: "Get the list of exports for a specific iteration."
  modifiers:
  - "abstract"
  parameters:
  - description: "The project id."
    name: "projectId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/UUID.html\">UUID</a>"
  - description: "The iteration id."
    name: "iterationId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/UUID.html\">UUID</a>"
  syntax: "public abstract List<Export> getExports(UUID projectId, UUID iterationId)"
  desc: "Get the list of exports for a specific iteration."
  returns:
    description: "the List&lt;Export&gt; object if successful."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<xref href=\"com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Export?alt=com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Export&text=Export\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getExportsAsync(java.util.UUID,java.util.UUID)"
  fullName: "com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getExportsAsync(UUID projectId, UUID iterationId)"
  name: "getExportsAsync(UUID projectId, UUID iterationId)"
  nameWithType: "Trainings.getExportsAsync(UUID projectId, UUID iterationId)"
  summary: "Get the list of exports for a specific iteration."
  modifiers:
  - "abstract"
  parameters:
  - description: "The project id."
    name: "projectId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/UUID.html\">UUID</a>"
  - description: "The iteration id."
    name: "iterationId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/UUID.html\">UUID</a>"
  syntax: "public abstract Observable<List<Export>> getExportsAsync(UUID projectId, UUID iterationId)"
  desc: "Get the list of exports for a specific iteration."
  returns:
    description: "the observable to the List&lt;Export&gt; object"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<xref href=\"com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Export?alt=com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Export&text=Export\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getImagePerformanceCount()"
  fullName: "com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getImagePerformanceCount()"
  name: "getImagePerformanceCount()"
  nameWithType: "Trainings.getImagePerformanceCount()"
  summary: "Gets the number of images tagged with the provided \\{tag<wbr>Ids\\} that have prediction results from training for the provided iteration \\{iteration<wbr>Id\\}."
  modifiers:
  - "abstract"
  syntax: "public abstract Trainings.TrainingsGetImagePerformanceCountDefinitionStages.WithProjectId getImagePerformanceCount()"
  desc: "Gets the number of images tagged with the provided \\{tagIds\\} that have prediction results from training for the provided iteration \\{iterationId\\}. The filtering is on an and/or relationship. For example, if the provided tag ids are for the \"Dog\" and \"Cat\" tags, then only images tagged with Dog and/or Cat will be returned."
  returns:
    description: "the first stage of the getImagePerformanceCount call"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.TrainingsGetImagePerformanceCountDefinitionStages.WithProjectId?alt=com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.TrainingsGetImagePerformanceCountDefinitionStages.WithProjectId&text=WithProjectId\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getImagePerformanceCount(java.util.UUID,java.util.UUID,com.microsoft.azure.cognitiveservices.vision.customvision.training.models.GetImagePerformanceCountOptionalParameter)"
  fullName: "com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getImagePerformanceCount(UUID projectId, UUID iterationId, GetImagePerformanceCountOptionalParameter getImagePerformanceCountOptionalParameter)"
  name: "getImagePerformanceCount(UUID projectId, UUID iterationId, GetImagePerformanceCountOptionalParameter getImagePerformanceCountOptionalParameter)"
  nameWithType: "Trainings.getImagePerformanceCount(UUID projectId, UUID iterationId, GetImagePerformanceCountOptionalParameter getImagePerformanceCountOptionalParameter)"
  summary: "Gets the number of images tagged with the provided \\{tag<wbr>Ids\\} that have prediction results from training for the provided iteration \\{iteration<wbr>Id\\}."
  modifiers:
  - "abstract"
  parameters:
  - description: "The project id."
    name: "projectId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/UUID.html\">UUID</a>"
  - description: "The iteration id. Defaults to workspace."
    name: "iterationId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/UUID.html\">UUID</a>"
  - description: "the object representing the optional parameters to be set before calling this API"
    name: "getImagePerformanceCountOptionalParameter"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.customvision.training.models.GetImagePerformanceCountOptionalParameter?alt=com.microsoft.azure.cognitiveservices.vision.customvision.training.models.GetImagePerformanceCountOptionalParameter&text=GetImagePerformanceCountOptionalParameter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract int getImagePerformanceCount(UUID projectId, UUID iterationId, GetImagePerformanceCountOptionalParameter getImagePerformanceCountOptionalParameter)"
  desc: "Gets the number of images tagged with the provided \\{tagIds\\} that have prediction results from training for the provided iteration \\{iterationId\\}. The filtering is on an and/or relationship. For example, if the provided tag ids are for the \"Dog\" and \"Cat\" tags, then only images tagged with Dog and/or Cat will be returned."
  returns:
    description: "the int object if successful."
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getImagePerformanceCountAsync(java.util.UUID,java.util.UUID,com.microsoft.azure.cognitiveservices.vision.customvision.training.models.GetImagePerformanceCountOptionalParameter)"
  fullName: "com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getImagePerformanceCountAsync(UUID projectId, UUID iterationId, GetImagePerformanceCountOptionalParameter getImagePerformanceCountOptionalParameter)"
  name: "getImagePerformanceCountAsync(UUID projectId, UUID iterationId, GetImagePerformanceCountOptionalParameter getImagePerformanceCountOptionalParameter)"
  nameWithType: "Trainings.getImagePerformanceCountAsync(UUID projectId, UUID iterationId, GetImagePerformanceCountOptionalParameter getImagePerformanceCountOptionalParameter)"
  summary: "Gets the number of images tagged with the provided \\{tag<wbr>Ids\\} that have prediction results from training for the provided iteration \\{iteration<wbr>Id\\}."
  modifiers:
  - "abstract"
  parameters:
  - description: "The project id."
    name: "projectId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/UUID.html\">UUID</a>"
  - description: "The iteration id. Defaults to workspace."
    name: "iterationId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/UUID.html\">UUID</a>"
  - description: "the object representing the optional parameters to be set before calling this API"
    name: "getImagePerformanceCountOptionalParameter"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.customvision.training.models.GetImagePerformanceCountOptionalParameter?alt=com.microsoft.azure.cognitiveservices.vision.customvision.training.models.GetImagePerformanceCountOptionalParameter&text=GetImagePerformanceCountOptionalParameter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<Integer> getImagePerformanceCountAsync(UUID projectId, UUID iterationId, GetImagePerformanceCountOptionalParameter getImagePerformanceCountOptionalParameter)"
  desc: "Gets the number of images tagged with the provided \\{tagIds\\} that have prediction results from training for the provided iteration \\{iterationId\\}. The filtering is on an and/or relationship. For example, if the provided tag ids are for the \"Dog\" and \"Cat\" tags, then only images tagged with Dog and/or Cat will be returned."
  returns:
    description: "the observable to the int object"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Integer.html\">Integer</a>&gt;"
- uid: "com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getImagePerformances()"
  fullName: "com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getImagePerformances()"
  name: "getImagePerformances()"
  nameWithType: "Trainings.getImagePerformances()"
  summary: "Get image with its prediction for a given project iteration."
  modifiers:
  - "abstract"
  syntax: "public abstract Trainings.TrainingsGetImagePerformancesDefinitionStages.WithProjectId getImagePerformances()"
  desc: "Get image with its prediction for a given project iteration. This API supports batching and range selection. By default it will only return first 50 images matching images. Use the \\{take\\} and \\{skip\\} parameters to control how many images to return in a given batch. The filtering is on an and/or relationship. For example, if the provided tag ids are for the \"Dog\" and \"Cat\" tags, then only images tagged with Dog and/or Cat will be returned."
  returns:
    description: "the first stage of the getImagePerformances call"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.TrainingsGetImagePerformancesDefinitionStages.WithProjectId?alt=com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.TrainingsGetImagePerformancesDefinitionStages.WithProjectId&text=WithProjectId\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getImagePerformances(java.util.UUID,java.util.UUID,com.microsoft.azure.cognitiveservices.vision.customvision.training.models.GetImagePerformancesOptionalParameter)"
  fullName: "com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getImagePerformances(UUID projectId, UUID iterationId, GetImagePerformancesOptionalParameter getImagePerformancesOptionalParameter)"
  name: "getImagePerformances(UUID projectId, UUID iterationId, GetImagePerformancesOptionalParameter getImagePerformancesOptionalParameter)"
  nameWithType: "Trainings.getImagePerformances(UUID projectId, UUID iterationId, GetImagePerformancesOptionalParameter getImagePerformancesOptionalParameter)"
  summary: "Get image with its prediction for a given project iteration."
  modifiers:
  - "abstract"
  parameters:
  - description: "The project id."
    name: "projectId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/UUID.html\">UUID</a>"
  - description: "The iteration id. Defaults to workspace."
    name: "iterationId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/UUID.html\">UUID</a>"
  - description: "the object representing the optional parameters to be set before calling this API"
    name: "getImagePerformancesOptionalParameter"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.customvision.training.models.GetImagePerformancesOptionalParameter?alt=com.microsoft.azure.cognitiveservices.vision.customvision.training.models.GetImagePerformancesOptionalParameter&text=GetImagePerformancesOptionalParameter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract List<ImagePerformance> getImagePerformances(UUID projectId, UUID iterationId, GetImagePerformancesOptionalParameter getImagePerformancesOptionalParameter)"
  desc: "Get image with its prediction for a given project iteration. This API supports batching and range selection. By default it will only return first 50 images matching images. Use the \\{take\\} and \\{skip\\} parameters to control how many images to return in a given batch. The filtering is on an and/or relationship. For example, if the provided tag ids are for the \"Dog\" and \"Cat\" tags, then only images tagged with Dog and/or Cat will be returned."
  returns:
    description: "the List&lt;ImagePerformance&gt; object if successful."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<xref href=\"com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImagePerformance?alt=com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImagePerformance&text=ImagePerformance\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getImagePerformancesAsync(java.util.UUID,java.util.UUID,com.microsoft.azure.cognitiveservices.vision.customvision.training.models.GetImagePerformancesOptionalParameter)"
  fullName: "com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getImagePerformancesAsync(UUID projectId, UUID iterationId, GetImagePerformancesOptionalParameter getImagePerformancesOptionalParameter)"
  name: "getImagePerformancesAsync(UUID projectId, UUID iterationId, GetImagePerformancesOptionalParameter getImagePerformancesOptionalParameter)"
  nameWithType: "Trainings.getImagePerformancesAsync(UUID projectId, UUID iterationId, GetImagePerformancesOptionalParameter getImagePerformancesOptionalParameter)"
  summary: "Get image with its prediction for a given project iteration."
  modifiers:
  - "abstract"
  parameters:
  - description: "The project id."
    name: "projectId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/UUID.html\">UUID</a>"
  - description: "The iteration id. Defaults to workspace."
    name: "iterationId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/UUID.html\">UUID</a>"
  - description: "the object representing the optional parameters to be set before calling this API"
    name: "getImagePerformancesOptionalParameter"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.customvision.training.models.GetImagePerformancesOptionalParameter?alt=com.microsoft.azure.cognitiveservices.vision.customvision.training.models.GetImagePerformancesOptionalParameter&text=GetImagePerformancesOptionalParameter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<List<ImagePerformance>> getImagePerformancesAsync(UUID projectId, UUID iterationId, GetImagePerformancesOptionalParameter getImagePerformancesOptionalParameter)"
  desc: "Get image with its prediction for a given project iteration. This API supports batching and range selection. By default it will only return first 50 images matching images. Use the \\{take\\} and \\{skip\\} parameters to control how many images to return in a given batch. The filtering is on an and/or relationship. For example, if the provided tag ids are for the \"Dog\" and \"Cat\" tags, then only images tagged with Dog and/or Cat will be returned."
  returns:
    description: "the observable to the List&lt;ImagePerformance&gt; object"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<xref href=\"com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImagePerformance?alt=com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImagePerformance&text=ImagePerformance\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getImageRegionProposals(java.util.UUID,java.util.UUID)"
  fullName: "com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getImageRegionProposals(UUID projectId, UUID imageId)"
  name: "getImageRegionProposals(UUID projectId, UUID imageId)"
  nameWithType: "Trainings.getImageRegionProposals(UUID projectId, UUID imageId)"
  summary: "Get region proposals for an image."
  modifiers:
  - "abstract"
  parameters:
  - description: "The project id."
    name: "projectId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/UUID.html\">UUID</a>"
  - description: "The image id."
    name: "imageId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/UUID.html\">UUID</a>"
  syntax: "public abstract ImageRegionProposal getImageRegionProposals(UUID projectId, UUID imageId)"
  desc: "Get region proposals for an image. Returns empty array if no proposals are found. This API will get region proposals for an image along with confidences for the region. It returns an empty array if no proposals are found."
  returns:
    description: "the ImageRegionProposal object if successful."
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImageRegionProposal?alt=com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImageRegionProposal&text=ImageRegionProposal\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getImageRegionProposalsAsync(java.util.UUID,java.util.UUID)"
  fullName: "com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getImageRegionProposalsAsync(UUID projectId, UUID imageId)"
  name: "getImageRegionProposalsAsync(UUID projectId, UUID imageId)"
  nameWithType: "Trainings.getImageRegionProposalsAsync(UUID projectId, UUID imageId)"
  summary: "Get region proposals for an image."
  modifiers:
  - "abstract"
  parameters:
  - description: "The project id."
    name: "projectId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/UUID.html\">UUID</a>"
  - description: "The image id."
    name: "imageId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/UUID.html\">UUID</a>"
  syntax: "public abstract Observable<ImageRegionProposal> getImageRegionProposalsAsync(UUID projectId, UUID imageId)"
  desc: "Get region proposals for an image. Returns empty array if no proposals are found. This API will get region proposals for an image along with confidences for the region. It returns an empty array if no proposals are found."
  returns:
    description: "the observable to the ImageRegionProposal object"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImageRegionProposal?alt=com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImageRegionProposal&text=ImageRegionProposal\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getImagesByIds()"
  fullName: "com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getImagesByIds()"
  name: "getImagesByIds()"
  nameWithType: "Trainings.getImagesByIds()"
  summary: "Get images by id for a given project iteration."
  modifiers:
  - "abstract"
  syntax: "public abstract Trainings.TrainingsGetImagesByIdsDefinitionStages.WithProjectId getImagesByIds()"
  desc: "Get images by id for a given project iteration. This API will return a set of Images for the specified tags and optionally iteration. If no iteration is specified the current workspace is used."
  returns:
    description: "the first stage of the getImagesByIds call"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.TrainingsGetImagesByIdsDefinitionStages.WithProjectId?alt=com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.TrainingsGetImagesByIdsDefinitionStages.WithProjectId&text=WithProjectId\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getImagesByIds(java.util.UUID,com.microsoft.azure.cognitiveservices.vision.customvision.training.models.GetImagesByIdsOptionalParameter)"
  fullName: "com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getImagesByIds(UUID projectId, GetImagesByIdsOptionalParameter getImagesByIdsOptionalParameter)"
  name: "getImagesByIds(UUID projectId, GetImagesByIdsOptionalParameter getImagesByIdsOptionalParameter)"
  nameWithType: "Trainings.getImagesByIds(UUID projectId, GetImagesByIdsOptionalParameter getImagesByIdsOptionalParameter)"
  summary: "Get images by id for a given project iteration."
  modifiers:
  - "abstract"
  parameters:
  - description: "The project id."
    name: "projectId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/UUID.html\">UUID</a>"
  - description: "the object representing the optional parameters to be set before calling this API"
    name: "getImagesByIdsOptionalParameter"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.customvision.training.models.GetImagesByIdsOptionalParameter?alt=com.microsoft.azure.cognitiveservices.vision.customvision.training.models.GetImagesByIdsOptionalParameter&text=GetImagesByIdsOptionalParameter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract List<Image> getImagesByIds(UUID projectId, GetImagesByIdsOptionalParameter getImagesByIdsOptionalParameter)"
  desc: "Get images by id for a given project iteration. This API will return a set of Images for the specified tags and optionally iteration. If no iteration is specified the current workspace is used."
  returns:
    description: "the List&lt;Image&gt; object if successful."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<xref href=\"com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Image?alt=com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Image&text=Image\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getImagesByIdsAsync(java.util.UUID,com.microsoft.azure.cognitiveservices.vision.customvision.training.models.GetImagesByIdsOptionalParameter)"
  fullName: "com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getImagesByIdsAsync(UUID projectId, GetImagesByIdsOptionalParameter getImagesByIdsOptionalParameter)"
  name: "getImagesByIdsAsync(UUID projectId, GetImagesByIdsOptionalParameter getImagesByIdsOptionalParameter)"
  nameWithType: "Trainings.getImagesByIdsAsync(UUID projectId, GetImagesByIdsOptionalParameter getImagesByIdsOptionalParameter)"
  summary: "Get images by id for a given project iteration."
  modifiers:
  - "abstract"
  parameters:
  - description: "The project id."
    name: "projectId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/UUID.html\">UUID</a>"
  - description: "the object representing the optional parameters to be set before calling this API"
    name: "getImagesByIdsOptionalParameter"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.customvision.training.models.GetImagesByIdsOptionalParameter?alt=com.microsoft.azure.cognitiveservices.vision.customvision.training.models.GetImagesByIdsOptionalParameter&text=GetImagesByIdsOptionalParameter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<List<Image>> getImagesByIdsAsync(UUID projectId, GetImagesByIdsOptionalParameter getImagesByIdsOptionalParameter)"
  desc: "Get images by id for a given project iteration. This API will return a set of Images for the specified tags and optionally iteration. If no iteration is specified the current workspace is used."
  returns:
    description: "the observable to the List&lt;Image&gt; object"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<xref href=\"com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Image?alt=com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Image&text=Image\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getIteration(java.util.UUID,java.util.UUID)"
  fullName: "com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getIteration(UUID projectId, UUID iterationId)"
  name: "getIteration(UUID projectId, UUID iterationId)"
  nameWithType: "Trainings.getIteration(UUID projectId, UUID iterationId)"
  summary: "Get a specific iteration."
  modifiers:
  - "abstract"
  parameters:
  - description: "The id of the project the iteration belongs to."
    name: "projectId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/UUID.html\">UUID</a>"
  - description: "The id of the iteration to get."
    name: "iterationId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/UUID.html\">UUID</a>"
  syntax: "public abstract Iteration getIteration(UUID projectId, UUID iterationId)"
  desc: "Get a specific iteration."
  returns:
    description: "the Iteration object if successful."
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Iteration?alt=com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Iteration&text=Iteration\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getIterationAsync(java.util.UUID,java.util.UUID)"
  fullName: "com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getIterationAsync(UUID projectId, UUID iterationId)"
  name: "getIterationAsync(UUID projectId, UUID iterationId)"
  nameWithType: "Trainings.getIterationAsync(UUID projectId, UUID iterationId)"
  summary: "Get a specific iteration."
  modifiers:
  - "abstract"
  parameters:
  - description: "The id of the project the iteration belongs to."
    name: "projectId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/UUID.html\">UUID</a>"
  - description: "The id of the iteration to get."
    name: "iterationId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/UUID.html\">UUID</a>"
  syntax: "public abstract Observable<Iteration> getIterationAsync(UUID projectId, UUID iterationId)"
  desc: "Get a specific iteration."
  returns:
    description: "the observable to the Iteration object"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Iteration?alt=com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Iteration&text=Iteration\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getIterationPerformance()"
  fullName: "com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getIterationPerformance()"
  name: "getIterationPerformance()"
  nameWithType: "Trainings.getIterationPerformance()"
  summary: "Get detailed performance information about an iteration."
  modifiers:
  - "abstract"
  syntax: "public abstract Trainings.TrainingsGetIterationPerformanceDefinitionStages.WithProjectId getIterationPerformance()"
  desc: "Get detailed performance information about an iteration."
  returns:
    description: "the first stage of the getIterationPerformance call"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.TrainingsGetIterationPerformanceDefinitionStages.WithProjectId?alt=com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.TrainingsGetIterationPerformanceDefinitionStages.WithProjectId&text=WithProjectId\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getIterationPerformance(java.util.UUID,java.util.UUID,com.microsoft.azure.cognitiveservices.vision.customvision.training.models.GetIterationPerformanceOptionalParameter)"
  fullName: "com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getIterationPerformance(UUID projectId, UUID iterationId, GetIterationPerformanceOptionalParameter getIterationPerformanceOptionalParameter)"
  name: "getIterationPerformance(UUID projectId, UUID iterationId, GetIterationPerformanceOptionalParameter getIterationPerformanceOptionalParameter)"
  nameWithType: "Trainings.getIterationPerformance(UUID projectId, UUID iterationId, GetIterationPerformanceOptionalParameter getIterationPerformanceOptionalParameter)"
  summary: "Get detailed performance information about an iteration."
  modifiers:
  - "abstract"
  parameters:
  - description: "The id of the project the iteration belongs to."
    name: "projectId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/UUID.html\">UUID</a>"
  - description: "The id of the iteration to get."
    name: "iterationId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/UUID.html\">UUID</a>"
  - description: "the object representing the optional parameters to be set before calling this API"
    name: "getIterationPerformanceOptionalParameter"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.customvision.training.models.GetIterationPerformanceOptionalParameter?alt=com.microsoft.azure.cognitiveservices.vision.customvision.training.models.GetIterationPerformanceOptionalParameter&text=GetIterationPerformanceOptionalParameter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract IterationPerformance getIterationPerformance(UUID projectId, UUID iterationId, GetIterationPerformanceOptionalParameter getIterationPerformanceOptionalParameter)"
  desc: "Get detailed performance information about an iteration."
  returns:
    description: "the IterationPerformance object if successful."
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.customvision.training.models.IterationPerformance?alt=com.microsoft.azure.cognitiveservices.vision.customvision.training.models.IterationPerformance&text=IterationPerformance\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getIterationPerformanceAsync(java.util.UUID,java.util.UUID,com.microsoft.azure.cognitiveservices.vision.customvision.training.models.GetIterationPerformanceOptionalParameter)"
  fullName: "com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getIterationPerformanceAsync(UUID projectId, UUID iterationId, GetIterationPerformanceOptionalParameter getIterationPerformanceOptionalParameter)"
  name: "getIterationPerformanceAsync(UUID projectId, UUID iterationId, GetIterationPerformanceOptionalParameter getIterationPerformanceOptionalParameter)"
  nameWithType: "Trainings.getIterationPerformanceAsync(UUID projectId, UUID iterationId, GetIterationPerformanceOptionalParameter getIterationPerformanceOptionalParameter)"
  summary: "Get detailed performance information about an iteration."
  modifiers:
  - "abstract"
  parameters:
  - description: "The id of the project the iteration belongs to."
    name: "projectId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/UUID.html\">UUID</a>"
  - description: "The id of the iteration to get."
    name: "iterationId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/UUID.html\">UUID</a>"
  - description: "the object representing the optional parameters to be set before calling this API"
    name: "getIterationPerformanceOptionalParameter"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.customvision.training.models.GetIterationPerformanceOptionalParameter?alt=com.microsoft.azure.cognitiveservices.vision.customvision.training.models.GetIterationPerformanceOptionalParameter&text=GetIterationPerformanceOptionalParameter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<IterationPerformance> getIterationPerformanceAsync(UUID projectId, UUID iterationId, GetIterationPerformanceOptionalParameter getIterationPerformanceOptionalParameter)"
  desc: "Get detailed performance information about an iteration."
  returns:
    description: "the observable to the IterationPerformance object"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.cognitiveservices.vision.customvision.training.models.IterationPerformance?alt=com.microsoft.azure.cognitiveservices.vision.customvision.training.models.IterationPerformance&text=IterationPerformance\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getIterations(java.util.UUID)"
  fullName: "com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getIterations(UUID projectId)"
  name: "getIterations(UUID projectId)"
  nameWithType: "Trainings.getIterations(UUID projectId)"
  summary: "Get iterations for the project."
  modifiers:
  - "abstract"
  parameters:
  - description: "The project id."
    name: "projectId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/UUID.html\">UUID</a>"
  syntax: "public abstract List<Iteration> getIterations(UUID projectId)"
  desc: "Get iterations for the project."
  returns:
    description: "the List&lt;Iteration&gt; object if successful."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<xref href=\"com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Iteration?alt=com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Iteration&text=Iteration\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getIterationsAsync(java.util.UUID)"
  fullName: "com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getIterationsAsync(UUID projectId)"
  name: "getIterationsAsync(UUID projectId)"
  nameWithType: "Trainings.getIterationsAsync(UUID projectId)"
  summary: "Get iterations for the project."
  modifiers:
  - "abstract"
  parameters:
  - description: "The project id."
    name: "projectId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/UUID.html\">UUID</a>"
  syntax: "public abstract Observable<List<Iteration>> getIterationsAsync(UUID projectId)"
  desc: "Get iterations for the project."
  returns:
    description: "the observable to the List&lt;Iteration&gt; object"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<xref href=\"com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Iteration?alt=com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Iteration&text=Iteration\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getProject(java.util.UUID)"
  fullName: "com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getProject(UUID projectId)"
  name: "getProject(UUID projectId)"
  nameWithType: "Trainings.getProject(UUID projectId)"
  summary: "Get a specific project."
  modifiers:
  - "abstract"
  parameters:
  - description: "The id of the project to get."
    name: "projectId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/UUID.html\">UUID</a>"
  syntax: "public abstract Project getProject(UUID projectId)"
  desc: "Get a specific project."
  returns:
    description: "the Project object if successful."
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Project?alt=com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Project&text=Project\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getProjectAsync(java.util.UUID)"
  fullName: "com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getProjectAsync(UUID projectId)"
  name: "getProjectAsync(UUID projectId)"
  nameWithType: "Trainings.getProjectAsync(UUID projectId)"
  summary: "Get a specific project."
  modifiers:
  - "abstract"
  parameters:
  - description: "The id of the project to get."
    name: "projectId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/UUID.html\">UUID</a>"
  syntax: "public abstract Observable<Project> getProjectAsync(UUID projectId)"
  desc: "Get a specific project."
  returns:
    description: "the observable to the Project object"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Project?alt=com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Project&text=Project\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getProjects()"
  fullName: "com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getProjects()"
  name: "getProjects()"
  nameWithType: "Trainings.getProjects()"
  summary: "Get your projects."
  modifiers:
  - "abstract"
  syntax: "public abstract List<Project> getProjects()"
  desc: "Get your projects."
  returns:
    description: "the List&lt;Project&gt; object if successful."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<xref href=\"com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Project?alt=com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Project&text=Project\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getProjectsAsync()"
  fullName: "com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getProjectsAsync()"
  name: "getProjectsAsync()"
  nameWithType: "Trainings.getProjectsAsync()"
  summary: "Get your projects."
  modifiers:
  - "abstract"
  syntax: "public abstract Observable<List<Project>> getProjectsAsync()"
  desc: "Get your projects."
  returns:
    description: "the observable to the List&lt;Project&gt; object"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<xref href=\"com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Project?alt=com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Project&text=Project\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getTag()"
  fullName: "com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getTag()"
  name: "getTag()"
  nameWithType: "Trainings.getTag()"
  summary: "Get information about a specific tag."
  modifiers:
  - "abstract"
  syntax: "public abstract Trainings.TrainingsGetTagDefinitionStages.WithProjectId getTag()"
  desc: "Get information about a specific tag."
  returns:
    description: "the first stage of the getTag call"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.TrainingsGetTagDefinitionStages.WithProjectId?alt=com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.TrainingsGetTagDefinitionStages.WithProjectId&text=WithProjectId\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getTag(java.util.UUID,java.util.UUID,com.microsoft.azure.cognitiveservices.vision.customvision.training.models.GetTagOptionalParameter)"
  fullName: "com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getTag(UUID projectId, UUID tagId, GetTagOptionalParameter getTagOptionalParameter)"
  name: "getTag(UUID projectId, UUID tagId, GetTagOptionalParameter getTagOptionalParameter)"
  nameWithType: "Trainings.getTag(UUID projectId, UUID tagId, GetTagOptionalParameter getTagOptionalParameter)"
  summary: "Get information about a specific tag."
  modifiers:
  - "abstract"
  parameters:
  - description: "The project this tag belongs to."
    name: "projectId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/UUID.html\">UUID</a>"
  - description: "The tag id."
    name: "tagId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/UUID.html\">UUID</a>"
  - description: "the object representing the optional parameters to be set before calling this API"
    name: "getTagOptionalParameter"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.customvision.training.models.GetTagOptionalParameter?alt=com.microsoft.azure.cognitiveservices.vision.customvision.training.models.GetTagOptionalParameter&text=GetTagOptionalParameter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Tag getTag(UUID projectId, UUID tagId, GetTagOptionalParameter getTagOptionalParameter)"
  desc: "Get information about a specific tag."
  returns:
    description: "the Tag object if successful."
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Tag?alt=com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Tag&text=Tag\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getTagAsync(java.util.UUID,java.util.UUID,com.microsoft.azure.cognitiveservices.vision.customvision.training.models.GetTagOptionalParameter)"
  fullName: "com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getTagAsync(UUID projectId, UUID tagId, GetTagOptionalParameter getTagOptionalParameter)"
  name: "getTagAsync(UUID projectId, UUID tagId, GetTagOptionalParameter getTagOptionalParameter)"
  nameWithType: "Trainings.getTagAsync(UUID projectId, UUID tagId, GetTagOptionalParameter getTagOptionalParameter)"
  summary: "Get information about a specific tag."
  modifiers:
  - "abstract"
  parameters:
  - description: "The project this tag belongs to."
    name: "projectId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/UUID.html\">UUID</a>"
  - description: "The tag id."
    name: "tagId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/UUID.html\">UUID</a>"
  - description: "the object representing the optional parameters to be set before calling this API"
    name: "getTagOptionalParameter"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.customvision.training.models.GetTagOptionalParameter?alt=com.microsoft.azure.cognitiveservices.vision.customvision.training.models.GetTagOptionalParameter&text=GetTagOptionalParameter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<Tag> getTagAsync(UUID projectId, UUID tagId, GetTagOptionalParameter getTagOptionalParameter)"
  desc: "Get information about a specific tag."
  returns:
    description: "the observable to the Tag object"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Tag?alt=com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Tag&text=Tag\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getTaggedImageCount()"
  fullName: "com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getTaggedImageCount()"
  name: "getTaggedImageCount()"
  nameWithType: "Trainings.getTaggedImageCount()"
  summary: "Gets the number of images tagged with the provided \\{tag<wbr>Ids\\}."
  modifiers:
  - "abstract"
  syntax: "public abstract Trainings.TrainingsGetTaggedImageCountDefinitionStages.WithProjectId getTaggedImageCount()"
  desc: "Gets the number of images tagged with the provided \\{tagIds\\}. The filtering is on an and/or relationship. For example, if the provided tag ids are for the \"Dog\" and \"Cat\" tags, then only images tagged with Dog and/or Cat will be returned."
  returns:
    description: "the first stage of the getTaggedImageCount call"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.TrainingsGetTaggedImageCountDefinitionStages.WithProjectId?alt=com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.TrainingsGetTaggedImageCountDefinitionStages.WithProjectId&text=WithProjectId\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getTaggedImageCount(java.util.UUID,com.microsoft.azure.cognitiveservices.vision.customvision.training.models.GetTaggedImageCountOptionalParameter)"
  fullName: "com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getTaggedImageCount(UUID projectId, GetTaggedImageCountOptionalParameter getTaggedImageCountOptionalParameter)"
  name: "getTaggedImageCount(UUID projectId, GetTaggedImageCountOptionalParameter getTaggedImageCountOptionalParameter)"
  nameWithType: "Trainings.getTaggedImageCount(UUID projectId, GetTaggedImageCountOptionalParameter getTaggedImageCountOptionalParameter)"
  summary: "Gets the number of images tagged with the provided \\{tag<wbr>Ids\\}."
  modifiers:
  - "abstract"
  parameters:
  - description: "The project id."
    name: "projectId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/UUID.html\">UUID</a>"
  - description: "the object representing the optional parameters to be set before calling this API"
    name: "getTaggedImageCountOptionalParameter"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.customvision.training.models.GetTaggedImageCountOptionalParameter?alt=com.microsoft.azure.cognitiveservices.vision.customvision.training.models.GetTaggedImageCountOptionalParameter&text=GetTaggedImageCountOptionalParameter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract int getTaggedImageCount(UUID projectId, GetTaggedImageCountOptionalParameter getTaggedImageCountOptionalParameter)"
  desc: "Gets the number of images tagged with the provided \\{tagIds\\}. The filtering is on an and/or relationship. For example, if the provided tag ids are for the \"Dog\" and \"Cat\" tags, then only images tagged with Dog and/or Cat will be returned."
  returns:
    description: "the int object if successful."
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getTaggedImageCountAsync(java.util.UUID,com.microsoft.azure.cognitiveservices.vision.customvision.training.models.GetTaggedImageCountOptionalParameter)"
  fullName: "com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getTaggedImageCountAsync(UUID projectId, GetTaggedImageCountOptionalParameter getTaggedImageCountOptionalParameter)"
  name: "getTaggedImageCountAsync(UUID projectId, GetTaggedImageCountOptionalParameter getTaggedImageCountOptionalParameter)"
  nameWithType: "Trainings.getTaggedImageCountAsync(UUID projectId, GetTaggedImageCountOptionalParameter getTaggedImageCountOptionalParameter)"
  summary: "Gets the number of images tagged with the provided \\{tag<wbr>Ids\\}."
  modifiers:
  - "abstract"
  parameters:
  - description: "The project id."
    name: "projectId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/UUID.html\">UUID</a>"
  - description: "the object representing the optional parameters to be set before calling this API"
    name: "getTaggedImageCountOptionalParameter"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.customvision.training.models.GetTaggedImageCountOptionalParameter?alt=com.microsoft.azure.cognitiveservices.vision.customvision.training.models.GetTaggedImageCountOptionalParameter&text=GetTaggedImageCountOptionalParameter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<Integer> getTaggedImageCountAsync(UUID projectId, GetTaggedImageCountOptionalParameter getTaggedImageCountOptionalParameter)"
  desc: "Gets the number of images tagged with the provided \\{tagIds\\}. The filtering is on an and/or relationship. For example, if the provided tag ids are for the \"Dog\" and \"Cat\" tags, then only images tagged with Dog and/or Cat will be returned."
  returns:
    description: "the observable to the int object"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Integer.html\">Integer</a>&gt;"
- uid: "com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getTaggedImages()"
  fullName: "com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getTaggedImages()"
  name: "getTaggedImages()"
  nameWithType: "Trainings.getTaggedImages()"
  summary: "Get tagged images for a given project iteration."
  modifiers:
  - "abstract"
  syntax: "public abstract Trainings.TrainingsGetTaggedImagesDefinitionStages.WithProjectId getTaggedImages()"
  desc: "Get tagged images for a given project iteration. This API supports batching and range selection. By default it will only return first 50 images matching images. Use the \\{take\\} and \\{skip\\} parameters to control how many images to return in a given batch. The filtering is on an and/or relationship. For example, if the provided tag ids are for the \"Dog\" and \"Cat\" tags, then only images tagged with Dog and/or Cat will be returned."
  returns:
    description: "the first stage of the getTaggedImages call"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.TrainingsGetTaggedImagesDefinitionStages.WithProjectId?alt=com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.TrainingsGetTaggedImagesDefinitionStages.WithProjectId&text=WithProjectId\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getTaggedImages(java.util.UUID,com.microsoft.azure.cognitiveservices.vision.customvision.training.models.GetTaggedImagesOptionalParameter)"
  fullName: "com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getTaggedImages(UUID projectId, GetTaggedImagesOptionalParameter getTaggedImagesOptionalParameter)"
  name: "getTaggedImages(UUID projectId, GetTaggedImagesOptionalParameter getTaggedImagesOptionalParameter)"
  nameWithType: "Trainings.getTaggedImages(UUID projectId, GetTaggedImagesOptionalParameter getTaggedImagesOptionalParameter)"
  summary: "Get tagged images for a given project iteration."
  modifiers:
  - "abstract"
  parameters:
  - description: "The project id."
    name: "projectId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/UUID.html\">UUID</a>"
  - description: "the object representing the optional parameters to be set before calling this API"
    name: "getTaggedImagesOptionalParameter"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.customvision.training.models.GetTaggedImagesOptionalParameter?alt=com.microsoft.azure.cognitiveservices.vision.customvision.training.models.GetTaggedImagesOptionalParameter&text=GetTaggedImagesOptionalParameter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract List<Image> getTaggedImages(UUID projectId, GetTaggedImagesOptionalParameter getTaggedImagesOptionalParameter)"
  desc: "Get tagged images for a given project iteration. This API supports batching and range selection. By default it will only return first 50 images matching images. Use the \\{take\\} and \\{skip\\} parameters to control how many images to return in a given batch. The filtering is on an and/or relationship. For example, if the provided tag ids are for the \"Dog\" and \"Cat\" tags, then only images tagged with Dog and/or Cat will be returned."
  returns:
    description: "the List&lt;Image&gt; object if successful."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<xref href=\"com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Image?alt=com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Image&text=Image\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getTaggedImagesAsync(java.util.UUID,com.microsoft.azure.cognitiveservices.vision.customvision.training.models.GetTaggedImagesOptionalParameter)"
  fullName: "com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getTaggedImagesAsync(UUID projectId, GetTaggedImagesOptionalParameter getTaggedImagesOptionalParameter)"
  name: "getTaggedImagesAsync(UUID projectId, GetTaggedImagesOptionalParameter getTaggedImagesOptionalParameter)"
  nameWithType: "Trainings.getTaggedImagesAsync(UUID projectId, GetTaggedImagesOptionalParameter getTaggedImagesOptionalParameter)"
  summary: "Get tagged images for a given project iteration."
  modifiers:
  - "abstract"
  parameters:
  - description: "The project id."
    name: "projectId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/UUID.html\">UUID</a>"
  - description: "the object representing the optional parameters to be set before calling this API"
    name: "getTaggedImagesOptionalParameter"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.customvision.training.models.GetTaggedImagesOptionalParameter?alt=com.microsoft.azure.cognitiveservices.vision.customvision.training.models.GetTaggedImagesOptionalParameter&text=GetTaggedImagesOptionalParameter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<List<Image>> getTaggedImagesAsync(UUID projectId, GetTaggedImagesOptionalParameter getTaggedImagesOptionalParameter)"
  desc: "Get tagged images for a given project iteration. This API supports batching and range selection. By default it will only return first 50 images matching images. Use the \\{take\\} and \\{skip\\} parameters to control how many images to return in a given batch. The filtering is on an and/or relationship. For example, if the provided tag ids are for the \"Dog\" and \"Cat\" tags, then only images tagged with Dog and/or Cat will be returned."
  returns:
    description: "the observable to the List&lt;Image&gt; object"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<xref href=\"com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Image?alt=com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Image&text=Image\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getTags()"
  fullName: "com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getTags()"
  name: "getTags()"
  nameWithType: "Trainings.getTags()"
  summary: "Get the tags for a given project and iteration."
  modifiers:
  - "abstract"
  syntax: "public abstract Trainings.TrainingsGetTagsDefinitionStages.WithProjectId getTags()"
  desc: "Get the tags for a given project and iteration."
  returns:
    description: "the first stage of the getTags call"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.TrainingsGetTagsDefinitionStages.WithProjectId?alt=com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.TrainingsGetTagsDefinitionStages.WithProjectId&text=WithProjectId\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getTags(java.util.UUID,com.microsoft.azure.cognitiveservices.vision.customvision.training.models.GetTagsOptionalParameter)"
  fullName: "com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getTags(UUID projectId, GetTagsOptionalParameter getTagsOptionalParameter)"
  name: "getTags(UUID projectId, GetTagsOptionalParameter getTagsOptionalParameter)"
  nameWithType: "Trainings.getTags(UUID projectId, GetTagsOptionalParameter getTagsOptionalParameter)"
  summary: "Get the tags for a given project and iteration."
  modifiers:
  - "abstract"
  parameters:
  - description: "The project id."
    name: "projectId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/UUID.html\">UUID</a>"
  - description: "the object representing the optional parameters to be set before calling this API"
    name: "getTagsOptionalParameter"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.customvision.training.models.GetTagsOptionalParameter?alt=com.microsoft.azure.cognitiveservices.vision.customvision.training.models.GetTagsOptionalParameter&text=GetTagsOptionalParameter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract List<Tag> getTags(UUID projectId, GetTagsOptionalParameter getTagsOptionalParameter)"
  desc: "Get the tags for a given project and iteration."
  returns:
    description: "the List&lt;Tag&gt; object if successful."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<xref href=\"com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Tag?alt=com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Tag&text=Tag\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getTagsAsync(java.util.UUID,com.microsoft.azure.cognitiveservices.vision.customvision.training.models.GetTagsOptionalParameter)"
  fullName: "com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getTagsAsync(UUID projectId, GetTagsOptionalParameter getTagsOptionalParameter)"
  name: "getTagsAsync(UUID projectId, GetTagsOptionalParameter getTagsOptionalParameter)"
  nameWithType: "Trainings.getTagsAsync(UUID projectId, GetTagsOptionalParameter getTagsOptionalParameter)"
  summary: "Get the tags for a given project and iteration."
  modifiers:
  - "abstract"
  parameters:
  - description: "The project id."
    name: "projectId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/UUID.html\">UUID</a>"
  - description: "the object representing the optional parameters to be set before calling this API"
    name: "getTagsOptionalParameter"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.customvision.training.models.GetTagsOptionalParameter?alt=com.microsoft.azure.cognitiveservices.vision.customvision.training.models.GetTagsOptionalParameter&text=GetTagsOptionalParameter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<List<Tag>> getTagsAsync(UUID projectId, GetTagsOptionalParameter getTagsOptionalParameter)"
  desc: "Get the tags for a given project and iteration."
  returns:
    description: "the observable to the List&lt;Tag&gt; object"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<xref href=\"com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Tag?alt=com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Tag&text=Tag\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getUntaggedImageCount()"
  fullName: "com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getUntaggedImageCount()"
  name: "getUntaggedImageCount()"
  nameWithType: "Trainings.getUntaggedImageCount()"
  summary: "Gets the number of untagged images."
  modifiers:
  - "abstract"
  syntax: "public abstract Trainings.TrainingsGetUntaggedImageCountDefinitionStages.WithProjectId getUntaggedImageCount()"
  desc: "Gets the number of untagged images. This API returns the images which have no tags for a given project and optionally an iteration. If no iteration is specified the current workspace is used."
  returns:
    description: "the first stage of the getUntaggedImageCount call"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.TrainingsGetUntaggedImageCountDefinitionStages.WithProjectId?alt=com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.TrainingsGetUntaggedImageCountDefinitionStages.WithProjectId&text=WithProjectId\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getUntaggedImageCount(java.util.UUID,com.microsoft.azure.cognitiveservices.vision.customvision.training.models.GetUntaggedImageCountOptionalParameter)"
  fullName: "com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getUntaggedImageCount(UUID projectId, GetUntaggedImageCountOptionalParameter getUntaggedImageCountOptionalParameter)"
  name: "getUntaggedImageCount(UUID projectId, GetUntaggedImageCountOptionalParameter getUntaggedImageCountOptionalParameter)"
  nameWithType: "Trainings.getUntaggedImageCount(UUID projectId, GetUntaggedImageCountOptionalParameter getUntaggedImageCountOptionalParameter)"
  summary: "Gets the number of untagged images."
  modifiers:
  - "abstract"
  parameters:
  - description: "The project id."
    name: "projectId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/UUID.html\">UUID</a>"
  - description: "the object representing the optional parameters to be set before calling this API"
    name: "getUntaggedImageCountOptionalParameter"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.customvision.training.models.GetUntaggedImageCountOptionalParameter?alt=com.microsoft.azure.cognitiveservices.vision.customvision.training.models.GetUntaggedImageCountOptionalParameter&text=GetUntaggedImageCountOptionalParameter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract int getUntaggedImageCount(UUID projectId, GetUntaggedImageCountOptionalParameter getUntaggedImageCountOptionalParameter)"
  desc: "Gets the number of untagged images. This API returns the images which have no tags for a given project and optionally an iteration. If no iteration is specified the current workspace is used."
  returns:
    description: "the int object if successful."
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getUntaggedImageCountAsync(java.util.UUID,com.microsoft.azure.cognitiveservices.vision.customvision.training.models.GetUntaggedImageCountOptionalParameter)"
  fullName: "com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getUntaggedImageCountAsync(UUID projectId, GetUntaggedImageCountOptionalParameter getUntaggedImageCountOptionalParameter)"
  name: "getUntaggedImageCountAsync(UUID projectId, GetUntaggedImageCountOptionalParameter getUntaggedImageCountOptionalParameter)"
  nameWithType: "Trainings.getUntaggedImageCountAsync(UUID projectId, GetUntaggedImageCountOptionalParameter getUntaggedImageCountOptionalParameter)"
  summary: "Gets the number of untagged images."
  modifiers:
  - "abstract"
  parameters:
  - description: "The project id."
    name: "projectId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/UUID.html\">UUID</a>"
  - description: "the object representing the optional parameters to be set before calling this API"
    name: "getUntaggedImageCountOptionalParameter"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.customvision.training.models.GetUntaggedImageCountOptionalParameter?alt=com.microsoft.azure.cognitiveservices.vision.customvision.training.models.GetUntaggedImageCountOptionalParameter&text=GetUntaggedImageCountOptionalParameter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<Integer> getUntaggedImageCountAsync(UUID projectId, GetUntaggedImageCountOptionalParameter getUntaggedImageCountOptionalParameter)"
  desc: "Gets the number of untagged images. This API returns the images which have no tags for a given project and optionally an iteration. If no iteration is specified the current workspace is used."
  returns:
    description: "the observable to the int object"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Integer.html\">Integer</a>&gt;"
- uid: "com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getUntaggedImages()"
  fullName: "com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getUntaggedImages()"
  name: "getUntaggedImages()"
  nameWithType: "Trainings.getUntaggedImages()"
  summary: "Get untagged images for a given project iteration."
  modifiers:
  - "abstract"
  syntax: "public abstract Trainings.TrainingsGetUntaggedImagesDefinitionStages.WithProjectId getUntaggedImages()"
  desc: "Get untagged images for a given project iteration. This API supports batching and range selection. By default it will only return first 50 images matching images. Use the \\{take\\} and \\{skip\\} parameters to control how many images to return in a given batch."
  returns:
    description: "the first stage of the getUntaggedImages call"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.TrainingsGetUntaggedImagesDefinitionStages.WithProjectId?alt=com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.TrainingsGetUntaggedImagesDefinitionStages.WithProjectId&text=WithProjectId\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getUntaggedImages(java.util.UUID,com.microsoft.azure.cognitiveservices.vision.customvision.training.models.GetUntaggedImagesOptionalParameter)"
  fullName: "com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getUntaggedImages(UUID projectId, GetUntaggedImagesOptionalParameter getUntaggedImagesOptionalParameter)"
  name: "getUntaggedImages(UUID projectId, GetUntaggedImagesOptionalParameter getUntaggedImagesOptionalParameter)"
  nameWithType: "Trainings.getUntaggedImages(UUID projectId, GetUntaggedImagesOptionalParameter getUntaggedImagesOptionalParameter)"
  summary: "Get untagged images for a given project iteration."
  modifiers:
  - "abstract"
  parameters:
  - description: "The project id."
    name: "projectId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/UUID.html\">UUID</a>"
  - description: "the object representing the optional parameters to be set before calling this API"
    name: "getUntaggedImagesOptionalParameter"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.customvision.training.models.GetUntaggedImagesOptionalParameter?alt=com.microsoft.azure.cognitiveservices.vision.customvision.training.models.GetUntaggedImagesOptionalParameter&text=GetUntaggedImagesOptionalParameter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract List<Image> getUntaggedImages(UUID projectId, GetUntaggedImagesOptionalParameter getUntaggedImagesOptionalParameter)"
  desc: "Get untagged images for a given project iteration. This API supports batching and range selection. By default it will only return first 50 images matching images. Use the \\{take\\} and \\{skip\\} parameters to control how many images to return in a given batch."
  returns:
    description: "the List&lt;Image&gt; object if successful."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<xref href=\"com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Image?alt=com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Image&text=Image\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getUntaggedImagesAsync(java.util.UUID,com.microsoft.azure.cognitiveservices.vision.customvision.training.models.GetUntaggedImagesOptionalParameter)"
  fullName: "com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getUntaggedImagesAsync(UUID projectId, GetUntaggedImagesOptionalParameter getUntaggedImagesOptionalParameter)"
  name: "getUntaggedImagesAsync(UUID projectId, GetUntaggedImagesOptionalParameter getUntaggedImagesOptionalParameter)"
  nameWithType: "Trainings.getUntaggedImagesAsync(UUID projectId, GetUntaggedImagesOptionalParameter getUntaggedImagesOptionalParameter)"
  summary: "Get untagged images for a given project iteration."
  modifiers:
  - "abstract"
  parameters:
  - description: "The project id."
    name: "projectId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/UUID.html\">UUID</a>"
  - description: "the object representing the optional parameters to be set before calling this API"
    name: "getUntaggedImagesOptionalParameter"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.customvision.training.models.GetUntaggedImagesOptionalParameter?alt=com.microsoft.azure.cognitiveservices.vision.customvision.training.models.GetUntaggedImagesOptionalParameter&text=GetUntaggedImagesOptionalParameter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<List<Image>> getUntaggedImagesAsync(UUID projectId, GetUntaggedImagesOptionalParameter getUntaggedImagesOptionalParameter)"
  desc: "Get untagged images for a given project iteration. This API supports batching and range selection. By default it will only return first 50 images matching images. Use the \\{take\\} and \\{skip\\} parameters to control how many images to return in a given batch."
  returns:
    description: "the observable to the List&lt;Image&gt; object"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<xref href=\"com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Image?alt=com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Image&text=Image\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.publishIteration(java.util.UUID,java.util.UUID,java.lang.String,java.lang.String)"
  fullName: "com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.publishIteration(UUID projectId, UUID iterationId, String publishName, String predictionId)"
  name: "publishIteration(UUID projectId, UUID iterationId, String publishName, String predictionId)"
  nameWithType: "Trainings.publishIteration(UUID projectId, UUID iterationId, String publishName, String predictionId)"
  summary: "Publish a specific iteration."
  modifiers:
  - "abstract"
  parameters:
  - description: "The project id."
    name: "projectId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/UUID.html\">UUID</a>"
  - description: "The iteration id."
    name: "iterationId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/UUID.html\">UUID</a>"
  - description: "The name to give the published iteration."
    name: "publishName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The id of the prediction resource to publish to."
    name: "predictionId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract boolean publishIteration(UUID projectId, UUID iterationId, String publishName, String predictionId)"
  desc: "Publish a specific iteration."
  returns:
    description: "the boolean object if successful."
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.publishIterationAsync(java.util.UUID,java.util.UUID,java.lang.String,java.lang.String)"
  fullName: "com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.publishIterationAsync(UUID projectId, UUID iterationId, String publishName, String predictionId)"
  name: "publishIterationAsync(UUID projectId, UUID iterationId, String publishName, String predictionId)"
  nameWithType: "Trainings.publishIterationAsync(UUID projectId, UUID iterationId, String publishName, String predictionId)"
  summary: "Publish a specific iteration."
  modifiers:
  - "abstract"
  parameters:
  - description: "The project id."
    name: "projectId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/UUID.html\">UUID</a>"
  - description: "The iteration id."
    name: "iterationId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/UUID.html\">UUID</a>"
  - description: "The name to give the published iteration."
    name: "publishName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The id of the prediction resource to publish to."
    name: "predictionId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract Observable<Boolean> publishIterationAsync(UUID projectId, UUID iterationId, String publishName, String predictionId)"
  desc: "Publish a specific iteration."
  returns:
    description: "the observable to the boolean object"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Boolean.html\">Boolean</a>&gt;"
- uid: "com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.queryPredictions(java.util.UUID,com.microsoft.azure.cognitiveservices.vision.customvision.training.models.PredictionQueryToken)"
  fullName: "com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.queryPredictions(UUID projectId, PredictionQueryToken query)"
  name: "queryPredictions(UUID projectId, PredictionQueryToken query)"
  nameWithType: "Trainings.queryPredictions(UUID projectId, PredictionQueryToken query)"
  summary: "Get images that were sent to your prediction endpoint."
  modifiers:
  - "abstract"
  parameters:
  - description: "The project id."
    name: "projectId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/UUID.html\">UUID</a>"
  - description: "Parameters used to query the predictions. Limited to combining 2 tags."
    name: "query"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.customvision.training.models.PredictionQueryToken?alt=com.microsoft.azure.cognitiveservices.vision.customvision.training.models.PredictionQueryToken&text=PredictionQueryToken\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PredictionQueryResult queryPredictions(UUID projectId, PredictionQueryToken query)"
  desc: "Get images that were sent to your prediction endpoint."
  returns:
    description: "the PredictionQueryResult object if successful."
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.customvision.training.models.PredictionQueryResult?alt=com.microsoft.azure.cognitiveservices.vision.customvision.training.models.PredictionQueryResult&text=PredictionQueryResult\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.queryPredictionsAsync(java.util.UUID,com.microsoft.azure.cognitiveservices.vision.customvision.training.models.PredictionQueryToken)"
  fullName: "com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.queryPredictionsAsync(UUID projectId, PredictionQueryToken query)"
  name: "queryPredictionsAsync(UUID projectId, PredictionQueryToken query)"
  nameWithType: "Trainings.queryPredictionsAsync(UUID projectId, PredictionQueryToken query)"
  summary: "Get images that were sent to your prediction endpoint."
  modifiers:
  - "abstract"
  parameters:
  - description: "The project id."
    name: "projectId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/UUID.html\">UUID</a>"
  - description: "Parameters used to query the predictions. Limited to combining 2 tags."
    name: "query"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.customvision.training.models.PredictionQueryToken?alt=com.microsoft.azure.cognitiveservices.vision.customvision.training.models.PredictionQueryToken&text=PredictionQueryToken\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<PredictionQueryResult> queryPredictionsAsync(UUID projectId, PredictionQueryToken query)"
  desc: "Get images that were sent to your prediction endpoint."
  returns:
    description: "the observable to the PredictionQueryResult object"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.cognitiveservices.vision.customvision.training.models.PredictionQueryResult?alt=com.microsoft.azure.cognitiveservices.vision.customvision.training.models.PredictionQueryResult&text=PredictionQueryResult\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.quickTestImage()"
  fullName: "com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.quickTestImage()"
  name: "quickTestImage()"
  nameWithType: "Trainings.quickTestImage()"
  summary: "Quick test an image."
  modifiers:
  - "abstract"
  syntax: "public abstract Trainings.TrainingsQuickTestImageDefinitionStages.WithProjectId quickTestImage()"
  desc: "Quick test an image."
  returns:
    description: "the first stage of the quickTestImage call"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.TrainingsQuickTestImageDefinitionStages.WithProjectId?alt=com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.TrainingsQuickTestImageDefinitionStages.WithProjectId&text=WithProjectId\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.quickTestImage(java.util.UUID,byte[],com.microsoft.azure.cognitiveservices.vision.customvision.training.models.QuickTestImageOptionalParameter)"
  fullName: "com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.quickTestImage(UUID projectId, byte[] imageData, QuickTestImageOptionalParameter quickTestImageOptionalParameter)"
  name: "quickTestImage(UUID projectId, byte[] imageData, QuickTestImageOptionalParameter quickTestImageOptionalParameter)"
  nameWithType: "Trainings.quickTestImage(UUID projectId, byte[] imageData, QuickTestImageOptionalParameter quickTestImageOptionalParameter)"
  summary: "Quick test an image."
  modifiers:
  - "abstract"
  parameters:
  - description: "The project id."
    name: "projectId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/UUID.html\">UUID</a>"
  - description: "Binary image data. Supported formats are JPEG, GIF, PNG, and BMP. Supports images up to 6MB."
    name: "imageData"
    type: "<xref href=\"byte?alt=byte&text=byte\" data-throw-if-not-resolved=\"False\" />[]"
  - description: "the object representing the optional parameters to be set before calling this API"
    name: "quickTestImageOptionalParameter"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.customvision.training.models.QuickTestImageOptionalParameter?alt=com.microsoft.azure.cognitiveservices.vision.customvision.training.models.QuickTestImageOptionalParameter&text=QuickTestImageOptionalParameter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract ImagePrediction quickTestImage(UUID projectId, byte[] imageData, QuickTestImageOptionalParameter quickTestImageOptionalParameter)"
  desc: "Quick test an image."
  returns:
    description: "the ImagePrediction object if successful."
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImagePrediction?alt=com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImagePrediction&text=ImagePrediction\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.quickTestImageAsync(java.util.UUID,byte[],com.microsoft.azure.cognitiveservices.vision.customvision.training.models.QuickTestImageOptionalParameter)"
  fullName: "com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.quickTestImageAsync(UUID projectId, byte[] imageData, QuickTestImageOptionalParameter quickTestImageOptionalParameter)"
  name: "quickTestImageAsync(UUID projectId, byte[] imageData, QuickTestImageOptionalParameter quickTestImageOptionalParameter)"
  nameWithType: "Trainings.quickTestImageAsync(UUID projectId, byte[] imageData, QuickTestImageOptionalParameter quickTestImageOptionalParameter)"
  summary: "Quick test an image."
  modifiers:
  - "abstract"
  parameters:
  - description: "The project id."
    name: "projectId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/UUID.html\">UUID</a>"
  - description: "Binary image data. Supported formats are JPEG, GIF, PNG, and BMP. Supports images up to 6MB."
    name: "imageData"
    type: "<xref href=\"byte?alt=byte&text=byte\" data-throw-if-not-resolved=\"False\" />[]"
  - description: "the object representing the optional parameters to be set before calling this API"
    name: "quickTestImageOptionalParameter"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.customvision.training.models.QuickTestImageOptionalParameter?alt=com.microsoft.azure.cognitiveservices.vision.customvision.training.models.QuickTestImageOptionalParameter&text=QuickTestImageOptionalParameter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<ImagePrediction> quickTestImageAsync(UUID projectId, byte[] imageData, QuickTestImageOptionalParameter quickTestImageOptionalParameter)"
  desc: "Quick test an image."
  returns:
    description: "the observable to the ImagePrediction object"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImagePrediction?alt=com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImagePrediction&text=ImagePrediction\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.quickTestImageUrl()"
  fullName: "com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.quickTestImageUrl()"
  name: "quickTestImageUrl()"
  nameWithType: "Trainings.quickTestImageUrl()"
  summary: "Quick test an image url."
  modifiers:
  - "abstract"
  syntax: "public abstract Trainings.TrainingsQuickTestImageUrlDefinitionStages.WithProjectId quickTestImageUrl()"
  desc: "Quick test an image url."
  returns:
    description: "the first stage of the quickTestImageUrl call"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.TrainingsQuickTestImageUrlDefinitionStages.WithProjectId?alt=com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.TrainingsQuickTestImageUrlDefinitionStages.WithProjectId&text=WithProjectId\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.quickTestImageUrl(java.util.UUID,java.lang.String,com.microsoft.azure.cognitiveservices.vision.customvision.training.models.QuickTestImageUrlOptionalParameter)"
  fullName: "com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.quickTestImageUrl(UUID projectId, String url, QuickTestImageUrlOptionalParameter quickTestImageUrlOptionalParameter)"
  name: "quickTestImageUrl(UUID projectId, String url, QuickTestImageUrlOptionalParameter quickTestImageUrlOptionalParameter)"
  nameWithType: "Trainings.quickTestImageUrl(UUID projectId, String url, QuickTestImageUrlOptionalParameter quickTestImageUrlOptionalParameter)"
  summary: "Quick test an image url."
  modifiers:
  - "abstract"
  parameters:
  - description: "The project to evaluate against."
    name: "projectId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/UUID.html\">UUID</a>"
  - description: "Url of the image."
    name: "url"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "the object representing the optional parameters to be set before calling this API"
    name: "quickTestImageUrlOptionalParameter"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.customvision.training.models.QuickTestImageUrlOptionalParameter?alt=com.microsoft.azure.cognitiveservices.vision.customvision.training.models.QuickTestImageUrlOptionalParameter&text=QuickTestImageUrlOptionalParameter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract ImagePrediction quickTestImageUrl(UUID projectId, String url, QuickTestImageUrlOptionalParameter quickTestImageUrlOptionalParameter)"
  desc: "Quick test an image url."
  returns:
    description: "the ImagePrediction object if successful."
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImagePrediction?alt=com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImagePrediction&text=ImagePrediction\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.quickTestImageUrlAsync(java.util.UUID,java.lang.String,com.microsoft.azure.cognitiveservices.vision.customvision.training.models.QuickTestImageUrlOptionalParameter)"
  fullName: "com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.quickTestImageUrlAsync(UUID projectId, String url, QuickTestImageUrlOptionalParameter quickTestImageUrlOptionalParameter)"
  name: "quickTestImageUrlAsync(UUID projectId, String url, QuickTestImageUrlOptionalParameter quickTestImageUrlOptionalParameter)"
  nameWithType: "Trainings.quickTestImageUrlAsync(UUID projectId, String url, QuickTestImageUrlOptionalParameter quickTestImageUrlOptionalParameter)"
  summary: "Quick test an image url."
  modifiers:
  - "abstract"
  parameters:
  - description: "The project to evaluate against."
    name: "projectId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/UUID.html\">UUID</a>"
  - description: "Url of the image."
    name: "url"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "the object representing the optional parameters to be set before calling this API"
    name: "quickTestImageUrlOptionalParameter"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.customvision.training.models.QuickTestImageUrlOptionalParameter?alt=com.microsoft.azure.cognitiveservices.vision.customvision.training.models.QuickTestImageUrlOptionalParameter&text=QuickTestImageUrlOptionalParameter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<ImagePrediction> quickTestImageUrlAsync(UUID projectId, String url, QuickTestImageUrlOptionalParameter quickTestImageUrlOptionalParameter)"
  desc: "Quick test an image url."
  returns:
    description: "the observable to the ImagePrediction object"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImagePrediction?alt=com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImagePrediction&text=ImagePrediction\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.trainProject()"
  fullName: "com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.trainProject()"
  name: "trainProject()"
  nameWithType: "Trainings.trainProject()"
  summary: "Queues project for training."
  modifiers:
  - "abstract"
  syntax: "public abstract Trainings.TrainingsTrainProjectDefinitionStages.WithProjectId trainProject()"
  desc: "Queues project for training."
  returns:
    description: "the first stage of the trainProject call"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.TrainingsTrainProjectDefinitionStages.WithProjectId?alt=com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.TrainingsTrainProjectDefinitionStages.WithProjectId&text=WithProjectId\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.trainProject(java.util.UUID,com.microsoft.azure.cognitiveservices.vision.customvision.training.models.TrainProjectOptionalParameter)"
  fullName: "com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.trainProject(UUID projectId, TrainProjectOptionalParameter trainProjectOptionalParameter)"
  name: "trainProject(UUID projectId, TrainProjectOptionalParameter trainProjectOptionalParameter)"
  nameWithType: "Trainings.trainProject(UUID projectId, TrainProjectOptionalParameter trainProjectOptionalParameter)"
  summary: "Queues project for training."
  modifiers:
  - "abstract"
  parameters:
  - description: "The project id."
    name: "projectId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/UUID.html\">UUID</a>"
  - description: "the object representing the optional parameters to be set before calling this API"
    name: "trainProjectOptionalParameter"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.customvision.training.models.TrainProjectOptionalParameter?alt=com.microsoft.azure.cognitiveservices.vision.customvision.training.models.TrainProjectOptionalParameter&text=TrainProjectOptionalParameter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Iteration trainProject(UUID projectId, TrainProjectOptionalParameter trainProjectOptionalParameter)"
  desc: "Queues project for training."
  returns:
    description: "the Iteration object if successful."
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Iteration?alt=com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Iteration&text=Iteration\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.trainProjectAsync(java.util.UUID,com.microsoft.azure.cognitiveservices.vision.customvision.training.models.TrainProjectOptionalParameter)"
  fullName: "com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.trainProjectAsync(UUID projectId, TrainProjectOptionalParameter trainProjectOptionalParameter)"
  name: "trainProjectAsync(UUID projectId, TrainProjectOptionalParameter trainProjectOptionalParameter)"
  nameWithType: "Trainings.trainProjectAsync(UUID projectId, TrainProjectOptionalParameter trainProjectOptionalParameter)"
  summary: "Queues project for training."
  modifiers:
  - "abstract"
  parameters:
  - description: "The project id."
    name: "projectId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/UUID.html\">UUID</a>"
  - description: "the object representing the optional parameters to be set before calling this API"
    name: "trainProjectOptionalParameter"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.customvision.training.models.TrainProjectOptionalParameter?alt=com.microsoft.azure.cognitiveservices.vision.customvision.training.models.TrainProjectOptionalParameter&text=TrainProjectOptionalParameter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<Iteration> trainProjectAsync(UUID projectId, TrainProjectOptionalParameter trainProjectOptionalParameter)"
  desc: "Queues project for training."
  returns:
    description: "the observable to the Iteration object"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Iteration?alt=com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Iteration&text=Iteration\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.unpublishIteration(java.util.UUID,java.util.UUID)"
  fullName: "com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.unpublishIteration(UUID projectId, UUID iterationId)"
  name: "unpublishIteration(UUID projectId, UUID iterationId)"
  nameWithType: "Trainings.unpublishIteration(UUID projectId, UUID iterationId)"
  summary: "Unpublish a specific iteration."
  modifiers:
  - "abstract"
  parameters:
  - description: "The project id."
    name: "projectId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/UUID.html\">UUID</a>"
  - description: "The iteration id."
    name: "iterationId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/UUID.html\">UUID</a>"
  syntax: "public abstract void unpublishIteration(UUID projectId, UUID iterationId)"
  desc: "Unpublish a specific iteration."
- uid: "com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.unpublishIterationAsync(java.util.UUID,java.util.UUID)"
  fullName: "com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.unpublishIterationAsync(UUID projectId, UUID iterationId)"
  name: "unpublishIterationAsync(UUID projectId, UUID iterationId)"
  nameWithType: "Trainings.unpublishIterationAsync(UUID projectId, UUID iterationId)"
  summary: "Unpublish a specific iteration."
  modifiers:
  - "abstract"
  parameters:
  - description: "The project id."
    name: "projectId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/UUID.html\">UUID</a>"
  - description: "The iteration id."
    name: "iterationId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/UUID.html\">UUID</a>"
  syntax: "public abstract Observable<Void> unpublishIterationAsync(UUID projectId, UUID iterationId)"
  desc: "Unpublish a specific iteration."
  returns:
    description: "a representation of the deferred computation of this call if successful."
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Void.html\">Void</a>&gt;"
- uid: "com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.updateIteration(java.util.UUID,java.util.UUID,java.lang.String)"
  fullName: "com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.updateIteration(UUID projectId, UUID iterationId, String name)"
  name: "updateIteration(UUID projectId, UUID iterationId, String name)"
  nameWithType: "Trainings.updateIteration(UUID projectId, UUID iterationId, String name)"
  summary: "Update a specific iteration."
  modifiers:
  - "abstract"
  parameters:
  - description: "Project id."
    name: "projectId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/UUID.html\">UUID</a>"
  - description: "Iteration id."
    name: "iterationId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/UUID.html\">UUID</a>"
  - description: "Gets or sets the name of the iteration."
    name: "name"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract Iteration updateIteration(UUID projectId, UUID iterationId, String name)"
  desc: "Update a specific iteration."
  returns:
    description: "the Iteration object if successful."
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Iteration?alt=com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Iteration&text=Iteration\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.updateIterationAsync(java.util.UUID,java.util.UUID,java.lang.String)"
  fullName: "com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.updateIterationAsync(UUID projectId, UUID iterationId, String name)"
  name: "updateIterationAsync(UUID projectId, UUID iterationId, String name)"
  nameWithType: "Trainings.updateIterationAsync(UUID projectId, UUID iterationId, String name)"
  summary: "Update a specific iteration."
  modifiers:
  - "abstract"
  parameters:
  - description: "Project id."
    name: "projectId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/UUID.html\">UUID</a>"
  - description: "Iteration id."
    name: "iterationId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/UUID.html\">UUID</a>"
  - description: "Gets or sets the name of the iteration."
    name: "name"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract Observable<Iteration> updateIterationAsync(UUID projectId, UUID iterationId, String name)"
  desc: "Update a specific iteration."
  returns:
    description: "the observable to the Iteration object"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Iteration?alt=com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Iteration&text=Iteration\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.updateProject(java.util.UUID,com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Project)"
  fullName: "com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.updateProject(UUID projectId, Project updatedProject)"
  name: "updateProject(UUID projectId, Project updatedProject)"
  nameWithType: "Trainings.updateProject(UUID projectId, Project updatedProject)"
  summary: "Update a specific project."
  modifiers:
  - "abstract"
  parameters:
  - description: "The id of the project to update."
    name: "projectId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/UUID.html\">UUID</a>"
  - description: "The updated project model."
    name: "updatedProject"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Project?alt=com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Project&text=Project\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Project updateProject(UUID projectId, Project updatedProject)"
  desc: "Update a specific project."
  returns:
    description: "the Project object if successful."
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Project?alt=com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Project&text=Project\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.updateProjectAsync(java.util.UUID,com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Project)"
  fullName: "com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.updateProjectAsync(UUID projectId, Project updatedProject)"
  name: "updateProjectAsync(UUID projectId, Project updatedProject)"
  nameWithType: "Trainings.updateProjectAsync(UUID projectId, Project updatedProject)"
  summary: "Update a specific project."
  modifiers:
  - "abstract"
  parameters:
  - description: "The id of the project to update."
    name: "projectId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/UUID.html\">UUID</a>"
  - description: "The updated project model."
    name: "updatedProject"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Project?alt=com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Project&text=Project\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<Project> updateProjectAsync(UUID projectId, Project updatedProject)"
  desc: "Update a specific project."
  returns:
    description: "the observable to the Project object"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Project?alt=com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Project&text=Project\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.updateTag(java.util.UUID,java.util.UUID,com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Tag)"
  fullName: "com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.updateTag(UUID projectId, UUID tagId, Tag updatedTag)"
  name: "updateTag(UUID projectId, UUID tagId, Tag updatedTag)"
  nameWithType: "Trainings.updateTag(UUID projectId, UUID tagId, Tag updatedTag)"
  summary: "Update a tag."
  modifiers:
  - "abstract"
  parameters:
  - description: "The project id."
    name: "projectId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/UUID.html\">UUID</a>"
  - description: "The id of the target tag."
    name: "tagId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/UUID.html\">UUID</a>"
  - description: "The updated tag model."
    name: "updatedTag"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Tag?alt=com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Tag&text=Tag\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Tag updateTag(UUID projectId, UUID tagId, Tag updatedTag)"
  desc: "Update a tag."
  returns:
    description: "the Tag object if successful."
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Tag?alt=com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Tag&text=Tag\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.updateTagAsync(java.util.UUID,java.util.UUID,com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Tag)"
  fullName: "com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.updateTagAsync(UUID projectId, UUID tagId, Tag updatedTag)"
  name: "updateTagAsync(UUID projectId, UUID tagId, Tag updatedTag)"
  nameWithType: "Trainings.updateTagAsync(UUID projectId, UUID tagId, Tag updatedTag)"
  summary: "Update a tag."
  modifiers:
  - "abstract"
  parameters:
  - description: "The project id."
    name: "projectId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/UUID.html\">UUID</a>"
  - description: "The id of the target tag."
    name: "tagId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/UUID.html\">UUID</a>"
  - description: "The updated tag model."
    name: "updatedTag"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Tag?alt=com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Tag&text=Tag\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<Tag> updateTagAsync(UUID projectId, UUID tagId, Tag updatedTag)"
  desc: "Update a tag."
  returns:
    description: "the observable to the Tag object"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Tag?alt=com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Tag&text=Tag\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "interface"
desc: "An instance of this class provides access to all the operations defined in Trainings."
metadata: {}
package: "com.microsoft.azure.cognitiveservices.vision.customvision.training"
artifact: com.microsoft.azure.cognitiveservices:azure-cognitiveservices-customvision-training:1.0.3-beta
