### YamlMime:JavaType
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
methods:
- fullName: com.microsoft.azure.batch.protocol.models.JobPreparationTaskExecutionInformation.containerInfo()
  name: containerInfo()
  nameWithType: JobPreparationTaskExecutionInformation.containerInfo()
  returns:
    description: <p>the containerInfo value </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.TaskContainerExecutionInformation?alt=com.microsoft.azure.batch.protocol.models.TaskContainerExecutionInformation&text=TaskContainerExecutionInformation" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get this property is set only if the task runs in a container context.</p>

    <p></p>
  syntax: public TaskContainerExecutionInformation containerInfo()
  uid: com.microsoft.azure.batch.protocol.models.JobPreparationTaskExecutionInformation.containerInfo()
- fullName: com.microsoft.azure.batch.protocol.models.JobPreparationTaskExecutionInformation.endTime()
  name: endTime()
  nameWithType: JobPreparationTaskExecutionInformation.endTime()
  returns:
    description: <p>the endTime value </p>
    type: <xref href="DateTime?alt=DateTime&text=DateTime" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get this property is set only if the task is in the Completed state.</p>

    <p></p>
  syntax: public DateTime endTime()
  uid: com.microsoft.azure.batch.protocol.models.JobPreparationTaskExecutionInformation.endTime()
- fullName: com.microsoft.azure.batch.protocol.models.JobPreparationTaskExecutionInformation.exitCode()
  name: exitCode()
  nameWithType: JobPreparationTaskExecutionInformation.exitCode()
  returns:
    description: <p>the exitCode value </p>
    type: <xref href="Integer?alt=Integer&text=Integer" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get this parameter is returned only if the task is in the completed state. The exit code for a process reflects the specific convention implemented by the application developer for that process. If you use the exit code value to make decisions in your code, be sure that you know the exit code convention used by the application process. Note that the exit code may also be generated by the compute node operating system, such as when a process is forcibly terminated.</p>

    <p></p>
  syntax: public Integer exitCode()
  uid: com.microsoft.azure.batch.protocol.models.JobPreparationTaskExecutionInformation.exitCode()
- fullName: com.microsoft.azure.batch.protocol.models.JobPreparationTaskExecutionInformation.failureInfo()
  name: failureInfo()
  nameWithType: JobPreparationTaskExecutionInformation.failureInfo()
  returns:
    description: <p>the failureInfo value </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.TaskFailureInformation?alt=com.microsoft.azure.batch.protocol.models.TaskFailureInformation&text=TaskFailureInformation" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get this property is set only if the task is in the completed state and encountered a failure.</p>

    <p></p>
  syntax: public TaskFailureInformation failureInfo()
  uid: com.microsoft.azure.batch.protocol.models.JobPreparationTaskExecutionInformation.failureInfo()
- fullName: com.microsoft.azure.batch.protocol.models.JobPreparationTaskExecutionInformation.lastRetryTime()
  name: lastRetryTime()
  nameWithType: JobPreparationTaskExecutionInformation.lastRetryTime()
  returns:
    description: <p>the lastRetryTime value </p>
    type: <xref href="DateTime?alt=DateTime&text=DateTime" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get this property is set only if the task was retried (i.e. retryCount is nonzero). If present, this is typically the same as startTime, but may be different if the task has been restarted for reasons other than retry; for example, if the compute node was rebooted during a retry, then the startTime is updated but the lastRetryTime is not.</p>

    <p></p>
  syntax: public DateTime lastRetryTime()
  uid: com.microsoft.azure.batch.protocol.models.JobPreparationTaskExecutionInformation.lastRetryTime()
- fullName: com.microsoft.azure.batch.protocol.models.JobPreparationTaskExecutionInformation.result()
  name: result()
  nameWithType: JobPreparationTaskExecutionInformation.result()
  returns:
    description: <p>the result value </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.TaskExecutionResult?alt=com.microsoft.azure.batch.protocol.models.TaskExecutionResult&text=TaskExecutionResult" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get if the value is 'failed', then the details of the failure can be found in the failureInfo property. Possible values include: 'success', 'failure'.</p>

    <p></p>
  syntax: public TaskExecutionResult result()
  uid: com.microsoft.azure.batch.protocol.models.JobPreparationTaskExecutionInformation.result()
- fullName: com.microsoft.azure.batch.protocol.models.JobPreparationTaskExecutionInformation.retryCount()
  name: retryCount()
  nameWithType: JobPreparationTaskExecutionInformation.retryCount()
  returns:
    description: <p>the retryCount value </p>
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get task application failures (non-zero exit code) are retried, pre-processing errors (the task could not be run) and file upload errors are not retried. The Batch service will retry the task up to the limit specified by the constraints.</p>

    <p></p>
  syntax: public int retryCount()
  uid: com.microsoft.azure.batch.protocol.models.JobPreparationTaskExecutionInformation.retryCount()
- fullName: com.microsoft.azure.batch.protocol.models.JobPreparationTaskExecutionInformation.startTime()
  name: startTime()
  nameWithType: JobPreparationTaskExecutionInformation.startTime()
  returns:
    description: <p>the startTime value </p>
    type: <xref href="DateTime?alt=DateTime&text=DateTime" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get if the task has been restarted or retried, this is the most recent time at which the task started running.</p>

    <p></p>
  syntax: public DateTime startTime()
  uid: com.microsoft.azure.batch.protocol.models.JobPreparationTaskExecutionInformation.startTime()
- fullName: com.microsoft.azure.batch.protocol.models.JobPreparationTaskExecutionInformation.state()
  name: state()
  nameWithType: JobPreparationTaskExecutionInformation.state()
  returns:
    description: <p>the state value </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.JobPreparationTaskState?alt=com.microsoft.azure.batch.protocol.models.JobPreparationTaskState&text=JobPreparationTaskState" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get possible values include: 'running', 'completed'.</p>

    <p></p>
  syntax: public JobPreparationTaskState state()
  uid: com.microsoft.azure.batch.protocol.models.JobPreparationTaskExecutionInformation.state()
- fullName: com.microsoft.azure.batch.protocol.models.JobPreparationTaskExecutionInformation.taskRootDirectory()
  name: taskRootDirectory()
  nameWithType: JobPreparationTaskExecutionInformation.taskRootDirectory()
  returns:
    description: <p>the taskRootDirectory value </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the taskRootDirectory value.</p>

    <p></p>
  syntax: public String taskRootDirectory()
  uid: com.microsoft.azure.batch.protocol.models.JobPreparationTaskExecutionInformation.taskRootDirectory()
- fullName: com.microsoft.azure.batch.protocol.models.JobPreparationTaskExecutionInformation.taskRootDirectoryUrl()
  name: taskRootDirectoryUrl()
  nameWithType: JobPreparationTaskExecutionInformation.taskRootDirectoryUrl()
  returns:
    description: <p>the taskRootDirectoryUrl value </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the taskRootDirectoryUrl value.</p>

    <p></p>
  syntax: public String taskRootDirectoryUrl()
  uid: com.microsoft.azure.batch.protocol.models.JobPreparationTaskExecutionInformation.taskRootDirectoryUrl()
- fullName: com.microsoft.azure.batch.protocol.models.JobPreparationTaskExecutionInformation.withContainerInfo(TaskContainerExecutionInformation containerInfo)
  name: withContainerInfo(TaskContainerExecutionInformation containerInfo)
  nameWithType: JobPreparationTaskExecutionInformation.withContainerInfo(TaskContainerExecutionInformation containerInfo)
  parameters:
  - description: <p>the containerInfo value to set </p>
    name: containerInfo
    type: <xref href="com.microsoft.azure.batch.protocol.models.TaskContainerExecutionInformation?alt=com.microsoft.azure.batch.protocol.models.TaskContainerExecutionInformation&text=TaskContainerExecutionInformation" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the JobPreparationTaskExecutionInformation object itself. </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.JobPreparationTaskExecutionInformation?alt=com.microsoft.azure.batch.protocol.models.JobPreparationTaskExecutionInformation&text=JobPreparationTaskExecutionInformation" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set this property is set only if the task runs in a container context.</p>

    <p></p>
  syntax: public JobPreparationTaskExecutionInformation withContainerInfo(TaskContainerExecutionInformation containerInfo)
  uid: com.microsoft.azure.batch.protocol.models.JobPreparationTaskExecutionInformation.withContainerInfo(TaskContainerExecutionInformation)
- fullName: com.microsoft.azure.batch.protocol.models.JobPreparationTaskExecutionInformation.withEndTime(DateTime endTime)
  name: withEndTime(DateTime endTime)
  nameWithType: JobPreparationTaskExecutionInformation.withEndTime(DateTime endTime)
  parameters:
  - description: <p>the endTime value to set </p>
    name: endTime
    type: <xref href="DateTime?alt=DateTime&text=DateTime" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the JobPreparationTaskExecutionInformation object itself. </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.JobPreparationTaskExecutionInformation?alt=com.microsoft.azure.batch.protocol.models.JobPreparationTaskExecutionInformation&text=JobPreparationTaskExecutionInformation" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set this property is set only if the task is in the Completed state.</p>

    <p></p>
  syntax: public JobPreparationTaskExecutionInformation withEndTime(DateTime endTime)
  uid: com.microsoft.azure.batch.protocol.models.JobPreparationTaskExecutionInformation.withEndTime(DateTime)
- fullName: com.microsoft.azure.batch.protocol.models.JobPreparationTaskExecutionInformation.withExitCode(Integer exitCode)
  name: withExitCode(Integer exitCode)
  nameWithType: JobPreparationTaskExecutionInformation.withExitCode(Integer exitCode)
  parameters:
  - description: <p>the exitCode value to set </p>
    name: exitCode
    type: <xref href="Integer?alt=Integer&text=Integer" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the JobPreparationTaskExecutionInformation object itself. </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.JobPreparationTaskExecutionInformation?alt=com.microsoft.azure.batch.protocol.models.JobPreparationTaskExecutionInformation&text=JobPreparationTaskExecutionInformation" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set this parameter is returned only if the task is in the completed state. The exit code for a process reflects the specific convention implemented by the application developer for that process. If you use the exit code value to make decisions in your code, be sure that you know the exit code convention used by the application process. Note that the exit code may also be generated by the compute node operating system, such as when a process is forcibly terminated.</p>

    <p></p>
  syntax: public JobPreparationTaskExecutionInformation withExitCode(Integer exitCode)
  uid: com.microsoft.azure.batch.protocol.models.JobPreparationTaskExecutionInformation.withExitCode(Integer)
- fullName: com.microsoft.azure.batch.protocol.models.JobPreparationTaskExecutionInformation.withFailureInfo(TaskFailureInformation failureInfo)
  name: withFailureInfo(TaskFailureInformation failureInfo)
  nameWithType: JobPreparationTaskExecutionInformation.withFailureInfo(TaskFailureInformation failureInfo)
  parameters:
  - description: <p>the failureInfo value to set </p>
    name: failureInfo
    type: <xref href="com.microsoft.azure.batch.protocol.models.TaskFailureInformation?alt=com.microsoft.azure.batch.protocol.models.TaskFailureInformation&text=TaskFailureInformation" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the JobPreparationTaskExecutionInformation object itself. </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.JobPreparationTaskExecutionInformation?alt=com.microsoft.azure.batch.protocol.models.JobPreparationTaskExecutionInformation&text=JobPreparationTaskExecutionInformation" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set this property is set only if the task is in the completed state and encountered a failure.</p>

    <p></p>
  syntax: public JobPreparationTaskExecutionInformation withFailureInfo(TaskFailureInformation failureInfo)
  uid: com.microsoft.azure.batch.protocol.models.JobPreparationTaskExecutionInformation.withFailureInfo(TaskFailureInformation)
- fullName: com.microsoft.azure.batch.protocol.models.JobPreparationTaskExecutionInformation.withLastRetryTime(DateTime lastRetryTime)
  name: withLastRetryTime(DateTime lastRetryTime)
  nameWithType: JobPreparationTaskExecutionInformation.withLastRetryTime(DateTime lastRetryTime)
  parameters:
  - description: <p>the lastRetryTime value to set </p>
    name: lastRetryTime
    type: <xref href="DateTime?alt=DateTime&text=DateTime" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the JobPreparationTaskExecutionInformation object itself. </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.JobPreparationTaskExecutionInformation?alt=com.microsoft.azure.batch.protocol.models.JobPreparationTaskExecutionInformation&text=JobPreparationTaskExecutionInformation" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set this property is set only if the task was retried (i.e. retryCount is nonzero). If present, this is typically the same as startTime, but may be different if the task has been restarted for reasons other than retry; for example, if the compute node was rebooted during a retry, then the startTime is updated but the lastRetryTime is not.</p>

    <p></p>
  syntax: public JobPreparationTaskExecutionInformation withLastRetryTime(DateTime lastRetryTime)
  uid: com.microsoft.azure.batch.protocol.models.JobPreparationTaskExecutionInformation.withLastRetryTime(DateTime)
- fullName: com.microsoft.azure.batch.protocol.models.JobPreparationTaskExecutionInformation.withResult(TaskExecutionResult result)
  name: withResult(TaskExecutionResult result)
  nameWithType: JobPreparationTaskExecutionInformation.withResult(TaskExecutionResult result)
  parameters:
  - description: <p>the result value to set </p>
    name: result
    type: <xref href="com.microsoft.azure.batch.protocol.models.TaskExecutionResult?alt=com.microsoft.azure.batch.protocol.models.TaskExecutionResult&text=TaskExecutionResult" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the JobPreparationTaskExecutionInformation object itself. </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.JobPreparationTaskExecutionInformation?alt=com.microsoft.azure.batch.protocol.models.JobPreparationTaskExecutionInformation&text=JobPreparationTaskExecutionInformation" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set if the value is 'failed', then the details of the failure can be found in the failureInfo property. Possible values include: 'success', 'failure'.</p>

    <p></p>
  syntax: public JobPreparationTaskExecutionInformation withResult(TaskExecutionResult result)
  uid: com.microsoft.azure.batch.protocol.models.JobPreparationTaskExecutionInformation.withResult(TaskExecutionResult)
- fullName: com.microsoft.azure.batch.protocol.models.JobPreparationTaskExecutionInformation.withRetryCount(int retryCount)
  name: withRetryCount(int retryCount)
  nameWithType: JobPreparationTaskExecutionInformation.withRetryCount(int retryCount)
  parameters:
  - description: <p>the retryCount value to set </p>
    name: retryCount
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the JobPreparationTaskExecutionInformation object itself. </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.JobPreparationTaskExecutionInformation?alt=com.microsoft.azure.batch.protocol.models.JobPreparationTaskExecutionInformation&text=JobPreparationTaskExecutionInformation" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set task application failures (non-zero exit code) are retried, pre-processing errors (the task could not be run) and file upload errors are not retried. The Batch service will retry the task up to the limit specified by the constraints.</p>

    <p></p>
  syntax: public JobPreparationTaskExecutionInformation withRetryCount(int retryCount)
  uid: com.microsoft.azure.batch.protocol.models.JobPreparationTaskExecutionInformation.withRetryCount(int)
- fullName: com.microsoft.azure.batch.protocol.models.JobPreparationTaskExecutionInformation.withStartTime(DateTime startTime)
  name: withStartTime(DateTime startTime)
  nameWithType: JobPreparationTaskExecutionInformation.withStartTime(DateTime startTime)
  parameters:
  - description: <p>the startTime value to set </p>
    name: startTime
    type: <xref href="DateTime?alt=DateTime&text=DateTime" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the JobPreparationTaskExecutionInformation object itself. </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.JobPreparationTaskExecutionInformation?alt=com.microsoft.azure.batch.protocol.models.JobPreparationTaskExecutionInformation&text=JobPreparationTaskExecutionInformation" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set if the task has been restarted or retried, this is the most recent time at which the task started running.</p>

    <p></p>
  syntax: public JobPreparationTaskExecutionInformation withStartTime(DateTime startTime)
  uid: com.microsoft.azure.batch.protocol.models.JobPreparationTaskExecutionInformation.withStartTime(DateTime)
- fullName: com.microsoft.azure.batch.protocol.models.JobPreparationTaskExecutionInformation.withState(JobPreparationTaskState state)
  name: withState(JobPreparationTaskState state)
  nameWithType: JobPreparationTaskExecutionInformation.withState(JobPreparationTaskState state)
  parameters:
  - description: <p>the state value to set </p>
    name: state
    type: <xref href="com.microsoft.azure.batch.protocol.models.JobPreparationTaskState?alt=com.microsoft.azure.batch.protocol.models.JobPreparationTaskState&text=JobPreparationTaskState" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the JobPreparationTaskExecutionInformation object itself. </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.JobPreparationTaskExecutionInformation?alt=com.microsoft.azure.batch.protocol.models.JobPreparationTaskExecutionInformation&text=JobPreparationTaskExecutionInformation" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set possible values include: 'running', 'completed'.</p>

    <p></p>
  syntax: public JobPreparationTaskExecutionInformation withState(JobPreparationTaskState state)
  uid: com.microsoft.azure.batch.protocol.models.JobPreparationTaskExecutionInformation.withState(JobPreparationTaskState)
- fullName: com.microsoft.azure.batch.protocol.models.JobPreparationTaskExecutionInformation.withTaskRootDirectory(String taskRootDirectory)
  name: withTaskRootDirectory(String taskRootDirectory)
  nameWithType: JobPreparationTaskExecutionInformation.withTaskRootDirectory(String taskRootDirectory)
  parameters:
  - description: <p>the taskRootDirectory value to set </p>
    name: taskRootDirectory
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the JobPreparationTaskExecutionInformation object itself. </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.JobPreparationTaskExecutionInformation?alt=com.microsoft.azure.batch.protocol.models.JobPreparationTaskExecutionInformation&text=JobPreparationTaskExecutionInformation" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the taskRootDirectory value.</p>

    <p></p>
  syntax: public JobPreparationTaskExecutionInformation withTaskRootDirectory(String taskRootDirectory)
  uid: com.microsoft.azure.batch.protocol.models.JobPreparationTaskExecutionInformation.withTaskRootDirectory(String)
- fullName: com.microsoft.azure.batch.protocol.models.JobPreparationTaskExecutionInformation.withTaskRootDirectoryUrl(String taskRootDirectoryUrl)
  name: withTaskRootDirectoryUrl(String taskRootDirectoryUrl)
  nameWithType: JobPreparationTaskExecutionInformation.withTaskRootDirectoryUrl(String taskRootDirectoryUrl)
  parameters:
  - description: <p>the taskRootDirectoryUrl value to set </p>
    name: taskRootDirectoryUrl
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the JobPreparationTaskExecutionInformation object itself. </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.JobPreparationTaskExecutionInformation?alt=com.microsoft.azure.batch.protocol.models.JobPreparationTaskExecutionInformation&text=JobPreparationTaskExecutionInformation" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the taskRootDirectoryUrl value.</p>

    <p></p>
  syntax: public JobPreparationTaskExecutionInformation withTaskRootDirectoryUrl(String taskRootDirectoryUrl)
  uid: com.microsoft.azure.batch.protocol.models.JobPreparationTaskExecutionInformation.withTaskRootDirectoryUrl(String)
nameWithType: JobPreparationTaskExecutionInformation
syntax: public class JobPreparationTaskExecutionInformation
type: class
uid: com.microsoft.azure.batch.protocol.models.JobPreparationTaskExecutionInformation
fullName: com.microsoft.azure.batch.protocol.models.JobPreparationTaskExecutionInformation
name: JobPreparationTaskExecutionInformation
package: com.microsoft.azure.batch.protocol.models
summary: <p>Contains information about the execution of a Job Preparation task on a compute node. </p>
metadata: {}
