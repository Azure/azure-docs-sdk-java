### YamlMime:JavaType
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
methods:
- fullName: com.microsoft.azure.cosmosdb.BridgeInternal.createError(ObjectNode objectNode)
  name: createError(ObjectNode objectNode)
  nameWithType: BridgeInternal.createError(ObjectNode objectNode)
  parameters:
  - name: objectNode
    type: <xref href="ObjectNode?alt=ObjectNode&text=ObjectNode" data-throw-if-not-resolved="False"/>
  returns:
    type: <xref href="com.microsoft.azure.cosmosdb.Error?alt=com.microsoft.azure.cosmosdb.Error&text=Error" data-throw-if-not-resolved="False"/>
  syntax: public static Error createError(ObjectNode objectNode)
  uid: com.microsoft.azure.cosmosdb.BridgeInternal.createError(ObjectNode)
- fullName: com.microsoft.azure.cosmosdb.BridgeInternal.createFeedResponse(List<T> results, Map<String, String> headers)
  name: createFeedResponse(List<T> results, Map<String, String> headers)
  nameWithType: BridgeInternal.createFeedResponse(List<T> results, Map<String, String> headers)
  parameters:
  - name: results
    type: <xref href="List%3CT%3E?alt=List%3CT%3E&text=List%3CT%3E" data-throw-if-not-resolved="False"/>
  - name: headers
    type: <xref href="Map%3CString%2C+String%3E?alt=Map%3CString%2C+String%3E&text=Map%3CString%2C+String%3E" data-throw-if-not-resolved="False"/>
  returns:
    type: static&lt;T extends <xref href="com.microsoft.azure.cosmosdb.Resource?alt=com.microsoft.azure.cosmosdb.Resource&text=Resource" data-throw-if-not-resolved="False"/>&gt; <xref href="com.microsoft.azure.cosmosdb.FeedResponse?alt=com.microsoft.azure.cosmosdb.FeedResponse&text=FeedResponse" data-throw-if-not-resolved="False"/>&lt;T&gt;
  syntax: public static static<T extends Resource> FeedResponse<T> createFeedResponse(List<T> results, Map<String, String> headers)
  uid: com.microsoft.azure.cosmosdb.BridgeInternal.createFeedResponse(List<T>,Map<String, String>)
- fullName: com.microsoft.azure.cosmosdb.BridgeInternal.createFeedResponseWithQueryMetrics(List<T> results, Map<String, String> headers, ConcurrentMap<String, QueryMetrics> queryMetricsMap)
  name: createFeedResponseWithQueryMetrics(List<T> results, Map<String, String> headers, ConcurrentMap<String, QueryMetrics> queryMetricsMap)
  nameWithType: BridgeInternal.createFeedResponseWithQueryMetrics(List<T> results, Map<String, String> headers, ConcurrentMap<String, QueryMetrics> queryMetricsMap)
  parameters:
  - name: results
    type: <xref href="List%3CT%3E?alt=List%3CT%3E&text=List%3CT%3E" data-throw-if-not-resolved="False"/>
  - name: headers
    type: <xref href="Map%3CString%2C+String%3E?alt=Map%3CString%2C+String%3E&text=Map%3CString%2C+String%3E" data-throw-if-not-resolved="False"/>
  - name: queryMetricsMap
    type: ConcurrentMap&lt;String, <xref href="com.microsoft.azure.cosmosdb.QueryMetrics?alt=com.microsoft.azure.cosmosdb.QueryMetrics&text=QueryMetrics" data-throw-if-not-resolved="False"/>&gt;
  returns:
    type: static&lt;T extends <xref href="com.microsoft.azure.cosmosdb.Resource?alt=com.microsoft.azure.cosmosdb.Resource&text=Resource" data-throw-if-not-resolved="False"/>&gt; <xref href="com.microsoft.azure.cosmosdb.FeedResponse?alt=com.microsoft.azure.cosmosdb.FeedResponse&text=FeedResponse" data-throw-if-not-resolved="False"/>&lt;T&gt;
  syntax: public static static<T extends Resource> FeedResponse<T> createFeedResponseWithQueryMetrics(List<T> results, Map<String, String> headers, ConcurrentMap<String, QueryMetrics> queryMetricsMap)
  uid: com.microsoft.azure.cosmosdb.BridgeInternal.createFeedResponseWithQueryMetrics(List<T>,Map<String, String>,ConcurrentMap<String, QueryMetrics>)
- fullName: com.microsoft.azure.cosmosdb.BridgeInternal.createQueryMetricsFromCollection(Collection<QueryMetrics> queryMetricsCollection)
  name: createQueryMetricsFromCollection(Collection<QueryMetrics> queryMetricsCollection)
  nameWithType: BridgeInternal.createQueryMetricsFromCollection(Collection<QueryMetrics> queryMetricsCollection)
  parameters:
  - name: queryMetricsCollection
    type: Collection&lt;<xref href="com.microsoft.azure.cosmosdb.QueryMetrics?alt=com.microsoft.azure.cosmosdb.QueryMetrics&text=QueryMetrics" data-throw-if-not-resolved="False"/>&gt;
  returns:
    type: <xref href="com.microsoft.azure.cosmosdb.QueryMetrics?alt=com.microsoft.azure.cosmosdb.QueryMetrics&text=QueryMetrics" data-throw-if-not-resolved="False"/>
  syntax: public static QueryMetrics createQueryMetricsFromCollection(Collection<QueryMetrics> queryMetricsCollection)
  uid: com.microsoft.azure.cosmosdb.BridgeInternal.createQueryMetricsFromCollection(Collection<QueryMetrics>)
- fullName: com.microsoft.azure.cosmosdb.BridgeInternal.createQueryMetricsFromDelimitedStringAndClientSideMetrics(String queryMetricsDelimitedString, ClientSideMetrics clientSideMetrics, String activityId)
  name: createQueryMetricsFromDelimitedStringAndClientSideMetrics(String queryMetricsDelimitedString, ClientSideMetrics clientSideMetrics, String activityId)
  nameWithType: BridgeInternal.createQueryMetricsFromDelimitedStringAndClientSideMetrics(String queryMetricsDelimitedString, ClientSideMetrics clientSideMetrics, String activityId)
  parameters:
  - name: queryMetricsDelimitedString
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - name: clientSideMetrics
    type: <xref href="ClientSideMetrics?alt=ClientSideMetrics&text=ClientSideMetrics" data-throw-if-not-resolved="False"/>
  - name: activityId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    type: <xref href="com.microsoft.azure.cosmosdb.QueryMetrics?alt=com.microsoft.azure.cosmosdb.QueryMetrics&text=QueryMetrics" data-throw-if-not-resolved="False"/>
  syntax: public static QueryMetrics createQueryMetricsFromDelimitedStringAndClientSideMetrics(String queryMetricsDelimitedString, ClientSideMetrics clientSideMetrics, String activityId)
  uid: com.microsoft.azure.cosmosdb.BridgeInternal.createQueryMetricsFromDelimitedStringAndClientSideMetrics(String,ClientSideMetrics,String)
- fullName: com.microsoft.azure.cosmosdb.BridgeInternal.documentFromObject(Object document, ObjectMapper mapper)
  name: documentFromObject(Object document, ObjectMapper mapper)
  nameWithType: BridgeInternal.documentFromObject(Object document, ObjectMapper mapper)
  parameters:
  - name: document
    type: <xref href="Object?alt=Object&text=Object" data-throw-if-not-resolved="False"/>
  - name: mapper
    type: <xref href="ObjectMapper?alt=ObjectMapper&text=ObjectMapper" data-throw-if-not-resolved="False"/>
  returns:
    type: <xref href="com.microsoft.azure.cosmosdb.Document?alt=com.microsoft.azure.cosmosdb.Document&text=Document" data-throw-if-not-resolved="False"/>
  syntax: public static Document documentFromObject(Object document, ObjectMapper mapper)
  uid: com.microsoft.azure.cosmosdb.BridgeInternal.documentFromObject(Object,ObjectMapper)
- fullName: com.microsoft.azure.cosmosdb.BridgeInternal.getAltLink(Resource resource)
  name: getAltLink(Resource resource)
  nameWithType: BridgeInternal.getAltLink(Resource resource)
  parameters:
  - name: resource
    type: <xref href="com.microsoft.azure.cosmosdb.Resource?alt=com.microsoft.azure.cosmosdb.Resource&text=Resource" data-throw-if-not-resolved="False"/>
  returns:
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  syntax: public static String getAltLink(Resource resource)
  uid: com.microsoft.azure.cosmosdb.BridgeInternal.getAltLink(Resource)
- fullName: com.microsoft.azure.cosmosdb.BridgeInternal.getClientSideMetrics(QueryMetrics queryMetrics)
  name: getClientSideMetrics(QueryMetrics queryMetrics)
  nameWithType: BridgeInternal.getClientSideMetrics(QueryMetrics queryMetrics)
  parameters:
  - name: queryMetrics
    type: <xref href="com.microsoft.azure.cosmosdb.QueryMetrics?alt=com.microsoft.azure.cosmosdb.QueryMetrics&text=QueryMetrics" data-throw-if-not-resolved="False"/>
  returns:
    type: <xref href="ClientSideMetrics?alt=ClientSideMetrics&text=ClientSideMetrics" data-throw-if-not-resolved="False"/>
  syntax: public static ClientSideMetrics getClientSideMetrics(QueryMetrics queryMetrics)
  uid: com.microsoft.azure.cosmosdb.BridgeInternal.getClientSideMetrics(QueryMetrics)
- fullName: com.microsoft.azure.cosmosdb.BridgeInternal.getConsistencyPolicy(DatabaseAccount databaseAccount)
  name: getConsistencyPolicy(DatabaseAccount databaseAccount)
  nameWithType: BridgeInternal.getConsistencyPolicy(DatabaseAccount databaseAccount)
  parameters:
  - name: databaseAccount
    type: <xref href="com.microsoft.azure.cosmosdb.DatabaseAccount?alt=com.microsoft.azure.cosmosdb.DatabaseAccount&text=DatabaseAccount" data-throw-if-not-resolved="False"/>
  returns:
    type: <xref href="com.microsoft.azure.cosmosdb.ConsistencyPolicy?alt=com.microsoft.azure.cosmosdb.ConsistencyPolicy&text=ConsistencyPolicy" data-throw-if-not-resolved="False"/>
  syntax: public static ConsistencyPolicy getConsistencyPolicy(DatabaseAccount databaseAccount)
  uid: com.microsoft.azure.cosmosdb.BridgeInternal.getConsistencyPolicy(DatabaseAccount)
- fullName: com.microsoft.azure.cosmosdb.BridgeInternal.getFeedHeaders(FeedOptionsBase options)
  name: getFeedHeaders(FeedOptionsBase options)
  nameWithType: BridgeInternal.getFeedHeaders(FeedOptionsBase options)
  parameters:
  - name: options
    type: <xref href="com.microsoft.azure.cosmosdb.FeedOptionsBase?alt=com.microsoft.azure.cosmosdb.FeedOptionsBase&text=FeedOptionsBase" data-throw-if-not-resolved="False"/>
  returns:
    type: <xref href="Map%3CString%2C+String%3E?alt=Map%3CString%2C+String%3E&text=Map%3CString%2C+String%3E" data-throw-if-not-resolved="False"/>
  syntax: public static Map<String, String> getFeedHeaders(FeedOptionsBase options)
  uid: com.microsoft.azure.cosmosdb.BridgeInternal.getFeedHeaders(FeedOptionsBase)
- fullName: com.microsoft.azure.cosmosdb.BridgeInternal.getInnerErrorMessage(DocumentClientException documentClientException)
  name: getInnerErrorMessage(DocumentClientException documentClientException)
  nameWithType: BridgeInternal.getInnerErrorMessage(DocumentClientException documentClientException)
  parameters:
  - name: documentClientException
    type: <xref href="com.microsoft.azure.cosmosdb.DocumentClientException?alt=com.microsoft.azure.cosmosdb.DocumentClientException&text=DocumentClientException" data-throw-if-not-resolved="False"/>
  returns:
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  syntax: public static String getInnerErrorMessage(DocumentClientException documentClientException)
  uid: com.microsoft.azure.cosmosdb.BridgeInternal.getInnerErrorMessage(DocumentClientException)
- fullName: com.microsoft.azure.cosmosdb.BridgeInternal.getLSN(E e)
  name: getLSN(E e)
  nameWithType: BridgeInternal.getLSN(E e)
  parameters:
  - name: e
    type: <xref href="E?alt=E&text=E" data-throw-if-not-resolved="False"/>
  returns:
    type: static&lt;E extends <xref href="com.microsoft.azure.cosmosdb.DocumentClientException?alt=com.microsoft.azure.cosmosdb.DocumentClientException&text=DocumentClientException" data-throw-if-not-resolved="False"/>&gt; long
  syntax: public static static<E extends DocumentClientException> long getLSN(E e)
  uid: com.microsoft.azure.cosmosdb.BridgeInternal.getLSN(E)
- fullName: com.microsoft.azure.cosmosdb.BridgeInternal.getPartitionKeyRangeId(E e)
  name: getPartitionKeyRangeId(E e)
  nameWithType: BridgeInternal.getPartitionKeyRangeId(E e)
  parameters:
  - name: e
    type: <xref href="E?alt=E&text=E" data-throw-if-not-resolved="False"/>
  returns:
    type: static&lt;E extends <xref href="com.microsoft.azure.cosmosdb.DocumentClientException?alt=com.microsoft.azure.cosmosdb.DocumentClientException&text=DocumentClientException" data-throw-if-not-resolved="False"/>&gt; String
  syntax: public static static<E extends DocumentClientException> String getPartitionKeyRangeId(E e)
  uid: com.microsoft.azure.cosmosdb.BridgeInternal.getPartitionKeyRangeId(E)
- fullName: com.microsoft.azure.cosmosdb.BridgeInternal.getQueryEngineConfiuration(DatabaseAccount databaseAccount)
  name: getQueryEngineConfiuration(DatabaseAccount databaseAccount)
  nameWithType: BridgeInternal.getQueryEngineConfiuration(DatabaseAccount databaseAccount)
  parameters:
  - name: databaseAccount
    type: <xref href="com.microsoft.azure.cosmosdb.DatabaseAccount?alt=com.microsoft.azure.cosmosdb.DatabaseAccount&text=DatabaseAccount" data-throw-if-not-resolved="False"/>
  returns:
    type: <xref href="Map%3CString%2C+Object%3E?alt=Map%3CString%2C+Object%3E&text=Map%3CString%2C+Object%3E" data-throw-if-not-resolved="False"/>
  syntax: public static Map<String, Object> getQueryEngineConfiuration(DatabaseAccount databaseAccount)
  uid: com.microsoft.azure.cosmosdb.BridgeInternal.getQueryEngineConfiuration(DatabaseAccount)
- fullName: com.microsoft.azure.cosmosdb.BridgeInternal.getReplicationPolicy(DatabaseAccount databaseAccount)
  name: getReplicationPolicy(DatabaseAccount databaseAccount)
  nameWithType: BridgeInternal.getReplicationPolicy(DatabaseAccount databaseAccount)
  parameters:
  - name: databaseAccount
    type: <xref href="com.microsoft.azure.cosmosdb.DatabaseAccount?alt=com.microsoft.azure.cosmosdb.DatabaseAccount&text=DatabaseAccount" data-throw-if-not-resolved="False"/>
  returns:
    type: <xref href="com.microsoft.azure.cosmosdb.ReplicationPolicy?alt=com.microsoft.azure.cosmosdb.ReplicationPolicy&text=ReplicationPolicy" data-throw-if-not-resolved="False"/>
  syntax: public static ReplicationPolicy getReplicationPolicy(DatabaseAccount databaseAccount)
  uid: com.microsoft.azure.cosmosdb.BridgeInternal.getReplicationPolicy(DatabaseAccount)
- fullName: com.microsoft.azure.cosmosdb.BridgeInternal.getRequestHeaders(DocumentClientException documentClientException)
  name: getRequestHeaders(DocumentClientException documentClientException)
  nameWithType: BridgeInternal.getRequestHeaders(DocumentClientException documentClientException)
  parameters:
  - name: documentClientException
    type: <xref href="com.microsoft.azure.cosmosdb.DocumentClientException?alt=com.microsoft.azure.cosmosdb.DocumentClientException&text=DocumentClientException" data-throw-if-not-resolved="False"/>
  returns:
    type: static&lt;E extends <xref href="com.microsoft.azure.cosmosdb.DocumentClientException?alt=com.microsoft.azure.cosmosdb.DocumentClientException&text=DocumentClientException" data-throw-if-not-resolved="False"/>&gt; Map&lt;String, String&gt;
  syntax: public static static<E extends DocumentClientException> Map<String, String> getRequestHeaders(DocumentClientException documentClientException)
  uid: com.microsoft.azure.cosmosdb.BridgeInternal.getRequestHeaders(DocumentClientException)
- fullName: com.microsoft.azure.cosmosdb.BridgeInternal.getRequestUri(DocumentClientException documentClientException)
  name: getRequestUri(DocumentClientException documentClientException)
  nameWithType: BridgeInternal.getRequestUri(DocumentClientException documentClientException)
  parameters:
  - name: documentClientException
    type: <xref href="com.microsoft.azure.cosmosdb.DocumentClientException?alt=com.microsoft.azure.cosmosdb.DocumentClientException&text=DocumentClientException" data-throw-if-not-resolved="False"/>
  returns:
    type: static&lt;E extends <xref href="com.microsoft.azure.cosmosdb.DocumentClientException?alt=com.microsoft.azure.cosmosdb.DocumentClientException&text=DocumentClientException" data-throw-if-not-resolved="False"/>&gt; Uri
  syntax: public static static<E extends DocumentClientException> Uri getRequestUri(DocumentClientException documentClientException)
  uid: com.microsoft.azure.cosmosdb.BridgeInternal.getRequestUri(DocumentClientException)
- fullName: com.microsoft.azure.cosmosdb.BridgeInternal.getResourceAddress(E e)
  name: getResourceAddress(E e)
  nameWithType: BridgeInternal.getResourceAddress(E e)
  parameters:
  - name: e
    type: <xref href="E?alt=E&text=E" data-throw-if-not-resolved="False"/>
  returns:
    type: static&lt;E extends <xref href="com.microsoft.azure.cosmosdb.DocumentClientException?alt=com.microsoft.azure.cosmosdb.DocumentClientException&text=DocumentClientException" data-throw-if-not-resolved="False"/>&gt; String
  syntax: public static static<E extends DocumentClientException> String getResourceAddress(E e)
  uid: com.microsoft.azure.cosmosdb.BridgeInternal.getResourceAddress(E)
- fullName: com.microsoft.azure.cosmosdb.BridgeInternal.getSystemReplicationPolicy(DatabaseAccount databaseAccount)
  name: getSystemReplicationPolicy(DatabaseAccount databaseAccount)
  nameWithType: BridgeInternal.getSystemReplicationPolicy(DatabaseAccount databaseAccount)
  parameters:
  - name: databaseAccount
    type: <xref href="com.microsoft.azure.cosmosdb.DatabaseAccount?alt=com.microsoft.azure.cosmosdb.DatabaseAccount&text=DatabaseAccount" data-throw-if-not-resolved="False"/>
  returns:
    type: <xref href="com.microsoft.azure.cosmosdb.ReplicationPolicy?alt=com.microsoft.azure.cosmosdb.ReplicationPolicy&text=ReplicationPolicy" data-throw-if-not-resolved="False"/>
  syntax: public static ReplicationPolicy getSystemReplicationPolicy(DatabaseAccount databaseAccount)
  uid: com.microsoft.azure.cosmosdb.BridgeInternal.getSystemReplicationPolicy(DatabaseAccount)
- fullName: com.microsoft.azure.cosmosdb.BridgeInternal.getUseMultipleWriteLocations(ConnectionPolicy policy)
  name: getUseMultipleWriteLocations(ConnectionPolicy policy)
  nameWithType: BridgeInternal.getUseMultipleWriteLocations(ConnectionPolicy policy)
  parameters:
  - name: policy
    type: <xref href="com.microsoft.azure.cosmosdb.ConnectionPolicy?alt=com.microsoft.azure.cosmosdb.ConnectionPolicy&text=ConnectionPolicy" data-throw-if-not-resolved="False"/>
  returns:
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False"/>
  syntax: public static boolean getUseMultipleWriteLocations(ConnectionPolicy policy)
  uid: com.microsoft.azure.cosmosdb.BridgeInternal.getUseMultipleWriteLocations(ConnectionPolicy)
- fullName: com.microsoft.azure.cosmosdb.BridgeInternal.isEnableMultipleWriteLocations(DatabaseAccount account)
  name: isEnableMultipleWriteLocations(DatabaseAccount account)
  nameWithType: BridgeInternal.isEnableMultipleWriteLocations(DatabaseAccount account)
  parameters:
  - name: account
    type: <xref href="com.microsoft.azure.cosmosdb.DatabaseAccount?alt=com.microsoft.azure.cosmosdb.DatabaseAccount&text=DatabaseAccount" data-throw-if-not-resolved="False"/>
  returns:
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False"/>
  syntax: public static boolean isEnableMultipleWriteLocations(DatabaseAccount account)
  uid: com.microsoft.azure.cosmosdb.BridgeInternal.isEnableMultipleWriteLocations(DatabaseAccount)
- fullName: com.microsoft.azure.cosmosdb.BridgeInternal.noChanges(FeedResponse<T> page)
  name: noChanges(FeedResponse<T> page)
  nameWithType: BridgeInternal.noChanges(FeedResponse<T> page)
  parameters:
  - name: page
    type: <xref href="com.microsoft.azure.cosmosdb.FeedResponse?alt=com.microsoft.azure.cosmosdb.FeedResponse&text=FeedResponse" data-throw-if-not-resolved="False"/>&lt;T&gt;
  returns:
    type: static&lt;T extends <xref href="com.microsoft.azure.cosmosdb.Resource?alt=com.microsoft.azure.cosmosdb.Resource&text=Resource" data-throw-if-not-resolved="False"/>&gt; boolean
  syntax: public static static<T extends Resource> boolean noChanges(FeedResponse<T> page)
  uid: com.microsoft.azure.cosmosdb.BridgeInternal.noChanges(FeedResponse<T>)
- fullName: com.microsoft.azure.cosmosdb.BridgeInternal.noChanges(RxDocumentServiceResponse rsp)
  name: noChanges(RxDocumentServiceResponse rsp)
  nameWithType: BridgeInternal.noChanges(RxDocumentServiceResponse rsp)
  parameters:
  - name: rsp
    type: <xref href="RxDocumentServiceResponse?alt=RxDocumentServiceResponse&text=RxDocumentServiceResponse" data-throw-if-not-resolved="False"/>
  returns:
    type: static&lt;T extends <xref href="com.microsoft.azure.cosmosdb.Resource?alt=com.microsoft.azure.cosmosdb.Resource&text=Resource" data-throw-if-not-resolved="False"/>&gt; boolean
  syntax: public static static<T extends Resource> boolean noChanges(RxDocumentServiceResponse rsp)
  uid: com.microsoft.azure.cosmosdb.BridgeInternal.noChanges(RxDocumentServiceResponse)
- fullName: com.microsoft.azure.cosmosdb.BridgeInternal.putQueryMetricsIntoMap(FeedResponse<T> response, String partitionKeyRangeId, QueryMetrics queryMetrics)
  name: putQueryMetricsIntoMap(FeedResponse<T> response, String partitionKeyRangeId, QueryMetrics queryMetrics)
  nameWithType: BridgeInternal.putQueryMetricsIntoMap(FeedResponse<T> response, String partitionKeyRangeId, QueryMetrics queryMetrics)
  parameters:
  - name: response
    type: <xref href="com.microsoft.azure.cosmosdb.FeedResponse?alt=com.microsoft.azure.cosmosdb.FeedResponse&text=FeedResponse" data-throw-if-not-resolved="False"/>&lt;T&gt;
  - name: partitionKeyRangeId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - name: queryMetrics
    type: <xref href="com.microsoft.azure.cosmosdb.QueryMetrics?alt=com.microsoft.azure.cosmosdb.QueryMetrics&text=QueryMetrics" data-throw-if-not-resolved="False"/>
  returns:
    type: static&lt;T extends <xref href="com.microsoft.azure.cosmosdb.Resource?alt=com.microsoft.azure.cosmosdb.Resource&text=Resource" data-throw-if-not-resolved="False"/>&gt; void
  syntax: public static static<T extends Resource> void putQueryMetricsIntoMap(FeedResponse<T> response, String partitionKeyRangeId, QueryMetrics queryMetrics)
  uid: com.microsoft.azure.cosmosdb.BridgeInternal.putQueryMetricsIntoMap(FeedResponse<T>,String,QueryMetrics)
- fullName: com.microsoft.azure.cosmosdb.BridgeInternal.setAltLink(Resource resource, String altLink)
  name: setAltLink(Resource resource, String altLink)
  nameWithType: BridgeInternal.setAltLink(Resource resource, String altLink)
  parameters:
  - name: resource
    type: <xref href="com.microsoft.azure.cosmosdb.Resource?alt=com.microsoft.azure.cosmosdb.Resource&text=Resource" data-throw-if-not-resolved="False"/>
  - name: altLink
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  syntax: public static void setAltLink(Resource resource, String altLink)
  uid: com.microsoft.azure.cosmosdb.BridgeInternal.setAltLink(Resource,String)
- fullName: com.microsoft.azure.cosmosdb.BridgeInternal.setLSN(E e, long lsn)
  name: setLSN(E e, long lsn)
  nameWithType: BridgeInternal.setLSN(E e, long lsn)
  parameters:
  - name: e
    type: <xref href="E?alt=E&text=E" data-throw-if-not-resolved="False"/>
  - name: lsn
    type: <xref href="long?alt=long&text=long" data-throw-if-not-resolved="False"/>
  returns:
    type: static&lt;E extends <xref href="com.microsoft.azure.cosmosdb.DocumentClientException?alt=com.microsoft.azure.cosmosdb.DocumentClientException&text=DocumentClientException" data-throw-if-not-resolved="False"/>&gt; E
  syntax: public static static<E extends DocumentClientException> E setLSN(E e, long lsn)
  uid: com.microsoft.azure.cosmosdb.BridgeInternal.setLSN(E,long)
- fullName: com.microsoft.azure.cosmosdb.BridgeInternal.setMaxReplicaSetSize(ReplicationPolicy replicationPolicy, int value)
  name: setMaxReplicaSetSize(ReplicationPolicy replicationPolicy, int value)
  nameWithType: BridgeInternal.setMaxReplicaSetSize(ReplicationPolicy replicationPolicy, int value)
  parameters:
  - name: replicationPolicy
    type: <xref href="com.microsoft.azure.cosmosdb.ReplicationPolicy?alt=com.microsoft.azure.cosmosdb.ReplicationPolicy&text=ReplicationPolicy" data-throw-if-not-resolved="False"/>
  - name: value
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  syntax: public static void setMaxReplicaSetSize(ReplicationPolicy replicationPolicy, int value)
  uid: com.microsoft.azure.cosmosdb.BridgeInternal.setMaxReplicaSetSize(ReplicationPolicy,int)
- fullName: com.microsoft.azure.cosmosdb.BridgeInternal.setPartitionKeyRangeId(E e, String partitionKeyRangeId)
  name: setPartitionKeyRangeId(E e, String partitionKeyRangeId)
  nameWithType: BridgeInternal.setPartitionKeyRangeId(E e, String partitionKeyRangeId)
  parameters:
  - name: e
    type: <xref href="E?alt=E&text=E" data-throw-if-not-resolved="False"/>
  - name: partitionKeyRangeId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    type: static&lt;E extends <xref href="com.microsoft.azure.cosmosdb.DocumentClientException?alt=com.microsoft.azure.cosmosdb.DocumentClientException&text=DocumentClientException" data-throw-if-not-resolved="False"/>&gt; E
  syntax: public static static<E extends DocumentClientException> E setPartitionKeyRangeId(E e, String partitionKeyRangeId)
  uid: com.microsoft.azure.cosmosdb.BridgeInternal.setPartitionKeyRangeId(E,String)
- fullName: com.microsoft.azure.cosmosdb.BridgeInternal.setRequestHeaders(DocumentClientException documentClientException, Map<String, String> requestHeaders)
  name: setRequestHeaders(DocumentClientException documentClientException, Map<String, String> requestHeaders)
  nameWithType: BridgeInternal.setRequestHeaders(DocumentClientException documentClientException, Map<String, String> requestHeaders)
  parameters:
  - name: documentClientException
    type: <xref href="com.microsoft.azure.cosmosdb.DocumentClientException?alt=com.microsoft.azure.cosmosdb.DocumentClientException&text=DocumentClientException" data-throw-if-not-resolved="False"/>
  - name: requestHeaders
    type: <xref href="Map%3CString%2C+String%3E?alt=Map%3CString%2C+String%3E&text=Map%3CString%2C+String%3E" data-throw-if-not-resolved="False"/>
  returns:
    type: static&lt;E extends <xref href="com.microsoft.azure.cosmosdb.DocumentClientException?alt=com.microsoft.azure.cosmosdb.DocumentClientException&text=DocumentClientException" data-throw-if-not-resolved="False"/>&gt; void
  syntax: public static static<E extends DocumentClientException> void setRequestHeaders(DocumentClientException documentClientException, Map<String, String> requestHeaders)
  uid: com.microsoft.azure.cosmosdb.BridgeInternal.setRequestHeaders(DocumentClientException,Map<String, String>)
- fullName: com.microsoft.azure.cosmosdb.BridgeInternal.setResourceAddress(E e, String resourceAddress)
  name: setResourceAddress(E e, String resourceAddress)
  nameWithType: BridgeInternal.setResourceAddress(E e, String resourceAddress)
  parameters:
  - name: e
    type: <xref href="E?alt=E&text=E" data-throw-if-not-resolved="False"/>
  - name: resourceAddress
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    type: static&lt;E extends <xref href="com.microsoft.azure.cosmosdb.DocumentClientException?alt=com.microsoft.azure.cosmosdb.DocumentClientException&text=DocumentClientException" data-throw-if-not-resolved="False"/>&gt; E
  syntax: public static static<E extends DocumentClientException> E setResourceAddress(E e, String resourceAddress)
  uid: com.microsoft.azure.cosmosdb.BridgeInternal.setResourceAddress(E,String)
- fullName: com.microsoft.azure.cosmosdb.BridgeInternal.setSubStatusCode(DocumentClientException documentClientException, int subStatusCode)
  name: setSubStatusCode(DocumentClientException documentClientException, int subStatusCode)
  nameWithType: BridgeInternal.setSubStatusCode(DocumentClientException documentClientException, int subStatusCode)
  parameters:
  - name: documentClientException
    type: <xref href="com.microsoft.azure.cosmosdb.DocumentClientException?alt=com.microsoft.azure.cosmosdb.DocumentClientException&text=DocumentClientException" data-throw-if-not-resolved="False"/>
  - name: subStatusCode
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  syntax: public static void setSubStatusCode(DocumentClientException documentClientException, int subStatusCode)
  uid: com.microsoft.azure.cosmosdb.BridgeInternal.setSubStatusCode(DocumentClientException,int)
- fullName: com.microsoft.azure.cosmosdb.BridgeInternal.setUseMultipleWriteLocations(ConnectionPolicy policy, boolean value)
  name: setUseMultipleWriteLocations(ConnectionPolicy policy, boolean value)
  nameWithType: BridgeInternal.setUseMultipleWriteLocations(ConnectionPolicy policy, boolean value)
  parameters:
  - name: policy
    type: <xref href="com.microsoft.azure.cosmosdb.ConnectionPolicy?alt=com.microsoft.azure.cosmosdb.ConnectionPolicy&text=ConnectionPolicy" data-throw-if-not-resolved="False"/>
  - name: value
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False"/>
  syntax: public static void setUseMultipleWriteLocations(ConnectionPolicy policy, boolean value)
  uid: com.microsoft.azure.cosmosdb.BridgeInternal.setUseMultipleWriteLocations(ConnectionPolicy,boolean)
- fullName: com.microsoft.azure.cosmosdb.BridgeInternal.toChaneFeedResponsePage(RxDocumentServiceResponse response, Class<T> cls)
  name: toChaneFeedResponsePage(RxDocumentServiceResponse response, Class<T> cls)
  nameWithType: BridgeInternal.toChaneFeedResponsePage(RxDocumentServiceResponse response, Class<T> cls)
  parameters:
  - name: response
    type: <xref href="RxDocumentServiceResponse?alt=RxDocumentServiceResponse&text=RxDocumentServiceResponse" data-throw-if-not-resolved="False"/>
  - name: cls
    type: <xref href="Class%3CT%3E?alt=Class%3CT%3E&text=Class%3CT%3E" data-throw-if-not-resolved="False"/>
  returns:
    type: static&lt;T extends <xref href="com.microsoft.azure.cosmosdb.Resource?alt=com.microsoft.azure.cosmosdb.Resource&text=Resource" data-throw-if-not-resolved="False"/>&gt; <xref href="com.microsoft.azure.cosmosdb.FeedResponse?alt=com.microsoft.azure.cosmosdb.FeedResponse&text=FeedResponse" data-throw-if-not-resolved="False"/>&lt;T&gt;
  syntax: public static static<T extends Resource> FeedResponse<T> toChaneFeedResponsePage(RxDocumentServiceResponse response, Class<T> cls)
  uid: com.microsoft.azure.cosmosdb.BridgeInternal.toChaneFeedResponsePage(RxDocumentServiceResponse,Class<T>)
- fullName: com.microsoft.azure.cosmosdb.BridgeInternal.toDatabaseAccount(RxDocumentServiceResponse response)
  name: toDatabaseAccount(RxDocumentServiceResponse response)
  nameWithType: BridgeInternal.toDatabaseAccount(RxDocumentServiceResponse response)
  parameters:
  - name: response
    type: <xref href="RxDocumentServiceResponse?alt=RxDocumentServiceResponse&text=RxDocumentServiceResponse" data-throw-if-not-resolved="False"/>
  returns:
    type: <xref href="com.microsoft.azure.cosmosdb.DatabaseAccount?alt=com.microsoft.azure.cosmosdb.DatabaseAccount&text=DatabaseAccount" data-throw-if-not-resolved="False"/>
  syntax: public static DatabaseAccount toDatabaseAccount(RxDocumentServiceResponse response)
  uid: com.microsoft.azure.cosmosdb.BridgeInternal.toDatabaseAccount(RxDocumentServiceResponse)
- fullName: com.microsoft.azure.cosmosdb.BridgeInternal.toFeedResponsePage(RxDocumentServiceResponse response, Class<T> cls)
  name: toFeedResponsePage(RxDocumentServiceResponse response, Class<T> cls)
  nameWithType: BridgeInternal.toFeedResponsePage(RxDocumentServiceResponse response, Class<T> cls)
  parameters:
  - name: response
    type: <xref href="RxDocumentServiceResponse?alt=RxDocumentServiceResponse&text=RxDocumentServiceResponse" data-throw-if-not-resolved="False"/>
  - name: cls
    type: <xref href="Class%3CT%3E?alt=Class%3CT%3E&text=Class%3CT%3E" data-throw-if-not-resolved="False"/>
  returns:
    type: static&lt;T extends <xref href="com.microsoft.azure.cosmosdb.Resource?alt=com.microsoft.azure.cosmosdb.Resource&text=Resource" data-throw-if-not-resolved="False"/>&gt; <xref href="com.microsoft.azure.cosmosdb.FeedResponse?alt=com.microsoft.azure.cosmosdb.FeedResponse&text=FeedResponse" data-throw-if-not-resolved="False"/>&lt;T&gt;
  syntax: public static static<T extends Resource> FeedResponse<T> toFeedResponsePage(RxDocumentServiceResponse response, Class<T> cls)
  uid: com.microsoft.azure.cosmosdb.BridgeInternal.toFeedResponsePage(RxDocumentServiceResponse,Class<T>)
- fullName: com.microsoft.azure.cosmosdb.BridgeInternal.toMediaResponse(RxDocumentServiceResponse response, boolean willBuffer)
  name: toMediaResponse(RxDocumentServiceResponse response, boolean willBuffer)
  nameWithType: BridgeInternal.toMediaResponse(RxDocumentServiceResponse response, boolean willBuffer)
  parameters:
  - name: response
    type: <xref href="RxDocumentServiceResponse?alt=RxDocumentServiceResponse&text=RxDocumentServiceResponse" data-throw-if-not-resolved="False"/>
  - name: willBuffer
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False"/>
  returns:
    type: static&lt;T extends <xref href="com.microsoft.azure.cosmosdb.Resource?alt=com.microsoft.azure.cosmosdb.Resource&text=Resource" data-throw-if-not-resolved="False"/>&gt; <xref href="com.microsoft.azure.cosmosdb.MediaResponse?alt=com.microsoft.azure.cosmosdb.MediaResponse&text=MediaResponse" data-throw-if-not-resolved="False"/>
  syntax: public static static<T extends Resource> MediaResponse toMediaResponse(RxDocumentServiceResponse response, boolean willBuffer)
  uid: com.microsoft.azure.cosmosdb.BridgeInternal.toMediaResponse(RxDocumentServiceResponse,boolean)
- fullName: com.microsoft.azure.cosmosdb.BridgeInternal.toResourceResponse(RxDocumentServiceResponse response, Class<T> cls)
  name: toResourceResponse(RxDocumentServiceResponse response, Class<T> cls)
  nameWithType: BridgeInternal.toResourceResponse(RxDocumentServiceResponse response, Class<T> cls)
  parameters:
  - name: response
    type: <xref href="RxDocumentServiceResponse?alt=RxDocumentServiceResponse&text=RxDocumentServiceResponse" data-throw-if-not-resolved="False"/>
  - name: cls
    type: <xref href="Class%3CT%3E?alt=Class%3CT%3E&text=Class%3CT%3E" data-throw-if-not-resolved="False"/>
  returns:
    type: static&lt;T extends <xref href="com.microsoft.azure.cosmosdb.Resource?alt=com.microsoft.azure.cosmosdb.Resource&text=Resource" data-throw-if-not-resolved="False"/>&gt; <xref href="com.microsoft.azure.cosmosdb.ResourceResponse?alt=com.microsoft.azure.cosmosdb.ResourceResponse&text=ResourceResponse" data-throw-if-not-resolved="False"/>&lt;T&gt;
  syntax: public static static<T extends Resource> ResourceResponse<T> toResourceResponse(RxDocumentServiceResponse response, Class<T> cls)
  uid: com.microsoft.azure.cosmosdb.BridgeInternal.toResourceResponse(RxDocumentServiceResponse,Class<T>)
- fullName: com.microsoft.azure.cosmosdb.BridgeInternal.toStoredProcedureResponse(RxDocumentServiceResponse response)
  name: toStoredProcedureResponse(RxDocumentServiceResponse response)
  nameWithType: BridgeInternal.toStoredProcedureResponse(RxDocumentServiceResponse response)
  parameters:
  - name: response
    type: <xref href="RxDocumentServiceResponse?alt=RxDocumentServiceResponse&text=RxDocumentServiceResponse" data-throw-if-not-resolved="False"/>
  returns:
    type: <xref href="com.microsoft.azure.cosmosdb.StoredProcedureResponse?alt=com.microsoft.azure.cosmosdb.StoredProcedureResponse&text=StoredProcedureResponse" data-throw-if-not-resolved="False"/>
  syntax: public static StoredProcedureResponse toStoredProcedureResponse(RxDocumentServiceResponse response)
  uid: com.microsoft.azure.cosmosdb.BridgeInternal.toStoredProcedureResponse(RxDocumentServiceResponse)
nameWithType: BridgeInternal
syntax: public class BridgeInternal
type: class
uid: com.microsoft.azure.cosmosdb.BridgeInternal
fullName: com.microsoft.azure.cosmosdb.BridgeInternal
name: BridgeInternal
package: com.microsoft.azure.cosmosdb
summary: <p>This is meant to be used only internally as a bridge access to classes in com.microsoft.azure.cosmosdb </p>
metadata: {}
