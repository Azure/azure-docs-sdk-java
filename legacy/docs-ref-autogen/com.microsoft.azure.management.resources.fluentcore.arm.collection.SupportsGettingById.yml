### YamlMime:JavaType
methods:
- fullName: com.microsoft.azure.management.resources.fluentcore.arm.collection.SupportsGettingById<T>.getById(String id)
  name: getById(String id)
  nameWithType: SupportsGettingById<T>.getById(String id)
  parameters:
  - description: <p>the id of the resource. </p>
    name: id
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>an immutable representation of the resource </p>
    type: <xref href="T?alt=T&text=T" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the information about a resource from Azure based on the resource id.</p>

    <p></p>
  syntax: public T getById(String id)
  uid: com.microsoft.azure.management.resources.fluentcore.arm.collection.SupportsGettingById.getById(String)
- fullName: com.microsoft.azure.management.resources.fluentcore.arm.collection.SupportsGettingById<T>.getByIdAsync(String id)
  name: getByIdAsync(String id)
  nameWithType: SupportsGettingById<T>.getByIdAsync(String id)
  parameters:
  - description: <p>the id of the resource. </p>
    name: id
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>an immutable representation of the resource </p>
    type: <xref href="Observable%3CT%3E?alt=Observable%3CT%3E&text=Observable%3CT%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the information about a resource from Azure based on the resource id.</p>

    <p></p>
  syntax: public Observable<T> getByIdAsync(String id)
  uid: com.microsoft.azure.management.resources.fluentcore.arm.collection.SupportsGettingById.getByIdAsync(String)
- fullName: com.microsoft.azure.management.resources.fluentcore.arm.collection.SupportsGettingById<T>.getByIdAsync(String id, ServiceCallback<T> callback)
  name: getByIdAsync(String id, ServiceCallback<T> callback)
  nameWithType: SupportsGettingById<T>.getByIdAsync(String id, ServiceCallback<T> callback)
  parameters:
  - description: <p>the id of the resource. </p>
    name: id
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the callback to call on success or failure </p>
    name: callback
    type: <xref href="ServiceCallback%3CT%3E?alt=ServiceCallback%3CT%3E&text=ServiceCallback%3CT%3E" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>an immutable representation of the resource </p>
    type: <xref href="ServiceFuture%3CT%3E?alt=ServiceFuture%3CT%3E&text=ServiceFuture%3CT%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the information about a resource from Azure based on the resource id.</p>

    <p></p>
  syntax: public ServiceFuture<T> getByIdAsync(String id, ServiceCallback<T> callback)
  uid: com.microsoft.azure.management.resources.fluentcore.arm.collection.SupportsGettingById.getByIdAsync(String,ServiceCallback<T>)
nameWithType: SupportsGettingById<T>
syntax: public interface SupportsGettingById<T>
type: interface
typeParameters:
- description: <p>the type of the resource collection </p>
  name: T
uid: com.microsoft.azure.management.resources.fluentcore.arm.collection.SupportsGettingById
fullName: com.microsoft.azure.management.resources.fluentcore.arm.collection.SupportsGettingById<T>
name: SupportsGettingById<T>
package: com.microsoft.azure.management.resources.fluentcore.arm.collection
summary: >-
  <p>Provides access to getting a specific Azure resource based on its resource ID. </p>

  <p>(Note this interface is not intended to be implemented by user code.)</p>

  <p></p>
metadata: {}
