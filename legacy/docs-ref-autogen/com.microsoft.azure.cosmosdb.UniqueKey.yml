### YamlMime:JavaType
constructors:
- fullName: com.microsoft.azure.cosmosdb.UniqueKey.UniqueKey()
  name: UniqueKey()
  nameWithType: UniqueKey.UniqueKey()
  syntax: public UniqueKey()
  uid: com.microsoft.azure.cosmosdb.UniqueKey.UniqueKey()
- fullName: com.microsoft.azure.cosmosdb.UniqueKey.UniqueKey(String jsonString)
  name: UniqueKey(String jsonString)
  nameWithType: UniqueKey.UniqueKey(String jsonString)
  parameters:
  - name: jsonString
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  syntax: public UniqueKey(String jsonString)
  uid: com.microsoft.azure.cosmosdb.UniqueKey.UniqueKey(String)
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
- <xref href="com.microsoft.azure.cosmosdb.JsonSerializable?alt=com.microsoft.azure.cosmosdb.JsonSerializable&text=JsonSerializable" data-throw-if-not-resolved="False"/>
inheritedMembers:
- com.microsoft.azure.cosmosdb.JsonSerializable.get(String)
- com.microsoft.azure.cosmosdb.JsonSerializable.getBoolean(String)
- com.microsoft.azure.cosmosdb.JsonSerializable.getCollection(String)
- com.microsoft.azure.cosmosdb.JsonSerializable.getDouble(String)
- com.microsoft.azure.cosmosdb.JsonSerializable.getHashMap()
- com.microsoft.azure.cosmosdb.JsonSerializable.getInt(String)
- com.microsoft.azure.cosmosdb.JsonSerializable.getLogger()
- com.microsoft.azure.cosmosdb.JsonSerializable.getLong(String)
- com.microsoft.azure.cosmosdb.JsonSerializable.getMapper()
- com.microsoft.azure.cosmosdb.JsonSerializable.getObject(String)
- com.microsoft.azure.cosmosdb.JsonSerializable.getObjectByPath(List<String>)
- com.microsoft.azure.cosmosdb.JsonSerializable.getString(String)
- com.microsoft.azure.cosmosdb.JsonSerializable.has(String)
- com.microsoft.azure.cosmosdb.JsonSerializable.JsonSerializable()
- com.microsoft.azure.cosmosdb.JsonSerializable.JsonSerializable(String,ObjectMapper)
- com.microsoft.azure.cosmosdb.JsonSerializable.JsonSerializable(String)
- com.microsoft.azure.cosmosdb.JsonSerializable.remove(String)
- com.microsoft.azure.cosmosdb.JsonSerializable.toJson()
- com.microsoft.azure.cosmosdb.JsonSerializable.toJson(SerializationFormattingPolicy)
- com.microsoft.azure.cosmosdb.JsonSerializable.toString()
methods:
- fullName: com.microsoft.azure.cosmosdb.UniqueKey.getPaths()
  name: getPaths()
  nameWithType: UniqueKey.getPaths()
  returns:
    description: <p>the unique paths. </p>
    type: <xref href="Collection%3CString%3E?alt=Collection%3CString%3E&text=Collection%3CString%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the paths, a set of which must be unique for each document in the Azure Cosmos DB service.</p>

    <p>The paths to enforce uniqueness on. Each path is a rooted path of the unique property in the document, such as "/name/first".</p>

    <p></p>
  syntax: public Collection<String> getPaths()
  uid: com.microsoft.azure.cosmosdb.UniqueKey.getPaths()
- fullName: com.microsoft.azure.cosmosdb.UniqueKey.setPaths(Collection<String> paths)
  name: setPaths(Collection<String> paths)
  nameWithType: UniqueKey.setPaths(Collection<String> paths)
  parameters:
  - description: <p>the unique paths. </p>
    name: paths
    type: <xref href="Collection%3CString%3E?alt=Collection%3CString%3E&text=Collection%3CString%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Sets the paths, a set of which must be unique for each document in the Azure Cosmos DB service.</p>

    <p>The paths to enforce uniqueness on. Each path is a rooted path of the unique property in the document, such as "/name/first".</p>

    <p></p>
  syntax: public void setPaths(Collection<String> paths)
  uid: com.microsoft.azure.cosmosdb.UniqueKey.setPaths(Collection<String>)
nameWithType: UniqueKey
syntax: public class UniqueKey extends JsonSerializable
type: class
uid: com.microsoft.azure.cosmosdb.UniqueKey
fullName: com.microsoft.azure.cosmosdb.UniqueKey
name: UniqueKey
package: com.microsoft.azure.cosmosdb
summary: >-
  <p>Represents a unique key on that enforces uniqueness constraint on documents in the collection in the Azure Cosmos DB service.</p>

  <p>1) For partitioned collections, the value of partition key is implicitly a part of each unique key. 2) Uniqueness constraint is also enforced for missing values. For instance, if unique key policy defines a unique key with single property path, there could be only one document that has missing value for this property. </p>
metadata: {}
