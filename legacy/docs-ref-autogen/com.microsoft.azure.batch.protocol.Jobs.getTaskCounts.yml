### YamlMime:JavaMember
nameWithType: Jobs.getTaskCounts
type: method
members:
- fullName: com.microsoft.azure.batch.protocol.Jobs.getTaskCounts(String jobId)
  name: getTaskCounts(String jobId)
  nameWithType: Jobs.getTaskCounts(String jobId)
  parameters:
  - description: <p>The ID of the job. </p>
    name: jobId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="BatchErrorException?alt=BatchErrorException&text=BatchErrorException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  returns:
    description: <p>the TaskCounts object if successful. </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.TaskCounts?alt=com.microsoft.azure.batch.protocol.models.TaskCounts&text=TaskCounts" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the task counts for the specified job. Task counts provide a count of the tasks by active, running or completed task state, and a count of tasks which succeeded or failed. Tasks in the preparing state are counted as running.</p>

    <p></p>
  syntax: public TaskCounts getTaskCounts(String jobId)
  uid: com.microsoft.azure.batch.protocol.Jobs.getTaskCounts(String)
- fullName: com.microsoft.azure.batch.protocol.Jobs.getTaskCounts(String jobId, JobGetTaskCountsOptions jobGetTaskCountsOptions)
  name: getTaskCounts(String jobId, JobGetTaskCountsOptions jobGetTaskCountsOptions)
  nameWithType: Jobs.getTaskCounts(String jobId, JobGetTaskCountsOptions jobGetTaskCountsOptions)
  parameters:
  - description: <p>The ID of the job. </p>
    name: jobId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>Additional parameters for the operation </p>
    name: jobGetTaskCountsOptions
    type: <xref href="com.microsoft.azure.batch.protocol.models.JobGetTaskCountsOptions?alt=com.microsoft.azure.batch.protocol.models.JobGetTaskCountsOptions&text=JobGetTaskCountsOptions" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="BatchErrorException?alt=BatchErrorException&text=BatchErrorException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  returns:
    description: <p>the TaskCounts object if successful. </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.TaskCounts?alt=com.microsoft.azure.batch.protocol.models.TaskCounts&text=TaskCounts" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the task counts for the specified job. Task counts provide a count of the tasks by active, running or completed task state, and a count of tasks which succeeded or failed. Tasks in the preparing state are counted as running.</p>

    <p></p>
  syntax: public TaskCounts getTaskCounts(String jobId, JobGetTaskCountsOptions jobGetTaskCountsOptions)
  uid: com.microsoft.azure.batch.protocol.Jobs.getTaskCounts(String,JobGetTaskCountsOptions)
uid: com.microsoft.azure.batch.protocol.Jobs.getTaskCounts*
fullName: com.microsoft.azure.batch.protocol.Jobs.getTaskCounts(String jobId)
name: getTaskCounts(String jobId)
package: com.microsoft.azure.batch.protocol
metadata: {}
