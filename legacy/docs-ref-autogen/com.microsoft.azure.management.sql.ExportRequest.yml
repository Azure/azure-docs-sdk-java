### YamlMime:JavaType
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
methods:
- fullName: com.microsoft.azure.management.sql.ExportRequest.administratorLogin()
  name: administratorLogin()
  nameWithType: ExportRequest.administratorLogin()
  returns:
    description: <p>the administratorLogin value </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the name of the SQL administrator.</p>

    <p></p>
  syntax: public String administratorLogin()
  uid: com.microsoft.azure.management.sql.ExportRequest.administratorLogin()
- fullName: com.microsoft.azure.management.sql.ExportRequest.administratorLoginPassword()
  name: administratorLoginPassword()
  nameWithType: ExportRequest.administratorLoginPassword()
  returns:
    description: <p>the administratorLoginPassword value </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the password of the SQL administrator.</p>

    <p></p>
  syntax: public String administratorLoginPassword()
  uid: com.microsoft.azure.management.sql.ExportRequest.administratorLoginPassword()
- fullName: com.microsoft.azure.management.sql.ExportRequest.authenticationType()
  name: authenticationType()
  nameWithType: ExportRequest.authenticationType()
  returns:
    description: <p>the authenticationType value </p>
    type: <xref href="com.microsoft.azure.management.sql.AuthenticationType?alt=com.microsoft.azure.management.sql.AuthenticationType&text=AuthenticationType" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the authentication type. Possible values include: 'SQL', 'ADPassword'.</p>

    <p></p>
  syntax: public AuthenticationType authenticationType()
  uid: com.microsoft.azure.management.sql.ExportRequest.authenticationType()
- fullName: com.microsoft.azure.management.sql.ExportRequest.storageKey()
  name: storageKey()
  nameWithType: ExportRequest.storageKey()
  returns:
    description: <p>the storageKey value </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the storage key to use. If storage key type is SharedAccessKey, it must be preceded with a "?.".</p>

    <p></p>
  syntax: public String storageKey()
  uid: com.microsoft.azure.management.sql.ExportRequest.storageKey()
- fullName: com.microsoft.azure.management.sql.ExportRequest.storageKeyType()
  name: storageKeyType()
  nameWithType: ExportRequest.storageKeyType()
  returns:
    description: <p>the storageKeyType value </p>
    type: <xref href="com.microsoft.azure.management.sql.StorageKeyType?alt=com.microsoft.azure.management.sql.StorageKeyType&text=StorageKeyType" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the type of the storage key to use. Possible values include: 'StorageAccessKey', 'SharedAccessKey'.</p>

    <p></p>
  syntax: public StorageKeyType storageKeyType()
  uid: com.microsoft.azure.management.sql.ExportRequest.storageKeyType()
- fullName: com.microsoft.azure.management.sql.ExportRequest.storageUri()
  name: storageUri()
  nameWithType: ExportRequest.storageUri()
  returns:
    description: <p>the storageUri value </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the storage uri to use.</p>

    <p></p>
  syntax: public String storageUri()
  uid: com.microsoft.azure.management.sql.ExportRequest.storageUri()
- fullName: com.microsoft.azure.management.sql.ExportRequest.withAdministratorLogin(String administratorLogin)
  name: withAdministratorLogin(String administratorLogin)
  nameWithType: ExportRequest.withAdministratorLogin(String administratorLogin)
  parameters:
  - description: <p>the administratorLogin value to set </p>
    name: administratorLogin
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the ExportRequest object itself. </p>
    type: <xref href="com.microsoft.azure.management.sql.ExportRequest?alt=com.microsoft.azure.management.sql.ExportRequest&text=ExportRequest" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the name of the SQL administrator.</p>

    <p></p>
  syntax: public ExportRequest withAdministratorLogin(String administratorLogin)
  uid: com.microsoft.azure.management.sql.ExportRequest.withAdministratorLogin(String)
- fullName: com.microsoft.azure.management.sql.ExportRequest.withAdministratorLoginPassword(String administratorLoginPassword)
  name: withAdministratorLoginPassword(String administratorLoginPassword)
  nameWithType: ExportRequest.withAdministratorLoginPassword(String administratorLoginPassword)
  parameters:
  - description: <p>the administratorLoginPassword value to set </p>
    name: administratorLoginPassword
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the ExportRequest object itself. </p>
    type: <xref href="com.microsoft.azure.management.sql.ExportRequest?alt=com.microsoft.azure.management.sql.ExportRequest&text=ExportRequest" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the password of the SQL administrator.</p>

    <p></p>
  syntax: public ExportRequest withAdministratorLoginPassword(String administratorLoginPassword)
  uid: com.microsoft.azure.management.sql.ExportRequest.withAdministratorLoginPassword(String)
- fullName: com.microsoft.azure.management.sql.ExportRequest.withAuthenticationType(AuthenticationType authenticationType)
  name: withAuthenticationType(AuthenticationType authenticationType)
  nameWithType: ExportRequest.withAuthenticationType(AuthenticationType authenticationType)
  parameters:
  - description: <p>the authenticationType value to set </p>
    name: authenticationType
    type: <xref href="com.microsoft.azure.management.sql.AuthenticationType?alt=com.microsoft.azure.management.sql.AuthenticationType&text=AuthenticationType" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the ExportRequest object itself. </p>
    type: <xref href="com.microsoft.azure.management.sql.ExportRequest?alt=com.microsoft.azure.management.sql.ExportRequest&text=ExportRequest" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the authentication type. Possible values include: 'SQL', 'ADPassword'.</p>

    <p></p>
  syntax: public ExportRequest withAuthenticationType(AuthenticationType authenticationType)
  uid: com.microsoft.azure.management.sql.ExportRequest.withAuthenticationType(AuthenticationType)
- fullName: com.microsoft.azure.management.sql.ExportRequest.withStorageKey(String storageKey)
  name: withStorageKey(String storageKey)
  nameWithType: ExportRequest.withStorageKey(String storageKey)
  parameters:
  - description: <p>the storageKey value to set </p>
    name: storageKey
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the ExportRequest object itself. </p>
    type: <xref href="com.microsoft.azure.management.sql.ExportRequest?alt=com.microsoft.azure.management.sql.ExportRequest&text=ExportRequest" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the storage key to use. If storage key type is SharedAccessKey, it must be preceded with a "?.".</p>

    <p></p>
  syntax: public ExportRequest withStorageKey(String storageKey)
  uid: com.microsoft.azure.management.sql.ExportRequest.withStorageKey(String)
- fullName: com.microsoft.azure.management.sql.ExportRequest.withStorageKeyType(StorageKeyType storageKeyType)
  name: withStorageKeyType(StorageKeyType storageKeyType)
  nameWithType: ExportRequest.withStorageKeyType(StorageKeyType storageKeyType)
  parameters:
  - description: <p>the storageKeyType value to set </p>
    name: storageKeyType
    type: <xref href="com.microsoft.azure.management.sql.StorageKeyType?alt=com.microsoft.azure.management.sql.StorageKeyType&text=StorageKeyType" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the ExportRequest object itself. </p>
    type: <xref href="com.microsoft.azure.management.sql.ExportRequest?alt=com.microsoft.azure.management.sql.ExportRequest&text=ExportRequest" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the type of the storage key to use. Possible values include: 'StorageAccessKey', 'SharedAccessKey'.</p>

    <p></p>
  syntax: public ExportRequest withStorageKeyType(StorageKeyType storageKeyType)
  uid: com.microsoft.azure.management.sql.ExportRequest.withStorageKeyType(StorageKeyType)
- fullName: com.microsoft.azure.management.sql.ExportRequest.withStorageUri(String storageUri)
  name: withStorageUri(String storageUri)
  nameWithType: ExportRequest.withStorageUri(String storageUri)
  parameters:
  - description: <p>the storageUri value to set </p>
    name: storageUri
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the ExportRequest object itself. </p>
    type: <xref href="com.microsoft.azure.management.sql.ExportRequest?alt=com.microsoft.azure.management.sql.ExportRequest&text=ExportRequest" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the storage uri to use.</p>

    <p></p>
  syntax: public ExportRequest withStorageUri(String storageUri)
  uid: com.microsoft.azure.management.sql.ExportRequest.withStorageUri(String)
nameWithType: ExportRequest
syntax: public class ExportRequest
type: class
uid: com.microsoft.azure.management.sql.ExportRequest
fullName: com.microsoft.azure.management.sql.ExportRequest
name: ExportRequest
package: com.microsoft.azure.management.sql
summary: <p>Export database parameters. </p>
metadata: {}
