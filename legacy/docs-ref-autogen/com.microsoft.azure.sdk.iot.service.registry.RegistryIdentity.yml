### YamlMime:JavaType
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
methods:
- fullName: com.microsoft.azure.sdk.iot.service.registry.RegistryIdentity.getAuthenticationType()
  name: getAuthenticationType()
  nameWithType: RegistryIdentity.getAuthenticationType()
  returns:
    description: <p>the authentication type </p>
    type: <xref href="com.microsoft.azure.sdk.iot.service.auth.AuthenticationType?alt=com.microsoft.azure.sdk.iot.service.auth.AuthenticationType&text=AuthenticationType" data-throw-if-not-resolved="False"/>
  summary: <p>Getter for the authentication type of this device </p>
  syntax: public AuthenticationType getAuthenticationType()
  uid: com.microsoft.azure.sdk.iot.service.registry.RegistryIdentity.getAuthenticationType()
- fullName: com.microsoft.azure.sdk.iot.service.registry.RegistryIdentity.getPrimaryKey()
  name: getPrimaryKey()
  nameWithType: RegistryIdentity.getPrimaryKey()
  returns:
    description: <p>The primaryKey string </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Getter for PrimaryKey part of the SymmetricKey</p>

    <p></p>
  syntax: public String getPrimaryKey()
  uid: com.microsoft.azure.sdk.iot.service.registry.RegistryIdentity.getPrimaryKey()
- fullName: com.microsoft.azure.sdk.iot.service.registry.RegistryIdentity.getPrimaryThumbprint()
  name: getPrimaryThumbprint()
  nameWithType: RegistryIdentity.getPrimaryThumbprint()
  returns:
    description: <p>The primary thumbprint string </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Getter for primary thumbprint part of the whole thumbprint</p>

    <p></p>
  syntax: public String getPrimaryThumbprint()
  uid: com.microsoft.azure.sdk.iot.service.registry.RegistryIdentity.getPrimaryThumbprint()
- fullName: com.microsoft.azure.sdk.iot.service.registry.RegistryIdentity.getSecondaryKey()
  name: getSecondaryKey()
  nameWithType: RegistryIdentity.getSecondaryKey()
  returns:
    description: <p>The secondaryKey string </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Getter for SecondaryKey part of the SymmetricKey</p>

    <p></p>
  syntax: public String getSecondaryKey()
  uid: com.microsoft.azure.sdk.iot.service.registry.RegistryIdentity.getSecondaryKey()
- fullName: com.microsoft.azure.sdk.iot.service.registry.RegistryIdentity.getSecondaryThumbprint()
  name: getSecondaryThumbprint()
  nameWithType: RegistryIdentity.getSecondaryThumbprint()
  returns:
    description: <p>The secondary thumbprint string </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Getter for secondary thumbprint part of the whole thumbprint</p>

    <p></p>
  syntax: public String getSecondaryThumbprint()
  uid: com.microsoft.azure.sdk.iot.service.registry.RegistryIdentity.getSecondaryThumbprint()
- fullName: com.microsoft.azure.sdk.iot.service.registry.RegistryIdentity.getSymmetricKey()
  name: getSymmetricKey()
  nameWithType: RegistryIdentity.getSymmetricKey()
  returns:
    description: <p>The symmetricKey object </p>
    type: <xref href="com.microsoft.azure.sdk.iot.service.auth.SymmetricKey?alt=com.microsoft.azure.sdk.iot.service.auth.SymmetricKey&text=SymmetricKey" data-throw-if-not-resolved="False"/>
  summary: <p>Getter for SymmetricKey object </p>
  syntax: public SymmetricKey getSymmetricKey()
  uid: com.microsoft.azure.sdk.iot.service.registry.RegistryIdentity.getSymmetricKey()
- fullName: com.microsoft.azure.sdk.iot.service.registry.RegistryIdentity.setSymmetricKey(SymmetricKey symmetricKey)
  name: setSymmetricKey(SymmetricKey symmetricKey)
  nameWithType: RegistryIdentity.setSymmetricKey(SymmetricKey symmetricKey)
  parameters:
  - description: <p>symmetricKey to be set </p>
    name: symmetricKey
    type: <xref href="com.microsoft.azure.sdk.iot.service.auth.SymmetricKey?alt=com.microsoft.azure.sdk.iot.service.auth.SymmetricKey&text=SymmetricKey" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>if the provided symmetric key is null </p>
  summary: >-
    <p>Setter for SymmetricKey object</p>

    <p></p>
  syntax: public void setSymmetricKey(SymmetricKey symmetricKey)
  uid: com.microsoft.azure.sdk.iot.service.registry.RegistryIdentity.setSymmetricKey(SymmetricKey)
- fullName: com.microsoft.azure.sdk.iot.service.registry.RegistryIdentity.setThumbprint(String primaryThumbprint, String secondaryThumbprint)
  name: setThumbprint(String primaryThumbprint, String secondaryThumbprint)
  nameWithType: RegistryIdentity.setThumbprint(String primaryThumbprint, String secondaryThumbprint)
  parameters:
  - description: <p>the primary thumbprint to set </p>
    name: primaryThumbprint
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the secondary thumbprint to set</p>
    name: secondaryThumbprint
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>if primaryThumbprint or secondaryThumbprint is null or empty </p>
  returns:
    type: <xref href="final+void?alt=final+void&text=final+void" data-throw-if-not-resolved="False"/>
  summary: <p>Setter for X509 thumbprint </p>
  syntax: public final void setThumbprint(String primaryThumbprint, String secondaryThumbprint)
  uid: com.microsoft.azure.sdk.iot.service.registry.RegistryIdentity.setThumbprint(String,String)
nameWithType: RegistryIdentity
syntax: public class RegistryIdentity
type: class
uid: com.microsoft.azure.sdk.iot.service.registry.RegistryIdentity
fullName: com.microsoft.azure.sdk.iot.service.registry.RegistryIdentity
name: RegistryIdentity
package: com.microsoft.azure.sdk.iot.service.registry
summary: <p>The RegistryIdentity class implementing constructors and serialization functionality. </p>
metadata: {}
