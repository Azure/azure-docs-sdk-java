### YamlMime:JavaMember
nameWithType: Accounts.listPoolNodeCountsWithServiceResponseAsync
type: method
members:
- fullName: com.microsoft.azure.batch.protocol.Accounts.listPoolNodeCountsWithServiceResponseAsync()
  name: listPoolNodeCountsWithServiceResponseAsync()
  nameWithType: Accounts.listPoolNodeCountsWithServiceResponseAsync()
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the PagedList&lt;PoolNodeCounts&gt; object </p>
    type: Observable&lt;ServiceResponseWithHeaders&lt;Page&lt;<xref href="com.microsoft.azure.batch.protocol.models.PoolNodeCounts?alt=com.microsoft.azure.batch.protocol.models.PoolNodeCounts&text=PoolNodeCounts" data-throw-if-not-resolved="False"/>&gt;, <xref href="com.microsoft.azure.batch.protocol.models.AccountListPoolNodeCountsHeaders?alt=com.microsoft.azure.batch.protocol.models.AccountListPoolNodeCountsHeaders&text=AccountListPoolNodeCountsHeaders" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Gets the number of nodes in each state, grouped by pool.</p>

    <p></p>
  syntax: public Observable<ServiceResponseWithHeaders<Page<PoolNodeCounts>, AccountListPoolNodeCountsHeaders>> listPoolNodeCountsWithServiceResponseAsync()
  uid: com.microsoft.azure.batch.protocol.Accounts.listPoolNodeCountsWithServiceResponseAsync()
- fullName: com.microsoft.azure.batch.protocol.Accounts.listPoolNodeCountsWithServiceResponseAsync(final AccountListPoolNodeCountsOptions accountListPoolNodeCountsOptions)
  name: listPoolNodeCountsWithServiceResponseAsync(final AccountListPoolNodeCountsOptions accountListPoolNodeCountsOptions)
  nameWithType: Accounts.listPoolNodeCountsWithServiceResponseAsync(final AccountListPoolNodeCountsOptions accountListPoolNodeCountsOptions)
  parameters:
  - description: <p>Additional parameters for the operation </p>
    name: accountListPoolNodeCountsOptions
    type: final <xref href="com.microsoft.azure.batch.protocol.models.AccountListPoolNodeCountsOptions?alt=com.microsoft.azure.batch.protocol.models.AccountListPoolNodeCountsOptions&text=AccountListPoolNodeCountsOptions" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the PagedList&lt;PoolNodeCounts&gt; object </p>
    type: Observable&lt;ServiceResponseWithHeaders&lt;Page&lt;<xref href="com.microsoft.azure.batch.protocol.models.PoolNodeCounts?alt=com.microsoft.azure.batch.protocol.models.PoolNodeCounts&text=PoolNodeCounts" data-throw-if-not-resolved="False"/>&gt;, <xref href="com.microsoft.azure.batch.protocol.models.AccountListPoolNodeCountsHeaders?alt=com.microsoft.azure.batch.protocol.models.AccountListPoolNodeCountsHeaders&text=AccountListPoolNodeCountsHeaders" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Gets the number of nodes in each state, grouped by pool.</p>

    <p></p>
  syntax: public Observable<ServiceResponseWithHeaders<Page<PoolNodeCounts>, AccountListPoolNodeCountsHeaders>> listPoolNodeCountsWithServiceResponseAsync(final AccountListPoolNodeCountsOptions accountListPoolNodeCountsOptions)
  uid: com.microsoft.azure.batch.protocol.Accounts.listPoolNodeCountsWithServiceResponseAsync(final AccountListPoolNodeCountsOptions)
uid: com.microsoft.azure.batch.protocol.Accounts.listPoolNodeCountsWithServiceResponseAsync*
fullName: com.microsoft.azure.batch.protocol.Accounts.listPoolNodeCountsWithServiceResponseAsync()
name: listPoolNodeCountsWithServiceResponseAsync()
package: com.microsoft.azure.batch.protocol
metadata: {}
