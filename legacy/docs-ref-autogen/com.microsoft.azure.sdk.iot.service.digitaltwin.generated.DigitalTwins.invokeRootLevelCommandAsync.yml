### YamlMime:JavaMember
nameWithType: DigitalTwins.invokeRootLevelCommandAsync
type: method
members:
- fullName: com.microsoft.azure.sdk.iot.service.digitaltwin.generated.DigitalTwins.invokeRootLevelCommandAsync(String id, String commandName)
  name: invokeRootLevelCommandAsync(String id, String commandName)
  nameWithType: DigitalTwins.invokeRootLevelCommandAsync(String id, String commandName)
  parameters:
  - description: <p>the String value </p>
    name: id
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the String value </p>
    name: commandName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the Object object </p>
    type: <xref href="Observable%3CObject%3E?alt=Observable%3CObject%3E&text=Observable%3CObject%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Invoke a digital twin root level command.</p>

    <p></p>
  syntax: public Observable<Object> invokeRootLevelCommandAsync(String id, String commandName)
  uid: com.microsoft.azure.sdk.iot.service.digitaltwin.generated.DigitalTwins.invokeRootLevelCommandAsync(String,String)
- fullName: com.microsoft.azure.sdk.iot.service.digitaltwin.generated.DigitalTwins.invokeRootLevelCommandAsync(String id, String commandName, final ServiceCallback<Object> serviceCallback)
  name: invokeRootLevelCommandAsync(String id, String commandName, final ServiceCallback<Object> serviceCallback)
  nameWithType: DigitalTwins.invokeRootLevelCommandAsync(String id, String commandName, final ServiceCallback<Object> serviceCallback)
  parameters:
  - description: <p>the String value </p>
    name: id
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the String value </p>
    name: commandName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    name: serviceCallback
    type: <xref href="final+ServiceCallback%3CObject%3E?alt=final+ServiceCallback%3CObject%3E&text=final+ServiceCallback%3CObject%3E" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
    type: <xref href="ServiceFuture%3CObject%3E?alt=ServiceFuture%3CObject%3E&text=ServiceFuture%3CObject%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Invoke a digital twin root level command.</p>

    <p></p>
  syntax: public ServiceFuture<Object> invokeRootLevelCommandAsync(String id, String commandName, final ServiceCallback<Object> serviceCallback)
  uid: com.microsoft.azure.sdk.iot.service.digitaltwin.generated.DigitalTwins.invokeRootLevelCommandAsync(String,String,final ServiceCallback<Object>)
- fullName: com.microsoft.azure.sdk.iot.service.digitaltwin.generated.DigitalTwins.invokeRootLevelCommandAsync(String id, String commandName, Object payload, Integer connectTimeoutInSeconds, Integer responseTimeoutInSeconds)
  name: invokeRootLevelCommandAsync(String id, String commandName, Object payload, Integer connectTimeoutInSeconds, Integer responseTimeoutInSeconds)
  nameWithType: DigitalTwins.invokeRootLevelCommandAsync(String id, String commandName, Object payload, Integer connectTimeoutInSeconds, Integer responseTimeoutInSeconds)
  parameters:
  - description: <p>the String value </p>
    name: id
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the String value </p>
    name: commandName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the Object value </p>
    name: payload
    type: <xref href="Object?alt=Object&text=Object" data-throw-if-not-resolved="False"/>
  - description: <p>Maximum interval of time, in seconds, that the digital twin command will wait for the answer. </p>
    name: connectTimeoutInSeconds
    type: <xref href="Integer?alt=Integer&text=Integer" data-throw-if-not-resolved="False"/>
  - description: <p>Maximum interval of time, in seconds, that the digital twin command will wait for the answer. </p>
    name: responseTimeoutInSeconds
    type: <xref href="Integer?alt=Integer&text=Integer" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the Object object </p>
    type: <xref href="Observable%3CObject%3E?alt=Observable%3CObject%3E&text=Observable%3CObject%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Invoke a digital twin root level command.</p>

    <p></p>
  syntax: public Observable<Object> invokeRootLevelCommandAsync(String id, String commandName, Object payload, Integer connectTimeoutInSeconds, Integer responseTimeoutInSeconds)
  uid: com.microsoft.azure.sdk.iot.service.digitaltwin.generated.DigitalTwins.invokeRootLevelCommandAsync(String,String,Object,Integer,Integer)
- fullName: com.microsoft.azure.sdk.iot.service.digitaltwin.generated.DigitalTwins.invokeRootLevelCommandAsync(String id, String commandName, Object payload, Integer connectTimeoutInSeconds, Integer responseTimeoutInSeconds, final ServiceCallback<Object> serviceCallback)
  name: invokeRootLevelCommandAsync(String id, String commandName, Object payload, Integer connectTimeoutInSeconds, Integer responseTimeoutInSeconds, final ServiceCallback<Object> serviceCallback)
  nameWithType: DigitalTwins.invokeRootLevelCommandAsync(String id, String commandName, Object payload, Integer connectTimeoutInSeconds, Integer responseTimeoutInSeconds, final ServiceCallback<Object> serviceCallback)
  parameters:
  - description: <p>the String value </p>
    name: id
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the String value </p>
    name: commandName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the Object value </p>
    name: payload
    type: <xref href="Object?alt=Object&text=Object" data-throw-if-not-resolved="False"/>
  - description: <p>Maximum interval of time, in seconds, that the digital twin command will wait for the answer. </p>
    name: connectTimeoutInSeconds
    type: <xref href="Integer?alt=Integer&text=Integer" data-throw-if-not-resolved="False"/>
  - description: <p>Maximum interval of time, in seconds, that the digital twin command will wait for the answer. </p>
    name: responseTimeoutInSeconds
    type: <xref href="Integer?alt=Integer&text=Integer" data-throw-if-not-resolved="False"/>
  - description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    name: serviceCallback
    type: <xref href="final+ServiceCallback%3CObject%3E?alt=final+ServiceCallback%3CObject%3E&text=final+ServiceCallback%3CObject%3E" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
    type: <xref href="ServiceFuture%3CObject%3E?alt=ServiceFuture%3CObject%3E&text=ServiceFuture%3CObject%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Invoke a digital twin root level command.</p>

    <p></p>
  syntax: public ServiceFuture<Object> invokeRootLevelCommandAsync(String id, String commandName, Object payload, Integer connectTimeoutInSeconds, Integer responseTimeoutInSeconds, final ServiceCallback<Object> serviceCallback)
  uid: com.microsoft.azure.sdk.iot.service.digitaltwin.generated.DigitalTwins.invokeRootLevelCommandAsync(String,String,Object,Integer,Integer,final ServiceCallback<Object>)
uid: com.microsoft.azure.sdk.iot.service.digitaltwin.generated.DigitalTwins.invokeRootLevelCommandAsync*
fullName: com.microsoft.azure.sdk.iot.service.digitaltwin.generated.DigitalTwins.invokeRootLevelCommandAsync
name: invokeRootLevelCommandAsync(String id, String commandName)
package: com.microsoft.azure.sdk.iot.service.digitaltwin.generated
metadata: {}
