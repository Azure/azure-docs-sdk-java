### YamlMime:JavaMember
nameWithType: TwinQueryResponse.next
type: method
members:
- fullName: com.microsoft.azure.sdk.iot.service.query.TwinQueryResponse.next()
  name: next()
  nameWithType: TwinQueryResponse.next()
  exceptions:
  - type: <xref href="IotHubException?alt=IotHubException&text=IotHubException" data-throw-if-not-resolved="False"/>
    description: <p>If any IoT Hub level errors occur such as an <xref uid="" data-throw-if-not-resolved="false" data-raw-source="IotHubUnauthorizedException"></xref>. </p>
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
    description: <p>If any network level errors occur. </p>
  - type: <xref href="NoSuchElementException?alt=NoSuchElementException&text=NoSuchElementException" data-throw-if-not-resolved="False"/>
    description: <p>If there is no next Twin to return anymore. </p>
  returns:
    description: <p>the next Twin from the query. </p>
    type: <xref href="com.microsoft.azure.sdk.iot.service.twin.Twin?alt=com.microsoft.azure.sdk.iot.service.twin.Twin&text=Twin" data-throw-if-not-resolved="False"/>
  summary: <p>Return the next Twin from the query. If the previous page of query results has been exhausted, then this method will make a request to the service to get the next page of results using the default paging options. </p>
  syntax: public Twin next()
  uid: com.microsoft.azure.sdk.iot.service.query.TwinQueryResponse.next()
- fullName: com.microsoft.azure.sdk.iot.service.query.TwinQueryResponse.next(QueryPageOptions pageOptions)
  name: next(QueryPageOptions pageOptions)
  nameWithType: TwinQueryResponse.next(QueryPageOptions pageOptions)
  parameters:
  - description: <p>the options for the next page of results if the next page is retrieved to fulfil this request for the next Twin. May not be null. </p>
    name: pageOptions
    type: <xref href="com.microsoft.azure.sdk.iot.service.query.QueryPageOptions?alt=com.microsoft.azure.sdk.iot.service.query.QueryPageOptions&text=QueryPageOptions" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IotHubException?alt=IotHubException&text=IotHubException" data-throw-if-not-resolved="False"/>
    description: <p>If any IoT Hub level errors occur such as an <xref uid="" data-throw-if-not-resolved="false" data-raw-source="IotHubUnauthorizedException"></xref>. </p>
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
    description: <p>If any network level errors occur. </p>
  - type: <xref href="NoSuchElementException?alt=NoSuchElementException&text=NoSuchElementException" data-throw-if-not-resolved="False"/>
    description: <p>If there is no next Twin to return anymore. </p>
  returns:
    description: <p>the next Twin from the query. </p>
    type: <xref href="com.microsoft.azure.sdk.iot.service.twin.Twin?alt=com.microsoft.azure.sdk.iot.service.twin.Twin&text=Twin" data-throw-if-not-resolved="False"/>
  summary: <p>Return the next Twin from the query. If the previous page of query results has been exhausted, then this method will make a request to the service to get the next page of results using the provided paging options. </p>
  syntax: public Twin next(QueryPageOptions pageOptions)
  uid: com.microsoft.azure.sdk.iot.service.query.TwinQueryResponse.next(QueryPageOptions)
uid: com.microsoft.azure.sdk.iot.service.query.TwinQueryResponse.next*
fullName: com.microsoft.azure.sdk.iot.service.query.TwinQueryResponse.next
name: next()
package: com.microsoft.azure.sdk.iot.service.query
metadata: {}
