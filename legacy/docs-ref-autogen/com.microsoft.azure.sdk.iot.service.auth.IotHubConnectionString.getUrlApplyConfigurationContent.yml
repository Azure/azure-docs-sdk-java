### YamlMime:JavaMember
nameWithType: IotHubConnectionString.getUrlApplyConfigurationContent
type: method
members:
- fullName: com.microsoft.azure.sdk.iot.service.auth.IotHubConnectionString.getUrlApplyConfigurationContent(String deviceId)
  name: getUrlApplyConfigurationContent(String deviceId)
  nameWithType: IotHubConnectionString.getUrlApplyConfigurationContent(String deviceId)
  parameters:
  - description: <p>The device to apply the configuration content to </p>
    name: deviceId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="MalformedURLException?alt=MalformedURLException&text=MalformedURLException" data-throw-if-not-resolved="False"/>
    description: <p>if the deviceId contains unexpected characters, and a URL cannot be constructed using it </p>
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>if deviceId is null or empty </p>
  returns:
    description: '<p>The device Url in the following format: "https:[hostname]/devices/[deviceId]/applyConfigurationContent?api-version=201X-XX-XX" </p>'
    type: <xref href="URL?alt=URL&text=URL" data-throw-if-not-resolved="False"/>
  summary: <p>Create the url needed to apply some configuration content to a device </p>
  syntax: public URL getUrlApplyConfigurationContent(String deviceId)
  uid: com.microsoft.azure.sdk.iot.service.auth.IotHubConnectionString.getUrlApplyConfigurationContent(String)
- fullName: com.microsoft.azure.sdk.iot.service.auth.IotHubConnectionString.getUrlApplyConfigurationContent(String hostName, String deviceId)
  name: getUrlApplyConfigurationContent(String hostName, String deviceId)
  nameWithType: IotHubConnectionString.getUrlApplyConfigurationContent(String hostName, String deviceId)
  parameters:
  - description: <p>The hostname of the IoT Hub </p>
    name: hostName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The device to apply the configuration content to </p>
    name: deviceId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="MalformedURLException?alt=MalformedURLException&text=MalformedURLException" data-throw-if-not-resolved="False"/>
    description: <p>if the deviceId contains unexpected characters, and a URL cannot be constructed using it </p>
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>if deviceId is null or empty </p>
  returns:
    description: '<p>The device Url in the following format: "https:[hostname]/devices/[deviceId]/applyConfigurationContent?api-version=201X-XX-XX" </p>'
    type: <xref href="URL?alt=URL&text=URL" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Create the url needed to apply some configuration content to a device</p>

    <p></p>
  syntax: public static URL getUrlApplyConfigurationContent(String hostName, String deviceId)
  uid: com.microsoft.azure.sdk.iot.service.auth.IotHubConnectionString.getUrlApplyConfigurationContent(String,String)
uid: com.microsoft.azure.sdk.iot.service.auth.IotHubConnectionString.getUrlApplyConfigurationContent*
fullName: com.microsoft.azure.sdk.iot.service.auth.IotHubConnectionString.getUrlApplyConfigurationContent
name: getUrlApplyConfigurationContent(String deviceId)
package: com.microsoft.azure.sdk.iot.service.auth
metadata: {}
