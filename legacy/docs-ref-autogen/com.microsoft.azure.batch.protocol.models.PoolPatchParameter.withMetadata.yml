### YamlMime:JavaMember
nameWithType: PoolPatchParameter.withMetadata
type: method
members:
- fullName: com.microsoft.azure.batch.protocol.models.PoolPatchParameter.withMetadata(List<MetadataItem> metadata)
  name: withMetadata(List<MetadataItem> metadata)
  nameWithType: PoolPatchParameter.withMetadata(List<MetadataItem> metadata)
  parameters:
  - description: <p>the metadata value to set </p>
    name: metadata
    type: List&lt;<xref href="com.microsoft.azure.batch.protocol.models.MetadataItem?alt=com.microsoft.azure.batch.protocol.models.MetadataItem&text=MetadataItem" data-throw-if-not-resolved="False"/>&gt;
  returns:
    description: <p>the PoolPatchParameter object itself. </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.PoolPatchParameter?alt=com.microsoft.azure.batch.protocol.models.PoolPatchParameter&text=PoolPatchParameter" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set if this element is present, it replaces any existing metadata configured on the pool. If you specify an empty collection, any metadata is removed from the pool. If omitted, any existing metadata is left unchanged.</p>

    <p></p>
  syntax: public PoolPatchParameter withMetadata(List<MetadataItem> metadata)
  uid: com.microsoft.azure.batch.protocol.models.PoolPatchParameter.withMetadata(List<MetadataItem>)
uid: com.microsoft.azure.batch.protocol.models.PoolPatchParameter.withMetadata*
fullName: com.microsoft.azure.batch.protocol.models.PoolPatchParameter.withMetadata(List<MetadataItem> metadata)
name: withMetadata(List<MetadataItem> metadata)
package: com.microsoft.azure.batch.protocol.models
metadata: {}
