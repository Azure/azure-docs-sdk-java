### YamlMime:JavaMember
nameWithType: HttpsIotHubConnection.open
type: method
members:
- fullName: com.microsoft.azure.sdk.iot.device.transport.https.HttpsIotHubConnection.open(Queue<DeviceClientConfig> deviceClientConfigs)
  name: open(Queue<DeviceClientConfig> deviceClientConfigs)
  nameWithType: HttpsIotHubConnection.open(Queue<DeviceClientConfig> deviceClientConfigs)
  overridden: com.microsoft.azure.sdk.iot.device.transport.IotHubTransportConnection.open(Queue<DeviceClientConfig>)
  parameters:
  - description: <p>The list of configs to use. If more than 1 configs are in this list, multiplexing will be used </p>
    name: deviceClientConfigs
    type: Queue&lt;<xref href="com.microsoft.azure.sdk.iot.device.DeviceClientConfig?alt=com.microsoft.azure.sdk.iot.device.DeviceClientConfig&text=DeviceClientConfig" data-throw-if-not-resolved="False"/>&gt;
  exceptions:
  - type: <xref href="TransportException?alt=TransportException&text=TransportException" data-throw-if-not-resolved="False"/>
    description: <p>If any exceptions are encountered while opening the connection </p>
  summary: <p>Opens the transport connection object </p>
  syntax: public void open(Queue<DeviceClientConfig> deviceClientConfigs)
  uid: com.microsoft.azure.sdk.iot.device.transport.https.HttpsIotHubConnection.open(Queue<DeviceClientConfig>)
uid: com.microsoft.azure.sdk.iot.device.transport.https.HttpsIotHubConnection.open*
fullName: com.microsoft.azure.sdk.iot.device.transport.https.HttpsIotHubConnection.open
name: open(Queue<DeviceClientConfig> deviceClientConfigs)
package: com.microsoft.azure.sdk.iot.device.transport.https
metadata: {}
