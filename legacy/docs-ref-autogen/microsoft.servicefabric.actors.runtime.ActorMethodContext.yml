### YamlMime:JavaType
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
methods:
- fullName: microsoft.servicefabric.actors.runtime.ActorMethodContext.getCallType()
  name: getCallType()
  nameWithType: ActorMethodContext.getCallType()
  returns:
    description: <p>An <xref uid="microsoft.servicefabric.actors.runtime.ActorCallType" data-throw-if-not-resolved="false" data-raw-source="ActorCallType"></xref> representing the call type. </p>
    type: <xref href="microsoft.servicefabric.actors.runtime.ActorCallType?alt=microsoft.servicefabric.actors.runtime.ActorCallType&text=ActorCallType" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Type of call by actor runtime (e.g. actor interface method, timer callback etc.).</p>

    <p></p>
  syntax: public ActorCallType getCallType()
  uid: microsoft.servicefabric.actors.runtime.ActorMethodContext.getCallType()
- fullName: microsoft.servicefabric.actors.runtime.ActorMethodContext.getMethodName()
  name: getMethodName()
  nameWithType: ActorMethodContext.getMethodName()
  returns:
    description: <p>A string representing the name of method. </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Name of the method invoked by actor runtime.</p>

    <p></p>
  syntax: public String getMethodName()
  uid: microsoft.servicefabric.actors.runtime.ActorMethodContext.getMethodName()
nameWithType: ActorMethodContext
syntax: public class ActorMethodContext
type: class
uid: microsoft.servicefabric.actors.runtime.ActorMethodContext
fullName: microsoft.servicefabric.actors.runtime.ActorMethodContext
name: ActorMethodContext
package: microsoft.servicefabric.actors.runtime
summary: <p>An <xref uid="microsoft.servicefabric.actors.runtime.ActorMethodContext" data-throw-if-not-resolved="false" data-raw-source="ActorMethodContext"></xref> contains information about the method that is invoked by actor runtime and is passed as an argument to <xref uid="microsoft.servicefabric.actors.runtime.ActorBase.onPreActorMethodAsync(ActorMethodContext)" data-throw-if-not-resolved="false" data-raw-source="ActorBase#onPreActorMethodAsync(ActorMethodContext)"></xref> and <xref uid="microsoft.servicefabric.actors.runtime.ActorBase.onPostActorMethodAsync(ActorMethodContext)" data-throw-if-not-resolved="false" data-raw-source="ActorBase#onPostActorMethodAsync(ActorMethodContext)"></xref>. </p>
metadata: {}
