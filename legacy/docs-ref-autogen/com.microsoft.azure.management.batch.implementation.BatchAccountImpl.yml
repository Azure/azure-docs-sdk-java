### YamlMime:JavaType
constructors:
- com.microsoft.azure.management.batch.implementation.BatchAccountImpl.BatchAccountImpl(String,BatchAccountInner,BatchManager,final StorageManager)
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
- <xref href="com.microsoft.azure.management.resources.fluentcore.arm.models.implementation.GroupableResourceImpl&lt;BatchAccount, BatchAccountInner, BatchAccountImpl, BatchManager&gt;" data-throw-if-not-resolved="False"/>
inheritedMembers:
- com.microsoft.azure.management.resources.fluentcore.model.Appliable.apply()
- com.microsoft.azure.management.resources.fluentcore.model.Appliable.applyAsync()
- com.microsoft.azure.management.resources.fluentcore.model.Appliable.applyAsync(final ServiceCallback<T>)
- com.microsoft.azure.management.resources.fluentcore.model.Creatable.create()
- com.microsoft.azure.management.resources.fluentcore.model.Creatable.createAsync(final ServiceCallback<T>)
- com.microsoft.azure.management.resources.fluentcore.model.Creatable.createAsync()
- com.microsoft.azure.management.resources.fluentcore.arm.models.HasId.id()
- com.microsoft.azure.management.resources.fluentcore.model.HasInner.inner()
- com.microsoft.azure.management.resources.fluentcore.model.Indexable.key()
- com.microsoft.azure.management.resources.fluentcore.arm.models.HasManager.manager()
- com.microsoft.azure.management.resources.fluentcore.arm.models.HasName.name()
- com.microsoft.azure.management.resources.fluentcore.model.Refreshable.refresh()
- com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.region()
- com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.regionName()
- com.microsoft.azure.management.resources.fluentcore.arm.models.HasResourceGroup.resourceGroupName()
- com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.tags()
- com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.type()
- com.microsoft.azure.management.resources.fluentcore.model.Updatable.update()
- com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.UpdateWithTags.withoutTag(String)
- com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.DefinitionWithRegion.withRegion(String)
- com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.DefinitionWithRegion.withRegion(Region)
- com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.DefinitionWithTags.withTag(String,String)
- com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.UpdateWithTags.withTag(String,String)
- com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.DefinitionWithTags.withTags(Map<String, String>)
- com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.UpdateWithTags.withTags(Map<String, String>)
methods:
- com.microsoft.azure.management.batch.implementation.BatchAccountImpl.accountEndpoint()
- com.microsoft.azure.management.batch.implementation.BatchAccountImpl.activeJobAndJobScheduleQuota()
- com.microsoft.azure.management.batch.implementation.BatchAccountImpl.applications()
- com.microsoft.azure.management.batch.implementation.BatchAccountImpl.autoStorage()
- com.microsoft.azure.management.batch.implementation.BatchAccountImpl.coreQuota()
- com.microsoft.azure.management.batch.implementation.BatchAccountImpl.createResourceAsync()
- com.microsoft.azure.management.batch.implementation.BatchAccountImpl.dedicatedCoreQuota()
- com.microsoft.azure.management.batch.implementation.BatchAccountImpl.dedicatedCoreQuotaPerVMFamily()
- com.microsoft.azure.management.batch.implementation.BatchAccountImpl.dedicatedCoreQuotaPerVMFamilyEnforced()
- com.microsoft.azure.management.batch.implementation.BatchAccountImpl.defineNewApplication(String)
- com.microsoft.azure.management.batch.implementation.BatchAccountImpl.defineNewPool(String)
- com.microsoft.azure.management.batch.implementation.BatchAccountImpl.getInnerAsync()
- com.microsoft.azure.management.batch.implementation.BatchAccountImpl.getKeys()
- com.microsoft.azure.management.batch.implementation.BatchAccountImpl.lowPriorityCoreQuota()
- com.microsoft.azure.management.batch.implementation.BatchAccountImpl.poolQuota()
- com.microsoft.azure.management.batch.implementation.BatchAccountImpl.pools()
- com.microsoft.azure.management.batch.implementation.BatchAccountImpl.provisioningState()
- com.microsoft.azure.management.batch.implementation.BatchAccountImpl.refreshAsync()
- com.microsoft.azure.management.batch.implementation.BatchAccountImpl.regenerateKeys(AccountKeyType)
- com.microsoft.azure.management.batch.implementation.BatchAccountImpl.synchronizeAutoStorageKeys()
- com.microsoft.azure.management.batch.implementation.BatchAccountImpl.updateApplication(String)
- com.microsoft.azure.management.batch.implementation.BatchAccountImpl.updatePool(String)
- com.microsoft.azure.management.batch.implementation.BatchAccountImpl.updateResourceAsync()
- com.microsoft.azure.management.batch.implementation.BatchAccountImpl.withExistingStorageAccount(StorageAccount)
- com.microsoft.azure.management.batch.implementation.BatchAccountImpl.withNewStorageAccount(Creatable<StorageAccount>)
- com.microsoft.azure.management.batch.implementation.BatchAccountImpl.withNewStorageAccount(String)
- com.microsoft.azure.management.batch.implementation.BatchAccountImpl.withoutApplication(String)
- com.microsoft.azure.management.batch.implementation.BatchAccountImpl.withoutPool(String)
- com.microsoft.azure.management.batch.implementation.BatchAccountImpl.withoutStorageAccount()
nameWithType: BatchAccountImpl
syntax: public class BatchAccountImpl implements BatchAccount,BatchAccount.Definition,BatchAccount.Update
type: class
uid: com.microsoft.azure.management.batch.implementation.BatchAccountImpl
fullName: com.microsoft.azure.management.batch.implementation.BatchAccountImpl
name: BatchAccountImpl
package: com.microsoft.azure.management.batch.implementation
summary: <p>Implementation for BatchAccount and its parent interfaces. </p>
metadata: {}
