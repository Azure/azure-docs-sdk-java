### YamlMime:JavaType
constructors:
- fullName: com.microsoft.azure.servicebus.management.TopicDescription.TopicDescription(String path)
  name: TopicDescription(String path)
  nameWithType: TopicDescription.TopicDescription(String path)
  parameters:
  - description: "<p>- Path of the topic. Max length is 260 chars. Cannot start or end with a slash. Cannot have restricted characters: '@','?','#','*' </p>"
    name: path
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: <p>Initializes a new instance of TopicDescription with the specified relative path. </p>
  syntax: public TopicDescription(String path)
  uid: com.microsoft.azure.servicebus.management.TopicDescription.TopicDescription(String)
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
methods:
- fullName: com.microsoft.azure.servicebus.management.TopicDescription.equals(Object o)
  name: equals(Object o)
  nameWithType: TopicDescription.equals(Object o)
  parameters:
  - name: o
    type: <xref href="Object?alt=Object&text=Object" data-throw-if-not-resolved="False"/>
  returns:
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False"/>
  syntax: public boolean equals(Object o)
  uid: com.microsoft.azure.servicebus.management.TopicDescription.equals(Object)
- fullName: com.microsoft.azure.servicebus.management.TopicDescription.getAuthorizationRules()
  name: getAuthorizationRules()
  nameWithType: TopicDescription.getAuthorizationRules()
  returns:
    description: <p>The <xref uid="com.microsoft.azure.servicebus.management.AuthorizationRule" data-throw-if-not-resolved="false" data-raw-source="AuthorizationRule"></xref> on the topic to control user access at entity level. </p>
    type: List&lt;<xref href="com.microsoft.azure.servicebus.management.AuthorizationRule?alt=com.microsoft.azure.servicebus.management.AuthorizationRule&text=AuthorizationRule" data-throw-if-not-resolved="False"/>&gt;
  syntax: public List<AuthorizationRule> getAuthorizationRules()
  uid: com.microsoft.azure.servicebus.management.TopicDescription.getAuthorizationRules()
- fullName: com.microsoft.azure.servicebus.management.TopicDescription.getAutoDeleteOnIdle()
  name: getAutoDeleteOnIdle()
  nameWithType: TopicDescription.getAutoDeleteOnIdle()
  returns:
    description: <p>The idle interval after which the topic is automatically deleted. Default value is <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ManagementClientConstants#MAX_DURATION"></xref></p>
    type: <xref href="Duration?alt=Duration&text=Duration" data-throw-if-not-resolved="False"/>
  syntax: public Duration getAutoDeleteOnIdle()
  uid: com.microsoft.azure.servicebus.management.TopicDescription.getAutoDeleteOnIdle()
- fullName: com.microsoft.azure.servicebus.management.TopicDescription.getDefaultMessageTimeToLive()
  name: getDefaultMessageTimeToLive()
  nameWithType: TopicDescription.getDefaultMessageTimeToLive()
  returns:
    description: <p>The default time to live value for the messages. Default value is <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ManagementClientConstants#MAX_DURATION"></xref></p>
    type: <xref href="Duration?alt=Duration&text=Duration" data-throw-if-not-resolved="False"/>
  summary: <p>Time-To-live is the duration after which the message expires, starting from when the message is sent to Service Bus. This is the default value used when <xref uid="com.microsoft.azure.servicebus.IMessage.getTimeToLive()" data-throw-if-not-resolved="false" data-raw-source="IMessage#getTimeToLive()"></xref> is not set on a message itself. Messages older than their TimeToLive value will expire and no longer be retained in the message store. Subscribers will be unable to receive expired messages. </p>
  syntax: public Duration getDefaultMessageTimeToLive()
  uid: com.microsoft.azure.servicebus.management.TopicDescription.getDefaultMessageTimeToLive()
- fullName: com.microsoft.azure.servicebus.management.TopicDescription.getDuplicationDetectionHistoryTimeWindow()
  name: getDuplicationDetectionHistoryTimeWindow()
  nameWithType: TopicDescription.getDuplicationDetectionHistoryTimeWindow()
  returns:
    description: <p>The duration of duplicate detection history that is maintained by the service. The default value is 1 minute. </p>
    type: <xref href="Duration?alt=Duration&text=Duration" data-throw-if-not-resolved="False"/>
  syntax: public Duration getDuplicationDetectionHistoryTimeWindow()
  uid: com.microsoft.azure.servicebus.management.TopicDescription.getDuplicationDetectionHistoryTimeWindow()
- fullName: com.microsoft.azure.servicebus.management.TopicDescription.getEntityStatus()
  name: getEntityStatus()
  nameWithType: TopicDescription.getEntityStatus()
  returns:
    description: <p>The current status of the topic (Enabled / Disabled). The default value is Enabled. </p>
    type: <xref href="com.microsoft.azure.servicebus.management.EntityStatus?alt=com.microsoft.azure.servicebus.management.EntityStatus&text=EntityStatus" data-throw-if-not-resolved="False"/>
  summary: <p>Gets the status of the entity. When an entity is disabled, that entity cannot send or receive messages. </p>
  syntax: public EntityStatus getEntityStatus()
  uid: com.microsoft.azure.servicebus.management.TopicDescription.getEntityStatus()
- fullName: com.microsoft.azure.servicebus.management.TopicDescription.getMaxSizeInMB()
  name: getMaxSizeInMB()
  nameWithType: TopicDescription.getMaxSizeInMB()
  returns:
    description: <p>the maximum size of the topic in megabytes, which is the size of memory allocated for the topic. Default value is 1024. </p>
    type: <xref href="long?alt=long&text=long" data-throw-if-not-resolved="False"/>
  syntax: public long getMaxSizeInMB()
  uid: com.microsoft.azure.servicebus.management.TopicDescription.getMaxSizeInMB()
- fullName: com.microsoft.azure.servicebus.management.TopicDescription.getPath()
  name: getPath()
  nameWithType: TopicDescription.getPath()
  returns:
    description: <p>the path of the topic. </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  syntax: public String getPath()
  uid: com.microsoft.azure.servicebus.management.TopicDescription.getPath()
- fullName: com.microsoft.azure.servicebus.management.TopicDescription.getUserMetadata()
  name: getUserMetadata()
  nameWithType: TopicDescription.getUserMetadata()
  returns:
    description: <p>- Custom metdata that user can associate with the description. </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  syntax: public String getUserMetadata()
  uid: com.microsoft.azure.servicebus.management.TopicDescription.getUserMetadata()
- fullName: com.microsoft.azure.servicebus.management.TopicDescription.hashCode()
  name: hashCode()
  nameWithType: TopicDescription.hashCode()
  returns:
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  syntax: public int hashCode()
  uid: com.microsoft.azure.servicebus.management.TopicDescription.hashCode()
- fullName: com.microsoft.azure.servicebus.management.TopicDescription.isEnableBatchedOperations()
  name: isEnableBatchedOperations()
  nameWithType: TopicDescription.isEnableBatchedOperations()
  returns:
    description: <p>Indicates whether server-side batched operations are enabled. Defaults to true. </p>
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False"/>
  syntax: public boolean isEnableBatchedOperations()
  uid: com.microsoft.azure.servicebus.management.TopicDescription.isEnableBatchedOperations()
- fullName: com.microsoft.azure.servicebus.management.TopicDescription.isEnablePartitioning()
  name: isEnablePartitioning()
  nameWithType: TopicDescription.isEnablePartitioning()
  returns:
    description: <p>boolean indicating whether the topic is to be partitioned across multiple message brokers. Defaults to false </p>
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False"/>
  syntax: public boolean isEnablePartitioning()
  uid: com.microsoft.azure.servicebus.management.TopicDescription.isEnablePartitioning()
- fullName: com.microsoft.azure.servicebus.management.TopicDescription.isRequiresDuplicateDetection()
  name: isRequiresDuplicateDetection()
  nameWithType: TopicDescription.isRequiresDuplicateDetection()
  returns:
    description: <p>value indicating if the queue requires guard against duplicate messages. </p>
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False"/>
  summary: <p>If enabled, duplicate messages having same <xref uid="com.microsoft.azure.servicebus.IMessage.getMessageId()" data-throw-if-not-resolved="false" data-raw-source="IMessage#getMessageId()"></xref> and sent to queue within duration of <xref uid="com.microsoft.azure.servicebus.management.TopicDescription.getDuplicationDetectionHistoryTimeWindow()" data-throw-if-not-resolved="false" data-raw-source="getDuplicationDetectionHistoryTimeWindow"></xref> will be discarded. </p>
  syntax: public boolean isRequiresDuplicateDetection()
  uid: com.microsoft.azure.servicebus.management.TopicDescription.isRequiresDuplicateDetection()
- fullName: com.microsoft.azure.servicebus.management.TopicDescription.isSupportOrdering()
  name: isSupportOrdering()
  nameWithType: TopicDescription.isSupportOrdering()
  returns:
    description: <p>Defines whether ordering needs to be maintained. If true, messages sent to topic will be forwarded to the subscription in order. Defaults to false </p>
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False"/>
  syntax: public boolean isSupportOrdering()
  uid: com.microsoft.azure.servicebus.management.TopicDescription.isSupportOrdering()
- fullName: com.microsoft.azure.servicebus.management.TopicDescription.setAuthorizationRules(List<AuthorizationRule> authorizationRules)
  name: setAuthorizationRules(List<AuthorizationRule> authorizationRules)
  nameWithType: TopicDescription.setAuthorizationRules(List<AuthorizationRule> authorizationRules)
  parameters:
  - description: <p>- The <xref uid="com.microsoft.azure.servicebus.management.AuthorizationRule" data-throw-if-not-resolved="false" data-raw-source="AuthorizationRule"></xref> on the topic to control user access at entity level. </p>
    name: authorizationRules
    type: List&lt;<xref href="com.microsoft.azure.servicebus.management.AuthorizationRule?alt=com.microsoft.azure.servicebus.management.AuthorizationRule&text=AuthorizationRule" data-throw-if-not-resolved="False"/>&gt;
  syntax: public void setAuthorizationRules(List<AuthorizationRule> authorizationRules)
  uid: com.microsoft.azure.servicebus.management.TopicDescription.setAuthorizationRules(List<AuthorizationRule>)
- fullName: com.microsoft.azure.servicebus.management.TopicDescription.setAutoDeleteOnIdle(Duration autoDeleteOnIdle)
  name: setAutoDeleteOnIdle(Duration autoDeleteOnIdle)
  nameWithType: TopicDescription.setAutoDeleteOnIdle(Duration autoDeleteOnIdle)
  parameters:
  - description: <p>- The idle interval after which the topic is automatically deleted. The minimum duration is 5 minutes. </p>
    name: autoDeleteOnIdle
    type: <xref href="Duration?alt=Duration&text=Duration" data-throw-if-not-resolved="False"/>
  syntax: public void setAutoDeleteOnIdle(Duration autoDeleteOnIdle)
  uid: com.microsoft.azure.servicebus.management.TopicDescription.setAutoDeleteOnIdle(Duration)
- fullName: com.microsoft.azure.servicebus.management.TopicDescription.setDefaultMessageTimeToLive(Duration defaultMessageTimeToLive)
  name: setDefaultMessageTimeToLive(Duration defaultMessageTimeToLive)
  nameWithType: TopicDescription.setDefaultMessageTimeToLive(Duration defaultMessageTimeToLive)
  parameters:
  - description: <p>- Sets the default message time to live value. Value cannot be lower than 1 second. See <xref uid="com.microsoft.azure.servicebus.management.TopicDescription.getDefaultMessageTimeToLive()" data-throw-if-not-resolved="false" data-raw-source="getDefaultMessageTimeToLive()"></xref></p>
    name: defaultMessageTimeToLive
    type: <xref href="Duration?alt=Duration&text=Duration" data-throw-if-not-resolved="False"/>
  syntax: public void setDefaultMessageTimeToLive(Duration defaultMessageTimeToLive)
  uid: com.microsoft.azure.servicebus.management.TopicDescription.setDefaultMessageTimeToLive(Duration)
- fullName: com.microsoft.azure.servicebus.management.TopicDescription.setDuplicationDetectionHistoryTimeWindow(Duration duplicationDetectionHistoryTimeWindow)
  name: setDuplicationDetectionHistoryTimeWindow(Duration duplicationDetectionHistoryTimeWindow)
  nameWithType: TopicDescription.setDuplicationDetectionHistoryTimeWindow(Duration duplicationDetectionHistoryTimeWindow)
  parameters:
  - description: <p>- The duration of duplicate detection history that is maintained by the service. Max value is 1 day and minimum is 20 seconds. </p>
    name: duplicationDetectionHistoryTimeWindow
    type: <xref href="Duration?alt=Duration&text=Duration" data-throw-if-not-resolved="False"/>
  syntax: public void setDuplicationDetectionHistoryTimeWindow(Duration duplicationDetectionHistoryTimeWindow)
  uid: com.microsoft.azure.servicebus.management.TopicDescription.setDuplicationDetectionHistoryTimeWindow(Duration)
- fullName: com.microsoft.azure.servicebus.management.TopicDescription.setEnableBatchedOperations(boolean enableBatchedOperations)
  name: setEnableBatchedOperations(boolean enableBatchedOperations)
  nameWithType: TopicDescription.setEnableBatchedOperations(boolean enableBatchedOperations)
  parameters:
  - description: <p>- Indicates whether server-side batched operations are enabled. </p>
    name: enableBatchedOperations
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False"/>
  syntax: public void setEnableBatchedOperations(boolean enableBatchedOperations)
  uid: com.microsoft.azure.servicebus.management.TopicDescription.setEnableBatchedOperations(boolean)
- fullName: com.microsoft.azure.servicebus.management.TopicDescription.setEnablePartitioning(boolean enablePartitioning)
  name: setEnablePartitioning(boolean enablePartitioning)
  nameWithType: TopicDescription.setEnablePartitioning(boolean enablePartitioning)
  parameters:
  - description: <p>- true if topic is to be partitioned across multiple message brokers. </p>
    name: enablePartitioning
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False"/>
  syntax: public void setEnablePartitioning(boolean enablePartitioning)
  uid: com.microsoft.azure.servicebus.management.TopicDescription.setEnablePartitioning(boolean)
- fullName: com.microsoft.azure.servicebus.management.TopicDescription.setEntityStatus(EntityStatus status)
  name: setEntityStatus(EntityStatus status)
  nameWithType: TopicDescription.setEntityStatus(EntityStatus status)
  parameters:
  - description: <p>- the status of the topic (Enabled / Disabled). When an entity is disabled, that entity cannot send or receive messages. </p>
    name: status
    type: <xref href="com.microsoft.azure.servicebus.management.EntityStatus?alt=com.microsoft.azure.servicebus.management.EntityStatus&text=EntityStatus" data-throw-if-not-resolved="False"/>
  syntax: public void setEntityStatus(EntityStatus status)
  uid: com.microsoft.azure.servicebus.management.TopicDescription.setEntityStatus(EntityStatus)
- fullName: com.microsoft.azure.servicebus.management.TopicDescription.setMaxSizeInMB(long maxSize)
  name: setMaxSizeInMB(long maxSize)
  nameWithType: TopicDescription.setMaxSizeInMB(long maxSize)
  parameters:
  - description: <p>- Sets the maximum size of the topic in megabytes, which is the size of memory allocated for the topic. </p>
    name: maxSize
    type: <xref href="long?alt=long&text=long" data-throw-if-not-resolved="False"/>
  syntax: public void setMaxSizeInMB(long maxSize)
  uid: com.microsoft.azure.servicebus.management.TopicDescription.setMaxSizeInMB(long)
- fullName: com.microsoft.azure.servicebus.management.TopicDescription.setRequiresDuplicateDetection(boolean requiresDuplicateDetection)
  name: setRequiresDuplicateDetection(boolean requiresDuplicateDetection)
  nameWithType: TopicDescription.setRequiresDuplicateDetection(boolean requiresDuplicateDetection)
  parameters:
  - description: <p>- Set to true if duplicate detection needs to be enabled. See also - <xref uid="com.microsoft.azure.servicebus.management.TopicDescription.isRequiresDuplicateDetection()" data-throw-if-not-resolved="false" data-raw-source="isRequiresDuplicateDetection()"></xref></p>
    name: requiresDuplicateDetection
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False"/>
  syntax: public void setRequiresDuplicateDetection(boolean requiresDuplicateDetection)
  uid: com.microsoft.azure.servicebus.management.TopicDescription.setRequiresDuplicateDetection(boolean)
- fullName: com.microsoft.azure.servicebus.management.TopicDescription.setSupportOrdering(boolean supportOrdering)
  name: setSupportOrdering(boolean supportOrdering)
  nameWithType: TopicDescription.setSupportOrdering(boolean supportOrdering)
  parameters:
  - description: <p>- Defines whether ordering needs to be maintained. If true, messages sent to topic will be forwarded to the subscription in order. </p>
    name: supportOrdering
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False"/>
  syntax: public void setSupportOrdering(boolean supportOrdering)
  uid: com.microsoft.azure.servicebus.management.TopicDescription.setSupportOrdering(boolean)
- fullName: com.microsoft.azure.servicebus.management.TopicDescription.setUserMetadata(String userMetadata)
  name: setUserMetadata(String userMetadata)
  nameWithType: TopicDescription.setUserMetadata(String userMetadata)
  parameters:
  - description: <p>- Custom metdata that user can associate with the description. Cannot be null. Max length is 1024 chars </p>
    name: userMetadata
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  syntax: public void setUserMetadata(String userMetadata)
  uid: com.microsoft.azure.servicebus.management.TopicDescription.setUserMetadata(String)
nameWithType: TopicDescription
syntax: public class TopicDescription
type: class
uid: com.microsoft.azure.servicebus.management.TopicDescription
fullName: com.microsoft.azure.servicebus.management.TopicDescription
name: TopicDescription
package: com.microsoft.azure.servicebus.management
summary: <p>Represents the metadata description of the topic. </p>
metadata: {}
