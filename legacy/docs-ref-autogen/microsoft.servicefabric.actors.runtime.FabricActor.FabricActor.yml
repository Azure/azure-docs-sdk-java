### YamlMime:JavaMember
nameWithType: FabricActor.FabricActor
type: constructor
members:
- fullName: microsoft.servicefabric.actors.runtime.FabricActor.FabricActor(FabricActorService actorService, ActorId actorId)
  name: FabricActor(FabricActorService actorService, ActorId actorId)
  nameWithType: FabricActor.FabricActor(FabricActorService actorService, ActorId actorId)
  parameters:
  - description: <p>The <xref uid="microsoft.servicefabric.actors.runtime.FabricActorService" data-throw-if-not-resolved="false">FabricActorService</xref> will host this actor instance. </p>
    name: actorService
    type: <xref href="microsoft.servicefabric.actors.runtime.FabricActorService?alt=microsoft.servicefabric.actors.runtime.FabricActorService&text=FabricActorService" data-throw-if-not-resolved="False"/>
  - description: <p>The <xref uid="microsoft.servicefabric.actors.ActorId" data-throw-if-not-resolved="false">ActorId</xref> for this actor instance. </p>
    name: actorId
    type: <xref href="microsoft.servicefabric.actors.ActorId?alt=microsoft.servicefabric.actors.ActorId&text=ActorId" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Initializes a new instance of <xref uid="microsoft.servicefabric.actors.runtime.FabricActor" data-throw-if-not-resolved="false">FabricActor</xref></p>

    <p></p>
  syntax: protected FabricActor(FabricActorService actorService, ActorId actorId)
  uid: microsoft.servicefabric.actors.runtime.FabricActor.FabricActor(FabricActorService,ActorId)
uid: microsoft.servicefabric.actors.runtime.FabricActor.FabricActor*
fullName: microsoft.servicefabric.actors.runtime.FabricActor.FabricActor
name: FabricActor
package: microsoft.servicefabric.actors.runtime
metadata: {}
