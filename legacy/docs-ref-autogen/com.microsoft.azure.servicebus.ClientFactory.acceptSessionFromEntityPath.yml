### YamlMime:JavaMember
nameWithType: ClientFactory.acceptSessionFromEntityPath
type: method
members:
- fullName: com.microsoft.azure.servicebus.ClientFactory.acceptSessionFromEntityPath(MessagingFactory messagingFactory, String entityPath, String sessionId)
  name: acceptSessionFromEntityPath(MessagingFactory messagingFactory, String entityPath, String sessionId)
  nameWithType: ClientFactory.acceptSessionFromEntityPath(MessagingFactory messagingFactory, String entityPath, String sessionId)
  parameters:
  - description: <p>messaging factory (which represents a connection) on which the session receiver needs to be created. </p>
    name: messagingFactory
    type: <xref href="com.microsoft.azure.servicebus.primitives.MessagingFactory?alt=com.microsoft.azure.servicebus.primitives.MessagingFactory&text=MessagingFactory" data-throw-if-not-resolved="False"/>
  - description: <p>path of entity </p>
    name: entityPath
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>session id, if null, service will return the first available session, otherwise, service will return specified session </p>
    name: sessionId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="InterruptedException?alt=InterruptedException&text=InterruptedException" data-throw-if-not-resolved="False"/>
    description: <p>if the current thread was interrupted while waiting </p>
  - type: <xref href="ServiceBusException?alt=ServiceBusException&text=ServiceBusException" data-throw-if-not-resolved="False"/>
    description: <p>if the session cannot be accepted </p>
  returns:
    description: <p>IMessageSession instance </p>
    type: <xref href="com.microsoft.azure.servicebus.IMessageSession?alt=com.microsoft.azure.servicebus.IMessageSession&text=IMessageSession" data-throw-if-not-resolved="False"/>
  summary: <p>Accept a <xref uid="com.microsoft.azure.servicebus.IMessageSession" data-throw-if-not-resolved="false">IMessageSession</xref> from service bus using the client settings with specified session id. Session Id can be null, if null, service will return the first available session. </p>
  syntax: public static IMessageSession acceptSessionFromEntityPath(MessagingFactory messagingFactory, String entityPath, String sessionId)
  uid: com.microsoft.azure.servicebus.ClientFactory.acceptSessionFromEntityPath(MessagingFactory,String,String)
- fullName: com.microsoft.azure.servicebus.ClientFactory.acceptSessionFromEntityPath(MessagingFactory messagingFactory, String entityPath, String sessionId, ReceiveMode receiveMode)
  name: acceptSessionFromEntityPath(MessagingFactory messagingFactory, String entityPath, String sessionId, ReceiveMode receiveMode)
  nameWithType: ClientFactory.acceptSessionFromEntityPath(MessagingFactory messagingFactory, String entityPath, String sessionId, ReceiveMode receiveMode)
  parameters:
  - description: <p>messaging factory (which represents a connection) on which the session receiver needs to be created. </p>
    name: messagingFactory
    type: <xref href="com.microsoft.azure.servicebus.primitives.MessagingFactory?alt=com.microsoft.azure.servicebus.primitives.MessagingFactory&text=MessagingFactory" data-throw-if-not-resolved="False"/>
  - description: <p>path of entity </p>
    name: entityPath
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>session id, if null, service will return the first available session, otherwise, service will return specified session </p>
    name: sessionId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>PeekLock or ReceiveAndDelete </p>
    name: receiveMode
    type: <xref href="com.microsoft.azure.servicebus.ReceiveMode?alt=com.microsoft.azure.servicebus.ReceiveMode&text=ReceiveMode" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="InterruptedException?alt=InterruptedException&text=InterruptedException" data-throw-if-not-resolved="False"/>
    description: <p>if the current thread was interrupted while waiting </p>
  - type: <xref href="ServiceBusException?alt=ServiceBusException&text=ServiceBusException" data-throw-if-not-resolved="False"/>
    description: <p>if the session cannot be accepted </p>
  returns:
    description: <p>IMessageSession instance </p>
    type: <xref href="com.microsoft.azure.servicebus.IMessageSession?alt=com.microsoft.azure.servicebus.IMessageSession&text=IMessageSession" data-throw-if-not-resolved="False"/>
  summary: <p>Accept a <xref uid="com.microsoft.azure.servicebus.IMessageSession" data-throw-if-not-resolved="false">IMessageSession</xref> from service bus using the client settings with specified session id. Session Id can be null, if null, service will return the first available session. </p>
  syntax: public static IMessageSession acceptSessionFromEntityPath(MessagingFactory messagingFactory, String entityPath, String sessionId, ReceiveMode receiveMode)
  uid: com.microsoft.azure.servicebus.ClientFactory.acceptSessionFromEntityPath(MessagingFactory,String,String,ReceiveMode)
- fullName: com.microsoft.azure.servicebus.ClientFactory.acceptSessionFromEntityPath(String namespaceName, String entityPath, String sessionId, ClientSettings clientSettings)
  name: acceptSessionFromEntityPath(String namespaceName, String entityPath, String sessionId, ClientSettings clientSettings)
  nameWithType: ClientFactory.acceptSessionFromEntityPath(String namespaceName, String entityPath, String sessionId, ClientSettings clientSettings)
  parameters:
  - description: <p>namespace of entity </p>
    name: namespaceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>path of entity </p>
    name: entityPath
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>session id, if null, service will return the first available session, otherwise, service will return specified session </p>
    name: sessionId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>client settings </p>
    name: clientSettings
    type: <xref href="com.microsoft.azure.servicebus.ClientSettings?alt=com.microsoft.azure.servicebus.ClientSettings&text=ClientSettings" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="InterruptedException?alt=InterruptedException&text=InterruptedException" data-throw-if-not-resolved="False"/>
    description: <p>if the current thread was interrupted while waiting </p>
  - type: <xref href="ServiceBusException?alt=ServiceBusException&text=ServiceBusException" data-throw-if-not-resolved="False"/>
    description: <p>if the session cannot be accepted </p>
  returns:
    description: <p>IMessageSession instance </p>
    type: <xref href="com.microsoft.azure.servicebus.IMessageSession?alt=com.microsoft.azure.servicebus.IMessageSession&text=IMessageSession" data-throw-if-not-resolved="False"/>
  summary: <p>Accept a <xref uid="com.microsoft.azure.servicebus.IMessageSession" data-throw-if-not-resolved="false">IMessageSession</xref> from service bus using the client settings with specified session id in PeekLock mode. Session Id can be null, if null, service will return the first available session. </p>
  syntax: public static IMessageSession acceptSessionFromEntityPath(String namespaceName, String entityPath, String sessionId, ClientSettings clientSettings)
  uid: com.microsoft.azure.servicebus.ClientFactory.acceptSessionFromEntityPath(String,String,String,ClientSettings)
- fullName: com.microsoft.azure.servicebus.ClientFactory.acceptSessionFromEntityPath(String namespaceName, String entityPath, String sessionId, ClientSettings clientSettings, ReceiveMode receiveMode)
  name: acceptSessionFromEntityPath(String namespaceName, String entityPath, String sessionId, ClientSettings clientSettings, ReceiveMode receiveMode)
  nameWithType: ClientFactory.acceptSessionFromEntityPath(String namespaceName, String entityPath, String sessionId, ClientSettings clientSettings, ReceiveMode receiveMode)
  parameters:
  - description: <p>namespace of entity </p>
    name: namespaceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>path of entity </p>
    name: entityPath
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>session id, if null, service will return the first available session, otherwise, service will return specified session </p>
    name: sessionId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>client settings </p>
    name: clientSettings
    type: <xref href="com.microsoft.azure.servicebus.ClientSettings?alt=com.microsoft.azure.servicebus.ClientSettings&text=ClientSettings" data-throw-if-not-resolved="False"/>
  - description: <p>PeekLock or ReceiveAndDelete </p>
    name: receiveMode
    type: <xref href="com.microsoft.azure.servicebus.ReceiveMode?alt=com.microsoft.azure.servicebus.ReceiveMode&text=ReceiveMode" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="InterruptedException?alt=InterruptedException&text=InterruptedException" data-throw-if-not-resolved="False"/>
    description: <p>if the current thread was interrupted while waiting </p>
  - type: <xref href="ServiceBusException?alt=ServiceBusException&text=ServiceBusException" data-throw-if-not-resolved="False"/>
    description: <p>if the session cannot be accepted </p>
  returns:
    description: <p>IMessageSession instance </p>
    type: <xref href="com.microsoft.azure.servicebus.IMessageSession?alt=com.microsoft.azure.servicebus.IMessageSession&text=IMessageSession" data-throw-if-not-resolved="False"/>
  summary: <p>Accept a <xref uid="com.microsoft.azure.servicebus.IMessageSession" data-throw-if-not-resolved="false">IMessageSession</xref> from service bus using the client settings with specified session id. Session Id can be null, if null, service will return the first available session. </p>
  syntax: public static IMessageSession acceptSessionFromEntityPath(String namespaceName, String entityPath, String sessionId, ClientSettings clientSettings, ReceiveMode receiveMode)
  uid: com.microsoft.azure.servicebus.ClientFactory.acceptSessionFromEntityPath(String,String,String,ClientSettings,ReceiveMode)
- fullName: com.microsoft.azure.servicebus.ClientFactory.acceptSessionFromEntityPath(URI namespaceEndpointURI, String entityPath, String sessionId, ClientSettings clientSettings)
  name: acceptSessionFromEntityPath(URI namespaceEndpointURI, String entityPath, String sessionId, ClientSettings clientSettings)
  nameWithType: ClientFactory.acceptSessionFromEntityPath(URI namespaceEndpointURI, String entityPath, String sessionId, ClientSettings clientSettings)
  parameters:
  - description: <p>endpoint uri of entity namespace </p>
    name: namespaceEndpointURI
    type: <xref href="URI?alt=URI&text=URI" data-throw-if-not-resolved="False"/>
  - description: <p>path of entity </p>
    name: entityPath
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>session id, if null, service will return the first available session, otherwise, service will return specified session </p>
    name: sessionId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>client settings </p>
    name: clientSettings
    type: <xref href="com.microsoft.azure.servicebus.ClientSettings?alt=com.microsoft.azure.servicebus.ClientSettings&text=ClientSettings" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="InterruptedException?alt=InterruptedException&text=InterruptedException" data-throw-if-not-resolved="False"/>
    description: <p>if the current thread was interrupted while waiting </p>
  - type: <xref href="ServiceBusException?alt=ServiceBusException&text=ServiceBusException" data-throw-if-not-resolved="False"/>
    description: <p>if the session cannot be accepted </p>
  returns:
    description: <p>IMessageSession instance </p>
    type: <xref href="com.microsoft.azure.servicebus.IMessageSession?alt=com.microsoft.azure.servicebus.IMessageSession&text=IMessageSession" data-throw-if-not-resolved="False"/>
  summary: <p>Accept a <xref uid="com.microsoft.azure.servicebus.IMessageSession" data-throw-if-not-resolved="false">IMessageSession</xref> from service bus using the client settings with specified session id in PeekLock mode. Session Id can be null, if null, service will return the first available session. </p>
  syntax: public static IMessageSession acceptSessionFromEntityPath(URI namespaceEndpointURI, String entityPath, String sessionId, ClientSettings clientSettings)
  uid: com.microsoft.azure.servicebus.ClientFactory.acceptSessionFromEntityPath(URI,String,String,ClientSettings)
- fullName: com.microsoft.azure.servicebus.ClientFactory.acceptSessionFromEntityPath(URI namespaceEndpointURI, String entityPath, String sessionId, ClientSettings clientSettings, ReceiveMode receiveMode)
  name: acceptSessionFromEntityPath(URI namespaceEndpointURI, String entityPath, String sessionId, ClientSettings clientSettings, ReceiveMode receiveMode)
  nameWithType: ClientFactory.acceptSessionFromEntityPath(URI namespaceEndpointURI, String entityPath, String sessionId, ClientSettings clientSettings, ReceiveMode receiveMode)
  parameters:
  - description: <p>endpoint uri of entity namespace </p>
    name: namespaceEndpointURI
    type: <xref href="URI?alt=URI&text=URI" data-throw-if-not-resolved="False"/>
  - description: <p>path of entity </p>
    name: entityPath
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>session id, if null, service will return the first available session, otherwise, service will return specified session </p>
    name: sessionId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>client settings </p>
    name: clientSettings
    type: <xref href="com.microsoft.azure.servicebus.ClientSettings?alt=com.microsoft.azure.servicebus.ClientSettings&text=ClientSettings" data-throw-if-not-resolved="False"/>
  - description: <p>PeekLock or ReceiveAndDelete </p>
    name: receiveMode
    type: <xref href="com.microsoft.azure.servicebus.ReceiveMode?alt=com.microsoft.azure.servicebus.ReceiveMode&text=ReceiveMode" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="InterruptedException?alt=InterruptedException&text=InterruptedException" data-throw-if-not-resolved="False"/>
    description: <p>if the current thread was interrupted while waiting </p>
  - type: <xref href="ServiceBusException?alt=ServiceBusException&text=ServiceBusException" data-throw-if-not-resolved="False"/>
    description: <p>if the session cannot be accepted </p>
  returns:
    description: <p>IMessageSession instance </p>
    type: <xref href="com.microsoft.azure.servicebus.IMessageSession?alt=com.microsoft.azure.servicebus.IMessageSession&text=IMessageSession" data-throw-if-not-resolved="False"/>
  summary: <p>Accept a <xref uid="com.microsoft.azure.servicebus.IMessageSession" data-throw-if-not-resolved="false">IMessageSession</xref> from service bus using the client settings with specified session id. Session Id can be null, if null, service will return the first available session. </p>
  syntax: public static IMessageSession acceptSessionFromEntityPath(URI namespaceEndpointURI, String entityPath, String sessionId, ClientSettings clientSettings, ReceiveMode receiveMode)
  uid: com.microsoft.azure.servicebus.ClientFactory.acceptSessionFromEntityPath(URI,String,String,ClientSettings,ReceiveMode)
uid: com.microsoft.azure.servicebus.ClientFactory.acceptSessionFromEntityPath*
fullName: com.microsoft.azure.servicebus.ClientFactory.acceptSessionFromEntityPath(MessagingFactory messagingFactory, String entityPath, String sessionId)
name: acceptSessionFromEntityPath(MessagingFactory messagingFactory, String entityPath, String sessionId)
package: com.microsoft.azure.servicebus
metadata: {}
