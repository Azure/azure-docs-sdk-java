### YamlMime:JavaType
inheritedMembers:
- com.microsoft.azure.management.resources.fluentcore.model.Executable.execute()
- com.microsoft.azure.management.resources.fluentcore.model.Executable.executeAsync()
- com.microsoft.azure.management.resources.fluentcore.model.Executable.executeAsync(final ServiceCallback<T>)
- com.microsoft.azure.management.resources.fluentcore.model.Indexable.key()
- com.microsoft.azure.management.containerregistry.RegistryTaskRun.DefinitionStages.Archive.withArchiveEnabled(boolean)
- com.microsoft.azure.management.containerregistry.RegistryTaskRun.DefinitionStages.AgentConfiguration.withCpuCount(int)
methods:
- fullName: com.microsoft.azure.management.containerregistry.RegistryTaskRun.DefinitionStages.RunRequestExecutableWithSourceLocation.withSourceLocation(String location)
  name: withSourceLocation(String location)
  nameWithType: RegistryTaskRun.DefinitionStages.RunRequestExecutableWithSourceLocation.withSourceLocation(String location)
  parameters:
  - description: <p>the location of the source control. </p>
    name: location
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the next stage of the container registry task run definition. </p>
    type: <xref href="com.microsoft.azure.management.containerregistry.RegistryTaskRun.DefinitionStages.RunRequestExecutableWithSourceLocation?alt=com.microsoft.azure.management.containerregistry.RegistryTaskRun.DefinitionStages.RunRequestExecutableWithSourceLocation&text=RegistryTaskRun.DefinitionStages.RunRequestExecutableWithSourceLocation" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>The function that specifies the location of the source control.</p>

    <p></p>
  syntax: public RunRequestExecutableWithSourceLocation withSourceLocation(String location)
  uid: com.microsoft.azure.management.containerregistry.RegistryTaskRun.DefinitionStages.RunRequestExecutableWithSourceLocation.withSourceLocation(String)
- fullName: com.microsoft.azure.management.containerregistry.RegistryTaskRun.DefinitionStages.RunRequestExecutableWithSourceLocation.withTimeout(int timeout)
  name: withTimeout(int timeout)
  nameWithType: RegistryTaskRun.DefinitionStages.RunRequestExecutableWithSourceLocation.withTimeout(int timeout)
  parameters:
  - description: <p>the time the timeout lasts. </p>
    name: timeout
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the next stage of the container registry task run definition. </p>
    type: <xref href="com.microsoft.azure.management.containerregistry.RegistryTaskRun.DefinitionStages.RunRequestExecutableWithSourceLocation?alt=com.microsoft.azure.management.containerregistry.RegistryTaskRun.DefinitionStages.RunRequestExecutableWithSourceLocation&text=RegistryTaskRun.DefinitionStages.RunRequestExecutableWithSourceLocation" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>The function that specifies the timeout.</p>

    <p></p>
  syntax: public RunRequestExecutableWithSourceLocation withTimeout(int timeout)
  uid: com.microsoft.azure.management.containerregistry.RegistryTaskRun.DefinitionStages.RunRequestExecutableWithSourceLocation.withTimeout(int)
nameWithType: RegistryTaskRun.DefinitionStages.RunRequestExecutableWithSourceLocation
syntax: public interface RunRequestExecutableWithSourceLocation extends RegistryTaskRun.DefinitionStages.AgentConfiguration,RegistryTaskRun.DefinitionStages.RunRequestExecutable
type: interface
uid: com.microsoft.azure.management.containerregistry.RegistryTaskRun.DefinitionStages.RunRequestExecutableWithSourceLocation
fullName: com.microsoft.azure.management.containerregistry.RegistryTaskRun.DefinitionStages.RunRequestExecutableWithSourceLocation
name: RegistryTaskRun.DefinitionStages.RunRequestExecutableWithSourceLocation
package: com.microsoft.azure.management.containerregistry
summary: <p>The stage of the container registry task run definition which contains all the minimum required inputs for the resource to be executed if the task run request type is either file, encoded, or Docker, but also allows for any other optional settings to be specified. </p>
metadata: {}
