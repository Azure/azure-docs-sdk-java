### YamlMime:JavaType
methods:
- fullName: com.microsoft.azure.management.graphrbac.ServicePrincipal.UpdateStages.WithRoleAssignment.withNewRole(BuiltInRole role, String scope)
  name: withNewRole(BuiltInRole role, String scope)
  nameWithType: ServicePrincipal.UpdateStages.WithRoleAssignment.withNewRole(BuiltInRole role, String scope)
  parameters:
  - description: <p>the role to assign to the service principal </p>
    name: role
    type: <xref href="com.microsoft.azure.management.graphrbac.BuiltInRole?alt=com.microsoft.azure.management.graphrbac.BuiltInRole&text=BuiltInRole" data-throw-if-not-resolved="False"/>
  - description: <p>the scope the service principal can access </p>
    name: scope
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the next stage of the service principal update </p>
    type: <xref href="com.microsoft.azure.management.graphrbac.ServicePrincipal.Update?alt=com.microsoft.azure.management.graphrbac.ServicePrincipal.Update&text=ServicePrincipal.Update" data-throw-if-not-resolved="False"/>
  summary: <p>Assigns a new role to the service principal. </p>
  syntax: public Update withNewRole(BuiltInRole role, String scope)
  uid: com.microsoft.azure.management.graphrbac.ServicePrincipal.UpdateStages.WithRoleAssignment.withNewRole(BuiltInRole,String)
- fullName: com.microsoft.azure.management.graphrbac.ServicePrincipal.UpdateStages.WithRoleAssignment.withNewRoleInResourceGroup(BuiltInRole role, ResourceGroup resourceGroup)
  name: withNewRoleInResourceGroup(BuiltInRole role, ResourceGroup resourceGroup)
  nameWithType: ServicePrincipal.UpdateStages.WithRoleAssignment.withNewRoleInResourceGroup(BuiltInRole role, ResourceGroup resourceGroup)
  parameters:
  - description: <p>the role to assign to the service principal </p>
    name: role
    type: <xref href="com.microsoft.azure.management.graphrbac.BuiltInRole?alt=com.microsoft.azure.management.graphrbac.BuiltInRole&text=BuiltInRole" data-throw-if-not-resolved="False"/>
  - description: <p>the resource group the service principal can access </p>
    name: resourceGroup
    type: <xref href="com.microsoft.azure.management.resources.ResourceGroup?alt=com.microsoft.azure.management.resources.ResourceGroup&text=ResourceGroup" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the next stage of the service principal update </p>
    type: <xref href="com.microsoft.azure.management.graphrbac.ServicePrincipal.Update?alt=com.microsoft.azure.management.graphrbac.ServicePrincipal.Update&text=ServicePrincipal.Update" data-throw-if-not-resolved="False"/>
  summary: <p>Assigns a new role to the service principal. </p>
  syntax: public Update withNewRoleInResourceGroup(BuiltInRole role, ResourceGroup resourceGroup)
  uid: com.microsoft.azure.management.graphrbac.ServicePrincipal.UpdateStages.WithRoleAssignment.withNewRoleInResourceGroup(BuiltInRole,ResourceGroup)
- fullName: com.microsoft.azure.management.graphrbac.ServicePrincipal.UpdateStages.WithRoleAssignment.withNewRoleInSubscription(BuiltInRole role, String subscriptionId)
  name: withNewRoleInSubscription(BuiltInRole role, String subscriptionId)
  nameWithType: ServicePrincipal.UpdateStages.WithRoleAssignment.withNewRoleInSubscription(BuiltInRole role, String subscriptionId)
  parameters:
  - description: <p>the role to assign to the service principal </p>
    name: role
    type: <xref href="com.microsoft.azure.management.graphrbac.BuiltInRole?alt=com.microsoft.azure.management.graphrbac.BuiltInRole&text=BuiltInRole" data-throw-if-not-resolved="False"/>
  - description: <p>the subscription the service principal can access </p>
    name: subscriptionId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the next stage of the service principal update </p>
    type: <xref href="com.microsoft.azure.management.graphrbac.ServicePrincipal.Update?alt=com.microsoft.azure.management.graphrbac.ServicePrincipal.Update&text=ServicePrincipal.Update" data-throw-if-not-resolved="False"/>
  summary: <p>Assigns a new role to the service principal. </p>
  syntax: public Update withNewRoleInSubscription(BuiltInRole role, String subscriptionId)
  uid: com.microsoft.azure.management.graphrbac.ServicePrincipal.UpdateStages.WithRoleAssignment.withNewRoleInSubscription(BuiltInRole,String)
- fullName: com.microsoft.azure.management.graphrbac.ServicePrincipal.UpdateStages.WithRoleAssignment.withoutRole(RoleAssignment roleAssignment)
  name: withoutRole(RoleAssignment roleAssignment)
  nameWithType: ServicePrincipal.UpdateStages.WithRoleAssignment.withoutRole(RoleAssignment roleAssignment)
  parameters:
  - description: <p>the role assignment to remove </p>
    name: roleAssignment
    type: <xref href="com.microsoft.azure.management.graphrbac.RoleAssignment?alt=com.microsoft.azure.management.graphrbac.RoleAssignment&text=RoleAssignment" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the next stage of the service principal update </p>
    type: <xref href="com.microsoft.azure.management.graphrbac.ServicePrincipal.Update?alt=com.microsoft.azure.management.graphrbac.ServicePrincipal.Update&text=ServicePrincipal.Update" data-throw-if-not-resolved="False"/>
  summary: <p>Removes a role from the service principal. </p>
  syntax: public Update withoutRole(RoleAssignment roleAssignment)
  uid: com.microsoft.azure.management.graphrbac.ServicePrincipal.UpdateStages.WithRoleAssignment.withoutRole(RoleAssignment)
nameWithType: ServicePrincipal.UpdateStages.WithRoleAssignment
syntax: public interface WithRoleAssignment
type: interface
uid: com.microsoft.azure.management.graphrbac.ServicePrincipal.UpdateStages.WithRoleAssignment
fullName: com.microsoft.azure.management.graphrbac.ServicePrincipal.UpdateStages.WithRoleAssignment
name: ServicePrincipal.UpdateStages.WithRoleAssignment
package: com.microsoft.azure.management.graphrbac
summary: <p>A service principal update allowing role assignments to be added. </p>
metadata: {}
