### YamlMime:JavaType
methods:
- fullName: com.microsoft.azure.management.sql.SqlChildrenOperations<T>.deleteById(String id)
  name: deleteById(String id)
  nameWithType: SqlChildrenOperations<T>.deleteById(String id)
  parameters:
  - description: <p>the resource ID of the resource to delete </p>
    name: id
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Deletes a child resource from Azure SQL server, identifying it by its resource ID.</p>

    <p></p>
  syntax: public void deleteById(String id)
  uid: com.microsoft.azure.management.sql.SqlChildrenOperations.deleteById(String)
- fullName: com.microsoft.azure.management.sql.SqlChildrenOperations<T>.deleteByIdAsync(String id)
  name: deleteByIdAsync(String id)
  nameWithType: SqlChildrenOperations<T>.deleteByIdAsync(String id)
  parameters:
  - description: <p>the resource ID of the resource to delete </p>
    name: id
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>a representation of the deferred computation of this call </p>
    type: <xref href="Completable?alt=Completable&text=Completable" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Asynchronously delete a child resource from Azure SQL server, identifying it by its resource ID.</p>

    <p></p>
  syntax: public Completable deleteByIdAsync(String id)
  uid: com.microsoft.azure.management.sql.SqlChildrenOperations.deleteByIdAsync(String)
- fullName: com.microsoft.azure.management.sql.SqlChildrenOperations<T>.deleteBySqlServer(String resourceGroupName, String sqlServerName, String name)
  name: deleteBySqlServer(String resourceGroupName, String sqlServerName, String name)
  nameWithType: SqlChildrenOperations<T>.deleteBySqlServer(String resourceGroupName, String sqlServerName, String name)
  parameters:
  - description: <p>the name of resource group </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the name of SQL server parent resource </p>
    name: sqlServerName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the name of the child resource </p>
    name: name
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Deletes a child resource from Azure SQL server, identifying it by its name and its resource group.</p>

    <p></p>
  syntax: public void deleteBySqlServer(String resourceGroupName, String sqlServerName, String name)
  uid: com.microsoft.azure.management.sql.SqlChildrenOperations.deleteBySqlServer(String,String,String)
- fullName: com.microsoft.azure.management.sql.SqlChildrenOperations<T>.deleteBySqlServerAsync(String resourceGroupName, String sqlServerName, String name)
  name: deleteBySqlServerAsync(String resourceGroupName, String sqlServerName, String name)
  nameWithType: SqlChildrenOperations<T>.deleteBySqlServerAsync(String resourceGroupName, String sqlServerName, String name)
  parameters:
  - description: <p>the name of resource group </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the name of SQL server parent resource </p>
    name: sqlServerName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the name of the child resource </p>
    name: name
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>a representation of the deferred computation of this call </p>
    type: <xref href="Completable?alt=Completable&text=Completable" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Asynchronously delete a child resource from Azure SQL server, identifying it by its name and its resource group.</p>

    <p></p>
  syntax: public Completable deleteBySqlServerAsync(String resourceGroupName, String sqlServerName, String name)
  uid: com.microsoft.azure.management.sql.SqlChildrenOperations.deleteBySqlServerAsync(String,String,String)
- fullName: com.microsoft.azure.management.sql.SqlChildrenOperations<T>.getById(String id)
  name: getById(String id)
  nameWithType: SqlChildrenOperations<T>.getById(String id)
  parameters:
  - description: <p>the ID of the resource. </p>
    name: id
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>an immutable representation of the resource </p>
    type: <xref href="T?alt=T&text=T" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the information about a child resource from Azure SQL server using the resource ID.</p>

    <p></p>
  syntax: public T getById(String id)
  uid: com.microsoft.azure.management.sql.SqlChildrenOperations.getById(String)
- fullName: com.microsoft.azure.management.sql.SqlChildrenOperations<T>.getByIdAsync(String id)
  name: getByIdAsync(String id)
  nameWithType: SqlChildrenOperations<T>.getByIdAsync(String id)
  parameters:
  - description: <p>the ID of the resource. </p>
    name: id
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>a representation of the deferred computation of this call </p>
    type: <xref href="Observable%3CT%3E?alt=Observable%3CT%3E&text=Observable%3CT%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Asynchronously gets the information about a child resource from Azure SQL server using the resource ID.</p>

    <p></p>
  syntax: public Observable<T> getByIdAsync(String id)
  uid: com.microsoft.azure.management.sql.SqlChildrenOperations.getByIdAsync(String)
- fullName: com.microsoft.azure.management.sql.SqlChildrenOperations<T>.getBySqlServer(SqlServer sqlServer, String name)
  name: getBySqlServer(SqlServer sqlServer, String name)
  nameWithType: SqlChildrenOperations<T>.getBySqlServer(SqlServer sqlServer, String name)
  parameters:
  - description: <p>the SQL server parent resource </p>
    name: sqlServer
    type: <xref href="com.microsoft.azure.management.sql.SqlServer?alt=com.microsoft.azure.management.sql.SqlServer&text=SqlServer" data-throw-if-not-resolved="False"/>
  - description: <p>the name of the child resource </p>
    name: name
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>an immutable representation of the resource </p>
    type: <xref href="T?alt=T&text=T" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the information about a child resource from Azure SQL server, identifying it by its name and its resource group.</p>

    <p></p>
  syntax: public T getBySqlServer(SqlServer sqlServer, String name)
  uid: com.microsoft.azure.management.sql.SqlChildrenOperations.getBySqlServer(SqlServer,String)
- fullName: com.microsoft.azure.management.sql.SqlChildrenOperations<T>.getBySqlServer(String resourceGroupName, String sqlServerName, String name)
  name: getBySqlServer(String resourceGroupName, String sqlServerName, String name)
  nameWithType: SqlChildrenOperations<T>.getBySqlServer(String resourceGroupName, String sqlServerName, String name)
  parameters:
  - description: <p>the name of resource group </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the name of SQL server parent resource </p>
    name: sqlServerName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the name of the child resource </p>
    name: name
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>an immutable representation of the resource </p>
    type: <xref href="T?alt=T&text=T" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the information about a child resource from Azure SQL server, identifying it by its name and its resource group.</p>

    <p></p>
  syntax: public T getBySqlServer(String resourceGroupName, String sqlServerName, String name)
  uid: com.microsoft.azure.management.sql.SqlChildrenOperations.getBySqlServer(String,String,String)
- fullName: com.microsoft.azure.management.sql.SqlChildrenOperations<T>.getBySqlServerAsync(SqlServer sqlServer, String name)
  name: getBySqlServerAsync(SqlServer sqlServer, String name)
  nameWithType: SqlChildrenOperations<T>.getBySqlServerAsync(SqlServer sqlServer, String name)
  parameters:
  - description: <p>the SQL server parent resource </p>
    name: sqlServer
    type: <xref href="com.microsoft.azure.management.sql.SqlServer?alt=com.microsoft.azure.management.sql.SqlServer&text=SqlServer" data-throw-if-not-resolved="False"/>
  - description: <p>the name of the child resource </p>
    name: name
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>a representation of the deferred computation of this call returning the found resource </p>
    type: <xref href="Observable%3CT%3E?alt=Observable%3CT%3E&text=Observable%3CT%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Asynchronously gets the information about a child resource from Azure SQL server, identifying it by its name and its resource group.</p>

    <p></p>
  syntax: public Observable<T> getBySqlServerAsync(SqlServer sqlServer, String name)
  uid: com.microsoft.azure.management.sql.SqlChildrenOperations.getBySqlServerAsync(SqlServer,String)
- fullName: com.microsoft.azure.management.sql.SqlChildrenOperations<T>.getBySqlServerAsync(String resourceGroupName, String sqlServerName, String name)
  name: getBySqlServerAsync(String resourceGroupName, String sqlServerName, String name)
  nameWithType: SqlChildrenOperations<T>.getBySqlServerAsync(String resourceGroupName, String sqlServerName, String name)
  parameters:
  - description: <p>the name of resource group </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the name of SQL server parent resource </p>
    name: sqlServerName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the name of the child resource </p>
    name: name
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>a representation of the deferred computation of this call returning the found resource </p>
    type: <xref href="Observable%3CT%3E?alt=Observable%3CT%3E&text=Observable%3CT%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Asynchronously gets the information about a child resource from Azure SQL server, identifying it by its name and its resource group.</p>

    <p></p>
  syntax: public Observable<T> getBySqlServerAsync(String resourceGroupName, String sqlServerName, String name)
  uid: com.microsoft.azure.management.sql.SqlChildrenOperations.getBySqlServerAsync(String,String,String)
- fullName: com.microsoft.azure.management.sql.SqlChildrenOperations<T>.listBySqlServer(SqlServer sqlServer)
  name: listBySqlServer(SqlServer sqlServer)
  nameWithType: SqlChildrenOperations<T>.listBySqlServer(SqlServer sqlServer)
  parameters:
  - description: <p>the parent Azure SQL server. </p>
    name: sqlServer
    type: <xref href="com.microsoft.azure.management.sql.SqlServer?alt=com.microsoft.azure.management.sql.SqlServer&text=SqlServer" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the list of resources </p>
    type: <xref href="List%3CT%3E?alt=List%3CT%3E&text=List%3CT%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Lists Azure SQL child resources of the specified Azure SQL server in the specified resource group.</p>

    <p></p>
  syntax: public List<T> listBySqlServer(SqlServer sqlServer)
  uid: com.microsoft.azure.management.sql.SqlChildrenOperations.listBySqlServer(SqlServer)
- fullName: com.microsoft.azure.management.sql.SqlChildrenOperations<T>.listBySqlServer(String resourceGroupName, String sqlServerName)
  name: listBySqlServer(String resourceGroupName, String sqlServerName)
  nameWithType: SqlChildrenOperations<T>.listBySqlServer(String resourceGroupName, String sqlServerName)
  parameters:
  - description: <p>the name of the resource group to list the resources from </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the name of parent Azure SQL server. </p>
    name: sqlServerName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the list of resources </p>
    type: <xref href="List%3CT%3E?alt=List%3CT%3E&text=List%3CT%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Lists Azure SQL child resources of the specified Azure SQL server in the specified resource group.</p>

    <p></p>
  syntax: public List<T> listBySqlServer(String resourceGroupName, String sqlServerName)
  uid: com.microsoft.azure.management.sql.SqlChildrenOperations.listBySqlServer(String,String)
- fullName: com.microsoft.azure.management.sql.SqlChildrenOperations<T>.listBySqlServerAsync(SqlServer sqlServer)
  name: listBySqlServerAsync(SqlServer sqlServer)
  nameWithType: SqlChildrenOperations<T>.listBySqlServerAsync(SqlServer sqlServer)
  parameters:
  - description: <p>the parent Azure SQL server. </p>
    name: sqlServer
    type: <xref href="com.microsoft.azure.management.sql.SqlServer?alt=com.microsoft.azure.management.sql.SqlServer&text=SqlServer" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>a representation of the deferred computation of this call </p>
    type: <xref href="Observable%3CT%3E?alt=Observable%3CT%3E&text=Observable%3CT%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Asynchronously lists Azure SQL child resources of the specified Azure SQL server in the specified resource group.</p>

    <p></p>
  syntax: public Observable<T> listBySqlServerAsync(SqlServer sqlServer)
  uid: com.microsoft.azure.management.sql.SqlChildrenOperations.listBySqlServerAsync(SqlServer)
- fullName: com.microsoft.azure.management.sql.SqlChildrenOperations<T>.listBySqlServerAsync(String resourceGroupName, String sqlServerName)
  name: listBySqlServerAsync(String resourceGroupName, String sqlServerName)
  nameWithType: SqlChildrenOperations<T>.listBySqlServerAsync(String resourceGroupName, String sqlServerName)
  parameters:
  - description: <p>the name of the resource group to list the resources from </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the name of parent Azure SQL server. </p>
    name: sqlServerName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>a representation of the deferred computation of this call </p>
    type: <xref href="Observable%3CT%3E?alt=Observable%3CT%3E&text=Observable%3CT%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Asynchronously lists Azure SQL child resources of the specified Azure SQL server in the specified resource group.</p>

    <p></p>
  syntax: public Observable<T> listBySqlServerAsync(String resourceGroupName, String sqlServerName)
  uid: com.microsoft.azure.management.sql.SqlChildrenOperations.listBySqlServerAsync(String,String)
nameWithType: SqlChildrenOperations<T>
syntax: public interface SqlChildrenOperations<T>
type: interface
typeParameters:
- description: <p>the FluentT interface of the SQL server child resource </p>
  name: T
uid: com.microsoft.azure.management.sql.SqlChildrenOperations
fullName: com.microsoft.azure.management.sql.SqlChildrenOperations<T>
name: SqlChildrenOperations<T>
package: com.microsoft.azure.management.sql
summary: >-
  <p>Base class for Azure SQL Server child resource operations.</p>

  <p></p>
metadata: {}
