### YamlMime:JavaType
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
- <xref href="com.microsoft.azure.management.resources.fluentcore.arm.collection.implementation.GroupableResourcesImpl&lt;KubernetesCluster, KubernetesClusterImpl, ManagedClusterInner, ManagedClustersInner, ContainerServiceManager&gt;" data-throw-if-not-resolved="False"/>
inheritedMembers:
- com.microsoft.azure.management.resources.fluentcore.collection.SupportsBatchCreation.create(Creatable<ResourceT>...)
- com.microsoft.azure.management.resources.fluentcore.collection.SupportsBatchCreation.create(List<Creatable<ResourceT>>)
- com.microsoft.azure.management.resources.fluentcore.collection.SupportsBatchCreation.createAsync(Creatable<ResourceT>...)
- com.microsoft.azure.management.resources.fluentcore.collection.SupportsBatchCreation.createAsync(List<Creatable<ResourceT>>)
- com.microsoft.azure.management.resources.fluentcore.collection.SupportsBatchCreation.createAsync(ServiceCallback<CreatedResources<ResourceT>>,Creatable<ResourceT>...)
- com.microsoft.azure.management.resources.fluentcore.collection.SupportsBatchCreation.createAsync(final ServiceCallback<CreatedResources<ResourceT>>,List<Creatable<ResourceT>>)
- com.microsoft.azure.management.resources.fluentcore.collection.SupportsDeletingById.deleteById(String)
- com.microsoft.azure.management.resources.fluentcore.collection.SupportsDeletingById.deleteByIdAsync(String,ServiceCallback<Void>)
- com.microsoft.azure.management.resources.fluentcore.collection.SupportsDeletingById.deleteByIdAsync(String)
- com.microsoft.azure.management.resources.fluentcore.arm.collection.SupportsDeletingByResourceGroup.deleteByResourceGroup(String,String)
- com.microsoft.azure.management.resources.fluentcore.arm.collection.SupportsDeletingByResourceGroup.deleteByResourceGroupAsync(String,String,ServiceCallback<Void>)
- com.microsoft.azure.management.resources.fluentcore.arm.collection.SupportsDeletingByResourceGroup.deleteByResourceGroupAsync(String,String)
- com.microsoft.azure.management.resources.fluentcore.arm.collection.SupportsGettingById.getById(String)
- com.microsoft.azure.management.resources.fluentcore.arm.collection.SupportsGettingById.getByIdAsync(String)
- com.microsoft.azure.management.resources.fluentcore.arm.collection.SupportsGettingById.getByIdAsync(String,ServiceCallback<T>)
- com.microsoft.azure.management.resources.fluentcore.arm.collection.SupportsGettingByResourceGroup.getByResourceGroup(String,String)
- com.microsoft.azure.management.resources.fluentcore.arm.collection.SupportsGettingByResourceGroup.getByResourceGroupAsync(String,String)
- com.microsoft.azure.management.resources.fluentcore.arm.collection.SupportsGettingByResourceGroup.getByResourceGroupAsync(String,String,ServiceCallback<T>)
- com.microsoft.azure.management.resources.fluentcore.model.HasInner.inner()
- com.microsoft.azure.management.resources.fluentcore.arm.models.HasManager.manager()
methods:
- fullName: com.microsoft.azure.management.containerservice.implementation.KubernetesClustersImpl.define(String name)
  name: define(String name)
  nameWithType: KubernetesClustersImpl.define(String name)
  overridden: com.microsoft.azure.management.resources.fluentcore.collection.SupportsCreating.define(String)
  parameters:
  - description: <p>the name of the new resource </p>
    name: name
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the first stage of the new resource definition </p>
    type: <xref href="com.microsoft.azure.management.containerservice.implementation.KubernetesClusterImpl?alt=com.microsoft.azure.management.containerservice.implementation.KubernetesClusterImpl&text=KubernetesClusterImpl" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Begins a definition for a new resource. </p>

    <p>This is the beginning of the builder pattern used to create top level resources in Azure. The final method completing the definition and starting the actual resource creation process in Azure is <xref uid="com.microsoft.azure.management.resources.fluentcore.model.Creatable.create()" data-throw-if-not-resolved="false" data-raw-source="Creatable#create()"></xref>. </p>

    <p>Note that the <xref uid="com.microsoft.azure.management.resources.fluentcore.model.Creatable.create()" data-throw-if-not-resolved="false" data-raw-source="Creatable#create()"></xref> method is only available at the stage of the resource definition that has the minimum set of input parameters specified. If you do not see <xref uid="com.microsoft.azure.management.resources.fluentcore.model.Creatable.create()" data-throw-if-not-resolved="false" data-raw-source="Creatable#create()"></xref> among the available methods, it means you have not yet specified all the required input settings. Input settings generally begin with the word "with", for example:  and return the next stage of the resource definition, as an interface in the "fluent interface" style. </p>
  syntax: public KubernetesClusterImpl define(String name)
  uid: com.microsoft.azure.management.containerservice.implementation.KubernetesClustersImpl.define(String)
- fullName: com.microsoft.azure.management.containerservice.implementation.KubernetesClustersImpl.deleteInnerAsync(String resourceGroupName, String name)
  name: deleteInnerAsync(String resourceGroupName, String name)
  nameWithType: KubernetesClustersImpl.deleteInnerAsync(String resourceGroupName, String name)
  parameters:
  - name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - name: name
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    type: <xref href="Completable?alt=Completable&text=Completable" data-throw-if-not-resolved="False"/>
  syntax: protected Completable deleteInnerAsync(String resourceGroupName, String name)
  uid: com.microsoft.azure.management.containerservice.implementation.KubernetesClustersImpl.deleteInnerAsync(String,String)
- fullName: com.microsoft.azure.management.containerservice.implementation.KubernetesClustersImpl.getAdminKubeConfigContent(String resourceGroupName, String kubernetesClusterName)
  name: getAdminKubeConfigContent(String resourceGroupName, String kubernetesClusterName)
  nameWithType: KubernetesClustersImpl.getAdminKubeConfigContent(String resourceGroupName, String kubernetesClusterName)
  overridden: com.microsoft.azure.management.containerservice.KubernetesClusters.getAdminKubeConfigContent(String,String)
  parameters:
  - description: <p>the resource group name where the cluster is </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the managed cluster name </p>
    name: kubernetesClusterName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the Kube.config content which can be used with a Kubernetes client </p>
    type: <xref href="byte+%5B%5D?alt=byte+%5B%5D&text=byte+%5B%5D" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Returns the admin Kube.config content which can be used with a Kubernetes client.</p>

    <p></p>
  syntax: public byte [] getAdminKubeConfigContent(String resourceGroupName, String kubernetesClusterName)
  uid: com.microsoft.azure.management.containerservice.implementation.KubernetesClustersImpl.getAdminKubeConfigContent(String,String)
- fullName: com.microsoft.azure.management.containerservice.implementation.KubernetesClustersImpl.getAdminKubeConfigContentAsync(String resourceGroupName, String kubernetesClusterName)
  name: getAdminKubeConfigContentAsync(String resourceGroupName, String kubernetesClusterName)
  nameWithType: KubernetesClustersImpl.getAdminKubeConfigContentAsync(String resourceGroupName, String kubernetesClusterName)
  overridden: com.microsoft.azure.management.containerservice.KubernetesClusters.getAdminKubeConfigContentAsync(String,String)
  parameters:
  - description: <p>the resource group name where the cluster is </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the managed cluster name </p>
    name: kubernetesClusterName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>a future representation of the Kube.config content which can be used with a Kubernetes client </p>
    type: <xref href="Observable%3Cbyte%5B%5D%3E?alt=Observable%3Cbyte%5B%5D%3E&text=Observable%3Cbyte%5B%5D%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Returns asynchronously the admin Kube.config content which can be used with a Kubernetes client.</p>

    <p></p>
  syntax: public Observable<byte[]> getAdminKubeConfigContentAsync(String resourceGroupName, String kubernetesClusterName)
  uid: com.microsoft.azure.management.containerservice.implementation.KubernetesClustersImpl.getAdminKubeConfigContentAsync(String,String)
- fullName: com.microsoft.azure.management.containerservice.implementation.KubernetesClustersImpl.getInnerAsync(String resourceGroupName, String name)
  name: getInnerAsync(String resourceGroupName, String name)
  nameWithType: KubernetesClustersImpl.getInnerAsync(String resourceGroupName, String name)
  parameters:
  - name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - name: name
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    type: Observable&lt;<xref href="com.microsoft.azure.management.containerservice.implementation.ManagedClusterInner?alt=com.microsoft.azure.management.containerservice.implementation.ManagedClusterInner&text=ManagedClusterInner" data-throw-if-not-resolved="False"/>&gt;
  syntax: protected Observable<ManagedClusterInner> getInnerAsync(String resourceGroupName, String name)
  uid: com.microsoft.azure.management.containerservice.implementation.KubernetesClustersImpl.getInnerAsync(String,String)
- fullName: com.microsoft.azure.management.containerservice.implementation.KubernetesClustersImpl.getUserKubeConfigContent(String resourceGroupName, String kubernetesClusterName)
  name: getUserKubeConfigContent(String resourceGroupName, String kubernetesClusterName)
  nameWithType: KubernetesClustersImpl.getUserKubeConfigContent(String resourceGroupName, String kubernetesClusterName)
  overridden: com.microsoft.azure.management.containerservice.KubernetesClusters.getUserKubeConfigContent(String,String)
  parameters:
  - description: <p>the resource group name where the cluster is </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the managed cluster name </p>
    name: kubernetesClusterName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the Kube.config content which can be used with a Kubernetes client </p>
    type: <xref href="byte+%5B%5D?alt=byte+%5B%5D&text=byte+%5B%5D" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Returns the user Kube.config content which can be used with a Kubernetes client.</p>

    <p></p>
  syntax: public byte [] getUserKubeConfigContent(String resourceGroupName, String kubernetesClusterName)
  uid: com.microsoft.azure.management.containerservice.implementation.KubernetesClustersImpl.getUserKubeConfigContent(String,String)
- fullName: com.microsoft.azure.management.containerservice.implementation.KubernetesClustersImpl.getUserKubeConfigContentAsync(String resourceGroupName, String kubernetesClusterName)
  name: getUserKubeConfigContentAsync(String resourceGroupName, String kubernetesClusterName)
  nameWithType: KubernetesClustersImpl.getUserKubeConfigContentAsync(String resourceGroupName, String kubernetesClusterName)
  overridden: com.microsoft.azure.management.containerservice.KubernetesClusters.getUserKubeConfigContentAsync(String,String)
  parameters:
  - description: <p>the resource group name where the cluster is </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the managed cluster name </p>
    name: kubernetesClusterName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>a future representation of the Kube.config content which can be used with a Kubernetes client </p>
    type: <xref href="Observable%3Cbyte%5B%5D%3E?alt=Observable%3Cbyte%5B%5D%3E&text=Observable%3Cbyte%5B%5D%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Returns asynchronously the user Kube.config content which can be used with a Kubernetes client.</p>

    <p></p>
  syntax: public Observable<byte[]> getUserKubeConfigContentAsync(String resourceGroupName, String kubernetesClusterName)
  uid: com.microsoft.azure.management.containerservice.implementation.KubernetesClustersImpl.getUserKubeConfigContentAsync(String,String)
- fullName: com.microsoft.azure.management.containerservice.implementation.KubernetesClustersImpl.list()
  name: list()
  nameWithType: KubernetesClustersImpl.list()
  overridden: com.microsoft.azure.management.resources.fluentcore.collection.SupportsListing.list()
  returns:
    description: <p>list of resources </p>
    type: PagedList&lt;<xref href="com.microsoft.azure.management.containerservice.KubernetesCluster?alt=com.microsoft.azure.management.containerservice.KubernetesCluster&text=KubernetesCluster" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Lists all the resources of the specified type in the currently selected subscription.</p>

    <p></p>
  syntax: public PagedList<KubernetesCluster> list()
  uid: com.microsoft.azure.management.containerservice.implementation.KubernetesClustersImpl.list()
- fullName: com.microsoft.azure.management.containerservice.implementation.KubernetesClustersImpl.listAsync()
  name: listAsync()
  nameWithType: KubernetesClustersImpl.listAsync()
  overridden: com.microsoft.azure.management.resources.fluentcore.collection.SupportsListing.listAsync()
  returns:
    description: <p>list of resources </p>
    type: Observable&lt;<xref href="com.microsoft.azure.management.containerservice.KubernetesCluster?alt=com.microsoft.azure.management.containerservice.KubernetesCluster&text=KubernetesCluster" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Lists all the resources of the specified type in the currently selected subscription.</p>

    <p></p>
  syntax: public Observable<KubernetesCluster> listAsync()
  uid: com.microsoft.azure.management.containerservice.implementation.KubernetesClustersImpl.listAsync()
- fullName: com.microsoft.azure.management.containerservice.implementation.KubernetesClustersImpl.listByResourceGroup(String resourceGroupName)
  name: listByResourceGroup(String resourceGroupName)
  nameWithType: KubernetesClustersImpl.listByResourceGroup(String resourceGroupName)
  overridden: com.microsoft.azure.management.resources.fluentcore.arm.collection.SupportsListingByResourceGroup.listByResourceGroup(String)
  parameters:
  - description: <p>the name of the resource group to list the resources from </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the list of resources </p>
    type: PagedList&lt;<xref href="com.microsoft.azure.management.containerservice.KubernetesCluster?alt=com.microsoft.azure.management.containerservice.KubernetesCluster&text=KubernetesCluster" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Lists resources of the specified type in the specified resource group.</p>

    <p></p>
  syntax: public PagedList<KubernetesCluster> listByResourceGroup(String resourceGroupName)
  uid: com.microsoft.azure.management.containerservice.implementation.KubernetesClustersImpl.listByResourceGroup(String)
- fullName: com.microsoft.azure.management.containerservice.implementation.KubernetesClustersImpl.listByResourceGroupAsync(String resourceGroupName)
  name: listByResourceGroupAsync(String resourceGroupName)
  nameWithType: KubernetesClustersImpl.listByResourceGroupAsync(String resourceGroupName)
  overridden: com.microsoft.azure.management.resources.fluentcore.arm.collection.SupportsListingByResourceGroup.listByResourceGroupAsync(String)
  parameters:
  - description: <p>the name of the resource group to list the resources from </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the list of resources </p>
    type: Observable&lt;<xref href="com.microsoft.azure.management.containerservice.KubernetesCluster?alt=com.microsoft.azure.management.containerservice.KubernetesCluster&text=KubernetesCluster" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Lists resources of the specified type in the specified resource group.</p>

    <p></p>
  syntax: public Observable<KubernetesCluster> listByResourceGroupAsync(String resourceGroupName)
  uid: com.microsoft.azure.management.containerservice.implementation.KubernetesClustersImpl.listByResourceGroupAsync(String)
- fullName: com.microsoft.azure.management.containerservice.implementation.KubernetesClustersImpl.listKubernetesVersions(Region region)
  name: listKubernetesVersions(Region region)
  nameWithType: KubernetesClustersImpl.listKubernetesVersions(Region region)
  overridden: com.microsoft.azure.management.containerservice.KubernetesClusters.listKubernetesVersions(Region)
  parameters:
  - description: <p>the Azure region to query into </p>
    name: region
    type: <xref href="com.microsoft.azure.management.resources.fluentcore.arm.Region?alt=com.microsoft.azure.management.resources.fluentcore.arm.Region&text=Region" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>a set of Kubernetes versions which can be used when creating a service in this region </p>
    type: <xref href="Set%3CString%3E?alt=Set%3CString%3E&text=Set%3CString%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Returns the list of available Kubernetes versions available for the given Azure region.</p>

    <p></p>
  syntax: public Set<String> listKubernetesVersions(Region region)
  uid: com.microsoft.azure.management.containerservice.implementation.KubernetesClustersImpl.listKubernetesVersions(Region)
- fullName: com.microsoft.azure.management.containerservice.implementation.KubernetesClustersImpl.listKubernetesVersionsAsync(Region region)
  name: listKubernetesVersionsAsync(Region region)
  nameWithType: KubernetesClustersImpl.listKubernetesVersionsAsync(Region region)
  overridden: com.microsoft.azure.management.containerservice.KubernetesClusters.listKubernetesVersionsAsync(Region)
  parameters:
  - description: <p>the Azure region to query into </p>
    name: region
    type: <xref href="com.microsoft.azure.management.resources.fluentcore.arm.Region?alt=com.microsoft.azure.management.resources.fluentcore.arm.Region&text=Region" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>a future representation of a set of Kubernetes versions which can be used when creating a service in this region </p>
    type: <xref href="Observable%3CSet%3CString%3E%3E?alt=Observable%3CSet%3CString%3E%3E&text=Observable%3CSet%3CString%3E%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Returns the list of available Kubernetes versions available for the given Azure region.</p>

    <p></p>
  syntax: public Observable<Set<String>> listKubernetesVersionsAsync(Region region)
  uid: com.microsoft.azure.management.containerservice.implementation.KubernetesClustersImpl.listKubernetesVersionsAsync(Region)
- fullName: com.microsoft.azure.management.containerservice.implementation.KubernetesClustersImpl.wrapModel(ManagedClusterInner inner)
  name: wrapModel(ManagedClusterInner inner)
  nameWithType: KubernetesClustersImpl.wrapModel(ManagedClusterInner inner)
  parameters:
  - name: inner
    type: <xref href="com.microsoft.azure.management.containerservice.implementation.ManagedClusterInner?alt=com.microsoft.azure.management.containerservice.implementation.ManagedClusterInner&text=ManagedClusterInner" data-throw-if-not-resolved="False"/>
  returns:
    type: <xref href="com.microsoft.azure.management.containerservice.implementation.KubernetesClusterImpl?alt=com.microsoft.azure.management.containerservice.implementation.KubernetesClusterImpl&text=KubernetesClusterImpl" data-throw-if-not-resolved="False"/>
  syntax: protected KubernetesClusterImpl wrapModel(ManagedClusterInner inner)
  uid: com.microsoft.azure.management.containerservice.implementation.KubernetesClustersImpl.wrapModel(ManagedClusterInner)
- fullName: com.microsoft.azure.management.containerservice.implementation.KubernetesClustersImpl.wrapModel(String name)
  name: wrapModel(String name)
  nameWithType: KubernetesClustersImpl.wrapModel(String name)
  parameters:
  - name: name
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    type: <xref href="com.microsoft.azure.management.containerservice.implementation.KubernetesClusterImpl?alt=com.microsoft.azure.management.containerservice.implementation.KubernetesClusterImpl&text=KubernetesClusterImpl" data-throw-if-not-resolved="False"/>
  syntax: protected KubernetesClusterImpl wrapModel(String name)
  uid: com.microsoft.azure.management.containerservice.implementation.KubernetesClustersImpl.wrapModel(String)
nameWithType: KubernetesClustersImpl
syntax: public class KubernetesClustersImpl implements KubernetesClusters
type: class
uid: com.microsoft.azure.management.containerservice.implementation.KubernetesClustersImpl
fullName: com.microsoft.azure.management.containerservice.implementation.KubernetesClustersImpl
name: KubernetesClustersImpl
package: com.microsoft.azure.management.containerservice.implementation
summary: <p>The implementation for KubernetesClusters. </p>
metadata: {}
