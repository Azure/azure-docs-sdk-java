### YamlMime:JavaMember
nameWithType: Disk.DefinitionStages.WithDataDiskFromImage.fromImage
type: method
members:
- fullName: com.microsoft.azure.management.compute.Disk.DefinitionStages.WithDataDiskFromImage.fromImage(String imageId, int diskLun)
  name: fromImage(String imageId, int diskLun)
  nameWithType: Disk.DefinitionStages.WithDataDiskFromImage.fromImage(String imageId, int diskLun)
  parameters:
  - description: <p>image resource ID </p>
    name: imageId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>LUN of the disk image </p>
    name: diskLun
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the next stage of the definition </p>
    type: <xref href="com.microsoft.azure.management.compute.Disk.DefinitionStages.WithCreateAndSize?alt=com.microsoft.azure.management.compute.Disk.DefinitionStages.WithCreateAndSize&text=Disk.DefinitionStages.WithCreateAndSize" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Specifies the ID of an image containing source data disk image.</p>

    <p></p>
  syntax: public WithCreateAndSize fromImage(String imageId, int diskLun)
  uid: com.microsoft.azure.management.compute.Disk.DefinitionStages.WithDataDiskFromImage.fromImage(String,int)
- fullName: com.microsoft.azure.management.compute.Disk.DefinitionStages.WithDataDiskFromImage.fromImage(VirtualMachineCustomImage image, int diskLun)
  name: fromImage(VirtualMachineCustomImage image, int diskLun)
  nameWithType: Disk.DefinitionStages.WithDataDiskFromImage.fromImage(VirtualMachineCustomImage image, int diskLun)
  parameters:
  - description: <p>the image </p>
    name: image
    type: <xref href="com.microsoft.azure.management.compute.VirtualMachineCustomImage?alt=com.microsoft.azure.management.compute.VirtualMachineCustomImage&text=VirtualMachineCustomImage" data-throw-if-not-resolved="False"/>
  - description: <p>LUN of the disk image </p>
    name: diskLun
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the next stage of the definition </p>
    type: <xref href="com.microsoft.azure.management.compute.Disk.DefinitionStages.WithCreateAndSize?alt=com.microsoft.azure.management.compute.Disk.DefinitionStages.WithCreateAndSize&text=Disk.DefinitionStages.WithCreateAndSize" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Specifies a custom image containing a source data disk image.</p>

    <p></p>
  syntax: public WithCreateAndSize fromImage(VirtualMachineCustomImage image, int diskLun)
  uid: com.microsoft.azure.management.compute.Disk.DefinitionStages.WithDataDiskFromImage.fromImage(VirtualMachineCustomImage,int)
- fullName: com.microsoft.azure.management.compute.Disk.DefinitionStages.WithDataDiskFromImage.fromImage(VirtualMachineImage image, int diskLun)
  name: fromImage(VirtualMachineImage image, int diskLun)
  nameWithType: Disk.DefinitionStages.WithDataDiskFromImage.fromImage(VirtualMachineImage image, int diskLun)
  parameters:
  - description: <p>the image </p>
    name: image
    type: <xref href="com.microsoft.azure.management.compute.VirtualMachineImage?alt=com.microsoft.azure.management.compute.VirtualMachineImage&text=VirtualMachineImage" data-throw-if-not-resolved="False"/>
  - description: <p>LUN of the disk image </p>
    name: diskLun
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the next stage of the definition </p>
    type: <xref href="com.microsoft.azure.management.compute.Disk.DefinitionStages.WithCreateAndSize?alt=com.microsoft.azure.management.compute.Disk.DefinitionStages.WithCreateAndSize&text=Disk.DefinitionStages.WithCreateAndSize" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Specifies an image containing source data disk image.</p>

    <p></p>
  syntax: public WithCreateAndSize fromImage(VirtualMachineImage image, int diskLun)
  uid: com.microsoft.azure.management.compute.Disk.DefinitionStages.WithDataDiskFromImage.fromImage(VirtualMachineImage,int)
uid: com.microsoft.azure.management.compute.Disk.DefinitionStages.WithDataDiskFromImage.fromImage*
fullName: com.microsoft.azure.management.compute.Disk.DefinitionStages.WithDataDiskFromImage.fromImage(String imageId, int diskLun)
name: fromImage(String imageId, int diskLun)
package: com.microsoft.azure.management.compute
metadata: {}
