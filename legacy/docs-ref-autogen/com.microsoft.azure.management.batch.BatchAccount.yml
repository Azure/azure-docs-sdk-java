### YamlMime:JavaType
inheritedMembers:
- com.microsoft.azure.management.resources.fluentcore.arm.models.HasId.id()
- com.microsoft.azure.management.resources.fluentcore.model.HasInner.inner()
- com.microsoft.azure.management.resources.fluentcore.model.Indexable.key()
- com.microsoft.azure.management.resources.fluentcore.arm.models.HasManager.manager()
- com.microsoft.azure.management.resources.fluentcore.arm.models.HasName.name()
- com.microsoft.azure.management.resources.fluentcore.model.Refreshable.refresh()
- com.microsoft.azure.management.resources.fluentcore.model.Refreshable.refreshAsync()
- com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.region()
- com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.regionName()
- com.microsoft.azure.management.resources.fluentcore.arm.models.HasResourceGroup.resourceGroupName()
- com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.tags()
- com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.type()
- com.microsoft.azure.management.resources.fluentcore.model.Updatable.update()
methods:
- fullName: com.microsoft.azure.management.batch.BatchAccount.accountEndpoint()
  name: accountEndpoint()
  nameWithType: BatchAccount.accountEndpoint()
  returns:
    description: <p>Batch account endpoint </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  syntax: public String accountEndpoint()
  uid: com.microsoft.azure.management.batch.BatchAccount.accountEndpoint()
- fullName: com.microsoft.azure.management.batch.BatchAccount.activeJobAndJobScheduleQuota()
  name: activeJobAndJobScheduleQuota()
  nameWithType: BatchAccount.activeJobAndJobScheduleQuota()
  returns:
    description: <p>the active job and job schedule quota for this Batch account </p>
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  syntax: public int activeJobAndJobScheduleQuota()
  uid: com.microsoft.azure.management.batch.BatchAccount.activeJobAndJobScheduleQuota()
- fullName: com.microsoft.azure.management.batch.BatchAccount.applications()
  name: applications()
  nameWithType: BatchAccount.applications()
  returns:
    description: <p>applications in this Batch account, indexed by name </p>
    type: Map&lt;String, <xref href="com.microsoft.azure.management.batch.Application?alt=com.microsoft.azure.management.batch.Application&text=Application" data-throw-if-not-resolved="False"/>&gt;
  syntax: public Map<String, Application> applications()
  uid: com.microsoft.azure.management.batch.BatchAccount.applications()
- fullName: com.microsoft.azure.management.batch.BatchAccount.autoStorage()
  name: autoStorage()
  nameWithType: BatchAccount.autoStorage()
  returns:
    description: <p>the properties and status of any auto storage account associated with the Batch account </p>
    type: <xref href="com.microsoft.azure.management.batch.AutoStorageProperties?alt=com.microsoft.azure.management.batch.AutoStorageProperties&text=AutoStorageProperties" data-throw-if-not-resolved="False"/>
  syntax: public AutoStorageProperties autoStorage()
  uid: com.microsoft.azure.management.batch.BatchAccount.autoStorage()
- fullName: com.microsoft.azure.management.batch.BatchAccount.coreQuota()
  name: coreQuota()
  nameWithType: BatchAccount.coreQuota()
  returns:
    description: <p>the core quota for this Batch account </p>
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  syntax: public int coreQuota()
  uid: com.microsoft.azure.management.batch.BatchAccount.coreQuota()
- fullName: com.microsoft.azure.management.batch.BatchAccount.dedicatedCoreQuota()
  name: dedicatedCoreQuota()
  nameWithType: BatchAccount.dedicatedCoreQuota()
  returns:
    description: <p>the dedicated core quota for the Batch account </p>
    type: <xref href="Integer?alt=Integer&text=Integer" data-throw-if-not-resolved="False"/>
  syntax: public Integer dedicatedCoreQuota()
  uid: com.microsoft.azure.management.batch.BatchAccount.dedicatedCoreQuota()
- fullName: com.microsoft.azure.management.batch.BatchAccount.dedicatedCoreQuotaPerVMFamily()
  name: dedicatedCoreQuotaPerVMFamily()
  nameWithType: BatchAccount.dedicatedCoreQuotaPerVMFamily()
  returns:
    description: <p>a list of the dedicated core quota per Virtual Machine family for the Batch account </p>
    type: List&lt;<xref href="com.microsoft.azure.management.batch.VirtualMachineFamilyCoreQuota?alt=com.microsoft.azure.management.batch.VirtualMachineFamilyCoreQuota&text=VirtualMachineFamilyCoreQuota" data-throw-if-not-resolved="False"/>&gt;
  syntax: public List<VirtualMachineFamilyCoreQuota> dedicatedCoreQuotaPerVMFamily()
  uid: com.microsoft.azure.management.batch.BatchAccount.dedicatedCoreQuotaPerVMFamily()
- fullName: com.microsoft.azure.management.batch.BatchAccount.dedicatedCoreQuotaPerVMFamilyEnforced()
  name: dedicatedCoreQuotaPerVMFamilyEnforced()
  nameWithType: BatchAccount.dedicatedCoreQuotaPerVMFamilyEnforced()
  returns:
    description: <p>value indicating whether the core quota for the Batch Account is enforced per Virtual Machine family or not </p>
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False"/>
  syntax: public boolean dedicatedCoreQuotaPerVMFamilyEnforced()
  uid: com.microsoft.azure.management.batch.BatchAccount.dedicatedCoreQuotaPerVMFamilyEnforced()
- fullName: com.microsoft.azure.management.batch.BatchAccount.getKeys()
  name: getKeys()
  nameWithType: BatchAccount.getKeys()
  returns:
    description: <p>the access keys for this Batch account </p>
    type: <xref href="com.microsoft.azure.management.batch.BatchAccountKeys?alt=com.microsoft.azure.management.batch.BatchAccountKeys&text=BatchAccountKeys" data-throw-if-not-resolved="False"/>
  syntax: public BatchAccountKeys getKeys()
  uid: com.microsoft.azure.management.batch.BatchAccount.getKeys()
- fullName: com.microsoft.azure.management.batch.BatchAccount.lowPriorityCoreQuota()
  name: lowPriorityCoreQuota()
  nameWithType: BatchAccount.lowPriorityCoreQuota()
  returns:
    description: <p>the low-priority core quota for the Batch account </p>
    type: <xref href="Integer?alt=Integer&text=Integer" data-throw-if-not-resolved="False"/>
  syntax: public Integer lowPriorityCoreQuota()
  uid: com.microsoft.azure.management.batch.BatchAccount.lowPriorityCoreQuota()
- fullName: com.microsoft.azure.management.batch.BatchAccount.poolQuota()
  name: poolQuota()
  nameWithType: BatchAccount.poolQuota()
  returns:
    description: <p>the pool quota for this Batch account </p>
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  syntax: public int poolQuota()
  uid: com.microsoft.azure.management.batch.BatchAccount.poolQuota()
- fullName: com.microsoft.azure.management.batch.BatchAccount.pools()
  name: pools()
  nameWithType: BatchAccount.pools()
  returns:
    description: <p>pools in this Batch account, indexed by name </p>
    type: Map&lt;String, <xref href="com.microsoft.azure.management.batch.Pool?alt=com.microsoft.azure.management.batch.Pool&text=Pool" data-throw-if-not-resolved="False"/>&gt;
  syntax: public Map<String, Pool> pools()
  uid: com.microsoft.azure.management.batch.BatchAccount.pools()
- fullName: com.microsoft.azure.management.batch.BatchAccount.provisioningState()
  name: provisioningState()
  nameWithType: BatchAccount.provisioningState()
  returns:
    description: <p>the provisioned state of the resource </p>
    type: <xref href="com.microsoft.azure.management.batch.ProvisioningState?alt=com.microsoft.azure.management.batch.ProvisioningState&text=ProvisioningState" data-throw-if-not-resolved="False"/>
  syntax: public ProvisioningState provisioningState()
  uid: com.microsoft.azure.management.batch.BatchAccount.provisioningState()
- fullName: com.microsoft.azure.management.batch.BatchAccount.regenerateKeys(AccountKeyType keyType)
  name: regenerateKeys(AccountKeyType keyType)
  nameWithType: BatchAccount.regenerateKeys(AccountKeyType keyType)
  parameters:
  - description: <p>the type if key to regenerate </p>
    name: keyType
    type: <xref href="com.microsoft.azure.management.batch.AccountKeyType?alt=com.microsoft.azure.management.batch.AccountKeyType&text=AccountKeyType" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>regenerated access keys for this Batch account </p>
    type: <xref href="com.microsoft.azure.management.batch.BatchAccountKeys?alt=com.microsoft.azure.management.batch.BatchAccountKeys&text=BatchAccountKeys" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Regenerates the access keys for the Batch account.</p>

    <p></p>
  syntax: public BatchAccountKeys regenerateKeys(AccountKeyType keyType)
  uid: com.microsoft.azure.management.batch.BatchAccount.regenerateKeys(AccountKeyType)
- fullName: com.microsoft.azure.management.batch.BatchAccount.synchronizeAutoStorageKeys()
  name: synchronizeAutoStorageKeys()
  nameWithType: BatchAccount.synchronizeAutoStorageKeys()
  summary: <p>Synchronizes the storage account keys for this Batch account. </p>
  syntax: public void synchronizeAutoStorageKeys()
  uid: com.microsoft.azure.management.batch.BatchAccount.synchronizeAutoStorageKeys()
nameWithType: BatchAccount
syntax: public interface BatchAccount extends GroupableResource<BatchManager, BatchAccountInner>,Refreshable<BatchAccount>,Updatable<BatchAccount.Update>
type: interface
uid: com.microsoft.azure.management.batch.BatchAccount
fullName: com.microsoft.azure.management.batch.BatchAccount
name: BatchAccount
package: com.microsoft.azure.management.batch
summary: <p>An immutable client-side representation of an Azure Batch account. </p>
metadata: {}
