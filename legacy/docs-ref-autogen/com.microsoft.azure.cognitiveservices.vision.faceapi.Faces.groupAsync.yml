### YamlMime:JavaMember
nameWithType: Faces.groupAsync
type: method
members:
- fullName: com.microsoft.azure.cognitiveservices.vision.faceapi.Faces.groupAsync(List<UUID> faceIds)
  name: groupAsync(List<UUID> faceIds)
  nameWithType: Faces.groupAsync(List<UUID> faceIds)
  parameters:
  - description: <p>Array of candidate faceId created by Face - Detect. The maximum is 1000 faces. </p>
    name: faceIds
    type: <xref href="List%3CUUID%3E?alt=List%3CUUID%3E&text=List%3CUUID%3E" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the GroupResult object </p>
    type: Observable&lt;<xref href="com.microsoft.azure.cognitiveservices.vision.faceapi.models.GroupResult?alt=com.microsoft.azure.cognitiveservices.vision.faceapi.models.GroupResult&text=GroupResult" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Divide candidate faces into groups based on face similarity.</p>

    <p></p>
  syntax: public Observable<GroupResult> groupAsync(List<UUID> faceIds)
  uid: com.microsoft.azure.cognitiveservices.vision.faceapi.Faces.groupAsync(List<UUID>)
uid: com.microsoft.azure.cognitiveservices.vision.faceapi.Faces.groupAsync*
fullName: com.microsoft.azure.cognitiveservices.vision.faceapi.Faces.groupAsync
name: groupAsync(List<UUID> faceIds)
package: com.microsoft.azure.cognitiveservices.vision.faceapi
metadata: {}
