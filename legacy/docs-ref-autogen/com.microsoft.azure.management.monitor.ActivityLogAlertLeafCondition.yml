### YamlMime:JavaType
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
methods:
- fullName: com.microsoft.azure.management.monitor.ActivityLogAlertLeafCondition.equals()
  name: equals()
  nameWithType: ActivityLogAlertLeafCondition.equals()
  returns:
    description: <p>the equals value </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the field value will be compared to this value (case-insensitive) to determine if the condition is met.</p>

    <p></p>
  syntax: public String equals()
  uid: com.microsoft.azure.management.monitor.ActivityLogAlertLeafCondition.equals()
- fullName: com.microsoft.azure.management.monitor.ActivityLogAlertLeafCondition.field()
  name: field()
  nameWithType: ActivityLogAlertLeafCondition.field()
  returns:
    description: <p>the field value </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the name of the field that this condition will examine. The possible values for this field are (case-insensitive): 'resourceId', 'category', 'caller', 'level', 'operationName', 'resourceGroup', 'resourceProvider', 'status', 'subStatus', 'resourceType', or anything beginning with 'properties.'.</p>

    <p></p>
  syntax: public String field()
  uid: com.microsoft.azure.management.monitor.ActivityLogAlertLeafCondition.field()
- fullName: com.microsoft.azure.management.monitor.ActivityLogAlertLeafCondition.withEquals(String equals)
  name: withEquals(String equals)
  nameWithType: ActivityLogAlertLeafCondition.withEquals(String equals)
  parameters:
  - description: <p>the equals value to set </p>
    name: equals
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the ActivityLogAlertLeafCondition object itself. </p>
    type: <xref href="com.microsoft.azure.management.monitor.ActivityLogAlertLeafCondition?alt=com.microsoft.azure.management.monitor.ActivityLogAlertLeafCondition&text=ActivityLogAlertLeafCondition" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the field value will be compared to this value (case-insensitive) to determine if the condition is met.</p>

    <p></p>
  syntax: public ActivityLogAlertLeafCondition withEquals(String equals)
  uid: com.microsoft.azure.management.monitor.ActivityLogAlertLeafCondition.withEquals(String)
- fullName: com.microsoft.azure.management.monitor.ActivityLogAlertLeafCondition.withField(String field)
  name: withField(String field)
  nameWithType: ActivityLogAlertLeafCondition.withField(String field)
  parameters:
  - description: <p>the field value to set </p>
    name: field
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the ActivityLogAlertLeafCondition object itself. </p>
    type: <xref href="com.microsoft.azure.management.monitor.ActivityLogAlertLeafCondition?alt=com.microsoft.azure.management.monitor.ActivityLogAlertLeafCondition&text=ActivityLogAlertLeafCondition" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the name of the field that this condition will examine. The possible values for this field are (case-insensitive): 'resourceId', 'category', 'caller', 'level', 'operationName', 'resourceGroup', 'resourceProvider', 'status', 'subStatus', 'resourceType', or anything beginning with 'properties.'.</p>

    <p></p>
  syntax: public ActivityLogAlertLeafCondition withField(String field)
  uid: com.microsoft.azure.management.monitor.ActivityLogAlertLeafCondition.withField(String)
nameWithType: ActivityLogAlertLeafCondition
syntax: public class ActivityLogAlertLeafCondition
type: class
uid: com.microsoft.azure.management.monitor.ActivityLogAlertLeafCondition
fullName: com.microsoft.azure.management.monitor.ActivityLogAlertLeafCondition
name: ActivityLogAlertLeafCondition
package: com.microsoft.azure.management.monitor
summary: <p>An Activity Log alert condition that is met by comparing an activity log field and value. </p>
metadata: {}
