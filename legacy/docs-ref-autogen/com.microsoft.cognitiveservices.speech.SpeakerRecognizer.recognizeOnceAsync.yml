### YamlMime:JavaMember
nameWithType: SpeakerRecognizer.recognizeOnceAsync
type: method
members:
- fullName: com.microsoft.cognitiveservices.speech.SpeakerRecognizer.recognizeOnceAsync(final SpeakerIdentificationModel model)
  name: recognizeOnceAsync(final SpeakerIdentificationModel model)
  nameWithType: SpeakerRecognizer.recognizeOnceAsync(final SpeakerIdentificationModel model)
  parameters:
  - description: <p>The speaker identification model that specifies the speaker to be identified. </p>
    name: model
    type: final <xref href="com.microsoft.cognitiveservices.speech.SpeakerIdentificationModel?alt=com.microsoft.cognitiveservices.speech.SpeakerIdentificationModel&text=SpeakerIdentificationModel" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>A task representing the speaker recognition operation. The task returns an instance of SpeakerRecognitionResult. </p>
    type: Future&lt;<xref href="com.microsoft.cognitiveservices.speech.SpeakerRecognitionResult?alt=com.microsoft.cognitiveservices.speech.SpeakerRecognitionResult&text=SpeakerRecognitionResult" data-throw-if-not-resolved="False"/>&gt;
  summary: <p>Starts a speaker recognition session to identify the speaker in the identification model. </p>
  syntax: public Future<SpeakerRecognitionResult> recognizeOnceAsync(final SpeakerIdentificationModel model)
  uid: com.microsoft.cognitiveservices.speech.SpeakerRecognizer.recognizeOnceAsync(final SpeakerIdentificationModel)
- fullName: com.microsoft.cognitiveservices.speech.SpeakerRecognizer.recognizeOnceAsync(final SpeakerVerificationModel model)
  name: recognizeOnceAsync(final SpeakerVerificationModel model)
  nameWithType: SpeakerRecognizer.recognizeOnceAsync(final SpeakerVerificationModel model)
  parameters:
  - description: <p>The speaker verification model that specifies the speaker to be verified. </p>
    name: model
    type: final <xref href="com.microsoft.cognitiveservices.speech.SpeakerVerificationModel?alt=com.microsoft.cognitiveservices.speech.SpeakerVerificationModel&text=SpeakerVerificationModel" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>A task representing the speaker recognition operation. The task returns an instance of SpeakerRecognitionResult. </p>
    type: Future&lt;<xref href="com.microsoft.cognitiveservices.speech.SpeakerRecognitionResult?alt=com.microsoft.cognitiveservices.speech.SpeakerRecognitionResult&text=SpeakerRecognitionResult" data-throw-if-not-resolved="False"/>&gt;
  summary: <p>Starts a speaker recognition session to verify the speaker in the verification model. </p>
  syntax: public Future<SpeakerRecognitionResult> recognizeOnceAsync(final SpeakerVerificationModel model)
  uid: com.microsoft.cognitiveservices.speech.SpeakerRecognizer.recognizeOnceAsync(final SpeakerVerificationModel)
uid: com.microsoft.cognitiveservices.speech.SpeakerRecognizer.recognizeOnceAsync*
fullName: com.microsoft.cognitiveservices.speech.SpeakerRecognizer.recognizeOnceAsync
name: recognizeOnceAsync(final SpeakerIdentificationModel model)
package: com.microsoft.cognitiveservices.speech
metadata: {}
