### YamlMime:JavaType
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
methods:
- fullName: com.microsoft.azure.batch.protocol.models.JobConstraints.maxTaskRetryCount()
  name: maxTaskRetryCount()
  nameWithType: JobConstraints.maxTaskRetryCount()
  returns:
    description: <p>the maxTaskRetryCount value </p>
    type: <xref href="Integer?alt=Integer&text=Integer" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get note that this value specifically controls the number of retries. The Batch service will try each task once, and may then retry up to this limit. For example, if the maximum retry count is 3, Batch tries a task up to 4 times (one initial try and 3 retries). If the maximum retry count is 0, the Batch service does not retry tasks. If the maximum retry count is -1, the Batch service retries tasks without limit. The default value is 0 (no retries).</p>

    <p></p>
  syntax: public Integer maxTaskRetryCount()
  uid: com.microsoft.azure.batch.protocol.models.JobConstraints.maxTaskRetryCount()
- fullName: com.microsoft.azure.batch.protocol.models.JobConstraints.maxWallClockTime()
  name: maxWallClockTime()
  nameWithType: JobConstraints.maxWallClockTime()
  returns:
    description: <p>the maxWallClockTime value </p>
    type: <xref href="Period?alt=Period&text=Period" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get if the job does not complete within the time limit, the Batch service terminates it and any tasks that are still running. In this case, the termination reason will be MaxWallClockTimeExpiry. If this property is not specified, there is no time limit on how long the job may run.</p>

    <p></p>
  syntax: public Period maxWallClockTime()
  uid: com.microsoft.azure.batch.protocol.models.JobConstraints.maxWallClockTime()
- fullName: com.microsoft.azure.batch.protocol.models.JobConstraints.withMaxTaskRetryCount(Integer maxTaskRetryCount)
  name: withMaxTaskRetryCount(Integer maxTaskRetryCount)
  nameWithType: JobConstraints.withMaxTaskRetryCount(Integer maxTaskRetryCount)
  parameters:
  - description: <p>the maxTaskRetryCount value to set </p>
    name: maxTaskRetryCount
    type: <xref href="Integer?alt=Integer&text=Integer" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the JobConstraints object itself. </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.JobConstraints?alt=com.microsoft.azure.batch.protocol.models.JobConstraints&text=JobConstraints" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set note that this value specifically controls the number of retries. The Batch service will try each task once, and may then retry up to this limit. For example, if the maximum retry count is 3, Batch tries a task up to 4 times (one initial try and 3 retries). If the maximum retry count is 0, the Batch service does not retry tasks. If the maximum retry count is -1, the Batch service retries tasks without limit. The default value is 0 (no retries).</p>

    <p></p>
  syntax: public JobConstraints withMaxTaskRetryCount(Integer maxTaskRetryCount)
  uid: com.microsoft.azure.batch.protocol.models.JobConstraints.withMaxTaskRetryCount(Integer)
- fullName: com.microsoft.azure.batch.protocol.models.JobConstraints.withMaxWallClockTime(Period maxWallClockTime)
  name: withMaxWallClockTime(Period maxWallClockTime)
  nameWithType: JobConstraints.withMaxWallClockTime(Period maxWallClockTime)
  parameters:
  - description: <p>the maxWallClockTime value to set </p>
    name: maxWallClockTime
    type: <xref href="Period?alt=Period&text=Period" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the JobConstraints object itself. </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.JobConstraints?alt=com.microsoft.azure.batch.protocol.models.JobConstraints&text=JobConstraints" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set if the job does not complete within the time limit, the Batch service terminates it and any tasks that are still running. In this case, the termination reason will be MaxWallClockTimeExpiry. If this property is not specified, there is no time limit on how long the job may run.</p>

    <p></p>
  syntax: public JobConstraints withMaxWallClockTime(Period maxWallClockTime)
  uid: com.microsoft.azure.batch.protocol.models.JobConstraints.withMaxWallClockTime(Period)
nameWithType: JobConstraints
syntax: public class JobConstraints
type: class
uid: com.microsoft.azure.batch.protocol.models.JobConstraints
fullName: com.microsoft.azure.batch.protocol.models.JobConstraints
name: JobConstraints
package: com.microsoft.azure.batch.protocol.models
summary: <p>The execution constraints for a job. </p>
metadata: {}
