### YamlMime:JavaType
inheritedMembers:
- com.microsoft.azure.management.resources.fluentcore.arm.models.HasId.id()
- com.microsoft.azure.management.resources.fluentcore.model.Indexable.key()
- com.microsoft.azure.management.resources.fluentcore.arm.models.HasManager.manager()
- com.microsoft.azure.management.resources.fluentcore.arm.models.HasName.name()
- com.microsoft.azure.management.resources.fluentcore.model.Refreshable.refresh()
- com.microsoft.azure.management.resources.fluentcore.model.Refreshable.refreshAsync()
- com.microsoft.azure.management.resources.fluentcore.arm.models.HasResourceGroup.resourceGroupName()
- com.microsoft.azure.management.resources.fluentcore.model.Updatable.update()
methods:
- fullName: com.microsoft.azure.management.servicebus.Queue.accessedAt()
  name: accessedAt()
  nameWithType: Queue.accessedAt()
  returns:
    description: <p>last time a message was sent, or the last time there was a receive request to this queue </p>
    type: <xref href="DateTime?alt=DateTime&text=DateTime" data-throw-if-not-resolved="False"/>
  syntax: public DateTime accessedAt()
  uid: com.microsoft.azure.management.servicebus.Queue.accessedAt()
- fullName: com.microsoft.azure.management.servicebus.Queue.activeMessageCount()
  name: activeMessageCount()
  nameWithType: Queue.activeMessageCount()
  returns:
    description: <p>number of active messages in the queue </p>
    type: <xref href="long?alt=long&text=long" data-throw-if-not-resolved="False"/>
  syntax: public long activeMessageCount()
  uid: com.microsoft.azure.management.servicebus.Queue.activeMessageCount()
- fullName: com.microsoft.azure.management.servicebus.Queue.authorizationRules()
  name: authorizationRules()
  nameWithType: Queue.authorizationRules()
  returns:
    description: <p>entry point to manage authorization rules for the Service Bus queue </p>
    type: <xref href="com.microsoft.azure.management.servicebus.QueueAuthorizationRules?alt=com.microsoft.azure.management.servicebus.QueueAuthorizationRules&text=QueueAuthorizationRules" data-throw-if-not-resolved="False"/>
  syntax: public QueueAuthorizationRules authorizationRules()
  uid: com.microsoft.azure.management.servicebus.Queue.authorizationRules()
- fullName: com.microsoft.azure.management.servicebus.Queue.createdAt()
  name: createdAt()
  nameWithType: Queue.createdAt()
  returns:
    description: <p>the exact time the queue was created </p>
    type: <xref href="DateTime?alt=DateTime&text=DateTime" data-throw-if-not-resolved="False"/>
  syntax: public DateTime createdAt()
  uid: com.microsoft.azure.management.servicebus.Queue.createdAt()
- fullName: com.microsoft.azure.management.servicebus.Queue.currentSizeInBytes()
  name: currentSizeInBytes()
  nameWithType: Queue.currentSizeInBytes()
  returns:
    description: <p>current size of the queue, in bytes </p>
    type: <xref href="long?alt=long&text=long" data-throw-if-not-resolved="False"/>
  syntax: public long currentSizeInBytes()
  uid: com.microsoft.azure.management.servicebus.Queue.currentSizeInBytes()
- fullName: com.microsoft.azure.management.servicebus.Queue.deadLetterMessageCount()
  name: deadLetterMessageCount()
  nameWithType: Queue.deadLetterMessageCount()
  returns:
    description: <p>number of messages in the dead-letter queue </p>
    type: <xref href="long?alt=long&text=long" data-throw-if-not-resolved="False"/>
  syntax: public long deadLetterMessageCount()
  uid: com.microsoft.azure.management.servicebus.Queue.deadLetterMessageCount()
- fullName: com.microsoft.azure.management.servicebus.Queue.defaultMessageTtlDuration()
  name: defaultMessageTtlDuration()
  nameWithType: Queue.defaultMessageTtlDuration()
  returns:
    description: <p>the duration after which the message expires, starting from when the message is sent to queue </p>
    type: <xref href="Period?alt=Period&text=Period" data-throw-if-not-resolved="False"/>
  syntax: public Period defaultMessageTtlDuration()
  uid: com.microsoft.azure.management.servicebus.Queue.defaultMessageTtlDuration()
- fullName: com.microsoft.azure.management.servicebus.Queue.deleteOnIdleDurationInMinutes()
  name: deleteOnIdleDurationInMinutes()
  nameWithType: Queue.deleteOnIdleDurationInMinutes()
  returns:
    description: <p>the idle duration after which the queue is automatically deleted </p>
    type: <xref href="long?alt=long&text=long" data-throw-if-not-resolved="False"/>
  syntax: public long deleteOnIdleDurationInMinutes()
  uid: com.microsoft.azure.management.servicebus.Queue.deleteOnIdleDurationInMinutes()
- fullName: com.microsoft.azure.management.servicebus.Queue.duplicateMessageDetectionHistoryDuration()
  name: duplicateMessageDetectionHistoryDuration()
  nameWithType: Queue.duplicateMessageDetectionHistoryDuration()
  returns:
    description: <p>the duration of the duplicate detection history </p>
    type: <xref href="Period?alt=Period&text=Period" data-throw-if-not-resolved="False"/>
  syntax: public Period duplicateMessageDetectionHistoryDuration()
  uid: com.microsoft.azure.management.servicebus.Queue.duplicateMessageDetectionHistoryDuration()
- fullName: com.microsoft.azure.management.servicebus.Queue.isBatchedOperationsEnabled()
  name: isBatchedOperationsEnabled()
  nameWithType: Queue.isBatchedOperationsEnabled()
  returns:
    description: <p>indicates whether server-side batched operations are enabled </p>
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False"/>
  syntax: public boolean isBatchedOperationsEnabled()
  uid: com.microsoft.azure.management.servicebus.Queue.isBatchedOperationsEnabled()
- fullName: com.microsoft.azure.management.servicebus.Queue.isDeadLetteringEnabledForExpiredMessages()
  name: isDeadLetteringEnabledForExpiredMessages()
  nameWithType: Queue.isDeadLetteringEnabledForExpiredMessages()
  returns:
    description: <p>indicates whether this queue has dead letter support when a message expires </p>
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False"/>
  syntax: public boolean isDeadLetteringEnabledForExpiredMessages()
  uid: com.microsoft.azure.management.servicebus.Queue.isDeadLetteringEnabledForExpiredMessages()
- fullName: com.microsoft.azure.management.servicebus.Queue.isDuplicateDetectionEnabled()
  name: isDuplicateDetectionEnabled()
  nameWithType: Queue.isDuplicateDetectionEnabled()
  returns:
    description: <p>indicates if this queue requires duplicate detection </p>
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False"/>
  syntax: public boolean isDuplicateDetectionEnabled()
  uid: com.microsoft.azure.management.servicebus.Queue.isDuplicateDetectionEnabled()
- fullName: com.microsoft.azure.management.servicebus.Queue.isExpressEnabled()
  name: isExpressEnabled()
  nameWithType: Queue.isExpressEnabled()
  returns:
    description: <p>indicates whether express entities are enabled </p>
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False"/>
  syntax: public boolean isExpressEnabled()
  uid: com.microsoft.azure.management.servicebus.Queue.isExpressEnabled()
- fullName: com.microsoft.azure.management.servicebus.Queue.isPartitioningEnabled()
  name: isPartitioningEnabled()
  nameWithType: Queue.isPartitioningEnabled()
  returns:
    description: <p>indicates whether the queue is to be partitioned across multiple message brokers </p>
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False"/>
  syntax: public boolean isPartitioningEnabled()
  uid: com.microsoft.azure.management.servicebus.Queue.isPartitioningEnabled()
- fullName: com.microsoft.azure.management.servicebus.Queue.isSessionEnabled()
  name: isSessionEnabled()
  nameWithType: Queue.isSessionEnabled()
  returns:
    description: <p>indicates whether the queue supports sessions </p>
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False"/>
  syntax: public boolean isSessionEnabled()
  uid: com.microsoft.azure.management.servicebus.Queue.isSessionEnabled()
- fullName: com.microsoft.azure.management.servicebus.Queue.lockDurationInSeconds()
  name: lockDurationInSeconds()
  nameWithType: Queue.lockDurationInSeconds()
  returns:
    description: <p>the duration of peek-lock which is the amount of time that the message is locked for other receivers </p>
    type: <xref href="long?alt=long&text=long" data-throw-if-not-resolved="False"/>
  syntax: public long lockDurationInSeconds()
  uid: com.microsoft.azure.management.servicebus.Queue.lockDurationInSeconds()
- fullName: com.microsoft.azure.management.servicebus.Queue.maxDeliveryCountBeforeDeadLetteringMessage()
  name: maxDeliveryCountBeforeDeadLetteringMessage()
  nameWithType: Queue.maxDeliveryCountBeforeDeadLetteringMessage()
  returns:
    description: <p>the maximum number of a message delivery before marking it as dead-lettered </p>
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  syntax: public int maxDeliveryCountBeforeDeadLetteringMessage()
  uid: com.microsoft.azure.management.servicebus.Queue.maxDeliveryCountBeforeDeadLetteringMessage()
- fullName: com.microsoft.azure.management.servicebus.Queue.maxSizeInMB()
  name: maxSizeInMB()
  nameWithType: Queue.maxSizeInMB()
  returns:
    description: <p>the maximum size of memory allocated for the queue in megabytes </p>
    type: <xref href="long?alt=long&text=long" data-throw-if-not-resolved="False"/>
  syntax: public long maxSizeInMB()
  uid: com.microsoft.azure.management.servicebus.Queue.maxSizeInMB()
- fullName: com.microsoft.azure.management.servicebus.Queue.messageCount()
  name: messageCount()
  nameWithType: Queue.messageCount()
  returns:
    description: <p>the number of messages in the queue </p>
    type: <xref href="long?alt=long&text=long" data-throw-if-not-resolved="False"/>
  syntax: public long messageCount()
  uid: com.microsoft.azure.management.servicebus.Queue.messageCount()
- fullName: com.microsoft.azure.management.servicebus.Queue.scheduledMessageCount()
  name: scheduledMessageCount()
  nameWithType: Queue.scheduledMessageCount()
  returns:
    description: <p>number of messages sent to the queue that are yet to be released for consumption </p>
    type: <xref href="long?alt=long&text=long" data-throw-if-not-resolved="False"/>
  syntax: public long scheduledMessageCount()
  uid: com.microsoft.azure.management.servicebus.Queue.scheduledMessageCount()
- fullName: com.microsoft.azure.management.servicebus.Queue.status()
  name: status()
  nameWithType: Queue.status()
  returns:
    description: <p>the current status of the queue </p>
    type: <xref href="com.microsoft.azure.management.servicebus.EntityStatus?alt=com.microsoft.azure.management.servicebus.EntityStatus&text=EntityStatus" data-throw-if-not-resolved="False"/>
  syntax: public EntityStatus status()
  uid: com.microsoft.azure.management.servicebus.Queue.status()
- fullName: com.microsoft.azure.management.servicebus.Queue.transferDeadLetterMessageCount()
  name: transferDeadLetterMessageCount()
  nameWithType: Queue.transferDeadLetterMessageCount()
  returns:
    description: <p>number of messages transferred into dead letters </p>
    type: <xref href="long?alt=long&text=long" data-throw-if-not-resolved="False"/>
  syntax: public long transferDeadLetterMessageCount()
  uid: com.microsoft.azure.management.servicebus.Queue.transferDeadLetterMessageCount()
- fullName: com.microsoft.azure.management.servicebus.Queue.transferMessageCount()
  name: transferMessageCount()
  nameWithType: Queue.transferMessageCount()
  returns:
    description: <p>number of messages transferred to another queue, topic, or subscription </p>
    type: <xref href="long?alt=long&text=long" data-throw-if-not-resolved="False"/>
  syntax: public long transferMessageCount()
  uid: com.microsoft.azure.management.servicebus.Queue.transferMessageCount()
- fullName: com.microsoft.azure.management.servicebus.Queue.updatedAt()
  name: updatedAt()
  nameWithType: Queue.updatedAt()
  returns:
    description: <p>the exact time the queue was updated </p>
    type: <xref href="DateTime?alt=DateTime&text=DateTime" data-throw-if-not-resolved="False"/>
  syntax: public DateTime updatedAt()
  uid: com.microsoft.azure.management.servicebus.Queue.updatedAt()
nameWithType: Queue
syntax: public interface Queue extends IndependentChildResource<ServiceBusManager, QueueInner>,Refreshable<Queue>,Updatable<Queue.Update>
type: interface
uid: com.microsoft.azure.management.servicebus.Queue
fullName: com.microsoft.azure.management.servicebus.Queue
name: Queue
package: com.microsoft.azure.management.servicebus
summary: <p>Type representing Service Bus queue. </p>
metadata: {}
