### YamlMime:JavaMember
nameWithType: ProvisioningServiceClient.ProvisioningServiceClient
type: constructor
members:
- fullName: com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.ProvisioningServiceClient(String connectionString)
  name: ProvisioningServiceClient(String connectionString)
  nameWithType: ProvisioningServiceClient.ProvisioningServiceClient(String connectionString)
  parameters:
  - description: >-
      <p>the<code>String 

          </code> that cares the connection string of the Device Provisioning Service. </p>
    name: connectionString
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: >-
      <p>if the connectionString is<code>null 

          </code> or empty. </p>
  summary: >-
    <p>Create a new instance of the<code>DeviceProvisioningServiceClient 

        </code> that exposes the API to the Device Provisioning Service.</p>

    <p>The Device Provisioning Service Client is created based on a <b>Provisioning Connection String</b>. </p>

    <p>Once you create a Device Provisioning Service on Azure, you can get the connection string on the Azure portal.</p>

    <p></p>
  syntax: public ProvisioningServiceClient(String connectionString)
  uid: com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.ProvisioningServiceClient(String)
uid: com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.ProvisioningServiceClient*
fullName: com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.ProvisioningServiceClient
name: ProvisioningServiceClient
package: com.microsoft.azure.sdk.iot.provisioning.service
metadata: {}
