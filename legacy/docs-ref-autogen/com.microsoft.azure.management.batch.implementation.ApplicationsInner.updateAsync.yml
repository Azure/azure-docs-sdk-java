### YamlMime:JavaMember
nameWithType: ApplicationsInner.updateAsync
type: method
members:
- fullName: com.microsoft.azure.management.batch.implementation.ApplicationsInner.updateAsync(String resourceGroupName, String accountName, String applicationName, ApplicationInner parameters)
  name: updateAsync(String resourceGroupName, String accountName, String applicationName, ApplicationInner parameters)
  nameWithType: ApplicationsInner.updateAsync(String resourceGroupName, String accountName, String applicationName, ApplicationInner parameters)
  parameters:
  - description: <p>The name of the resource group that contains the Batch account. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the Batch account. </p>
    name: accountName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the application. This must be unique within the account. </p>
    name: applicationName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The parameters for the request. </p>
    name: parameters
    type: <xref href="com.microsoft.azure.management.batch.implementation.ApplicationInner?alt=com.microsoft.azure.management.batch.implementation.ApplicationInner&text=ApplicationInner" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the ApplicationInner object </p>
    type: Observable&lt;<xref href="com.microsoft.azure.management.batch.implementation.ApplicationInner?alt=com.microsoft.azure.management.batch.implementation.ApplicationInner&text=ApplicationInner" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Updates settings for the specified application.</p>

    <p></p>
  syntax: public Observable<ApplicationInner> updateAsync(String resourceGroupName, String accountName, String applicationName, ApplicationInner parameters)
  uid: com.microsoft.azure.management.batch.implementation.ApplicationsInner.updateAsync(String,String,String,ApplicationInner)
- fullName: com.microsoft.azure.management.batch.implementation.ApplicationsInner.updateAsync(String resourceGroupName, String accountName, String applicationName, ApplicationInner parameters, final ServiceCallback<ApplicationInner> serviceCallback)
  name: updateAsync(String resourceGroupName, String accountName, String applicationName, ApplicationInner parameters, final ServiceCallback<ApplicationInner> serviceCallback)
  nameWithType: ApplicationsInner.updateAsync(String resourceGroupName, String accountName, String applicationName, ApplicationInner parameters, final ServiceCallback<ApplicationInner> serviceCallback)
  parameters:
  - description: <p>The name of the resource group that contains the Batch account. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the Batch account. </p>
    name: accountName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the application. This must be unique within the account. </p>
    name: applicationName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The parameters for the request. </p>
    name: parameters
    type: <xref href="com.microsoft.azure.management.batch.implementation.ApplicationInner?alt=com.microsoft.azure.management.batch.implementation.ApplicationInner&text=ApplicationInner" data-throw-if-not-resolved="False"/>
  - description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    name: serviceCallback
    type: final ServiceCallback&lt;<xref href="com.microsoft.azure.management.batch.implementation.ApplicationInner?alt=com.microsoft.azure.management.batch.implementation.ApplicationInner&text=ApplicationInner" data-throw-if-not-resolved="False"/>&gt;
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
    type: ServiceFuture&lt;<xref href="com.microsoft.azure.management.batch.implementation.ApplicationInner?alt=com.microsoft.azure.management.batch.implementation.ApplicationInner&text=ApplicationInner" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Updates settings for the specified application.</p>

    <p></p>
  syntax: public ServiceFuture<ApplicationInner> updateAsync(String resourceGroupName, String accountName, String applicationName, ApplicationInner parameters, final ServiceCallback<ApplicationInner> serviceCallback)
  uid: com.microsoft.azure.management.batch.implementation.ApplicationsInner.updateAsync(String,String,String,ApplicationInner,final ServiceCallback<ApplicationInner>)
uid: com.microsoft.azure.management.batch.implementation.ApplicationsInner.updateAsync*
fullName: com.microsoft.azure.management.batch.implementation.ApplicationsInner.updateAsync(String resourceGroupName, String accountName, String applicationName, ApplicationInner parameters)
name: updateAsync(String resourceGroupName, String accountName, String applicationName, ApplicationInner parameters)
package: com.microsoft.azure.management.batch.implementation
metadata: {}
