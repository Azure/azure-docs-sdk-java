### YamlMime:JavaType
constructors:
- fullName: com.microsoft.azure.management.containerservice.implementation.AgentPoolsInner.AgentPoolsInner(Retrofit retrofit, ContainerServiceManagementClientImpl client)
  name: AgentPoolsInner(Retrofit retrofit, ContainerServiceManagementClientImpl client)
  nameWithType: AgentPoolsInner.AgentPoolsInner(Retrofit retrofit, ContainerServiceManagementClientImpl client)
  parameters:
  - description: <p>the Retrofit instance built from a Retrofit Builder. </p>
    name: retrofit
    type: <xref href="Retrofit?alt=Retrofit&text=Retrofit" data-throw-if-not-resolved="False"/>
  - description: <p>the instance of the service client containing this operation class. </p>
    name: client
    type: <xref href="com.microsoft.azure.management.containerservice.implementation.ContainerServiceManagementClientImpl?alt=com.microsoft.azure.management.containerservice.implementation.ContainerServiceManagementClientImpl&text=ContainerServiceManagementClientImpl" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Initializes an instance of AgentPoolsInner.</p>

    <p></p>
  syntax: public AgentPoolsInner(Retrofit retrofit, ContainerServiceManagementClientImpl client)
  uid: com.microsoft.azure.management.containerservice.implementation.AgentPoolsInner.AgentPoolsInner(Retrofit,ContainerServiceManagementClientImpl)
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
methods:
- fullName: com.microsoft.azure.management.containerservice.implementation.AgentPoolsInner.beginCreateOrUpdate(String resourceGroupName, String resourceName, String agentPoolName, AgentPoolInner parameters)
  name: beginCreateOrUpdate(String resourceGroupName, String resourceName, String agentPoolName, AgentPoolInner parameters)
  nameWithType: AgentPoolsInner.beginCreateOrUpdate(String resourceGroupName, String resourceName, String agentPoolName, AgentPoolInner parameters)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the managed cluster resource. </p>
    name: resourceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the agent pool. </p>
    name: agentPoolName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>Parameters supplied to the Create or Update an agent pool operation. </p>
    name: parameters
    type: <xref href="com.microsoft.azure.management.containerservice.implementation.AgentPoolInner?alt=com.microsoft.azure.management.containerservice.implementation.AgentPoolInner&text=AgentPoolInner" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="CloudException?alt=CloudException&text=CloudException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  returns:
    description: <p>the AgentPoolInner object if successful. </p>
    type: <xref href="com.microsoft.azure.management.containerservice.implementation.AgentPoolInner?alt=com.microsoft.azure.management.containerservice.implementation.AgentPoolInner&text=AgentPoolInner" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Creates or updates an agent pool. Creates or updates an agent pool in the specified managed cluster.</p>

    <p></p>
  syntax: public AgentPoolInner beginCreateOrUpdate(String resourceGroupName, String resourceName, String agentPoolName, AgentPoolInner parameters)
  uid: com.microsoft.azure.management.containerservice.implementation.AgentPoolsInner.beginCreateOrUpdate(String,String,String,AgentPoolInner)
- fullName: com.microsoft.azure.management.containerservice.implementation.AgentPoolsInner.beginCreateOrUpdateAsync(String resourceGroupName, String resourceName, String agentPoolName, AgentPoolInner parameters)
  name: beginCreateOrUpdateAsync(String resourceGroupName, String resourceName, String agentPoolName, AgentPoolInner parameters)
  nameWithType: AgentPoolsInner.beginCreateOrUpdateAsync(String resourceGroupName, String resourceName, String agentPoolName, AgentPoolInner parameters)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the managed cluster resource. </p>
    name: resourceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the agent pool. </p>
    name: agentPoolName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>Parameters supplied to the Create or Update an agent pool operation. </p>
    name: parameters
    type: <xref href="com.microsoft.azure.management.containerservice.implementation.AgentPoolInner?alt=com.microsoft.azure.management.containerservice.implementation.AgentPoolInner&text=AgentPoolInner" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the AgentPoolInner object </p>
    type: Observable&lt;<xref href="com.microsoft.azure.management.containerservice.implementation.AgentPoolInner?alt=com.microsoft.azure.management.containerservice.implementation.AgentPoolInner&text=AgentPoolInner" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Creates or updates an agent pool. Creates or updates an agent pool in the specified managed cluster.</p>

    <p></p>
  syntax: public Observable<AgentPoolInner> beginCreateOrUpdateAsync(String resourceGroupName, String resourceName, String agentPoolName, AgentPoolInner parameters)
  uid: com.microsoft.azure.management.containerservice.implementation.AgentPoolsInner.beginCreateOrUpdateAsync(String,String,String,AgentPoolInner)
- fullName: com.microsoft.azure.management.containerservice.implementation.AgentPoolsInner.beginCreateOrUpdateAsync(String resourceGroupName, String resourceName, String agentPoolName, AgentPoolInner parameters, final ServiceCallback<AgentPoolInner> serviceCallback)
  name: beginCreateOrUpdateAsync(String resourceGroupName, String resourceName, String agentPoolName, AgentPoolInner parameters, final ServiceCallback<AgentPoolInner> serviceCallback)
  nameWithType: AgentPoolsInner.beginCreateOrUpdateAsync(String resourceGroupName, String resourceName, String agentPoolName, AgentPoolInner parameters, final ServiceCallback<AgentPoolInner> serviceCallback)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the managed cluster resource. </p>
    name: resourceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the agent pool. </p>
    name: agentPoolName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>Parameters supplied to the Create or Update an agent pool operation. </p>
    name: parameters
    type: <xref href="com.microsoft.azure.management.containerservice.implementation.AgentPoolInner?alt=com.microsoft.azure.management.containerservice.implementation.AgentPoolInner&text=AgentPoolInner" data-throw-if-not-resolved="False"/>
  - description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    name: serviceCallback
    type: final ServiceCallback&lt;<xref href="com.microsoft.azure.management.containerservice.implementation.AgentPoolInner?alt=com.microsoft.azure.management.containerservice.implementation.AgentPoolInner&text=AgentPoolInner" data-throw-if-not-resolved="False"/>&gt;
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
    type: ServiceFuture&lt;<xref href="com.microsoft.azure.management.containerservice.implementation.AgentPoolInner?alt=com.microsoft.azure.management.containerservice.implementation.AgentPoolInner&text=AgentPoolInner" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Creates or updates an agent pool. Creates or updates an agent pool in the specified managed cluster.</p>

    <p></p>
  syntax: public ServiceFuture<AgentPoolInner> beginCreateOrUpdateAsync(String resourceGroupName, String resourceName, String agentPoolName, AgentPoolInner parameters, final ServiceCallback<AgentPoolInner> serviceCallback)
  uid: com.microsoft.azure.management.containerservice.implementation.AgentPoolsInner.beginCreateOrUpdateAsync(String,String,String,AgentPoolInner,final ServiceCallback<AgentPoolInner>)
- fullName: com.microsoft.azure.management.containerservice.implementation.AgentPoolsInner.beginCreateOrUpdateWithServiceResponseAsync(String resourceGroupName, String resourceName, String agentPoolName, AgentPoolInner parameters)
  name: beginCreateOrUpdateWithServiceResponseAsync(String resourceGroupName, String resourceName, String agentPoolName, AgentPoolInner parameters)
  nameWithType: AgentPoolsInner.beginCreateOrUpdateWithServiceResponseAsync(String resourceGroupName, String resourceName, String agentPoolName, AgentPoolInner parameters)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the managed cluster resource. </p>
    name: resourceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the agent pool. </p>
    name: agentPoolName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>Parameters supplied to the Create or Update an agent pool operation. </p>
    name: parameters
    type: <xref href="com.microsoft.azure.management.containerservice.implementation.AgentPoolInner?alt=com.microsoft.azure.management.containerservice.implementation.AgentPoolInner&text=AgentPoolInner" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the AgentPoolInner object </p>
    type: Observable&lt;ServiceResponse&lt;<xref href="com.microsoft.azure.management.containerservice.implementation.AgentPoolInner?alt=com.microsoft.azure.management.containerservice.implementation.AgentPoolInner&text=AgentPoolInner" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Creates or updates an agent pool. Creates or updates an agent pool in the specified managed cluster.</p>

    <p></p>
  syntax: public Observable<ServiceResponse<AgentPoolInner>> beginCreateOrUpdateWithServiceResponseAsync(String resourceGroupName, String resourceName, String agentPoolName, AgentPoolInner parameters)
  uid: com.microsoft.azure.management.containerservice.implementation.AgentPoolsInner.beginCreateOrUpdateWithServiceResponseAsync(String,String,String,AgentPoolInner)
- fullName: com.microsoft.azure.management.containerservice.implementation.AgentPoolsInner.beginDelete(String resourceGroupName, String resourceName, String agentPoolName)
  name: beginDelete(String resourceGroupName, String resourceName, String agentPoolName)
  nameWithType: AgentPoolsInner.beginDelete(String resourceGroupName, String resourceName, String agentPoolName)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the managed cluster resource. </p>
    name: resourceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the agent pool. </p>
    name: agentPoolName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="CloudException?alt=CloudException&text=CloudException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  summary: >-
    <p>Deletes an agent pool. Deletes the agent pool in the specified managed cluster.</p>

    <p></p>
  syntax: public void beginDelete(String resourceGroupName, String resourceName, String agentPoolName)
  uid: com.microsoft.azure.management.containerservice.implementation.AgentPoolsInner.beginDelete(String,String,String)
- fullName: com.microsoft.azure.management.containerservice.implementation.AgentPoolsInner.beginDeleteAsync(String resourceGroupName, String resourceName, String agentPoolName)
  name: beginDeleteAsync(String resourceGroupName, String resourceName, String agentPoolName)
  nameWithType: AgentPoolsInner.beginDeleteAsync(String resourceGroupName, String resourceName, String agentPoolName)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the managed cluster resource. </p>
    name: resourceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the agent pool. </p>
    name: agentPoolName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceResponse"></xref> object if successful. </p>
    type: <xref href="Observable%3CVoid%3E?alt=Observable%3CVoid%3E&text=Observable%3CVoid%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Deletes an agent pool. Deletes the agent pool in the specified managed cluster.</p>

    <p></p>
  syntax: public Observable<Void> beginDeleteAsync(String resourceGroupName, String resourceName, String agentPoolName)
  uid: com.microsoft.azure.management.containerservice.implementation.AgentPoolsInner.beginDeleteAsync(String,String,String)
- fullName: com.microsoft.azure.management.containerservice.implementation.AgentPoolsInner.beginDeleteAsync(String resourceGroupName, String resourceName, String agentPoolName, final ServiceCallback<Void> serviceCallback)
  name: beginDeleteAsync(String resourceGroupName, String resourceName, String agentPoolName, final ServiceCallback<Void> serviceCallback)
  nameWithType: AgentPoolsInner.beginDeleteAsync(String resourceGroupName, String resourceName, String agentPoolName, final ServiceCallback<Void> serviceCallback)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the managed cluster resource. </p>
    name: resourceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the agent pool. </p>
    name: agentPoolName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    name: serviceCallback
    type: <xref href="final+ServiceCallback%3CVoid%3E?alt=final+ServiceCallback%3CVoid%3E&text=final+ServiceCallback%3CVoid%3E" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
    type: <xref href="ServiceFuture%3CVoid%3E?alt=ServiceFuture%3CVoid%3E&text=ServiceFuture%3CVoid%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Deletes an agent pool. Deletes the agent pool in the specified managed cluster.</p>

    <p></p>
  syntax: public ServiceFuture<Void> beginDeleteAsync(String resourceGroupName, String resourceName, String agentPoolName, final ServiceCallback<Void> serviceCallback)
  uid: com.microsoft.azure.management.containerservice.implementation.AgentPoolsInner.beginDeleteAsync(String,String,String,final ServiceCallback<Void>)
- fullName: com.microsoft.azure.management.containerservice.implementation.AgentPoolsInner.beginDeleteWithServiceResponseAsync(String resourceGroupName, String resourceName, String agentPoolName)
  name: beginDeleteWithServiceResponseAsync(String resourceGroupName, String resourceName, String agentPoolName)
  nameWithType: AgentPoolsInner.beginDeleteWithServiceResponseAsync(String resourceGroupName, String resourceName, String agentPoolName)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the managed cluster resource. </p>
    name: resourceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the agent pool. </p>
    name: agentPoolName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceResponse"></xref> object if successful. </p>
    type: <xref href="Observable%3CServiceResponse%3CVoid%3E%3E?alt=Observable%3CServiceResponse%3CVoid%3E%3E&text=Observable%3CServiceResponse%3CVoid%3E%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Deletes an agent pool. Deletes the agent pool in the specified managed cluster.</p>

    <p></p>
  syntax: public Observable<ServiceResponse<Void>> beginDeleteWithServiceResponseAsync(String resourceGroupName, String resourceName, String agentPoolName)
  uid: com.microsoft.azure.management.containerservice.implementation.AgentPoolsInner.beginDeleteWithServiceResponseAsync(String,String,String)
- fullName: com.microsoft.azure.management.containerservice.implementation.AgentPoolsInner.beginUpgradeNodeImageVersion(String resourceGroupName, String resourceName, String agentPoolName)
  name: beginUpgradeNodeImageVersion(String resourceGroupName, String resourceName, String agentPoolName)
  nameWithType: AgentPoolsInner.beginUpgradeNodeImageVersion(String resourceGroupName, String resourceName, String agentPoolName)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the managed cluster resource. </p>
    name: resourceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the agent pool. </p>
    name: agentPoolName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="CloudException?alt=CloudException&text=CloudException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  returns:
    description: <p>the AgentPoolInner object if successful. </p>
    type: <xref href="com.microsoft.azure.management.containerservice.implementation.AgentPoolInner?alt=com.microsoft.azure.management.containerservice.implementation.AgentPoolInner&text=AgentPoolInner" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Upgrade node image version of an agent pool to the latest. Upgrade node image version of an agent pool to the latest.</p>

    <p></p>
  syntax: public AgentPoolInner beginUpgradeNodeImageVersion(String resourceGroupName, String resourceName, String agentPoolName)
  uid: com.microsoft.azure.management.containerservice.implementation.AgentPoolsInner.beginUpgradeNodeImageVersion(String,String,String)
- fullName: com.microsoft.azure.management.containerservice.implementation.AgentPoolsInner.beginUpgradeNodeImageVersionAsync(String resourceGroupName, String resourceName, String agentPoolName)
  name: beginUpgradeNodeImageVersionAsync(String resourceGroupName, String resourceName, String agentPoolName)
  nameWithType: AgentPoolsInner.beginUpgradeNodeImageVersionAsync(String resourceGroupName, String resourceName, String agentPoolName)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the managed cluster resource. </p>
    name: resourceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the agent pool. </p>
    name: agentPoolName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the AgentPoolInner object </p>
    type: Observable&lt;<xref href="com.microsoft.azure.management.containerservice.implementation.AgentPoolInner?alt=com.microsoft.azure.management.containerservice.implementation.AgentPoolInner&text=AgentPoolInner" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Upgrade node image version of an agent pool to the latest. Upgrade node image version of an agent pool to the latest.</p>

    <p></p>
  syntax: public Observable<AgentPoolInner> beginUpgradeNodeImageVersionAsync(String resourceGroupName, String resourceName, String agentPoolName)
  uid: com.microsoft.azure.management.containerservice.implementation.AgentPoolsInner.beginUpgradeNodeImageVersionAsync(String,String,String)
- fullName: com.microsoft.azure.management.containerservice.implementation.AgentPoolsInner.beginUpgradeNodeImageVersionAsync(String resourceGroupName, String resourceName, String agentPoolName, final ServiceCallback<AgentPoolInner> serviceCallback)
  name: beginUpgradeNodeImageVersionAsync(String resourceGroupName, String resourceName, String agentPoolName, final ServiceCallback<AgentPoolInner> serviceCallback)
  nameWithType: AgentPoolsInner.beginUpgradeNodeImageVersionAsync(String resourceGroupName, String resourceName, String agentPoolName, final ServiceCallback<AgentPoolInner> serviceCallback)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the managed cluster resource. </p>
    name: resourceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the agent pool. </p>
    name: agentPoolName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    name: serviceCallback
    type: final ServiceCallback&lt;<xref href="com.microsoft.azure.management.containerservice.implementation.AgentPoolInner?alt=com.microsoft.azure.management.containerservice.implementation.AgentPoolInner&text=AgentPoolInner" data-throw-if-not-resolved="False"/>&gt;
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
    type: ServiceFuture&lt;<xref href="com.microsoft.azure.management.containerservice.implementation.AgentPoolInner?alt=com.microsoft.azure.management.containerservice.implementation.AgentPoolInner&text=AgentPoolInner" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Upgrade node image version of an agent pool to the latest. Upgrade node image version of an agent pool to the latest.</p>

    <p></p>
  syntax: public ServiceFuture<AgentPoolInner> beginUpgradeNodeImageVersionAsync(String resourceGroupName, String resourceName, String agentPoolName, final ServiceCallback<AgentPoolInner> serviceCallback)
  uid: com.microsoft.azure.management.containerservice.implementation.AgentPoolsInner.beginUpgradeNodeImageVersionAsync(String,String,String,final ServiceCallback<AgentPoolInner>)
- fullName: com.microsoft.azure.management.containerservice.implementation.AgentPoolsInner.beginUpgradeNodeImageVersionWithServiceResponseAsync(String resourceGroupName, String resourceName, String agentPoolName)
  name: beginUpgradeNodeImageVersionWithServiceResponseAsync(String resourceGroupName, String resourceName, String agentPoolName)
  nameWithType: AgentPoolsInner.beginUpgradeNodeImageVersionWithServiceResponseAsync(String resourceGroupName, String resourceName, String agentPoolName)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the managed cluster resource. </p>
    name: resourceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the agent pool. </p>
    name: agentPoolName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the AgentPoolInner object </p>
    type: Observable&lt;ServiceResponse&lt;<xref href="com.microsoft.azure.management.containerservice.implementation.AgentPoolInner?alt=com.microsoft.azure.management.containerservice.implementation.AgentPoolInner&text=AgentPoolInner" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Upgrade node image version of an agent pool to the latest. Upgrade node image version of an agent pool to the latest.</p>

    <p></p>
  syntax: public Observable<ServiceResponse<AgentPoolInner>> beginUpgradeNodeImageVersionWithServiceResponseAsync(String resourceGroupName, String resourceName, String agentPoolName)
  uid: com.microsoft.azure.management.containerservice.implementation.AgentPoolsInner.beginUpgradeNodeImageVersionWithServiceResponseAsync(String,String,String)
- fullName: com.microsoft.azure.management.containerservice.implementation.AgentPoolsInner.createOrUpdate(String resourceGroupName, String resourceName, String agentPoolName, AgentPoolInner parameters)
  name: createOrUpdate(String resourceGroupName, String resourceName, String agentPoolName, AgentPoolInner parameters)
  nameWithType: AgentPoolsInner.createOrUpdate(String resourceGroupName, String resourceName, String agentPoolName, AgentPoolInner parameters)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the managed cluster resource. </p>
    name: resourceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the agent pool. </p>
    name: agentPoolName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>Parameters supplied to the Create or Update an agent pool operation. </p>
    name: parameters
    type: <xref href="com.microsoft.azure.management.containerservice.implementation.AgentPoolInner?alt=com.microsoft.azure.management.containerservice.implementation.AgentPoolInner&text=AgentPoolInner" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="CloudException?alt=CloudException&text=CloudException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  returns:
    description: <p>the AgentPoolInner object if successful. </p>
    type: <xref href="com.microsoft.azure.management.containerservice.implementation.AgentPoolInner?alt=com.microsoft.azure.management.containerservice.implementation.AgentPoolInner&text=AgentPoolInner" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Creates or updates an agent pool. Creates or updates an agent pool in the specified managed cluster.</p>

    <p></p>
  syntax: public AgentPoolInner createOrUpdate(String resourceGroupName, String resourceName, String agentPoolName, AgentPoolInner parameters)
  uid: com.microsoft.azure.management.containerservice.implementation.AgentPoolsInner.createOrUpdate(String,String,String,AgentPoolInner)
- fullName: com.microsoft.azure.management.containerservice.implementation.AgentPoolsInner.createOrUpdateAsync(String resourceGroupName, String resourceName, String agentPoolName, AgentPoolInner parameters)
  name: createOrUpdateAsync(String resourceGroupName, String resourceName, String agentPoolName, AgentPoolInner parameters)
  nameWithType: AgentPoolsInner.createOrUpdateAsync(String resourceGroupName, String resourceName, String agentPoolName, AgentPoolInner parameters)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the managed cluster resource. </p>
    name: resourceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the agent pool. </p>
    name: agentPoolName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>Parameters supplied to the Create or Update an agent pool operation. </p>
    name: parameters
    type: <xref href="com.microsoft.azure.management.containerservice.implementation.AgentPoolInner?alt=com.microsoft.azure.management.containerservice.implementation.AgentPoolInner&text=AgentPoolInner" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable for the request </p>
    type: Observable&lt;<xref href="com.microsoft.azure.management.containerservice.implementation.AgentPoolInner?alt=com.microsoft.azure.management.containerservice.implementation.AgentPoolInner&text=AgentPoolInner" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Creates or updates an agent pool. Creates or updates an agent pool in the specified managed cluster.</p>

    <p></p>
  syntax: public Observable<AgentPoolInner> createOrUpdateAsync(String resourceGroupName, String resourceName, String agentPoolName, AgentPoolInner parameters)
  uid: com.microsoft.azure.management.containerservice.implementation.AgentPoolsInner.createOrUpdateAsync(String,String,String,AgentPoolInner)
- fullName: com.microsoft.azure.management.containerservice.implementation.AgentPoolsInner.createOrUpdateAsync(String resourceGroupName, String resourceName, String agentPoolName, AgentPoolInner parameters, final ServiceCallback<AgentPoolInner> serviceCallback)
  name: createOrUpdateAsync(String resourceGroupName, String resourceName, String agentPoolName, AgentPoolInner parameters, final ServiceCallback<AgentPoolInner> serviceCallback)
  nameWithType: AgentPoolsInner.createOrUpdateAsync(String resourceGroupName, String resourceName, String agentPoolName, AgentPoolInner parameters, final ServiceCallback<AgentPoolInner> serviceCallback)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the managed cluster resource. </p>
    name: resourceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the agent pool. </p>
    name: agentPoolName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>Parameters supplied to the Create or Update an agent pool operation. </p>
    name: parameters
    type: <xref href="com.microsoft.azure.management.containerservice.implementation.AgentPoolInner?alt=com.microsoft.azure.management.containerservice.implementation.AgentPoolInner&text=AgentPoolInner" data-throw-if-not-resolved="False"/>
  - description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    name: serviceCallback
    type: final ServiceCallback&lt;<xref href="com.microsoft.azure.management.containerservice.implementation.AgentPoolInner?alt=com.microsoft.azure.management.containerservice.implementation.AgentPoolInner&text=AgentPoolInner" data-throw-if-not-resolved="False"/>&gt;
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
    type: ServiceFuture&lt;<xref href="com.microsoft.azure.management.containerservice.implementation.AgentPoolInner?alt=com.microsoft.azure.management.containerservice.implementation.AgentPoolInner&text=AgentPoolInner" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Creates or updates an agent pool. Creates or updates an agent pool in the specified managed cluster.</p>

    <p></p>
  syntax: public ServiceFuture<AgentPoolInner> createOrUpdateAsync(String resourceGroupName, String resourceName, String agentPoolName, AgentPoolInner parameters, final ServiceCallback<AgentPoolInner> serviceCallback)
  uid: com.microsoft.azure.management.containerservice.implementation.AgentPoolsInner.createOrUpdateAsync(String,String,String,AgentPoolInner,final ServiceCallback<AgentPoolInner>)
- fullName: com.microsoft.azure.management.containerservice.implementation.AgentPoolsInner.createOrUpdateWithServiceResponseAsync(String resourceGroupName, String resourceName, String agentPoolName, AgentPoolInner parameters)
  name: createOrUpdateWithServiceResponseAsync(String resourceGroupName, String resourceName, String agentPoolName, AgentPoolInner parameters)
  nameWithType: AgentPoolsInner.createOrUpdateWithServiceResponseAsync(String resourceGroupName, String resourceName, String agentPoolName, AgentPoolInner parameters)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the managed cluster resource. </p>
    name: resourceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the agent pool. </p>
    name: agentPoolName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>Parameters supplied to the Create or Update an agent pool operation. </p>
    name: parameters
    type: <xref href="com.microsoft.azure.management.containerservice.implementation.AgentPoolInner?alt=com.microsoft.azure.management.containerservice.implementation.AgentPoolInner&text=AgentPoolInner" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable for the request </p>
    type: Observable&lt;ServiceResponse&lt;<xref href="com.microsoft.azure.management.containerservice.implementation.AgentPoolInner?alt=com.microsoft.azure.management.containerservice.implementation.AgentPoolInner&text=AgentPoolInner" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Creates or updates an agent pool. Creates or updates an agent pool in the specified managed cluster.</p>

    <p></p>
  syntax: public Observable<ServiceResponse<AgentPoolInner>> createOrUpdateWithServiceResponseAsync(String resourceGroupName, String resourceName, String agentPoolName, AgentPoolInner parameters)
  uid: com.microsoft.azure.management.containerservice.implementation.AgentPoolsInner.createOrUpdateWithServiceResponseAsync(String,String,String,AgentPoolInner)
- fullName: com.microsoft.azure.management.containerservice.implementation.AgentPoolsInner.delete(String resourceGroupName, String resourceName, String agentPoolName)
  name: delete(String resourceGroupName, String resourceName, String agentPoolName)
  nameWithType: AgentPoolsInner.delete(String resourceGroupName, String resourceName, String agentPoolName)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the managed cluster resource. </p>
    name: resourceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the agent pool. </p>
    name: agentPoolName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="CloudException?alt=CloudException&text=CloudException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  summary: >-
    <p>Deletes an agent pool. Deletes the agent pool in the specified managed cluster.</p>

    <p></p>
  syntax: public void delete(String resourceGroupName, String resourceName, String agentPoolName)
  uid: com.microsoft.azure.management.containerservice.implementation.AgentPoolsInner.delete(String,String,String)
- fullName: com.microsoft.azure.management.containerservice.implementation.AgentPoolsInner.deleteAsync(String resourceGroupName, String resourceName, String agentPoolName)
  name: deleteAsync(String resourceGroupName, String resourceName, String agentPoolName)
  nameWithType: AgentPoolsInner.deleteAsync(String resourceGroupName, String resourceName, String agentPoolName)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the managed cluster resource. </p>
    name: resourceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the agent pool. </p>
    name: agentPoolName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable for the request </p>
    type: <xref href="Observable%3CVoid%3E?alt=Observable%3CVoid%3E&text=Observable%3CVoid%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Deletes an agent pool. Deletes the agent pool in the specified managed cluster.</p>

    <p></p>
  syntax: public Observable<Void> deleteAsync(String resourceGroupName, String resourceName, String agentPoolName)
  uid: com.microsoft.azure.management.containerservice.implementation.AgentPoolsInner.deleteAsync(String,String,String)
- fullName: com.microsoft.azure.management.containerservice.implementation.AgentPoolsInner.deleteAsync(String resourceGroupName, String resourceName, String agentPoolName, final ServiceCallback<Void> serviceCallback)
  name: deleteAsync(String resourceGroupName, String resourceName, String agentPoolName, final ServiceCallback<Void> serviceCallback)
  nameWithType: AgentPoolsInner.deleteAsync(String resourceGroupName, String resourceName, String agentPoolName, final ServiceCallback<Void> serviceCallback)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the managed cluster resource. </p>
    name: resourceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the agent pool. </p>
    name: agentPoolName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    name: serviceCallback
    type: <xref href="final+ServiceCallback%3CVoid%3E?alt=final+ServiceCallback%3CVoid%3E&text=final+ServiceCallback%3CVoid%3E" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
    type: <xref href="ServiceFuture%3CVoid%3E?alt=ServiceFuture%3CVoid%3E&text=ServiceFuture%3CVoid%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Deletes an agent pool. Deletes the agent pool in the specified managed cluster.</p>

    <p></p>
  syntax: public ServiceFuture<Void> deleteAsync(String resourceGroupName, String resourceName, String agentPoolName, final ServiceCallback<Void> serviceCallback)
  uid: com.microsoft.azure.management.containerservice.implementation.AgentPoolsInner.deleteAsync(String,String,String,final ServiceCallback<Void>)
- fullName: com.microsoft.azure.management.containerservice.implementation.AgentPoolsInner.deleteWithServiceResponseAsync(String resourceGroupName, String resourceName, String agentPoolName)
  name: deleteWithServiceResponseAsync(String resourceGroupName, String resourceName, String agentPoolName)
  nameWithType: AgentPoolsInner.deleteWithServiceResponseAsync(String resourceGroupName, String resourceName, String agentPoolName)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the managed cluster resource. </p>
    name: resourceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the agent pool. </p>
    name: agentPoolName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable for the request </p>
    type: <xref href="Observable%3CServiceResponse%3CVoid%3E%3E?alt=Observable%3CServiceResponse%3CVoid%3E%3E&text=Observable%3CServiceResponse%3CVoid%3E%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Deletes an agent pool. Deletes the agent pool in the specified managed cluster.</p>

    <p></p>
  syntax: public Observable<ServiceResponse<Void>> deleteWithServiceResponseAsync(String resourceGroupName, String resourceName, String agentPoolName)
  uid: com.microsoft.azure.management.containerservice.implementation.AgentPoolsInner.deleteWithServiceResponseAsync(String,String,String)
- fullName: com.microsoft.azure.management.containerservice.implementation.AgentPoolsInner.get(String resourceGroupName, String resourceName, String agentPoolName)
  name: get(String resourceGroupName, String resourceName, String agentPoolName)
  nameWithType: AgentPoolsInner.get(String resourceGroupName, String resourceName, String agentPoolName)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the managed cluster resource. </p>
    name: resourceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the agent pool. </p>
    name: agentPoolName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="CloudException?alt=CloudException&text=CloudException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  returns:
    description: <p>the AgentPoolInner object if successful. </p>
    type: <xref href="com.microsoft.azure.management.containerservice.implementation.AgentPoolInner?alt=com.microsoft.azure.management.containerservice.implementation.AgentPoolInner&text=AgentPoolInner" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the agent pool. Gets the details of the agent pool by managed cluster and resource group.</p>

    <p></p>
  syntax: public AgentPoolInner get(String resourceGroupName, String resourceName, String agentPoolName)
  uid: com.microsoft.azure.management.containerservice.implementation.AgentPoolsInner.get(String,String,String)
- fullName: com.microsoft.azure.management.containerservice.implementation.AgentPoolsInner.getAsync(String resourceGroupName, String resourceName, String agentPoolName)
  name: getAsync(String resourceGroupName, String resourceName, String agentPoolName)
  nameWithType: AgentPoolsInner.getAsync(String resourceGroupName, String resourceName, String agentPoolName)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the managed cluster resource. </p>
    name: resourceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the agent pool. </p>
    name: agentPoolName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the AgentPoolInner object </p>
    type: Observable&lt;<xref href="com.microsoft.azure.management.containerservice.implementation.AgentPoolInner?alt=com.microsoft.azure.management.containerservice.implementation.AgentPoolInner&text=AgentPoolInner" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Gets the agent pool. Gets the details of the agent pool by managed cluster and resource group.</p>

    <p></p>
  syntax: public Observable<AgentPoolInner> getAsync(String resourceGroupName, String resourceName, String agentPoolName)
  uid: com.microsoft.azure.management.containerservice.implementation.AgentPoolsInner.getAsync(String,String,String)
- fullName: com.microsoft.azure.management.containerservice.implementation.AgentPoolsInner.getAsync(String resourceGroupName, String resourceName, String agentPoolName, final ServiceCallback<AgentPoolInner> serviceCallback)
  name: getAsync(String resourceGroupName, String resourceName, String agentPoolName, final ServiceCallback<AgentPoolInner> serviceCallback)
  nameWithType: AgentPoolsInner.getAsync(String resourceGroupName, String resourceName, String agentPoolName, final ServiceCallback<AgentPoolInner> serviceCallback)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the managed cluster resource. </p>
    name: resourceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the agent pool. </p>
    name: agentPoolName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    name: serviceCallback
    type: final ServiceCallback&lt;<xref href="com.microsoft.azure.management.containerservice.implementation.AgentPoolInner?alt=com.microsoft.azure.management.containerservice.implementation.AgentPoolInner&text=AgentPoolInner" data-throw-if-not-resolved="False"/>&gt;
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
    type: ServiceFuture&lt;<xref href="com.microsoft.azure.management.containerservice.implementation.AgentPoolInner?alt=com.microsoft.azure.management.containerservice.implementation.AgentPoolInner&text=AgentPoolInner" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Gets the agent pool. Gets the details of the agent pool by managed cluster and resource group.</p>

    <p></p>
  syntax: public ServiceFuture<AgentPoolInner> getAsync(String resourceGroupName, String resourceName, String agentPoolName, final ServiceCallback<AgentPoolInner> serviceCallback)
  uid: com.microsoft.azure.management.containerservice.implementation.AgentPoolsInner.getAsync(String,String,String,final ServiceCallback<AgentPoolInner>)
- fullName: com.microsoft.azure.management.containerservice.implementation.AgentPoolsInner.getAvailableAgentPoolVersions(String resourceGroupName, String resourceName)
  name: getAvailableAgentPoolVersions(String resourceGroupName, String resourceName)
  nameWithType: AgentPoolsInner.getAvailableAgentPoolVersions(String resourceGroupName, String resourceName)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the managed cluster resource. </p>
    name: resourceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="CloudException?alt=CloudException&text=CloudException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  returns:
    description: <p>the AgentPoolAvailableVersionsInner object if successful. </p>
    type: <xref href="com.microsoft.azure.management.containerservice.implementation.AgentPoolAvailableVersionsInner?alt=com.microsoft.azure.management.containerservice.implementation.AgentPoolAvailableVersionsInner&text=AgentPoolAvailableVersionsInner" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets a list of supported versions for the specified agent pool. Gets a list of supported versions for the specified agent pool.</p>

    <p></p>
  syntax: public AgentPoolAvailableVersionsInner getAvailableAgentPoolVersions(String resourceGroupName, String resourceName)
  uid: com.microsoft.azure.management.containerservice.implementation.AgentPoolsInner.getAvailableAgentPoolVersions(String,String)
- fullName: com.microsoft.azure.management.containerservice.implementation.AgentPoolsInner.getAvailableAgentPoolVersionsAsync(String resourceGroupName, String resourceName)
  name: getAvailableAgentPoolVersionsAsync(String resourceGroupName, String resourceName)
  nameWithType: AgentPoolsInner.getAvailableAgentPoolVersionsAsync(String resourceGroupName, String resourceName)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the managed cluster resource. </p>
    name: resourceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the AgentPoolAvailableVersionsInner object </p>
    type: Observable&lt;<xref href="com.microsoft.azure.management.containerservice.implementation.AgentPoolAvailableVersionsInner?alt=com.microsoft.azure.management.containerservice.implementation.AgentPoolAvailableVersionsInner&text=AgentPoolAvailableVersionsInner" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Gets a list of supported versions for the specified agent pool. Gets a list of supported versions for the specified agent pool.</p>

    <p></p>
  syntax: public Observable<AgentPoolAvailableVersionsInner> getAvailableAgentPoolVersionsAsync(String resourceGroupName, String resourceName)
  uid: com.microsoft.azure.management.containerservice.implementation.AgentPoolsInner.getAvailableAgentPoolVersionsAsync(String,String)
- fullName: com.microsoft.azure.management.containerservice.implementation.AgentPoolsInner.getAvailableAgentPoolVersionsAsync(String resourceGroupName, String resourceName, final ServiceCallback<AgentPoolAvailableVersionsInner> serviceCallback)
  name: getAvailableAgentPoolVersionsAsync(String resourceGroupName, String resourceName, final ServiceCallback<AgentPoolAvailableVersionsInner> serviceCallback)
  nameWithType: AgentPoolsInner.getAvailableAgentPoolVersionsAsync(String resourceGroupName, String resourceName, final ServiceCallback<AgentPoolAvailableVersionsInner> serviceCallback)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the managed cluster resource. </p>
    name: resourceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    name: serviceCallback
    type: final ServiceCallback&lt;<xref href="com.microsoft.azure.management.containerservice.implementation.AgentPoolAvailableVersionsInner?alt=com.microsoft.azure.management.containerservice.implementation.AgentPoolAvailableVersionsInner&text=AgentPoolAvailableVersionsInner" data-throw-if-not-resolved="False"/>&gt;
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
    type: ServiceFuture&lt;<xref href="com.microsoft.azure.management.containerservice.implementation.AgentPoolAvailableVersionsInner?alt=com.microsoft.azure.management.containerservice.implementation.AgentPoolAvailableVersionsInner&text=AgentPoolAvailableVersionsInner" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Gets a list of supported versions for the specified agent pool. Gets a list of supported versions for the specified agent pool.</p>

    <p></p>
  syntax: public ServiceFuture<AgentPoolAvailableVersionsInner> getAvailableAgentPoolVersionsAsync(String resourceGroupName, String resourceName, final ServiceCallback<AgentPoolAvailableVersionsInner> serviceCallback)
  uid: com.microsoft.azure.management.containerservice.implementation.AgentPoolsInner.getAvailableAgentPoolVersionsAsync(String,String,final ServiceCallback<AgentPoolAvailableVersionsInner>)
- fullName: com.microsoft.azure.management.containerservice.implementation.AgentPoolsInner.getAvailableAgentPoolVersionsWithServiceResponseAsync(String resourceGroupName, String resourceName)
  name: getAvailableAgentPoolVersionsWithServiceResponseAsync(String resourceGroupName, String resourceName)
  nameWithType: AgentPoolsInner.getAvailableAgentPoolVersionsWithServiceResponseAsync(String resourceGroupName, String resourceName)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the managed cluster resource. </p>
    name: resourceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the AgentPoolAvailableVersionsInner object </p>
    type: Observable&lt;ServiceResponse&lt;<xref href="com.microsoft.azure.management.containerservice.implementation.AgentPoolAvailableVersionsInner?alt=com.microsoft.azure.management.containerservice.implementation.AgentPoolAvailableVersionsInner&text=AgentPoolAvailableVersionsInner" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Gets a list of supported versions for the specified agent pool. Gets a list of supported versions for the specified agent pool.</p>

    <p></p>
  syntax: public Observable<ServiceResponse<AgentPoolAvailableVersionsInner>> getAvailableAgentPoolVersionsWithServiceResponseAsync(String resourceGroupName, String resourceName)
  uid: com.microsoft.azure.management.containerservice.implementation.AgentPoolsInner.getAvailableAgentPoolVersionsWithServiceResponseAsync(String,String)
- fullName: com.microsoft.azure.management.containerservice.implementation.AgentPoolsInner.getUpgradeProfile(String resourceGroupName, String resourceName, String agentPoolName)
  name: getUpgradeProfile(String resourceGroupName, String resourceName, String agentPoolName)
  nameWithType: AgentPoolsInner.getUpgradeProfile(String resourceGroupName, String resourceName, String agentPoolName)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the managed cluster resource. </p>
    name: resourceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the agent pool. </p>
    name: agentPoolName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="CloudException?alt=CloudException&text=CloudException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  returns:
    description: <p>the AgentPoolUpgradeProfileInner object if successful. </p>
    type: <xref href="com.microsoft.azure.management.containerservice.implementation.AgentPoolUpgradeProfileInner?alt=com.microsoft.azure.management.containerservice.implementation.AgentPoolUpgradeProfileInner&text=AgentPoolUpgradeProfileInner" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets upgrade profile for an agent pool. Gets the details of the upgrade profile for an agent pool with a specified resource group and managed cluster name.</p>

    <p></p>
  syntax: public AgentPoolUpgradeProfileInner getUpgradeProfile(String resourceGroupName, String resourceName, String agentPoolName)
  uid: com.microsoft.azure.management.containerservice.implementation.AgentPoolsInner.getUpgradeProfile(String,String,String)
- fullName: com.microsoft.azure.management.containerservice.implementation.AgentPoolsInner.getUpgradeProfileAsync(String resourceGroupName, String resourceName, String agentPoolName)
  name: getUpgradeProfileAsync(String resourceGroupName, String resourceName, String agentPoolName)
  nameWithType: AgentPoolsInner.getUpgradeProfileAsync(String resourceGroupName, String resourceName, String agentPoolName)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the managed cluster resource. </p>
    name: resourceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the agent pool. </p>
    name: agentPoolName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the AgentPoolUpgradeProfileInner object </p>
    type: Observable&lt;<xref href="com.microsoft.azure.management.containerservice.implementation.AgentPoolUpgradeProfileInner?alt=com.microsoft.azure.management.containerservice.implementation.AgentPoolUpgradeProfileInner&text=AgentPoolUpgradeProfileInner" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Gets upgrade profile for an agent pool. Gets the details of the upgrade profile for an agent pool with a specified resource group and managed cluster name.</p>

    <p></p>
  syntax: public Observable<AgentPoolUpgradeProfileInner> getUpgradeProfileAsync(String resourceGroupName, String resourceName, String agentPoolName)
  uid: com.microsoft.azure.management.containerservice.implementation.AgentPoolsInner.getUpgradeProfileAsync(String,String,String)
- fullName: com.microsoft.azure.management.containerservice.implementation.AgentPoolsInner.getUpgradeProfileAsync(String resourceGroupName, String resourceName, String agentPoolName, final ServiceCallback<AgentPoolUpgradeProfileInner> serviceCallback)
  name: getUpgradeProfileAsync(String resourceGroupName, String resourceName, String agentPoolName, final ServiceCallback<AgentPoolUpgradeProfileInner> serviceCallback)
  nameWithType: AgentPoolsInner.getUpgradeProfileAsync(String resourceGroupName, String resourceName, String agentPoolName, final ServiceCallback<AgentPoolUpgradeProfileInner> serviceCallback)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the managed cluster resource. </p>
    name: resourceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the agent pool. </p>
    name: agentPoolName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    name: serviceCallback
    type: final ServiceCallback&lt;<xref href="com.microsoft.azure.management.containerservice.implementation.AgentPoolUpgradeProfileInner?alt=com.microsoft.azure.management.containerservice.implementation.AgentPoolUpgradeProfileInner&text=AgentPoolUpgradeProfileInner" data-throw-if-not-resolved="False"/>&gt;
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
    type: ServiceFuture&lt;<xref href="com.microsoft.azure.management.containerservice.implementation.AgentPoolUpgradeProfileInner?alt=com.microsoft.azure.management.containerservice.implementation.AgentPoolUpgradeProfileInner&text=AgentPoolUpgradeProfileInner" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Gets upgrade profile for an agent pool. Gets the details of the upgrade profile for an agent pool with a specified resource group and managed cluster name.</p>

    <p></p>
  syntax: public ServiceFuture<AgentPoolUpgradeProfileInner> getUpgradeProfileAsync(String resourceGroupName, String resourceName, String agentPoolName, final ServiceCallback<AgentPoolUpgradeProfileInner> serviceCallback)
  uid: com.microsoft.azure.management.containerservice.implementation.AgentPoolsInner.getUpgradeProfileAsync(String,String,String,final ServiceCallback<AgentPoolUpgradeProfileInner>)
- fullName: com.microsoft.azure.management.containerservice.implementation.AgentPoolsInner.getUpgradeProfileWithServiceResponseAsync(String resourceGroupName, String resourceName, String agentPoolName)
  name: getUpgradeProfileWithServiceResponseAsync(String resourceGroupName, String resourceName, String agentPoolName)
  nameWithType: AgentPoolsInner.getUpgradeProfileWithServiceResponseAsync(String resourceGroupName, String resourceName, String agentPoolName)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the managed cluster resource. </p>
    name: resourceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the agent pool. </p>
    name: agentPoolName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the AgentPoolUpgradeProfileInner object </p>
    type: Observable&lt;ServiceResponse&lt;<xref href="com.microsoft.azure.management.containerservice.implementation.AgentPoolUpgradeProfileInner?alt=com.microsoft.azure.management.containerservice.implementation.AgentPoolUpgradeProfileInner&text=AgentPoolUpgradeProfileInner" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Gets upgrade profile for an agent pool. Gets the details of the upgrade profile for an agent pool with a specified resource group and managed cluster name.</p>

    <p></p>
  syntax: public Observable<ServiceResponse<AgentPoolUpgradeProfileInner>> getUpgradeProfileWithServiceResponseAsync(String resourceGroupName, String resourceName, String agentPoolName)
  uid: com.microsoft.azure.management.containerservice.implementation.AgentPoolsInner.getUpgradeProfileWithServiceResponseAsync(String,String,String)
- fullName: com.microsoft.azure.management.containerservice.implementation.AgentPoolsInner.getWithServiceResponseAsync(String resourceGroupName, String resourceName, String agentPoolName)
  name: getWithServiceResponseAsync(String resourceGroupName, String resourceName, String agentPoolName)
  nameWithType: AgentPoolsInner.getWithServiceResponseAsync(String resourceGroupName, String resourceName, String agentPoolName)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the managed cluster resource. </p>
    name: resourceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the agent pool. </p>
    name: agentPoolName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the AgentPoolInner object </p>
    type: Observable&lt;ServiceResponse&lt;<xref href="com.microsoft.azure.management.containerservice.implementation.AgentPoolInner?alt=com.microsoft.azure.management.containerservice.implementation.AgentPoolInner&text=AgentPoolInner" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Gets the agent pool. Gets the details of the agent pool by managed cluster and resource group.</p>

    <p></p>
  syntax: public Observable<ServiceResponse<AgentPoolInner>> getWithServiceResponseAsync(String resourceGroupName, String resourceName, String agentPoolName)
  uid: com.microsoft.azure.management.containerservice.implementation.AgentPoolsInner.getWithServiceResponseAsync(String,String,String)
- fullName: com.microsoft.azure.management.containerservice.implementation.AgentPoolsInner.list(final String resourceGroupName, final String resourceName)
  name: list(final String resourceGroupName, final String resourceName)
  nameWithType: AgentPoolsInner.list(final String resourceGroupName, final String resourceName)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the managed cluster resource. </p>
    name: resourceName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="CloudException?alt=CloudException&text=CloudException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  returns:
    description: <p>the PagedList&lt;AgentPoolInner&gt; object if successful. </p>
    type: PagedList&lt;<xref href="com.microsoft.azure.management.containerservice.implementation.AgentPoolInner?alt=com.microsoft.azure.management.containerservice.implementation.AgentPoolInner&text=AgentPoolInner" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Gets a list of agent pools in the specified managed cluster. Gets a list of agent pools in the specified managed cluster. The operation returns properties of each agent pool.</p>

    <p></p>
  syntax: public PagedList<AgentPoolInner> list(final String resourceGroupName, final String resourceName)
  uid: com.microsoft.azure.management.containerservice.implementation.AgentPoolsInner.list(final String,final String)
- fullName: com.microsoft.azure.management.containerservice.implementation.AgentPoolsInner.listAsync(final String resourceGroupName, final String resourceName)
  name: listAsync(final String resourceGroupName, final String resourceName)
  nameWithType: AgentPoolsInner.listAsync(final String resourceGroupName, final String resourceName)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the managed cluster resource. </p>
    name: resourceName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the PagedList&lt;AgentPoolInner&gt; object </p>
    type: Observable&lt;Page&lt;<xref href="com.microsoft.azure.management.containerservice.implementation.AgentPoolInner?alt=com.microsoft.azure.management.containerservice.implementation.AgentPoolInner&text=AgentPoolInner" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Gets a list of agent pools in the specified managed cluster. Gets a list of agent pools in the specified managed cluster. The operation returns properties of each agent pool.</p>

    <p></p>
  syntax: public Observable<Page<AgentPoolInner>> listAsync(final String resourceGroupName, final String resourceName)
  uid: com.microsoft.azure.management.containerservice.implementation.AgentPoolsInner.listAsync(final String,final String)
- fullName: com.microsoft.azure.management.containerservice.implementation.AgentPoolsInner.listAsync(final String resourceGroupName, final String resourceName, final ListOperationCallback<AgentPoolInner> serviceCallback)
  name: listAsync(final String resourceGroupName, final String resourceName, final ListOperationCallback<AgentPoolInner> serviceCallback)
  nameWithType: AgentPoolsInner.listAsync(final String resourceGroupName, final String resourceName, final ListOperationCallback<AgentPoolInner> serviceCallback)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the managed cluster resource. </p>
    name: resourceName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    name: serviceCallback
    type: final ListOperationCallback&lt;<xref href="com.microsoft.azure.management.containerservice.implementation.AgentPoolInner?alt=com.microsoft.azure.management.containerservice.implementation.AgentPoolInner&text=AgentPoolInner" data-throw-if-not-resolved="False"/>&gt;
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
    type: ServiceFuture&lt;List&lt;<xref href="com.microsoft.azure.management.containerservice.implementation.AgentPoolInner?alt=com.microsoft.azure.management.containerservice.implementation.AgentPoolInner&text=AgentPoolInner" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Gets a list of agent pools in the specified managed cluster. Gets a list of agent pools in the specified managed cluster. The operation returns properties of each agent pool.</p>

    <p></p>
  syntax: public ServiceFuture<List<AgentPoolInner>> listAsync(final String resourceGroupName, final String resourceName, final ListOperationCallback<AgentPoolInner> serviceCallback)
  uid: com.microsoft.azure.management.containerservice.implementation.AgentPoolsInner.listAsync(final String,final String,final ListOperationCallback<AgentPoolInner>)
- fullName: com.microsoft.azure.management.containerservice.implementation.AgentPoolsInner.listNext(final String nextPageLink)
  name: listNext(final String nextPageLink)
  nameWithType: AgentPoolsInner.listNext(final String nextPageLink)
  parameters:
  - description: <p>The NextLink from the previous successful call to List operation. </p>
    name: nextPageLink
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="CloudException?alt=CloudException&text=CloudException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  returns:
    description: <p>the PagedList&lt;AgentPoolInner&gt; object if successful. </p>
    type: PagedList&lt;<xref href="com.microsoft.azure.management.containerservice.implementation.AgentPoolInner?alt=com.microsoft.azure.management.containerservice.implementation.AgentPoolInner&text=AgentPoolInner" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Gets a list of agent pools in the specified managed cluster. Gets a list of agent pools in the specified managed cluster. The operation returns properties of each agent pool.</p>

    <p></p>
  syntax: public PagedList<AgentPoolInner> listNext(final String nextPageLink)
  uid: com.microsoft.azure.management.containerservice.implementation.AgentPoolsInner.listNext(final String)
- fullName: com.microsoft.azure.management.containerservice.implementation.AgentPoolsInner.listNextAsync(final String nextPageLink)
  name: listNextAsync(final String nextPageLink)
  nameWithType: AgentPoolsInner.listNextAsync(final String nextPageLink)
  parameters:
  - description: <p>The NextLink from the previous successful call to List operation. </p>
    name: nextPageLink
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the PagedList&lt;AgentPoolInner&gt; object </p>
    type: Observable&lt;Page&lt;<xref href="com.microsoft.azure.management.containerservice.implementation.AgentPoolInner?alt=com.microsoft.azure.management.containerservice.implementation.AgentPoolInner&text=AgentPoolInner" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Gets a list of agent pools in the specified managed cluster. Gets a list of agent pools in the specified managed cluster. The operation returns properties of each agent pool.</p>

    <p></p>
  syntax: public Observable<Page<AgentPoolInner>> listNextAsync(final String nextPageLink)
  uid: com.microsoft.azure.management.containerservice.implementation.AgentPoolsInner.listNextAsync(final String)
- fullName: com.microsoft.azure.management.containerservice.implementation.AgentPoolsInner.listNextAsync(final String nextPageLink, final ServiceFuture<List<AgentPoolInner>> serviceFuture, final ListOperationCallback<AgentPoolInner> serviceCallback)
  name: listNextAsync(final String nextPageLink, final ServiceFuture<List<AgentPoolInner>> serviceFuture, final ListOperationCallback<AgentPoolInner> serviceCallback)
  nameWithType: AgentPoolsInner.listNextAsync(final String nextPageLink, final ServiceFuture<List<AgentPoolInner>> serviceFuture, final ListOperationCallback<AgentPoolInner> serviceCallback)
  parameters:
  - description: <p>The NextLink from the previous successful call to List operation. </p>
    name: nextPageLink
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>the ServiceFuture object tracking the Retrofit calls </p>
    name: serviceFuture
    type: final ServiceFuture&lt;List&lt;<xref href="com.microsoft.azure.management.containerservice.implementation.AgentPoolInner?alt=com.microsoft.azure.management.containerservice.implementation.AgentPoolInner&text=AgentPoolInner" data-throw-if-not-resolved="False"/>&gt;&gt;
  - description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    name: serviceCallback
    type: final ListOperationCallback&lt;<xref href="com.microsoft.azure.management.containerservice.implementation.AgentPoolInner?alt=com.microsoft.azure.management.containerservice.implementation.AgentPoolInner&text=AgentPoolInner" data-throw-if-not-resolved="False"/>&gt;
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
    type: ServiceFuture&lt;List&lt;<xref href="com.microsoft.azure.management.containerservice.implementation.AgentPoolInner?alt=com.microsoft.azure.management.containerservice.implementation.AgentPoolInner&text=AgentPoolInner" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Gets a list of agent pools in the specified managed cluster. Gets a list of agent pools in the specified managed cluster. The operation returns properties of each agent pool.</p>

    <p></p>
  syntax: public ServiceFuture<List<AgentPoolInner>> listNextAsync(final String nextPageLink, final ServiceFuture<List<AgentPoolInner>> serviceFuture, final ListOperationCallback<AgentPoolInner> serviceCallback)
  uid: com.microsoft.azure.management.containerservice.implementation.AgentPoolsInner.listNextAsync(final String,final ServiceFuture<List<AgentPoolInner>>,final ListOperationCallback<AgentPoolInner>)
- fullName: com.microsoft.azure.management.containerservice.implementation.AgentPoolsInner.listNextSinglePageAsync(final String nextPageLink)
  name: listNextSinglePageAsync(final String nextPageLink)
  nameWithType: AgentPoolsInner.listNextSinglePageAsync(final String nextPageLink)
  parameters:
  - description: <p>The NextLink from the previous successful call to List operation. </p>
    name: nextPageLink
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the PagedList&lt;AgentPoolInner&gt; object wrapped in <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceResponse"></xref> if successful. </p>
    type: Observable&lt;ServiceResponse&lt;Page&lt;<xref href="com.microsoft.azure.management.containerservice.implementation.AgentPoolInner?alt=com.microsoft.azure.management.containerservice.implementation.AgentPoolInner&text=AgentPoolInner" data-throw-if-not-resolved="False"/>&gt;&gt;&gt;
  summary: >-
    <p>Gets a list of agent pools in the specified managed cluster. Gets a list of agent pools in the specified managed cluster. The operation returns properties of each agent pool.</p>

    <p>ServiceResponse&lt;PageImpl&lt;AgentPoolInner&gt;&gt; * </p>
  syntax: public Observable<ServiceResponse<Page<AgentPoolInner>>> listNextSinglePageAsync(final String nextPageLink)
  uid: com.microsoft.azure.management.containerservice.implementation.AgentPoolsInner.listNextSinglePageAsync(final String)
- fullName: com.microsoft.azure.management.containerservice.implementation.AgentPoolsInner.listNextWithServiceResponseAsync(final String nextPageLink)
  name: listNextWithServiceResponseAsync(final String nextPageLink)
  nameWithType: AgentPoolsInner.listNextWithServiceResponseAsync(final String nextPageLink)
  parameters:
  - description: <p>The NextLink from the previous successful call to List operation. </p>
    name: nextPageLink
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the PagedList&lt;AgentPoolInner&gt; object </p>
    type: Observable&lt;ServiceResponse&lt;Page&lt;<xref href="com.microsoft.azure.management.containerservice.implementation.AgentPoolInner?alt=com.microsoft.azure.management.containerservice.implementation.AgentPoolInner&text=AgentPoolInner" data-throw-if-not-resolved="False"/>&gt;&gt;&gt;
  summary: >-
    <p>Gets a list of agent pools in the specified managed cluster. Gets a list of agent pools in the specified managed cluster. The operation returns properties of each agent pool.</p>

    <p></p>
  syntax: public Observable<ServiceResponse<Page<AgentPoolInner>>> listNextWithServiceResponseAsync(final String nextPageLink)
  uid: com.microsoft.azure.management.containerservice.implementation.AgentPoolsInner.listNextWithServiceResponseAsync(final String)
- fullName: com.microsoft.azure.management.containerservice.implementation.AgentPoolsInner.listSinglePageAsync(final String resourceGroupName, final String resourceName)
  name: listSinglePageAsync(final String resourceGroupName, final String resourceName)
  nameWithType: AgentPoolsInner.listSinglePageAsync(final String resourceGroupName, final String resourceName)
  parameters:
  - description: <p>The name of the resource group. ServiceResponse&lt;PageImpl&lt;AgentPoolInner&gt;&gt; * </p>
    name: resourceGroupName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the managed cluster resource. </p>
    name: resourceName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the PagedList&lt;AgentPoolInner&gt; object wrapped in <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceResponse"></xref> if successful. </p>
    type: Observable&lt;ServiceResponse&lt;Page&lt;<xref href="com.microsoft.azure.management.containerservice.implementation.AgentPoolInner?alt=com.microsoft.azure.management.containerservice.implementation.AgentPoolInner&text=AgentPoolInner" data-throw-if-not-resolved="False"/>&gt;&gt;&gt;
  summary: >-
    <p>Gets a list of agent pools in the specified managed cluster. Gets a list of agent pools in the specified managed cluster. The operation returns properties of each agent pool.</p>

    <p>ServiceResponse&lt;PageImpl&lt;AgentPoolInner&gt;&gt; * </p>
  syntax: public Observable<ServiceResponse<Page<AgentPoolInner>>> listSinglePageAsync(final String resourceGroupName, final String resourceName)
  uid: com.microsoft.azure.management.containerservice.implementation.AgentPoolsInner.listSinglePageAsync(final String,final String)
- fullName: com.microsoft.azure.management.containerservice.implementation.AgentPoolsInner.listWithServiceResponseAsync(final String resourceGroupName, final String resourceName)
  name: listWithServiceResponseAsync(final String resourceGroupName, final String resourceName)
  nameWithType: AgentPoolsInner.listWithServiceResponseAsync(final String resourceGroupName, final String resourceName)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the managed cluster resource. </p>
    name: resourceName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the PagedList&lt;AgentPoolInner&gt; object </p>
    type: Observable&lt;ServiceResponse&lt;Page&lt;<xref href="com.microsoft.azure.management.containerservice.implementation.AgentPoolInner?alt=com.microsoft.azure.management.containerservice.implementation.AgentPoolInner&text=AgentPoolInner" data-throw-if-not-resolved="False"/>&gt;&gt;&gt;
  summary: >-
    <p>Gets a list of agent pools in the specified managed cluster. Gets a list of agent pools in the specified managed cluster. The operation returns properties of each agent pool.</p>

    <p></p>
  syntax: public Observable<ServiceResponse<Page<AgentPoolInner>>> listWithServiceResponseAsync(final String resourceGroupName, final String resourceName)
  uid: com.microsoft.azure.management.containerservice.implementation.AgentPoolsInner.listWithServiceResponseAsync(final String,final String)
- fullName: com.microsoft.azure.management.containerservice.implementation.AgentPoolsInner.upgradeNodeImageVersion(String resourceGroupName, String resourceName, String agentPoolName)
  name: upgradeNodeImageVersion(String resourceGroupName, String resourceName, String agentPoolName)
  nameWithType: AgentPoolsInner.upgradeNodeImageVersion(String resourceGroupName, String resourceName, String agentPoolName)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the managed cluster resource. </p>
    name: resourceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the agent pool. </p>
    name: agentPoolName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="CloudException?alt=CloudException&text=CloudException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  returns:
    description: <p>the AgentPoolInner object if successful. </p>
    type: <xref href="com.microsoft.azure.management.containerservice.implementation.AgentPoolInner?alt=com.microsoft.azure.management.containerservice.implementation.AgentPoolInner&text=AgentPoolInner" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Upgrade node image version of an agent pool to the latest. Upgrade node image version of an agent pool to the latest.</p>

    <p></p>
  syntax: public AgentPoolInner upgradeNodeImageVersion(String resourceGroupName, String resourceName, String agentPoolName)
  uid: com.microsoft.azure.management.containerservice.implementation.AgentPoolsInner.upgradeNodeImageVersion(String,String,String)
- fullName: com.microsoft.azure.management.containerservice.implementation.AgentPoolsInner.upgradeNodeImageVersionAsync(String resourceGroupName, String resourceName, String agentPoolName)
  name: upgradeNodeImageVersionAsync(String resourceGroupName, String resourceName, String agentPoolName)
  nameWithType: AgentPoolsInner.upgradeNodeImageVersionAsync(String resourceGroupName, String resourceName, String agentPoolName)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the managed cluster resource. </p>
    name: resourceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the agent pool. </p>
    name: agentPoolName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable for the request </p>
    type: Observable&lt;<xref href="com.microsoft.azure.management.containerservice.implementation.AgentPoolInner?alt=com.microsoft.azure.management.containerservice.implementation.AgentPoolInner&text=AgentPoolInner" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Upgrade node image version of an agent pool to the latest. Upgrade node image version of an agent pool to the latest.</p>

    <p></p>
  syntax: public Observable<AgentPoolInner> upgradeNodeImageVersionAsync(String resourceGroupName, String resourceName, String agentPoolName)
  uid: com.microsoft.azure.management.containerservice.implementation.AgentPoolsInner.upgradeNodeImageVersionAsync(String,String,String)
- fullName: com.microsoft.azure.management.containerservice.implementation.AgentPoolsInner.upgradeNodeImageVersionAsync(String resourceGroupName, String resourceName, String agentPoolName, final ServiceCallback<AgentPoolInner> serviceCallback)
  name: upgradeNodeImageVersionAsync(String resourceGroupName, String resourceName, String agentPoolName, final ServiceCallback<AgentPoolInner> serviceCallback)
  nameWithType: AgentPoolsInner.upgradeNodeImageVersionAsync(String resourceGroupName, String resourceName, String agentPoolName, final ServiceCallback<AgentPoolInner> serviceCallback)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the managed cluster resource. </p>
    name: resourceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the agent pool. </p>
    name: agentPoolName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    name: serviceCallback
    type: final ServiceCallback&lt;<xref href="com.microsoft.azure.management.containerservice.implementation.AgentPoolInner?alt=com.microsoft.azure.management.containerservice.implementation.AgentPoolInner&text=AgentPoolInner" data-throw-if-not-resolved="False"/>&gt;
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
    type: ServiceFuture&lt;<xref href="com.microsoft.azure.management.containerservice.implementation.AgentPoolInner?alt=com.microsoft.azure.management.containerservice.implementation.AgentPoolInner&text=AgentPoolInner" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Upgrade node image version of an agent pool to the latest. Upgrade node image version of an agent pool to the latest.</p>

    <p></p>
  syntax: public ServiceFuture<AgentPoolInner> upgradeNodeImageVersionAsync(String resourceGroupName, String resourceName, String agentPoolName, final ServiceCallback<AgentPoolInner> serviceCallback)
  uid: com.microsoft.azure.management.containerservice.implementation.AgentPoolsInner.upgradeNodeImageVersionAsync(String,String,String,final ServiceCallback<AgentPoolInner>)
- fullName: com.microsoft.azure.management.containerservice.implementation.AgentPoolsInner.upgradeNodeImageVersionWithServiceResponseAsync(String resourceGroupName, String resourceName, String agentPoolName)
  name: upgradeNodeImageVersionWithServiceResponseAsync(String resourceGroupName, String resourceName, String agentPoolName)
  nameWithType: AgentPoolsInner.upgradeNodeImageVersionWithServiceResponseAsync(String resourceGroupName, String resourceName, String agentPoolName)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the managed cluster resource. </p>
    name: resourceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the agent pool. </p>
    name: agentPoolName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable for the request </p>
    type: Observable&lt;ServiceResponse&lt;<xref href="com.microsoft.azure.management.containerservice.implementation.AgentPoolInner?alt=com.microsoft.azure.management.containerservice.implementation.AgentPoolInner&text=AgentPoolInner" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Upgrade node image version of an agent pool to the latest. Upgrade node image version of an agent pool to the latest.</p>

    <p></p>
  syntax: public Observable<ServiceResponse<AgentPoolInner>> upgradeNodeImageVersionWithServiceResponseAsync(String resourceGroupName, String resourceName, String agentPoolName)
  uid: com.microsoft.azure.management.containerservice.implementation.AgentPoolsInner.upgradeNodeImageVersionWithServiceResponseAsync(String,String,String)
nameWithType: AgentPoolsInner
syntax: public class AgentPoolsInner
type: class
uid: com.microsoft.azure.management.containerservice.implementation.AgentPoolsInner
fullName: com.microsoft.azure.management.containerservice.implementation.AgentPoolsInner
name: AgentPoolsInner
package: com.microsoft.azure.management.containerservice.implementation
summary: <p>An instance of this class provides access to all the operations defined in AgentPools. </p>
metadata: {}
