### YamlMime:JavaType
constructors:
- fullName: com.microsoft.azure.sdk.iot.service.configurations.ConfigurationsClient.ConfigurationsClient(String connectionString)
  name: ConfigurationsClient(String connectionString)
  nameWithType: ConfigurationsClient.ConfigurationsClient(String connectionString)
  parameters:
  - description: <p>The iot hub connection string </p>
    name: connectionString
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Constructor to create instance from connection string</p>

    <p></p>
  syntax: public ConfigurationsClient(String connectionString)
  uid: com.microsoft.azure.sdk.iot.service.configurations.ConfigurationsClient.ConfigurationsClient(String)
- fullName: com.microsoft.azure.sdk.iot.service.configurations.ConfigurationsClient.ConfigurationsClient(String hostName, AzureSasCredential azureSasCredential)
  name: ConfigurationsClient(String hostName, AzureSasCredential azureSasCredential)
  nameWithType: ConfigurationsClient.ConfigurationsClient(String hostName, AzureSasCredential azureSasCredential)
  parameters:
  - description: <p>The hostname of your IoT Hub instance (For instance, "your-iot-hub.azure-devices.net") </p>
    name: hostName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The SAS token provider that will be used for authentication. </p>
    name: azureSasCredential
    type: <xref href="AzureSasCredential?alt=AzureSasCredential&text=AzureSasCredential" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Create a new ConfigurationsClient instance.</p>

    <p></p>
  syntax: public ConfigurationsClient(String hostName, AzureSasCredential azureSasCredential)
  uid: com.microsoft.azure.sdk.iot.service.configurations.ConfigurationsClient.ConfigurationsClient(String,AzureSasCredential)
- fullName: com.microsoft.azure.sdk.iot.service.configurations.ConfigurationsClient.ConfigurationsClient(String hostName, AzureSasCredential azureSasCredential, ConfigurationsClientOptions options)
  name: ConfigurationsClient(String hostName, AzureSasCredential azureSasCredential, ConfigurationsClientOptions options)
  nameWithType: ConfigurationsClient.ConfigurationsClient(String hostName, AzureSasCredential azureSasCredential, ConfigurationsClientOptions options)
  parameters:
  - description: <p>The hostname of your IoT Hub instance (For instance, "your-iot-hub.azure-devices.net") </p>
    name: hostName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The SAS token provider that will be used for authentication. </p>
    name: azureSasCredential
    type: <xref href="AzureSasCredential?alt=AzureSasCredential&text=AzureSasCredential" data-throw-if-not-resolved="False"/>
  - description: <p>The connection options to use when connecting to the service. </p>
    name: options
    type: <xref href="com.microsoft.azure.sdk.iot.service.configurations.ConfigurationsClientOptions?alt=com.microsoft.azure.sdk.iot.service.configurations.ConfigurationsClientOptions&text=ConfigurationsClientOptions" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Create a new ConfigurationsClient instance.</p>

    <p></p>
  syntax: public ConfigurationsClient(String hostName, AzureSasCredential azureSasCredential, ConfigurationsClientOptions options)
  uid: com.microsoft.azure.sdk.iot.service.configurations.ConfigurationsClient.ConfigurationsClient(String,AzureSasCredential,ConfigurationsClientOptions)
- fullName: com.microsoft.azure.sdk.iot.service.configurations.ConfigurationsClient.ConfigurationsClient(String connectionString, ConfigurationsClientOptions options)
  name: ConfigurationsClient(String connectionString, ConfigurationsClientOptions options)
  nameWithType: ConfigurationsClient.ConfigurationsClient(String connectionString, ConfigurationsClientOptions options)
  parameters:
  - description: <p>The iot hub connection string </p>
    name: connectionString
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The connection options to use when connecting to the service. </p>
    name: options
    type: <xref href="com.microsoft.azure.sdk.iot.service.configurations.ConfigurationsClientOptions?alt=com.microsoft.azure.sdk.iot.service.configurations.ConfigurationsClientOptions&text=ConfigurationsClientOptions" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Constructor to create instance from connection string</p>

    <p></p>
  syntax: public ConfigurationsClient(String connectionString, ConfigurationsClientOptions options)
  uid: com.microsoft.azure.sdk.iot.service.configurations.ConfigurationsClient.ConfigurationsClient(String,ConfigurationsClientOptions)
- fullName: com.microsoft.azure.sdk.iot.service.configurations.ConfigurationsClient.ConfigurationsClient(String hostName, TokenCredential credential)
  name: ConfigurationsClient(String hostName, TokenCredential credential)
  nameWithType: ConfigurationsClient.ConfigurationsClient(String hostName, TokenCredential credential)
  parameters:
  - description: <p>The hostname of your IoT Hub instance (For instance, "your-iot-hub.azure-devices.net") </p>
    name: hostName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The custom <xref uid="" data-throw-if-not-resolved="false" data-raw-source="TokenCredential"></xref> that will provide authentication tokens to this library when they are needed. The provided tokens must be Json Web Tokens. </p>
    name: credential
    type: <xref href="TokenCredential?alt=TokenCredential&text=TokenCredential" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Create a new ConfigurationsClient instance.</p>

    <p></p>
  syntax: public ConfigurationsClient(String hostName, TokenCredential credential)
  uid: com.microsoft.azure.sdk.iot.service.configurations.ConfigurationsClient.ConfigurationsClient(String,TokenCredential)
- fullName: com.microsoft.azure.sdk.iot.service.configurations.ConfigurationsClient.ConfigurationsClient(String hostName, TokenCredential credential, ConfigurationsClientOptions options)
  name: ConfigurationsClient(String hostName, TokenCredential credential, ConfigurationsClientOptions options)
  nameWithType: ConfigurationsClient.ConfigurationsClient(String hostName, TokenCredential credential, ConfigurationsClientOptions options)
  parameters:
  - description: <p>The hostname of your IoT Hub instance (For instance, "your-iot-hub.azure-devices.net") </p>
    name: hostName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The custom <xref uid="" data-throw-if-not-resolved="false" data-raw-source="TokenCredential"></xref> that will provide authentication tokens to this library when they are needed. The provided tokens must be Json Web Tokens. </p>
    name: credential
    type: <xref href="TokenCredential?alt=TokenCredential&text=TokenCredential" data-throw-if-not-resolved="False"/>
  - description: <p>The connection options to use when connecting to the service. </p>
    name: options
    type: <xref href="com.microsoft.azure.sdk.iot.service.configurations.ConfigurationsClientOptions?alt=com.microsoft.azure.sdk.iot.service.configurations.ConfigurationsClientOptions&text=ConfigurationsClientOptions" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Create a new ConfigurationsClient instance.</p>

    <p></p>
  syntax: public ConfigurationsClient(String hostName, TokenCredential credential, ConfigurationsClientOptions options)
  uid: com.microsoft.azure.sdk.iot.service.configurations.ConfigurationsClient.ConfigurationsClient(String,TokenCredential,ConfigurationsClientOptions)
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
methods:
- fullName: com.microsoft.azure.sdk.iot.service.configurations.ConfigurationsClient.applyConfigurationContentOnDevice(String deviceId, ConfigurationContent content)
  name: applyConfigurationContentOnDevice(String deviceId, ConfigurationContent content)
  nameWithType: ConfigurationsClient.applyConfigurationContentOnDevice(String deviceId, ConfigurationContent content)
  parameters:
  - description: <p>The device to apply the configuration to </p>
    name: deviceId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The configuration content to apply to the device </p>
    name: content
    type: <xref href="com.microsoft.azure.sdk.iot.service.configurations.ConfigurationContent?alt=com.microsoft.azure.sdk.iot.service.configurations.ConfigurationContent&text=ConfigurationContent" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
    description: <p>If the iot hub cannot be reached </p>
  - type: <xref href="IotHubException?alt=IotHubException&text=IotHubException" data-throw-if-not-resolved="False"/>
    description: <p>If the response from the hub was an error code. This exception will contain that code </p>
  summary: <p>Apply the provided configuration content to the provided device </p>
  syntax: public void applyConfigurationContentOnDevice(String deviceId, ConfigurationContent content)
  uid: com.microsoft.azure.sdk.iot.service.configurations.ConfigurationsClient.applyConfigurationContentOnDevice(String,ConfigurationContent)
- fullName: com.microsoft.azure.sdk.iot.service.configurations.ConfigurationsClient.create(Configuration configuration)
  name: create(Configuration configuration)
  nameWithType: ConfigurationsClient.create(Configuration configuration)
  parameters:
  - description: <p>The configuration object to create </p>
    name: configuration
    type: <xref href="com.microsoft.azure.sdk.iot.service.configurations.Configuration?alt=com.microsoft.azure.sdk.iot.service.configurations.Configuration&text=Configuration" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
    description: <p>This exception is thrown if the IO operation failed </p>
  - type: <xref href="IotHubException?alt=IotHubException&text=IotHubException" data-throw-if-not-resolved="False"/>
    description: <p>This exception is thrown if the response verification failed </p>
  returns:
    description: <p>The configuration object for the requested operation </p>
    type: <xref href="com.microsoft.azure.sdk.iot.service.configurations.Configuration?alt=com.microsoft.azure.sdk.iot.service.configurations.Configuration&text=Configuration" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Create a new configuration using the given Configuration object Return with the response configuration object from IotHub</p>

    <p></p>
  syntax: public Configuration create(Configuration configuration)
  uid: com.microsoft.azure.sdk.iot.service.configurations.ConfigurationsClient.create(Configuration)
- fullName: com.microsoft.azure.sdk.iot.service.configurations.ConfigurationsClient.delete(Configuration configuration)
  name: delete(Configuration configuration)
  nameWithType: ConfigurationsClient.delete(Configuration configuration)
  parameters:
  - description: <p>The configuration to be removed </p>
    name: configuration
    type: <xref href="com.microsoft.azure.sdk.iot.service.configurations.Configuration?alt=com.microsoft.azure.sdk.iot.service.configurations.Configuration&text=Configuration" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
    description: <p>This exception is thrown if the IO operation failed </p>
  - type: <xref href="IotHubException?alt=IotHubException&text=IotHubException" data-throw-if-not-resolved="False"/>
    description: <p>This exception is thrown if the response verification failed </p>
  summary: >-
    <p>Send remove configuration request and verify response</p>

    <p></p>
  syntax: public void delete(Configuration configuration)
  uid: com.microsoft.azure.sdk.iot.service.configurations.ConfigurationsClient.delete(Configuration)
- fullName: com.microsoft.azure.sdk.iot.service.configurations.ConfigurationsClient.delete(String configurationId)
  name: delete(String configurationId)
  nameWithType: ConfigurationsClient.delete(String configurationId)
  parameters:
  - description: <p>The configuration to be removed </p>
    name: configurationId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
    description: <p>This exception is thrown if the IO operation failed </p>
  - type: <xref href="IotHubException?alt=IotHubException&text=IotHubException" data-throw-if-not-resolved="False"/>
    description: <p>This exception is thrown if the response verification failed </p>
  summary: >-
    <p>Send remove configuration request and verify response</p>

    <p></p>
  syntax: public void delete(String configurationId)
  uid: com.microsoft.azure.sdk.iot.service.configurations.ConfigurationsClient.delete(String)
- fullName: com.microsoft.azure.sdk.iot.service.configurations.ConfigurationsClient.get(int maxCount)
  name: get(int maxCount)
  nameWithType: ConfigurationsClient.get(int maxCount)
  parameters:
  - description: <p>The requested count of configurations </p>
    name: maxCount
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
    description: <p>This exception is thrown if the IO operation failed </p>
  - type: <xref href="IotHubException?alt=IotHubException&text=IotHubException" data-throw-if-not-resolved="False"/>
    description: <p>This exception is thrown if the response verification failed </p>
  returns:
    description: <p>The array of requested configuration objects </p>
    type: List&lt;<xref href="com.microsoft.azure.sdk.iot.service.configurations.Configuration?alt=com.microsoft.azure.sdk.iot.service.configurations.Configuration&text=Configuration" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Get list of Configuration</p>

    <p></p>
  syntax: public List<Configuration> get(int maxCount)
  uid: com.microsoft.azure.sdk.iot.service.configurations.ConfigurationsClient.get(int)
- fullName: com.microsoft.azure.sdk.iot.service.configurations.ConfigurationsClient.get(String configurationId)
  name: get(String configurationId)
  nameWithType: ConfigurationsClient.get(String configurationId)
  parameters:
  - description: <p>The id of requested configuration </p>
    name: configurationId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
    description: <p>This exception is thrown if the IO operation failed </p>
  - type: <xref href="IotHubException?alt=IotHubException&text=IotHubException" data-throw-if-not-resolved="False"/>
    description: <p>This exception is thrown if the response verification failed </p>
  returns:
    description: <p>The configuration object of requested configuration on the specific device </p>
    type: <xref href="com.microsoft.azure.sdk.iot.service.configurations.Configuration?alt=com.microsoft.azure.sdk.iot.service.configurations.Configuration&text=Configuration" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get configuration by configuration Id from IotHub</p>

    <p></p>
  syntax: public Configuration get(String configurationId)
  uid: com.microsoft.azure.sdk.iot.service.configurations.ConfigurationsClient.get(String)
- fullName: com.microsoft.azure.sdk.iot.service.configurations.ConfigurationsClient.replace(Configuration configuration)
  name: replace(Configuration configuration)
  nameWithType: ConfigurationsClient.replace(Configuration configuration)
  parameters:
  - description: <p>The configuration object containing updated data </p>
    name: configuration
    type: <xref href="com.microsoft.azure.sdk.iot.service.configurations.Configuration?alt=com.microsoft.azure.sdk.iot.service.configurations.Configuration&text=Configuration" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
    description: <p>This exception is thrown if the IO operation failed </p>
  - type: <xref href="IotHubException?alt=IotHubException&text=IotHubException" data-throw-if-not-resolved="False"/>
    description: <p>This exception is thrown if the response verification failed </p>
  returns:
    description: <p>The updated configuration object </p>
    type: <xref href="com.microsoft.azure.sdk.iot.service.configurations.Configuration?alt=com.microsoft.azure.sdk.iot.service.configurations.Configuration&text=Configuration" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Update configuration not forced</p>

    <p></p>
  syntax: public Configuration replace(Configuration configuration)
  uid: com.microsoft.azure.sdk.iot.service.configurations.ConfigurationsClient.replace(Configuration)
nameWithType: ConfigurationsClient
syntax: public class ConfigurationsClient
type: class
uid: com.microsoft.azure.sdk.iot.service.configurations.ConfigurationsClient
fullName: com.microsoft.azure.sdk.iot.service.configurations.ConfigurationsClient
name: ConfigurationsClient
package: com.microsoft.azure.sdk.iot.service.configurations
summary: <p>The client for creating, updating, getting and deleting configurations. </p>
metadata: {}
