### YamlMime:JavaType
methods:
- fullName: com.microsoft.azure.eventhubs.EventPosition.fromEndOfStream()
  name: fromEndOfStream()
  nameWithType: EventPosition.fromEndOfStream()
  returns:
    description: <p>An <xref uid="com.microsoft.azure.eventhubs.EventPosition" data-throw-if-not-resolved="false" data-raw-source="EventPosition"></xref> set to the end of an Event Hubs stream. </p>
    type: <xref href="com.microsoft.azure.eventhubs.EventPosition?alt=com.microsoft.azure.eventhubs.EventPosition&text=EventPosition" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Returns the position for the end of a stream. Provide this position in receiver creation to start receiving from the next available event in the partition after the receiver is created.</p>

    <p></p>
  syntax: public static EventPosition fromEndOfStream()
  uid: com.microsoft.azure.eventhubs.EventPosition.fromEndOfStream()
- fullName: com.microsoft.azure.eventhubs.EventPosition.fromEnqueuedTime(Instant dateTime)
  name: fromEnqueuedTime(Instant dateTime)
  nameWithType: EventPosition.fromEnqueuedTime(Instant dateTime)
  parameters:
  - description: <p>is the enqueued time of the event. </p>
    name: dateTime
    type: <xref href="Instant?alt=Instant&text=Instant" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>An <xref uid="com.microsoft.azure.eventhubs.EventPosition" data-throw-if-not-resolved="false" data-raw-source="EventPosition"></xref> object. </p>
    type: <xref href="com.microsoft.azure.eventhubs.EventPosition?alt=com.microsoft.azure.eventhubs.EventPosition&text=EventPosition" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Creates a position at the given <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Instant"></xref>.</p>

    <p></p>
  syntax: public static EventPosition fromEnqueuedTime(Instant dateTime)
  uid: com.microsoft.azure.eventhubs.EventPosition.fromEnqueuedTime(Instant)
- fullName: com.microsoft.azure.eventhubs.EventPosition.fromOffset(String offset)
  name: fromOffset(String offset)
  nameWithType: EventPosition.fromOffset(String offset)
  parameters:
  - description: <p>is the byte offset of the event. </p>
    name: offset
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>An <xref uid="com.microsoft.azure.eventhubs.EventPosition" data-throw-if-not-resolved="false" data-raw-source="EventPosition"></xref> object. </p>
    type: <xref href="com.microsoft.azure.eventhubs.EventPosition?alt=com.microsoft.azure.eventhubs.EventPosition&text=EventPosition" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Creates a position at the given offset. The specified event will not be included. Instead, the next event is returned.</p>

    <p></p>
  syntax: public static EventPosition fromOffset(String offset)
  uid: com.microsoft.azure.eventhubs.EventPosition.fromOffset(String)
- fullName: com.microsoft.azure.eventhubs.EventPosition.fromOffset(String offset, boolean inclusiveFlag)
  name: fromOffset(String offset, boolean inclusiveFlag)
  nameWithType: EventPosition.fromOffset(String offset, boolean inclusiveFlag)
  parameters:
  - description: <p>is the byte offset of the event. </p>
    name: offset
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>will include the specified event when set to true; otherwise, the next event is returned. </p>
    name: inclusiveFlag
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>An <xref uid="com.microsoft.azure.eventhubs.EventPosition" data-throw-if-not-resolved="false" data-raw-source="EventPosition"></xref> object. </p>
    type: <xref href="com.microsoft.azure.eventhubs.EventPosition?alt=com.microsoft.azure.eventhubs.EventPosition&text=EventPosition" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Creates a position at the given offset.</p>

    <p></p>
  syntax: public static EventPosition fromOffset(String offset, boolean inclusiveFlag)
  uid: com.microsoft.azure.eventhubs.EventPosition.fromOffset(String,boolean)
- fullName: com.microsoft.azure.eventhubs.EventPosition.fromSequenceNumber(Long sequenceNumber)
  name: fromSequenceNumber(Long sequenceNumber)
  nameWithType: EventPosition.fromSequenceNumber(Long sequenceNumber)
  parameters:
  - description: <p>is the sequence number of the event. </p>
    name: sequenceNumber
    type: <xref href="Long?alt=Long&text=Long" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>An <xref uid="com.microsoft.azure.eventhubs.EventPosition" data-throw-if-not-resolved="false" data-raw-source="EventPosition"></xref> object. </p>
    type: <xref href="com.microsoft.azure.eventhubs.EventPosition?alt=com.microsoft.azure.eventhubs.EventPosition&text=EventPosition" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Creates a position at the given sequence number. The specified event will not be included. Instead, the next event is returned.</p>

    <p></p>
  syntax: public static EventPosition fromSequenceNumber(Long sequenceNumber)
  uid: com.microsoft.azure.eventhubs.EventPosition.fromSequenceNumber(Long)
- fullName: com.microsoft.azure.eventhubs.EventPosition.fromSequenceNumber(Long sequenceNumber, boolean inclusiveFlag)
  name: fromSequenceNumber(Long sequenceNumber, boolean inclusiveFlag)
  nameWithType: EventPosition.fromSequenceNumber(Long sequenceNumber, boolean inclusiveFlag)
  parameters:
  - description: <p>is the sequence number of the event. </p>
    name: sequenceNumber
    type: <xref href="Long?alt=Long&text=Long" data-throw-if-not-resolved="False"/>
  - description: <p>will include the specified event when set to true; otherwise, the next event is returned. </p>
    name: inclusiveFlag
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>An <xref uid="com.microsoft.azure.eventhubs.EventPosition" data-throw-if-not-resolved="false" data-raw-source="EventPosition"></xref> object. </p>
    type: <xref href="com.microsoft.azure.eventhubs.EventPosition?alt=com.microsoft.azure.eventhubs.EventPosition&text=EventPosition" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Creates a position at the given sequence number. The specified event will not be included. Instead, the next event is returned.</p>

    <p></p>
  syntax: public static EventPosition fromSequenceNumber(Long sequenceNumber, boolean inclusiveFlag)
  uid: com.microsoft.azure.eventhubs.EventPosition.fromSequenceNumber(Long,boolean)
- fullName: com.microsoft.azure.eventhubs.EventPosition.fromStartOfStream()
  name: fromStartOfStream()
  nameWithType: EventPosition.fromStartOfStream()
  returns:
    description: <p>An <xref uid="com.microsoft.azure.eventhubs.EventPosition" data-throw-if-not-resolved="false" data-raw-source="EventPosition"></xref> set to the start of an Event Hubs stream. </p>
    type: <xref href="com.microsoft.azure.eventhubs.EventPosition?alt=com.microsoft.azure.eventhubs.EventPosition&text=EventPosition" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Returns the position for the start of a stream. Provide this position in receiver creation to start receiving from the first available event in the partition.</p>

    <p></p>
  syntax: public static EventPosition fromStartOfStream()
  uid: com.microsoft.azure.eventhubs.EventPosition.fromStartOfStream()
- fullName: com.microsoft.azure.eventhubs.EventPosition.getEnqueuedTime()
  name: getEnqueuedTime()
  nameWithType: EventPosition.getEnqueuedTime()
  returns:
    description: <p>the enqueued time. </p>
    type: <xref href="Instant?alt=Instant&text=Instant" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the enqueued time. </p>

    <p></p>
  syntax: public Instant getEnqueuedTime()
  uid: com.microsoft.azure.eventhubs.EventPosition.getEnqueuedTime()
- fullName: com.microsoft.azure.eventhubs.EventPosition.getInclusiveFlag()
  name: getInclusiveFlag()
  nameWithType: EventPosition.getInclusiveFlag()
  returns:
    description: <p>the inclusive value. </p>
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the inclusive value. </p>

    <p></p>
  syntax: public boolean getInclusiveFlag()
  uid: com.microsoft.azure.eventhubs.EventPosition.getInclusiveFlag()
- fullName: com.microsoft.azure.eventhubs.EventPosition.getOffset()
  name: getOffset()
  nameWithType: EventPosition.getOffset()
  returns:
    description: <p>the offset. </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the offset. </p>

    <p></p>
  syntax: public String getOffset()
  uid: com.microsoft.azure.eventhubs.EventPosition.getOffset()
- fullName: com.microsoft.azure.eventhubs.EventPosition.getSequenceNumber()
  name: getSequenceNumber()
  nameWithType: EventPosition.getSequenceNumber()
  returns:
    description: <p>the sequence number. </p>
    type: <xref href="Long?alt=Long&text=Long" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the sequence number. </p>

    <p></p>
  syntax: public Long getSequenceNumber()
  uid: com.microsoft.azure.eventhubs.EventPosition.getSequenceNumber()
nameWithType: EventPosition
syntax: public interface EventPosition
type: interface
uid: com.microsoft.azure.eventhubs.EventPosition
fullName: com.microsoft.azure.eventhubs.EventPosition
name: EventPosition
package: com.microsoft.azure.eventhubs
summary: <p>Defines a position of an <xref uid="com.microsoft.azure.eventhubs.EventData" data-throw-if-not-resolved="false" data-raw-source="EventData"></xref> in the event hub partition. The position can be an Offset, Sequence Number, or EnqueuedTime. </p>
metadata: {}
