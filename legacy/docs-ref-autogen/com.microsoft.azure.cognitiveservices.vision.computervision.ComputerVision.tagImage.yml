### YamlMime:JavaMember
nameWithType: ComputerVision.tagImage
type: method
members:
- fullName: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.tagImage()
  name: tagImage()
  nameWithType: ComputerVision.tagImage()
  returns:
    description: <p>the first stage of the tagImage call </p>
    type: <xref href="ComputerVisionTagImageDefinitionStages.WithUrl?alt=ComputerVisionTagImageDefinitionStages.WithUrl&text=ComputerVisionTagImageDefinitionStages.WithUrl" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>This operation generates a list of words, or tags, that are relevant to the content of the supplied image. The Computer Vision API can return tags based on objects, living beings, scenery or actions found in images. Unlike categories, tags are not organized according to a hierarchical classification system, but correspond to image content. Tags may contain hints to avoid ambiguity or provide context, for example the tag "ascomycete" may be accompanied by the hint "fungus". Two input methods are supported <ndash></ndash> (1) Uploading an image or (2) specifying an image URL. A successful response will be returned in JSON. If the request failed, the response will contain an error code and a message to help understand what went wrong.</p>

    <p></p>
  syntax: public ComputerVisionTagImageDefinitionStages.WithUrl tagImage()
  uid: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.tagImage()
- fullName: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.tagImage(String url, TagImageOptionalParameter tagImageOptionalParameter)
  name: tagImage(String url, TagImageOptionalParameter tagImageOptionalParameter)
  nameWithType: ComputerVision.tagImage(String url, TagImageOptionalParameter tagImageOptionalParameter)
  parameters:
  - description: <p>Publicly reachable URL of an image. </p>
    name: url
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the object representing the optional parameters to be set before calling this API </p>
    name: tagImageOptionalParameter
    type: <xref href="com.microsoft.azure.cognitiveservices.vision.computervision.models.TagImageOptionalParameter?alt=com.microsoft.azure.cognitiveservices.vision.computervision.models.TagImageOptionalParameter&text=TagImageOptionalParameter" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="ComputerVisionErrorException?alt=ComputerVisionErrorException&text=ComputerVisionErrorException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  returns:
    description: <p>the TagResult object if successful. </p>
    type: <xref href="com.microsoft.azure.cognitiveservices.vision.computervision.models.TagResult?alt=com.microsoft.azure.cognitiveservices.vision.computervision.models.TagResult&text=TagResult" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>This operation generates a list of words, or tags, that are relevant to the content of the supplied image. The Computer Vision API can return tags based on objects, living beings, scenery or actions found in images. Unlike categories, tags are not organized according to a hierarchical classification system, but correspond to image content. Tags may contain hints to avoid ambiguity or provide context, for example the tag "ascomycete" may be accompanied by the hint "fungus". Two input methods are supported <ndash></ndash> (1) Uploading an image or (2) specifying an image URL. A successful response will be returned in JSON. If the request failed, the response will contain an error code and a message to help understand what went wrong.</p>

    <p></p>
  syntax: public TagResult tagImage(String url, TagImageOptionalParameter tagImageOptionalParameter)
  uid: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.tagImage(String,TagImageOptionalParameter)
uid: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.tagImage*
fullName: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.tagImage
name: tagImage()
package: com.microsoft.azure.cognitiveservices.vision.computervision
metadata: {}
