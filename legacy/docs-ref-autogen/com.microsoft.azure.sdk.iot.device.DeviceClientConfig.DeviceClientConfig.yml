### YamlMime:JavaMember
nameWithType: DeviceClientConfig.DeviceClientConfig
type: constructor
members:
- fullName: com.microsoft.azure.sdk.iot.device.DeviceClientConfig.DeviceClientConfig()
  name: DeviceClientConfig()
  nameWithType: DeviceClientConfig.DeviceClientConfig()
  syntax: protected DeviceClientConfig()
  uid: com.microsoft.azure.sdk.iot.device.DeviceClientConfig.DeviceClientConfig()
- fullName: com.microsoft.azure.sdk.iot.device.DeviceClientConfig.DeviceClientConfig(IotHubAuthenticationProvider authenticationProvider)
  name: DeviceClientConfig(IotHubAuthenticationProvider authenticationProvider)
  nameWithType: DeviceClientConfig.DeviceClientConfig(IotHubAuthenticationProvider authenticationProvider)
  parameters:
  - name: authenticationProvider
    type: <xref href="com.microsoft.azure.sdk.iot.device.auth.IotHubAuthenticationProvider?alt=com.microsoft.azure.sdk.iot.device.auth.IotHubAuthenticationProvider&text=IotHubAuthenticationProvider" data-throw-if-not-resolved="False"/>
  syntax: public DeviceClientConfig(IotHubAuthenticationProvider authenticationProvider)
  uid: com.microsoft.azure.sdk.iot.device.DeviceClientConfig.DeviceClientConfig(IotHubAuthenticationProvider)
- fullName: com.microsoft.azure.sdk.iot.device.DeviceClientConfig.DeviceClientConfig(IotHubConnectionString iotHubConnectionString)
  name: DeviceClientConfig(IotHubConnectionString iotHubConnectionString)
  nameWithType: DeviceClientConfig.DeviceClientConfig(IotHubConnectionString iotHubConnectionString)
  parameters:
  - description: <p>is the string with the hostname, deviceId, and deviceKey or token, which identify the device in the Azure IotHub.</p>
    name: iotHubConnectionString
    type: <xref href="com.microsoft.azure.sdk.iot.device.IotHubConnectionString?alt=com.microsoft.azure.sdk.iot.device.IotHubConnectionString&text=IotHubConnectionString" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>if the IoT Hub hostname does not contain a valid IoT Hub name as its prefix. </p>
  summary: >-
    <p>Constructor</p>

    <p></p>
  syntax: public DeviceClientConfig(IotHubConnectionString iotHubConnectionString)
  uid: com.microsoft.azure.sdk.iot.device.DeviceClientConfig.DeviceClientConfig(IotHubConnectionString)
- fullName: com.microsoft.azure.sdk.iot.device.DeviceClientConfig.DeviceClientConfig(IotHubConnectionString iotHubConnectionString, SSLContext sslContext)
  name: DeviceClientConfig(IotHubConnectionString iotHubConnectionString, SSLContext sslContext)
  nameWithType: DeviceClientConfig.DeviceClientConfig(IotHubConnectionString iotHubConnectionString, SSLContext sslContext)
  parameters:
  - name: iotHubConnectionString
    type: <xref href="com.microsoft.azure.sdk.iot.device.IotHubConnectionString?alt=com.microsoft.azure.sdk.iot.device.IotHubConnectionString&text=IotHubConnectionString" data-throw-if-not-resolved="False"/>
  - name: sslContext
    type: <xref href="SSLContext?alt=SSLContext&text=SSLContext" data-throw-if-not-resolved="False"/>
  syntax: public DeviceClientConfig(IotHubConnectionString iotHubConnectionString, SSLContext sslContext)
  uid: com.microsoft.azure.sdk.iot.device.DeviceClientConfig.DeviceClientConfig(IotHubConnectionString,SSLContext)
- fullName: com.microsoft.azure.sdk.iot.device.DeviceClientConfig.DeviceClientConfig(IotHubConnectionString iotHubConnectionString, String publicKeyCertificate, boolean isPathForPublic, String privateKey, boolean isPathForPrivate)
  name: DeviceClientConfig(IotHubConnectionString iotHubConnectionString, String publicKeyCertificate, boolean isPathForPublic, String privateKey, boolean isPathForPrivate)
  nameWithType: DeviceClientConfig.DeviceClientConfig(IotHubConnectionString iotHubConnectionString, String publicKeyCertificate, boolean isPathForPublic, String privateKey, boolean isPathForPrivate)
  parameters:
  - description: '<p>The connection string for the device. (format: "HostName=...;deviceId=...;x509=true") </p>'
    name: iotHubConnectionString
    type: <xref href="com.microsoft.azure.sdk.iot.device.IotHubConnectionString?alt=com.microsoft.azure.sdk.iot.device.IotHubConnectionString&text=IotHubConnectionString" data-throw-if-not-resolved="False"/>
  - description: <p>The PEM encoded public key certificate or the path to the PEM encoded public key certificate file </p>
    name: publicKeyCertificate
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>If the provided publicKeyCertificate is a path to the actual public key certificate </p>
    name: isPathForPublic
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False"/>
  - description: <p>The PEM encoded private key or the path to the PEM encoded private key file </p>
    name: privateKey
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>If the provided privateKey is a path to the actual private key </p>
    name: isPathForPrivate
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Constructor for device configs that use x509 authentication</p>

    <p></p>
  syntax: public DeviceClientConfig(IotHubConnectionString iotHubConnectionString, String publicKeyCertificate, boolean isPathForPublic, String privateKey, boolean isPathForPrivate)
  uid: com.microsoft.azure.sdk.iot.device.DeviceClientConfig.DeviceClientConfig(IotHubConnectionString,String,boolean,String,boolean)
uid: com.microsoft.azure.sdk.iot.device.DeviceClientConfig.DeviceClientConfig*
fullName: com.microsoft.azure.sdk.iot.device.DeviceClientConfig.DeviceClientConfig
name: DeviceClientConfig
package: com.microsoft.azure.sdk.iot.device
metadata: {}
