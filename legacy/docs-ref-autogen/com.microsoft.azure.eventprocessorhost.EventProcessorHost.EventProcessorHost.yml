### YamlMime:JavaMember
nameWithType: EventProcessorHost.EventProcessorHost
type: constructor
members:
- fullName: com.microsoft.azure.eventprocessorhost.EventProcessorHost.EventProcessorHost(final String hostName, final String eventHubPath, final String consumerGroupName, final String eventHubConnectionString, final String storageConnectionString, final String storageContainerName)
  name: EventProcessorHost(final String hostName, final String eventHubPath, final String consumerGroupName, final String eventHubConnectionString, final String storageConnectionString, final String storageContainerName)
  nameWithType: EventProcessorHost.EventProcessorHost(final String hostName, final String eventHubPath, final String consumerGroupName, final String eventHubConnectionString, final String storageConnectionString, final String storageContainerName)
  parameters:
  - description: <p>A name for this event processor host. See method notes. </p>
    name: hostName
    type: <xref href="final+String?alt=final String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>Specifies the Event Hub to receive events from. </p>
    name: eventHubPath
    type: <xref href="final+String?alt=final String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the consumer group to use when receiving from the Event Hub. </p>
    name: consumerGroupName
    type: <xref href="final+String?alt=final String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>Connection string for the Event Hub to receive from. </p>
    name: eventHubConnectionString
    type: <xref href="final+String?alt=final String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>Connection string for the Azure Storage account to use for persisting leases and checkpoints. </p>
    name: storageConnectionString
    type: <xref href="final+String?alt=final String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>Azure Storage container name for use by built-in lease and checkpoint manager. </p>
    name: storageContainerName
    type: <xref href="final+String?alt=final String&text=final+String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Create a new host instance to process events from an Event Hub. </p>

    <p>Since Event Hubs are generally used for scale-out, high-traffic scenarios, in most scenarios there will be only one host instances per process, and the processes will be run on separate machines. Besides scale, this also provides isolation: one process or machine crashing will not take out multiple host instances. However, it is supported to run multiple host instances on one machine, or even within one process, for development and testing. </p>

    <p>The hostName parameter is a name for this event processor host, which must be unique among all event processor host instances receiving from this event hub+consumer group combination: the unique name is used to distinguish which event processor host instance owns the lease for a given partition. An easy way to generate a unique hostName which also includes other information is to call EventProcessorHost.createHostName("mystring"). </p>

    <p>This overload of the constructor uses the built-in lease and checkpoint managers. The Azure Storage account specified by the storageConnectionString parameter is used by the built-in managers to record leases and checkpoints, in the specified container. </p>

    <p>The Event Hub connection string may be conveniently constructed using the ConnectionStringBuilder class from the Java Event Hub client.</p>

    <p></p>
  syntax: public EventProcessorHost(final String hostName, final String eventHubPath, final String consumerGroupName, final String eventHubConnectionString, final String storageConnectionString, final String storageContainerName)
  uid: com.microsoft.azure.eventprocessorhost.EventProcessorHost.EventProcessorHost(final String,final String,final String,final String,final String,final String)
- fullName: com.microsoft.azure.eventprocessorhost.EventProcessorHost.EventProcessorHost(final String hostName, final String eventHubPath, final String consumerGroupName, final String eventHubConnectionString, final String storageConnectionString, final String storageContainerName, final ScheduledExecutorService executorService)
  name: EventProcessorHost(final String hostName, final String eventHubPath, final String consumerGroupName, final String eventHubConnectionString, final String storageConnectionString, final String storageContainerName, final ScheduledExecutorService executorService)
  nameWithType: EventProcessorHost.EventProcessorHost(final String hostName, final String eventHubPath, final String consumerGroupName, final String eventHubConnectionString, final String storageConnectionString, final String storageContainerName, final ScheduledExecutorService executorService)
  parameters:
  - description: <p>A name for this event processor host. See method notes. </p>
    name: hostName
    type: <xref href="final+String?alt=final String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>Specifies the Event Hub to receive events from. </p>
    name: eventHubPath
    type: <xref href="final+String?alt=final String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the consumer group to use when receiving from the Event Hub. </p>
    name: consumerGroupName
    type: <xref href="final+String?alt=final String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>Connection string for the Event Hub to receive from. </p>
    name: eventHubConnectionString
    type: <xref href="final+String?alt=final String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>Connection string for the Azure Storage account to use for persisting leases and checkpoints. </p>
    name: storageConnectionString
    type: <xref href="final+String?alt=final String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>Azure Storage container name for use by built-in lease and checkpoint manager. </p>
    name: storageContainerName
    type: <xref href="final+String?alt=final String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>User-supplied thread executor, or null to use EventProcessorHost-internal executor. </p>
    name: executorService
    type: <xref href="final+ScheduledExecutorService?alt=final ScheduledExecutorService&text=final+ScheduledExecutorService" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Create a new host to process events from an Event Hub. </p>

    <p>This overload adds an argument to specify a user-provided thread pool. The number of partitions in the target event hub and the number of host instances should be considered when choosing the size of the thread pool: how many partitions is one instance expected to own under normal circumstances? One thread per partition should provide good performance, while being able to support more partitions adequately if a host instance fails and its partitions must be redistributed.</p>

    <p></p>
  syntax: public EventProcessorHost(final String hostName, final String eventHubPath, final String consumerGroupName, final String eventHubConnectionString, final String storageConnectionString, final String storageContainerName, final ScheduledExecutorService executorService)
  uid: com.microsoft.azure.eventprocessorhost.EventProcessorHost.EventProcessorHost(final String,final String,final String,final String,final String,final String,final ScheduledExecutorService)
- fullName: com.microsoft.azure.eventprocessorhost.EventProcessorHost.EventProcessorHost(final String hostName, final String eventHubPath, final String consumerGroupName, final String eventHubConnectionString, final String storageConnectionString, final String storageContainerName, final String storageBlobPrefix)
  name: EventProcessorHost(final String hostName, final String eventHubPath, final String consumerGroupName, final String eventHubConnectionString, final String storageConnectionString, final String storageContainerName, final String storageBlobPrefix)
  nameWithType: EventProcessorHost.EventProcessorHost(final String hostName, final String eventHubPath, final String consumerGroupName, final String eventHubConnectionString, final String storageConnectionString, final String storageContainerName, final String storageBlobPrefix)
  parameters:
  - description: <p>A name for this event processor host. See method notes. </p>
    name: hostName
    type: <xref href="final+String?alt=final String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>Specifies the Event Hub to receive events from. </p>
    name: eventHubPath
    type: <xref href="final+String?alt=final String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the consumer group to use when receiving from the Event Hub. </p>
    name: consumerGroupName
    type: <xref href="final+String?alt=final String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>Connection string for the Event Hub to receive from. </p>
    name: eventHubConnectionString
    type: <xref href="final+String?alt=final String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>Connection string for the Azure Storage account to use for persisting leases and checkpoints. </p>
    name: storageConnectionString
    type: <xref href="final+String?alt=final String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>Azure Storage container name for use by built-in lease and checkpoint manager. </p>
    name: storageContainerName
    type: <xref href="final+String?alt=final String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>Prefix used when naming blobs within the storage container. </p>
    name: storageBlobPrefix
    type: <xref href="final+String?alt=final String&text=final+String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Create a new host to process events from an Event Hub. </p>

    <p>This overload adds an argument to specify a prefix used by the built-in lease manager when naming blobs in Azure Storage.</p>

    <p></p>
  syntax: public EventProcessorHost(final String hostName, final String eventHubPath, final String consumerGroupName, final String eventHubConnectionString, final String storageConnectionString, final String storageContainerName, final String storageBlobPrefix)
  uid: com.microsoft.azure.eventprocessorhost.EventProcessorHost.EventProcessorHost(final String,final String,final String,final String,final String,final String,final String)
- fullName: com.microsoft.azure.eventprocessorhost.EventProcessorHost.EventProcessorHost(final String hostName, final String eventHubPath, final String consumerGroupName, final String eventHubConnectionString, final String storageConnectionString, final String storageContainerName, final String storageBlobPrefix, final ScheduledExecutorService executorService)
  name: EventProcessorHost(final String hostName, final String eventHubPath, final String consumerGroupName, final String eventHubConnectionString, final String storageConnectionString, final String storageContainerName, final String storageBlobPrefix, final ScheduledExecutorService executorService)
  nameWithType: EventProcessorHost.EventProcessorHost(final String hostName, final String eventHubPath, final String consumerGroupName, final String eventHubConnectionString, final String storageConnectionString, final String storageContainerName, final String storageBlobPrefix, final ScheduledExecutorService executorService)
  parameters:
  - description: <p>A name for this event processor host. See method notes. </p>
    name: hostName
    type: <xref href="final+String?alt=final String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>Specifies the Event Hub to receive events from. </p>
    name: eventHubPath
    type: <xref href="final+String?alt=final String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the consumer group to use when receiving from the Event Hub. </p>
    name: consumerGroupName
    type: <xref href="final+String?alt=final String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>Connection string for the Event Hub to receive from. </p>
    name: eventHubConnectionString
    type: <xref href="final+String?alt=final String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>Connection string for the Azure Storage account to use for persisting leases and checkpoints. </p>
    name: storageConnectionString
    type: <xref href="final+String?alt=final String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>Azure Storage container name for use by built-in lease and checkpoint manager. </p>
    name: storageContainerName
    type: <xref href="final+String?alt=final String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>Prefix used when naming blobs within the storage container. </p>
    name: storageBlobPrefix
    type: <xref href="final+String?alt=final String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>User-supplied thread executor, or null to use EventProcessorHost-internal executor. </p>
    name: executorService
    type: <xref href="final+ScheduledExecutorService?alt=final ScheduledExecutorService&text=final+ScheduledExecutorService" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Create a new host to process events from an Event Hub. </p>

    <p>This overload allows the caller to specify both a user-supplied thread pool and a prefix used by the built-in lease manager when naming blobs in Azure Storage.</p>

    <p></p>
  syntax: public EventProcessorHost(final String hostName, final String eventHubPath, final String consumerGroupName, final String eventHubConnectionString, final String storageConnectionString, final String storageContainerName, final String storageBlobPrefix, final ScheduledExecutorService executorService)
  uid: com.microsoft.azure.eventprocessorhost.EventProcessorHost.EventProcessorHost(final String,final String,final String,final String,final String,final String,final String,final ScheduledExecutorService)
- fullName: com.microsoft.azure.eventprocessorhost.EventProcessorHost.EventProcessorHost(final String hostName, final String eventHubPath, final String consumerGroupName, final String eventHubConnectionString, ICheckpointManager checkpointManager, ILeaseManager leaseManager)
  name: EventProcessorHost(final String hostName, final String eventHubPath, final String consumerGroupName, final String eventHubConnectionString, ICheckpointManager checkpointManager, ILeaseManager leaseManager)
  nameWithType: EventProcessorHost.EventProcessorHost(final String hostName, final String eventHubPath, final String consumerGroupName, final String eventHubConnectionString, ICheckpointManager checkpointManager, ILeaseManager leaseManager)
  parameters:
  - description: <p>A name for this event processor host. See method notes. </p>
    name: hostName
    type: <xref href="final+String?alt=final String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>Specifies the Event Hub to receive events from. </p>
    name: eventHubPath
    type: <xref href="final+String?alt=final String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the consumer group to use when receiving from the Event Hub. </p>
    name: consumerGroupName
    type: <xref href="final+String?alt=final String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>Connection string for the Event Hub to receive from. </p>
    name: eventHubConnectionString
    type: <xref href="final+String?alt=final String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>Implementation of ICheckpointManager, to be replacement checkpoint manager. </p>
    name: checkpointManager
    type: <xref href="com.microsoft.azure.eventprocessorhost.ICheckpointManager?alt=com.microsoft.azure.eventprocessorhost.ICheckpointManager&text=ICheckpointManager" data-throw-if-not-resolved="False"/>
  - description: <p>Implementation of ILeaseManager, to be replacement lease manager. </p>
    name: leaseManager
    type: <xref href="com.microsoft.azure.eventprocessorhost.ILeaseManager?alt=com.microsoft.azure.eventprocessorhost.ILeaseManager&text=ILeaseManager" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Create a new host to process events from an Event Hub. </p>

    <p>This overload allows the caller to provide their own lease and checkpoint managers to replace the built-in ones based on Azure Storage.</p>

    <p></p>
  syntax: public EventProcessorHost(final String hostName, final String eventHubPath, final String consumerGroupName, final String eventHubConnectionString, ICheckpointManager checkpointManager, ILeaseManager leaseManager)
  uid: com.microsoft.azure.eventprocessorhost.EventProcessorHost.EventProcessorHost(final String,final String,final String,final String,ICheckpointManager,ILeaseManager)
- fullName: com.microsoft.azure.eventprocessorhost.EventProcessorHost.EventProcessorHost(final String hostName, final String eventHubPath, final String consumerGroupName, final String eventHubConnectionString, ICheckpointManager checkpointManager, ILeaseManager leaseManager, ScheduledExecutorService executorService, RetryPolicy retryPolicy)
  name: EventProcessorHost(final String hostName, final String eventHubPath, final String consumerGroupName, final String eventHubConnectionString, ICheckpointManager checkpointManager, ILeaseManager leaseManager, ScheduledExecutorService executorService, RetryPolicy retryPolicy)
  nameWithType: EventProcessorHost.EventProcessorHost(final String hostName, final String eventHubPath, final String consumerGroupName, final String eventHubConnectionString, ICheckpointManager checkpointManager, ILeaseManager leaseManager, ScheduledExecutorService executorService, RetryPolicy retryPolicy)
  parameters:
  - description: <p>A name for this event processor host. See method notes. </p>
    name: hostName
    type: <xref href="final+String?alt=final String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>Specifies the Event Hub to receive events from. </p>
    name: eventHubPath
    type: <xref href="final+String?alt=final String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the consumer group to use when receiving from the Event Hub. </p>
    name: consumerGroupName
    type: <xref href="final+String?alt=final String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>Connection string for the Event Hub to receive from. </p>
    name: eventHubConnectionString
    type: <xref href="final+String?alt=final String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>Implementation of ICheckpointManager, to be replacement checkpoint manager. </p>
    name: checkpointManager
    type: <xref href="com.microsoft.azure.eventprocessorhost.ICheckpointManager?alt=com.microsoft.azure.eventprocessorhost.ICheckpointManager&text=ICheckpointManager" data-throw-if-not-resolved="False"/>
  - description: <p>Implementation of ILeaseManager, to be replacement lease manager. </p>
    name: leaseManager
    type: <xref href="com.microsoft.azure.eventprocessorhost.ILeaseManager?alt=com.microsoft.azure.eventprocessorhost.ILeaseManager&text=ILeaseManager" data-throw-if-not-resolved="False"/>
  - description: <p>User-supplied thread executor, or null to use EventProcessorHost-internal executor. </p>
    name: executorService
    type: <xref href="ScheduledExecutorService?alt=ScheduledExecutorService&text=ScheduledExecutorService" data-throw-if-not-resolved="False"/>
  - description: <p>Retry policy governing communications with the event hub. </p>
    name: retryPolicy
    type: <xref href="com.microsoft.azure.eventhubs.RetryPolicy?alt=com.microsoft.azure.eventhubs.RetryPolicy&text=RetryPolicy" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Create a new host to process events from an Event Hub. </p>

    <p>This overload allows the caller to provide their own lease and checkpoint managers to replace the built-in ones based on Azure Storage, and to provide an executor service and a retry policy for communications with the event hub.</p>

    <p></p>
  syntax: public EventProcessorHost(final String hostName, final String eventHubPath, final String consumerGroupName, final String eventHubConnectionString, ICheckpointManager checkpointManager, ILeaseManager leaseManager, ScheduledExecutorService executorService, RetryPolicy retryPolicy)
  uid: com.microsoft.azure.eventprocessorhost.EventProcessorHost.EventProcessorHost(final String,final String,final String,final String,ICheckpointManager,ILeaseManager,ScheduledExecutorService,RetryPolicy)
uid: com.microsoft.azure.eventprocessorhost.EventProcessorHost.EventProcessorHost*
fullName: com.microsoft.azure.eventprocessorhost.EventProcessorHost.EventProcessorHost
name: EventProcessorHost
package: com.microsoft.azure.eventprocessorhost
metadata: {}
