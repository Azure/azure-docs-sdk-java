### YamlMime:JavaType
constructors:
- fullName: com.microsoft.azure.storage.blob.CloudBlob.CloudBlob(final BlobType type, final StorageUri uri, final String snapshotID, final StorageCredentials credentials)
  name: CloudBlob(final BlobType type, final StorageUri uri, final String snapshotID, final StorageCredentials credentials)
  nameWithType: CloudBlob.CloudBlob(final BlobType type, final StorageUri uri, final String snapshotID, final StorageCredentials credentials)
  parameters:
  - description: <p>A <xref uid="com.microsoft.azure.storage.blob.BlobType" data-throw-if-not-resolved="false" data-raw-source="BlobType"></xref> value which represents the type of the blob. </p>
    name: type
    type: final <xref href="com.microsoft.azure.storage.blob.BlobType?alt=com.microsoft.azure.storage.blob.BlobType&text=BlobType" data-throw-if-not-resolved="False"/>
  - description: <p>A <xref uid="com.microsoft.azure.storage.StorageUri" data-throw-if-not-resolved="false" data-raw-source="StorageUri"></xref> object that represents the URI to the blob, beginning with the container name. </p>
    name: uri
    type: final <xref href="com.microsoft.azure.storage.StorageUri?alt=com.microsoft.azure.storage.StorageUri&text=StorageUri" data-throw-if-not-resolved="False"/>
  - description: <p>A <code>String</code> that represents the snapshot version, if applicable. </p>
    name: snapshotID
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>A <xref uid="com.microsoft.azure.storage.StorageCredentials" data-throw-if-not-resolved="false" data-raw-source="StorageCredentials"></xref> object used to authenticate access. </p>
    name: credentials
    type: final <xref href="com.microsoft.azure.storage.StorageCredentials?alt=com.microsoft.azure.storage.StorageCredentials&text=StorageCredentials" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  summary: >-
    <p>Creates an instance of the  class using the specified URI, snapshot ID, and cloud blob client.</p>

    <p></p>
  syntax: protected CloudBlob(final BlobType type, final StorageUri uri, final String snapshotID, final StorageCredentials credentials)
  uid: com.microsoft.azure.storage.blob.CloudBlob.CloudBlob(final BlobType,final StorageUri,final String,final StorageCredentials)
- fullName: com.microsoft.azure.storage.blob.CloudBlob.CloudBlob(final BlobType type, String blobName, String snapshotID, CloudBlobContainer container)
  name: CloudBlob(final BlobType type, String blobName, String snapshotID, CloudBlobContainer container)
  nameWithType: CloudBlob.CloudBlob(final BlobType type, String blobName, String snapshotID, CloudBlobContainer container)
  parameters:
  - description: <p>A <xref uid="com.microsoft.azure.storage.blob.BlobType" data-throw-if-not-resolved="false" data-raw-source="BlobType"></xref> value which represents the type of the blob. </p>
    name: type
    type: final <xref href="com.microsoft.azure.storage.blob.BlobType?alt=com.microsoft.azure.storage.blob.BlobType&text=BlobType" data-throw-if-not-resolved="False"/>
  - description: <p>Name of the blob. </p>
    name: blobName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>A <code>String</code> that represents the snapshot version, if applicable. </p>
    name: snapshotID
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The reference to the parent container. </p>
    name: container
    type: <xref href="com.microsoft.azure.storage.blob.CloudBlobContainer?alt=com.microsoft.azure.storage.blob.CloudBlobContainer&text=CloudBlobContainer" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="URISyntaxException?alt=URISyntaxException&text=URISyntaxException" data-throw-if-not-resolved="False"/>
    description: <p>If the resource URI is invalid. </p>
  summary: >-
    <p>Creates an instance of the  class using the specified type, name, snapshot ID, and container.</p>

    <p></p>
  syntax: protected CloudBlob(final BlobType type, String blobName, String snapshotID, CloudBlobContainer container)
  uid: com.microsoft.azure.storage.blob.CloudBlob.CloudBlob(final BlobType,String,String,CloudBlobContainer)
- fullName: com.microsoft.azure.storage.blob.CloudBlob.CloudBlob(final CloudBlob otherBlob)
  name: CloudBlob(final CloudBlob otherBlob)
  nameWithType: CloudBlob.CloudBlob(final CloudBlob otherBlob)
  parameters:
  - description: <p>A <code>CloudBlob</code> object that represents the blob to copy. </p>
    name: otherBlob
    type: final <xref href="com.microsoft.azure.storage.blob.CloudBlob?alt=com.microsoft.azure.storage.blob.CloudBlob&text=CloudBlob" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Creates an instance of the  class by copying values from another blob.</p>

    <p></p>
  syntax: protected CloudBlob(final CloudBlob otherBlob)
  uid: com.microsoft.azure.storage.blob.CloudBlob.CloudBlob(final CloudBlob)
fields:
- field:
    type: <xref href="com.microsoft.azure.storage.blob.CloudBlobClient?alt=com.microsoft.azure.storage.blob.CloudBlobClient&text=CloudBlobClient" data-throw-if-not-resolved="False"/>
  fullName: com.microsoft.azure.storage.blob.CloudBlob.blobServiceClient
  name: blobServiceClient
  nameWithType: CloudBlob.blobServiceClient
  summary: <p>Represents the blob client. </p>
  syntax: protected CloudBlobClient blobServiceClient
  uid: com.microsoft.azure.storage.blob.CloudBlob.blobServiceClient
- field:
    type: <xref href="com.microsoft.azure.storage.blob.CloudBlobDirectory?alt=com.microsoft.azure.storage.blob.CloudBlobDirectory&text=CloudBlobDirectory" data-throw-if-not-resolved="False"/>
  fullName: com.microsoft.azure.storage.blob.CloudBlob.parent
  name: parent
  nameWithType: CloudBlob.parent
  summary: <p>Represents the blob's directory. </p>
  syntax: protected CloudBlobDirectory parent
  uid: com.microsoft.azure.storage.blob.CloudBlob.parent
- field:
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  fullName: com.microsoft.azure.storage.blob.CloudBlob.streamMinimumReadSizeInBytes
  name: streamMinimumReadSizeInBytes
  nameWithType: CloudBlob.streamMinimumReadSizeInBytes
  summary: <p>Holds the minimum read size when using a <xref uid="com.microsoft.azure.storage.blob.BlobInputStream" data-throw-if-not-resolved="false" data-raw-source="BlobInputStream"></xref>. </p>
  syntax: protected int streamMinimumReadSizeInBytes= Constants.DEFAULT_MINIMUM_READ_SIZE_IN_BYTES
  uid: com.microsoft.azure.storage.blob.CloudBlob.streamMinimumReadSizeInBytes
- field:
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  fullName: com.microsoft.azure.storage.blob.CloudBlob.streamWriteSizeInBytes
  name: streamWriteSizeInBytes
  nameWithType: CloudBlob.streamWriteSizeInBytes
  summary: <p>Holds the number of bytes to buffer when writing to a <xref uid="com.microsoft.azure.storage.blob.BlobOutputStream" data-throw-if-not-resolved="false" data-raw-source="BlobOutputStream"></xref> (block and page blobs). </p>
  syntax: protected int streamWriteSizeInBytes= Constants.DEFAULT_STREAM_WRITE_IN_BYTES
  uid: com.microsoft.azure.storage.blob.CloudBlob.streamWriteSizeInBytes
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
- <xref href="com.microsoft.azure.storage.blob.ListBlobItem?alt=com.microsoft.azure.storage.blob.ListBlobItem&text=ListBlobItem" data-throw-if-not-resolved="False"/>
methods:
- fullName: com.microsoft.azure.storage.blob.CloudBlob.abortCopy(final String copyId)
  name: abortCopy(final String copyId)
  nameWithType: CloudBlob.abortCopy(final String copyId)
  parameters:
  - description: <p>A <code>String</code> object that identifying the copy operation.</p>
    name: copyId
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  returns:
    type: <xref href="final+void?alt=final+void&text=final+void" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Aborts an ongoing blob copy operation.</p>

    <p></p>
  syntax: public final void abortCopy(final String copyId)
  uid: com.microsoft.azure.storage.blob.CloudBlob.abortCopy(final String)
- fullName: com.microsoft.azure.storage.blob.CloudBlob.abortCopy(final String copyId, final AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  name: abortCopy(final String copyId, final AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  nameWithType: CloudBlob.abortCopy(final String copyId, final AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  parameters:
  - description: <p>A <code>String</code> object that identifying the copy operation.</p>
    name: copyId
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>An <xref uid="com.microsoft.azure.storage.AccessCondition" data-throw-if-not-resolved="false" data-raw-source="AccessCondition"></xref> object that represents the access conditions for the blob. </p>
    name: accessCondition
    type: final <xref href="com.microsoft.azure.storage.AccessCondition?alt=com.microsoft.azure.storage.AccessCondition&text=AccessCondition" data-throw-if-not-resolved="False"/>
  - description: <p>A <xref uid="com.microsoft.azure.storage.blob.BlobRequestOptions" data-throw-if-not-resolved="false" data-raw-source="BlobRequestOptions"></xref> object that specifies any additional options for the request. Specifying <code>null</code> will use the default request options from the associated service client ( <xref uid="com.microsoft.azure.storage.blob.CloudBlobClient" data-throw-if-not-resolved="false" data-raw-source="CloudBlobClient"></xref>). </p>
    name: options
    type: <xref href="com.microsoft.azure.storage.blob.BlobRequestOptions?alt=com.microsoft.azure.storage.blob.BlobRequestOptions&text=BlobRequestOptions" data-throw-if-not-resolved="False"/>
  - description: <p>An <xref uid="com.microsoft.azure.storage.OperationContext" data-throw-if-not-resolved="false" data-raw-source="OperationContext"></xref> object that represents the context for the current operation. This object is used to track requests to the storage service, and to provide additional runtime information about the operation.</p>
    name: opContext
    type: <xref href="com.microsoft.azure.storage.OperationContext?alt=com.microsoft.azure.storage.OperationContext&text=OperationContext" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  returns:
    type: <xref href="final+void?alt=final+void&text=final+void" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Aborts an ongoing blob copy operation.</p>

    <p></p>
  syntax: public final void abortCopy(final String copyId, final AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  uid: com.microsoft.azure.storage.blob.CloudBlob.abortCopy(final String,final AccessCondition,BlobRequestOptions,OperationContext)
- fullName: com.microsoft.azure.storage.blob.CloudBlob.acquireLease()
  name: acquireLease()
  nameWithType: CloudBlob.acquireLease()
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  returns:
    description: <p>A <code>String</code> that represents the lease ID.</p>
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Acquires a new infinite lease on the blob.</p>

    <p></p>
  syntax: public final String acquireLease()
  uid: com.microsoft.azure.storage.blob.CloudBlob.acquireLease()
- fullName: com.microsoft.azure.storage.blob.CloudBlob.acquireLease(final Integer leaseTimeInSeconds, final String proposedLeaseId)
  name: acquireLease(final Integer leaseTimeInSeconds, final String proposedLeaseId)
  nameWithType: CloudBlob.acquireLease(final Integer leaseTimeInSeconds, final String proposedLeaseId)
  parameters:
  - description: <p>An <code>Integer</code> which specifies the span of time for which to acquire the lease, in seconds. If null, an infinite lease will be acquired. If not null, the value must be greater than zero.</p>
    name: leaseTimeInSeconds
    type: <xref href="final+Integer?alt=final+Integer&text=final+Integer" data-throw-if-not-resolved="False"/>
  - description: <p>A <code>String</code> that represents the proposed lease ID for the new lease, or null if no lease ID is proposed.</p>
    name: proposedLeaseId
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  returns:
    description: <p>A <code>String</code> that represents the lease ID.</p>
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Acquires a new lease on the blob with the specified lease time and proposed lease ID.</p>

    <p></p>
  syntax: public final String acquireLease(final Integer leaseTimeInSeconds, final String proposedLeaseId)
  uid: com.microsoft.azure.storage.blob.CloudBlob.acquireLease(final Integer,final String)
- fullName: com.microsoft.azure.storage.blob.CloudBlob.acquireLease(final Integer leaseTimeInSeconds, final String proposedLeaseId, final AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  name: acquireLease(final Integer leaseTimeInSeconds, final String proposedLeaseId, final AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  nameWithType: CloudBlob.acquireLease(final Integer leaseTimeInSeconds, final String proposedLeaseId, final AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  parameters:
  - description: <p>An <code>Integer</code> which specifies the span of time for which to acquire the lease, in seconds. If null, an infinite lease will be acquired. If not null, the value must be greater than zero.</p>
    name: leaseTimeInSeconds
    type: <xref href="final+Integer?alt=final+Integer&text=final+Integer" data-throw-if-not-resolved="False"/>
  - description: <p>A <code>String</code> that represents the proposed lease ID for the new lease, or null if no lease ID is proposed.</p>
    name: proposedLeaseId
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>An <xref uid="com.microsoft.azure.storage.AccessCondition" data-throw-if-not-resolved="false" data-raw-source="AccessCondition"></xref> object that represents the access conditions for the blob.</p>
    name: accessCondition
    type: final <xref href="com.microsoft.azure.storage.AccessCondition?alt=com.microsoft.azure.storage.AccessCondition&text=AccessCondition" data-throw-if-not-resolved="False"/>
  - description: <p>A <xref uid="com.microsoft.azure.storage.blob.BlobRequestOptions" data-throw-if-not-resolved="false" data-raw-source="BlobRequestOptions"></xref> object that specifies any additional options for the request. Specifying <code>null</code> will use the default request options from the associated service client (<xref uid="com.microsoft.azure.storage.blob.CloudBlobClient" data-throw-if-not-resolved="false" data-raw-source="CloudBlobClient"></xref>).</p>
    name: options
    type: <xref href="com.microsoft.azure.storage.blob.BlobRequestOptions?alt=com.microsoft.azure.storage.blob.BlobRequestOptions&text=BlobRequestOptions" data-throw-if-not-resolved="False"/>
  - description: <p>An <xref uid="com.microsoft.azure.storage.OperationContext" data-throw-if-not-resolved="false" data-raw-source="OperationContext"></xref> object that represents the context for the current operation. The context is used to track requests to the storage service, and to provide additional runtime information about the operation.</p>
    name: opContext
    type: <xref href="com.microsoft.azure.storage.OperationContext?alt=com.microsoft.azure.storage.OperationContext&text=OperationContext" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  returns:
    description: <p>A <code>String</code> that represents the lease ID.</p>
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Acquires a new lease on the blob with the specified lease time, proposed lease ID, request options, and operation context.</p>

    <p></p>
  syntax: public final String acquireLease(final Integer leaseTimeInSeconds, final String proposedLeaseId, final AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  uid: com.microsoft.azure.storage.blob.CloudBlob.acquireLease(final Integer,final String,final AccessCondition,BlobRequestOptions,OperationContext)
- fullName: com.microsoft.azure.storage.blob.CloudBlob.assertCorrectBlobType()
  name: assertCorrectBlobType()
  nameWithType: CloudBlob.assertCorrectBlobType()
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If an incorrect blob type is used. </p>
  returns:
    type: <xref href="final+void?alt=final+void&text=final+void" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Asserts that the blob has the correct blob type specified in the blob attributes.</p>

    <p></p>
  syntax: protected final void assertCorrectBlobType()
  uid: com.microsoft.azure.storage.blob.CloudBlob.assertCorrectBlobType()
- fullName: com.microsoft.azure.storage.blob.CloudBlob.assertNoWriteOperationForSnapshot()
  name: assertNoWriteOperationForSnapshot()
  nameWithType: CloudBlob.assertNoWriteOperationForSnapshot()
  summary: <p>Asserts that write operation is not done for snapshot. </p>
  syntax: protected void assertNoWriteOperationForSnapshot()
  uid: com.microsoft.azure.storage.blob.CloudBlob.assertNoWriteOperationForSnapshot()
- fullName: com.microsoft.azure.storage.blob.CloudBlob.breakLease(final Integer breakPeriodInSeconds)
  name: breakLease(final Integer breakPeriodInSeconds)
  nameWithType: CloudBlob.breakLease(final Integer breakPeriodInSeconds)
  parameters:
  - description: <p>Specifies the time to wait, in seconds, until the current lease is broken. If null, the break period is the remainder of the current lease, or zero for infinite leases.</p>
    name: breakPeriodInSeconds
    type: <xref href="final+Integer?alt=final+Integer&text=final+Integer" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  returns:
    description: <p>An <code>long</code> which specifies the time, in seconds, remaining in the lease period.</p>
    type: <xref href="final+long?alt=final+long&text=final+long" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Breaks the lease and ensures that another client cannot acquire a new lease until the current lease period has expired.</p>

    <p></p>
  syntax: public final long breakLease(final Integer breakPeriodInSeconds)
  uid: com.microsoft.azure.storage.blob.CloudBlob.breakLease(final Integer)
- fullName: com.microsoft.azure.storage.blob.CloudBlob.breakLease(final Integer breakPeriodInSeconds, final AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  name: breakLease(final Integer breakPeriodInSeconds, final AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  nameWithType: CloudBlob.breakLease(final Integer breakPeriodInSeconds, final AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  parameters:
  - description: <p>An <code>Integer</code> which specifies the time to wait, in seconds, until the current lease is broken. If null, the break period is the remainder of the current lease, or zero for infinite leases.</p>
    name: breakPeriodInSeconds
    type: <xref href="final+Integer?alt=final+Integer&text=final+Integer" data-throw-if-not-resolved="False"/>
  - description: <p>An <xref uid="com.microsoft.azure.storage.AccessCondition" data-throw-if-not-resolved="false" data-raw-source="AccessCondition"></xref> object that represents the access conditions for the blob. </p>
    name: accessCondition
    type: final <xref href="com.microsoft.azure.storage.AccessCondition?alt=com.microsoft.azure.storage.AccessCondition&text=AccessCondition" data-throw-if-not-resolved="False"/>
  - description: <p>A <xref uid="com.microsoft.azure.storage.blob.BlobRequestOptions" data-throw-if-not-resolved="false" data-raw-source="BlobRequestOptions"></xref> object that specifies any additional options for the request. Specifying <code>null</code> will use the default request options from the associated service client (<xref uid="com.microsoft.azure.storage.blob.CloudBlobClient" data-throw-if-not-resolved="false" data-raw-source="CloudBlobClient"></xref>). </p>
    name: options
    type: <xref href="com.microsoft.azure.storage.blob.BlobRequestOptions?alt=com.microsoft.azure.storage.blob.BlobRequestOptions&text=BlobRequestOptions" data-throw-if-not-resolved="False"/>
  - description: <p>An <xref uid="com.microsoft.azure.storage.OperationContext" data-throw-if-not-resolved="false" data-raw-source="OperationContext"></xref> object that represents the context for the current operation. The context is used to track requests to the storage service, and to provide additional runtime information about the operation.</p>
    name: opContext
    type: <xref href="com.microsoft.azure.storage.OperationContext?alt=com.microsoft.azure.storage.OperationContext&text=OperationContext" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  returns:
    description: <p>An <code>long</code> which represents the time, in seconds, remaining in the lease period.</p>
    type: <xref href="final+long?alt=final+long&text=final+long" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Breaks the existing lease, using the specified request options and operation context, and ensures that another client cannot acquire a new lease until the current lease period has expired.</p>

    <p></p>
  syntax: public final long breakLease(final Integer breakPeriodInSeconds, final AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  uid: com.microsoft.azure.storage.blob.CloudBlob.breakLease(final Integer,final AccessCondition,BlobRequestOptions,OperationContext)
- fullName: com.microsoft.azure.storage.blob.CloudBlob.changeLease(final String proposedLeaseId, final AccessCondition accessCondition)
  name: changeLease(final String proposedLeaseId, final AccessCondition accessCondition)
  nameWithType: CloudBlob.changeLease(final String proposedLeaseId, final AccessCondition accessCondition)
  parameters:
  - description: <p>A <code>String</code> that represents the proposed lease ID for the new lease, or null if no lease ID is proposed. </p>
    name: proposedLeaseId
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>An <xref uid="com.microsoft.azure.storage.AccessCondition" data-throw-if-not-resolved="false" data-raw-source="AccessCondition"></xref> object that represents the access conditions for the blob. The lease ID is required to be set with an access condition.</p>
    name: accessCondition
    type: final <xref href="com.microsoft.azure.storage.AccessCondition?alt=com.microsoft.azure.storage.AccessCondition&text=AccessCondition" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  returns:
    description: <p>A <code>String</code> that represents the new lease ID.</p>
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Changes the existing lease ID to the proposed lease ID.</p>

    <p></p>
  syntax: public final String changeLease(final String proposedLeaseId, final AccessCondition accessCondition)
  uid: com.microsoft.azure.storage.blob.CloudBlob.changeLease(final String,final AccessCondition)
- fullName: com.microsoft.azure.storage.blob.CloudBlob.changeLease(final String proposedLeaseId, final AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  name: changeLease(final String proposedLeaseId, final AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  nameWithType: CloudBlob.changeLease(final String proposedLeaseId, final AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  parameters:
  - description: <p>A <code>String</code> that represents the proposed lease ID for the new lease, or null if no lease ID is proposed.</p>
    name: proposedLeaseId
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>An <xref uid="com.microsoft.azure.storage.AccessCondition" data-throw-if-not-resolved="false" data-raw-source="AccessCondition"></xref> object that represents the access conditions for the blob. The lease ID is required to be set with an access condition. </p>
    name: accessCondition
    type: final <xref href="com.microsoft.azure.storage.AccessCondition?alt=com.microsoft.azure.storage.AccessCondition&text=AccessCondition" data-throw-if-not-resolved="False"/>
  - description: <p>A <xref uid="com.microsoft.azure.storage.blob.BlobRequestOptions" data-throw-if-not-resolved="false" data-raw-source="BlobRequestOptions"></xref> object that specifies any additional options for the request. Specifying <code>null</code> will use the default request options from the associated service client (<xref uid="com.microsoft.azure.storage.blob.CloudBlobClient" data-throw-if-not-resolved="false" data-raw-source="CloudBlobClient"></xref>). </p>
    name: options
    type: <xref href="com.microsoft.azure.storage.blob.BlobRequestOptions?alt=com.microsoft.azure.storage.blob.BlobRequestOptions&text=BlobRequestOptions" data-throw-if-not-resolved="False"/>
  - description: <p>An <xref uid="com.microsoft.azure.storage.OperationContext" data-throw-if-not-resolved="false" data-raw-source="OperationContext"></xref> object that represents the context for the current operation. The context is used to track requests to the storage service, and to provide additional runtime information about the operation.</p>
    name: opContext
    type: <xref href="com.microsoft.azure.storage.OperationContext?alt=com.microsoft.azure.storage.OperationContext&text=OperationContext" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  returns:
    description: <p>A <code>String</code> that represents the new lease ID.</p>
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Changes the existing lease ID to the proposed lease Id with the specified access conditions, request options, and operation context.</p>

    <p></p>
  syntax: public final String changeLease(final String proposedLeaseId, final AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  uid: com.microsoft.azure.storage.blob.CloudBlob.changeLease(final String,final AccessCondition,BlobRequestOptions,OperationContext)
- fullName: com.microsoft.azure.storage.blob.CloudBlob.createSnapshot()
  name: createSnapshot()
  nameWithType: CloudBlob.createSnapshot()
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  returns:
    description: <p>A <code>CloudBlob</code> object that represents the snapshot of the blob.</p>
    type: final <xref href="com.microsoft.azure.storage.blob.CloudBlob?alt=com.microsoft.azure.storage.blob.CloudBlob&text=CloudBlob" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Creates a snapshot of the blob.</p>

    <p></p>
  syntax: public final CloudBlob createSnapshot()
  uid: com.microsoft.azure.storage.blob.CloudBlob.createSnapshot()
- fullName: com.microsoft.azure.storage.blob.CloudBlob.createSnapshot(final AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  name: createSnapshot(final AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  nameWithType: CloudBlob.createSnapshot(final AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  parameters:
  - description: <p>An <xref uid="com.microsoft.azure.storage.AccessCondition" data-throw-if-not-resolved="false" data-raw-source="AccessCondition"></xref> object that represents the access conditions for the blob. </p>
    name: accessCondition
    type: final <xref href="com.microsoft.azure.storage.AccessCondition?alt=com.microsoft.azure.storage.AccessCondition&text=AccessCondition" data-throw-if-not-resolved="False"/>
  - description: <p>A <xref uid="com.microsoft.azure.storage.blob.BlobRequestOptions" data-throw-if-not-resolved="false" data-raw-source="BlobRequestOptions"></xref> object that specifies any additional options for the request. Specifying <code>null</code> will use the default request options from the associated service client ( <xref uid="com.microsoft.azure.storage.blob.CloudBlobClient" data-throw-if-not-resolved="false" data-raw-source="CloudBlobClient"></xref>). </p>
    name: options
    type: <xref href="com.microsoft.azure.storage.blob.BlobRequestOptions?alt=com.microsoft.azure.storage.blob.BlobRequestOptions&text=BlobRequestOptions" data-throw-if-not-resolved="False"/>
  - description: <p>An <xref uid="com.microsoft.azure.storage.OperationContext" data-throw-if-not-resolved="false" data-raw-source="OperationContext"></xref> object that represents the context for the current operation. This object is used to track requests to the storage service, and to provide additional runtime information about the operation.</p>
    name: opContext
    type: <xref href="com.microsoft.azure.storage.OperationContext?alt=com.microsoft.azure.storage.OperationContext&text=OperationContext" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  returns:
    description: <p>A <code>CloudBlob</code> object that represents the snapshot of the blob.</p>
    type: final <xref href="com.microsoft.azure.storage.blob.CloudBlob?alt=com.microsoft.azure.storage.blob.CloudBlob&text=CloudBlob" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Creates a snapshot of the blob using the specified request options and operation context.</p>

    <p></p>
  syntax: public final CloudBlob createSnapshot(final AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  uid: com.microsoft.azure.storage.blob.CloudBlob.createSnapshot(final AccessCondition,BlobRequestOptions,OperationContext)
- fullName: com.microsoft.azure.storage.blob.CloudBlob.createSnapshot(final HashMap<String, String> metadata, final AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  name: createSnapshot(final HashMap<String, String> metadata, final AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  nameWithType: CloudBlob.createSnapshot(final HashMap<String, String> metadata, final AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  parameters:
  - description: <p>A collection of name-value pairs defining the metadata of the snapshot, or null. </p>
    name: metadata
    type: <xref href="final+HashMap%3CString%2C+String%3E?alt=final+HashMap%3CString%2C+String%3E&text=final+HashMap%3CString%2C+String%3E" data-throw-if-not-resolved="False"/>
  - description: <p>An <xref uid="com.microsoft.azure.storage.AccessCondition" data-throw-if-not-resolved="false" data-raw-source="AccessCondition"></xref> object that represents the access conditions for the blob. </p>
    name: accessCondition
    type: final <xref href="com.microsoft.azure.storage.AccessCondition?alt=com.microsoft.azure.storage.AccessCondition&text=AccessCondition" data-throw-if-not-resolved="False"/>
  - description: <p>A <xref uid="com.microsoft.azure.storage.blob.BlobRequestOptions" data-throw-if-not-resolved="false" data-raw-source="BlobRequestOptions"></xref> object that specifies any additional options for the request. Specifying <code>null</code> will use the default request options from the associated service client ( <xref uid="com.microsoft.azure.storage.blob.CloudBlobClient" data-throw-if-not-resolved="false" data-raw-source="CloudBlobClient"></xref>). </p>
    name: options
    type: <xref href="com.microsoft.azure.storage.blob.BlobRequestOptions?alt=com.microsoft.azure.storage.blob.BlobRequestOptions&text=BlobRequestOptions" data-throw-if-not-resolved="False"/>
  - description: <p>An <xref uid="com.microsoft.azure.storage.OperationContext" data-throw-if-not-resolved="false" data-raw-source="OperationContext"></xref> object that represents the context for the current operation. This object is used to track requests to the storage service, and to provide additional runtime information about the operation.</p>
    name: opContext
    type: <xref href="com.microsoft.azure.storage.OperationContext?alt=com.microsoft.azure.storage.OperationContext&text=OperationContext" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  returns:
    description: <p>A <code>CloudBlob</code> object that represents the snapshot of the blob.</p>
    type: final <xref href="com.microsoft.azure.storage.blob.CloudBlob?alt=com.microsoft.azure.storage.blob.CloudBlob&text=CloudBlob" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Creates a snapshot of the blob using the specified request options and operation context.</p>

    <p></p>
  syntax: public final CloudBlob createSnapshot(final HashMap<String, String> metadata, final AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  uid: com.microsoft.azure.storage.blob.CloudBlob.createSnapshot(final HashMap<String, String>,final AccessCondition,BlobRequestOptions,OperationContext)
- fullName: com.microsoft.azure.storage.blob.CloudBlob.delete()
  name: delete()
  nameWithType: CloudBlob.delete()
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  returns:
    type: <xref href="final+void?alt=final+void&text=final+void" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Deletes the blob.</p>

    <p>If a delete retention policy is enabled on the service, the blob will be retained for a specified period of time, before being removed permanently by garbage collection.</p>

    <p></p>
  syntax: public final void delete()
  uid: com.microsoft.azure.storage.blob.CloudBlob.delete()
- fullName: com.microsoft.azure.storage.blob.CloudBlob.delete(final DeleteSnapshotsOption deleteSnapshotsOption, final AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  name: delete(final DeleteSnapshotsOption deleteSnapshotsOption, final AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  nameWithType: CloudBlob.delete(final DeleteSnapshotsOption deleteSnapshotsOption, final AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  parameters:
  - description: <p>A <xref uid="com.microsoft.azure.storage.blob.DeleteSnapshotsOption" data-throw-if-not-resolved="false" data-raw-source="DeleteSnapshotsOption"></xref> object that indicates whether to delete only snapshots, or the blob and its snapshots. </p>
    name: deleteSnapshotsOption
    type: final <xref href="com.microsoft.azure.storage.blob.DeleteSnapshotsOption?alt=com.microsoft.azure.storage.blob.DeleteSnapshotsOption&text=DeleteSnapshotsOption" data-throw-if-not-resolved="False"/>
  - description: <p>An <xref uid="com.microsoft.azure.storage.AccessCondition" data-throw-if-not-resolved="false" data-raw-source="AccessCondition"></xref> object that represents the access conditions for the blob. </p>
    name: accessCondition
    type: final <xref href="com.microsoft.azure.storage.AccessCondition?alt=com.microsoft.azure.storage.AccessCondition&text=AccessCondition" data-throw-if-not-resolved="False"/>
  - description: <p>A <xref uid="com.microsoft.azure.storage.blob.BlobRequestOptions" data-throw-if-not-resolved="false" data-raw-source="BlobRequestOptions"></xref> object that specifies any additional options for the request. Specifying <code>null</code> will use the default request options from the associated service client ( <xref uid="com.microsoft.azure.storage.blob.CloudBlobClient" data-throw-if-not-resolved="false" data-raw-source="CloudBlobClient"></xref>). </p>
    name: options
    type: <xref href="com.microsoft.azure.storage.blob.BlobRequestOptions?alt=com.microsoft.azure.storage.blob.BlobRequestOptions&text=BlobRequestOptions" data-throw-if-not-resolved="False"/>
  - description: <p>An <xref uid="com.microsoft.azure.storage.OperationContext" data-throw-if-not-resolved="false" data-raw-source="OperationContext"></xref> object that represents the context for the current operation. This object is used to track requests to the storage service, and to provide additional runtime information about the operation.</p>
    name: opContext
    type: <xref href="com.microsoft.azure.storage.OperationContext?alt=com.microsoft.azure.storage.OperationContext&text=OperationContext" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  returns:
    type: <xref href="final+void?alt=final+void&text=final+void" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Deletes the blob using the specified snapshot and request options, and operation context.</p>

    <p>If a delete retention policy is enabled on the service, the blob will be retained for a specified period of time, before being removed permanently by garbage collection.</p>

    <p>A blob that has snapshots cannot be deleted unless the snapshots are also deleted. If a blob has snapshots, use the <xref uid="com.microsoft.azure.storage.blob.DeleteSnapshotsOption.DELETE_SNAPSHOTS_ONLY" data-throw-if-not-resolved="false" data-raw-source="DeleteSnapshotsOption#DELETE_SNAPSHOTS_ONLY"></xref> or <xref uid="com.microsoft.azure.storage.blob.DeleteSnapshotsOption.INCLUDE_SNAPSHOTS" data-throw-if-not-resolved="false" data-raw-source="DeleteSnapshotsOption#INCLUDE_SNAPSHOTS"></xref> value in the  parameter to specify how the snapshots should be handled when the blob is deleted.</p>

    <p></p>
  syntax: public final void delete(final DeleteSnapshotsOption deleteSnapshotsOption, final AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  uid: com.microsoft.azure.storage.blob.CloudBlob.delete(final DeleteSnapshotsOption,final AccessCondition,BlobRequestOptions,OperationContext)
- fullName: com.microsoft.azure.storage.blob.CloudBlob.deleteIfExists()
  name: deleteIfExists()
  nameWithType: CloudBlob.deleteIfExists()
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  returns:
    description: >-
      <p>

        <code>true</code> if the blob was deleted; otherwise, <code>false</code>.</p>
    type: <xref href="final+boolean?alt=final+boolean&text=final+boolean" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Deletes the blob if it exists. </p>

    <p>A blob that has snapshots cannot be deleted unless the snapshots are also deleted. If a blob has snapshots, use the <xref uid="com.microsoft.azure.storage.blob.DeleteSnapshotsOption.DELETE_SNAPSHOTS_ONLY" data-throw-if-not-resolved="false" data-raw-source="DeleteSnapshotsOption#DELETE_SNAPSHOTS_ONLY"></xref> or <xref uid="com.microsoft.azure.storage.blob.DeleteSnapshotsOption.INCLUDE_SNAPSHOTS" data-throw-if-not-resolved="false" data-raw-source="DeleteSnapshotsOption#INCLUDE_SNAPSHOTS"></xref> value in the  parameter to specify how the snapshots should be handled when the blob is deleted.</p>

    <p></p>
  syntax: public final boolean deleteIfExists()
  uid: com.microsoft.azure.storage.blob.CloudBlob.deleteIfExists()
- fullName: com.microsoft.azure.storage.blob.CloudBlob.deleteIfExists(final DeleteSnapshotsOption deleteSnapshotsOption, final AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  name: deleteIfExists(final DeleteSnapshotsOption deleteSnapshotsOption, final AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  nameWithType: CloudBlob.deleteIfExists(final DeleteSnapshotsOption deleteSnapshotsOption, final AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  parameters:
  - description: <p>A <xref uid="com.microsoft.azure.storage.blob.DeleteSnapshotsOption" data-throw-if-not-resolved="false" data-raw-source="DeleteSnapshotsOption"></xref> object that indicates whether to delete only snapshots, or the blob and its snapshots. </p>
    name: deleteSnapshotsOption
    type: final <xref href="com.microsoft.azure.storage.blob.DeleteSnapshotsOption?alt=com.microsoft.azure.storage.blob.DeleteSnapshotsOption&text=DeleteSnapshotsOption" data-throw-if-not-resolved="False"/>
  - description: <p>An <xref uid="com.microsoft.azure.storage.AccessCondition" data-throw-if-not-resolved="false" data-raw-source="AccessCondition"></xref> object that represents the access conditions for the blob. </p>
    name: accessCondition
    type: final <xref href="com.microsoft.azure.storage.AccessCondition?alt=com.microsoft.azure.storage.AccessCondition&text=AccessCondition" data-throw-if-not-resolved="False"/>
  - description: <p>A <xref uid="com.microsoft.azure.storage.blob.BlobRequestOptions" data-throw-if-not-resolved="false" data-raw-source="BlobRequestOptions"></xref> object that specifies any additional options for the request. Specifying <code>null</code> will use the default request options from the associated service client ( <xref uid="com.microsoft.azure.storage.blob.CloudBlobClient" data-throw-if-not-resolved="false" data-raw-source="CloudBlobClient"></xref>). </p>
    name: options
    type: <xref href="com.microsoft.azure.storage.blob.BlobRequestOptions?alt=com.microsoft.azure.storage.blob.BlobRequestOptions&text=BlobRequestOptions" data-throw-if-not-resolved="False"/>
  - description: <p>An <xref uid="com.microsoft.azure.storage.OperationContext" data-throw-if-not-resolved="false" data-raw-source="OperationContext"></xref> object that represents the context for the current operation. This object is used to track requests to the storage service, and to provide additional runtime information about the operation.</p>
    name: opContext
    type: <xref href="com.microsoft.azure.storage.OperationContext?alt=com.microsoft.azure.storage.OperationContext&text=OperationContext" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  returns:
    description: >-
      <p>

        <code>true</code> if the blob existed and was deleted; otherwise, <code>false</code></p>
    type: <xref href="final+boolean?alt=final+boolean&text=final+boolean" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Deletes the blob if it exists, using the specified snapshot and request options, and operation context. </p>

    <p>A blob that has snapshots cannot be deleted unless the snapshots are also deleted. If a blob has snapshots, use the <xref uid="com.microsoft.azure.storage.blob.DeleteSnapshotsOption.DELETE_SNAPSHOTS_ONLY" data-throw-if-not-resolved="false" data-raw-source="DeleteSnapshotsOption#DELETE_SNAPSHOTS_ONLY"></xref> or <xref uid="com.microsoft.azure.storage.blob.DeleteSnapshotsOption.INCLUDE_SNAPSHOTS" data-throw-if-not-resolved="false" data-raw-source="DeleteSnapshotsOption#INCLUDE_SNAPSHOTS"></xref> value in the  parameter to specify how the snapshots should be handled when the blob is deleted.</p>

    <p></p>
  syntax: public final boolean deleteIfExists(final DeleteSnapshotsOption deleteSnapshotsOption, final AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  uid: com.microsoft.azure.storage.blob.CloudBlob.deleteIfExists(final DeleteSnapshotsOption,final AccessCondition,BlobRequestOptions,OperationContext)
- fullName: com.microsoft.azure.storage.blob.CloudBlob.download(final OutputStream outStream)
  name: download(final OutputStream outStream)
  nameWithType: CloudBlob.download(final OutputStream outStream)
  parameters:
  - description: <p>An <code><xref uid="" data-throw-if-not-resolved="false" data-raw-source="OutputStream"></xref></code> object that represents the target stream. </p>
    name: outStream
    type: <xref href="final+OutputStream?alt=final+OutputStream&text=final+OutputStream" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  returns:
    type: <xref href="final+void?alt=final+void&text=final+void" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Downloads the contents of a blob to a stream.</p>

    <p></p>
  syntax: public final void download(final OutputStream outStream)
  uid: com.microsoft.azure.storage.blob.CloudBlob.download(final OutputStream)
- fullName: com.microsoft.azure.storage.blob.CloudBlob.download(final OutputStream outStream, final AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  name: download(final OutputStream outStream, final AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  nameWithType: CloudBlob.download(final OutputStream outStream, final AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  parameters:
  - description: <p>An <code>OutputStream</code> object that represents the target stream. </p>
    name: outStream
    type: <xref href="final+OutputStream?alt=final+OutputStream&text=final+OutputStream" data-throw-if-not-resolved="False"/>
  - description: <p>An <xref uid="com.microsoft.azure.storage.AccessCondition" data-throw-if-not-resolved="false" data-raw-source="AccessCondition"></xref> object that represents the access conditions for the blob. </p>
    name: accessCondition
    type: final <xref href="com.microsoft.azure.storage.AccessCondition?alt=com.microsoft.azure.storage.AccessCondition&text=AccessCondition" data-throw-if-not-resolved="False"/>
  - description: <p>A <xref uid="com.microsoft.azure.storage.blob.BlobRequestOptions" data-throw-if-not-resolved="false" data-raw-source="BlobRequestOptions"></xref> object that specifies any additional options for the request. Specifying <code>null</code> will use the default request options from the associated service client ( <xref uid="com.microsoft.azure.storage.blob.CloudBlobClient" data-throw-if-not-resolved="false" data-raw-source="CloudBlobClient"></xref>). </p>
    name: options
    type: <xref href="com.microsoft.azure.storage.blob.BlobRequestOptions?alt=com.microsoft.azure.storage.blob.BlobRequestOptions&text=BlobRequestOptions" data-throw-if-not-resolved="False"/>
  - description: <p>An <xref uid="com.microsoft.azure.storage.OperationContext" data-throw-if-not-resolved="false" data-raw-source="OperationContext"></xref> object that represents the context for the current operation. This object is used to track requests to the storage service, and to provide additional runtime information about the operation. </p>
    name: opContext
    type: <xref href="com.microsoft.azure.storage.OperationContext?alt=com.microsoft.azure.storage.OperationContext&text=OperationContext" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  returns:
    type: <xref href="final+void?alt=final+void&text=final+void" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Downloads the contents of a blob to a stream using the specified request options and operation context.</p>

    <p></p>
  syntax: public final void download(final OutputStream outStream, final AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  uid: com.microsoft.azure.storage.blob.CloudBlob.download(final OutputStream,final AccessCondition,BlobRequestOptions,OperationContext)
- fullName: com.microsoft.azure.storage.blob.CloudBlob.downloadAccountInfo()
  name: downloadAccountInfo()
  nameWithType: CloudBlob.downloadAccountInfo()
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  returns:
    description: <p>A <xref uid="com.microsoft.azure.storage.AccountInformation" data-throw-if-not-resolved="false" data-raw-source="AccountInformation"></xref> object for the given storage account. </p>
    type: <xref href="com.microsoft.azure.storage.AccountInformation?alt=com.microsoft.azure.storage.AccountInformation&text=AccountInformation" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets information related to the storage account in which this blob resides.</p>

    <p></p>
  syntax: public AccountInformation downloadAccountInfo()
  uid: com.microsoft.azure.storage.blob.CloudBlob.downloadAccountInfo()
- fullName: com.microsoft.azure.storage.blob.CloudBlob.downloadAccountInfo(BlobRequestOptions options, OperationContext opContext)
  name: downloadAccountInfo(BlobRequestOptions options, OperationContext opContext)
  nameWithType: CloudBlob.downloadAccountInfo(BlobRequestOptions options, OperationContext opContext)
  parameters:
  - description: <p>A <xref uid="com.microsoft.azure.storage.blob.BlobRequestOptions" data-throw-if-not-resolved="false" data-raw-source="BlobRequestOptions"></xref> object that specifies any additional options for the request. Specifying <code>null</code> will use the default request options from the associated service client ( <xref uid="com.microsoft.azure.storage.blob.CloudBlobClient" data-throw-if-not-resolved="false" data-raw-source="CloudBlobClient"></xref>). </p>
    name: options
    type: <xref href="com.microsoft.azure.storage.blob.BlobRequestOptions?alt=com.microsoft.azure.storage.blob.BlobRequestOptions&text=BlobRequestOptions" data-throw-if-not-resolved="False"/>
  - description: <p>An <xref uid="com.microsoft.azure.storage.OperationContext" data-throw-if-not-resolved="false" data-raw-source="OperationContext"></xref> object that represents the context for the current operation. This object is used to track requests to the storage service, and to provide additional runtime information about the operation.</p>
    name: opContext
    type: <xref href="com.microsoft.azure.storage.OperationContext?alt=com.microsoft.azure.storage.OperationContext&text=OperationContext" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  returns:
    description: <p>A <xref uid="com.microsoft.azure.storage.AccountInformation" data-throw-if-not-resolved="false" data-raw-source="AccountInformation"></xref> object for the given storage account.</p>
    type: <xref href="com.microsoft.azure.storage.AccountInformation?alt=com.microsoft.azure.storage.AccountInformation&text=AccountInformation" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets information related to the storage account in which this blob resides.</p>

    <p></p>
  syntax: public AccountInformation downloadAccountInfo(BlobRequestOptions options, OperationContext opContext)
  uid: com.microsoft.azure.storage.blob.CloudBlob.downloadAccountInfo(BlobRequestOptions,OperationContext)
- fullName: com.microsoft.azure.storage.blob.CloudBlob.downloadAccountInformationImpl(final RequestOptions options)
  name: downloadAccountInformationImpl(final RequestOptions options)
  nameWithType: CloudBlob.downloadAccountInformationImpl(final RequestOptions options)
  parameters:
  - name: options
    type: final <xref href="com.microsoft.azure.storage.RequestOptions?alt=com.microsoft.azure.storage.RequestOptions&text=RequestOptions" data-throw-if-not-resolved="False"/>
  returns:
    type: <xref href="com.microsoft.azure.storage.core.StorageRequest?alt=com.microsoft.azure.storage.core.StorageRequest&text=StorageRequest" data-throw-if-not-resolved="False"/>&lt;<xref href="com.microsoft.azure.storage.ServiceClient?alt=com.microsoft.azure.storage.ServiceClient&text=ServiceClient" data-throw-if-not-resolved="False"/>, <xref href="com.microsoft.azure.storage.blob.CloudBlob?alt=com.microsoft.azure.storage.blob.CloudBlob&text=CloudBlob" data-throw-if-not-resolved="False"/>, <xref href="com.microsoft.azure.storage.AccountInformation?alt=com.microsoft.azure.storage.AccountInformation&text=AccountInformation" data-throw-if-not-resolved="False"/>&gt;
  syntax: protected StorageRequest<ServiceClient, CloudBlob, AccountInformation> downloadAccountInformationImpl(final RequestOptions options)
  uid: com.microsoft.azure.storage.blob.CloudBlob.downloadAccountInformationImpl(final RequestOptions)
- fullName: com.microsoft.azure.storage.blob.CloudBlob.downloadAttributes()
  name: downloadAttributes()
  nameWithType: CloudBlob.downloadAttributes()
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  returns:
    type: <xref href="final+void?alt=final+void&text=final+void" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Populates a blob's properties and metadata. </p>

    <p>This method populates the blob's system properties and user-defined metadata. Before reading or modifying a blob's properties or metadata, call this method or its overload to retrieve the latest values for the blob's properties and metadata from the Microsoft Azure storage service.</p>

    <p></p>
  syntax: public final void downloadAttributes()
  uid: com.microsoft.azure.storage.blob.CloudBlob.downloadAttributes()
- fullName: com.microsoft.azure.storage.blob.CloudBlob.downloadAttributes(final AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  name: downloadAttributes(final AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  nameWithType: CloudBlob.downloadAttributes(final AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  parameters:
  - description: <p>An <xref uid="com.microsoft.azure.storage.AccessCondition" data-throw-if-not-resolved="false" data-raw-source="AccessCondition"></xref> object that represents the access conditions for the blob. </p>
    name: accessCondition
    type: final <xref href="com.microsoft.azure.storage.AccessCondition?alt=com.microsoft.azure.storage.AccessCondition&text=AccessCondition" data-throw-if-not-resolved="False"/>
  - description: <p>A <xref uid="com.microsoft.azure.storage.blob.BlobRequestOptions" data-throw-if-not-resolved="false" data-raw-source="BlobRequestOptions"></xref> object that specifies any additional options for the request. Specifying <code>null</code> will use the default request options from the associated service client ( <xref uid="com.microsoft.azure.storage.blob.CloudBlobClient" data-throw-if-not-resolved="false" data-raw-source="CloudBlobClient"></xref>). </p>
    name: options
    type: <xref href="com.microsoft.azure.storage.blob.BlobRequestOptions?alt=com.microsoft.azure.storage.blob.BlobRequestOptions&text=BlobRequestOptions" data-throw-if-not-resolved="False"/>
  - description: <p>An <xref uid="com.microsoft.azure.storage.OperationContext" data-throw-if-not-resolved="false" data-raw-source="OperationContext"></xref> object that represents the context for the current operation. This object is used to track requests to the storage service, and to provide additional runtime information about the operation.</p>
    name: opContext
    type: <xref href="com.microsoft.azure.storage.OperationContext?alt=com.microsoft.azure.storage.OperationContext&text=OperationContext" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  returns:
    type: <xref href="final+void?alt=final+void&text=final+void" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Populates a blob's properties and metadata using the specified request options and operation context. </p>

    <p>This method populates the blob's system properties and user-defined metadata. Before reading or modifying a blob's properties or metadata, call this method or its overload to retrieve the latest values for the blob's properties and metadata from the Microsoft Azure storage service.</p>

    <p></p>
  syntax: public final void downloadAttributes(final AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  uid: com.microsoft.azure.storage.blob.CloudBlob.downloadAttributes(final AccessCondition,BlobRequestOptions,OperationContext)
- fullName: com.microsoft.azure.storage.blob.CloudBlob.downloadRange(final long offset, final Long length, final OutputStream outStream)
  name: downloadRange(final long offset, final Long length, final OutputStream outStream)
  nameWithType: CloudBlob.downloadRange(final long offset, final Long length, final OutputStream outStream)
  parameters:
  - description: <p>A <code>long</code> which represents the offset to use as the starting point for the source. </p>
    name: offset
    type: <xref href="final+long?alt=final+long&text=final+long" data-throw-if-not-resolved="False"/>
  - description: <p>A <code>Long</code> which represents the number of bytes to read or <code>null</code>. </p>
    name: length
    type: <xref href="final+Long?alt=final+Long&text=final+Long" data-throw-if-not-resolved="False"/>
  - description: <p>An <code><xref uid="" data-throw-if-not-resolved="false" data-raw-source="OutputStream"></xref></code> object that represents the target stream. </p>
    name: outStream
    type: <xref href="final+OutputStream?alt=final+OutputStream&text=final+OutputStream" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  returns:
    type: <xref href="final+void?alt=final+void&text=final+void" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Downloads the contents of a blob to a stream.</p>

    <p></p>
  syntax: public final void downloadRange(final long offset, final Long length, final OutputStream outStream)
  uid: com.microsoft.azure.storage.blob.CloudBlob.downloadRange(final long,final Long,final OutputStream)
- fullName: com.microsoft.azure.storage.blob.CloudBlob.downloadRange(final long offset, final Long length, final OutputStream outStream, final AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  name: downloadRange(final long offset, final Long length, final OutputStream outStream, final AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  nameWithType: CloudBlob.downloadRange(final long offset, final Long length, final OutputStream outStream, final AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  parameters:
  - description: <p>A <code>long</code> which represents the offset to use as the starting point for the source. </p>
    name: offset
    type: <xref href="final+long?alt=final+long&text=final+long" data-throw-if-not-resolved="False"/>
  - description: <p>A <code>Long</code> which represents the number of bytes to read or <code>null</code>. </p>
    name: length
    type: <xref href="final+Long?alt=final+Long&text=final+Long" data-throw-if-not-resolved="False"/>
  - description: <p>An <code><xref uid="" data-throw-if-not-resolved="false" data-raw-source="OutputStream"></xref></code> object that represents the target stream. </p>
    name: outStream
    type: <xref href="final+OutputStream?alt=final+OutputStream&text=final+OutputStream" data-throw-if-not-resolved="False"/>
  - description: <p>An <xref uid="com.microsoft.azure.storage.AccessCondition" data-throw-if-not-resolved="false" data-raw-source="AccessCondition"></xref> object that represents the access conditions for the blob. </p>
    name: accessCondition
    type: final <xref href="com.microsoft.azure.storage.AccessCondition?alt=com.microsoft.azure.storage.AccessCondition&text=AccessCondition" data-throw-if-not-resolved="False"/>
  - description: <p>A <xref uid="com.microsoft.azure.storage.blob.BlobRequestOptions" data-throw-if-not-resolved="false" data-raw-source="BlobRequestOptions"></xref> object that specifies any additional options for the request. Specifying <code>null</code> will use the default request options from the associated service client ( <xref uid="com.microsoft.azure.storage.blob.CloudBlobClient" data-throw-if-not-resolved="false" data-raw-source="CloudBlobClient"></xref>). </p>
    name: options
    type: <xref href="com.microsoft.azure.storage.blob.BlobRequestOptions?alt=com.microsoft.azure.storage.blob.BlobRequestOptions&text=BlobRequestOptions" data-throw-if-not-resolved="False"/>
  - description: <p>An <xref uid="com.microsoft.azure.storage.OperationContext" data-throw-if-not-resolved="false" data-raw-source="OperationContext"></xref> object that represents the context for the current operation. This object is used to track requests to the storage service, and to provide additional runtime information about the operation. </p>
    name: opContext
    type: <xref href="com.microsoft.azure.storage.OperationContext?alt=com.microsoft.azure.storage.OperationContext&text=OperationContext" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  returns:
    type: <xref href="final+void?alt=final+void&text=final+void" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Downloads the contents of a blob to a stream using the specified request options and operation context.</p>

    <p></p>
  syntax: public final void downloadRange(final long offset, final Long length, final OutputStream outStream, final AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  uid: com.microsoft.azure.storage.blob.CloudBlob.downloadRange(final long,final Long,final OutputStream,final AccessCondition,BlobRequestOptions,OperationContext)
- fullName: com.microsoft.azure.storage.blob.CloudBlob.downloadRangeInternal(final long blobOffset, final Long length, final byte[] buffer, final int bufferOffset, final AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  name: downloadRangeInternal(final long blobOffset, final Long length, final byte[] buffer, final int bufferOffset, final AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  nameWithType: CloudBlob.downloadRangeInternal(final long blobOffset, final Long length, final byte[] buffer, final int bufferOffset, final AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  parameters:
  - description: <p>A <code>long</code> which represents the offset within the blob to begin downloading. </p>
    name: blobOffset
    type: <xref href="final+long?alt=final+long&text=final+long" data-throw-if-not-resolved="False"/>
  - description: <p>A <code>Long</code> which represents the number of bytes to read. </p>
    name: length
    type: <xref href="final+Long?alt=final+Long&text=final+Long" data-throw-if-not-resolved="False"/>
  - description: <p>A <code>byte</code> array which represents the buffer to write to. </p>
    name: buffer
    type: <xref href="final+byte+%5B%5D?alt=final+byte+%5B%5D&text=final+byte+%5B%5D" data-throw-if-not-resolved="False"/>
  - description: <p>An <code>int</code> which represents the offset in the byte buffer to begin writing. </p>
    name: bufferOffset
    type: <xref href="final+int?alt=final+int&text=final+int" data-throw-if-not-resolved="False"/>
  - description: <p>An <xref uid="com.microsoft.azure.storage.AccessCondition" data-throw-if-not-resolved="false" data-raw-source="AccessCondition"></xref> object that represents the access conditions for the blob. </p>
    name: accessCondition
    type: final <xref href="com.microsoft.azure.storage.AccessCondition?alt=com.microsoft.azure.storage.AccessCondition&text=AccessCondition" data-throw-if-not-resolved="False"/>
  - description: <p>A <xref uid="com.microsoft.azure.storage.blob.BlobRequestOptions" data-throw-if-not-resolved="false" data-raw-source="BlobRequestOptions"></xref> object that specifies any additional options for the request. </p>
    name: options
    type: <xref href="com.microsoft.azure.storage.blob.BlobRequestOptions?alt=com.microsoft.azure.storage.blob.BlobRequestOptions&text=BlobRequestOptions" data-throw-if-not-resolved="False"/>
  - description: <p>An <xref uid="com.microsoft.azure.storage.OperationContext" data-throw-if-not-resolved="false" data-raw-source="OperationContext"></xref> object used to track the execution of the operation. </p>
    name: opContext
    type: <xref href="com.microsoft.azure.storage.OperationContext?alt=com.microsoft.azure.storage.OperationContext&text=OperationContext" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>an exception representing any error which occurred during the operation. </p>
  returns:
    description: <p>The total number of bytes read into the buffer.</p>
    type: <xref href="final+int?alt=final+int&text=final+int" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Downloads a range of bytes from the blob to the given byte buffer.</p>

    <p></p>
  syntax: protected final int downloadRangeInternal(final long blobOffset, final Long length, final byte[] buffer, final int bufferOffset, final AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  uid: com.microsoft.azure.storage.blob.CloudBlob.downloadRangeInternal(final long,final Long,final byte [],final int,final AccessCondition,BlobRequestOptions,OperationContext)
- fullName: com.microsoft.azure.storage.blob.CloudBlob.downloadRangeToByteArray(final long offset, final Long length, final byte[] buffer, final int bufferOffset)
  name: downloadRangeToByteArray(final long offset, final Long length, final byte[] buffer, final int bufferOffset)
  nameWithType: CloudBlob.downloadRangeToByteArray(final long offset, final Long length, final byte[] buffer, final int bufferOffset)
  parameters:
  - description: <p>A <code>long</code> which represents the byte offset to use as the starting point for the source. </p>
    name: offset
    type: <xref href="final+long?alt=final+long&text=final+long" data-throw-if-not-resolved="False"/>
  - description: <p>A <code>Long</code> which represents the number of bytes to read or null. </p>
    name: length
    type: <xref href="final+Long?alt=final+Long&text=final+Long" data-throw-if-not-resolved="False"/>
  - description: <p>A <code>byte</code> array which represents the buffer to which the blob bytes are downloaded. </p>
    name: buffer
    type: <xref href="final+byte+%5B%5D?alt=final+byte+%5B%5D&text=final+byte+%5B%5D" data-throw-if-not-resolved="False"/>
  - description: <p>An <code>int</code> which represents the byte offset to use as the starting point for the target. </p>
    name: bufferOffset
    type: <xref href="final+int?alt=final+int&text=final+int" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>The total number of bytes read into the buffer.</p>
    type: <xref href="final+int?alt=final+int&text=final+int" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Downloads a range of bytes from the blob to the given byte buffer.</p>

    <p></p>
  syntax: public final int downloadRangeToByteArray(final long offset, final Long length, final byte[] buffer, final int bufferOffset)
  uid: com.microsoft.azure.storage.blob.CloudBlob.downloadRangeToByteArray(final long,final Long,final byte [],final int)
- fullName: com.microsoft.azure.storage.blob.CloudBlob.downloadRangeToByteArray(final long offset, final Long length, final byte[] buffer, final int bufferOffset, final AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  name: downloadRangeToByteArray(final long offset, final Long length, final byte[] buffer, final int bufferOffset, final AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  nameWithType: CloudBlob.downloadRangeToByteArray(final long offset, final Long length, final byte[] buffer, final int bufferOffset, final AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  parameters:
  - description: <p>A <code>long</code> which represents the byte offset to use as the starting point for the source. </p>
    name: offset
    type: <xref href="final+long?alt=final+long&text=final+long" data-throw-if-not-resolved="False"/>
  - description: <p>A <code>Long</code> which represents the number of bytes to read or <code>null</code>. </p>
    name: length
    type: <xref href="final+Long?alt=final+Long&text=final+Long" data-throw-if-not-resolved="False"/>
  - description: <p>A <code>byte</code> array which represents the buffer to which the blob bytes are downloaded. </p>
    name: buffer
    type: <xref href="final+byte+%5B%5D?alt=final+byte+%5B%5D&text=final+byte+%5B%5D" data-throw-if-not-resolved="False"/>
  - description: <p>An <code>int</code> which represents the byte offset to use as the starting point for the target. </p>
    name: bufferOffset
    type: <xref href="final+int?alt=final+int&text=final+int" data-throw-if-not-resolved="False"/>
  - description: <p>An <xref uid="com.microsoft.azure.storage.AccessCondition" data-throw-if-not-resolved="false" data-raw-source="AccessCondition"></xref> object that represents the access conditions for the blob. </p>
    name: accessCondition
    type: final <xref href="com.microsoft.azure.storage.AccessCondition?alt=com.microsoft.azure.storage.AccessCondition&text=AccessCondition" data-throw-if-not-resolved="False"/>
  - description: <p>A <xref uid="com.microsoft.azure.storage.blob.BlobRequestOptions" data-throw-if-not-resolved="false" data-raw-source="BlobRequestOptions"></xref> object that specifies any additional options for the request. Specifying <code>null</code> will use the default request options from the associated service client ( <xref uid="com.microsoft.azure.storage.blob.CloudBlobClient" data-throw-if-not-resolved="false" data-raw-source="CloudBlobClient"></xref>). </p>
    name: options
    type: <xref href="com.microsoft.azure.storage.blob.BlobRequestOptions?alt=com.microsoft.azure.storage.blob.BlobRequestOptions&text=BlobRequestOptions" data-throw-if-not-resolved="False"/>
  - description: <p>An <xref uid="com.microsoft.azure.storage.OperationContext" data-throw-if-not-resolved="false" data-raw-source="OperationContext"></xref> object that represents the context for the current operation. This object is used to track requests to the storage service, and to provide additional runtime information about the operation. </p>
    name: opContext
    type: <xref href="com.microsoft.azure.storage.OperationContext?alt=com.microsoft.azure.storage.OperationContext&text=OperationContext" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  returns:
    description: <p>The total number of bytes read into the buffer.</p>
    type: <xref href="final+int?alt=final+int&text=final+int" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Downloads a range of bytes from the blob to the given byte buffer, using the specified request options and operation context.</p>

    <p></p>
  syntax: public final int downloadRangeToByteArray(final long offset, final Long length, final byte[] buffer, final int bufferOffset, final AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  uid: com.microsoft.azure.storage.blob.CloudBlob.downloadRangeToByteArray(final long,final Long,final byte [],final int,final AccessCondition,BlobRequestOptions,OperationContext)
- fullName: com.microsoft.azure.storage.blob.CloudBlob.downloadToByteArray(final byte[] buffer, final int bufferOffset)
  name: downloadToByteArray(final byte[] buffer, final int bufferOffset)
  nameWithType: CloudBlob.downloadToByteArray(final byte[] buffer, final int bufferOffset)
  parameters:
  - description: <p>A <code>byte</code> array which represents the buffer to which the blob bytes are downloaded. </p>
    name: buffer
    type: <xref href="final+byte+%5B%5D?alt=final+byte+%5B%5D&text=final+byte+%5B%5D" data-throw-if-not-resolved="False"/>
  - description: <p>An <code>int</code> which represents the byte offset to use as the starting point for the target.</p>
    name: bufferOffset
    type: <xref href="final+int?alt=final+int&text=final+int" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  returns:
    type: <xref href="final+int?alt=final+int&text=final+int" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Downloads a range of bytes from the blob to the given byte buffer.</p>

    <p></p>
  syntax: public final int downloadToByteArray(final byte[] buffer, final int bufferOffset)
  uid: com.microsoft.azure.storage.blob.CloudBlob.downloadToByteArray(final byte [],final int)
- fullName: com.microsoft.azure.storage.blob.CloudBlob.downloadToByteArray(final byte[] buffer, final int bufferOffset, final AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  name: downloadToByteArray(final byte[] buffer, final int bufferOffset, final AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  nameWithType: CloudBlob.downloadToByteArray(final byte[] buffer, final int bufferOffset, final AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  parameters:
  - description: <p>A <code>byte</code> array which represents the buffer to which the blob bytes are downloaded. </p>
    name: buffer
    type: <xref href="final+byte+%5B%5D?alt=final+byte+%5B%5D&text=final+byte+%5B%5D" data-throw-if-not-resolved="False"/>
  - description: <p>A <code>long</code> which represents the byte offset to use as the starting point for the target. </p>
    name: bufferOffset
    type: <xref href="final+int?alt=final+int&text=final+int" data-throw-if-not-resolved="False"/>
  - description: <p>An <xref uid="com.microsoft.azure.storage.AccessCondition" data-throw-if-not-resolved="false" data-raw-source="AccessCondition"></xref> object that represents the access conditions for the blob. </p>
    name: accessCondition
    type: final <xref href="com.microsoft.azure.storage.AccessCondition?alt=com.microsoft.azure.storage.AccessCondition&text=AccessCondition" data-throw-if-not-resolved="False"/>
  - description: <p>A <xref uid="com.microsoft.azure.storage.blob.BlobRequestOptions" data-throw-if-not-resolved="false" data-raw-source="BlobRequestOptions"></xref> object that specifies any additional options for the request. Specifying <code>null</code> will use the default request options from the associated service client ( <xref uid="com.microsoft.azure.storage.blob.CloudBlobClient" data-throw-if-not-resolved="false" data-raw-source="CloudBlobClient"></xref>). </p>
    name: options
    type: <xref href="com.microsoft.azure.storage.blob.BlobRequestOptions?alt=com.microsoft.azure.storage.blob.BlobRequestOptions&text=BlobRequestOptions" data-throw-if-not-resolved="False"/>
  - description: <p>An <xref uid="com.microsoft.azure.storage.OperationContext" data-throw-if-not-resolved="false" data-raw-source="OperationContext"></xref> object that represents the context for the current operation. This object is used to track requests to the storage service, and to provide additional runtime information about the operation.</p>
    name: opContext
    type: <xref href="com.microsoft.azure.storage.OperationContext?alt=com.microsoft.azure.storage.OperationContext&text=OperationContext" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  returns:
    type: <xref href="final+int?alt=final+int&text=final+int" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Downloads a range of bytes from the blob to the given byte buffer, using the specified request options and operation context.</p>

    <p></p>
  syntax: public final int downloadToByteArray(final byte[] buffer, final int bufferOffset, final AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  uid: com.microsoft.azure.storage.blob.CloudBlob.downloadToByteArray(final byte [],final int,final AccessCondition,BlobRequestOptions,OperationContext)
- fullName: com.microsoft.azure.storage.blob.CloudBlob.downloadToFile(final String path)
  name: downloadToFile(final String path)
  nameWithType: CloudBlob.downloadToFile(final String path)
  parameters:
  - description: <p>A <code>String</code> which represents the path to the file that will be created with the contents of the blob.</p>
    name: path
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Downloads a blob, storing the contents in a file.</p>

    <p></p>
  syntax: public void downloadToFile(final String path)
  uid: com.microsoft.azure.storage.blob.CloudBlob.downloadToFile(final String)
- fullName: com.microsoft.azure.storage.blob.CloudBlob.downloadToFile(final String path, final AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  name: downloadToFile(final String path, final AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  nameWithType: CloudBlob.downloadToFile(final String path, final AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  parameters:
  - description: <p>A <code>String</code> which represents the path to the file that will be created with the contents of the blob. </p>
    name: path
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>An <xref uid="com.microsoft.azure.storage.AccessCondition" data-throw-if-not-resolved="false" data-raw-source="AccessCondition"></xref> object that represents the access conditions for the blob. </p>
    name: accessCondition
    type: final <xref href="com.microsoft.azure.storage.AccessCondition?alt=com.microsoft.azure.storage.AccessCondition&text=AccessCondition" data-throw-if-not-resolved="False"/>
  - description: <p>A <xref uid="com.microsoft.azure.storage.blob.BlobRequestOptions" data-throw-if-not-resolved="false" data-raw-source="BlobRequestOptions"></xref> object that specifies any additional options for the request. Specifying <code>null</code> will use the default request options from the associated service client ( <xref uid="com.microsoft.azure.storage.blob.CloudBlobClient" data-throw-if-not-resolved="false" data-raw-source="CloudBlobClient"></xref>). </p>
    name: options
    type: <xref href="com.microsoft.azure.storage.blob.BlobRequestOptions?alt=com.microsoft.azure.storage.blob.BlobRequestOptions&text=BlobRequestOptions" data-throw-if-not-resolved="False"/>
  - description: <p>An <xref uid="com.microsoft.azure.storage.OperationContext" data-throw-if-not-resolved="false" data-raw-source="OperationContext"></xref> object that represents the context for the current operation. This object is used to track requests to the storage service, and to provide additional runtime information about the operation.</p>
    name: opContext
    type: <xref href="com.microsoft.azure.storage.OperationContext?alt=com.microsoft.azure.storage.OperationContext&text=OperationContext" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Downloads a blob, storing the contents in a file.</p>

    <p></p>
  syntax: public void downloadToFile(final String path, final AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  uid: com.microsoft.azure.storage.blob.CloudBlob.downloadToFile(final String,final AccessCondition,BlobRequestOptions,OperationContext)
- fullName: com.microsoft.azure.storage.blob.CloudBlob.exists()
  name: exists()
  nameWithType: CloudBlob.exists()
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  returns:
    description: >-
      <p>

        <code>true</code> if the blob exists, otherwise <code>false</code>.</p>
    type: <xref href="final+boolean?alt=final+boolean&text=final+boolean" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Checks to see if the blob exists.</p>

    <p></p>
  syntax: public final boolean exists()
  uid: com.microsoft.azure.storage.blob.CloudBlob.exists()
- fullName: com.microsoft.azure.storage.blob.CloudBlob.exists(final AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  name: exists(final AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  nameWithType: CloudBlob.exists(final AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  parameters:
  - description: <p>An <xref uid="com.microsoft.azure.storage.AccessCondition" data-throw-if-not-resolved="false" data-raw-source="AccessCondition"></xref> object that represents the access conditions for the blob. </p>
    name: accessCondition
    type: final <xref href="com.microsoft.azure.storage.AccessCondition?alt=com.microsoft.azure.storage.AccessCondition&text=AccessCondition" data-throw-if-not-resolved="False"/>
  - description: <p>A <xref uid="com.microsoft.azure.storage.blob.BlobRequestOptions" data-throw-if-not-resolved="false" data-raw-source="BlobRequestOptions"></xref> object that specifies any additional options for the request. Specifying <code>null</code> will use the default request options from the associated service client ( <xref uid="com.microsoft.azure.storage.blob.CloudBlobClient" data-throw-if-not-resolved="false" data-raw-source="CloudBlobClient"></xref>). </p>
    name: options
    type: <xref href="com.microsoft.azure.storage.blob.BlobRequestOptions?alt=com.microsoft.azure.storage.blob.BlobRequestOptions&text=BlobRequestOptions" data-throw-if-not-resolved="False"/>
  - description: <p>An <xref uid="com.microsoft.azure.storage.OperationContext" data-throw-if-not-resolved="false" data-raw-source="OperationContext"></xref> object that represents the context for the current operation. This object is used to track requests to the storage service, and to provide additional runtime information about the operation.</p>
    name: opContext
    type: <xref href="com.microsoft.azure.storage.OperationContext?alt=com.microsoft.azure.storage.OperationContext&text=OperationContext" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  returns:
    description: >-
      <p>

        <code>true</code> if the blob exists, other wise <code>false</code>.</p>
    type: <xref href="final+boolean?alt=final+boolean&text=final+boolean" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Checks to see if the blob exists, using the specified request options and operation context.</p>

    <p></p>
  syntax: public final boolean exists(final AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  uid: com.microsoft.azure.storage.blob.CloudBlob.exists(final AccessCondition,BlobRequestOptions,OperationContext)
- fullName: com.microsoft.azure.storage.blob.CloudBlob.generateSharedAccessSignature(final SharedAccessBlobPolicy policy, final SharedAccessBlobHeaders headers, final String groupPolicyIdentifier)
  name: generateSharedAccessSignature(final SharedAccessBlobPolicy policy, final SharedAccessBlobHeaders headers, final String groupPolicyIdentifier)
  nameWithType: CloudBlob.generateSharedAccessSignature(final SharedAccessBlobPolicy policy, final SharedAccessBlobHeaders headers, final String groupPolicyIdentifier)
  parameters:
  - description: <p>A <code>SharedAccessPolicy</code> object that represents the access policy for the shared access signature. </p>
    name: policy
    type: final <xref href="com.microsoft.azure.storage.blob.SharedAccessBlobPolicy?alt=com.microsoft.azure.storage.blob.SharedAccessBlobPolicy&text=SharedAccessBlobPolicy" data-throw-if-not-resolved="False"/>
  - description: <p>A <code><xref uid="com.microsoft.azure.storage.blob.SharedAccessBlobHeaders" data-throw-if-not-resolved="false" data-raw-source="SharedAccessBlobHeaders"></xref></code> object that represents the optional header values to set for a blob accessed with this shared access signature. </p>
    name: headers
    type: final <xref href="com.microsoft.azure.storage.blob.SharedAccessBlobHeaders?alt=com.microsoft.azure.storage.blob.SharedAccessBlobHeaders&text=SharedAccessBlobHeaders" data-throw-if-not-resolved="False"/>
  - description: <p>A <code>String</code> that represents the container-level access policy.</p>
    name: groupPolicyIdentifier
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>If the credentials are invalid or the blob is a snapshot. </p>
  - type: <xref href="InvalidKeyException?alt=InvalidKeyException&text=InvalidKeyException" data-throw-if-not-resolved="False"/>
    description: <p>If the credentials are invalid. </p>
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  returns:
    description: <p>A <code>String</code> that represents the shared access signature.</p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Returns a shared access signature for the blob using the specified group policy identifier and operation context. Note this does not contain the leading "?".</p>

    <p></p>
  syntax: public String generateSharedAccessSignature(final SharedAccessBlobPolicy policy, final SharedAccessBlobHeaders headers, final String groupPolicyIdentifier)
  uid: com.microsoft.azure.storage.blob.CloudBlob.generateSharedAccessSignature(final SharedAccessBlobPolicy,final SharedAccessBlobHeaders,final String)
- fullName: com.microsoft.azure.storage.blob.CloudBlob.generateSharedAccessSignature(final SharedAccessBlobPolicy policy, final SharedAccessBlobHeaders headers, final String groupPolicyIdentifier, final IPRange ipRange, final SharedAccessProtocols protocols)
  name: generateSharedAccessSignature(final SharedAccessBlobPolicy policy, final SharedAccessBlobHeaders headers, final String groupPolicyIdentifier, final IPRange ipRange, final SharedAccessProtocols protocols)
  nameWithType: CloudBlob.generateSharedAccessSignature(final SharedAccessBlobPolicy policy, final SharedAccessBlobHeaders headers, final String groupPolicyIdentifier, final IPRange ipRange, final SharedAccessProtocols protocols)
  parameters:
  - description: <p>A <code><xref uid="com.microsoft.azure.storage.SharedAccessPolicy" data-throw-if-not-resolved="false" data-raw-source="SharedAccessPolicy"></xref></code> object that represents the access policy for the shared access signature. </p>
    name: policy
    type: final <xref href="com.microsoft.azure.storage.blob.SharedAccessBlobPolicy?alt=com.microsoft.azure.storage.blob.SharedAccessBlobPolicy&text=SharedAccessBlobPolicy" data-throw-if-not-resolved="False"/>
  - description: <p>A <code><xref uid="com.microsoft.azure.storage.blob.SharedAccessBlobHeaders" data-throw-if-not-resolved="false" data-raw-source="SharedAccessBlobHeaders"></xref></code> object that represents the optional header values to set for a blob accessed with this shared access signature. </p>
    name: headers
    type: final <xref href="com.microsoft.azure.storage.blob.SharedAccessBlobHeaders?alt=com.microsoft.azure.storage.blob.SharedAccessBlobHeaders&text=SharedAccessBlobHeaders" data-throw-if-not-resolved="False"/>
  - description: <p>A <code>String</code> that represents the container-level access policy. </p>
    name: groupPolicyIdentifier
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>A <xref uid="com.microsoft.azure.storage.IPRange" data-throw-if-not-resolved="false" data-raw-source="IPRange"></xref> object containing the range of allowed IP addresses. </p>
    name: ipRange
    type: final <xref href="com.microsoft.azure.storage.IPRange?alt=com.microsoft.azure.storage.IPRange&text=IPRange" data-throw-if-not-resolved="False"/>
  - description: <p>A <xref uid="com.microsoft.azure.storage.SharedAccessProtocols" data-throw-if-not-resolved="false" data-raw-source="SharedAccessProtocols"></xref> representing the allowed Internet protocols.</p>
    name: protocols
    type: final <xref href="com.microsoft.azure.storage.SharedAccessProtocols?alt=com.microsoft.azure.storage.SharedAccessProtocols&text=SharedAccessProtocols" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>If the credentials are invalid or the blob is a snapshot. </p>
  - type: <xref href="InvalidKeyException?alt=InvalidKeyException&text=InvalidKeyException" data-throw-if-not-resolved="False"/>
    description: <p>If the credentials are invalid. </p>
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  returns:
    description: <p>A <code>String</code> that represents the shared access signature.</p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Returns a shared access signature for the blob using the specified group policy identifier and operation context. Note this does not contain the leading "?".</p>

    <p></p>
  syntax: public String generateSharedAccessSignature(final SharedAccessBlobPolicy policy, final SharedAccessBlobHeaders headers, final String groupPolicyIdentifier, final IPRange ipRange, final SharedAccessProtocols protocols)
  uid: com.microsoft.azure.storage.blob.CloudBlob.generateSharedAccessSignature(final SharedAccessBlobPolicy,final SharedAccessBlobHeaders,final String,final IPRange,final SharedAccessProtocols)
- fullName: com.microsoft.azure.storage.blob.CloudBlob.generateSharedAccessSignature(final SharedAccessBlobPolicy policy, final SharedAccessBlobHeaders headers, final String groupPolicyIdentifier, final IPRange ipRange, final SharedAccessProtocols protocols, boolean skipDecoding)
  name: generateSharedAccessSignature(final SharedAccessBlobPolicy policy, final SharedAccessBlobHeaders headers, final String groupPolicyIdentifier, final IPRange ipRange, final SharedAccessProtocols protocols, boolean skipDecoding)
  nameWithType: CloudBlob.generateSharedAccessSignature(final SharedAccessBlobPolicy policy, final SharedAccessBlobHeaders headers, final String groupPolicyIdentifier, final IPRange ipRange, final SharedAccessProtocols protocols, boolean skipDecoding)
  parameters:
  - description: <p>A <code><xref uid="com.microsoft.azure.storage.SharedAccessPolicy" data-throw-if-not-resolved="false" data-raw-source="SharedAccessPolicy"></xref></code> object that represents the access policy for the shared access signature. </p>
    name: policy
    type: final <xref href="com.microsoft.azure.storage.blob.SharedAccessBlobPolicy?alt=com.microsoft.azure.storage.blob.SharedAccessBlobPolicy&text=SharedAccessBlobPolicy" data-throw-if-not-resolved="False"/>
  - description: <p>A <code><xref uid="com.microsoft.azure.storage.blob.SharedAccessBlobHeaders" data-throw-if-not-resolved="false" data-raw-source="SharedAccessBlobHeaders"></xref></code> object that represents the optional header values to set for a blob accessed with this shared access signature. </p>
    name: headers
    type: final <xref href="com.microsoft.azure.storage.blob.SharedAccessBlobHeaders?alt=com.microsoft.azure.storage.blob.SharedAccessBlobHeaders&text=SharedAccessBlobHeaders" data-throw-if-not-resolved="False"/>
  - description: <p>A <code>String</code> that represents the container-level access policy. </p>
    name: groupPolicyIdentifier
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>A <xref uid="com.microsoft.azure.storage.IPRange" data-throw-if-not-resolved="false" data-raw-source="IPRange"></xref> object containing the range of allowed IP addresses. </p>
    name: ipRange
    type: final <xref href="com.microsoft.azure.storage.IPRange?alt=com.microsoft.azure.storage.IPRange&text=IPRange" data-throw-if-not-resolved="False"/>
  - description: <p>A <xref uid="com.microsoft.azure.storage.SharedAccessProtocols" data-throw-if-not-resolved="false" data-raw-source="SharedAccessProtocols"></xref> representing the allowed Internet protocols. </p>
    name: protocols
    type: final <xref href="com.microsoft.azure.storage.SharedAccessProtocols?alt=com.microsoft.azure.storage.SharedAccessProtocols&text=SharedAccessProtocols" data-throw-if-not-resolved="False"/>
  - description: <p>A <code>boolean</code> to indicate that the query parameters should not be decoded before being signed. This should only be used if the customer is sure the values passed are in the desired format. This may be useful in some scenarios where the client is used to generate a sas to a third party that will not be using this sdk to make the requests.</p>
    name: skipDecoding
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>If the credentials are invalid or the blob is a snapshot. </p>
  - type: <xref href="InvalidKeyException?alt=InvalidKeyException&text=InvalidKeyException" data-throw-if-not-resolved="False"/>
    description: <p>If the credentials are invalid. </p>
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  returns:
    description: <p>A <code>String</code> that represents the shared access signature.</p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Returns a shared access signature for the blob using the specified group policy identifier and operation context. Note this does not contain the leading "?".</p>

    <p></p>
  syntax: public String generateSharedAccessSignature(final SharedAccessBlobPolicy policy, final SharedAccessBlobHeaders headers, final String groupPolicyIdentifier, final IPRange ipRange, final SharedAccessProtocols protocols, boolean skipDecoding)
  uid: com.microsoft.azure.storage.blob.CloudBlob.generateSharedAccessSignature(final SharedAccessBlobPolicy,final SharedAccessBlobHeaders,final String,final IPRange,final SharedAccessProtocols,boolean)
- fullName: com.microsoft.azure.storage.blob.CloudBlob.generateSharedAccessSignature(final SharedAccessBlobPolicy policy, final String groupPolicyIdentifier)
  name: generateSharedAccessSignature(final SharedAccessBlobPolicy policy, final String groupPolicyIdentifier)
  nameWithType: CloudBlob.generateSharedAccessSignature(final SharedAccessBlobPolicy policy, final String groupPolicyIdentifier)
  parameters:
  - description: <p>A <code>SharedAccessPolicy</code> object that represents the access policy for the shared access signature. </p>
    name: policy
    type: final <xref href="com.microsoft.azure.storage.blob.SharedAccessBlobPolicy?alt=com.microsoft.azure.storage.blob.SharedAccessBlobPolicy&text=SharedAccessBlobPolicy" data-throw-if-not-resolved="False"/>
  - description: <p>A <code>String</code> that represents the container-level access policy.</p>
    name: groupPolicyIdentifier
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>If the credentials are invalid or the blob is a snapshot. </p>
  - type: <xref href="InvalidKeyException?alt=InvalidKeyException&text=InvalidKeyException" data-throw-if-not-resolved="False"/>
    description: <p>If the credentials are invalid. </p>
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  returns:
    description: <p>A <code>String</code> that represents the shared access signature.</p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Returns a shared access signature for the blob using the specified group policy identifier and operation context. Note this does not contain the leading "?".</p>

    <p></p>
  syntax: public String generateSharedAccessSignature(final SharedAccessBlobPolicy policy, final String groupPolicyIdentifier)
  uid: com.microsoft.azure.storage.blob.CloudBlob.generateSharedAccessSignature(final SharedAccessBlobPolicy,final String)
- fullName: com.microsoft.azure.storage.blob.CloudBlob.generateUserDelegationSharedAccessSignature(final UserDelegationKey delegationKey, final SharedAccessBlobPolicy policy, final SharedAccessBlobHeaders headers, final IPRange ipRange, final SharedAccessProtocols protocols)
  name: generateUserDelegationSharedAccessSignature(final UserDelegationKey delegationKey, final SharedAccessBlobPolicy policy, final SharedAccessBlobHeaders headers, final IPRange ipRange, final SharedAccessProtocols protocols)
  nameWithType: CloudBlob.generateUserDelegationSharedAccessSignature(final UserDelegationKey delegationKey, final SharedAccessBlobPolicy policy, final SharedAccessBlobHeaders headers, final IPRange ipRange, final SharedAccessProtocols protocols)
  parameters:
  - description: <p>A <code><xref uid="com.microsoft.azure.storage.UserDelegationKey" data-throw-if-not-resolved="false" data-raw-source="UserDelegationKey"></xref></code> representing the key used to sign this signature. </p>
    name: delegationKey
    type: final <xref href="com.microsoft.azure.storage.UserDelegationKey?alt=com.microsoft.azure.storage.UserDelegationKey&text=UserDelegationKey" data-throw-if-not-resolved="False"/>
  - description: <p>A <code><xref uid="com.microsoft.azure.storage.SharedAccessPolicy" data-throw-if-not-resolved="false" data-raw-source="SharedAccessPolicy"></xref></code> object that represents the access policy for the shared access signature. </p>
    name: policy
    type: final <xref href="com.microsoft.azure.storage.blob.SharedAccessBlobPolicy?alt=com.microsoft.azure.storage.blob.SharedAccessBlobPolicy&text=SharedAccessBlobPolicy" data-throw-if-not-resolved="False"/>
  - description: <p>A <code><xref uid="com.microsoft.azure.storage.blob.SharedAccessBlobHeaders" data-throw-if-not-resolved="false" data-raw-source="SharedAccessBlobHeaders"></xref></code> object that represents the optional header values to set for a blob accessed with this shared access signature. </p>
    name: headers
    type: final <xref href="com.microsoft.azure.storage.blob.SharedAccessBlobHeaders?alt=com.microsoft.azure.storage.blob.SharedAccessBlobHeaders&text=SharedAccessBlobHeaders" data-throw-if-not-resolved="False"/>
  - description: <p>A <xref uid="com.microsoft.azure.storage.IPRange" data-throw-if-not-resolved="false" data-raw-source="IPRange"></xref> object containing the range of allowed IP addresses. </p>
    name: ipRange
    type: final <xref href="com.microsoft.azure.storage.IPRange?alt=com.microsoft.azure.storage.IPRange&text=IPRange" data-throw-if-not-resolved="False"/>
  - description: <p>A <xref uid="com.microsoft.azure.storage.SharedAccessProtocols" data-throw-if-not-resolved="false" data-raw-source="SharedAccessProtocols"></xref> representing the allowed Internet protocols. </p>
    name: protocols
    type: final <xref href="com.microsoft.azure.storage.SharedAccessProtocols?alt=com.microsoft.azure.storage.SharedAccessProtocols&text=SharedAccessProtocols" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  returns:
    description: <p>A <code>String</code> that represents the shared access signature. </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: <p>Returns a shared access signature based on a user delegation key for the blob using the specified group policy identifier and operation context. Note this does not contain the leading "?". </p>
  syntax: public String generateUserDelegationSharedAccessSignature(final UserDelegationKey delegationKey, final SharedAccessBlobPolicy policy, final SharedAccessBlobHeaders headers, final IPRange ipRange, final SharedAccessProtocols protocols)
  uid: com.microsoft.azure.storage.blob.CloudBlob.generateUserDelegationSharedAccessSignature(final UserDelegationKey,final SharedAccessBlobPolicy,final SharedAccessBlobHeaders,final IPRange,final SharedAccessProtocols)
- fullName: com.microsoft.azure.storage.blob.CloudBlob.generateUserDelegationSharedAccessSignature(UserDelegationKey delegationKey, SharedAccessBlobPolicy policy)
  name: generateUserDelegationSharedAccessSignature(UserDelegationKey delegationKey, SharedAccessBlobPolicy policy)
  nameWithType: CloudBlob.generateUserDelegationSharedAccessSignature(UserDelegationKey delegationKey, SharedAccessBlobPolicy policy)
  parameters:
  - description: <p>A <code><xref uid="com.microsoft.azure.storage.UserDelegationKey" data-throw-if-not-resolved="false" data-raw-source="UserDelegationKey"></xref></code> representing the key used to sign this signature. </p>
    name: delegationKey
    type: <xref href="com.microsoft.azure.storage.UserDelegationKey?alt=com.microsoft.azure.storage.UserDelegationKey&text=UserDelegationKey" data-throw-if-not-resolved="False"/>
  - description: <p>A <code><xref uid="com.microsoft.azure.storage.SharedAccessPolicy" data-throw-if-not-resolved="false" data-raw-source="SharedAccessPolicy"></xref></code> object that represents the access policy for the shared access signature. </p>
    name: policy
    type: <xref href="com.microsoft.azure.storage.blob.SharedAccessBlobPolicy?alt=com.microsoft.azure.storage.blob.SharedAccessBlobPolicy&text=SharedAccessBlobPolicy" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  returns:
    description: <p>A <code>String</code> that represents the shared access signature. </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: <p>Returns a shared access signature based on a user delegation key for the blob using the specified group policy identifier and operation context. Note this does not contain the leading "?". </p>
  syntax: public String generateUserDelegationSharedAccessSignature(UserDelegationKey delegationKey, SharedAccessBlobPolicy policy)
  uid: com.microsoft.azure.storage.blob.CloudBlob.generateUserDelegationSharedAccessSignature(UserDelegationKey,SharedAccessBlobPolicy)
- fullName: com.microsoft.azure.storage.blob.CloudBlob.getContainer()
  name: getContainer()
  nameWithType: CloudBlob.getContainer()
  overridden: com.microsoft.azure.storage.blob.ListBlobItem.getContainer()
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  - type: <xref href="URISyntaxException?alt=URISyntaxException&text=URISyntaxException" data-throw-if-not-resolved="False"/>
    description: <p>If the resource URI is invalid. </p>
  returns:
    description: <p>A <xref uid="com.microsoft.azure.storage.blob.CloudBlobContainer" data-throw-if-not-resolved="false" data-raw-source="CloudBlobContainer"></xref> object that represents the container of the blob. </p>
    type: final <xref href="com.microsoft.azure.storage.blob.CloudBlobContainer?alt=com.microsoft.azure.storage.blob.CloudBlobContainer&text=CloudBlobContainer" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Returns the blob's container.</p>

    <p></p>
  syntax: public final CloudBlobContainer getContainer()
  uid: com.microsoft.azure.storage.blob.CloudBlob.getContainer()
- fullName: com.microsoft.azure.storage.blob.CloudBlob.getCopyState()
  name: getCopyState()
  nameWithType: CloudBlob.getCopyState()
  returns:
    description: <p>A <xref uid="com.microsoft.azure.storage.blob.CopyState" data-throw-if-not-resolved="false" data-raw-source="CopyState"></xref> object that represents the copy state of the blob. </p>
    type: <xref href="com.microsoft.azure.storage.blob.CopyState?alt=com.microsoft.azure.storage.blob.CopyState&text=CopyState" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Returns the blob's copy state.</p>

    <p></p>
  syntax: public CopyState getCopyState()
  uid: com.microsoft.azure.storage.blob.CloudBlob.getCopyState()
- fullName: com.microsoft.azure.storage.blob.CloudBlob.getMetadata()
  name: getMetadata()
  nameWithType: CloudBlob.getMetadata()
  returns:
    description: <p>A <code>java.util.HashMap</code> object that represents the metadata for the blob. </p>
    type: <xref href="final+HashMap%3CString%2C+String%3E?alt=final+HashMap%3CString%2C+String%3E&text=final+HashMap%3CString%2C+String%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Returns the metadata for the blob.</p>

    <p></p>
  syntax: public final HashMap<String, String> getMetadata()
  uid: com.microsoft.azure.storage.blob.CloudBlob.getMetadata()
- fullName: com.microsoft.azure.storage.blob.CloudBlob.getName()
  name: getName()
  nameWithType: CloudBlob.getName()
  returns:
    description: <p>A <code>String</code> that represents the name of the blob. </p>
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Returns the name of the blob.</p>

    <p></p>
  syntax: public final String getName()
  uid: com.microsoft.azure.storage.blob.CloudBlob.getName()
- fullName: com.microsoft.azure.storage.blob.CloudBlob.getParent()
  name: getParent()
  nameWithType: CloudBlob.getParent()
  overridden: com.microsoft.azure.storage.blob.ListBlobItem.getParent()
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  - type: <xref href="URISyntaxException?alt=URISyntaxException&text=URISyntaxException" data-throw-if-not-resolved="False"/>
    description: <p>If the resource URI is invalid. </p>
  returns:
    description: <p>A <xref uid="com.microsoft.azure.storage.blob.CloudBlobDirectory" data-throw-if-not-resolved="false" data-raw-source="CloudBlobDirectory"></xref> object that represents the parent directory for the blob.</p>
    type: final <xref href="com.microsoft.azure.storage.blob.CloudBlobDirectory?alt=com.microsoft.azure.storage.blob.CloudBlobDirectory&text=CloudBlobDirectory" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Returns the blob item's parent.</p>

    <p></p>
  syntax: public final CloudBlobDirectory getParent()
  uid: com.microsoft.azure.storage.blob.CloudBlob.getParent()
- fullName: com.microsoft.azure.storage.blob.CloudBlob.getParentNameFromURI(final StorageUri resourceAddress, final String delimiter, final CloudBlobContainer container)
  name: getParentNameFromURI(final StorageUri resourceAddress, final String delimiter, final CloudBlobContainer container)
  nameWithType: CloudBlob.getParentNameFromURI(final StorageUri resourceAddress, final String delimiter, final CloudBlobContainer container)
  parameters:
  - description: <p>A <xref uid="com.microsoft.azure.storage.StorageUri" data-throw-if-not-resolved="false" data-raw-source="StorageUri"></xref> object which represents the resource URI. </p>
    name: resourceAddress
    type: final <xref href="com.microsoft.azure.storage.StorageUri?alt=com.microsoft.azure.storage.StorageUri&text=StorageUri" data-throw-if-not-resolved="False"/>
  - description: <p>A <code>String</code> which specifies the directory delimiter to use. </p>
    name: delimiter
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>A <xref uid="com.microsoft.azure.storage.blob.CloudBlobContainer" data-throw-if-not-resolved="false" data-raw-source="CloudBlobContainer"></xref> object which represents the blob container.</p>
    name: container
    type: final <xref href="com.microsoft.azure.storage.blob.CloudBlobContainer?alt=com.microsoft.azure.storage.blob.CloudBlobContainer&text=CloudBlobContainer" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="URISyntaxException?alt=URISyntaxException&text=URISyntaxException" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>A <code>String</code> which represents the parent address for a blob URI.</p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Retrieves the parent name for a blob URI.</p>

    <p></p>
  syntax: protected static String getParentNameFromURI(final StorageUri resourceAddress, final String delimiter, final CloudBlobContainer container)
  uid: com.microsoft.azure.storage.blob.CloudBlob.getParentNameFromURI(final StorageUri,final String,final CloudBlobContainer)
- fullName: com.microsoft.azure.storage.blob.CloudBlob.getProperties()
  name: getProperties()
  nameWithType: CloudBlob.getProperties()
  returns:
    description: <p>A <xref uid="com.microsoft.azure.storage.blob.BlobProperties" data-throw-if-not-resolved="false" data-raw-source="BlobProperties"></xref> object that represents the properties of the blob. </p>
    type: final <xref href="com.microsoft.azure.storage.blob.BlobProperties?alt=com.microsoft.azure.storage.blob.BlobProperties&text=BlobProperties" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Returns the blob's properties.</p>

    <p></p>
  syntax: public final BlobProperties getProperties()
  uid: com.microsoft.azure.storage.blob.CloudBlob.getProperties()
- fullName: com.microsoft.azure.storage.blob.CloudBlob.getQualifiedStorageUri()
  name: getQualifiedStorageUri()
  nameWithType: CloudBlob.getQualifiedStorageUri()
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  - type: <xref href="URISyntaxException?alt=URISyntaxException&text=URISyntaxException" data-throw-if-not-resolved="False"/>
    description: <p>If the resource URI is invalid. </p>
  returns:
    description: <p>A <xref uid="com.microsoft.azure.storage.StorageUri" data-throw-if-not-resolved="false" data-raw-source="StorageUri"></xref> object that represents the snapshot or shared access signature.</p>
    type: final <xref href="com.microsoft.azure.storage.StorageUri?alt=com.microsoft.azure.storage.StorageUri&text=StorageUri" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Returns the snapshot and/or shared access signature qualified URI for this blob.</p>

    <p>

      <xrefsect id="deprecated_1_deprecated000029">

        <xreftitle>Deprecated</xreftitle>

        <xrefdescription>

          <p>use <xref uid="com.microsoft.azure.storage.blob.CloudBlob.getSnapshotQualifiedStorageUri()" data-throw-if-not-resolved="false" data-raw-source="getSnapshotQualifiedStorageUri()"></xref> instead.</p>

        </xrefdescription>

      </xrefsect>

    </p>

    <p></p>
  syntax: public final StorageUri getQualifiedStorageUri()
  uid: com.microsoft.azure.storage.blob.CloudBlob.getQualifiedStorageUri()
- fullName: com.microsoft.azure.storage.blob.CloudBlob.getQualifiedUri()
  name: getQualifiedUri()
  nameWithType: CloudBlob.getQualifiedUri()
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  - type: <xref href="URISyntaxException?alt=URISyntaxException&text=URISyntaxException" data-throw-if-not-resolved="False"/>
    description: <p>If the resource URI is invalid. </p>
  returns:
    description: <p>A <code>java.net.URI</code> object that represents the snapshot or shared access signature.</p>
    type: <xref href="final+URI?alt=final+URI&text=final+URI" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Returns the snapshot or shared access signature qualified URI for this blob.</p>

    <p>

      <xrefsect id="deprecated_1_deprecated000030">

        <xreftitle>Deprecated</xreftitle>

        <xrefdescription>

          <p>use <xref uid="com.microsoft.azure.storage.blob.CloudBlob.getSnapshotQualifiedUri()" data-throw-if-not-resolved="false" data-raw-source="getSnapshotQualifiedUri()"></xref> instead.</p>

        </xrefdescription>

      </xrefsect>

    </p>

    <p></p>
  syntax: public final URI getQualifiedUri()
  uid: com.microsoft.azure.storage.blob.CloudBlob.getQualifiedUri()
- fullName: com.microsoft.azure.storage.blob.CloudBlob.getServiceClient()
  name: getServiceClient()
  nameWithType: CloudBlob.getServiceClient()
  returns:
    description: <p>A <xref uid="com.microsoft.azure.storage.blob.CloudBlobClient" data-throw-if-not-resolved="false" data-raw-source="CloudBlobClient"></xref> object that represents the client. </p>
    type: final <xref href="com.microsoft.azure.storage.blob.CloudBlobClient?alt=com.microsoft.azure.storage.blob.CloudBlobClient&text=CloudBlobClient" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Returns the Blob service client associated with the blob.</p>

    <p></p>
  syntax: public final CloudBlobClient getServiceClient()
  uid: com.microsoft.azure.storage.blob.CloudBlob.getServiceClient()
- fullName: com.microsoft.azure.storage.blob.CloudBlob.getSnapshotID()
  name: getSnapshotID()
  nameWithType: CloudBlob.getSnapshotID()
  returns:
    description: <p>A <code>String</code> which represents the Blob Snapshot ID. </p>
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the Blob Snapshot ID.</p>

    <p></p>
  syntax: public final String getSnapshotID()
  uid: com.microsoft.azure.storage.blob.CloudBlob.getSnapshotID()
- fullName: com.microsoft.azure.storage.blob.CloudBlob.getSnapshotQualifiedStorageUri()
  name: getSnapshotQualifiedStorageUri()
  nameWithType: CloudBlob.getSnapshotQualifiedStorageUri()
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  - type: <xref href="URISyntaxException?alt=URISyntaxException&text=URISyntaxException" data-throw-if-not-resolved="False"/>
    description: <p>If the resource URI is invalid. </p>
  returns:
    description: <p>A <xref uid="com.microsoft.azure.storage.StorageUri" data-throw-if-not-resolved="false" data-raw-source="StorageUri"></xref> object containing the blob's URIs for both the primary and secondary locations, including snapshot query information if the blob is a snapshot.</p>
    type: final <xref href="com.microsoft.azure.storage.StorageUri?alt=com.microsoft.azure.storage.StorageUri&text=StorageUri" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Returns the blob's URI for both the primary and secondary locations, including query string information if the blob is a snapshot.</p>

    <p></p>
  syntax: public final StorageUri getSnapshotQualifiedStorageUri()
  uid: com.microsoft.azure.storage.blob.CloudBlob.getSnapshotQualifiedStorageUri()
- fullName: com.microsoft.azure.storage.blob.CloudBlob.getSnapshotQualifiedUri()
  name: getSnapshotQualifiedUri()
  nameWithType: CloudBlob.getSnapshotQualifiedUri()
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  - type: <xref href="URISyntaxException?alt=URISyntaxException&text=URISyntaxException" data-throw-if-not-resolved="False"/>
    description: <p>If the resource URI is invalid. </p>
  returns:
    description: <p>A <code>java.net.URI</code> object specifying the absolute URI to the blob, including snapshot query information if the blob is a snapshot.</p>
    type: <xref href="final+URI?alt=final+URI&text=final+URI" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Returns the absolute URI to the blob, including query string information if the blob is a snapshot.</p>

    <p></p>
  syntax: public final URI getSnapshotQualifiedUri()
  uid: com.microsoft.azure.storage.blob.CloudBlob.getSnapshotQualifiedUri()
- fullName: com.microsoft.azure.storage.blob.CloudBlob.getStorageUri()
  name: getStorageUri()
  nameWithType: CloudBlob.getStorageUri()
  overridden: com.microsoft.azure.storage.blob.ListBlobItem.getStorageUri()
  returns:
    description: <p>A <xref uid="com.microsoft.azure.storage.StorageUri" data-throw-if-not-resolved="false" data-raw-source="StorageUri"></xref> that represents the list of URIs for all locations.. </p>
    type: final <xref href="com.microsoft.azure.storage.StorageUri?alt=com.microsoft.azure.storage.StorageUri&text=StorageUri" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Returns the list of URIs for all locations.</p>

    <p></p>
  syntax: public final StorageUri getStorageUri()
  uid: com.microsoft.azure.storage.blob.CloudBlob.getStorageUri()
- fullName: com.microsoft.azure.storage.blob.CloudBlob.getStreamMinimumReadSizeInBytes()
  name: getStreamMinimumReadSizeInBytes()
  nameWithType: CloudBlob.getStreamMinimumReadSizeInBytes()
  returns:
    description: <p>A <code>int</code> which represents the minimum read size, in bytes, when using a <xref uid="com.microsoft.azure.storage.blob.BlobInputStream" data-throw-if-not-resolved="false" data-raw-source="BlobInputStream"></xref> object. </p>
    type: <xref href="final+int?alt=final+int&text=final+int" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Returns the minimum read size when using a <xref uid="com.microsoft.azure.storage.blob.BlobInputStream" data-throw-if-not-resolved="false" data-raw-source="BlobInputStream"></xref>.</p>

    <p></p>
  syntax: public final int getStreamMinimumReadSizeInBytes()
  uid: com.microsoft.azure.storage.blob.CloudBlob.getStreamMinimumReadSizeInBytes()
- fullName: com.microsoft.azure.storage.blob.CloudBlob.getStreamWriteSizeInBytes()
  name: getStreamWriteSizeInBytes()
  nameWithType: CloudBlob.getStreamWriteSizeInBytes()
  returns:
    description: <p>A <code>int</code> which represents the number of bytes to buffer or the size of a block, in bytes. </p>
    type: <xref href="final+int?alt=final+int&text=final+int" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the number of bytes to buffer when writing to a <xref uid="com.microsoft.azure.storage.blob.BlobOutputStream" data-throw-if-not-resolved="false" data-raw-source="BlobOutputStream"></xref> (block and page blobs).</p>

    <p></p>
  syntax: public final int getStreamWriteSizeInBytes()
  uid: com.microsoft.azure.storage.blob.CloudBlob.getStreamWriteSizeInBytes()
- fullName: com.microsoft.azure.storage.blob.CloudBlob.getTransformedAddress(final OperationContext opContext)
  name: getTransformedAddress(final OperationContext opContext)
  nameWithType: CloudBlob.getTransformedAddress(final OperationContext opContext)
  parameters:
  - description: <p>An <xref uid="com.microsoft.azure.storage.OperationContext" data-throw-if-not-resolved="false" data-raw-source="OperationContext"></xref> object that represents the context for the current operation. This object is used to track requests to the storage service, and to provide additional runtime information about the operation.</p>
    name: opContext
    type: final <xref href="com.microsoft.azure.storage.OperationContext?alt=com.microsoft.azure.storage.OperationContext&text=OperationContext" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>If the URI is not absolute. </p>
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  - type: <xref href="URISyntaxException?alt=URISyntaxException&text=URISyntaxException" data-throw-if-not-resolved="False"/>
    description: <p>If the resource URI is invalid. </p>
  returns:
    description: <p>A <xref uid="com.microsoft.azure.storage.StorageUri" data-throw-if-not-resolved="false" data-raw-source="StorageUri"></xref> object that represents the transformed URI.</p>
    type: final <xref href="com.microsoft.azure.storage.StorageUri?alt=com.microsoft.azure.storage.StorageUri&text=StorageUri" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Returns the transformed URI for the resource if the given credentials require transformation.</p>

    <p></p>
  syntax: protected final StorageUri getTransformedAddress(final OperationContext opContext)
  uid: com.microsoft.azure.storage.blob.CloudBlob.getTransformedAddress(final OperationContext)
- fullName: com.microsoft.azure.storage.blob.CloudBlob.getUri()
  name: getUri()
  nameWithType: CloudBlob.getUri()
  overridden: com.microsoft.azure.storage.blob.ListBlobItem.getUri()
  returns:
    description: <p>A <code>java.net.URI</code> object that represents the URI for the blob. </p>
    type: <xref href="final+URI?alt=final+URI&text=final+URI" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Returns the URI for this blob.</p>

    <p></p>
  syntax: public final URI getUri()
  uid: com.microsoft.azure.storage.blob.CloudBlob.getUri()
- fullName: com.microsoft.azure.storage.blob.CloudBlob.isSnapshot()
  name: isSnapshot()
  nameWithType: CloudBlob.isSnapshot()
  returns:
    description: >-
      <p>

        <code>true</code> if the blob is a snapshot, otherwise <code>false</code>.</p>
    type: <xref href="final+boolean?alt=final+boolean&text=final+boolean" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Indicates whether this blob is a snapshot.</p>

    <p></p>
  syntax: public final boolean isSnapshot()
  uid: com.microsoft.azure.storage.blob.CloudBlob.isSnapshot()
- fullName: com.microsoft.azure.storage.blob.CloudBlob.openInputStream()
  name: openInputStream()
  nameWithType: CloudBlob.openInputStream()
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  returns:
    description: <p>An <code>InputStream</code> object that represents the stream to use for reading from the blob.</p>
    type: final <xref href="com.microsoft.azure.storage.blob.BlobInputStream?alt=com.microsoft.azure.storage.blob.BlobInputStream&text=BlobInputStream" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Opens a blob input stream to download the blob. </p>

    <p>Use <xref uid="com.microsoft.azure.storage.blob.CloudBlob.setStreamMinimumReadSizeInBytes(final int)" data-throw-if-not-resolved="false" data-raw-source="setStreamMinimumReadSizeInBytes(int)"></xref> to configure the read size.</p>

    <p></p>
  syntax: public final BlobInputStream openInputStream()
  uid: com.microsoft.azure.storage.blob.CloudBlob.openInputStream()
- fullName: com.microsoft.azure.storage.blob.CloudBlob.openInputStream(final AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  name: openInputStream(final AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  nameWithType: CloudBlob.openInputStream(final AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  parameters:
  - description: <p>An <xref uid="com.microsoft.azure.storage.AccessCondition" data-throw-if-not-resolved="false" data-raw-source="AccessCondition"></xref> object that represents the access conditions for the blob. </p>
    name: accessCondition
    type: final <xref href="com.microsoft.azure.storage.AccessCondition?alt=com.microsoft.azure.storage.AccessCondition&text=AccessCondition" data-throw-if-not-resolved="False"/>
  - description: <p>A <xref uid="com.microsoft.azure.storage.blob.BlobRequestOptions" data-throw-if-not-resolved="false" data-raw-source="BlobRequestOptions"></xref> object that specifies any additional options for the request. Specifying <code>null</code> will use the default request options from the associated service client ( <xref uid="com.microsoft.azure.storage.blob.CloudBlobClient" data-throw-if-not-resolved="false" data-raw-source="CloudBlobClient"></xref>). </p>
    name: options
    type: <xref href="com.microsoft.azure.storage.blob.BlobRequestOptions?alt=com.microsoft.azure.storage.blob.BlobRequestOptions&text=BlobRequestOptions" data-throw-if-not-resolved="False"/>
  - description: <p>An <xref uid="com.microsoft.azure.storage.OperationContext" data-throw-if-not-resolved="false" data-raw-source="OperationContext"></xref> object that represents the context for the current operation. This object is used to track requests to the storage service, and to provide additional runtime information about the operation.</p>
    name: opContext
    type: <xref href="com.microsoft.azure.storage.OperationContext?alt=com.microsoft.azure.storage.OperationContext&text=OperationContext" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  returns:
    description: <p>An <code>InputStream</code> object that represents the stream to use for reading from the blob.</p>
    type: final <xref href="com.microsoft.azure.storage.blob.BlobInputStream?alt=com.microsoft.azure.storage.blob.BlobInputStream&text=BlobInputStream" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Opens a blob input stream to download the blob using the specified request options and operation context. </p>

    <p>Use <xref uid="com.microsoft.azure.storage.blob.CloudBlob.setStreamMinimumReadSizeInBytes(final int)" data-throw-if-not-resolved="false" data-raw-source="setStreamMinimumReadSizeInBytes(int)"></xref> to configure the read size.</p>

    <p></p>
  syntax: public final BlobInputStream openInputStream(final AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  uid: com.microsoft.azure.storage.blob.CloudBlob.openInputStream(final AccessCondition,BlobRequestOptions,OperationContext)
- fullName: com.microsoft.azure.storage.blob.CloudBlob.openInputStream(final long offset, final Long length, final AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  name: openInputStream(final long offset, final Long length, final AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  nameWithType: CloudBlob.openInputStream(final long offset, final Long length, final AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  parameters:
  - description: <p>A <code>long</code> which represents the offset to use as the starting point for the source. </p>
    name: offset
    type: <xref href="final+long?alt=final+long&text=final+long" data-throw-if-not-resolved="False"/>
  - description: <p>A <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Long"></xref> which represents the number of bytes to read or <code>null</code>. </p>
    name: length
    type: <xref href="final+Long?alt=final+Long&text=final+Long" data-throw-if-not-resolved="False"/>
  - description: <p>An <xref uid="com.microsoft.azure.storage.AccessCondition" data-throw-if-not-resolved="false" data-raw-source="AccessCondition"></xref> object that represents the access conditions for the blob. </p>
    name: accessCondition
    type: final <xref href="com.microsoft.azure.storage.AccessCondition?alt=com.microsoft.azure.storage.AccessCondition&text=AccessCondition" data-throw-if-not-resolved="False"/>
  - description: <p>A <xref uid="com.microsoft.azure.storage.blob.BlobRequestOptions" data-throw-if-not-resolved="false" data-raw-source="BlobRequestOptions"></xref> object that specifies any additional options for the request. Specifying <code>null</code> will use the default request options from the associated service client ( <xref uid="com.microsoft.azure.storage.blob.CloudBlobClient" data-throw-if-not-resolved="false" data-raw-source="CloudBlobClient"></xref>). </p>
    name: options
    type: <xref href="com.microsoft.azure.storage.blob.BlobRequestOptions?alt=com.microsoft.azure.storage.blob.BlobRequestOptions&text=BlobRequestOptions" data-throw-if-not-resolved="False"/>
  - description: <p>An <xref uid="com.microsoft.azure.storage.OperationContext" data-throw-if-not-resolved="false" data-raw-source="OperationContext"></xref> object that represents the context for the current operation. This object is used to track requests to the storage service, and to provide additional runtime information about the operation.</p>
    name: opContext
    type: <xref href="com.microsoft.azure.storage.OperationContext?alt=com.microsoft.azure.storage.OperationContext&text=OperationContext" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  returns:
    description: <p>An <code>InputStream</code> object that represents the stream to use for reading from the blob.</p>
    type: final <xref href="com.microsoft.azure.storage.blob.BlobInputStream?alt=com.microsoft.azure.storage.blob.BlobInputStream&text=BlobInputStream" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Opens a blob input stream to download the blob using the specified request options and operation context. If the blob is decrypted as it is downloaded, the final MD5 validation will be skipped. </p>

    <p>Use <xref uid="com.microsoft.azure.storage.blob.CloudBlob.setStreamMinimumReadSizeInBytes(final int)" data-throw-if-not-resolved="false" data-raw-source="setStreamMinimumReadSizeInBytes(int)"></xref> to configure the read size.</p>

    <p></p>
  syntax: public final BlobInputStream openInputStream(final long offset, final Long length, final AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  uid: com.microsoft.azure.storage.blob.CloudBlob.openInputStream(final long,final Long,final AccessCondition,BlobRequestOptions,OperationContext)
- fullName: com.microsoft.azure.storage.blob.CloudBlob.releaseLease(final AccessCondition accessCondition)
  name: releaseLease(final AccessCondition accessCondition)
  nameWithType: CloudBlob.releaseLease(final AccessCondition accessCondition)
  parameters:
  - description: <p>An <xref uid="com.microsoft.azure.storage.AccessCondition" data-throw-if-not-resolved="false" data-raw-source="AccessCondition"></xref> object that represents the access conditions for the blob. The LeaseID is required to be set on the AccessCondition.</p>
    name: accessCondition
    type: final <xref href="com.microsoft.azure.storage.AccessCondition?alt=com.microsoft.azure.storage.AccessCondition&text=AccessCondition" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  returns:
    type: <xref href="final+void?alt=final+void&text=final+void" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Releases the lease on the blob.</p>

    <p></p>
  syntax: public final void releaseLease(final AccessCondition accessCondition)
  uid: com.microsoft.azure.storage.blob.CloudBlob.releaseLease(final AccessCondition)
- fullName: com.microsoft.azure.storage.blob.CloudBlob.releaseLease(final AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  name: releaseLease(final AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  nameWithType: CloudBlob.releaseLease(final AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  parameters:
  - description: <p>An <xref uid="com.microsoft.azure.storage.AccessCondition" data-throw-if-not-resolved="false" data-raw-source="AccessCondition"></xref> object that represents the access conditions for the blob.The LeaseID is required to be set on the AccessCondition. </p>
    name: accessCondition
    type: final <xref href="com.microsoft.azure.storage.AccessCondition?alt=com.microsoft.azure.storage.AccessCondition&text=AccessCondition" data-throw-if-not-resolved="False"/>
  - description: <p>A <xref uid="com.microsoft.azure.storage.blob.BlobRequestOptions" data-throw-if-not-resolved="false" data-raw-source="BlobRequestOptions"></xref> object that specifies any additional options for the request. Specifying <code>null</code> will use the default request options from the associated service client ( <xref uid="com.microsoft.azure.storage.blob.CloudBlobClient" data-throw-if-not-resolved="false" data-raw-source="CloudBlobClient"></xref>). </p>
    name: options
    type: <xref href="com.microsoft.azure.storage.blob.BlobRequestOptions?alt=com.microsoft.azure.storage.blob.BlobRequestOptions&text=BlobRequestOptions" data-throw-if-not-resolved="False"/>
  - description: <p>An <xref uid="com.microsoft.azure.storage.OperationContext" data-throw-if-not-resolved="false" data-raw-source="OperationContext"></xref> object that represents the context for the current operation. This object is used to track requests to the storage service, and to provide additional runtime information about the operation.</p>
    name: opContext
    type: <xref href="com.microsoft.azure.storage.OperationContext?alt=com.microsoft.azure.storage.OperationContext&text=OperationContext" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  returns:
    type: <xref href="final+void?alt=final+void&text=final+void" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Releases the lease on the blob using the specified request options and operation context.</p>

    <p></p>
  syntax: public final void releaseLease(final AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  uid: com.microsoft.azure.storage.blob.CloudBlob.releaseLease(final AccessCondition,BlobRequestOptions,OperationContext)
- fullName: com.microsoft.azure.storage.blob.CloudBlob.renewLease(final AccessCondition accessCondition)
  name: renewLease(final AccessCondition accessCondition)
  nameWithType: CloudBlob.renewLease(final AccessCondition accessCondition)
  parameters:
  - description: <p>An <xref uid="com.microsoft.azure.storage.AccessCondition" data-throw-if-not-resolved="false" data-raw-source="AccessCondition"></xref> object that represents the access conditions for the blob. The LeaseID is required to be set on the AccessCondition.</p>
    name: accessCondition
    type: final <xref href="com.microsoft.azure.storage.AccessCondition?alt=com.microsoft.azure.storage.AccessCondition&text=AccessCondition" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  returns:
    type: <xref href="final+void?alt=final+void&text=final+void" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Renews an existing lease.</p>

    <p></p>
  syntax: public final void renewLease(final AccessCondition accessCondition)
  uid: com.microsoft.azure.storage.blob.CloudBlob.renewLease(final AccessCondition)
- fullName: com.microsoft.azure.storage.blob.CloudBlob.renewLease(final AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  name: renewLease(final AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  nameWithType: CloudBlob.renewLease(final AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  parameters:
  - description: <p>An <xref uid="com.microsoft.azure.storage.AccessCondition" data-throw-if-not-resolved="false" data-raw-source="AccessCondition"></xref> object that represents the access conditions for the blob. The LeaseID is required to be set on the AccessCondition. </p>
    name: accessCondition
    type: final <xref href="com.microsoft.azure.storage.AccessCondition?alt=com.microsoft.azure.storage.AccessCondition&text=AccessCondition" data-throw-if-not-resolved="False"/>
  - description: <p>A <xref uid="com.microsoft.azure.storage.blob.BlobRequestOptions" data-throw-if-not-resolved="false" data-raw-source="BlobRequestOptions"></xref> object that specifies any additional options for the request. Specifying <code>null</code> will use the default request options from the associated service client ( <xref uid="com.microsoft.azure.storage.blob.CloudBlobClient" data-throw-if-not-resolved="false" data-raw-source="CloudBlobClient"></xref>). </p>
    name: options
    type: <xref href="com.microsoft.azure.storage.blob.BlobRequestOptions?alt=com.microsoft.azure.storage.blob.BlobRequestOptions&text=BlobRequestOptions" data-throw-if-not-resolved="False"/>
  - description: <p>An <xref uid="com.microsoft.azure.storage.OperationContext" data-throw-if-not-resolved="false" data-raw-source="OperationContext"></xref> object that represents the context for the current operation. This object is used to track requests to the storage service, and to provide additional runtime information about the operation.</p>
    name: opContext
    type: <xref href="com.microsoft.azure.storage.OperationContext?alt=com.microsoft.azure.storage.OperationContext&text=OperationContext" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  returns:
    type: <xref href="final+void?alt=final+void&text=final+void" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Renews an existing lease using the specified request options and operation context.</p>

    <p></p>
  syntax: public final void renewLease(final AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  uid: com.microsoft.azure.storage.blob.CloudBlob.renewLease(final AccessCondition,BlobRequestOptions,OperationContext)
- fullName: com.microsoft.azure.storage.blob.CloudBlob.setContainer(final CloudBlobContainer container)
  name: setContainer(final CloudBlobContainer container)
  nameWithType: CloudBlob.setContainer(final CloudBlobContainer container)
  parameters:
  - description: <p>A <xref uid="com.microsoft.azure.storage.blob.CloudBlobContainer" data-throw-if-not-resolved="false" data-raw-source="CloudBlobContainer"></xref> object that represents the container being assigned to the blob. </p>
    name: container
    type: final <xref href="com.microsoft.azure.storage.blob.CloudBlobContainer?alt=com.microsoft.azure.storage.blob.CloudBlobContainer&text=CloudBlobContainer" data-throw-if-not-resolved="False"/>
  returns:
    type: <xref href="final+void?alt=final+void&text=final+void" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Sets the container for the blob.</p>

    <p></p>
  syntax: protected final void setContainer(final CloudBlobContainer container)
  uid: com.microsoft.azure.storage.blob.CloudBlob.setContainer(final CloudBlobContainer)
- fullName: com.microsoft.azure.storage.blob.CloudBlob.setMetadata(final HashMap<String, String> metadata)
  name: setMetadata(final HashMap<String, String> metadata)
  nameWithType: CloudBlob.setMetadata(final HashMap<String, String> metadata)
  parameters:
  - description: <p>A <code>java.util.HashMap</code> object that contains the metadata being assigned to the blob. </p>
    name: metadata
    type: <xref href="final+HashMap%3CString%2C+String%3E?alt=final+HashMap%3CString%2C+String%3E&text=final+HashMap%3CString%2C+String%3E" data-throw-if-not-resolved="False"/>
  returns:
    type: <xref href="final+void?alt=final+void&text=final+void" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Sets the metadata for the blob.</p>

    <p></p>
  syntax: public final void setMetadata(final HashMap<String, String> metadata)
  uid: com.microsoft.azure.storage.blob.CloudBlob.setMetadata(final HashMap<String, String>)
- fullName: com.microsoft.azure.storage.blob.CloudBlob.setProperties(final BlobProperties properties)
  name: setProperties(final BlobProperties properties)
  nameWithType: CloudBlob.setProperties(final BlobProperties properties)
  parameters:
  - description: <p>A <xref uid="com.microsoft.azure.storage.blob.BlobProperties" data-throw-if-not-resolved="false" data-raw-source="BlobProperties"></xref> object that represents the properties being assigned to the blob. </p>
    name: properties
    type: final <xref href="com.microsoft.azure.storage.blob.BlobProperties?alt=com.microsoft.azure.storage.blob.BlobProperties&text=BlobProperties" data-throw-if-not-resolved="False"/>
  returns:
    type: <xref href="final+void?alt=final+void&text=final+void" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Sets the properties for the blob.</p>

    <p></p>
  syntax: protected final void setProperties(final BlobProperties properties)
  uid: com.microsoft.azure.storage.blob.CloudBlob.setProperties(final BlobProperties)
- fullName: com.microsoft.azure.storage.blob.CloudBlob.setSnapshotID(final String snapshotID)
  name: setSnapshotID(final String snapshotID)
  nameWithType: CloudBlob.setSnapshotID(final String snapshotID)
  parameters:
  - description: <p>A <code>String</code> that represents the snapshot ID being assigned to the blob. </p>
    name: snapshotID
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  returns:
    type: <xref href="final+void?alt=final+void&text=final+void" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Sets the blob snapshot ID.</p>

    <p></p>
  syntax: protected final void setSnapshotID(final String snapshotID)
  uid: com.microsoft.azure.storage.blob.CloudBlob.setSnapshotID(final String)
- fullName: com.microsoft.azure.storage.blob.CloudBlob.setStorageUri(final StorageUri storageUri)
  name: setStorageUri(final StorageUri storageUri)
  nameWithType: CloudBlob.setStorageUri(final StorageUri storageUri)
  parameters:
  - description: <p>A <xref uid="com.microsoft.azure.storage.StorageUri" data-throw-if-not-resolved="false" data-raw-source="StorageUri"></xref> that represents the list of URIs for all locations. </p>
    name: storageUri
    type: final <xref href="com.microsoft.azure.storage.StorageUri?alt=com.microsoft.azure.storage.StorageUri&text=StorageUri" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Sets the list of URIs for all locations.</p>

    <p></p>
  syntax: protected void setStorageUri(final StorageUri storageUri)
  uid: com.microsoft.azure.storage.blob.CloudBlob.setStorageUri(final StorageUri)
- fullName: com.microsoft.azure.storage.blob.CloudBlob.setStreamMinimumReadSizeInBytes(final int minimumReadSize)
  name: setStreamMinimumReadSizeInBytes(final int minimumReadSize)
  nameWithType: CloudBlob.setStreamMinimumReadSizeInBytes(final int minimumReadSize)
  parameters:
  - description: <p>An <code>int</code> that represents the minimum block size, in bytes, for reading from a blob while using a <xref uid="com.microsoft.azure.storage.blob.BlobInputStream" data-throw-if-not-resolved="false" data-raw-source="BlobInputStream"></xref> object. Must be greater than or equal to 16 KB. </p>
    name: minimumReadSize
    type: <xref href="final+int?alt=final+int&text=final+int" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>If <code>minimumReadSize</code> is less than 16 KB. </p>
  summary: >-
    <p>Sets the minimum read size when using a <xref uid="com.microsoft.azure.storage.blob.BlobInputStream" data-throw-if-not-resolved="false" data-raw-source="BlobInputStream"></xref>.</p>

    <p></p>
  syntax: public void setStreamMinimumReadSizeInBytes(final int minimumReadSize)
  uid: com.microsoft.azure.storage.blob.CloudBlob.setStreamMinimumReadSizeInBytes(final int)
- fullName: com.microsoft.azure.storage.blob.CloudBlob.setStreamWriteSizeInBytes(int streamWriteSizeInBytes)
  name: setStreamWriteSizeInBytes(int streamWriteSizeInBytes)
  nameWithType: CloudBlob.setStreamWriteSizeInBytes(int streamWriteSizeInBytes)
  parameters:
  - description: <p>An <code>int</code> that represents the number of bytes to buffer or the size of a block, in bytes. </p>
    name: streamWriteSizeInBytes
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  returns:
    type: <xref href="abstract+void?alt=abstract+void&text=abstract+void" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Sets the number of bytes to buffer when writing to a <xref uid="com.microsoft.azure.storage.blob.BlobOutputStream" data-throw-if-not-resolved="false" data-raw-source="BlobOutputStream"></xref> (block and page blobs).</p>

    <p></p>
  syntax: public abstract void setStreamWriteSizeInBytes(int streamWriteSizeInBytes)
  uid: com.microsoft.azure.storage.blob.CloudBlob.setStreamWriteSizeInBytes(int)
- fullName: com.microsoft.azure.storage.blob.CloudBlob.startCopy(final URI source)
  name: startCopy(final URI source)
  nameWithType: CloudBlob.startCopy(final URI source)
  parameters:
  - description: <p>A <code>java.net.URI</code> The source URI. URIs for resources outside of Azure may only be copied into block blobs.</p>
    name: source
    type: <xref href="final+URI?alt=final+URI&text=final+URI" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  returns:
    description: <p>A <code>String</code> which represents the copy ID associated with the copy operation.</p>
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Requests the service to start copying a URI's contents, properties, and metadata to a new blob.</p>

    <p></p>
  syntax: public final String startCopy(final URI source)
  uid: com.microsoft.azure.storage.blob.CloudBlob.startCopy(final URI)
- fullName: com.microsoft.azure.storage.blob.CloudBlob.startCopy(final URI source, final AccessCondition sourceAccessCondition, final AccessCondition destinationAccessCondition, BlobRequestOptions options, OperationContext opContext)
  name: startCopy(final URI source, final AccessCondition sourceAccessCondition, final AccessCondition destinationAccessCondition, BlobRequestOptions options, OperationContext opContext)
  nameWithType: CloudBlob.startCopy(final URI source, final AccessCondition sourceAccessCondition, final AccessCondition destinationAccessCondition, BlobRequestOptions options, OperationContext opContext)
  parameters:
  - description: <p>A <code>java.net.URI</code> The source URI. URIs for resources outside of Azure may only be copied into block blobs. </p>
    name: source
    type: <xref href="final+URI?alt=final+URI&text=final+URI" data-throw-if-not-resolved="False"/>
  - description: <p>An <xref uid="com.microsoft.azure.storage.AccessCondition" data-throw-if-not-resolved="false" data-raw-source="AccessCondition"></xref> object that represents the access conditions for the source. </p>
    name: sourceAccessCondition
    type: final <xref href="com.microsoft.azure.storage.AccessCondition?alt=com.microsoft.azure.storage.AccessCondition&text=AccessCondition" data-throw-if-not-resolved="False"/>
  - description: <p>An <xref uid="com.microsoft.azure.storage.AccessCondition" data-throw-if-not-resolved="false" data-raw-source="AccessCondition"></xref> object that represents the access conditions for the destination. </p>
    name: destinationAccessCondition
    type: final <xref href="com.microsoft.azure.storage.AccessCondition?alt=com.microsoft.azure.storage.AccessCondition&text=AccessCondition" data-throw-if-not-resolved="False"/>
  - description: <p>A <xref uid="com.microsoft.azure.storage.blob.BlobRequestOptions" data-throw-if-not-resolved="false" data-raw-source="BlobRequestOptions"></xref> object that specifies any additional options for the request. Specifying <code>null</code> will use the default request options from the associated service client (<xref uid="com.microsoft.azure.storage.blob.CloudBlobClient" data-throw-if-not-resolved="false" data-raw-source="CloudBlobClient"></xref>). </p>
    name: options
    type: <xref href="com.microsoft.azure.storage.blob.BlobRequestOptions?alt=com.microsoft.azure.storage.blob.BlobRequestOptions&text=BlobRequestOptions" data-throw-if-not-resolved="False"/>
  - description: <p>An <xref uid="com.microsoft.azure.storage.OperationContext" data-throw-if-not-resolved="false" data-raw-source="OperationContext"></xref> object that represents the context for the current operation. This object is used to track requests to the storage service, and to provide additional runtime information about the operation.</p>
    name: opContext
    type: <xref href="com.microsoft.azure.storage.OperationContext?alt=com.microsoft.azure.storage.OperationContext&text=OperationContext" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  returns:
    description: <p>A <code>String</code> which represents the copy ID associated with the copy operation.</p>
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Requests the service to start copying a URI's contents, properties, and metadata to a new blob, using the specified access conditions, lease ID, request options, and operation context.</p>

    <p></p>
  syntax: public final String startCopy(final URI source, final AccessCondition sourceAccessCondition, final AccessCondition destinationAccessCondition, BlobRequestOptions options, OperationContext opContext)
  uid: com.microsoft.azure.storage.blob.CloudBlob.startCopy(final URI,final AccessCondition,final AccessCondition,BlobRequestOptions,OperationContext)
- fullName: com.microsoft.azure.storage.blob.CloudBlob.startCopy(final URI source, final String blobTierString, final AccessCondition sourceAccessCondition, final AccessCondition destinationAccessCondition, BlobRequestOptions options, OperationContext opContext)
  name: startCopy(final URI source, final String blobTierString, final AccessCondition sourceAccessCondition, final AccessCondition destinationAccessCondition, BlobRequestOptions options, OperationContext opContext)
  nameWithType: CloudBlob.startCopy(final URI source, final String blobTierString, final AccessCondition sourceAccessCondition, final AccessCondition destinationAccessCondition, BlobRequestOptions options, OperationContext opContext)
  parameters:
  - description: <p>A <code>java.net.URI</code> The source URI. URIs for resources outside of Azure may only be copied into block blobs. </p>
    name: source
    type: <xref href="final+URI?alt=final+URI&text=final+URI" data-throw-if-not-resolved="False"/>
  - description: <p>A String which represents the tier of the blob. </p>
    name: blobTierString
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>An <xref uid="com.microsoft.azure.storage.AccessCondition" data-throw-if-not-resolved="false" data-raw-source="AccessCondition"></xref> object that represents the access conditions for the source. </p>
    name: sourceAccessCondition
    type: final <xref href="com.microsoft.azure.storage.AccessCondition?alt=com.microsoft.azure.storage.AccessCondition&text=AccessCondition" data-throw-if-not-resolved="False"/>
  - description: <p>An <xref uid="com.microsoft.azure.storage.AccessCondition" data-throw-if-not-resolved="false" data-raw-source="AccessCondition"></xref> object that represents the access conditions for the destination. </p>
    name: destinationAccessCondition
    type: final <xref href="com.microsoft.azure.storage.AccessCondition?alt=com.microsoft.azure.storage.AccessCondition&text=AccessCondition" data-throw-if-not-resolved="False"/>
  - description: <p>A <xref uid="com.microsoft.azure.storage.blob.BlobRequestOptions" data-throw-if-not-resolved="false" data-raw-source="BlobRequestOptions"></xref> object that specifies any additional options for the request. Specifying <code>null</code> will use the default request options from the associated service client (<xref uid="com.microsoft.azure.storage.blob.CloudBlobClient" data-throw-if-not-resolved="false" data-raw-source="CloudBlobClient"></xref>). </p>
    name: options
    type: <xref href="com.microsoft.azure.storage.blob.BlobRequestOptions?alt=com.microsoft.azure.storage.blob.BlobRequestOptions&text=BlobRequestOptions" data-throw-if-not-resolved="False"/>
  - description: <p>An <xref uid="com.microsoft.azure.storage.OperationContext" data-throw-if-not-resolved="false" data-raw-source="OperationContext"></xref> object that represents the context for the current operation. This object is used to track requests to the storage service, and to provide additional runtime information about the operation.</p>
    name: opContext
    type: <xref href="com.microsoft.azure.storage.OperationContext?alt=com.microsoft.azure.storage.OperationContext&text=OperationContext" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  returns:
    description: <p>A <code>String</code> which represents the copy ID associated with the copy operation.</p>
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Requests the service to start copying a URI's contents, properties, and metadata to a new blob, using the specified premium page blob tier, access conditions, lease ID, request options, and operation context. </p>

    <p>Note: Setting the premiumPageBlobTier is only supported for premium accounts. </p>

    <p></p>
  syntax: protected final String startCopy(final URI source, final String blobTierString, final AccessCondition sourceAccessCondition, final AccessCondition destinationAccessCondition, BlobRequestOptions options, OperationContext opContext)
  uid: com.microsoft.azure.storage.blob.CloudBlob.startCopy(final URI,final String,final AccessCondition,final AccessCondition,BlobRequestOptions,OperationContext)
- fullName: com.microsoft.azure.storage.blob.CloudBlob.startCopy(final URI source, String contentMd5, boolean syncCopy, final String blobTierString, final AccessCondition sourceAccessCondition, final AccessCondition destinationAccessCondition, BlobRequestOptions options, OperationContext opContext)
  name: startCopy(final URI source, String contentMd5, boolean syncCopy, final String blobTierString, final AccessCondition sourceAccessCondition, final AccessCondition destinationAccessCondition, BlobRequestOptions options, OperationContext opContext)
  nameWithType: CloudBlob.startCopy(final URI source, String contentMd5, boolean syncCopy, final String blobTierString, final AccessCondition sourceAccessCondition, final AccessCondition destinationAccessCondition, BlobRequestOptions options, OperationContext opContext)
  parameters:
  - description: <p>A <code>java.net.URI</code> The source URI. URIs for resources outside of Azure may only be copied into block blobs. </p>
    name: source
    type: <xref href="final+URI?alt=final+URI&text=final+URI" data-throw-if-not-resolved="False"/>
  - description: <p>An optional hash value used to ensure transactional integrity for the operation. May be <code>null</code> or empty. </p>
    name: contentMd5
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>A <code>boolean</code> which indicates if the copy should be done synchronously on the service. </p>
    name: syncCopy
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False"/>
  - description: <p>A String which represents the tier of the blob. </p>
    name: blobTierString
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>An <xref uid="com.microsoft.azure.storage.AccessCondition" data-throw-if-not-resolved="false" data-raw-source="AccessCondition"></xref> object that represents the access conditions for the source. </p>
    name: sourceAccessCondition
    type: final <xref href="com.microsoft.azure.storage.AccessCondition?alt=com.microsoft.azure.storage.AccessCondition&text=AccessCondition" data-throw-if-not-resolved="False"/>
  - description: <p>An <xref uid="com.microsoft.azure.storage.AccessCondition" data-throw-if-not-resolved="false" data-raw-source="AccessCondition"></xref> object that represents the access conditions for the destination. </p>
    name: destinationAccessCondition
    type: final <xref href="com.microsoft.azure.storage.AccessCondition?alt=com.microsoft.azure.storage.AccessCondition&text=AccessCondition" data-throw-if-not-resolved="False"/>
  - description: <p>A <xref uid="com.microsoft.azure.storage.blob.BlobRequestOptions" data-throw-if-not-resolved="false" data-raw-source="BlobRequestOptions"></xref> object that specifies any additional options for the request. Specifying <code>null</code> will use the default request options from the associated service client (<xref uid="com.microsoft.azure.storage.blob.CloudBlobClient" data-throw-if-not-resolved="false" data-raw-source="CloudBlobClient"></xref>). </p>
    name: options
    type: <xref href="com.microsoft.azure.storage.blob.BlobRequestOptions?alt=com.microsoft.azure.storage.blob.BlobRequestOptions&text=BlobRequestOptions" data-throw-if-not-resolved="False"/>
  - description: <p>An <xref uid="com.microsoft.azure.storage.OperationContext" data-throw-if-not-resolved="false" data-raw-source="OperationContext"></xref> object that represents the context for the current operation. This object is used to track requests to the storage service, and to provide additional runtime information about the operation.</p>
    name: opContext
    type: <xref href="com.microsoft.azure.storage.OperationContext?alt=com.microsoft.azure.storage.OperationContext&text=OperationContext" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  returns:
    description: <p>A <code>String</code> which represents the copy ID associated with the copy operation.</p>
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Requests the service to start copying a URI's contents, properties, and metadata to a new blob, using the specified premium page blob tier, access conditions, lease ID, request options, and operation context. </p>

    <p>Note: Setting the premiumPageBlobTier is only supported for premium accounts. </p>

    <p></p>
  syntax: protected final String startCopy(final URI source, String contentMd5, boolean syncCopy, final String blobTierString, final AccessCondition sourceAccessCondition, final AccessCondition destinationAccessCondition, BlobRequestOptions options, OperationContext opContext)
  uid: com.microsoft.azure.storage.blob.CloudBlob.startCopy(final URI,String,boolean,final String,final AccessCondition,final AccessCondition,BlobRequestOptions,OperationContext)
- fullName: com.microsoft.azure.storage.blob.CloudBlob.startCopy(final URI source, String contentMd5, boolean syncCopy, final String blobTierString, final RehydratePriority rehydratePriority, final AccessCondition sourceAccessCondition, final AccessCondition destinationAccessCondition, BlobRequestOptions options, OperationContext opContext)
  name: startCopy(final URI source, String contentMd5, boolean syncCopy, final String blobTierString, final RehydratePriority rehydratePriority, final AccessCondition sourceAccessCondition, final AccessCondition destinationAccessCondition, BlobRequestOptions options, OperationContext opContext)
  nameWithType: CloudBlob.startCopy(final URI source, String contentMd5, boolean syncCopy, final String blobTierString, final RehydratePriority rehydratePriority, final AccessCondition sourceAccessCondition, final AccessCondition destinationAccessCondition, BlobRequestOptions options, OperationContext opContext)
  parameters:
  - description: <p>A <code>java.net.URI</code> The source URI. URIs for resources outside of Azure may only be copied into block blobs. </p>
    name: source
    type: <xref href="final+URI?alt=final+URI&text=final+URI" data-throw-if-not-resolved="False"/>
  - description: <p>An optional hash value used to ensure transactional integrity for the operation. May be <code>null</code> or empty. </p>
    name: contentMd5
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>A <code>boolean</code> which indicates if the copy should be done synchronously on the service. </p>
    name: syncCopy
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False"/>
  - description: <p>A <code>String</code> object which represents the tier of the blob. </p>
    name: blobTierString
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>A <xref uid="com.microsoft.azure.storage.blob.RehydratePriority" data-throw-if-not-resolved="false" data-raw-source="RehydratePriority"></xref> object which represents the rehydrate priority. </p>
    name: rehydratePriority
    type: final <xref href="com.microsoft.azure.storage.blob.RehydratePriority?alt=com.microsoft.azure.storage.blob.RehydratePriority&text=RehydratePriority" data-throw-if-not-resolved="False"/>
  - description: <p>An <xref uid="com.microsoft.azure.storage.AccessCondition" data-throw-if-not-resolved="false" data-raw-source="AccessCondition"></xref> object that represents the access conditions for the source. </p>
    name: sourceAccessCondition
    type: final <xref href="com.microsoft.azure.storage.AccessCondition?alt=com.microsoft.azure.storage.AccessCondition&text=AccessCondition" data-throw-if-not-resolved="False"/>
  - description: <p>An <xref uid="com.microsoft.azure.storage.AccessCondition" data-throw-if-not-resolved="false" data-raw-source="AccessCondition"></xref> object that represents the access conditions for the destination. </p>
    name: destinationAccessCondition
    type: final <xref href="com.microsoft.azure.storage.AccessCondition?alt=com.microsoft.azure.storage.AccessCondition&text=AccessCondition" data-throw-if-not-resolved="False"/>
  - description: <p>A <xref uid="com.microsoft.azure.storage.blob.BlobRequestOptions" data-throw-if-not-resolved="false" data-raw-source="BlobRequestOptions"></xref> object that specifies any additional options for the request. Specifying <code>null</code> will use the default request options from the associated service client (<xref uid="com.microsoft.azure.storage.blob.CloudBlobClient" data-throw-if-not-resolved="false" data-raw-source="CloudBlobClient"></xref>). </p>
    name: options
    type: <xref href="com.microsoft.azure.storage.blob.BlobRequestOptions?alt=com.microsoft.azure.storage.blob.BlobRequestOptions&text=BlobRequestOptions" data-throw-if-not-resolved="False"/>
  - description: <p>An <xref uid="com.microsoft.azure.storage.OperationContext" data-throw-if-not-resolved="false" data-raw-source="OperationContext"></xref> object that represents the context for the current operation. This object is used to track requests to the storage service, and to provide additional runtime information about the operation.</p>
    name: opContext
    type: <xref href="com.microsoft.azure.storage.OperationContext?alt=com.microsoft.azure.storage.OperationContext&text=OperationContext" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  returns:
    description: <p>A <code>String</code> which represents the copy ID associated with the copy operation.</p>
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Requests the service to start copying a URI's contents, properties, and metadata to a new blob, using the specified premium page blob tier, rehydrate priority, access conditions, lease ID, request options, and operation context. </p>

    <p>Note: Setting the premiumPageBlobTier is only supported for premium accounts. </p>

    <p></p>
  syntax: protected final String startCopy(final URI source, String contentMd5, boolean syncCopy, final String blobTierString, final RehydratePriority rehydratePriority, final AccessCondition sourceAccessCondition, final AccessCondition destinationAccessCondition, BlobRequestOptions options, OperationContext opContext)
  uid: com.microsoft.azure.storage.blob.CloudBlob.startCopy(final URI,String,boolean,final String,final RehydratePriority,final AccessCondition,final AccessCondition,BlobRequestOptions,OperationContext)
- fullName: com.microsoft.azure.storage.blob.CloudBlob.startCopyImpl(final URI source, final String contentMd5, final boolean syncCopy, final boolean incrementalCopy, final String blobTierString, final RehydratePriority rehydratePriority, final AccessCondition sourceAccessCondition, final AccessCondition destinationAccessCondition, final BlobRequestOptions options)
  name: startCopyImpl(final URI source, final String contentMd5, final boolean syncCopy, final boolean incrementalCopy, final String blobTierString, final RehydratePriority rehydratePriority, final AccessCondition sourceAccessCondition, final AccessCondition destinationAccessCondition, final BlobRequestOptions options)
  nameWithType: CloudBlob.startCopyImpl(final URI source, final String contentMd5, final boolean syncCopy, final boolean incrementalCopy, final String blobTierString, final RehydratePriority rehydratePriority, final AccessCondition sourceAccessCondition, final AccessCondition destinationAccessCondition, final BlobRequestOptions options)
  parameters:
  - name: source
    type: <xref href="final+URI?alt=final+URI&text=final+URI" data-throw-if-not-resolved="False"/>
  - name: contentMd5
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - name: syncCopy
    type: <xref href="final+boolean?alt=final+boolean&text=final+boolean" data-throw-if-not-resolved="False"/>
  - name: incrementalCopy
    type: <xref href="final+boolean?alt=final+boolean&text=final+boolean" data-throw-if-not-resolved="False"/>
  - name: blobTierString
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - name: rehydratePriority
    type: final <xref href="com.microsoft.azure.storage.blob.RehydratePriority?alt=com.microsoft.azure.storage.blob.RehydratePriority&text=RehydratePriority" data-throw-if-not-resolved="False"/>
  - name: sourceAccessCondition
    type: final <xref href="com.microsoft.azure.storage.AccessCondition?alt=com.microsoft.azure.storage.AccessCondition&text=AccessCondition" data-throw-if-not-resolved="False"/>
  - name: destinationAccessCondition
    type: final <xref href="com.microsoft.azure.storage.AccessCondition?alt=com.microsoft.azure.storage.AccessCondition&text=AccessCondition" data-throw-if-not-resolved="False"/>
  - name: options
    type: final <xref href="com.microsoft.azure.storage.blob.BlobRequestOptions?alt=com.microsoft.azure.storage.blob.BlobRequestOptions&text=BlobRequestOptions" data-throw-if-not-resolved="False"/>
  returns:
    type: <xref href="com.microsoft.azure.storage.core.StorageRequest?alt=com.microsoft.azure.storage.core.StorageRequest&text=StorageRequest" data-throw-if-not-resolved="False"/>&lt;<xref href="com.microsoft.azure.storage.blob.CloudBlobClient?alt=com.microsoft.azure.storage.blob.CloudBlobClient&text=CloudBlobClient" data-throw-if-not-resolved="False"/>, <xref href="com.microsoft.azure.storage.blob.CloudBlob?alt=com.microsoft.azure.storage.blob.CloudBlob&text=CloudBlob" data-throw-if-not-resolved="False"/>, String&gt;
  syntax: protected StorageRequest<CloudBlobClient, CloudBlob, String> startCopyImpl(final URI source, final String contentMd5, final boolean syncCopy, final boolean incrementalCopy, final String blobTierString, final RehydratePriority rehydratePriority, final AccessCondition sourceAccessCondition, final AccessCondition destinationAccessCondition, final BlobRequestOptions options)
  uid: com.microsoft.azure.storage.blob.CloudBlob.startCopyImpl(final URI,final String,final boolean,final boolean,final String,final RehydratePriority,final AccessCondition,final AccessCondition,final BlobRequestOptions)
- fullName: com.microsoft.azure.storage.blob.CloudBlob.undelete()
  name: undelete()
  nameWithType: CloudBlob.undelete()
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  returns:
    type: <xref href="final+void?alt=final+void&text=final+void" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Un-deletes a blob and all its snapshots that have been soft-deleted.</p>

    <p></p>
  syntax: public final void undelete()
  uid: com.microsoft.azure.storage.blob.CloudBlob.undelete()
- fullName: com.microsoft.azure.storage.blob.CloudBlob.undelete(BlobRequestOptions options, OperationContext opContext)
  name: undelete(BlobRequestOptions options, OperationContext opContext)
  nameWithType: CloudBlob.undelete(BlobRequestOptions options, OperationContext opContext)
  parameters:
  - description: <p>A <xref uid="com.microsoft.azure.storage.blob.BlobRequestOptions" data-throw-if-not-resolved="false" data-raw-source="BlobRequestOptions"></xref> object that specifies any additional options for the request. Specifying <code>null</code> will use the default request options from the associated service client ( <xref uid="com.microsoft.azure.storage.blob.CloudBlobClient" data-throw-if-not-resolved="false" data-raw-source="CloudBlobClient"></xref>). </p>
    name: options
    type: <xref href="com.microsoft.azure.storage.blob.BlobRequestOptions?alt=com.microsoft.azure.storage.blob.BlobRequestOptions&text=BlobRequestOptions" data-throw-if-not-resolved="False"/>
  - description: <p>An <xref uid="com.microsoft.azure.storage.OperationContext" data-throw-if-not-resolved="false" data-raw-source="OperationContext"></xref> object that represents the context for the current operation. This object is used to track requests to the storage service, and to provide additional runtime information about the operation.</p>
    name: opContext
    type: <xref href="com.microsoft.azure.storage.OperationContext?alt=com.microsoft.azure.storage.OperationContext&text=OperationContext" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  returns:
    type: <xref href="final+void?alt=final+void&text=final+void" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Un-deletes a blob that has been soft-deleted, using the specified request options, and operation context. </p>

    <p>The un-delete Blob operation restores the contents and metadata of soft deleted blob and all its snapshots. Attempting to undelete a blob or snapshot that is not soft deleted will succeed without any changes.</p>

    <p></p>
  syntax: public final void undelete(BlobRequestOptions options, OperationContext opContext)
  uid: com.microsoft.azure.storage.blob.CloudBlob.undelete(BlobRequestOptions,OperationContext)
- fullName: com.microsoft.azure.storage.blob.CloudBlob.updateEtagAndLastModifiedFromResponse(HttpURLConnection request)
  name: updateEtagAndLastModifiedFromResponse(HttpURLConnection request)
  nameWithType: CloudBlob.updateEtagAndLastModifiedFromResponse(HttpURLConnection request)
  parameters:
  - name: request
    type: <xref href="HttpURLConnection?alt=HttpURLConnection&text=HttpURLConnection" data-throw-if-not-resolved="False"/>
  syntax: protected void updateEtagAndLastModifiedFromResponse(HttpURLConnection request)
  uid: com.microsoft.azure.storage.blob.CloudBlob.updateEtagAndLastModifiedFromResponse(HttpURLConnection)
- fullName: com.microsoft.azure.storage.blob.CloudBlob.updateLengthFromResponse(HttpURLConnection request)
  name: updateLengthFromResponse(HttpURLConnection request)
  nameWithType: CloudBlob.updateLengthFromResponse(HttpURLConnection request)
  parameters:
  - name: request
    type: <xref href="HttpURLConnection?alt=HttpURLConnection&text=HttpURLConnection" data-throw-if-not-resolved="False"/>
  syntax: protected void updateLengthFromResponse(HttpURLConnection request)
  uid: com.microsoft.azure.storage.blob.CloudBlob.updateLengthFromResponse(HttpURLConnection)
- fullName: com.microsoft.azure.storage.blob.CloudBlob.upload(InputStream sourceStream, long length)
  name: upload(InputStream sourceStream, long length)
  nameWithType: CloudBlob.upload(InputStream sourceStream, long length)
  parameters:
  - description: <p>An <code>InputStream</code> object that represents the source stream to upload.</p>
    name: sourceStream
    type: <xref href="InputStream?alt=InputStream&text=InputStream" data-throw-if-not-resolved="False"/>
  - description: <p>An <code>long</code> that represents the length of the stream data in bytes, or -1 if unknown. The length must be greater than zero and a multiple of 512 for page blobs.</p>
    name: length
    type: <xref href="long?alt=long&text=long" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
    description: <p>If an I/O exception occurred.</p>
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  returns:
    type: <xref href="abstract+void?alt=abstract+void&text=abstract+void" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Uploads the source stream data to the blob. If the blob already exists on the service, it will be overwritten.</p>

    <p></p>
  syntax: public abstract void upload(InputStream sourceStream, long length)
  uid: com.microsoft.azure.storage.blob.CloudBlob.upload(InputStream,long)
- fullName: com.microsoft.azure.storage.blob.CloudBlob.upload(InputStream sourceStream, long length, final AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  name: upload(InputStream sourceStream, long length, final AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  nameWithType: CloudBlob.upload(InputStream sourceStream, long length, final AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  parameters:
  - description: <p>An <code>InputStream</code> object that represents the source stream to upload. </p>
    name: sourceStream
    type: <xref href="InputStream?alt=InputStream&text=InputStream" data-throw-if-not-resolved="False"/>
  - description: <p>The length of the stream data in bytes, or -1 if unknown. The length must be greater than zero and a multiple of 512 for page blobs. </p>
    name: length
    type: <xref href="long?alt=long&text=long" data-throw-if-not-resolved="False"/>
  - description: <p>An <xref uid="com.microsoft.azure.storage.AccessCondition" data-throw-if-not-resolved="false" data-raw-source="AccessCondition"></xref> object that represents the access conditions for the blob. </p>
    name: accessCondition
    type: final <xref href="com.microsoft.azure.storage.AccessCondition?alt=com.microsoft.azure.storage.AccessCondition&text=AccessCondition" data-throw-if-not-resolved="False"/>
  - description: <p>A <xref uid="com.microsoft.azure.storage.blob.BlobRequestOptions" data-throw-if-not-resolved="false" data-raw-source="BlobRequestOptions"></xref> object that specifies any additional options for the request. Specifying <code>null</code> will use the default request options from the associated service client ( <xref uid="com.microsoft.azure.storage.blob.CloudBlobClient" data-throw-if-not-resolved="false" data-raw-source="CloudBlobClient"></xref>). </p>
    name: options
    type: <xref href="com.microsoft.azure.storage.blob.BlobRequestOptions?alt=com.microsoft.azure.storage.blob.BlobRequestOptions&text=BlobRequestOptions" data-throw-if-not-resolved="False"/>
  - description: <p>An <xref uid="com.microsoft.azure.storage.OperationContext" data-throw-if-not-resolved="false" data-raw-source="OperationContext"></xref> object that represents the context for the current operation. This object is used to track requests to the storage service, and to provide additional runtime information about the operation.</p>
    name: opContext
    type: <xref href="com.microsoft.azure.storage.OperationContext?alt=com.microsoft.azure.storage.OperationContext&text=OperationContext" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
    description: <p>If an I/O exception occurred. </p>
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  returns:
    type: <xref href="abstract+void?alt=abstract+void&text=abstract+void" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Uploads the source stream data to the blob using the specified lease ID, request options, and operation context. If the blob already exists on the service, it will be overwritten.</p>

    <p></p>
  syntax: public abstract void upload(InputStream sourceStream, long length, final AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  uid: com.microsoft.azure.storage.blob.CloudBlob.upload(InputStream,long,final AccessCondition,BlobRequestOptions,OperationContext)
- fullName: com.microsoft.azure.storage.blob.CloudBlob.uploadFromByteArray(final byte[] buffer, final int offset, final int length)
  name: uploadFromByteArray(final byte[] buffer, final int offset, final int length)
  nameWithType: CloudBlob.uploadFromByteArray(final byte[] buffer, final int offset, final int length)
  parameters:
  - description: <p>A <code>byte</code> array which represents the data to write to the blob. </p>
    name: buffer
    type: <xref href="final+byte+%5B%5D?alt=final+byte+%5B%5D&text=final+byte+%5B%5D" data-throw-if-not-resolved="False"/>
  - description: <p>A <code>int</code> which represents the offset of the byte array from which to start the data upload. </p>
    name: offset
    type: <xref href="final+int?alt=final+int&text=final+int" data-throw-if-not-resolved="False"/>
  - description: <p>An <code>int</code> which represents the number of bytes to upload from the input buffer.</p>
    name: length
    type: <xref href="final+int?alt=final+int&text=final+int" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Uploads a blob from data in a byte array. If the blob already exists on the service, it will be overwritten.</p>

    <p></p>
  syntax: public void uploadFromByteArray(final byte[] buffer, final int offset, final int length)
  uid: com.microsoft.azure.storage.blob.CloudBlob.uploadFromByteArray(final byte [],final int,final int)
- fullName: com.microsoft.azure.storage.blob.CloudBlob.uploadFromByteArray(final byte[] buffer, final int offset, final int length, final AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  name: uploadFromByteArray(final byte[] buffer, final int offset, final int length, final AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  nameWithType: CloudBlob.uploadFromByteArray(final byte[] buffer, final int offset, final int length, final AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  parameters:
  - description: <p>A <code>byte</code> array which represents the data to write to the blob. </p>
    name: buffer
    type: <xref href="final+byte+%5B%5D?alt=final+byte+%5B%5D&text=final+byte+%5B%5D" data-throw-if-not-resolved="False"/>
  - description: <p>A <code>int</code> which represents the offset of the byte array from which to start the data upload. </p>
    name: offset
    type: <xref href="final+int?alt=final+int&text=final+int" data-throw-if-not-resolved="False"/>
  - description: <p>An <code>int</code> which represents the number of bytes to upload from the input buffer. </p>
    name: length
    type: <xref href="final+int?alt=final+int&text=final+int" data-throw-if-not-resolved="False"/>
  - description: <p>An <xref uid="com.microsoft.azure.storage.AccessCondition" data-throw-if-not-resolved="false" data-raw-source="AccessCondition"></xref> object that represents the access conditions for the blob. </p>
    name: accessCondition
    type: final <xref href="com.microsoft.azure.storage.AccessCondition?alt=com.microsoft.azure.storage.AccessCondition&text=AccessCondition" data-throw-if-not-resolved="False"/>
  - description: <p>A <xref uid="com.microsoft.azure.storage.blob.BlobRequestOptions" data-throw-if-not-resolved="false" data-raw-source="BlobRequestOptions"></xref> object that specifies any additional options for the request. Specifying <code>null</code> will use the default request options from the associated service client ( <xref uid="com.microsoft.azure.storage.blob.CloudBlobClient" data-throw-if-not-resolved="false" data-raw-source="CloudBlobClient"></xref>). </p>
    name: options
    type: <xref href="com.microsoft.azure.storage.blob.BlobRequestOptions?alt=com.microsoft.azure.storage.blob.BlobRequestOptions&text=BlobRequestOptions" data-throw-if-not-resolved="False"/>
  - description: <p>An <xref uid="com.microsoft.azure.storage.OperationContext" data-throw-if-not-resolved="false" data-raw-source="OperationContext"></xref> object that represents the context for the current operation. This object is used to track requests to the storage service, and to provide additional runtime information about the operation.</p>
    name: opContext
    type: <xref href="com.microsoft.azure.storage.OperationContext?alt=com.microsoft.azure.storage.OperationContext&text=OperationContext" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Uploads a blob from data in a byte array. If the blob already exists on the service, it will be overwritten.</p>

    <p></p>
  syntax: public void uploadFromByteArray(final byte[] buffer, final int offset, final int length, final AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  uid: com.microsoft.azure.storage.blob.CloudBlob.uploadFromByteArray(final byte [],final int,final int,final AccessCondition,BlobRequestOptions,OperationContext)
- fullName: com.microsoft.azure.storage.blob.CloudBlob.uploadFromFile(final String path)
  name: uploadFromFile(final String path)
  nameWithType: CloudBlob.uploadFromFile(final String path)
  parameters:
  - description: <p>A <code>String</code> which represents the path to the file to be uploaded.</p>
    name: path
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Uploads a blob from a file. If the blob already exists on the service, it will be overwritten.</p>

    <p></p>
  syntax: public void uploadFromFile(final String path)
  uid: com.microsoft.azure.storage.blob.CloudBlob.uploadFromFile(final String)
- fullName: com.microsoft.azure.storage.blob.CloudBlob.uploadFromFile(final String path, final AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  name: uploadFromFile(final String path, final AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  nameWithType: CloudBlob.uploadFromFile(final String path, final AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  parameters:
  - description: <p>A <code>String</code> which represents the path to the file to be uploaded. </p>
    name: path
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>An <xref uid="com.microsoft.azure.storage.AccessCondition" data-throw-if-not-resolved="false" data-raw-source="AccessCondition"></xref> object that represents the access conditions for the blob. </p>
    name: accessCondition
    type: final <xref href="com.microsoft.azure.storage.AccessCondition?alt=com.microsoft.azure.storage.AccessCondition&text=AccessCondition" data-throw-if-not-resolved="False"/>
  - description: <p>A <xref uid="com.microsoft.azure.storage.blob.BlobRequestOptions" data-throw-if-not-resolved="false" data-raw-source="BlobRequestOptions"></xref> object that specifies any additional options for the request. Specifying <code>null</code> will use the default request options from the associated service client ( <xref uid="com.microsoft.azure.storage.blob.CloudBlobClient" data-throw-if-not-resolved="false" data-raw-source="CloudBlobClient"></xref>). </p>
    name: options
    type: <xref href="com.microsoft.azure.storage.blob.BlobRequestOptions?alt=com.microsoft.azure.storage.blob.BlobRequestOptions&text=BlobRequestOptions" data-throw-if-not-resolved="False"/>
  - description: <p>An <xref uid="com.microsoft.azure.storage.OperationContext" data-throw-if-not-resolved="false" data-raw-source="OperationContext"></xref> object that represents the context for the current operation. This object is used to track requests to the storage service, and to provide additional runtime information about the operation.</p>
    name: opContext
    type: <xref href="com.microsoft.azure.storage.OperationContext?alt=com.microsoft.azure.storage.OperationContext&text=OperationContext" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Uploads a blob from a file. If the blob already exists on the service, it will be overwritten.</p>

    <p></p>
  syntax: public void uploadFromFile(final String path, final AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  uid: com.microsoft.azure.storage.blob.CloudBlob.uploadFromFile(final String,final AccessCondition,BlobRequestOptions,OperationContext)
- fullName: com.microsoft.azure.storage.blob.CloudBlob.uploadMetadata()
  name: uploadMetadata()
  nameWithType: CloudBlob.uploadMetadata()
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  returns:
    type: <xref href="final+void?alt=final+void&text=final+void" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Uploads the blob's metadata to the storage service. </p>

    <p>Use <xref uid="com.microsoft.azure.storage.blob.CloudBlob.downloadAttributes()" data-throw-if-not-resolved="false" data-raw-source="CloudBlob#downloadAttributes"></xref> to retrieve the latest values for the blob's properties and metadata from the Microsoft Azure storage service.</p>

    <p></p>
  syntax: public final void uploadMetadata()
  uid: com.microsoft.azure.storage.blob.CloudBlob.uploadMetadata()
- fullName: com.microsoft.azure.storage.blob.CloudBlob.uploadMetadata(final AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  name: uploadMetadata(final AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  nameWithType: CloudBlob.uploadMetadata(final AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  parameters:
  - description: <p>An <xref uid="com.microsoft.azure.storage.AccessCondition" data-throw-if-not-resolved="false" data-raw-source="AccessCondition"></xref> object that represents the access conditions for the blob. </p>
    name: accessCondition
    type: final <xref href="com.microsoft.azure.storage.AccessCondition?alt=com.microsoft.azure.storage.AccessCondition&text=AccessCondition" data-throw-if-not-resolved="False"/>
  - description: <p>A <xref uid="com.microsoft.azure.storage.blob.BlobRequestOptions" data-throw-if-not-resolved="false" data-raw-source="BlobRequestOptions"></xref> object that specifies any additional options for the request. Specifying <code>null</code> will use the default request options from the associated service client ( <xref uid="com.microsoft.azure.storage.blob.CloudBlobClient" data-throw-if-not-resolved="false" data-raw-source="CloudBlobClient"></xref>). </p>
    name: options
    type: <xref href="com.microsoft.azure.storage.blob.BlobRequestOptions?alt=com.microsoft.azure.storage.blob.BlobRequestOptions&text=BlobRequestOptions" data-throw-if-not-resolved="False"/>
  - description: <p>An <xref uid="com.microsoft.azure.storage.OperationContext" data-throw-if-not-resolved="false" data-raw-source="OperationContext"></xref> object that represents the context for the current operation. This object is used to track requests to the storage service, and to provide additional runtime information about the operation.</p>
    name: opContext
    type: <xref href="com.microsoft.azure.storage.OperationContext?alt=com.microsoft.azure.storage.OperationContext&text=OperationContext" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  returns:
    type: <xref href="final+void?alt=final+void&text=final+void" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Uploads the blob's metadata to the storage service using the specified lease ID, request options, and operation context. </p>

    <p>Use <xref uid="com.microsoft.azure.storage.blob.CloudBlob.downloadAttributes()" data-throw-if-not-resolved="false" data-raw-source="CloudBlob#downloadAttributes"></xref> to retrieve the latest values for the blob's properties and metadata from the Microsoft Azure storage service.</p>

    <p></p>
  syntax: public final void uploadMetadata(final AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  uid: com.microsoft.azure.storage.blob.CloudBlob.uploadMetadata(final AccessCondition,BlobRequestOptions,OperationContext)
- fullName: com.microsoft.azure.storage.blob.CloudBlob.uploadProperties()
  name: uploadProperties()
  nameWithType: CloudBlob.uploadProperties()
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  returns:
    type: <xref href="final+void?alt=final+void&text=final+void" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Updates the blob's properties to the storage service. </p>

    <p>Use <xref uid="com.microsoft.azure.storage.blob.CloudBlob.downloadAttributes()" data-throw-if-not-resolved="false" data-raw-source="CloudBlob#downloadAttributes"></xref> to retrieve the latest values for the blob's properties and metadata from the Microsoft Azure storage service.</p>

    <p></p>
  syntax: public final void uploadProperties()
  uid: com.microsoft.azure.storage.blob.CloudBlob.uploadProperties()
- fullName: com.microsoft.azure.storage.blob.CloudBlob.uploadProperties(final AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  name: uploadProperties(final AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  nameWithType: CloudBlob.uploadProperties(final AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  parameters:
  - description: <p>An <xref uid="com.microsoft.azure.storage.AccessCondition" data-throw-if-not-resolved="false" data-raw-source="AccessCondition"></xref> object that represents the access conditions for the blob. </p>
    name: accessCondition
    type: final <xref href="com.microsoft.azure.storage.AccessCondition?alt=com.microsoft.azure.storage.AccessCondition&text=AccessCondition" data-throw-if-not-resolved="False"/>
  - description: <p>A <xref uid="com.microsoft.azure.storage.blob.BlobRequestOptions" data-throw-if-not-resolved="false" data-raw-source="BlobRequestOptions"></xref> object that specifies any additional options for the request. Specifying <code>null</code> will use the default request options from the associated service client ( <xref uid="com.microsoft.azure.storage.blob.CloudBlobClient" data-throw-if-not-resolved="false" data-raw-source="CloudBlobClient"></xref>). </p>
    name: options
    type: <xref href="com.microsoft.azure.storage.blob.BlobRequestOptions?alt=com.microsoft.azure.storage.blob.BlobRequestOptions&text=BlobRequestOptions" data-throw-if-not-resolved="False"/>
  - description: <p>An <xref uid="com.microsoft.azure.storage.OperationContext" data-throw-if-not-resolved="false" data-raw-source="OperationContext"></xref> object that represents the context for the current operation. This object is used to track requests to the storage service, and to provide additional runtime information about the operation.</p>
    name: opContext
    type: <xref href="com.microsoft.azure.storage.OperationContext?alt=com.microsoft.azure.storage.OperationContext&text=OperationContext" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  returns:
    type: <xref href="final+void?alt=final+void&text=final+void" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Updates the blob's properties using the specified lease ID, request options, and operation context. </p>

    <p>Use <xref uid="com.microsoft.azure.storage.blob.CloudBlob.downloadAttributes()" data-throw-if-not-resolved="false" data-raw-source="CloudBlob#downloadAttributes"></xref> to retrieve the latest values for the blob's properties and metadata from the Microsoft Azure storage service.</p>

    <p></p>
  syntax: public final void uploadProperties(final AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  uid: com.microsoft.azure.storage.blob.CloudBlob.uploadProperties(final AccessCondition,BlobRequestOptions,OperationContext)
- fullName: com.microsoft.azure.storage.blob.CloudBlob.validateCPKHeaders(StorageRequest<CloudBlobClient, T, R> request, BlobRequestOptions options, boolean upload)
  name: validateCPKHeaders(StorageRequest<CloudBlobClient, T, R> request, BlobRequestOptions options, boolean upload)
  nameWithType: CloudBlob.validateCPKHeaders(StorageRequest<CloudBlobClient, T, R> request, BlobRequestOptions options, boolean upload)
  parameters:
  - description: <p>The storage request to check the response of. </p>
    name: request
    type: <xref href="com.microsoft.azure.storage.core.StorageRequest?alt=com.microsoft.azure.storage.core.StorageRequest&text=StorageRequest" data-throw-if-not-resolved="False"/>&lt;<xref href="com.microsoft.azure.storage.blob.CloudBlobClient?alt=com.microsoft.azure.storage.blob.CloudBlobClient&text=CloudBlobClient" data-throw-if-not-resolved="False"/>, T, R&gt;
  - description: <p>The blob options used on the request. </p>
    name: options
    type: <xref href="com.microsoft.azure.storage.blob.BlobRequestOptions?alt=com.microsoft.azure.storage.blob.BlobRequestOptions&text=BlobRequestOptions" data-throw-if-not-resolved="False"/>
  - description: <p>Whether this was an upload or if we're just retrieving data. </p>
    name: upload
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>Throws if CPK was used in the request and the response failed validation. </p>
  returns:
    type: static&lt;T extends <xref href="com.microsoft.azure.storage.blob.CloudBlob?alt=com.microsoft.azure.storage.blob.CloudBlob&text=CloudBlob" data-throw-if-not-resolved="False"/>, R&gt; void
  summary: >-
    <p>If the request options contain a CPK, validate the associated response headers.</p>

    <p></p>
  syntax: protected static static<T extends CloudBlob, R> void validateCPKHeaders(StorageRequest<CloudBlobClient, T, R> request, BlobRequestOptions options, boolean upload)
  uid: com.microsoft.azure.storage.blob.CloudBlob.validateCPKHeaders(StorageRequest<CloudBlobClient, T, R>,BlobRequestOptions,boolean)
nameWithType: CloudBlob
syntax: public class CloudBlob implements ListBlobItem
type: class
uid: com.microsoft.azure.storage.blob.CloudBlob
fullName: com.microsoft.azure.storage.blob.CloudBlob
name: CloudBlob
package: com.microsoft.azure.storage.blob
summary: <p>Represents a Microsoft Azure blob. This is the base class for the <xref uid="com.microsoft.azure.storage.blob.CloudBlockBlob" data-throw-if-not-resolved="false" data-raw-source="CloudBlockBlob"></xref> and <xref uid="com.microsoft.azure.storage.blob.CloudPageBlob" data-throw-if-not-resolved="false" data-raw-source="CloudPageBlob"></xref> classes. </p>
metadata: {}
