### YamlMime:JavaType
constructors:
- fullName: com.microsoft.azure.sdk.iot.provisioning.security.hsm.SecurityProviderX509Cert.SecurityProviderX509Cert(X509Certificate leafCertificatePublic, Key leafPrivateKey, Collection<X509Certificate> signerCertificates)
  name: SecurityProviderX509Cert(X509Certificate leafCertificatePublic, Key leafPrivateKey, Collection<X509Certificate> signerCertificates)
  nameWithType: SecurityProviderX509Cert.SecurityProviderX509Cert(X509Certificate leafCertificatePublic, Key leafPrivateKey, Collection<X509Certificate> signerCertificates)
  parameters:
  - name: leafCertificatePublic
    type: <xref href="X509Certificate?alt=X509Certificate&text=X509Certificate" data-throw-if-not-resolved="False"/>
  - name: leafPrivateKey
    type: <xref href="Key?alt=Key&text=Key" data-throw-if-not-resolved="False"/>
  - name: signerCertificates
    type: <xref href="Collection%3CX509Certificate%3E?alt=Collection%3CX509Certificate%3E&text=Collection%3CX509Certificate%3E" data-throw-if-not-resolved="False"/>
  summary: <p>Constructor to build the DICE certs from the simulator </p>
  syntax: public SecurityProviderX509Cert(X509Certificate leafCertificatePublic, Key leafPrivateKey, Collection<X509Certificate> signerCertificates)
  uid: com.microsoft.azure.sdk.iot.provisioning.security.hsm.SecurityProviderX509Cert.SecurityProviderX509Cert(X509Certificate,Key,Collection<X509Certificate>)
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
- <xref href="com.microsoft.azure.sdk.iot.provisioning.security.SecurityProvider" data-throw-if-not-resolved="False"/>
- <xref href="com.microsoft.azure.sdk.iot.provisioning.security.SecurityProviderX509?alt=com.microsoft.azure.sdk.iot.provisioning.security.SecurityProviderX509&text=SecurityProviderX509" data-throw-if-not-resolved="False"/>
inheritedMembers:
- com.microsoft.azure.sdk.iot.provisioning.security.SecurityProviderX509.getRegistrationId()
- com.microsoft.azure.sdk.iot.provisioning.security.SecurityProviderX509.getSSLContext()
methods:
- fullName: com.microsoft.azure.sdk.iot.provisioning.security.hsm.SecurityProviderX509Cert.getClientCertificate()
  name: getClientCertificate()
  nameWithType: SecurityProviderX509Cert.getClientCertificate()
  returns:
    description: <p>Alias certificate </p>
    type: <xref href="X509Certificate?alt=X509Certificate&text=X509Certificate" data-throw-if-not-resolved="False"/>
  summary: <p>Getter for the Alias certificate </p>
  syntax: public X509Certificate getClientCertificate()
  uid: com.microsoft.azure.sdk.iot.provisioning.security.hsm.SecurityProviderX509Cert.getClientCertificate()
- fullName: com.microsoft.azure.sdk.iot.provisioning.security.hsm.SecurityProviderX509Cert.getClientCertificateCommonName()
  name: getClientCertificateCommonName()
  nameWithType: SecurityProviderX509Cert.getClientCertificateCommonName()
  returns:
    description: <p>The common name for the root cert </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: <p>Getter for the common name </p>
  syntax: public String getClientCertificateCommonName()
  uid: com.microsoft.azure.sdk.iot.provisioning.security.hsm.SecurityProviderX509Cert.getClientCertificateCommonName()
- fullName: com.microsoft.azure.sdk.iot.provisioning.security.hsm.SecurityProviderX509Cert.getClientPrivateKey()
  name: getClientPrivateKey()
  nameWithType: SecurityProviderX509Cert.getClientPrivateKey()
  returns:
    description: <p>Alias private key </p>
    type: <xref href="Key?alt=Key&text=Key" data-throw-if-not-resolved="False"/>
  summary: <p>Getter for Alias key </p>
  syntax: public Key getClientPrivateKey()
  uid: com.microsoft.azure.sdk.iot.provisioning.security.hsm.SecurityProviderX509Cert.getClientPrivateKey()
- fullName: com.microsoft.azure.sdk.iot.provisioning.security.hsm.SecurityProviderX509Cert.getIntermediateCertificatesChain()
  name: getIntermediateCertificatesChain()
  nameWithType: SecurityProviderX509Cert.getIntermediateCertificatesChain()
  returns:
    description: <p>Signer cert </p>
    type: <xref href="Collection%3CX509Certificate%3E?alt=Collection%3CX509Certificate%3E&text=Collection%3CX509Certificate%3E" data-throw-if-not-resolved="False"/>
  summary: <p>Getter for the signer cert </p>
  syntax: public Collection<X509Certificate> getIntermediateCertificatesChain()
  uid: com.microsoft.azure.sdk.iot.provisioning.security.hsm.SecurityProviderX509Cert.getIntermediateCertificatesChain()
nameWithType: SecurityProviderX509Cert
syntax: public class SecurityProviderX509Cert extends SecurityProviderX509
type: class
uid: com.microsoft.azure.sdk.iot.provisioning.security.hsm.SecurityProviderX509Cert
fullName: com.microsoft.azure.sdk.iot.provisioning.security.hsm.SecurityProviderX509Cert
name: SecurityProviderX509Cert
package: com.microsoft.azure.sdk.iot.provisioning.security.hsm
metadata: {}
