### YamlMime:JavaMember
nameWithType: Predictions.detectImageWithNoStore
type: method
members:
- fullName: com.microsoft.azure.cognitiveservices.vision.customvision.prediction.Predictions.detectImageWithNoStore()
  name: detectImageWithNoStore()
  nameWithType: Predictions.detectImageWithNoStore()
  returns:
    description: <p>the first stage of the detectImageWithNoStore call </p>
    type: <xref href="PredictionsDetectImageWithNoStoreDefinitionStages.WithProjectId?alt=PredictionsDetectImageWithNoStoreDefinitionStages.WithProjectId&text=PredictionsDetectImageWithNoStoreDefinitionStages.WithProjectId" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Detect objects in an image without saving the result.</p>

    <p></p>
  syntax: public PredictionsDetectImageWithNoStoreDefinitionStages.WithProjectId detectImageWithNoStore()
  uid: com.microsoft.azure.cognitiveservices.vision.customvision.prediction.Predictions.detectImageWithNoStore()
- fullName: com.microsoft.azure.cognitiveservices.vision.customvision.prediction.Predictions.detectImageWithNoStore(UUID projectId, String publishedName, byte[] imageData, DetectImageWithNoStoreOptionalParameter detectImageWithNoStoreOptionalParameter)
  name: detectImageWithNoStore(UUID projectId, String publishedName, byte[] imageData, DetectImageWithNoStoreOptionalParameter detectImageWithNoStoreOptionalParameter)
  nameWithType: Predictions.detectImageWithNoStore(UUID projectId, String publishedName, byte[] imageData, DetectImageWithNoStoreOptionalParameter detectImageWithNoStoreOptionalParameter)
  parameters:
  - description: <p>The project id. </p>
    name: projectId
    type: <xref href="UUID?alt=UUID&text=UUID" data-throw-if-not-resolved="False"/>
  - description: <p>Specifies the name of the model to evaluate against. </p>
    name: publishedName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>Binary image data. Supported formats are JPEG, GIF, PNG, and BMP. Supports images up to 0MB. </p>
    name: imageData
    type: <xref href="byte+%5B%5D?alt=byte+%5B%5D&text=byte+%5B%5D" data-throw-if-not-resolved="False"/>
  - description: <p>the object representing the optional parameters to be set before calling this API </p>
    name: detectImageWithNoStoreOptionalParameter
    type: <xref href="com.microsoft.azure.cognitiveservices.vision.customvision.prediction.models.DetectImageWithNoStoreOptionalParameter?alt=com.microsoft.azure.cognitiveservices.vision.customvision.prediction.models.DetectImageWithNoStoreOptionalParameter&text=DetectImageWithNoStoreOptionalParameter" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="CustomVisionErrorException?alt=CustomVisionErrorException&text=CustomVisionErrorException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  returns:
    description: <p>the ImagePrediction object if successful. </p>
    type: <xref href="com.microsoft.azure.cognitiveservices.vision.customvision.prediction.models.ImagePrediction?alt=com.microsoft.azure.cognitiveservices.vision.customvision.prediction.models.ImagePrediction&text=ImagePrediction" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Detect objects in an image without saving the result.</p>

    <p></p>
  syntax: public ImagePrediction detectImageWithNoStore(UUID projectId, String publishedName, byte[] imageData, DetectImageWithNoStoreOptionalParameter detectImageWithNoStoreOptionalParameter)
  uid: com.microsoft.azure.cognitiveservices.vision.customvision.prediction.Predictions.detectImageWithNoStore(UUID,String,byte [],DetectImageWithNoStoreOptionalParameter)
uid: com.microsoft.azure.cognitiveservices.vision.customvision.prediction.Predictions.detectImageWithNoStore*
fullName: com.microsoft.azure.cognitiveservices.vision.customvision.prediction.Predictions.detectImageWithNoStore
name: detectImageWithNoStore()
package: com.microsoft.azure.cognitiveservices.vision.customvision.prediction
metadata: {}
