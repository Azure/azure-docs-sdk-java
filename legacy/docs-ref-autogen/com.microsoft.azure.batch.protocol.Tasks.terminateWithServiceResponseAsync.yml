### YamlMime:JavaMember
nameWithType: Tasks.terminateWithServiceResponseAsync
type: method
members:
- fullName: com.microsoft.azure.batch.protocol.Tasks.terminateWithServiceResponseAsync(String jobId, String taskId)
  name: terminateWithServiceResponseAsync(String jobId, String taskId)
  nameWithType: Tasks.terminateWithServiceResponseAsync(String jobId, String taskId)
  parameters:
  - description: <p>The ID of the job containing the task. </p>
    name: jobId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The ID of the task to terminate. </p>
    name: taskId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceResponseWithHeaders</xref> object if successful. </p>
    type: Observable&lt;ServiceResponseWithHeaders&lt;Void, <xref href="com.microsoft.azure.batch.protocol.models.TaskTerminateHeaders?alt=com.microsoft.azure.batch.protocol.models.TaskTerminateHeaders&text=TaskTerminateHeaders" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Terminates the specified task. When the task has been terminated, it moves to the completed state. For multi-instance tasks, the terminate task operation applies synchronously to the primary task; subtasks are then terminated asynchronously in the background.</p>

    <p></p>
  syntax: public Observable<ServiceResponseWithHeaders<Void, TaskTerminateHeaders>> terminateWithServiceResponseAsync(String jobId, String taskId)
  uid: com.microsoft.azure.batch.protocol.Tasks.terminateWithServiceResponseAsync(String,String)
- fullName: com.microsoft.azure.batch.protocol.Tasks.terminateWithServiceResponseAsync(String jobId, String taskId, TaskTerminateOptions taskTerminateOptions)
  name: terminateWithServiceResponseAsync(String jobId, String taskId, TaskTerminateOptions taskTerminateOptions)
  nameWithType: Tasks.terminateWithServiceResponseAsync(String jobId, String taskId, TaskTerminateOptions taskTerminateOptions)
  parameters:
  - description: <p>The ID of the job containing the task. </p>
    name: jobId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The ID of the task to terminate. </p>
    name: taskId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>Additional parameters for the operation </p>
    name: taskTerminateOptions
    type: <xref href="com.microsoft.azure.batch.protocol.models.TaskTerminateOptions?alt=com.microsoft.azure.batch.protocol.models.TaskTerminateOptions&text=TaskTerminateOptions" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceResponseWithHeaders</xref> object if successful. </p>
    type: Observable&lt;ServiceResponseWithHeaders&lt;Void, <xref href="com.microsoft.azure.batch.protocol.models.TaskTerminateHeaders?alt=com.microsoft.azure.batch.protocol.models.TaskTerminateHeaders&text=TaskTerminateHeaders" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Terminates the specified task. When the task has been terminated, it moves to the completed state. For multi-instance tasks, the terminate task operation applies synchronously to the primary task; subtasks are then terminated asynchronously in the background.</p>

    <p></p>
  syntax: public Observable<ServiceResponseWithHeaders<Void, TaskTerminateHeaders>> terminateWithServiceResponseAsync(String jobId, String taskId, TaskTerminateOptions taskTerminateOptions)
  uid: com.microsoft.azure.batch.protocol.Tasks.terminateWithServiceResponseAsync(String,String,TaskTerminateOptions)
uid: com.microsoft.azure.batch.protocol.Tasks.terminateWithServiceResponseAsync*
fullName: com.microsoft.azure.batch.protocol.Tasks.terminateWithServiceResponseAsync(String jobId, String taskId)
name: terminateWithServiceResponseAsync(String jobId, String taskId)
package: com.microsoft.azure.batch.protocol
metadata: {}
