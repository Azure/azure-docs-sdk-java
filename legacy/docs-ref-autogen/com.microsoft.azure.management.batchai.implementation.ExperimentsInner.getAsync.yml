### YamlMime:JavaMember
nameWithType: ExperimentsInner.getAsync
type: method
members:
- fullName: com.microsoft.azure.management.batchai.implementation.ExperimentsInner.getAsync(String resourceGroupName, String workspaceName, String experimentName)
  name: getAsync(String resourceGroupName, String workspaceName, String experimentName)
  nameWithType: ExperimentsInner.getAsync(String resourceGroupName, String workspaceName, String experimentName)
  parameters:
  - description: <p>Name of the resource group to which the resource belongs. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the workspace. Workspace names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: workspaceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the experiment. Experiment names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: experimentName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the ExperimentInner object </p>
    type: Observable&lt;<xref href="com.microsoft.azure.management.batchai.implementation.ExperimentInner?alt=com.microsoft.azure.management.batchai.implementation.ExperimentInner&text=ExperimentInner" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Gets information about an Experiment.</p>

    <p></p>
  syntax: public Observable<ExperimentInner> getAsync(String resourceGroupName, String workspaceName, String experimentName)
  uid: com.microsoft.azure.management.batchai.implementation.ExperimentsInner.getAsync(String,String,String)
- fullName: com.microsoft.azure.management.batchai.implementation.ExperimentsInner.getAsync(String resourceGroupName, String workspaceName, String experimentName, final ServiceCallback<ExperimentInner> serviceCallback)
  name: getAsync(String resourceGroupName, String workspaceName, String experimentName, final ServiceCallback<ExperimentInner> serviceCallback)
  nameWithType: ExperimentsInner.getAsync(String resourceGroupName, String workspaceName, String experimentName, final ServiceCallback<ExperimentInner> serviceCallback)
  parameters:
  - description: <p>Name of the resource group to which the resource belongs. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the workspace. Workspace names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: workspaceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the experiment. Experiment names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: experimentName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    name: serviceCallback
    type: final ServiceCallback&lt;<xref href="com.microsoft.azure.management.batchai.implementation.ExperimentInner?alt=com.microsoft.azure.management.batchai.implementation.ExperimentInner&text=ExperimentInner" data-throw-if-not-resolved="False"/>&gt;
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
    type: ServiceFuture&lt;<xref href="com.microsoft.azure.management.batchai.implementation.ExperimentInner?alt=com.microsoft.azure.management.batchai.implementation.ExperimentInner&text=ExperimentInner" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Gets information about an Experiment.</p>

    <p></p>
  syntax: public ServiceFuture<ExperimentInner> getAsync(String resourceGroupName, String workspaceName, String experimentName, final ServiceCallback<ExperimentInner> serviceCallback)
  uid: com.microsoft.azure.management.batchai.implementation.ExperimentsInner.getAsync(String,String,String,final ServiceCallback<ExperimentInner>)
uid: com.microsoft.azure.management.batchai.implementation.ExperimentsInner.getAsync*
fullName: com.microsoft.azure.management.batchai.implementation.ExperimentsInner.getAsync(String resourceGroupName, String workspaceName, String experimentName)
name: getAsync(String resourceGroupName, String workspaceName, String experimentName)
package: com.microsoft.azure.management.batchai.implementation
metadata: {}
