### YamlMime:JavaType
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
methods:
- fullName: com.microsoft.azure.management.containerregistry.AuthInfo.expiresIn()
  name: expiresIn()
  nameWithType: AuthInfo.expiresIn()
  returns:
    description: <p>the expiresIn value </p>
    type: <xref href="Integer?alt=Integer&text=Integer" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get time in seconds that the token remains valid.</p>

    <p></p>
  syntax: public Integer expiresIn()
  uid: com.microsoft.azure.management.containerregistry.AuthInfo.expiresIn()
- fullName: com.microsoft.azure.management.containerregistry.AuthInfo.refreshToken()
  name: refreshToken()
  nameWithType: AuthInfo.refreshToken()
  returns:
    description: <p>the refreshToken value </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the refresh token used to refresh the access token.</p>

    <p></p>
  syntax: public String refreshToken()
  uid: com.microsoft.azure.management.containerregistry.AuthInfo.refreshToken()
- fullName: com.microsoft.azure.management.containerregistry.AuthInfo.scope()
  name: scope()
  nameWithType: AuthInfo.scope()
  returns:
    description: <p>the scope value </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the scope of the access token.</p>

    <p></p>
  syntax: public String scope()
  uid: com.microsoft.azure.management.containerregistry.AuthInfo.scope()
- fullName: com.microsoft.azure.management.containerregistry.AuthInfo.token()
  name: token()
  nameWithType: AuthInfo.token()
  returns:
    description: <p>the token value </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the access token used to access the source control provider.</p>

    <p></p>
  syntax: public String token()
  uid: com.microsoft.azure.management.containerregistry.AuthInfo.token()
- fullName: com.microsoft.azure.management.containerregistry.AuthInfo.tokenType()
  name: tokenType()
  nameWithType: AuthInfo.tokenType()
  returns:
    description: <p>the tokenType value </p>
    type: <xref href="com.microsoft.azure.management.containerregistry.TokenType?alt=com.microsoft.azure.management.containerregistry.TokenType&text=TokenType" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the type of Auth token. Possible values include: 'PAT', 'OAuth'.</p>

    <p></p>
  syntax: public TokenType tokenType()
  uid: com.microsoft.azure.management.containerregistry.AuthInfo.tokenType()
- fullName: com.microsoft.azure.management.containerregistry.AuthInfo.withExpiresIn(Integer expiresIn)
  name: withExpiresIn(Integer expiresIn)
  nameWithType: AuthInfo.withExpiresIn(Integer expiresIn)
  parameters:
  - description: <p>the expiresIn value to set </p>
    name: expiresIn
    type: <xref href="Integer?alt=Integer&text=Integer" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the AuthInfo object itself. </p>
    type: <xref href="com.microsoft.azure.management.containerregistry.AuthInfo?alt=com.microsoft.azure.management.containerregistry.AuthInfo&text=AuthInfo" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set time in seconds that the token remains valid.</p>

    <p></p>
  syntax: public AuthInfo withExpiresIn(Integer expiresIn)
  uid: com.microsoft.azure.management.containerregistry.AuthInfo.withExpiresIn(Integer)
- fullName: com.microsoft.azure.management.containerregistry.AuthInfo.withRefreshToken(String refreshToken)
  name: withRefreshToken(String refreshToken)
  nameWithType: AuthInfo.withRefreshToken(String refreshToken)
  parameters:
  - description: <p>the refreshToken value to set </p>
    name: refreshToken
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the AuthInfo object itself. </p>
    type: <xref href="com.microsoft.azure.management.containerregistry.AuthInfo?alt=com.microsoft.azure.management.containerregistry.AuthInfo&text=AuthInfo" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the refresh token used to refresh the access token.</p>

    <p></p>
  syntax: public AuthInfo withRefreshToken(String refreshToken)
  uid: com.microsoft.azure.management.containerregistry.AuthInfo.withRefreshToken(String)
- fullName: com.microsoft.azure.management.containerregistry.AuthInfo.withScope(String scope)
  name: withScope(String scope)
  nameWithType: AuthInfo.withScope(String scope)
  parameters:
  - description: <p>the scope value to set </p>
    name: scope
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the AuthInfo object itself. </p>
    type: <xref href="com.microsoft.azure.management.containerregistry.AuthInfo?alt=com.microsoft.azure.management.containerregistry.AuthInfo&text=AuthInfo" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the scope of the access token.</p>

    <p></p>
  syntax: public AuthInfo withScope(String scope)
  uid: com.microsoft.azure.management.containerregistry.AuthInfo.withScope(String)
- fullName: com.microsoft.azure.management.containerregistry.AuthInfo.withToken(String token)
  name: withToken(String token)
  nameWithType: AuthInfo.withToken(String token)
  parameters:
  - description: <p>the token value to set </p>
    name: token
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the AuthInfo object itself. </p>
    type: <xref href="com.microsoft.azure.management.containerregistry.AuthInfo?alt=com.microsoft.azure.management.containerregistry.AuthInfo&text=AuthInfo" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the access token used to access the source control provider.</p>

    <p></p>
  syntax: public AuthInfo withToken(String token)
  uid: com.microsoft.azure.management.containerregistry.AuthInfo.withToken(String)
- fullName: com.microsoft.azure.management.containerregistry.AuthInfo.withTokenType(TokenType tokenType)
  name: withTokenType(TokenType tokenType)
  nameWithType: AuthInfo.withTokenType(TokenType tokenType)
  parameters:
  - description: <p>the tokenType value to set </p>
    name: tokenType
    type: <xref href="com.microsoft.azure.management.containerregistry.TokenType?alt=com.microsoft.azure.management.containerregistry.TokenType&text=TokenType" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the AuthInfo object itself. </p>
    type: <xref href="com.microsoft.azure.management.containerregistry.AuthInfo?alt=com.microsoft.azure.management.containerregistry.AuthInfo&text=AuthInfo" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the type of Auth token. Possible values include: 'PAT', 'OAuth'.</p>

    <p></p>
  syntax: public AuthInfo withTokenType(TokenType tokenType)
  uid: com.microsoft.azure.management.containerregistry.AuthInfo.withTokenType(TokenType)
nameWithType: AuthInfo
syntax: public class AuthInfo
type: class
uid: com.microsoft.azure.management.containerregistry.AuthInfo
fullName: com.microsoft.azure.management.containerregistry.AuthInfo
name: AuthInfo
package: com.microsoft.azure.management.containerregistry
summary: <p>The authorization properties for accessing the source code repository. </p>
metadata: {}
