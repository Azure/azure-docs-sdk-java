### YamlMime:JavaMember
nameWithType: SearchServices.checkNameAvailabilityAsync
type: method
members:
- fullName: com.microsoft.azure.management.search.SearchServices.checkNameAvailabilityAsync(String name)
  name: checkNameAvailabilityAsync(String name)
  nameWithType: SearchServices.checkNameAvailabilityAsync(String name)
  parameters:
  - description: <p>the Search service name to check </p>
    name: name
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>a representation of the deferred computation of this call, returning whether the name is available or other info if not </p>
    type: Observable&lt;<xref href="com.microsoft.azure.management.search.CheckNameAvailabilityResult?alt=com.microsoft.azure.management.search.CheckNameAvailabilityResult&text=CheckNameAvailabilityResult" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Checks if Search service name is valid and is not in use asynchronously.</p>

    <p></p>
  syntax: public Observable<CheckNameAvailabilityResult> checkNameAvailabilityAsync(String name)
  uid: com.microsoft.azure.management.search.SearchServices.checkNameAvailabilityAsync(String)
- fullName: com.microsoft.azure.management.search.SearchServices.checkNameAvailabilityAsync(String name, ServiceCallback<CheckNameAvailabilityResult> callback)
  name: checkNameAvailabilityAsync(String name, ServiceCallback<CheckNameAvailabilityResult> callback)
  nameWithType: SearchServices.checkNameAvailabilityAsync(String name, ServiceCallback<CheckNameAvailabilityResult> callback)
  parameters:
  - description: <p>the Search service name to check </p>
    name: name
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the callback to call on success or failure </p>
    name: callback
    type: ServiceCallback&lt;<xref href="com.microsoft.azure.management.search.CheckNameAvailabilityResult?alt=com.microsoft.azure.management.search.CheckNameAvailabilityResult&text=CheckNameAvailabilityResult" data-throw-if-not-resolved="False"/>&gt;
  returns:
    description: <p>a handle to cancel the request </p>
    type: ServiceFuture&lt;<xref href="com.microsoft.azure.management.search.CheckNameAvailabilityResult?alt=com.microsoft.azure.management.search.CheckNameAvailabilityResult&text=CheckNameAvailabilityResult" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Checks if Search service name is valid and is not in use asynchronously.</p>

    <p></p>
  syntax: public ServiceFuture<CheckNameAvailabilityResult> checkNameAvailabilityAsync(String name, ServiceCallback<CheckNameAvailabilityResult> callback)
  uid: com.microsoft.azure.management.search.SearchServices.checkNameAvailabilityAsync(String,ServiceCallback<CheckNameAvailabilityResult>)
uid: com.microsoft.azure.management.search.SearchServices.checkNameAvailabilityAsync*
fullName: com.microsoft.azure.management.search.SearchServices.checkNameAvailabilityAsync(String name)
name: checkNameAvailabilityAsync(String name)
package: com.microsoft.azure.management.search
metadata: {}
