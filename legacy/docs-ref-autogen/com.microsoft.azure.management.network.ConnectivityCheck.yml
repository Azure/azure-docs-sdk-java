### YamlMime:JavaType
inheritedMembers:
- com.microsoft.azure.management.resources.fluentcore.model.Executable.execute()
- com.microsoft.azure.management.resources.fluentcore.model.Executable.executeAsync()
- com.microsoft.azure.management.resources.fluentcore.model.Executable.executeAsync(final ServiceCallback<T>)
- com.microsoft.azure.management.resources.fluentcore.model.Indexable.key()
- com.microsoft.azure.management.resources.fluentcore.arm.models.HasParent.parent()
methods:
- fullName: com.microsoft.azure.management.network.ConnectivityCheck.avgLatencyInMs()
  name: avgLatencyInMs()
  nameWithType: ConnectivityCheck.avgLatencyInMs()
  returns:
    description: <p>average latency in milliseconds </p>
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  syntax: public int avgLatencyInMs()
  uid: com.microsoft.azure.management.network.ConnectivityCheck.avgLatencyInMs()
- fullName: com.microsoft.azure.management.network.ConnectivityCheck.connectionStatus()
  name: connectionStatus()
  nameWithType: ConnectivityCheck.connectionStatus()
  returns:
    description: <p>the connection status </p>
    type: <xref href="com.microsoft.azure.management.network.ConnectionStatus?alt=com.microsoft.azure.management.network.ConnectionStatus&text=ConnectionStatus" data-throw-if-not-resolved="False"/>
  syntax: public ConnectionStatus connectionStatus()
  uid: com.microsoft.azure.management.network.ConnectivityCheck.connectionStatus()
- fullName: com.microsoft.azure.management.network.ConnectivityCheck.hops()
  name: hops()
  nameWithType: ConnectivityCheck.hops()
  returns:
    description: <p>list of hops between the source and the destination </p>
    type: List&lt;<xref href="com.microsoft.azure.management.network.ConnectivityHop?alt=com.microsoft.azure.management.network.ConnectivityHop&text=ConnectivityHop" data-throw-if-not-resolved="False"/>&gt;
  syntax: public List<ConnectivityHop> hops()
  uid: com.microsoft.azure.management.network.ConnectivityCheck.hops()
- fullName: com.microsoft.azure.management.network.ConnectivityCheck.maxLatencyInMs()
  name: maxLatencyInMs()
  nameWithType: ConnectivityCheck.maxLatencyInMs()
  returns:
    description: <p>maximum latency in milliseconds </p>
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  syntax: public int maxLatencyInMs()
  uid: com.microsoft.azure.management.network.ConnectivityCheck.maxLatencyInMs()
- fullName: com.microsoft.azure.management.network.ConnectivityCheck.minLatencyInMs()
  name: minLatencyInMs()
  nameWithType: ConnectivityCheck.minLatencyInMs()
  returns:
    description: <p>minimum latency in milliseconds </p>
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  syntax: public int minLatencyInMs()
  uid: com.microsoft.azure.management.network.ConnectivityCheck.minLatencyInMs()
- fullName: com.microsoft.azure.management.network.ConnectivityCheck.probesFailed()
  name: probesFailed()
  nameWithType: ConnectivityCheck.probesFailed()
  returns:
    description: <p>number of failed probes </p>
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  syntax: public int probesFailed()
  uid: com.microsoft.azure.management.network.ConnectivityCheck.probesFailed()
- fullName: com.microsoft.azure.management.network.ConnectivityCheck.probesSent()
  name: probesSent()
  nameWithType: ConnectivityCheck.probesSent()
  returns:
    description: <p>total number of probes sent </p>
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  syntax: public int probesSent()
  uid: com.microsoft.azure.management.network.ConnectivityCheck.probesSent()
nameWithType: ConnectivityCheck
syntax: public interface ConnectivityCheck extends Executable<ConnectivityCheck>,HasParent<NetworkWatcher>
type: interface
uid: com.microsoft.azure.management.network.ConnectivityCheck
fullName: com.microsoft.azure.management.network.ConnectivityCheck
name: ConnectivityCheck
package: com.microsoft.azure.management.network
summary: <p>A client-side representation allowing user to verify the possibility of establishing a direct TCP connection from a virtual machine to a given endpoint including another VM or an arbitrary remote server. </p>
metadata: {}
