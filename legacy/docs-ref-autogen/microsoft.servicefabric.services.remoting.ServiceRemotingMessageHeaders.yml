### YamlMime:ManagedReference
items:
- uid: microsoft.servicefabric.services.remoting.ServiceRemotingMessageHeaders
  id: ServiceRemotingMessageHeaders
  parent: microsoft.servicefabric.services.remoting
  children:
  - microsoft.servicefabric.services.remoting.ServiceRemotingMessageHeaders.addHeader(String,byte [])
  - microsoft.servicefabric.services.remoting.ServiceRemotingMessageHeaders.deserialize(byte [])
  - microsoft.servicefabric.services.remoting.ServiceRemotingMessageHeaders.getCallContext()
  - microsoft.servicefabric.services.remoting.ServiceRemotingMessageHeaders.getCancellationHeaderName()
  - microsoft.servicefabric.services.remoting.ServiceRemotingMessageHeaders.getHeaders()
  - microsoft.servicefabric.services.remoting.ServiceRemotingMessageHeaders.getHeaderValue(String)
  - microsoft.servicefabric.services.remoting.ServiceRemotingMessageHeaders.getInterfaceId()
  - microsoft.servicefabric.services.remoting.ServiceRemotingMessageHeaders.getMethodId()
  - microsoft.servicefabric.services.remoting.ServiceRemotingMessageHeaders.serialize(ServiceRemotingMessageHeaders)
  - microsoft.servicefabric.services.remoting.ServiceRemotingMessageHeaders.ServiceRemotingMessageHeaders()
  - microsoft.servicefabric.services.remoting.ServiceRemotingMessageHeaders.setCallContext(String)
  - microsoft.servicefabric.services.remoting.ServiceRemotingMessageHeaders.setHeaders(HashMap<String, byte[]>)
  - microsoft.servicefabric.services.remoting.ServiceRemotingMessageHeaders.setInterfaceId(int)
  - microsoft.servicefabric.services.remoting.ServiceRemotingMessageHeaders.setMethodId(int)
  href: microsoft.servicefabric.services.remoting.ServiceRemotingMessageHeaders.yml
  langs:
  - java
  name: ServiceRemotingMessageHeaders
  nameWithType: ServiceRemotingMessageHeaders
  fullName: microsoft.servicefabric.services.remoting.ServiceRemotingMessageHeaders
  type: Class
  source:
    remote: &o0
      path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/remoting/ServiceRemotingMessageHeaders.java
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/sf-java
    path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/remoting/ServiceRemotingMessageHeaders.java
    startLine: 19
  package: microsoft.servicefabric.services.remoting
  summary: "<p>Specifies the headers that are sent along with a ServiceRemoting message. </p>"
  syntax: &o1
    content: public class ServiceRemotingMessageHeaders
  inheritance:
  - java.lang.Object
  - Serializable
- uid: microsoft.servicefabric.services.remoting.ServiceRemotingMessageHeaders.addHeader(String,byte [])
  id: addHeader(String,byte [])
  parent: microsoft.servicefabric.services.remoting.ServiceRemotingMessageHeaders
  href: microsoft.servicefabric.services.remoting.ServiceRemotingMessageHeaders.yml
  langs:
  - java
  name: addHeader(String headerName, byte[] headerValue)
  nameWithType: ServiceRemotingMessageHeaders.addHeader(String headerName, byte[] headerValue)
  fullName: microsoft.servicefabric.services.remoting.ServiceRemotingMessageHeaders.addHeader(String headerName, byte[] headerValue)
  overload: microsoft.servicefabric.services.remoting.ServiceRemotingMessageHeaders.addHeader*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/remoting/ServiceRemotingMessageHeaders.java
    startLine: 110
  package: microsoft.servicefabric.services.remoting
  summary: "<p>Adds a new header with the specified name and value.</p>\r\n<p></p>"
  syntax:
    content: public void addHeader(String headerName, byte[] headerValue)
    parameters:
    - id: headerName
      type: "26831127"
      description: <p>Header Name </p>
    - id: headerValue
      type: ccd9418d
      description: <p>header value </p>
  exceptions:
  - type: 34616db9
    description: <p>Throws FabricElementAlreadyExistsException if a header with the same name already exists. </p>
- uid: microsoft.servicefabric.services.remoting.ServiceRemotingMessageHeaders.deserialize(byte [])
  id: deserialize(byte [])
  parent: microsoft.servicefabric.services.remoting.ServiceRemotingMessageHeaders
  href: microsoft.servicefabric.services.remoting.ServiceRemotingMessageHeaders.yml
  langs:
  - java
  name: deserialize(byte[] buffer)
  nameWithType: ServiceRemotingMessageHeaders.deserialize(byte[] buffer)
  fullName: microsoft.servicefabric.services.remoting.ServiceRemotingMessageHeaders.deserialize(byte[] buffer)
  overload: microsoft.servicefabric.services.remoting.ServiceRemotingMessageHeaders.deserialize*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/remoting/ServiceRemotingMessageHeaders.java
    startLine: 170
  package: microsoft.servicefabric.services.remoting
  summary: "<p>De-serializes the byte array to a ServiceRemotingMessageHeaders object</p>\r\n<p></p>"
  syntax:
    content: public static ServiceRemotingMessageHeaders deserialize(byte[] buffer)
    parameters:
    - id: buffer
      type: ccd9418d
      description: <p>buffer </p>
    return:
      type: microsoft.servicefabric.services.remoting.ServiceRemotingMessageHeaders
      description: <p>De-serialized headers </p>
  exceptions:
  - type: cbf33bbe
    description: <p>throws IOException </p>
  - type: 7c9afd52
    description: <p>throws ClassNotFoundException </p>
- uid: microsoft.servicefabric.services.remoting.ServiceRemotingMessageHeaders.getCallContext()
  id: getCallContext()
  parent: microsoft.servicefabric.services.remoting.ServiceRemotingMessageHeaders
  href: microsoft.servicefabric.services.remoting.ServiceRemotingMessageHeaders.yml
  langs:
  - java
  name: getCallContext()
  nameWithType: ServiceRemotingMessageHeaders.getCallContext()
  fullName: microsoft.servicefabric.services.remoting.ServiceRemotingMessageHeaders.getCallContext()
  overload: microsoft.servicefabric.services.remoting.ServiceRemotingMessageHeaders.getCallContext*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/remoting/ServiceRemotingMessageHeaders.java
    startLine: 86
  package: microsoft.servicefabric.services.remoting
  syntax:
    content: public String getCallContext()
    return:
      type: "26831127"
- uid: microsoft.servicefabric.services.remoting.ServiceRemotingMessageHeaders.getCancellationHeaderName()
  id: getCancellationHeaderName()
  parent: microsoft.servicefabric.services.remoting.ServiceRemotingMessageHeaders
  href: microsoft.servicefabric.services.remoting.ServiceRemotingMessageHeaders.yml
  langs:
  - java
  name: getCancellationHeaderName()
  nameWithType: ServiceRemotingMessageHeaders.getCancellationHeaderName()
  fullName: microsoft.servicefabric.services.remoting.ServiceRemotingMessageHeaders.getCancellationHeaderName()
  overload: microsoft.servicefabric.services.remoting.ServiceRemotingMessageHeaders.getCancellationHeaderName*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/remoting/ServiceRemotingMessageHeaders.java
    startLine: 30
  package: microsoft.servicefabric.services.remoting
  syntax:
    content: public static String getCancellationHeaderName()
    return:
      type: "26831127"
- uid: microsoft.servicefabric.services.remoting.ServiceRemotingMessageHeaders.getHeaders()
  id: getHeaders()
  parent: microsoft.servicefabric.services.remoting.ServiceRemotingMessageHeaders
  href: microsoft.servicefabric.services.remoting.ServiceRemotingMessageHeaders.yml
  langs:
  - java
  name: getHeaders()
  nameWithType: ServiceRemotingMessageHeaders.getHeaders()
  fullName: microsoft.servicefabric.services.remoting.ServiceRemotingMessageHeaders.getHeaders()
  overload: microsoft.servicefabric.services.remoting.ServiceRemotingMessageHeaders.getHeaders*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/remoting/ServiceRemotingMessageHeaders.java
    startLine: 34
  package: microsoft.servicefabric.services.remoting
  syntax:
    content: public HashMap<String, byte[]> getHeaders()
    return:
      type: a28c71e6
- uid: microsoft.servicefabric.services.remoting.ServiceRemotingMessageHeaders.getHeaderValue(String)
  id: getHeaderValue(String)
  parent: microsoft.servicefabric.services.remoting.ServiceRemotingMessageHeaders
  href: microsoft.servicefabric.services.remoting.ServiceRemotingMessageHeaders.yml
  langs:
  - java
  name: getHeaderValue(String headerName)
  nameWithType: ServiceRemotingMessageHeaders.getHeaderValue(String headerName)
  fullName: microsoft.servicefabric.services.remoting.ServiceRemotingMessageHeaders.getHeaderValue(String headerName)
  overload: microsoft.servicefabric.services.remoting.ServiceRemotingMessageHeaders.getHeaderValue*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/remoting/ServiceRemotingMessageHeaders.java
    startLine: 126
  package: microsoft.servicefabric.services.remoting
  summary: "<p>Gets the header with the specified name</p>\r\n<p></p>"
  syntax:
    content: public byte [] getHeaderValue(String headerName)
    parameters:
    - id: headerName
      type: "26831127"
      description: <p>Header Name </p>
    return:
      type: ccd9418d
      description: <p>Header value </p>
- uid: microsoft.servicefabric.services.remoting.ServiceRemotingMessageHeaders.getInterfaceId()
  id: getInterfaceId()
  parent: microsoft.servicefabric.services.remoting.ServiceRemotingMessageHeaders
  href: microsoft.servicefabric.services.remoting.ServiceRemotingMessageHeaders.yml
  langs:
  - java
  name: getInterfaceId()
  nameWithType: ServiceRemotingMessageHeaders.getInterfaceId()
  fullName: microsoft.servicefabric.services.remoting.ServiceRemotingMessageHeaders.getInterfaceId()
  overload: microsoft.servicefabric.services.remoting.ServiceRemotingMessageHeaders.getInterfaceId*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/remoting/ServiceRemotingMessageHeaders.java
    startLine: 72
  package: microsoft.servicefabric.services.remoting
  summary: "<p>The interface id of the remote interface.</p>\r\n<p></p>"
  syntax:
    content: public int getInterfaceId()
    return:
      type: f75371fa
      description: <p>Interface id </p>
- uid: microsoft.servicefabric.services.remoting.ServiceRemotingMessageHeaders.getMethodId()
  id: getMethodId()
  parent: microsoft.servicefabric.services.remoting.ServiceRemotingMessageHeaders
  href: microsoft.servicefabric.services.remoting.ServiceRemotingMessageHeaders.yml
  langs:
  - java
  name: getMethodId()
  nameWithType: ServiceRemotingMessageHeaders.getMethodId()
  fullName: microsoft.servicefabric.services.remoting.ServiceRemotingMessageHeaders.getMethodId()
  overload: microsoft.servicefabric.services.remoting.ServiceRemotingMessageHeaders.getMethodId*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/remoting/ServiceRemotingMessageHeaders.java
    startLine: 53
  package: microsoft.servicefabric.services.remoting
  summary: "<p>The methodId of the remote method</p>\r\n<p></p>"
  syntax:
    content: public int getMethodId()
    return:
      type: f75371fa
      description: <p>Method id </p>
- uid: microsoft.servicefabric.services.remoting.ServiceRemotingMessageHeaders.serialize(ServiceRemotingMessageHeaders)
  id: serialize(ServiceRemotingMessageHeaders)
  parent: microsoft.servicefabric.services.remoting.ServiceRemotingMessageHeaders
  href: microsoft.servicefabric.services.remoting.ServiceRemotingMessageHeaders.yml
  langs:
  - java
  name: serialize(ServiceRemotingMessageHeaders msg)
  nameWithType: ServiceRemotingMessageHeaders.serialize(ServiceRemotingMessageHeaders msg)
  fullName: microsoft.servicefabric.services.remoting.ServiceRemotingMessageHeaders.serialize(ServiceRemotingMessageHeaders msg)
  overload: microsoft.servicefabric.services.remoting.ServiceRemotingMessageHeaders.serialize*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/remoting/ServiceRemotingMessageHeaders.java
    startLine: 143
  package: microsoft.servicefabric.services.remoting
  summary: "<p>Serializes the headers to a byte array</p>\r\n<p></p>"
  syntax:
    content: public static byte [] serialize(ServiceRemotingMessageHeaders msg)
    parameters:
    - id: msg
      type: microsoft.servicefabric.services.remoting.ServiceRemotingMessageHeaders
      description: <p>Headers </p>
    return:
      type: ccd9418d
      description: <p>The serialized byte array </p>
  exceptions:
  - type: cbf33bbe
    description: <p>Throws IOException. </p>
- uid: microsoft.servicefabric.services.remoting.ServiceRemotingMessageHeaders.ServiceRemotingMessageHeaders()
  id: ServiceRemotingMessageHeaders()
  parent: microsoft.servicefabric.services.remoting.ServiceRemotingMessageHeaders
  href: microsoft.servicefabric.services.remoting.ServiceRemotingMessageHeaders.yml
  langs:
  - java
  name: ServiceRemotingMessageHeaders()
  nameWithType: ServiceRemotingMessageHeaders.ServiceRemotingMessageHeaders()
  fullName: microsoft.servicefabric.services.remoting.ServiceRemotingMessageHeaders.ServiceRemotingMessageHeaders()
  overload: microsoft.servicefabric.services.remoting.ServiceRemotingMessageHeaders.ServiceRemotingMessageHeaders*
  type: Constructor
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/remoting/ServiceRemotingMessageHeaders.java
    startLine: 94
  package: microsoft.servicefabric.services.remoting
  syntax:
    content: public ServiceRemotingMessageHeaders()
- uid: microsoft.servicefabric.services.remoting.ServiceRemotingMessageHeaders.setCallContext(String)
  id: setCallContext(String)
  parent: microsoft.servicefabric.services.remoting.ServiceRemotingMessageHeaders
  href: microsoft.servicefabric.services.remoting.ServiceRemotingMessageHeaders.yml
  langs:
  - java
  name: setCallContext(String callContext)
  nameWithType: ServiceRemotingMessageHeaders.setCallContext(String callContext)
  fullName: microsoft.servicefabric.services.remoting.ServiceRemotingMessageHeaders.setCallContext(String callContext)
  overload: microsoft.servicefabric.services.remoting.ServiceRemotingMessageHeaders.setCallContext*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/remoting/ServiceRemotingMessageHeaders.java
    startLine: 90
  package: microsoft.servicefabric.services.remoting
  syntax:
    content: public void setCallContext(String callContext)
    parameters:
    - id: callContext
      type: "26831127"
- uid: microsoft.servicefabric.services.remoting.ServiceRemotingMessageHeaders.setHeaders(HashMap<String, byte[]>)
  id: setHeaders(HashMap<String, byte[]>)
  parent: microsoft.servicefabric.services.remoting.ServiceRemotingMessageHeaders
  href: microsoft.servicefabric.services.remoting.ServiceRemotingMessageHeaders.yml
  langs:
  - java
  name: setHeaders(HashMap<String, byte[]> headers)
  nameWithType: ServiceRemotingMessageHeaders.setHeaders(HashMap<String, byte[]> headers)
  fullName: microsoft.servicefabric.services.remoting.ServiceRemotingMessageHeaders.setHeaders(HashMap<String, byte[]> headers)
  overload: microsoft.servicefabric.services.remoting.ServiceRemotingMessageHeaders.setHeaders*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/remoting/ServiceRemotingMessageHeaders.java
    startLine: 44
  package: microsoft.servicefabric.services.remoting
  summary: "<p>Adds a new header with the specified name and value.</p>\r\n<p></p>"
  syntax:
    content: public void setHeaders(HashMap<String, byte[]> headers)
    parameters:
    - id: headers
      type: a28c71e6
      description: <p>Header Name </p>
- uid: microsoft.servicefabric.services.remoting.ServiceRemotingMessageHeaders.setInterfaceId(int)
  id: setInterfaceId(int)
  parent: microsoft.servicefabric.services.remoting.ServiceRemotingMessageHeaders
  href: microsoft.servicefabric.services.remoting.ServiceRemotingMessageHeaders.yml
  langs:
  - java
  name: setInterfaceId(int interfaceId)
  nameWithType: ServiceRemotingMessageHeaders.setInterfaceId(int interfaceId)
  fullName: microsoft.servicefabric.services.remoting.ServiceRemotingMessageHeaders.setInterfaceId(int interfaceId)
  overload: microsoft.servicefabric.services.remoting.ServiceRemotingMessageHeaders.setInterfaceId*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/remoting/ServiceRemotingMessageHeaders.java
    startLine: 82
  package: microsoft.servicefabric.services.remoting
  summary: "<p>The interface id of the remote interface.</p>\r\n<p></p>"
  syntax:
    content: public void setInterfaceId(int interfaceId)
    parameters:
    - id: interfaceId
      type: f75371fa
      description: <p>interface Id </p>
- uid: microsoft.servicefabric.services.remoting.ServiceRemotingMessageHeaders.setMethodId(int)
  id: setMethodId(int)
  parent: microsoft.servicefabric.services.remoting.ServiceRemotingMessageHeaders
  href: microsoft.servicefabric.services.remoting.ServiceRemotingMessageHeaders.yml
  langs:
  - java
  name: setMethodId(int methodId)
  nameWithType: ServiceRemotingMessageHeaders.setMethodId(int methodId)
  fullName: microsoft.servicefabric.services.remoting.ServiceRemotingMessageHeaders.setMethodId(int methodId)
  overload: microsoft.servicefabric.services.remoting.ServiceRemotingMessageHeaders.setMethodId*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/remoting/ServiceRemotingMessageHeaders.java
    startLine: 63
  package: microsoft.servicefabric.services.remoting
  summary: "<p>The methodId of the remote method</p>\r\n<p></p>"
  syntax:
    content: public void setMethodId(int methodId)
    parameters:
    - id: methodId
      type: f75371fa
      description: <p>method Id </p>
references:
- uid: "26831127"
  spec.java:
  - name: String
    fullName: String
- uid: microsoft.servicefabric.services.remoting.ServiceRemotingMessageHeaders.getCancellationHeaderName*
  name: getCancellationHeaderName
  nameWithType: ServiceRemotingMessageHeaders.getCancellationHeaderName
  fullName: microsoft.servicefabric.services.remoting.ServiceRemotingMessageHeaders.getCancellationHeaderName
  package: microsoft.servicefabric.services.remoting
- uid: cbf33bbe
  spec.java:
  - name: IOException
    fullName: IOException
- uid: ccd9418d
  spec.java:
  - name: byte []
    fullName: byte []
- uid: microsoft.servicefabric.services.remoting.ServiceRemotingMessageHeaders.serialize*
  name: serialize
  nameWithType: ServiceRemotingMessageHeaders.serialize
  fullName: microsoft.servicefabric.services.remoting.ServiceRemotingMessageHeaders.serialize
  package: microsoft.servicefabric.services.remoting
- uid: 7c9afd52
  spec.java:
  - name: ClassNotFoundException
    fullName: ClassNotFoundException
- uid: microsoft.servicefabric.services.remoting.ServiceRemotingMessageHeaders.deserialize*
  name: deserialize
  nameWithType: ServiceRemotingMessageHeaders.deserialize
  fullName: microsoft.servicefabric.services.remoting.ServiceRemotingMessageHeaders.deserialize
  package: microsoft.servicefabric.services.remoting
- uid: a28c71e6
  spec.java:
  - name: HashMap<String, byte[]>
    fullName: HashMap<String, byte[]>
- uid: microsoft.servicefabric.services.remoting.ServiceRemotingMessageHeaders.getHeaders*
  name: getHeaders
  nameWithType: ServiceRemotingMessageHeaders.getHeaders
  fullName: microsoft.servicefabric.services.remoting.ServiceRemotingMessageHeaders.getHeaders
  package: microsoft.servicefabric.services.remoting
- uid: microsoft.servicefabric.services.remoting.ServiceRemotingMessageHeaders.setHeaders*
  name: setHeaders
  nameWithType: ServiceRemotingMessageHeaders.setHeaders
  fullName: microsoft.servicefabric.services.remoting.ServiceRemotingMessageHeaders.setHeaders
  package: microsoft.servicefabric.services.remoting
- uid: f75371fa
  spec.java:
  - name: int
    fullName: int
- uid: microsoft.servicefabric.services.remoting.ServiceRemotingMessageHeaders.getMethodId*
  name: getMethodId
  nameWithType: ServiceRemotingMessageHeaders.getMethodId
  fullName: microsoft.servicefabric.services.remoting.ServiceRemotingMessageHeaders.getMethodId
  package: microsoft.servicefabric.services.remoting
- uid: microsoft.servicefabric.services.remoting.ServiceRemotingMessageHeaders.setMethodId*
  name: setMethodId
  nameWithType: ServiceRemotingMessageHeaders.setMethodId
  fullName: microsoft.servicefabric.services.remoting.ServiceRemotingMessageHeaders.setMethodId
  package: microsoft.servicefabric.services.remoting
- uid: microsoft.servicefabric.services.remoting.ServiceRemotingMessageHeaders.getInterfaceId*
  name: getInterfaceId
  nameWithType: ServiceRemotingMessageHeaders.getInterfaceId
  fullName: microsoft.servicefabric.services.remoting.ServiceRemotingMessageHeaders.getInterfaceId
  package: microsoft.servicefabric.services.remoting
- uid: microsoft.servicefabric.services.remoting.ServiceRemotingMessageHeaders.setInterfaceId*
  name: setInterfaceId
  nameWithType: ServiceRemotingMessageHeaders.setInterfaceId
  fullName: microsoft.servicefabric.services.remoting.ServiceRemotingMessageHeaders.setInterfaceId
  package: microsoft.servicefabric.services.remoting
- uid: microsoft.servicefabric.services.remoting.ServiceRemotingMessageHeaders.getCallContext*
  name: getCallContext
  nameWithType: ServiceRemotingMessageHeaders.getCallContext
  fullName: microsoft.servicefabric.services.remoting.ServiceRemotingMessageHeaders.getCallContext
  package: microsoft.servicefabric.services.remoting
- uid: microsoft.servicefabric.services.remoting.ServiceRemotingMessageHeaders.setCallContext*
  name: setCallContext
  nameWithType: ServiceRemotingMessageHeaders.setCallContext
  fullName: microsoft.servicefabric.services.remoting.ServiceRemotingMessageHeaders.setCallContext
  package: microsoft.servicefabric.services.remoting
- uid: microsoft.servicefabric.services.remoting.ServiceRemotingMessageHeaders.ServiceRemotingMessageHeaders*
  name: ServiceRemotingMessageHeaders
  nameWithType: ServiceRemotingMessageHeaders.ServiceRemotingMessageHeaders
  fullName: microsoft.servicefabric.services.remoting.ServiceRemotingMessageHeaders.ServiceRemotingMessageHeaders
  package: microsoft.servicefabric.services.remoting
- uid: 34616db9
  spec.java:
  - name: FabricElementAlreadyExistsException
    fullName: FabricElementAlreadyExistsException
- uid: microsoft.servicefabric.services.remoting.ServiceRemotingMessageHeaders.addHeader*
  name: addHeader
  nameWithType: ServiceRemotingMessageHeaders.addHeader
  fullName: microsoft.servicefabric.services.remoting.ServiceRemotingMessageHeaders.addHeader
  package: microsoft.servicefabric.services.remoting
- uid: microsoft.servicefabric.services.remoting.ServiceRemotingMessageHeaders.getHeaderValue*
  name: getHeaderValue
  nameWithType: ServiceRemotingMessageHeaders.getHeaderValue
  fullName: microsoft.servicefabric.services.remoting.ServiceRemotingMessageHeaders.getHeaderValue
  package: microsoft.servicefabric.services.remoting
- uid: microsoft.servicefabric.services.remoting.ServiceRemotingMessageHeaders
  parent: microsoft.servicefabric.services.remoting
  href: microsoft.servicefabric.services.remoting.ServiceRemotingMessageHeaders.yml
  name: ServiceRemotingMessageHeaders
  nameWithType: ServiceRemotingMessageHeaders
  fullName: microsoft.servicefabric.services.remoting.ServiceRemotingMessageHeaders
  type: Class
  summary: "<p>Specifies the headers that are sent along with a ServiceRemoting message. </p>"
  syntax: *o1
- uid: system.fabric.exception.FabricElementAlreadyExistsException
  parent: system.fabric.exception
  href: system.fabric.exception.FabricElementAlreadyExistsException.yml
  name: FabricElementAlreadyExistsException
  nameWithType: FabricElementAlreadyExistsException
  fullName: system.fabric.exception.FabricElementAlreadyExistsException
  type: Class
  syntax:
    content: public class FabricElementAlreadyExistsException extends FabricException
