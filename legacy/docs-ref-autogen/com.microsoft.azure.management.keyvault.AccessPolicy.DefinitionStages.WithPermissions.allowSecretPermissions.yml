### YamlMime:JavaMember
nameWithType: AccessPolicy.DefinitionStages.WithPermissions<ParentT>.allowSecretPermissions
type: method
members:
- fullName: com.microsoft.azure.management.keyvault.AccessPolicy.DefinitionStages.WithPermissions<ParentT>.allowSecretPermissions(List<SecretPermissions> permissions)
  name: allowSecretPermissions(List<SecretPermissions> permissions)
  nameWithType: AccessPolicy.DefinitionStages.WithPermissions<ParentT>.allowSecretPermissions(List<SecretPermissions> permissions)
  parameters:
  - description: <p>the list of permissions allowed </p>
    name: permissions
    type: List&lt;<xref href="com.microsoft.azure.management.keyvault.SecretPermissions?alt=com.microsoft.azure.management.keyvault.SecretPermissions&text=SecretPermissions" data-throw-if-not-resolved="False"/>&gt;
  returns:
    description: <p>the next stage of access policy definition </p>
    type: <xref href="com.microsoft.azure.management.keyvault.AccessPolicy.DefinitionStages.WithAttach?alt=com.microsoft.azure.management.keyvault.AccessPolicy.DefinitionStages.WithAttach&text=AccessPolicy.DefinitionStages.WithAttach" data-throw-if-not-resolved="False"/>&lt;ParentT&gt;
  summary: >-
    <p>Allow a list of permissions for the AD identity to access secrets.</p>

    <p></p>
  syntax: public WithAttach<ParentT> allowSecretPermissions(List<SecretPermissions> permissions)
  uid: com.microsoft.azure.management.keyvault.AccessPolicy.DefinitionStages.WithPermissions.allowSecretPermissions(List<SecretPermissions>)
- fullName: com.microsoft.azure.management.keyvault.AccessPolicy.DefinitionStages.WithPermissions<ParentT>.allowSecretPermissions(SecretPermissions... permissions)
  name: allowSecretPermissions(SecretPermissions... permissions)
  nameWithType: AccessPolicy.DefinitionStages.WithPermissions<ParentT>.allowSecretPermissions(SecretPermissions... permissions)
  parameters:
  - description: <p>the list of permissions allowed </p>
    name: permissions
    type: <xref href="SecretPermissions...?alt=SecretPermissions...&text=SecretPermissions..." data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the next stage of access policy definition </p>
    type: <xref href="com.microsoft.azure.management.keyvault.AccessPolicy.DefinitionStages.WithAttach?alt=com.microsoft.azure.management.keyvault.AccessPolicy.DefinitionStages.WithAttach&text=AccessPolicy.DefinitionStages.WithAttach" data-throw-if-not-resolved="False"/>&lt;ParentT&gt;
  summary: >-
    <p>Allow a list of permissions for the AD identity to access secrets.</p>

    <p></p>
  syntax: public WithAttach<ParentT> allowSecretPermissions(SecretPermissions... permissions)
  uid: com.microsoft.azure.management.keyvault.AccessPolicy.DefinitionStages.WithPermissions.allowSecretPermissions(SecretPermissions...)
uid: com.microsoft.azure.management.keyvault.AccessPolicy.DefinitionStages.WithPermissions.allowSecretPermissions*
fullName: com.microsoft.azure.management.keyvault.AccessPolicy.DefinitionStages.WithPermissions<ParentT>.allowSecretPermissions(List<SecretPermissions> permissions)
name: allowSecretPermissions(List<SecretPermissions> permissions)
package: com.microsoft.azure.management.keyvault
metadata: {}
