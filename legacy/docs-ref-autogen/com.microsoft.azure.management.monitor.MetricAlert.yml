### YamlMime:JavaType
inheritedMembers:
- com.microsoft.azure.management.resources.fluentcore.arm.models.HasId.id()
- com.microsoft.azure.management.resources.fluentcore.model.HasInner.inner()
- com.microsoft.azure.management.resources.fluentcore.model.Indexable.key()
- com.microsoft.azure.management.resources.fluentcore.arm.models.HasManager.manager()
- com.microsoft.azure.management.resources.fluentcore.arm.models.HasName.name()
- com.microsoft.azure.management.resources.fluentcore.model.Refreshable.refresh()
- com.microsoft.azure.management.resources.fluentcore.model.Refreshable.refreshAsync()
- com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.region()
- com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.regionName()
- com.microsoft.azure.management.resources.fluentcore.arm.models.HasResourceGroup.resourceGroupName()
- com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.tags()
- com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.type()
- com.microsoft.azure.management.resources.fluentcore.model.Updatable.update()
methods:
- fullName: com.microsoft.azure.management.monitor.MetricAlert.actionGroupIds()
  name: actionGroupIds()
  nameWithType: MetricAlert.actionGroupIds()
  returns:
    description: <p>the actions value </p>
    type: <xref href="Collection%3CString%3E?alt=Collection%3CString%3E&text=Collection%3CString%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the array of actions that are performed when the alert rule becomes active, and when an alert condition is resolved.</p>

    <p></p>
  syntax: public Collection<String> actionGroupIds()
  uid: com.microsoft.azure.management.monitor.MetricAlert.actionGroupIds()
- fullName: com.microsoft.azure.management.monitor.MetricAlert.alertCriterias()
  name: alertCriterias()
  nameWithType: MetricAlert.alertCriterias()
  returns:
    description: <p>metric alert criterias, indexed by name </p>
    type: Map&lt;String, <xref href="com.microsoft.azure.management.monitor.MetricAlertCondition?alt=com.microsoft.azure.management.monitor.MetricAlertCondition&text=MetricAlertCondition" data-throw-if-not-resolved="False"/>&gt;
  syntax: public Map<String, MetricAlertCondition> alertCriterias()
  uid: com.microsoft.azure.management.monitor.MetricAlert.alertCriterias()
- fullName: com.microsoft.azure.management.monitor.MetricAlert.autoMitigate()
  name: autoMitigate()
  nameWithType: MetricAlert.autoMitigate()
  returns:
    description: <p>the autoMitigate value </p>
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the flag that indicates whether the alert should be auto resolved or not.</p>

    <p></p>
  syntax: public boolean autoMitigate()
  uid: com.microsoft.azure.management.monitor.MetricAlert.autoMitigate()
- fullName: com.microsoft.azure.management.monitor.MetricAlert.description()
  name: description()
  nameWithType: MetricAlert.description()
  returns:
    description: <p>the description value </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the description of the metric alert that will be included in the alert email.</p>

    <p></p>
  syntax: public String description()
  uid: com.microsoft.azure.management.monitor.MetricAlert.description()
- fullName: com.microsoft.azure.management.monitor.MetricAlert.dynamicAlertCriterias()
  name: dynamicAlertCriterias()
  nameWithType: MetricAlert.dynamicAlertCriterias()
  returns:
    description: <p>metric dynamic alert criterias, indexed by name </p>
    type: Map&lt;String, <xref href="com.microsoft.azure.management.monitor.MetricDynamicAlertCondition?alt=com.microsoft.azure.management.monitor.MetricDynamicAlertCondition&text=MetricDynamicAlertCondition" data-throw-if-not-resolved="False"/>&gt;
  syntax: public Map<String, MetricDynamicAlertCondition> dynamicAlertCriterias()
  uid: com.microsoft.azure.management.monitor.MetricAlert.dynamicAlertCriterias()
- fullName: com.microsoft.azure.management.monitor.MetricAlert.enabled()
  name: enabled()
  nameWithType: MetricAlert.enabled()
  returns:
    description: <p>the enabled value </p>
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the flag that indicates whether the metric alert is enabled.</p>

    <p></p>
  syntax: public boolean enabled()
  uid: com.microsoft.azure.management.monitor.MetricAlert.enabled()
- fullName: com.microsoft.azure.management.monitor.MetricAlert.evaluationFrequency()
  name: evaluationFrequency()
  nameWithType: MetricAlert.evaluationFrequency()
  returns:
    description: <p>the evaluationFrequency value </p>
    type: <xref href="Period?alt=Period&text=Period" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get how often the metric alert is evaluated represented in ISO 8601 duration format.</p>

    <p></p>
  syntax: public Period evaluationFrequency()
  uid: com.microsoft.azure.management.monitor.MetricAlert.evaluationFrequency()
- fullName: com.microsoft.azure.management.monitor.MetricAlert.lastUpdatedTime()
  name: lastUpdatedTime()
  nameWithType: MetricAlert.lastUpdatedTime()
  returns:
    description: <p>the lastUpdatedTime value </p>
    type: <xref href="DateTime?alt=DateTime&text=DateTime" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get last time the rule was updated in ISO8601 format.</p>

    <p></p>
  syntax: public DateTime lastUpdatedTime()
  uid: com.microsoft.azure.management.monitor.MetricAlert.lastUpdatedTime()
- fullName: com.microsoft.azure.management.monitor.MetricAlert.scopes()
  name: scopes()
  nameWithType: MetricAlert.scopes()
  returns:
    description: <p>the scopes value </p>
    type: <xref href="Collection%3CString%3E?alt=Collection%3CString%3E&text=Collection%3CString%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the list of resource id's that this metric alert is scoped to.</p>

    <p></p>
  syntax: public Collection<String> scopes()
  uid: com.microsoft.azure.management.monitor.MetricAlert.scopes()
- fullName: com.microsoft.azure.management.monitor.MetricAlert.severity()
  name: severity()
  nameWithType: MetricAlert.severity()
  returns:
    description: <p>the severity value </p>
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get alert severity {0, 1, 2, 3, 4}.</p>

    <p></p>
  syntax: public int severity()
  uid: com.microsoft.azure.management.monitor.MetricAlert.severity()
- fullName: com.microsoft.azure.management.monitor.MetricAlert.windowSize()
  name: windowSize()
  nameWithType: MetricAlert.windowSize()
  returns:
    description: <p>the windowSize value </p>
    type: <xref href="Period?alt=Period&text=Period" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the period of time (in ISO 8601 duration format) that is used to monitor alert activity based on the threshold.</p>

    <p></p>
  syntax: public Period windowSize()
  uid: com.microsoft.azure.management.monitor.MetricAlert.windowSize()
nameWithType: MetricAlert
syntax: public interface MetricAlert extends GroupableResource<MonitorManager, MetricAlertResourceInner>,Refreshable<MetricAlert>,Updatable<MetricAlert.Update>
type: interface
uid: com.microsoft.azure.management.monitor.MetricAlert
fullName: com.microsoft.azure.management.monitor.MetricAlert
name: MetricAlert
package: com.microsoft.azure.management.monitor
summary: <p>An immutable client-side representation of a Metric Alert. </p>
metadata: {}
