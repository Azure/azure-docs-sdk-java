### YamlMime:JavaType
inheritedMembers:
- com.microsoft.azure.management.resources.fluentcore.arm.models.HasId.id()
- com.microsoft.azure.management.resources.fluentcore.model.HasInner.inner()
- com.microsoft.azure.management.resources.fluentcore.model.Indexable.key()
- com.microsoft.azure.management.resources.fluentcore.arm.models.HasManager.manager()
- com.microsoft.azure.management.resources.fluentcore.arm.models.HasName.name()
- com.microsoft.azure.management.resources.fluentcore.model.Refreshable.refresh()
- com.microsoft.azure.management.resources.fluentcore.model.Refreshable.refreshAsync()
- com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.region()
- com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.regionName()
- com.microsoft.azure.management.resources.fluentcore.arm.models.HasResourceGroup.resourceGroupName()
- com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.tags()
- com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.type()
- com.microsoft.azure.management.resources.fluentcore.model.Updatable.update()
methods:
- fullName: com.microsoft.azure.management.containerregistry.Registry.adminUserEnabled()
  name: adminUserEnabled()
  nameWithType: Registry.adminUserEnabled()
  returns:
    description: <p>the value that indicates whether the admin user is enabled </p>
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False"/>
  syntax: public boolean adminUserEnabled()
  uid: com.microsoft.azure.management.containerregistry.Registry.adminUserEnabled()
- fullName: com.microsoft.azure.management.containerregistry.Registry.creationDate()
  name: creationDate()
  nameWithType: Registry.creationDate()
  returns:
    description: <p>the creation date of the container registry in ISO8601 format </p>
    type: <xref href="DateTime?alt=DateTime&text=DateTime" data-throw-if-not-resolved="False"/>
  syntax: public DateTime creationDate()
  uid: com.microsoft.azure.management.containerregistry.Registry.creationDate()
- fullName: com.microsoft.azure.management.containerregistry.Registry.getBuildSourceUploadUrl()
  name: getBuildSourceUploadUrl()
  nameWithType: Registry.getBuildSourceUploadUrl()
  returns:
    description: <p>returns the upload location for the user to be able to upload the source. </p>
    type: <xref href="com.microsoft.azure.management.containerregistry.SourceUploadDefinition?alt=com.microsoft.azure.management.containerregistry.SourceUploadDefinition&text=SourceUploadDefinition" data-throw-if-not-resolved="False"/>
  syntax: public SourceUploadDefinition getBuildSourceUploadUrl()
  uid: com.microsoft.azure.management.containerregistry.Registry.getBuildSourceUploadUrl()
- fullName: com.microsoft.azure.management.containerregistry.Registry.getBuildSourceUploadUrlAsync()
  name: getBuildSourceUploadUrlAsync()
  nameWithType: Registry.getBuildSourceUploadUrlAsync()
  returns:
    description: <p>a representation of the future computation of this call </p>
    type: Observable&lt;<xref href="com.microsoft.azure.management.containerregistry.SourceUploadDefinition?alt=com.microsoft.azure.management.containerregistry.SourceUploadDefinition&text=SourceUploadDefinition" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Gets the upload location for the user to be able to upload the source asynchronously.</p>

    <p></p>
  syntax: public Observable<SourceUploadDefinition> getBuildSourceUploadUrlAsync()
  uid: com.microsoft.azure.management.containerregistry.Registry.getBuildSourceUploadUrlAsync()
- fullName: com.microsoft.azure.management.containerregistry.Registry.getCredentials()
  name: getCredentials()
  nameWithType: Registry.getCredentials()
  returns:
    description: <p>the login credentials for the specified container registry </p>
    type: <xref href="com.microsoft.azure.management.containerregistry.RegistryCredentials?alt=com.microsoft.azure.management.containerregistry.RegistryCredentials&text=RegistryCredentials" data-throw-if-not-resolved="False"/>
  syntax: public RegistryCredentials getCredentials()
  uid: com.microsoft.azure.management.containerregistry.Registry.getCredentials()
- fullName: com.microsoft.azure.management.containerregistry.Registry.getCredentialsAsync()
  name: getCredentialsAsync()
  nameWithType: Registry.getCredentialsAsync()
  returns:
    description: <p>a representation of the future computation of this call </p>
    type: Observable&lt;<xref href="com.microsoft.azure.management.containerregistry.RegistryCredentials?alt=com.microsoft.azure.management.containerregistry.RegistryCredentials&text=RegistryCredentials" data-throw-if-not-resolved="False"/>&gt;
  syntax: public Observable<RegistryCredentials> getCredentialsAsync()
  uid: com.microsoft.azure.management.containerregistry.Registry.getCredentialsAsync()
- fullName: com.microsoft.azure.management.containerregistry.Registry.listQuotaUsages()
  name: listQuotaUsages()
  nameWithType: Registry.listQuotaUsages()
  returns:
    description: <p>the list of container registry's quota usages </p>
    type: Collection&lt;<xref href="com.microsoft.azure.management.containerregistry.RegistryUsage?alt=com.microsoft.azure.management.containerregistry.RegistryUsage&text=RegistryUsage" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Lists the quota usages for the specified container registry.</p>

    <p></p>
  syntax: public Collection<RegistryUsage> listQuotaUsages()
  uid: com.microsoft.azure.management.containerregistry.Registry.listQuotaUsages()
- fullName: com.microsoft.azure.management.containerregistry.Registry.listQuotaUsagesAsync()
  name: listQuotaUsagesAsync()
  nameWithType: Registry.listQuotaUsagesAsync()
  returns:
    description: <p>a representation of the future computation of this call </p>
    type: Observable&lt;<xref href="com.microsoft.azure.management.containerregistry.RegistryUsage?alt=com.microsoft.azure.management.containerregistry.RegistryUsage&text=RegistryUsage" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Lists the quota usages for the specified container registry.</p>

    <p></p>
  syntax: public Observable<RegistryUsage> listQuotaUsagesAsync()
  uid: com.microsoft.azure.management.containerregistry.Registry.listQuotaUsagesAsync()
- fullName: com.microsoft.azure.management.containerregistry.Registry.loginServerUrl()
  name: loginServerUrl()
  nameWithType: Registry.loginServerUrl()
  returns:
    description: <p>the URL that can be used to log into the container registry </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  syntax: public String loginServerUrl()
  uid: com.microsoft.azure.management.containerregistry.Registry.loginServerUrl()
- fullName: com.microsoft.azure.management.containerregistry.Registry.regenerateCredential(AccessKeyType accessKeyType)
  name: regenerateCredential(AccessKeyType accessKeyType)
  nameWithType: Registry.regenerateCredential(AccessKeyType accessKeyType)
  parameters:
  - description: <p>the admin user access key name to regenerate the value for </p>
    name: accessKeyType
    type: <xref href="com.microsoft.azure.management.containerregistry.AccessKeyType?alt=com.microsoft.azure.management.containerregistry.AccessKeyType&text=AccessKeyType" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the result of the regeneration </p>
    type: <xref href="com.microsoft.azure.management.containerregistry.RegistryCredentials?alt=com.microsoft.azure.management.containerregistry.RegistryCredentials&text=RegistryCredentials" data-throw-if-not-resolved="False"/>
  summary: <p>Regenerates one of the login credentials for the specified container registry. </p>
  syntax: public RegistryCredentials regenerateCredential(AccessKeyType accessKeyType)
  uid: com.microsoft.azure.management.containerregistry.Registry.regenerateCredential(AccessKeyType)
- fullName: com.microsoft.azure.management.containerregistry.Registry.regenerateCredentialAsync(AccessKeyType accessKeyType)
  name: regenerateCredentialAsync(AccessKeyType accessKeyType)
  nameWithType: Registry.regenerateCredentialAsync(AccessKeyType accessKeyType)
  parameters:
  - description: <p>the admin user access key name to regenerate the value for </p>
    name: accessKeyType
    type: <xref href="com.microsoft.azure.management.containerregistry.AccessKeyType?alt=com.microsoft.azure.management.containerregistry.AccessKeyType&text=AccessKeyType" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>a representation of the future computation of this call </p>
    type: Observable&lt;<xref href="com.microsoft.azure.management.containerregistry.RegistryCredentials?alt=com.microsoft.azure.management.containerregistry.RegistryCredentials&text=RegistryCredentials" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Regenerates one of the login credentials for the specified container registry.</p>

    <p></p>
  syntax: public Observable<RegistryCredentials> regenerateCredentialAsync(AccessKeyType accessKeyType)
  uid: com.microsoft.azure.management.containerregistry.Registry.regenerateCredentialAsync(AccessKeyType)
- fullName: com.microsoft.azure.management.containerregistry.Registry.scheduleRun()
  name: scheduleRun()
  nameWithType: Registry.scheduleRun()
  returns:
    description: <p>returns entry point to manage the builds such as queued quick builds and queued build tasks for the container registry. </p>
    type: <xref href="RegistryTaskRun.DefinitionStages.BlankFromRegistry?alt=RegistryTaskRun.DefinitionStages.BlankFromRegistry&text=RegistryTaskRun.DefinitionStages.BlankFromRegistry" data-throw-if-not-resolved="False"/>
  syntax: public RegistryTaskRun.DefinitionStages.BlankFromRegistry scheduleRun()
  uid: com.microsoft.azure.management.containerregistry.Registry.scheduleRun()
- fullName: com.microsoft.azure.management.containerregistry.Registry.sku()
  name: sku()
  nameWithType: Registry.sku()
  returns:
    description: <p>the SKU of the container registry. </p>
    type: <xref href="com.microsoft.azure.management.containerregistry.Sku?alt=com.microsoft.azure.management.containerregistry.Sku&text=Sku" data-throw-if-not-resolved="False"/>
  syntax: public Sku sku()
  uid: com.microsoft.azure.management.containerregistry.Registry.sku()
- fullName: com.microsoft.azure.management.containerregistry.Registry.storageAccountId()
  name: storageAccountId()
  nameWithType: Registry.storageAccountId()
  returns:
    description: <p>the ID of the storage account for the container registry; 'null' if container register SKU a managed tier </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  syntax: public String storageAccountId()
  uid: com.microsoft.azure.management.containerregistry.Registry.storageAccountId()
- fullName: com.microsoft.azure.management.containerregistry.Registry.storageAccountName()
  name: storageAccountName()
  nameWithType: Registry.storageAccountName()
  returns:
    description: <p>the name of the storage account for the container registry; 'null' if container register SKU a managed tier </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  syntax: public String storageAccountName()
  uid: com.microsoft.azure.management.containerregistry.Registry.storageAccountName()
- fullName: com.microsoft.azure.management.containerregistry.Registry.webhooks()
  name: webhooks()
  nameWithType: Registry.webhooks()
  returns:
    description: <p>returns entry point to manage container registry webhooks. </p>
    type: <xref href="com.microsoft.azure.management.containerregistry.WebhookOperations?alt=com.microsoft.azure.management.containerregistry.WebhookOperations&text=WebhookOperations" data-throw-if-not-resolved="False"/>
  syntax: public WebhookOperations webhooks()
  uid: com.microsoft.azure.management.containerregistry.Registry.webhooks()
nameWithType: Registry
syntax: public interface Registry extends GroupableResource<ContainerRegistryManager, RegistryInner>,Refreshable<Registry>,Updatable<Registry.Update>
type: interface
uid: com.microsoft.azure.management.containerregistry.Registry
fullName: com.microsoft.azure.management.containerregistry.Registry
name: Registry
package: com.microsoft.azure.management.containerregistry
summary: <p>An immutable client-side representation of an Azure registry. </p>
metadata: {}
