### YamlMime:JavaMember
nameWithType: CloudQueue.generateSharedAccessSignature
type: method
members:
- fullName: com.microsoft.azure.storage.queue.CloudQueue.generateSharedAccessSignature(final SharedAccessQueuePolicy policy, final String groupPolicyIdentifier)
  name: generateSharedAccessSignature(final SharedAccessQueuePolicy policy, final String groupPolicyIdentifier)
  nameWithType: CloudQueue.generateSharedAccessSignature(final SharedAccessQueuePolicy policy, final String groupPolicyIdentifier)
  parameters:
  - description: <p>The access policy for the shared access signature. </p>
    name: policy
    type: final <xref href="com.microsoft.azure.storage.queue.SharedAccessQueuePolicy?alt=com.microsoft.azure.storage.queue.SharedAccessQueuePolicy&text=SharedAccessQueuePolicy" data-throw-if-not-resolved="False"/>
  - description: <p>A queue-level access policy.</p>
    name: groupPolicyIdentifier
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="InvalidKeyException?alt=InvalidKeyException&text=InvalidKeyException" data-throw-if-not-resolved="False"/>
    description: <p>If an invalid key was passed. </p>
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>If an unexpected value is passed. </p>
  returns:
    description: <p>A shared access signature for the queue.</p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Returns a shared access signature for the queue.</p>

    <p></p>
  syntax: public String generateSharedAccessSignature(final SharedAccessQueuePolicy policy, final String groupPolicyIdentifier)
  uid: com.microsoft.azure.storage.queue.CloudQueue.generateSharedAccessSignature(final SharedAccessQueuePolicy,final String)
- fullName: com.microsoft.azure.storage.queue.CloudQueue.generateSharedAccessSignature(final SharedAccessQueuePolicy policy, final String groupPolicyIdentifier, final IPRange ipRange, final SharedAccessProtocols protocols)
  name: generateSharedAccessSignature(final SharedAccessQueuePolicy policy, final String groupPolicyIdentifier, final IPRange ipRange, final SharedAccessProtocols protocols)
  nameWithType: CloudQueue.generateSharedAccessSignature(final SharedAccessQueuePolicy policy, final String groupPolicyIdentifier, final IPRange ipRange, final SharedAccessProtocols protocols)
  parameters:
  - description: <p>The access policy for the shared access signature. </p>
    name: policy
    type: final <xref href="com.microsoft.azure.storage.queue.SharedAccessQueuePolicy?alt=com.microsoft.azure.storage.queue.SharedAccessQueuePolicy&text=SharedAccessQueuePolicy" data-throw-if-not-resolved="False"/>
  - description: <p>A queue-level access policy. </p>
    name: groupPolicyIdentifier
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>A <xref uid="com.microsoft.azure.storage.IPRange" data-throw-if-not-resolved="false" data-raw-source="IPRange"></xref> object containing the range of allowed IP addresses. </p>
    name: ipRange
    type: final <xref href="com.microsoft.azure.storage.IPRange?alt=com.microsoft.azure.storage.IPRange&text=IPRange" data-throw-if-not-resolved="False"/>
  - description: <p>A <xref uid="com.microsoft.azure.storage.SharedAccessProtocols" data-throw-if-not-resolved="false" data-raw-source="SharedAccessProtocols"></xref> representing the allowed Internet protocols.</p>
    name: protocols
    type: final <xref href="com.microsoft.azure.storage.SharedAccessProtocols?alt=com.microsoft.azure.storage.SharedAccessProtocols&text=SharedAccessProtocols" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="InvalidKeyException?alt=InvalidKeyException&text=InvalidKeyException" data-throw-if-not-resolved="False"/>
    description: <p>If an invalid key was passed. </p>
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>If an unexpected value is passed. </p>
  returns:
    description: <p>A shared access signature for the queue.</p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Returns a shared access signature for the queue.</p>

    <p></p>
  syntax: public String generateSharedAccessSignature(final SharedAccessQueuePolicy policy, final String groupPolicyIdentifier, final IPRange ipRange, final SharedAccessProtocols protocols)
  uid: com.microsoft.azure.storage.queue.CloudQueue.generateSharedAccessSignature(final SharedAccessQueuePolicy,final String,final IPRange,final SharedAccessProtocols)
uid: com.microsoft.azure.storage.queue.CloudQueue.generateSharedAccessSignature*
fullName: com.microsoft.azure.storage.queue.CloudQueue.generateSharedAccessSignature
name: generateSharedAccessSignature(final SharedAccessQueuePolicy policy, final String groupPolicyIdentifier)
package: com.microsoft.azure.storage.queue
metadata: {}
