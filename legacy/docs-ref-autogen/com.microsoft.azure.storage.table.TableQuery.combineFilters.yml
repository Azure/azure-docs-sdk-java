### YamlMime:JavaMember
nameWithType: TableQuery<T>.combineFilters
type: method
members:
- fullName: com.microsoft.azure.storage.table.TableQuery<T extends TableEntity>.combineFilters(String filterA, String operator, String filterB)
  name: combineFilters(String filterA, String operator, String filterB)
  nameWithType: TableQuery<T>.combineFilters(String filterA, String operator, String filterB)
  parameters:
  - description: <p>A <code>String</code> which specifies the first formatted filter condition. </p>
    name: filterA
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>A <code>String</code> which specifies <code>Operators.AND</code> or <code>Operators.OR</code>. </p>
    name: operator
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>A <code>String</code> which specifies the first formatted filter condition. </p>
    name: filterB
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>A <code>String</code> which represents the combined filter expression. </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Creates a filter condition using the specified logical operator on two filter conditions.</p>

    <p></p>
  syntax: public static String combineFilters(String filterA, String operator, String filterB)
  uid: com.microsoft.azure.storage.table.TableQuery.combineFilters(String,String,String)
uid: com.microsoft.azure.storage.table.TableQuery.combineFilters*
fullName: com.microsoft.azure.storage.table.TableQuery<T extends TableEntity>.combineFilters(String filterA, String operator, String filterB)
name: combineFilters(String filterA, String operator, String filterB)
package: com.microsoft.azure.storage.table
metadata: {}
