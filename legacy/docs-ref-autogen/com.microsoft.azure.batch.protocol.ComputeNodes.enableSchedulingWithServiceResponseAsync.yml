### YamlMime:JavaMember
nameWithType: ComputeNodes.enableSchedulingWithServiceResponseAsync
type: method
members:
- fullName: com.microsoft.azure.batch.protocol.ComputeNodes.enableSchedulingWithServiceResponseAsync(String poolId, String nodeId)
  name: enableSchedulingWithServiceResponseAsync(String poolId, String nodeId)
  nameWithType: ComputeNodes.enableSchedulingWithServiceResponseAsync(String poolId, String nodeId)
  parameters:
  - description: <p>The ID of the pool that contains the compute node. </p>
    name: poolId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The ID of the compute node on which you want to enable task scheduling. </p>
    name: nodeId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceResponseWithHeaders</xref> object if successful. </p>
    type: Observable&lt;ServiceResponseWithHeaders&lt;Void, <xref href="com.microsoft.azure.batch.protocol.models.ComputeNodeEnableSchedulingHeaders?alt=com.microsoft.azure.batch.protocol.models.ComputeNodeEnableSchedulingHeaders&text=ComputeNodeEnableSchedulingHeaders" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Enables task scheduling on the specified compute node. You can enable task scheduling on a node only if its current scheduling state is disabled.</p>

    <p></p>
  syntax: public Observable<ServiceResponseWithHeaders<Void, ComputeNodeEnableSchedulingHeaders>> enableSchedulingWithServiceResponseAsync(String poolId, String nodeId)
  uid: com.microsoft.azure.batch.protocol.ComputeNodes.enableSchedulingWithServiceResponseAsync(String,String)
- fullName: com.microsoft.azure.batch.protocol.ComputeNodes.enableSchedulingWithServiceResponseAsync(String poolId, String nodeId, ComputeNodeEnableSchedulingOptions computeNodeEnableSchedulingOptions)
  name: enableSchedulingWithServiceResponseAsync(String poolId, String nodeId, ComputeNodeEnableSchedulingOptions computeNodeEnableSchedulingOptions)
  nameWithType: ComputeNodes.enableSchedulingWithServiceResponseAsync(String poolId, String nodeId, ComputeNodeEnableSchedulingOptions computeNodeEnableSchedulingOptions)
  parameters:
  - description: <p>The ID of the pool that contains the compute node. </p>
    name: poolId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The ID of the compute node on which you want to enable task scheduling. </p>
    name: nodeId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>Additional parameters for the operation </p>
    name: computeNodeEnableSchedulingOptions
    type: <xref href="com.microsoft.azure.batch.protocol.models.ComputeNodeEnableSchedulingOptions?alt=com.microsoft.azure.batch.protocol.models.ComputeNodeEnableSchedulingOptions&text=ComputeNodeEnableSchedulingOptions" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceResponseWithHeaders</xref> object if successful. </p>
    type: Observable&lt;ServiceResponseWithHeaders&lt;Void, <xref href="com.microsoft.azure.batch.protocol.models.ComputeNodeEnableSchedulingHeaders?alt=com.microsoft.azure.batch.protocol.models.ComputeNodeEnableSchedulingHeaders&text=ComputeNodeEnableSchedulingHeaders" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Enables task scheduling on the specified compute node. You can enable task scheduling on a node only if its current scheduling state is disabled.</p>

    <p></p>
  syntax: public Observable<ServiceResponseWithHeaders<Void, ComputeNodeEnableSchedulingHeaders>> enableSchedulingWithServiceResponseAsync(String poolId, String nodeId, ComputeNodeEnableSchedulingOptions computeNodeEnableSchedulingOptions)
  uid: com.microsoft.azure.batch.protocol.ComputeNodes.enableSchedulingWithServiceResponseAsync(String,String,ComputeNodeEnableSchedulingOptions)
uid: com.microsoft.azure.batch.protocol.ComputeNodes.enableSchedulingWithServiceResponseAsync*
fullName: com.microsoft.azure.batch.protocol.ComputeNodes.enableSchedulingWithServiceResponseAsync(String poolId, String nodeId)
name: enableSchedulingWithServiceResponseAsync(String poolId, String nodeId)
package: com.microsoft.azure.batch.protocol
metadata: {}
