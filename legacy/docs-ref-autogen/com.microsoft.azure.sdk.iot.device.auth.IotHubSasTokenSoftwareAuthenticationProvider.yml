### YamlMime:JavaType
constructors:
- fullName: com.microsoft.azure.sdk.iot.device.auth.IotHubSasTokenSoftwareAuthenticationProvider.IotHubSasTokenSoftwareAuthenticationProvider(String hostname, String gatewayHostname, String deviceId, String moduleId, String deviceKey, String sharedAccessToken)
  name: IotHubSasTokenSoftwareAuthenticationProvider(String hostname, String gatewayHostname, String deviceId, String moduleId, String deviceKey, String sharedAccessToken)
  nameWithType: IotHubSasTokenSoftwareAuthenticationProvider.IotHubSasTokenSoftwareAuthenticationProvider(String hostname, String gatewayHostname, String deviceId, String moduleId, String deviceKey, String sharedAccessToken)
  parameters:
  - description: <p>the IotHub host name </p>
    name: hostname
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The gateway hostname to use, or null if connecting to an IotHub </p>
    name: gatewayHostname
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the IotHub device id </p>
    name: deviceId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the module id. May be null if not using a module </p>
    name: moduleId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the device key for the device. Must be null if the provided sharedAccessToken is not </p>
    name: deviceKey
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the sas token string for accessing the device. Must be null if the provided deviceKey is not. </p>
    name: sharedAccessToken
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: <p>Constructor that takes a connection string containing a sas token or a device key and uses the default token valid seconds and timeBufferPercentage </p>
  syntax: public IotHubSasTokenSoftwareAuthenticationProvider(String hostname, String gatewayHostname, String deviceId, String moduleId, String deviceKey, String sharedAccessToken)
  uid: com.microsoft.azure.sdk.iot.device.auth.IotHubSasTokenSoftwareAuthenticationProvider.IotHubSasTokenSoftwareAuthenticationProvider(String,String,String,String,String,String)
- fullName: com.microsoft.azure.sdk.iot.device.auth.IotHubSasTokenSoftwareAuthenticationProvider.IotHubSasTokenSoftwareAuthenticationProvider(String hostname, String gatewayHostname, String deviceId, String moduleId, String deviceKey, String sharedAccessToken, int tokenValidSecs, int timeBufferPercentage)
  name: IotHubSasTokenSoftwareAuthenticationProvider(String hostname, String gatewayHostname, String deviceId, String moduleId, String deviceKey, String sharedAccessToken, int tokenValidSecs, int timeBufferPercentage)
  nameWithType: IotHubSasTokenSoftwareAuthenticationProvider.IotHubSasTokenSoftwareAuthenticationProvider(String hostname, String gatewayHostname, String deviceId, String moduleId, String deviceKey, String sharedAccessToken, int tokenValidSecs, int timeBufferPercentage)
  parameters:
  - description: <p>the IotHub host name </p>
    name: hostname
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The gateway hostname to use, or null if connecting to an IotHub </p>
    name: gatewayHostname
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the IotHub device id </p>
    name: deviceId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the module id. May be null if not using a module </p>
    name: moduleId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the device key for the device. Must be null if the provided sharedAccessToken is not </p>
    name: deviceKey
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the sas token string for accessing the device. Must be null if the provided deviceKey is not. </p>
    name: sharedAccessToken
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the number of seconds that the token will be valid for </p>
    name: tokenValidSecs
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  - description: <p>the percent of the sas token's life that will be exhausted before renewal is attempted </p>
    name: timeBufferPercentage
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Constructor that takes a connection string containing a sas token or a device key</p>

    <p></p>
  syntax: public IotHubSasTokenSoftwareAuthenticationProvider(String hostname, String gatewayHostname, String deviceId, String moduleId, String deviceKey, String sharedAccessToken, int tokenValidSecs, int timeBufferPercentage)
  uid: com.microsoft.azure.sdk.iot.device.auth.IotHubSasTokenSoftwareAuthenticationProvider.IotHubSasTokenSoftwareAuthenticationProvider(String,String,String,String,String,String,int,int)
- fullName: com.microsoft.azure.sdk.iot.device.auth.IotHubSasTokenSoftwareAuthenticationProvider.IotHubSasTokenSoftwareAuthenticationProvider(String hostname, String gatewayHostname, String deviceId, String moduleId, String deviceKey, String sharedAccessToken, SSLContext sslContext)
  name: IotHubSasTokenSoftwareAuthenticationProvider(String hostname, String gatewayHostname, String deviceId, String moduleId, String deviceKey, String sharedAccessToken, SSLContext sslContext)
  nameWithType: IotHubSasTokenSoftwareAuthenticationProvider.IotHubSasTokenSoftwareAuthenticationProvider(String hostname, String gatewayHostname, String deviceId, String moduleId, String deviceKey, String sharedAccessToken, SSLContext sslContext)
  parameters:
  - description: <p>the IotHub host name </p>
    name: hostname
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The gateway hostname to use, or null if connecting to an IotHub </p>
    name: gatewayHostname
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the IotHub device id </p>
    name: deviceId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the module id. May be null if not using a module </p>
    name: moduleId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the device key for the device. Must be null if the provided sharedAccessToken is not </p>
    name: deviceKey
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the sas token string for accessing the device. Must be null if the provided deviceKey is not. </p>
    name: sharedAccessToken
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the sslContext to use for SSL negotiation </p>
    name: sslContext
    type: <xref href="SSLContext?alt=SSLContext&text=SSLContext" data-throw-if-not-resolved="False"/>
  summary: <p>Constructor that takes a connection string containing a sas token or a device key and uses the default token valid seconds and timeBufferPercentage </p>
  syntax: public IotHubSasTokenSoftwareAuthenticationProvider(String hostname, String gatewayHostname, String deviceId, String moduleId, String deviceKey, String sharedAccessToken, SSLContext sslContext)
  uid: com.microsoft.azure.sdk.iot.device.auth.IotHubSasTokenSoftwareAuthenticationProvider.IotHubSasTokenSoftwareAuthenticationProvider(String,String,String,String,String,String,SSLContext)
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
- <xref href="com.microsoft.azure.sdk.iot.device.auth.IotHubAuthenticationProvider" data-throw-if-not-resolved="False"/>
- <xref href="com.microsoft.azure.sdk.iot.device.auth.IotHubSasTokenAuthenticationProvider?alt=com.microsoft.azure.sdk.iot.device.auth.IotHubSasTokenAuthenticationProvider&text=IotHubSasTokenAuthenticationProvider" data-throw-if-not-resolved="False"/>
inheritedMembers:
- com.microsoft.azure.sdk.iot.device.auth.IotHubAuthenticationProvider.deviceId
- com.microsoft.azure.sdk.iot.device.auth.IotHubAuthenticationProvider.gatewayHostname
- com.microsoft.azure.sdk.iot.device.auth.IotHubAuthenticationProvider.getDeviceId()
- com.microsoft.azure.sdk.iot.device.auth.IotHubAuthenticationProvider.getGatewayHostname()
- com.microsoft.azure.sdk.iot.device.auth.IotHubAuthenticationProvider.getHostname()
- com.microsoft.azure.sdk.iot.device.auth.IotHubSasTokenAuthenticationProvider.getMillisecondsBeforeProactiveRenewal()
- com.microsoft.azure.sdk.iot.device.auth.IotHubAuthenticationProvider.getModuleId()
- com.microsoft.azure.sdk.iot.device.auth.IotHubAuthenticationProvider.getSSLContext()
- com.microsoft.azure.sdk.iot.device.auth.IotHubSasTokenAuthenticationProvider.getTokenValidSecs()
- com.microsoft.azure.sdk.iot.device.auth.IotHubAuthenticationProvider.hostname
- com.microsoft.azure.sdk.iot.device.auth.IotHubAuthenticationProvider.IotHubAuthenticationProvider(String,String,String,String)
- com.microsoft.azure.sdk.iot.device.auth.IotHubAuthenticationProvider.IotHubAuthenticationProvider(String,String,String,String,SSLContext)
- com.microsoft.azure.sdk.iot.device.auth.IotHubSasTokenAuthenticationProvider.IotHubSasTokenAuthenticationProvider(String,String,String,String)
- com.microsoft.azure.sdk.iot.device.auth.IotHubSasTokenAuthenticationProvider.IotHubSasTokenAuthenticationProvider(String,String,String,String,long,int)
- com.microsoft.azure.sdk.iot.device.auth.IotHubSasTokenAuthenticationProvider.isSasTokenExpired()
- com.microsoft.azure.sdk.iot.device.auth.IotHubAuthenticationProvider.moduleId
- com.microsoft.azure.sdk.iot.device.auth.IotHubSasTokenAuthenticationProvider.sasToken
- com.microsoft.azure.sdk.iot.device.auth.IotHubSasTokenAuthenticationProvider.shouldRefreshToken(boolean)
- com.microsoft.azure.sdk.iot.device.auth.IotHubSasTokenAuthenticationProvider.tokenValidSecs
methods:
- fullName: com.microsoft.azure.sdk.iot.device.auth.IotHubSasTokenSoftwareAuthenticationProvider.canRefreshToken()
  name: canRefreshToken()
  nameWithType: IotHubSasTokenSoftwareAuthenticationProvider.canRefreshToken()
  returns:
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False"/>
  syntax: public boolean canRefreshToken()
  uid: com.microsoft.azure.sdk.iot.device.auth.IotHubSasTokenSoftwareAuthenticationProvider.canRefreshToken()
- fullName: com.microsoft.azure.sdk.iot.device.auth.IotHubSasTokenSoftwareAuthenticationProvider.getSasToken()
  name: getSasToken()
  nameWithType: IotHubSasTokenSoftwareAuthenticationProvider.getSasToken()
  returns:
    description: <p>The value of SasToken </p>
    type: <xref href="char+%5B%5D?alt=char+%5B%5D&text=char+%5B%5D" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Getter for SasToken. If the saved token has expired, this method shall renew it if possible</p>

    <p></p>
  syntax: public char [] getSasToken()
  uid: com.microsoft.azure.sdk.iot.device.auth.IotHubSasTokenSoftwareAuthenticationProvider.getSasToken()
- fullName: com.microsoft.azure.sdk.iot.device.auth.IotHubSasTokenSoftwareAuthenticationProvider.isAuthenticationProviderRenewalNecessary()
  name: isAuthenticationProviderRenewalNecessary()
  nameWithType: IotHubSasTokenSoftwareAuthenticationProvider.isAuthenticationProviderRenewalNecessary()
  returns:
    description: <p>if the sas token needs manual renewal </p>
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False"/>
  summary: <p>Returns true if the saved sas token has expired and cannot be auto-renewed through the device key </p>
  syntax: public boolean isAuthenticationProviderRenewalNecessary()
  uid: com.microsoft.azure.sdk.iot.device.auth.IotHubSasTokenSoftwareAuthenticationProvider.isAuthenticationProviderRenewalNecessary()
- fullName: com.microsoft.azure.sdk.iot.device.auth.IotHubSasTokenSoftwareAuthenticationProvider.setTokenValidSecs(long tokenValidSecs)
  name: setTokenValidSecs(long tokenValidSecs)
  nameWithType: IotHubSasTokenSoftwareAuthenticationProvider.setTokenValidSecs(long tokenValidSecs)
  parameters:
  - name: tokenValidSecs
    type: <xref href="long?alt=long&text=long" data-throw-if-not-resolved="False"/>
  syntax: public void setTokenValidSecs(long tokenValidSecs)
  uid: com.microsoft.azure.sdk.iot.device.auth.IotHubSasTokenSoftwareAuthenticationProvider.setTokenValidSecs(long)
nameWithType: IotHubSasTokenSoftwareAuthenticationProvider
syntax: public class IotHubSasTokenSoftwareAuthenticationProvider extends IotHubSasTokenAuthenticationProvider
type: class
uid: com.microsoft.azure.sdk.iot.device.auth.IotHubSasTokenSoftwareAuthenticationProvider
fullName: com.microsoft.azure.sdk.iot.device.auth.IotHubSasTokenSoftwareAuthenticationProvider
name: IotHubSasTokenSoftwareAuthenticationProvider
package: com.microsoft.azure.sdk.iot.device.auth
metadata: {}
