### YamlMime:JavaMember
nameWithType: TrafficManagerProfiles.checkDnsNameAvailabilityAsync
type: method
members:
- fullName: com.microsoft.azure.management.trafficmanager.TrafficManagerProfiles.checkDnsNameAvailabilityAsync(String dnsNameLabel)
  name: checkDnsNameAvailabilityAsync(String dnsNameLabel)
  nameWithType: TrafficManagerProfiles.checkDnsNameAvailabilityAsync(String dnsNameLabel)
  parameters:
  - description: <p>the DNS name to check </p>
    name: dnsNameLabel
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>a representation of the deferred computation of this call, returning whether the DNS is available to be used for a traffic manager profile and other info if not </p>
    type: Observable&lt;<xref href="com.microsoft.azure.management.trafficmanager.CheckProfileDnsNameAvailabilityResult?alt=com.microsoft.azure.management.trafficmanager.CheckProfileDnsNameAvailabilityResult&text=CheckProfileDnsNameAvailabilityResult" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Asynchronously checks that the DNS name is valid for traffic manager profile and is not in use.</p>

    <p></p>
  syntax: public Observable<CheckProfileDnsNameAvailabilityResult> checkDnsNameAvailabilityAsync(String dnsNameLabel)
  uid: com.microsoft.azure.management.trafficmanager.TrafficManagerProfiles.checkDnsNameAvailabilityAsync(String)
- fullName: com.microsoft.azure.management.trafficmanager.TrafficManagerProfiles.checkDnsNameAvailabilityAsync(String dnsNameLabel, ServiceCallback<CheckProfileDnsNameAvailabilityResult> callback)
  name: checkDnsNameAvailabilityAsync(String dnsNameLabel, ServiceCallback<CheckProfileDnsNameAvailabilityResult> callback)
  nameWithType: TrafficManagerProfiles.checkDnsNameAvailabilityAsync(String dnsNameLabel, ServiceCallback<CheckProfileDnsNameAvailabilityResult> callback)
  parameters:
  - description: <p>the DNS name to check </p>
    name: dnsNameLabel
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the callback to call on success or failure, on success with the result whether the DNS is available to be used for a traffic manager profile and other info if not</p>
    name: callback
    type: ServiceCallback&lt;<xref href="com.microsoft.azure.management.trafficmanager.CheckProfileDnsNameAvailabilityResult?alt=com.microsoft.azure.management.trafficmanager.CheckProfileDnsNameAvailabilityResult&text=CheckProfileDnsNameAvailabilityResult" data-throw-if-not-resolved="False"/>&gt;
  returns:
    description: <p>a handle to cancel the request </p>
    type: ServiceFuture&lt;<xref href="com.microsoft.azure.management.trafficmanager.CheckProfileDnsNameAvailabilityResult?alt=com.microsoft.azure.management.trafficmanager.CheckProfileDnsNameAvailabilityResult&text=CheckProfileDnsNameAvailabilityResult" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Asynchronously checks that the DNS name is valid for traffic manager profile and is not in use.</p>

    <p></p>
  syntax: public ServiceFuture<CheckProfileDnsNameAvailabilityResult> checkDnsNameAvailabilityAsync(String dnsNameLabel, ServiceCallback<CheckProfileDnsNameAvailabilityResult> callback)
  uid: com.microsoft.azure.management.trafficmanager.TrafficManagerProfiles.checkDnsNameAvailabilityAsync(String,ServiceCallback<CheckProfileDnsNameAvailabilityResult>)
uid: com.microsoft.azure.management.trafficmanager.TrafficManagerProfiles.checkDnsNameAvailabilityAsync*
fullName: com.microsoft.azure.management.trafficmanager.TrafficManagerProfiles.checkDnsNameAvailabilityAsync(String dnsNameLabel)
name: checkDnsNameAvailabilityAsync(String dnsNameLabel)
package: com.microsoft.azure.management.trafficmanager
metadata: {}
