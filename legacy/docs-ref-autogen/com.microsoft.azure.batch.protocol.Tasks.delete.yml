### YamlMime:JavaMember
nameWithType: Tasks.delete
type: method
members:
- fullName: com.microsoft.azure.batch.protocol.Tasks.delete(String jobId, String taskId)
  name: delete(String jobId, String taskId)
  nameWithType: Tasks.delete(String jobId, String taskId)
  parameters:
  - description: <p>The ID of the job from which to delete the task. </p>
    name: jobId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The ID of the task to delete. </p>
    name: taskId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="BatchErrorException?alt=BatchErrorException&text=BatchErrorException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  summary: >-
    <p>Deletes a task from the specified job. When a task is deleted, all of the files in its directory on the compute node where it ran are also deleted (regardless of the retention time). For multi-instance tasks, the delete task operation applies synchronously to the primary task; subtasks and their files are then deleted asynchronously in the background.</p>

    <p></p>
  syntax: public void delete(String jobId, String taskId)
  uid: com.microsoft.azure.batch.protocol.Tasks.delete(String,String)
- fullName: com.microsoft.azure.batch.protocol.Tasks.delete(String jobId, String taskId, TaskDeleteOptions taskDeleteOptions)
  name: delete(String jobId, String taskId, TaskDeleteOptions taskDeleteOptions)
  nameWithType: Tasks.delete(String jobId, String taskId, TaskDeleteOptions taskDeleteOptions)
  parameters:
  - description: <p>The ID of the job from which to delete the task. </p>
    name: jobId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The ID of the task to delete. </p>
    name: taskId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>Additional parameters for the operation </p>
    name: taskDeleteOptions
    type: <xref href="com.microsoft.azure.batch.protocol.models.TaskDeleteOptions?alt=com.microsoft.azure.batch.protocol.models.TaskDeleteOptions&text=TaskDeleteOptions" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="BatchErrorException?alt=BatchErrorException&text=BatchErrorException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  summary: >-
    <p>Deletes a task from the specified job. When a task is deleted, all of the files in its directory on the compute node where it ran are also deleted (regardless of the retention time). For multi-instance tasks, the delete task operation applies synchronously to the primary task; subtasks and their files are then deleted asynchronously in the background.</p>

    <p></p>
  syntax: public void delete(String jobId, String taskId, TaskDeleteOptions taskDeleteOptions)
  uid: com.microsoft.azure.batch.protocol.Tasks.delete(String,String,TaskDeleteOptions)
uid: com.microsoft.azure.batch.protocol.Tasks.delete*
fullName: com.microsoft.azure.batch.protocol.Tasks.delete(String jobId, String taskId)
name: delete(String jobId, String taskId)
package: com.microsoft.azure.batch.protocol
metadata: {}
