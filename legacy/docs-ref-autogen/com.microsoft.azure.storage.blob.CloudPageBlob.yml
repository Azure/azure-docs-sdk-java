### YamlMime:JavaType
constructors:
- fullName: com.microsoft.azure.storage.blob.CloudPageBlob.CloudPageBlob(final CloudPageBlob otherBlob)
  name: CloudPageBlob(final CloudPageBlob otherBlob)
  nameWithType: CloudPageBlob.CloudPageBlob(final CloudPageBlob otherBlob)
  parameters:
  - description: <p>A <code>CloudPageBlob</code> object which represents the page blob to copy. </p>
    name: otherBlob
    type: final <xref href="com.microsoft.azure.storage.blob.CloudPageBlob?alt=com.microsoft.azure.storage.blob.CloudPageBlob&text=CloudPageBlob" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Creates an instance of the  class by copying values from another page blob.</p>

    <p></p>
  syntax: public CloudPageBlob(final CloudPageBlob otherBlob)
  uid: com.microsoft.azure.storage.blob.CloudPageBlob.CloudPageBlob(final CloudPageBlob)
- fullName: com.microsoft.azure.storage.blob.CloudPageBlob.CloudPageBlob(final StorageUri blobAbsoluteUri)
  name: CloudPageBlob(final StorageUri blobAbsoluteUri)
  nameWithType: CloudPageBlob.CloudPageBlob(final StorageUri blobAbsoluteUri)
  parameters:
  - description: <p>A <xref uid="com.microsoft.azure.storage.StorageUri" data-throw-if-not-resolved="false" data-raw-source="StorageUri"></xref> object which represents the absolute URI to the blob.</p>
    name: blobAbsoluteUri
    type: final <xref href="com.microsoft.azure.storage.StorageUri?alt=com.microsoft.azure.storage.StorageUri&text=StorageUri" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  summary: >-
    <p>Creates an instance of the  class using the specified absolute URI and storage service client.</p>

    <p></p>
  syntax: public CloudPageBlob(final StorageUri blobAbsoluteUri)
  uid: com.microsoft.azure.storage.blob.CloudPageBlob.CloudPageBlob(final StorageUri)
- fullName: com.microsoft.azure.storage.blob.CloudPageBlob.CloudPageBlob(final StorageUri blobAbsoluteUri, final StorageCredentials credentials)
  name: CloudPageBlob(final StorageUri blobAbsoluteUri, final StorageCredentials credentials)
  nameWithType: CloudPageBlob.CloudPageBlob(final StorageUri blobAbsoluteUri, final StorageCredentials credentials)
  parameters:
  - description: <p>A <xref uid="com.microsoft.azure.storage.StorageUri" data-throw-if-not-resolved="false" data-raw-source="StorageUri"></xref> object that represents the absolute URI to the blob. </p>
    name: blobAbsoluteUri
    type: final <xref href="com.microsoft.azure.storage.StorageUri?alt=com.microsoft.azure.storage.StorageUri&text=StorageUri" data-throw-if-not-resolved="False"/>
  - description: <p>A <xref uid="com.microsoft.azure.storage.StorageCredentials" data-throw-if-not-resolved="false" data-raw-source="StorageCredentials"></xref> object used to authenticate access.</p>
    name: credentials
    type: final <xref href="com.microsoft.azure.storage.StorageCredentials?alt=com.microsoft.azure.storage.StorageCredentials&text=StorageCredentials" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  summary: >-
    <p>Creates an instance of the  class using the specified absolute StorageUri and credentials.</p>

    <p></p>
  syntax: public CloudPageBlob(final StorageUri blobAbsoluteUri, final StorageCredentials credentials)
  uid: com.microsoft.azure.storage.blob.CloudPageBlob.CloudPageBlob(final StorageUri,final StorageCredentials)
- fullName: com.microsoft.azure.storage.blob.CloudPageBlob.CloudPageBlob(final StorageUri blobAbsoluteUri, final String snapshotID, final StorageCredentials credentials)
  name: CloudPageBlob(final StorageUri blobAbsoluteUri, final String snapshotID, final StorageCredentials credentials)
  nameWithType: CloudPageBlob.CloudPageBlob(final StorageUri blobAbsoluteUri, final String snapshotID, final StorageCredentials credentials)
  parameters:
  - description: <p>A <xref uid="com.microsoft.azure.storage.StorageUri" data-throw-if-not-resolved="false" data-raw-source="StorageUri"></xref> object that represents the absolute URI to the blob. </p>
    name: blobAbsoluteUri
    type: final <xref href="com.microsoft.azure.storage.StorageUri?alt=com.microsoft.azure.storage.StorageUri&text=StorageUri" data-throw-if-not-resolved="False"/>
  - description: <p>A <code>String</code> that represents the snapshot version, if applicable. </p>
    name: snapshotID
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>A <xref uid="com.microsoft.azure.storage.StorageCredentials" data-throw-if-not-resolved="false" data-raw-source="StorageCredentials"></xref> object used to authenticate access. </p>
    name: credentials
    type: final <xref href="com.microsoft.azure.storage.StorageCredentials?alt=com.microsoft.azure.storage.StorageCredentials&text=StorageCredentials" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  summary: >-
    <p>Creates an instance of the  class using the specified absolute StorageUri, snapshot ID, and credentials.</p>

    <p></p>
  syntax: public CloudPageBlob(final StorageUri blobAbsoluteUri, final String snapshotID, final StorageCredentials credentials)
  uid: com.microsoft.azure.storage.blob.CloudPageBlob.CloudPageBlob(final StorageUri,final String,final StorageCredentials)
- fullName: com.microsoft.azure.storage.blob.CloudPageBlob.CloudPageBlob(final URI blobAbsoluteUri)
  name: CloudPageBlob(final URI blobAbsoluteUri)
  nameWithType: CloudPageBlob.CloudPageBlob(final URI blobAbsoluteUri)
  parameters:
  - description: <p>A <code>java.net.URI</code> object which represents the absolute URI to the blob.</p>
    name: blobAbsoluteUri
    type: <xref href="final+URI?alt=final+URI&text=final+URI" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  summary: >-
    <p>Creates an instance of the  class using the specified absolute URI and storage service client.</p>

    <p></p>
  syntax: public CloudPageBlob(final URI blobAbsoluteUri)
  uid: com.microsoft.azure.storage.blob.CloudPageBlob.CloudPageBlob(final URI)
- fullName: com.microsoft.azure.storage.blob.CloudPageBlob.CloudPageBlob(final URI blobAbsoluteUri, final StorageCredentials credentials)
  name: CloudPageBlob(final URI blobAbsoluteUri, final StorageCredentials credentials)
  nameWithType: CloudPageBlob.CloudPageBlob(final URI blobAbsoluteUri, final StorageCredentials credentials)
  parameters:
  - description: <p>A <code>java.net.URI</code> object that represents the absolute URI to the blob. </p>
    name: blobAbsoluteUri
    type: <xref href="final+URI?alt=final+URI&text=final+URI" data-throw-if-not-resolved="False"/>
  - description: <p>A <xref uid="com.microsoft.azure.storage.StorageCredentials" data-throw-if-not-resolved="false" data-raw-source="StorageCredentials"></xref> object used to authenticate access.</p>
    name: credentials
    type: final <xref href="com.microsoft.azure.storage.StorageCredentials?alt=com.microsoft.azure.storage.StorageCredentials&text=StorageCredentials" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  summary: >-
    <p>Creates an instance of the  class using the specified absolute URI and credentials.</p>

    <p></p>
  syntax: public CloudPageBlob(final URI blobAbsoluteUri, final StorageCredentials credentials)
  uid: com.microsoft.azure.storage.blob.CloudPageBlob.CloudPageBlob(final URI,final StorageCredentials)
- fullName: com.microsoft.azure.storage.blob.CloudPageBlob.CloudPageBlob(final URI blobAbsoluteUri, final String snapshotID, final StorageCredentials credentials)
  name: CloudPageBlob(final URI blobAbsoluteUri, final String snapshotID, final StorageCredentials credentials)
  nameWithType: CloudPageBlob.CloudPageBlob(final URI blobAbsoluteUri, final String snapshotID, final StorageCredentials credentials)
  parameters:
  - description: <p>A <code>java.net.URI</code> object that represents the absolute URI to the blob. </p>
    name: blobAbsoluteUri
    type: <xref href="final+URI?alt=final+URI&text=final+URI" data-throw-if-not-resolved="False"/>
  - description: <p>A <code>String</code> that represents the snapshot version, if applicable. </p>
    name: snapshotID
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>A <xref uid="com.microsoft.azure.storage.StorageCredentials" data-throw-if-not-resolved="false" data-raw-source="StorageCredentials"></xref> object used to authenticate access. </p>
    name: credentials
    type: final <xref href="com.microsoft.azure.storage.StorageCredentials?alt=com.microsoft.azure.storage.StorageCredentials&text=StorageCredentials" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  summary: >-
    <p>Creates an instance of the  class using the specified absolute URI, snapshot ID, and credentials.</p>

    <p></p>
  syntax: public CloudPageBlob(final URI blobAbsoluteUri, final String snapshotID, final StorageCredentials credentials)
  uid: com.microsoft.azure.storage.blob.CloudPageBlob.CloudPageBlob(final URI,final String,final StorageCredentials)
- fullName: com.microsoft.azure.storage.blob.CloudPageBlob.CloudPageBlob(String blobName, String snapshotID, CloudBlobContainer container)
  name: CloudPageBlob(String blobName, String snapshotID, CloudBlobContainer container)
  nameWithType: CloudPageBlob.CloudPageBlob(String blobName, String snapshotID, CloudBlobContainer container)
  parameters:
  - description: <p>Name of the blob. </p>
    name: blobName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>A <code>String</code> that represents the snapshot version, if applicable. </p>
    name: snapshotID
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The reference to the parent container. </p>
    name: container
    type: <xref href="com.microsoft.azure.storage.blob.CloudBlobContainer?alt=com.microsoft.azure.storage.blob.CloudBlobContainer&text=CloudBlobContainer" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="URISyntaxException?alt=URISyntaxException&text=URISyntaxException" data-throw-if-not-resolved="False"/>
    description: <p>If the resource URI is invalid. </p>
  summary: >-
    <p>Creates an instance of the  class using the specified type, name, snapshot ID, and container.</p>

    <p></p>
  syntax: protected CloudPageBlob(String blobName, String snapshotID, CloudBlobContainer container)
  uid: com.microsoft.azure.storage.blob.CloudPageBlob.CloudPageBlob(String,String,CloudBlobContainer)
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
- <xref href="com.microsoft.azure.storage.blob.ListBlobItem" data-throw-if-not-resolved="False"/>
- <xref href="com.microsoft.azure.storage.blob.CloudBlob?alt=com.microsoft.azure.storage.blob.CloudBlob&text=CloudBlob" data-throw-if-not-resolved="False"/>
inheritedMembers:
- com.microsoft.azure.storage.blob.CloudBlob.abortCopy(final String)
- com.microsoft.azure.storage.blob.CloudBlob.abortCopy(final String,final AccessCondition,BlobRequestOptions,OperationContext)
- com.microsoft.azure.storage.blob.CloudBlob.acquireLease()
- com.microsoft.azure.storage.blob.CloudBlob.acquireLease(final Integer,final String)
- com.microsoft.azure.storage.blob.CloudBlob.acquireLease(final Integer,final String,final AccessCondition,BlobRequestOptions,OperationContext)
- com.microsoft.azure.storage.blob.CloudBlob.assertCorrectBlobType()
- com.microsoft.azure.storage.blob.CloudBlob.assertNoWriteOperationForSnapshot()
- com.microsoft.azure.storage.blob.CloudBlob.blobServiceClient
- com.microsoft.azure.storage.blob.CloudBlob.breakLease(final Integer)
- com.microsoft.azure.storage.blob.CloudBlob.breakLease(final Integer,final AccessCondition,BlobRequestOptions,OperationContext)
- com.microsoft.azure.storage.blob.CloudBlob.changeLease(final String,final AccessCondition)
- com.microsoft.azure.storage.blob.CloudBlob.changeLease(final String,final AccessCondition,BlobRequestOptions,OperationContext)
- com.microsoft.azure.storage.blob.CloudBlob.CloudBlob(final BlobType,String,String,CloudBlobContainer)
- com.microsoft.azure.storage.blob.CloudBlob.CloudBlob(final BlobType,final StorageUri,final String,final StorageCredentials)
- com.microsoft.azure.storage.blob.CloudBlob.CloudBlob(final CloudBlob)
- com.microsoft.azure.storage.blob.CloudBlob.createSnapshot()
- com.microsoft.azure.storage.blob.CloudBlob.createSnapshot(final AccessCondition,BlobRequestOptions,OperationContext)
- com.microsoft.azure.storage.blob.CloudBlob.createSnapshot(final HashMap<String, String>,final AccessCondition,BlobRequestOptions,OperationContext)
- com.microsoft.azure.storage.blob.CloudBlob.delete()
- com.microsoft.azure.storage.blob.CloudBlob.delete(final DeleteSnapshotsOption,final AccessCondition,BlobRequestOptions,OperationContext)
- com.microsoft.azure.storage.blob.CloudBlob.deleteIfExists()
- com.microsoft.azure.storage.blob.CloudBlob.deleteIfExists(final DeleteSnapshotsOption,final AccessCondition,BlobRequestOptions,OperationContext)
- com.microsoft.azure.storage.blob.CloudBlob.download(final OutputStream)
- com.microsoft.azure.storage.blob.CloudBlob.download(final OutputStream,final AccessCondition,BlobRequestOptions,OperationContext)
- com.microsoft.azure.storage.blob.CloudBlob.downloadAccountInfo()
- com.microsoft.azure.storage.blob.CloudBlob.downloadAccountInfo(BlobRequestOptions,OperationContext)
- com.microsoft.azure.storage.blob.CloudBlob.downloadAccountInformationImpl(final RequestOptions)
- com.microsoft.azure.storage.blob.CloudBlob.downloadAttributes()
- com.microsoft.azure.storage.blob.CloudBlob.downloadAttributes(final AccessCondition,BlobRequestOptions,OperationContext)
- com.microsoft.azure.storage.blob.CloudBlob.downloadRange(final long,final Long,final OutputStream)
- com.microsoft.azure.storage.blob.CloudBlob.downloadRange(final long,final Long,final OutputStream,final AccessCondition,BlobRequestOptions,OperationContext)
- com.microsoft.azure.storage.blob.CloudBlob.downloadRangeInternal(final long,final Long,final byte [],final int,final AccessCondition,BlobRequestOptions,OperationContext)
- com.microsoft.azure.storage.blob.CloudBlob.downloadRangeToByteArray(final long,final Long,final byte [],final int)
- com.microsoft.azure.storage.blob.CloudBlob.downloadRangeToByteArray(final long,final Long,final byte [],final int,final AccessCondition,BlobRequestOptions,OperationContext)
- com.microsoft.azure.storage.blob.CloudBlob.downloadToByteArray(final byte [],final int)
- com.microsoft.azure.storage.blob.CloudBlob.downloadToByteArray(final byte [],final int,final AccessCondition,BlobRequestOptions,OperationContext)
- com.microsoft.azure.storage.blob.CloudBlob.downloadToFile(final String)
- com.microsoft.azure.storage.blob.CloudBlob.downloadToFile(final String,final AccessCondition,BlobRequestOptions,OperationContext)
- com.microsoft.azure.storage.blob.CloudBlob.exists()
- com.microsoft.azure.storage.blob.CloudBlob.exists(final AccessCondition,BlobRequestOptions,OperationContext)
- com.microsoft.azure.storage.blob.CloudBlob.generateSharedAccessSignature(final SharedAccessBlobPolicy,final String)
- com.microsoft.azure.storage.blob.CloudBlob.generateSharedAccessSignature(final SharedAccessBlobPolicy,final SharedAccessBlobHeaders,final String)
- com.microsoft.azure.storage.blob.CloudBlob.generateSharedAccessSignature(final SharedAccessBlobPolicy,final SharedAccessBlobHeaders,final String,final IPRange,final SharedAccessProtocols)
- com.microsoft.azure.storage.blob.CloudBlob.generateSharedAccessSignature(final SharedAccessBlobPolicy,final SharedAccessBlobHeaders,final String,final IPRange,final SharedAccessProtocols,boolean)
- com.microsoft.azure.storage.blob.CloudBlob.generateUserDelegationSharedAccessSignature(UserDelegationKey,SharedAccessBlobPolicy)
- com.microsoft.azure.storage.blob.CloudBlob.generateUserDelegationSharedAccessSignature(final UserDelegationKey,final SharedAccessBlobPolicy,final SharedAccessBlobHeaders,final IPRange,final SharedAccessProtocols)
- com.microsoft.azure.storage.blob.CloudBlob.getContainer()
- com.microsoft.azure.storage.blob.CloudBlob.getCopyState()
- com.microsoft.azure.storage.blob.CloudBlob.getMetadata()
- com.microsoft.azure.storage.blob.CloudBlob.getName()
- com.microsoft.azure.storage.blob.CloudBlob.getParent()
- com.microsoft.azure.storage.blob.CloudBlob.getParentNameFromURI(final StorageUri,final String,final CloudBlobContainer)
- com.microsoft.azure.storage.blob.CloudBlob.getProperties()
- com.microsoft.azure.storage.blob.CloudBlob.getQualifiedStorageUri()
- com.microsoft.azure.storage.blob.CloudBlob.getQualifiedUri()
- com.microsoft.azure.storage.blob.CloudBlob.getServiceClient()
- com.microsoft.azure.storage.blob.CloudBlob.getSnapshotID()
- com.microsoft.azure.storage.blob.CloudBlob.getSnapshotQualifiedStorageUri()
- com.microsoft.azure.storage.blob.CloudBlob.getSnapshotQualifiedUri()
- com.microsoft.azure.storage.blob.CloudBlob.getStorageUri()
- com.microsoft.azure.storage.blob.CloudBlob.getStreamMinimumReadSizeInBytes()
- com.microsoft.azure.storage.blob.CloudBlob.getStreamWriteSizeInBytes()
- com.microsoft.azure.storage.blob.CloudBlob.getTransformedAddress(final OperationContext)
- com.microsoft.azure.storage.blob.CloudBlob.getUri()
- com.microsoft.azure.storage.blob.CloudBlob.isSnapshot()
- com.microsoft.azure.storage.blob.CloudBlob.openInputStream()
- com.microsoft.azure.storage.blob.CloudBlob.openInputStream(final AccessCondition,BlobRequestOptions,OperationContext)
- com.microsoft.azure.storage.blob.CloudBlob.openInputStream(final long,final Long,final AccessCondition,BlobRequestOptions,OperationContext)
- com.microsoft.azure.storage.blob.CloudBlob.parent
- com.microsoft.azure.storage.blob.CloudBlob.releaseLease(final AccessCondition)
- com.microsoft.azure.storage.blob.CloudBlob.releaseLease(final AccessCondition,BlobRequestOptions,OperationContext)
- com.microsoft.azure.storage.blob.CloudBlob.renewLease(final AccessCondition)
- com.microsoft.azure.storage.blob.CloudBlob.renewLease(final AccessCondition,BlobRequestOptions,OperationContext)
- com.microsoft.azure.storage.blob.CloudBlob.setContainer(final CloudBlobContainer)
- com.microsoft.azure.storage.blob.CloudBlob.setMetadata(final HashMap<String, String>)
- com.microsoft.azure.storage.blob.CloudBlob.setProperties(final BlobProperties)
- com.microsoft.azure.storage.blob.CloudBlob.setSnapshotID(final String)
- com.microsoft.azure.storage.blob.CloudBlob.setStorageUri(final StorageUri)
- com.microsoft.azure.storage.blob.CloudBlob.setStreamMinimumReadSizeInBytes(final int)
- com.microsoft.azure.storage.blob.CloudBlob.startCopy(final URI)
- com.microsoft.azure.storage.blob.CloudBlob.startCopy(final URI,final AccessCondition,final AccessCondition,BlobRequestOptions,OperationContext)
- com.microsoft.azure.storage.blob.CloudBlob.startCopy(final URI,final String,final AccessCondition,final AccessCondition,BlobRequestOptions,OperationContext)
- com.microsoft.azure.storage.blob.CloudBlob.startCopy(final URI,String,boolean,final String,final AccessCondition,final AccessCondition,BlobRequestOptions,OperationContext)
- com.microsoft.azure.storage.blob.CloudBlob.startCopy(final URI,String,boolean,final String,final RehydratePriority,final AccessCondition,final AccessCondition,BlobRequestOptions,OperationContext)
- com.microsoft.azure.storage.blob.CloudBlob.startCopyImpl(final URI,final String,final boolean,final boolean,final String,final RehydratePriority,final AccessCondition,final AccessCondition,final BlobRequestOptions)
- com.microsoft.azure.storage.blob.CloudBlob.streamMinimumReadSizeInBytes
- com.microsoft.azure.storage.blob.CloudBlob.streamWriteSizeInBytes
- com.microsoft.azure.storage.blob.CloudBlob.undelete()
- com.microsoft.azure.storage.blob.CloudBlob.undelete(BlobRequestOptions,OperationContext)
- com.microsoft.azure.storage.blob.CloudBlob.updateEtagAndLastModifiedFromResponse(HttpURLConnection)
- com.microsoft.azure.storage.blob.CloudBlob.updateLengthFromResponse(HttpURLConnection)
- com.microsoft.azure.storage.blob.CloudBlob.uploadFromByteArray(final byte [],final int,final int)
- com.microsoft.azure.storage.blob.CloudBlob.uploadFromByteArray(final byte [],final int,final int,final AccessCondition,BlobRequestOptions,OperationContext)
- com.microsoft.azure.storage.blob.CloudBlob.uploadFromFile(final String)
- com.microsoft.azure.storage.blob.CloudBlob.uploadFromFile(final String,final AccessCondition,BlobRequestOptions,OperationContext)
- com.microsoft.azure.storage.blob.CloudBlob.uploadMetadata()
- com.microsoft.azure.storage.blob.CloudBlob.uploadMetadata(final AccessCondition,BlobRequestOptions,OperationContext)
- com.microsoft.azure.storage.blob.CloudBlob.uploadProperties()
- com.microsoft.azure.storage.blob.CloudBlob.uploadProperties(final AccessCondition,BlobRequestOptions,OperationContext)
- com.microsoft.azure.storage.blob.CloudBlob.validateCPKHeaders(StorageRequest<CloudBlobClient, T, R>,BlobRequestOptions,boolean)
methods:
- fullName: com.microsoft.azure.storage.blob.CloudPageBlob.clearPages(final long offset, final long length)
  name: clearPages(final long offset, final long length)
  nameWithType: CloudPageBlob.clearPages(final long offset, final long length)
  parameters:
  - description: <p>The offset, in bytes, at which to begin clearing pages. This value must be a multiple of 512. </p>
    name: offset
    type: <xref href="final+long?alt=final+long&text=final+long" data-throw-if-not-resolved="False"/>
  - description: <p>The length, in bytes, of the data range to be cleared. This value must be a multiple of 512.</p>
    name: length
    type: <xref href="final+long?alt=final+long&text=final+long" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  summary: >-
    <p>Clears pages from a page blob. </p>

    <p>Calling  releases the storage space used by the specified pages. Pages that have been cleared are no longer tracked as part of the page blob, and no longer incur a charge against the storage account.</p>

    <p></p>
  syntax: public void clearPages(final long offset, final long length)
  uid: com.microsoft.azure.storage.blob.CloudPageBlob.clearPages(final long,final long)
- fullName: com.microsoft.azure.storage.blob.CloudPageBlob.clearPages(final long offset, final long length, final AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  name: clearPages(final long offset, final long length, final AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  nameWithType: CloudPageBlob.clearPages(final long offset, final long length, final AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  parameters:
  - description: <p>A <code>long</code> which represents the offset, in bytes, at which to begin clearing pages. This value must be a multiple of 512. </p>
    name: offset
    type: <xref href="final+long?alt=final+long&text=final+long" data-throw-if-not-resolved="False"/>
  - description: <p>A <code>long</code> which represents the length, in bytes, of the data range to be cleared. This value must be a multiple of 512. </p>
    name: length
    type: <xref href="final+long?alt=final+long&text=final+long" data-throw-if-not-resolved="False"/>
  - description: <p>An <xref uid="com.microsoft.azure.storage.AccessCondition" data-throw-if-not-resolved="false" data-raw-source="AccessCondition"></xref> object which represents the access conditions for the blob. </p>
    name: accessCondition
    type: final <xref href="com.microsoft.azure.storage.AccessCondition?alt=com.microsoft.azure.storage.AccessCondition&text=AccessCondition" data-throw-if-not-resolved="False"/>
  - description: <p>A <xref uid="com.microsoft.azure.storage.blob.BlobRequestOptions" data-throw-if-not-resolved="false" data-raw-source="BlobRequestOptions"></xref> object that specifies any additional options for the request. Specifying <code>null</code> will use the default request options from the associated service client ( <xref uid="com.microsoft.azure.storage.blob.CloudBlobClient" data-throw-if-not-resolved="false" data-raw-source="CloudBlobClient"></xref>). </p>
    name: options
    type: <xref href="com.microsoft.azure.storage.blob.BlobRequestOptions?alt=com.microsoft.azure.storage.blob.BlobRequestOptions&text=BlobRequestOptions" data-throw-if-not-resolved="False"/>
  - description: <p>An <xref uid="com.microsoft.azure.storage.OperationContext" data-throw-if-not-resolved="false" data-raw-source="OperationContext"></xref> object which represents the context for the current operation. This object is used to track requests to the storage service, and to provide additional runtime information about the operation.</p>
    name: opContext
    type: <xref href="com.microsoft.azure.storage.OperationContext?alt=com.microsoft.azure.storage.OperationContext&text=OperationContext" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  summary: >-
    <p>Clears pages from a page blob using the specified lease ID, request options, and operation context. </p>

    <p>Calling  releases the storage space used by the specified pages. Pages that have been cleared are no longer tracked as part of the page blob, and no longer incur a charge against the storage account.</p>

    <p></p>
  syntax: public void clearPages(final long offset, final long length, final AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  uid: com.microsoft.azure.storage.blob.CloudPageBlob.clearPages(final long,final long,final AccessCondition,BlobRequestOptions,OperationContext)
- fullName: com.microsoft.azure.storage.blob.CloudPageBlob.create(final long length)
  name: create(final long length)
  nameWithType: CloudPageBlob.create(final long length)
  parameters:
  - description: <p>A <code>long</code> which represents the size, in bytes, of the page blob.</p>
    name: length
    type: <xref href="final+long?alt=final+long&text=final+long" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>If the length is not a multiple of 512. </p>
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  summary: <p>Creates a page blob. If the blob already exists, this will replace it. To instead throw an error if the blob already exists, use the <xref uid="com.microsoft.azure.storage.blob.CloudPageBlob.create(final long,final AccessCondition,BlobRequestOptions,OperationContext)" data-throw-if-not-resolved="false" data-raw-source="create(long, AccessCondition, BlobRequestOptions, OperationContext)"></xref> overload with <xref uid="com.microsoft.azure.storage.AccessCondition.generateIfNotExistsCondition()" data-throw-if-not-resolved="false" data-raw-source="AccessCondition#generateIfNotExistsCondition()"></xref>. </p>
  syntax: public void create(final long length)
  uid: com.microsoft.azure.storage.blob.CloudPageBlob.create(final long)
- fullName: com.microsoft.azure.storage.blob.CloudPageBlob.create(final long length, final AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  name: create(final long length, final AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  nameWithType: CloudPageBlob.create(final long length, final AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  parameters:
  - description: <p>A <code>long</code> which represents the size, in bytes, of the page blob. </p>
    name: length
    type: <xref href="final+long?alt=final+long&text=final+long" data-throw-if-not-resolved="False"/>
  - description: <p>An <xref uid="com.microsoft.azure.storage.AccessCondition" data-throw-if-not-resolved="false" data-raw-source="AccessCondition"></xref> object which represents the access conditions for the blob. </p>
    name: accessCondition
    type: final <xref href="com.microsoft.azure.storage.AccessCondition?alt=com.microsoft.azure.storage.AccessCondition&text=AccessCondition" data-throw-if-not-resolved="False"/>
  - description: <p>A <xref uid="com.microsoft.azure.storage.blob.BlobRequestOptions" data-throw-if-not-resolved="false" data-raw-source="BlobRequestOptions"></xref> object that specifies any additional options for the request. Specifying <code>null</code> will use the default request options from the associated service client ( <xref uid="com.microsoft.azure.storage.blob.CloudBlobClient" data-throw-if-not-resolved="false" data-raw-source="CloudBlobClient"></xref>). </p>
    name: options
    type: <xref href="com.microsoft.azure.storage.blob.BlobRequestOptions?alt=com.microsoft.azure.storage.blob.BlobRequestOptions&text=BlobRequestOptions" data-throw-if-not-resolved="False"/>
  - description: <p>An <xref uid="com.microsoft.azure.storage.OperationContext" data-throw-if-not-resolved="false" data-raw-source="OperationContext"></xref> object which represents the context for the current operation. This object is used to track requests to the storage service, and to provide additional runtime information about the operation.</p>
    name: opContext
    type: <xref href="com.microsoft.azure.storage.OperationContext?alt=com.microsoft.azure.storage.OperationContext&text=OperationContext" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>If the length is not a multiple of 512.</p>
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  summary: >-
    <p>Creates a page blob using the specified request options and operation context. If the blob already exists, this will replace it. To instead throw an error if the blob already exists, use <xref uid="com.microsoft.azure.storage.AccessCondition.generateIfNotExistsCondition()" data-throw-if-not-resolved="false" data-raw-source="AccessCondition#generateIfNotExistsCondition()"></xref>.</p>

    <p></p>
  syntax: public void create(final long length, final AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  uid: com.microsoft.azure.storage.blob.CloudPageBlob.create(final long,final AccessCondition,BlobRequestOptions,OperationContext)
- fullName: com.microsoft.azure.storage.blob.CloudPageBlob.create(final long length, final PremiumPageBlobTier premiumBlobTier, final AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  name: create(final long length, final PremiumPageBlobTier premiumBlobTier, final AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  nameWithType: CloudPageBlob.create(final long length, final PremiumPageBlobTier premiumBlobTier, final AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  parameters:
  - description: <p>A <code>long</code> which represents the size, in bytes, of the page blob. </p>
    name: length
    type: <xref href="final+long?alt=final+long&text=final+long" data-throw-if-not-resolved="False"/>
  - description: <p>A <xref uid="com.microsoft.azure.storage.blob.PremiumPageBlobTier" data-throw-if-not-resolved="false" data-raw-source="PremiumPageBlobTier"></xref> object which represents the tier of the blob. </p>
    name: premiumBlobTier
    type: final <xref href="com.microsoft.azure.storage.blob.PremiumPageBlobTier?alt=com.microsoft.azure.storage.blob.PremiumPageBlobTier&text=PremiumPageBlobTier" data-throw-if-not-resolved="False"/>
  - description: <p>An <xref uid="com.microsoft.azure.storage.AccessCondition" data-throw-if-not-resolved="false" data-raw-source="AccessCondition"></xref> object which represents the access conditions for the blob. </p>
    name: accessCondition
    type: final <xref href="com.microsoft.azure.storage.AccessCondition?alt=com.microsoft.azure.storage.AccessCondition&text=AccessCondition" data-throw-if-not-resolved="False"/>
  - description: <p>A <xref uid="com.microsoft.azure.storage.blob.BlobRequestOptions" data-throw-if-not-resolved="false" data-raw-source="BlobRequestOptions"></xref> object that specifies any additional options for the request. Specifying <code>null</code> will use the default request options from the associated service client ( <xref uid="com.microsoft.azure.storage.blob.CloudBlobClient" data-throw-if-not-resolved="false" data-raw-source="CloudBlobClient"></xref>). </p>
    name: options
    type: <xref href="com.microsoft.azure.storage.blob.BlobRequestOptions?alt=com.microsoft.azure.storage.blob.BlobRequestOptions&text=BlobRequestOptions" data-throw-if-not-resolved="False"/>
  - description: <p>An <xref uid="com.microsoft.azure.storage.OperationContext" data-throw-if-not-resolved="false" data-raw-source="OperationContext"></xref> object which represents the context for the current operation. This object is used to track requests to the storage service, and to provide additional runtime information about the operation.</p>
    name: opContext
    type: <xref href="com.microsoft.azure.storage.OperationContext?alt=com.microsoft.azure.storage.OperationContext&text=OperationContext" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>If the length is not a multiple of 512.</p>
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  summary: >-
    <p>Creates a page blob using the specified request options and operation context. If the blob already exists, this will replace it. To instead throw an error if the blob already exists, use <xref uid="com.microsoft.azure.storage.AccessCondition.generateIfNotExistsCondition()" data-throw-if-not-resolved="false" data-raw-source="AccessCondition#generateIfNotExistsCondition()"></xref>.</p>

    <p></p>
  syntax: public void create(final long length, final PremiumPageBlobTier premiumBlobTier, final AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  uid: com.microsoft.azure.storage.blob.CloudPageBlob.create(final long,final PremiumPageBlobTier,final AccessCondition,BlobRequestOptions,OperationContext)
- fullName: com.microsoft.azure.storage.blob.CloudPageBlob.downloadPageRanges()
  name: downloadPageRanges()
  nameWithType: CloudPageBlob.downloadPageRanges()
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  returns:
    description: <p>An <code>ArrayList</code> object which represents the set of page ranges and their starting and ending byte offsets.</p>
    type: ArrayList&lt;<xref href="com.microsoft.azure.storage.blob.PageRange?alt=com.microsoft.azure.storage.blob.PageRange&text=PageRange" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Returns a collection of page ranges and their starting and ending byte offsets. </p>

    <p>The start and end byte offsets for each page range are inclusive.</p>

    <p></p>
  syntax: public ArrayList<PageRange> downloadPageRanges()
  uid: com.microsoft.azure.storage.blob.CloudPageBlob.downloadPageRanges()
- fullName: com.microsoft.azure.storage.blob.CloudPageBlob.downloadPageRanges(final AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  name: downloadPageRanges(final AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  nameWithType: CloudPageBlob.downloadPageRanges(final AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  parameters:
  - description: <p>An <xref uid="com.microsoft.azure.storage.AccessCondition" data-throw-if-not-resolved="false" data-raw-source="AccessCondition"></xref> object which represents the access conditions for the blob. </p>
    name: accessCondition
    type: final <xref href="com.microsoft.azure.storage.AccessCondition?alt=com.microsoft.azure.storage.AccessCondition&text=AccessCondition" data-throw-if-not-resolved="False"/>
  - description: <p>A <xref uid="com.microsoft.azure.storage.blob.BlobRequestOptions" data-throw-if-not-resolved="false" data-raw-source="BlobRequestOptions"></xref> object that specifies any additional options for the request. Specifying <code>null</code> will use the default request options from the associated service client ( <xref uid="com.microsoft.azure.storage.blob.CloudBlobClient" data-throw-if-not-resolved="false" data-raw-source="CloudBlobClient"></xref>). </p>
    name: options
    type: <xref href="com.microsoft.azure.storage.blob.BlobRequestOptions?alt=com.microsoft.azure.storage.blob.BlobRequestOptions&text=BlobRequestOptions" data-throw-if-not-resolved="False"/>
  - description: <p>An <xref uid="com.microsoft.azure.storage.OperationContext" data-throw-if-not-resolved="false" data-raw-source="OperationContext"></xref> object which represents the context for the current operation. This object is used to track requests to the storage service, and to provide additional runtime information about the operation.</p>
    name: opContext
    type: <xref href="com.microsoft.azure.storage.OperationContext?alt=com.microsoft.azure.storage.OperationContext&text=OperationContext" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  returns:
    description: <p>An <code>ArrayList</code> object which represents the set of page ranges and their starting and ending byte offsets.</p>
    type: ArrayList&lt;<xref href="com.microsoft.azure.storage.blob.PageRange?alt=com.microsoft.azure.storage.blob.PageRange&text=PageRange" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Returns a collection of page ranges and their starting and ending byte offsets using the specified request options and operation context.</p>

    <p></p>
  syntax: public ArrayList<PageRange> downloadPageRanges(final AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  uid: com.microsoft.azure.storage.blob.CloudPageBlob.downloadPageRanges(final AccessCondition,BlobRequestOptions,OperationContext)
- fullName: com.microsoft.azure.storage.blob.CloudPageBlob.downloadPageRanges(final long offset, final Long length)
  name: downloadPageRanges(final long offset, final Long length)
  nameWithType: CloudPageBlob.downloadPageRanges(final long offset, final Long length)
  parameters:
  - description: <p>The starting offset of the data range over which to list page ranges, in bytes. Must be a multiple of 512. </p>
    name: offset
    type: <xref href="final+long?alt=final+long&text=final+long" data-throw-if-not-resolved="False"/>
  - description: <p>The length of the data range over which to list page ranges, in bytes. Must be a multiple of 512. </p>
    name: length
    type: <xref href="final+Long?alt=final+Long&text=final+Long" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  returns:
    description: <p>A <code>List</code> object which represents the set of page ranges and their starting and ending byte offsets.</p>
    type: List&lt;<xref href="com.microsoft.azure.storage.blob.PageRange?alt=com.microsoft.azure.storage.blob.PageRange&text=PageRange" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Returns a collection of page ranges and their starting and ending byte offsets.</p>

    <p></p>
  syntax: public List<PageRange> downloadPageRanges(final long offset, final Long length)
  uid: com.microsoft.azure.storage.blob.CloudPageBlob.downloadPageRanges(final long,final Long)
- fullName: com.microsoft.azure.storage.blob.CloudPageBlob.downloadPageRanges(final long offset, final Long length, final AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  name: downloadPageRanges(final long offset, final Long length, final AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  nameWithType: CloudPageBlob.downloadPageRanges(final long offset, final Long length, final AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  parameters:
  - description: <p>The starting offset of the data range over which to list page ranges, in bytes. Must be a multiple of 512. </p>
    name: offset
    type: <xref href="final+long?alt=final+long&text=final+long" data-throw-if-not-resolved="False"/>
  - description: <p>The length of the data range over which to list page ranges, in bytes. Must be a multiple of 512. </p>
    name: length
    type: <xref href="final+Long?alt=final+Long&text=final+Long" data-throw-if-not-resolved="False"/>
  - description: <p>An <xref uid="com.microsoft.azure.storage.AccessCondition" data-throw-if-not-resolved="false" data-raw-source="AccessCondition"></xref> object which represents the access conditions for the blob. </p>
    name: accessCondition
    type: final <xref href="com.microsoft.azure.storage.AccessCondition?alt=com.microsoft.azure.storage.AccessCondition&text=AccessCondition" data-throw-if-not-resolved="False"/>
  - description: <p>A <xref uid="com.microsoft.azure.storage.blob.BlobRequestOptions" data-throw-if-not-resolved="false" data-raw-source="BlobRequestOptions"></xref> object that specifies any additional options for the request. Specifying <code>null</code> will use the default request options from the associated service client ( <xref uid="com.microsoft.azure.storage.blob.CloudBlobClient" data-throw-if-not-resolved="false" data-raw-source="CloudBlobClient"></xref>). </p>
    name: options
    type: <xref href="com.microsoft.azure.storage.blob.BlobRequestOptions?alt=com.microsoft.azure.storage.blob.BlobRequestOptions&text=BlobRequestOptions" data-throw-if-not-resolved="False"/>
  - description: <p>An <xref uid="com.microsoft.azure.storage.OperationContext" data-throw-if-not-resolved="false" data-raw-source="OperationContext"></xref> object which represents the context for the current operation. This object is used to track requests to the storage service, and to provide additional runtime information about the operation.</p>
    name: opContext
    type: <xref href="com.microsoft.azure.storage.OperationContext?alt=com.microsoft.azure.storage.OperationContext&text=OperationContext" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  returns:
    description: <p>A <code>List</code> object which represents the set of page ranges and their starting and ending byte offsets.</p>
    type: List&lt;<xref href="com.microsoft.azure.storage.blob.PageRange?alt=com.microsoft.azure.storage.blob.PageRange&text=PageRange" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Returns a collection of page ranges and their starting and ending byte offsets using the specified request options and operation context.</p>

    <p></p>
  syntax: public List<PageRange> downloadPageRanges(final long offset, final Long length, final AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  uid: com.microsoft.azure.storage.blob.CloudPageBlob.downloadPageRanges(final long,final Long,final AccessCondition,BlobRequestOptions,OperationContext)
- fullName: com.microsoft.azure.storage.blob.CloudPageBlob.downloadPageRangesDiff(final String previousSnapshot)
  name: downloadPageRangesDiff(final String previousSnapshot)
  nameWithType: CloudPageBlob.downloadPageRangesDiff(final String previousSnapshot)
  parameters:
  - description: <p>A string representing the snapshot to use as the starting point for the diff. If this CloudPageBlob represents a snapshot, the previousSnapshot parameter must be prior to the current snapshot. </p>
    name: previousSnapshot
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  returns:
    description: <p>A <code>List</code> object containing the set of differing page ranges.</p>
    type: List&lt;<xref href="com.microsoft.azure.storage.blob.PageRangeDiff?alt=com.microsoft.azure.storage.blob.PageRangeDiff&text=PageRangeDiff" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Gets the collection of page ranges that differ between a specified snapshot and this object.</p>

    <p></p>
  syntax: public List<PageRangeDiff> downloadPageRangesDiff(final String previousSnapshot)
  uid: com.microsoft.azure.storage.blob.CloudPageBlob.downloadPageRangesDiff(final String)
- fullName: com.microsoft.azure.storage.blob.CloudPageBlob.downloadPageRangesDiff(final String previousSnapshot, final Long offset, final Long length, final AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  name: downloadPageRangesDiff(final String previousSnapshot, final Long offset, final Long length, final AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  nameWithType: CloudPageBlob.downloadPageRangesDiff(final String previousSnapshot, final Long offset, final Long length, final AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  parameters:
  - description: <p>A string representing the snapshot timestamp to use as the starting point for the diff. If this CloudPageBlob represents a snapshot, the previousSnapshot parameter must be prior to the current snapshot. </p>
    name: previousSnapshot
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>The starting offset of the data range over which to list page ranges, in bytes. Must be a multiple of 512. </p>
    name: offset
    type: <xref href="final+Long?alt=final+Long&text=final+Long" data-throw-if-not-resolved="False"/>
  - description: <p>The length of the data range over which to list page ranges, in bytes. Must be a multiple of 512. </p>
    name: length
    type: <xref href="final+Long?alt=final+Long&text=final+Long" data-throw-if-not-resolved="False"/>
  - description: <p>An <xref uid="com.microsoft.azure.storage.AccessCondition" data-throw-if-not-resolved="false" data-raw-source="AccessCondition"></xref> object which represents the access conditions for the blob. </p>
    name: accessCondition
    type: final <xref href="com.microsoft.azure.storage.AccessCondition?alt=com.microsoft.azure.storage.AccessCondition&text=AccessCondition" data-throw-if-not-resolved="False"/>
  - description: <p>A <xref uid="com.microsoft.azure.storage.blob.BlobRequestOptions" data-throw-if-not-resolved="false" data-raw-source="BlobRequestOptions"></xref> object that specifies any additional options for the request. Specifying <code>null</code> will use the default request options from the associated service client ( <xref uid="com.microsoft.azure.storage.blob.CloudBlobClient" data-throw-if-not-resolved="false" data-raw-source="CloudBlobClient"></xref>). </p>
    name: options
    type: <xref href="com.microsoft.azure.storage.blob.BlobRequestOptions?alt=com.microsoft.azure.storage.blob.BlobRequestOptions&text=BlobRequestOptions" data-throw-if-not-resolved="False"/>
  - description: <p>An <xref uid="com.microsoft.azure.storage.OperationContext" data-throw-if-not-resolved="false" data-raw-source="OperationContext"></xref> object which represents the context for the current operation. This object is used to track requests to the storage service, and to provide additional runtime information about the operation.</p>
    name: opContext
    type: <xref href="com.microsoft.azure.storage.OperationContext?alt=com.microsoft.azure.storage.OperationContext&text=OperationContext" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  returns:
    description: <p>A <code>List</code> object containing the set of differing page ranges.</p>
    type: List&lt;<xref href="com.microsoft.azure.storage.blob.PageRangeDiff?alt=com.microsoft.azure.storage.blob.PageRangeDiff&text=PageRangeDiff" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Gets the collection of page ranges that differ between a specified snapshot and this object.</p>

    <p></p>
  syntax: public List<PageRangeDiff> downloadPageRangesDiff(final String previousSnapshot, final Long offset, final Long length, final AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  uid: com.microsoft.azure.storage.blob.CloudPageBlob.downloadPageRangesDiff(final String,final Long,final Long,final AccessCondition,BlobRequestOptions,OperationContext)
- fullName: com.microsoft.azure.storage.blob.CloudPageBlob.openWriteExisting()
  name: openWriteExisting()
  nameWithType: CloudPageBlob.openWriteExisting()
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  returns:
    description: <p>A <xref uid="com.microsoft.azure.storage.blob.BlobOutputStream" data-throw-if-not-resolved="false" data-raw-source="BlobOutputStream"></xref> object used to write data to the blob.</p>
    type: <xref href="com.microsoft.azure.storage.blob.BlobOutputStream?alt=com.microsoft.azure.storage.blob.BlobOutputStream&text=BlobOutputStream" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Opens an output stream object to write data to the page blob. The page blob must already exist and any existing data may be overwritten.</p>

    <p></p>
  syntax: public BlobOutputStream openWriteExisting()
  uid: com.microsoft.azure.storage.blob.CloudPageBlob.openWriteExisting()
- fullName: com.microsoft.azure.storage.blob.CloudPageBlob.openWriteExisting(AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  name: openWriteExisting(AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  nameWithType: CloudPageBlob.openWriteExisting(AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  parameters:
  - description: <p>An <xref uid="com.microsoft.azure.storage.AccessCondition" data-throw-if-not-resolved="false" data-raw-source="AccessCondition"></xref> object which represents the access conditions for the blob. </p>
    name: accessCondition
    type: <xref href="com.microsoft.azure.storage.AccessCondition?alt=com.microsoft.azure.storage.AccessCondition&text=AccessCondition" data-throw-if-not-resolved="False"/>
  - description: <p>A <xref uid="com.microsoft.azure.storage.blob.BlobRequestOptions" data-throw-if-not-resolved="false" data-raw-source="BlobRequestOptions"></xref> object that specifies any additional options for the request. Specifying <code>null</code> will use the default request options from the associated service client ( <xref uid="com.microsoft.azure.storage.blob.CloudBlobClient" data-throw-if-not-resolved="false" data-raw-source="CloudBlobClient"></xref>). </p>
    name: options
    type: <xref href="com.microsoft.azure.storage.blob.BlobRequestOptions?alt=com.microsoft.azure.storage.blob.BlobRequestOptions&text=BlobRequestOptions" data-throw-if-not-resolved="False"/>
  - description: <p>An <xref uid="com.microsoft.azure.storage.OperationContext" data-throw-if-not-resolved="false" data-raw-source="OperationContext"></xref> object which represents the context for the current operation. This object is used to track requests to the storage service, and to provide additional runtime information about the operation.</p>
    name: opContext
    type: <xref href="com.microsoft.azure.storage.OperationContext?alt=com.microsoft.azure.storage.OperationContext&text=OperationContext" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  returns:
    description: <p>A <xref uid="com.microsoft.azure.storage.blob.BlobOutputStream" data-throw-if-not-resolved="false" data-raw-source="BlobOutputStream"></xref> object used to write data to the blob.</p>
    type: <xref href="com.microsoft.azure.storage.blob.BlobOutputStream?alt=com.microsoft.azure.storage.blob.BlobOutputStream&text=BlobOutputStream" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Opens an output stream object to write data to the page blob, using the specified lease ID, request options and operation context. The page blob must already exist and any existing data may be overwritten.</p>

    <p></p>
  syntax: public BlobOutputStream openWriteExisting(AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  uid: com.microsoft.azure.storage.blob.CloudPageBlob.openWriteExisting(AccessCondition,BlobRequestOptions,OperationContext)
- fullName: com.microsoft.azure.storage.blob.CloudPageBlob.openWriteNew(final long length)
  name: openWriteNew(final long length)
  nameWithType: CloudPageBlob.openWriteNew(final long length)
  parameters:
  - description: <p>A <code>long</code> which represents the length, in bytes, of the stream to create. This value must be a multiple of 512.</p>
    name: length
    type: <xref href="final+long?alt=final+long&text=final+long" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  returns:
    description: <p>A <xref uid="com.microsoft.azure.storage.blob.BlobOutputStream" data-throw-if-not-resolved="false" data-raw-source="BlobOutputStream"></xref> object used to write data to the blob.</p>
    type: <xref href="com.microsoft.azure.storage.blob.BlobOutputStream?alt=com.microsoft.azure.storage.blob.BlobOutputStream&text=BlobOutputStream" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Opens an output stream object to write data to the page blob. The page blob does not need to yet exist and will be created with the length specified. If the blob already exists on the service, it will be overwritten. </p>

    <p>To avoid overwriting and instead throw an error, please use the <xref uid="com.microsoft.azure.storage.blob.CloudPageBlob.openWriteNew(final long,AccessCondition,BlobRequestOptions,OperationContext)" data-throw-if-not-resolved="false" data-raw-source="openWriteNew(long, AccessCondition, BlobRequestOptions, OperationContext)"></xref> overload with the appropriate <xref uid="com.microsoft.azure.storage.AccessCondition" data-throw-if-not-resolved="false" data-raw-source="AccessCondition"></xref>.</p>

    <p></p>
  syntax: public BlobOutputStream openWriteNew(final long length)
  uid: com.microsoft.azure.storage.blob.CloudPageBlob.openWriteNew(final long)
- fullName: com.microsoft.azure.storage.blob.CloudPageBlob.openWriteNew(final long length, AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  name: openWriteNew(final long length, AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  nameWithType: CloudPageBlob.openWriteNew(final long length, AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  parameters:
  - description: <p>A <code>long</code> which represents the length, in bytes, of the stream to create. This value must be a multiple of 512. </p>
    name: length
    type: <xref href="final+long?alt=final+long&text=final+long" data-throw-if-not-resolved="False"/>
  - description: <p>An <xref uid="com.microsoft.azure.storage.AccessCondition" data-throw-if-not-resolved="false" data-raw-source="AccessCondition"></xref> object which represents the access conditions for the blob. </p>
    name: accessCondition
    type: <xref href="com.microsoft.azure.storage.AccessCondition?alt=com.microsoft.azure.storage.AccessCondition&text=AccessCondition" data-throw-if-not-resolved="False"/>
  - description: <p>A <xref uid="com.microsoft.azure.storage.blob.BlobRequestOptions" data-throw-if-not-resolved="false" data-raw-source="BlobRequestOptions"></xref> object that specifies any additional options for the request. Specifying <code>null</code> will use the default request options from the associated service client ( <xref uid="com.microsoft.azure.storage.blob.CloudBlobClient" data-throw-if-not-resolved="false" data-raw-source="CloudBlobClient"></xref>). </p>
    name: options
    type: <xref href="com.microsoft.azure.storage.blob.BlobRequestOptions?alt=com.microsoft.azure.storage.blob.BlobRequestOptions&text=BlobRequestOptions" data-throw-if-not-resolved="False"/>
  - description: <p>An <xref uid="com.microsoft.azure.storage.OperationContext" data-throw-if-not-resolved="false" data-raw-source="OperationContext"></xref> object which represents the context for the current operation. This object is used to track requests to the storage service, and to provide additional runtime information about the operation.</p>
    name: opContext
    type: <xref href="com.microsoft.azure.storage.OperationContext?alt=com.microsoft.azure.storage.OperationContext&text=OperationContext" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  returns:
    description: <p>A <xref uid="com.microsoft.azure.storage.blob.BlobOutputStream" data-throw-if-not-resolved="false" data-raw-source="BlobOutputStream"></xref> object used to write data to the blob.</p>
    type: <xref href="com.microsoft.azure.storage.blob.BlobOutputStream?alt=com.microsoft.azure.storage.blob.BlobOutputStream&text=BlobOutputStream" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Opens an output stream object to write data to the page blob, using the specified lease ID, request options and operation context. The page blob does not need to yet exist and will be created with the length specified.If the blob already exists on the service, it will be overwritten. </p>

    <p>To avoid overwriting and instead throw an error, please pass in an <xref uid="com.microsoft.azure.storage.AccessCondition" data-throw-if-not-resolved="false" data-raw-source="AccessCondition"></xref> generated using <xref uid="com.microsoft.azure.storage.AccessCondition.generateIfNotExistsCondition()" data-throw-if-not-resolved="false" data-raw-source="AccessCondition#generateIfNotExistsCondition()"></xref>.</p>

    <p></p>
  syntax: public BlobOutputStream openWriteNew(final long length, AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  uid: com.microsoft.azure.storage.blob.CloudPageBlob.openWriteNew(final long,AccessCondition,BlobRequestOptions,OperationContext)
- fullName: com.microsoft.azure.storage.blob.CloudPageBlob.openWriteNew(final long length, final PremiumPageBlobTier premiumBlobTier, AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  name: openWriteNew(final long length, final PremiumPageBlobTier premiumBlobTier, AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  nameWithType: CloudPageBlob.openWriteNew(final long length, final PremiumPageBlobTier premiumBlobTier, AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  parameters:
  - description: <p>A <code>long</code> which represents the length, in bytes, of the stream to create. This value must be a multiple of 512. </p>
    name: length
    type: <xref href="final+long?alt=final+long&text=final+long" data-throw-if-not-resolved="False"/>
  - description: <p>A <xref uid="com.microsoft.azure.storage.blob.PremiumPageBlobTier" data-throw-if-not-resolved="false" data-raw-source="PremiumPageBlobTier"></xref> object which represents the tier of the blob. </p>
    name: premiumBlobTier
    type: final <xref href="com.microsoft.azure.storage.blob.PremiumPageBlobTier?alt=com.microsoft.azure.storage.blob.PremiumPageBlobTier&text=PremiumPageBlobTier" data-throw-if-not-resolved="False"/>
  - description: <p>An <xref uid="com.microsoft.azure.storage.AccessCondition" data-throw-if-not-resolved="false" data-raw-source="AccessCondition"></xref> object which represents the access conditions for the blob. </p>
    name: accessCondition
    type: <xref href="com.microsoft.azure.storage.AccessCondition?alt=com.microsoft.azure.storage.AccessCondition&text=AccessCondition" data-throw-if-not-resolved="False"/>
  - description: <p>A <xref uid="com.microsoft.azure.storage.blob.BlobRequestOptions" data-throw-if-not-resolved="false" data-raw-source="BlobRequestOptions"></xref> object that specifies any additional options for the request. Specifying <code>null</code> will use the default request options from the associated service client ( <xref uid="com.microsoft.azure.storage.blob.CloudBlobClient" data-throw-if-not-resolved="false" data-raw-source="CloudBlobClient"></xref>). </p>
    name: options
    type: <xref href="com.microsoft.azure.storage.blob.BlobRequestOptions?alt=com.microsoft.azure.storage.blob.BlobRequestOptions&text=BlobRequestOptions" data-throw-if-not-resolved="False"/>
  - description: <p>An <xref uid="com.microsoft.azure.storage.OperationContext" data-throw-if-not-resolved="false" data-raw-source="OperationContext"></xref> object which represents the context for the current operation. This object is used to track requests to the storage service, and to provide additional runtime information about the operation.</p>
    name: opContext
    type: <xref href="com.microsoft.azure.storage.OperationContext?alt=com.microsoft.azure.storage.OperationContext&text=OperationContext" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  returns:
    description: <p>A <xref uid="com.microsoft.azure.storage.blob.BlobOutputStream" data-throw-if-not-resolved="false" data-raw-source="BlobOutputStream"></xref> object used to write data to the blob.</p>
    type: <xref href="com.microsoft.azure.storage.blob.BlobOutputStream?alt=com.microsoft.azure.storage.blob.BlobOutputStream&text=BlobOutputStream" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Opens an output stream object to write data to the page blob, using the specified lease ID, request options and operation context. The page blob does not need to yet exist and will be created with the length specified.If the blob already exists on the service, it will be overwritten. </p>

    <p>To avoid overwriting and instead throw an error, please pass in an <xref uid="com.microsoft.azure.storage.AccessCondition" data-throw-if-not-resolved="false" data-raw-source="AccessCondition"></xref> generated using <xref uid="com.microsoft.azure.storage.AccessCondition.generateIfNotExistsCondition()" data-throw-if-not-resolved="false" data-raw-source="AccessCondition#generateIfNotExistsCondition()"></xref>.</p>

    <p></p>
  syntax: public BlobOutputStream openWriteNew(final long length, final PremiumPageBlobTier premiumBlobTier, AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  uid: com.microsoft.azure.storage.blob.CloudPageBlob.openWriteNew(final long,final PremiumPageBlobTier,AccessCondition,BlobRequestOptions,OperationContext)
- fullName: com.microsoft.azure.storage.blob.CloudPageBlob.putPagesFromURI(long offset, long length, final URI copySource, final Long sourceOffset)
  name: putPagesFromURI(long offset, long length, final URI copySource, final Long sourceOffset)
  nameWithType: CloudPageBlob.putPagesFromURI(long offset, long length, final URI copySource, final Long sourceOffset)
  parameters:
  - description: <p>The offset, in bytes, at which to begin writing pages. This value must be a multiple of 512. </p>
    name: offset
    type: <xref href="long?alt=long&text=long" data-throw-if-not-resolved="False"/>
  - description: <p>The length, in bytes, of the data range to be written. This value must be a multiple of 512. This value will also be used as the length of data to copy from the source. </p>
    name: length
    type: <xref href="long?alt=long&text=long" data-throw-if-not-resolved="False"/>
  - description: <p>The <code>URI</code> of the source data. It can point to any Azure Blob or File that is public or the URL can include a shared access signature. </p>
    name: copySource
    type: <xref href="final+URI?alt=final+URI&text=final+URI" data-throw-if-not-resolved="False"/>
  - description: <p>A <code>long</code> which represents the offset to use as the starting point for the source. The length of data to copy from the source will be taken from the source length parameter. </p>
    name: sourceOffset
    type: <xref href="final+Long?alt=final+Long&text=final+Long" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  summary: >-
    <p>Writes a PageRange, using the specified source URL.</p>

    <p></p>
  syntax: public void putPagesFromURI(long offset, long length, final URI copySource, final Long sourceOffset)
  uid: com.microsoft.azure.storage.blob.CloudPageBlob.putPagesFromURI(long,long,final URI,final Long)
- fullName: com.microsoft.azure.storage.blob.CloudPageBlob.putPagesFromURI(long offset, long length, final URI copySource, final Long sourceOffset, String md5, AccessCondition accessCondition, AccessCondition sourceAccessCondition, BlobRequestOptions options, OperationContext opContext)
  name: putPagesFromURI(long offset, long length, final URI copySource, final Long sourceOffset, String md5, AccessCondition accessCondition, AccessCondition sourceAccessCondition, BlobRequestOptions options, OperationContext opContext)
  nameWithType: CloudPageBlob.putPagesFromURI(long offset, long length, final URI copySource, final Long sourceOffset, String md5, AccessCondition accessCondition, AccessCondition sourceAccessCondition, BlobRequestOptions options, OperationContext opContext)
  parameters:
  - description: <p>The offset, in bytes, at which to begin writing pages. This value must be a multiple of 512. </p>
    name: offset
    type: <xref href="long?alt=long&text=long" data-throw-if-not-resolved="False"/>
  - description: <p>The length, in bytes, of the data range to be written. This value must be a multiple of 512. This value will also be used as the length of data to copy from the source. </p>
    name: length
    type: <xref href="long?alt=long&text=long" data-throw-if-not-resolved="False"/>
  - description: <p>The <code>URI</code> of the source data. It can point to any Azure Blob or File that is public or the URL can include a shared access signature. </p>
    name: copySource
    type: <xref href="final+URI?alt=final+URI&text=final+URI" data-throw-if-not-resolved="False"/>
  - description: <p>A <code>long</code> which represents the offset to use as the starting point for the source. The length of data to copy from the source will be taken from the source length parameter. </p>
    name: sourceOffset
    type: <xref href="final+Long?alt=final+Long&text=final+Long" data-throw-if-not-resolved="False"/>
  - description: <p>A <code>String</code> which represents the MD5 hash for the data. </p>
    name: md5
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>An <xref uid="com.microsoft.azure.storage.AccessCondition" data-throw-if-not-resolved="false" data-raw-source="AccessCondition"></xref> object which represents the access conditions for the blob. </p>
    name: accessCondition
    type: <xref href="com.microsoft.azure.storage.AccessCondition?alt=com.microsoft.azure.storage.AccessCondition&text=AccessCondition" data-throw-if-not-resolved="False"/>
  - description: <p>An <xref uid="com.microsoft.azure.storage.AccessCondition" data-throw-if-not-resolved="false" data-raw-source="AccessCondition"></xref> object which represents the access conditions for the source blob. </p>
    name: sourceAccessCondition
    type: <xref href="com.microsoft.azure.storage.AccessCondition?alt=com.microsoft.azure.storage.AccessCondition&text=AccessCondition" data-throw-if-not-resolved="False"/>
  - description: <p>A <xref uid="com.microsoft.azure.storage.blob.BlobRequestOptions" data-throw-if-not-resolved="false" data-raw-source="BlobRequestOptions"></xref> object that specifies any additional options for the request. Specifying <code>null</code> will use the default request options from the associated service client ( <xref uid="com.microsoft.azure.storage.blob.CloudBlobClient" data-throw-if-not-resolved="false" data-raw-source="CloudBlobClient"></xref>). </p>
    name: options
    type: <xref href="com.microsoft.azure.storage.blob.BlobRequestOptions?alt=com.microsoft.azure.storage.blob.BlobRequestOptions&text=BlobRequestOptions" data-throw-if-not-resolved="False"/>
  - description: <p>An <xref uid="com.microsoft.azure.storage.OperationContext" data-throw-if-not-resolved="false" data-raw-source="OperationContext"></xref> object which represents the context for the current operation. This object is used to track requests to the storage service, and to provide additional runtime information about the operation.</p>
    name: opContext
    type: <xref href="com.microsoft.azure.storage.OperationContext?alt=com.microsoft.azure.storage.OperationContext&text=OperationContext" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  summary: >-
    <p>Writes a PageRange, using the specified source URL.</p>

    <p></p>
  syntax: public void putPagesFromURI(long offset, long length, final URI copySource, final Long sourceOffset, String md5, AccessCondition accessCondition, AccessCondition sourceAccessCondition, BlobRequestOptions options, OperationContext opContext)
  uid: com.microsoft.azure.storage.blob.CloudPageBlob.putPagesFromURI(long,long,final URI,final Long,String,AccessCondition,AccessCondition,BlobRequestOptions,OperationContext)
- fullName: com.microsoft.azure.storage.blob.CloudPageBlob.resize(long size)
  name: resize(long size)
  nameWithType: CloudPageBlob.resize(long size)
  parameters:
  - description: <p>A <code>long</code> which represents the size of the page blob, in bytes.</p>
    name: size
    type: <xref href="long?alt=long&text=long" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  summary: >-
    <p>Resizes the page blob to the specified size.</p>

    <p></p>
  syntax: public void resize(long size)
  uid: com.microsoft.azure.storage.blob.CloudPageBlob.resize(long)
- fullName: com.microsoft.azure.storage.blob.CloudPageBlob.resize(long size, AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  name: resize(long size, AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  nameWithType: CloudPageBlob.resize(long size, AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  parameters:
  - description: <p>A <code>long</code> which represents the size of the page blob, in bytes. </p>
    name: size
    type: <xref href="long?alt=long&text=long" data-throw-if-not-resolved="False"/>
  - description: <p>An <xref uid="com.microsoft.azure.storage.AccessCondition" data-throw-if-not-resolved="false" data-raw-source="AccessCondition"></xref> object which represents the access conditions for the blob. </p>
    name: accessCondition
    type: <xref href="com.microsoft.azure.storage.AccessCondition?alt=com.microsoft.azure.storage.AccessCondition&text=AccessCondition" data-throw-if-not-resolved="False"/>
  - description: <p>A <xref uid="com.microsoft.azure.storage.blob.BlobRequestOptions" data-throw-if-not-resolved="false" data-raw-source="BlobRequestOptions"></xref> object that specifies any additional options for the request. Specifying <code>null</code> will use the default request options from the associated service client ( <xref uid="com.microsoft.azure.storage.blob.CloudBlobClient" data-throw-if-not-resolved="false" data-raw-source="CloudBlobClient"></xref>). </p>
    name: options
    type: <xref href="com.microsoft.azure.storage.blob.BlobRequestOptions?alt=com.microsoft.azure.storage.blob.BlobRequestOptions&text=BlobRequestOptions" data-throw-if-not-resolved="False"/>
  - description: <p>An <xref uid="com.microsoft.azure.storage.OperationContext" data-throw-if-not-resolved="false" data-raw-source="OperationContext"></xref> object which represents the context for the current operation. This object is used to track requests to the storage service, and to provide additional runtime information about the operation.</p>
    name: opContext
    type: <xref href="com.microsoft.azure.storage.OperationContext?alt=com.microsoft.azure.storage.OperationContext&text=OperationContext" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  summary: >-
    <p>Resizes the page blob to the specified size.</p>

    <p></p>
  syntax: public void resize(long size, AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  uid: com.microsoft.azure.storage.blob.CloudPageBlob.resize(long,AccessCondition,BlobRequestOptions,OperationContext)
- fullName: com.microsoft.azure.storage.blob.CloudPageBlob.setStreamWriteSizeInBytes(final int streamWriteSizeInBytes)
  name: setStreamWriteSizeInBytes(final int streamWriteSizeInBytes)
  nameWithType: CloudPageBlob.setStreamWriteSizeInBytes(final int streamWriteSizeInBytes)
  parameters:
  - description: <p>An <code>int</code> which represents the maximum number of bytes to buffer when writing to a page blob stream. This value must be a multiple of 512 and less than or equal to 4 MB.</p>
    name: streamWriteSizeInBytes
    type: <xref href="final+int?alt=final+int&text=final+int" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>If <code>streamWriteSizeInBytes</code> is less than 512, greater than 4 MB, or not a multiple or 512. </p>
  summary: >-
    <p>Sets the number of bytes to buffer when writing to a <xref uid="com.microsoft.azure.storage.blob.BlobOutputStream" data-throw-if-not-resolved="false" data-raw-source="BlobOutputStream"></xref>.</p>

    <p></p>
  syntax: public void setStreamWriteSizeInBytes(final int streamWriteSizeInBytes)
  uid: com.microsoft.azure.storage.blob.CloudPageBlob.setStreamWriteSizeInBytes(final int)
- fullName: com.microsoft.azure.storage.blob.CloudPageBlob.startCopy(final CloudPageBlob sourceBlob)
  name: startCopy(final CloudPageBlob sourceBlob)
  nameWithType: CloudPageBlob.startCopy(final CloudPageBlob sourceBlob)
  parameters:
  - description: <p>A <code>CloudPageBlob</code> object that represents the source blob to copy.</p>
    name: sourceBlob
    type: final <xref href="com.microsoft.azure.storage.blob.CloudPageBlob?alt=com.microsoft.azure.storage.blob.CloudPageBlob&text=CloudPageBlob" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  - type: <xref href="URISyntaxException?alt=URISyntaxException&text=URISyntaxException" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>A <code>String</code> which represents the copy ID associated with the copy operation.</p>
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Requests the service to start copying a blob's contents, properties, and metadata to a new blob.</p>

    <p></p>
  syntax: public final String startCopy(final CloudPageBlob sourceBlob)
  uid: com.microsoft.azure.storage.blob.CloudPageBlob.startCopy(final CloudPageBlob)
- fullName: com.microsoft.azure.storage.blob.CloudPageBlob.startCopy(final CloudPageBlob sourceBlob, final AccessCondition sourceAccessCondition, final AccessCondition destinationAccessCondition, BlobRequestOptions options, OperationContext opContext)
  name: startCopy(final CloudPageBlob sourceBlob, final AccessCondition sourceAccessCondition, final AccessCondition destinationAccessCondition, BlobRequestOptions options, OperationContext opContext)
  nameWithType: CloudPageBlob.startCopy(final CloudPageBlob sourceBlob, final AccessCondition sourceAccessCondition, final AccessCondition destinationAccessCondition, BlobRequestOptions options, OperationContext opContext)
  parameters:
  - description: <p>A <code>CloudPageBlob</code> object that represents the source blob to copy. </p>
    name: sourceBlob
    type: final <xref href="com.microsoft.azure.storage.blob.CloudPageBlob?alt=com.microsoft.azure.storage.blob.CloudPageBlob&text=CloudPageBlob" data-throw-if-not-resolved="False"/>
  - description: <p>An <xref uid="com.microsoft.azure.storage.AccessCondition" data-throw-if-not-resolved="false" data-raw-source="AccessCondition"></xref> object that represents the access conditions for the source blob. </p>
    name: sourceAccessCondition
    type: final <xref href="com.microsoft.azure.storage.AccessCondition?alt=com.microsoft.azure.storage.AccessCondition&text=AccessCondition" data-throw-if-not-resolved="False"/>
  - description: <p>An <xref uid="com.microsoft.azure.storage.AccessCondition" data-throw-if-not-resolved="false" data-raw-source="AccessCondition"></xref> object that represents the access conditions for the destination blob. </p>
    name: destinationAccessCondition
    type: final <xref href="com.microsoft.azure.storage.AccessCondition?alt=com.microsoft.azure.storage.AccessCondition&text=AccessCondition" data-throw-if-not-resolved="False"/>
  - description: <p>A <xref uid="com.microsoft.azure.storage.blob.BlobRequestOptions" data-throw-if-not-resolved="false" data-raw-source="BlobRequestOptions"></xref> object that specifies any additional options for the request. Specifying <code>null</code> will use the default request options from the associated service client ( <xref uid="com.microsoft.azure.storage.blob.CloudBlobClient" data-throw-if-not-resolved="false" data-raw-source="CloudBlobClient"></xref>). </p>
    name: options
    type: <xref href="com.microsoft.azure.storage.blob.BlobRequestOptions?alt=com.microsoft.azure.storage.blob.BlobRequestOptions&text=BlobRequestOptions" data-throw-if-not-resolved="False"/>
  - description: <p>An <xref uid="com.microsoft.azure.storage.OperationContext" data-throw-if-not-resolved="false" data-raw-source="OperationContext"></xref> object that represents the context for the current operation. This object is used to track requests to the storage service, and to provide additional runtime information about the operation.</p>
    name: opContext
    type: <xref href="com.microsoft.azure.storage.OperationContext?alt=com.microsoft.azure.storage.OperationContext&text=OperationContext" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  - type: <xref href="URISyntaxException?alt=URISyntaxException&text=URISyntaxException" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>A <code>String</code> which represents the copy ID associated with the copy operation.</p>
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Requests the service to start copying a blob's contents, properties, and metadata to a new blob, using the specified access conditions, lease ID, request options, and operation context.</p>

    <p></p>
  syntax: public final String startCopy(final CloudPageBlob sourceBlob, final AccessCondition sourceAccessCondition, final AccessCondition destinationAccessCondition, BlobRequestOptions options, OperationContext opContext)
  uid: com.microsoft.azure.storage.blob.CloudPageBlob.startCopy(final CloudPageBlob,final AccessCondition,final AccessCondition,BlobRequestOptions,OperationContext)
- fullName: com.microsoft.azure.storage.blob.CloudPageBlob.startCopy(final CloudPageBlob sourceBlob, final PremiumPageBlobTier premiumBlobTier, final AccessCondition sourceAccessCondition, final AccessCondition destinationAccessCondition, BlobRequestOptions options, OperationContext opContext)
  name: startCopy(final CloudPageBlob sourceBlob, final PremiumPageBlobTier premiumBlobTier, final AccessCondition sourceAccessCondition, final AccessCondition destinationAccessCondition, BlobRequestOptions options, OperationContext opContext)
  nameWithType: CloudPageBlob.startCopy(final CloudPageBlob sourceBlob, final PremiumPageBlobTier premiumBlobTier, final AccessCondition sourceAccessCondition, final AccessCondition destinationAccessCondition, BlobRequestOptions options, OperationContext opContext)
  parameters:
  - description: <p>A <code>CloudPageBlob</code> object that represents the source blob to copy. </p>
    name: sourceBlob
    type: final <xref href="com.microsoft.azure.storage.blob.CloudPageBlob?alt=com.microsoft.azure.storage.blob.CloudPageBlob&text=CloudPageBlob" data-throw-if-not-resolved="False"/>
  - description: <p>A <xref uid="com.microsoft.azure.storage.blob.PremiumPageBlobTier" data-throw-if-not-resolved="false" data-raw-source="PremiumPageBlobTier"></xref> object which represents the tier of the blob. </p>
    name: premiumBlobTier
    type: final <xref href="com.microsoft.azure.storage.blob.PremiumPageBlobTier?alt=com.microsoft.azure.storage.blob.PremiumPageBlobTier&text=PremiumPageBlobTier" data-throw-if-not-resolved="False"/>
  - description: <p>An <xref uid="com.microsoft.azure.storage.AccessCondition" data-throw-if-not-resolved="false" data-raw-source="AccessCondition"></xref> object that represents the access conditions for the source blob. </p>
    name: sourceAccessCondition
    type: final <xref href="com.microsoft.azure.storage.AccessCondition?alt=com.microsoft.azure.storage.AccessCondition&text=AccessCondition" data-throw-if-not-resolved="False"/>
  - description: <p>An <xref uid="com.microsoft.azure.storage.AccessCondition" data-throw-if-not-resolved="false" data-raw-source="AccessCondition"></xref> object that represents the access conditions for the destination blob. </p>
    name: destinationAccessCondition
    type: final <xref href="com.microsoft.azure.storage.AccessCondition?alt=com.microsoft.azure.storage.AccessCondition&text=AccessCondition" data-throw-if-not-resolved="False"/>
  - description: <p>A <xref uid="com.microsoft.azure.storage.blob.BlobRequestOptions" data-throw-if-not-resolved="false" data-raw-source="BlobRequestOptions"></xref> object that specifies any additional options for the request. Specifying <code>null</code> will use the default request options from the associated service client ( <xref uid="com.microsoft.azure.storage.blob.CloudBlobClient" data-throw-if-not-resolved="false" data-raw-source="CloudBlobClient"></xref>). </p>
    name: options
    type: <xref href="com.microsoft.azure.storage.blob.BlobRequestOptions?alt=com.microsoft.azure.storage.blob.BlobRequestOptions&text=BlobRequestOptions" data-throw-if-not-resolved="False"/>
  - description: <p>An <xref uid="com.microsoft.azure.storage.OperationContext" data-throw-if-not-resolved="false" data-raw-source="OperationContext"></xref> object that represents the context for the current operation. This object is used to track requests to the storage service, and to provide additional runtime information about the operation.</p>
    name: opContext
    type: <xref href="com.microsoft.azure.storage.OperationContext?alt=com.microsoft.azure.storage.OperationContext&text=OperationContext" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  - type: <xref href="URISyntaxException?alt=URISyntaxException&text=URISyntaxException" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>A <code>String</code> which represents the copy ID associated with the copy operation.</p>
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Requests the service to start copying a blob's contents, properties, and metadata to a new blob, using the specified blob tier, access conditions, lease ID, request options, and operation context.</p>

    <p></p>
  syntax: public final String startCopy(final CloudPageBlob sourceBlob, final PremiumPageBlobTier premiumBlobTier, final AccessCondition sourceAccessCondition, final AccessCondition destinationAccessCondition, BlobRequestOptions options, OperationContext opContext)
  uid: com.microsoft.azure.storage.blob.CloudPageBlob.startCopy(final CloudPageBlob,final PremiumPageBlobTier,final AccessCondition,final AccessCondition,BlobRequestOptions,OperationContext)
- fullName: com.microsoft.azure.storage.blob.CloudPageBlob.startIncrementalCopy(final CloudPageBlob sourceSnapshot)
  name: startIncrementalCopy(final CloudPageBlob sourceSnapshot)
  nameWithType: CloudPageBlob.startIncrementalCopy(final CloudPageBlob sourceSnapshot)
  parameters:
  - description: <p>A <code>CloudPageBlob</code> object that represents the source blob to copy. Must be a snapshot.</p>
    name: sourceSnapshot
    type: final <xref href="com.microsoft.azure.storage.blob.CloudPageBlob?alt=com.microsoft.azure.storage.blob.CloudPageBlob&text=CloudPageBlob" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  - type: <xref href="URISyntaxException?alt=URISyntaxException&text=URISyntaxException" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>A <code>String</code> which represents the copy ID associated with the copy operation.</p>
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Requests the service to start an incremental copy of another page blob's contents, properties, and metadata to this blob.</p>

    <p></p>
  syntax: public final String startIncrementalCopy(final CloudPageBlob sourceSnapshot)
  uid: com.microsoft.azure.storage.blob.CloudPageBlob.startIncrementalCopy(final CloudPageBlob)
- fullName: com.microsoft.azure.storage.blob.CloudPageBlob.startIncrementalCopy(final CloudPageBlob sourceSnapshot, final AccessCondition destinationAccessCondition, BlobRequestOptions options, OperationContext opContext)
  name: startIncrementalCopy(final CloudPageBlob sourceSnapshot, final AccessCondition destinationAccessCondition, BlobRequestOptions options, OperationContext opContext)
  nameWithType: CloudPageBlob.startIncrementalCopy(final CloudPageBlob sourceSnapshot, final AccessCondition destinationAccessCondition, BlobRequestOptions options, OperationContext opContext)
  parameters:
  - description: <p>A <code>CloudPageBlob</code> object that represents the source blob to copy. Must be a snapshot. </p>
    name: sourceSnapshot
    type: final <xref href="com.microsoft.azure.storage.blob.CloudPageBlob?alt=com.microsoft.azure.storage.blob.CloudPageBlob&text=CloudPageBlob" data-throw-if-not-resolved="False"/>
  - description: <p>An <xref uid="com.microsoft.azure.storage.AccessCondition" data-throw-if-not-resolved="false" data-raw-source="AccessCondition"></xref> object that represents the access conditions for the destination blob. </p>
    name: destinationAccessCondition
    type: final <xref href="com.microsoft.azure.storage.AccessCondition?alt=com.microsoft.azure.storage.AccessCondition&text=AccessCondition" data-throw-if-not-resolved="False"/>
  - description: <p>A <xref uid="com.microsoft.azure.storage.blob.BlobRequestOptions" data-throw-if-not-resolved="false" data-raw-source="BlobRequestOptions"></xref> object that specifies any additional options for the request. Specifying <code>null</code> will use the default request options from the associated service client ( <xref uid="com.microsoft.azure.storage.blob.CloudBlobClient" data-throw-if-not-resolved="false" data-raw-source="CloudBlobClient"></xref>). </p>
    name: options
    type: <xref href="com.microsoft.azure.storage.blob.BlobRequestOptions?alt=com.microsoft.azure.storage.blob.BlobRequestOptions&text=BlobRequestOptions" data-throw-if-not-resolved="False"/>
  - description: <p>An <xref uid="com.microsoft.azure.storage.OperationContext" data-throw-if-not-resolved="false" data-raw-source="OperationContext"></xref> object that represents the context for the current operation. This object is used to track requests to the storage service, and to provide additional runtime information about the operation.</p>
    name: opContext
    type: <xref href="com.microsoft.azure.storage.OperationContext?alt=com.microsoft.azure.storage.OperationContext&text=OperationContext" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  - type: <xref href="URISyntaxException?alt=URISyntaxException&text=URISyntaxException" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>A <code>String</code> which represents the copy ID associated with the copy operation.</p>
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Requests the service to start copying a blob's contents, properties, and metadata to a new blob, using the specified access conditions, lease ID, request options, and operation context.</p>

    <p></p>
  syntax: public final String startIncrementalCopy(final CloudPageBlob sourceSnapshot, final AccessCondition destinationAccessCondition, BlobRequestOptions options, OperationContext opContext)
  uid: com.microsoft.azure.storage.blob.CloudPageBlob.startIncrementalCopy(final CloudPageBlob,final AccessCondition,BlobRequestOptions,OperationContext)
- fullName: com.microsoft.azure.storage.blob.CloudPageBlob.startIncrementalCopy(final URI sourceSnapshot)
  name: startIncrementalCopy(final URI sourceSnapshot)
  nameWithType: CloudPageBlob.startIncrementalCopy(final URI sourceSnapshot)
  parameters:
  - description: <p>A <code>CloudPageBlob</code> object that represents the source blob to copy. Must be a snapshot.</p>
    name: sourceSnapshot
    type: <xref href="final+URI?alt=final+URI&text=final+URI" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  - type: <xref href="URISyntaxException?alt=URISyntaxException&text=URISyntaxException" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>A <code>String</code> which represents the copy ID associated with the copy operation.</p>
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Requests the service to start an incremental copy of another page blob's contents, properties, and metadata to this blob.</p>

    <p></p>
  syntax: public final String startIncrementalCopy(final URI sourceSnapshot)
  uid: com.microsoft.azure.storage.blob.CloudPageBlob.startIncrementalCopy(final URI)
- fullName: com.microsoft.azure.storage.blob.CloudPageBlob.startIncrementalCopy(final URI sourceSnapshot, final AccessCondition destinationAccessCondition, BlobRequestOptions options, OperationContext opContext)
  name: startIncrementalCopy(final URI sourceSnapshot, final AccessCondition destinationAccessCondition, BlobRequestOptions options, OperationContext opContext)
  nameWithType: CloudPageBlob.startIncrementalCopy(final URI sourceSnapshot, final AccessCondition destinationAccessCondition, BlobRequestOptions options, OperationContext opContext)
  parameters:
  - description: <p>A <code>CloudPageBlob</code> object that represents the source blob to copy. Must be a snapshot. </p>
    name: sourceSnapshot
    type: <xref href="final+URI?alt=final+URI&text=final+URI" data-throw-if-not-resolved="False"/>
  - description: <p>An <xref uid="com.microsoft.azure.storage.AccessCondition" data-throw-if-not-resolved="false" data-raw-source="AccessCondition"></xref> object that represents the access conditions for the destination blob. </p>
    name: destinationAccessCondition
    type: final <xref href="com.microsoft.azure.storage.AccessCondition?alt=com.microsoft.azure.storage.AccessCondition&text=AccessCondition" data-throw-if-not-resolved="False"/>
  - description: <p>A <xref uid="com.microsoft.azure.storage.blob.BlobRequestOptions" data-throw-if-not-resolved="false" data-raw-source="BlobRequestOptions"></xref> object that specifies any additional options for the request. Specifying <code>null</code> will use the default request options from the associated service client ( <xref uid="com.microsoft.azure.storage.blob.CloudBlobClient" data-throw-if-not-resolved="false" data-raw-source="CloudBlobClient"></xref>). </p>
    name: options
    type: <xref href="com.microsoft.azure.storage.blob.BlobRequestOptions?alt=com.microsoft.azure.storage.blob.BlobRequestOptions&text=BlobRequestOptions" data-throw-if-not-resolved="False"/>
  - description: <p>An <xref uid="com.microsoft.azure.storage.OperationContext" data-throw-if-not-resolved="false" data-raw-source="OperationContext"></xref> object that represents the context for the current operation. This object is used to track requests to the storage service, and to provide additional runtime information about the operation.</p>
    name: opContext
    type: <xref href="com.microsoft.azure.storage.OperationContext?alt=com.microsoft.azure.storage.OperationContext&text=OperationContext" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  - type: <xref href="URISyntaxException?alt=URISyntaxException&text=URISyntaxException" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>A <code>String</code> which represents the copy ID associated with the copy operation.</p>
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Requests the service to start copying a blob's contents, properties, and metadata to a new blob, using the specified access conditions, lease ID, request options, and operation context.</p>

    <p></p>
  syntax: public final String startIncrementalCopy(final URI sourceSnapshot, final AccessCondition destinationAccessCondition, BlobRequestOptions options, OperationContext opContext)
  uid: com.microsoft.azure.storage.blob.CloudPageBlob.startIncrementalCopy(final URI,final AccessCondition,BlobRequestOptions,OperationContext)
- fullName: com.microsoft.azure.storage.blob.CloudPageBlob.updateSequenceNumberFromResponse(HttpURLConnection request)
  name: updateSequenceNumberFromResponse(HttpURLConnection request)
  nameWithType: CloudPageBlob.updateSequenceNumberFromResponse(HttpURLConnection request)
  parameters:
  - name: request
    type: <xref href="HttpURLConnection?alt=HttpURLConnection&text=HttpURLConnection" data-throw-if-not-resolved="False"/>
  syntax: protected void updateSequenceNumberFromResponse(HttpURLConnection request)
  uid: com.microsoft.azure.storage.blob.CloudPageBlob.updateSequenceNumberFromResponse(HttpURLConnection)
- fullName: com.microsoft.azure.storage.blob.CloudPageBlob.upload(final InputStream sourceStream, final long length)
  name: upload(final InputStream sourceStream, final long length)
  nameWithType: CloudPageBlob.upload(final InputStream sourceStream, final long length)
  parameters:
  - description: <p>An <xref uid="" data-throw-if-not-resolved="false" data-raw-source="InputStream"></xref> object to read from. </p>
    name: sourceStream
    type: <xref href="final+InputStream?alt=final+InputStream&text=final+InputStream" data-throw-if-not-resolved="False"/>
  - description: <p>A <code>long</code> which represents the length, in bytes, of the stream data, must be non zero and a multiple of 512.</p>
    name: length
    type: <xref href="final+long?alt=final+long&text=final+long" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
    description: <p>If an I/O exception occurred. </p>
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  summary: >-
    <p>Uploads the source stream data to the page blob. If the blob already exists on the service, it will be overwritten.</p>

    <p></p>
  syntax: public void upload(final InputStream sourceStream, final long length)
  uid: com.microsoft.azure.storage.blob.CloudPageBlob.upload(final InputStream,final long)
- fullName: com.microsoft.azure.storage.blob.CloudPageBlob.upload(final InputStream sourceStream, final long length, final AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  name: upload(final InputStream sourceStream, final long length, final AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  nameWithType: CloudPageBlob.upload(final InputStream sourceStream, final long length, final AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  parameters:
  - description: <p>An <xref uid="" data-throw-if-not-resolved="false" data-raw-source="InputStream"></xref> object to read from. </p>
    name: sourceStream
    type: <xref href="final+InputStream?alt=final+InputStream&text=final+InputStream" data-throw-if-not-resolved="False"/>
  - description: <p>A <code>long</code> which represents the length, in bytes, of the stream data. This must be great than zero and a multiple of 512. </p>
    name: length
    type: <xref href="final+long?alt=final+long&text=final+long" data-throw-if-not-resolved="False"/>
  - description: <p>An <xref uid="com.microsoft.azure.storage.AccessCondition" data-throw-if-not-resolved="false" data-raw-source="AccessCondition"></xref> object which represents the access conditions for the blob. </p>
    name: accessCondition
    type: final <xref href="com.microsoft.azure.storage.AccessCondition?alt=com.microsoft.azure.storage.AccessCondition&text=AccessCondition" data-throw-if-not-resolved="False"/>
  - description: <p>A <xref uid="com.microsoft.azure.storage.blob.BlobRequestOptions" data-throw-if-not-resolved="false" data-raw-source="BlobRequestOptions"></xref> object that specifies any additional options for the request. Specifying <code>null</code> will use the default request options from the associated service client ( <xref uid="com.microsoft.azure.storage.blob.CloudBlobClient" data-throw-if-not-resolved="false" data-raw-source="CloudBlobClient"></xref>). </p>
    name: options
    type: <xref href="com.microsoft.azure.storage.blob.BlobRequestOptions?alt=com.microsoft.azure.storage.blob.BlobRequestOptions&text=BlobRequestOptions" data-throw-if-not-resolved="False"/>
  - description: <p>An <xref uid="com.microsoft.azure.storage.OperationContext" data-throw-if-not-resolved="false" data-raw-source="OperationContext"></xref> object which represents the context for the current operation. This object is used to track requests to the storage service, and to provide additional runtime information about the operation.</p>
    name: opContext
    type: <xref href="com.microsoft.azure.storage.OperationContext?alt=com.microsoft.azure.storage.OperationContext&text=OperationContext" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
    description: <p>If an I/O exception occurred. </p>
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  summary: >-
    <p>Uploads the source stream data to the page blob using the specified lease ID, request options, and operation context. If the blob already exists on the service, it will be overwritten.</p>

    <p></p>
  syntax: public void upload(final InputStream sourceStream, final long length, final AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  uid: com.microsoft.azure.storage.blob.CloudPageBlob.upload(final InputStream,final long,final AccessCondition,BlobRequestOptions,OperationContext)
- fullName: com.microsoft.azure.storage.blob.CloudPageBlob.upload(final InputStream sourceStream, final long length, final PremiumPageBlobTier premiumBlobTier, final AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  name: upload(final InputStream sourceStream, final long length, final PremiumPageBlobTier premiumBlobTier, final AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  nameWithType: CloudPageBlob.upload(final InputStream sourceStream, final long length, final PremiumPageBlobTier premiumBlobTier, final AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  parameters:
  - description: <p>An <xref uid="" data-throw-if-not-resolved="false" data-raw-source="InputStream"></xref> object to read from. </p>
    name: sourceStream
    type: <xref href="final+InputStream?alt=final+InputStream&text=final+InputStream" data-throw-if-not-resolved="False"/>
  - description: <p>A <code>long</code> which represents the length, in bytes, of the stream data. This must be great than zero and a multiple of 512. </p>
    name: length
    type: <xref href="final+long?alt=final+long&text=final+long" data-throw-if-not-resolved="False"/>
  - description: <p>A <xref uid="com.microsoft.azure.storage.blob.PremiumPageBlobTier" data-throw-if-not-resolved="false" data-raw-source="PremiumPageBlobTier"></xref> object which represents the tier of the blob. </p>
    name: premiumBlobTier
    type: final <xref href="com.microsoft.azure.storage.blob.PremiumPageBlobTier?alt=com.microsoft.azure.storage.blob.PremiumPageBlobTier&text=PremiumPageBlobTier" data-throw-if-not-resolved="False"/>
  - description: <p>An <xref uid="com.microsoft.azure.storage.AccessCondition" data-throw-if-not-resolved="false" data-raw-source="AccessCondition"></xref> object which represents the access conditions for the blob. </p>
    name: accessCondition
    type: final <xref href="com.microsoft.azure.storage.AccessCondition?alt=com.microsoft.azure.storage.AccessCondition&text=AccessCondition" data-throw-if-not-resolved="False"/>
  - description: <p>A <xref uid="com.microsoft.azure.storage.blob.BlobRequestOptions" data-throw-if-not-resolved="false" data-raw-source="BlobRequestOptions"></xref> object that specifies any additional options for the request. Specifying <code>null</code> will use the default request options from the associated service client ( <xref uid="com.microsoft.azure.storage.blob.CloudBlobClient" data-throw-if-not-resolved="false" data-raw-source="CloudBlobClient"></xref>). </p>
    name: options
    type: <xref href="com.microsoft.azure.storage.blob.BlobRequestOptions?alt=com.microsoft.azure.storage.blob.BlobRequestOptions&text=BlobRequestOptions" data-throw-if-not-resolved="False"/>
  - description: <p>An <xref uid="com.microsoft.azure.storage.OperationContext" data-throw-if-not-resolved="false" data-raw-source="OperationContext"></xref> object which represents the context for the current operation. This object is used to track requests to the storage service, and to provide additional runtime information about the operation.</p>
    name: opContext
    type: <xref href="com.microsoft.azure.storage.OperationContext?alt=com.microsoft.azure.storage.OperationContext&text=OperationContext" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
    description: <p>If an I/O exception occurred. </p>
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  summary: >-
    <p>Uploads the source stream data to the page blob using the specified lease ID, request options, and operation context. If the blob already exists on the service, it will be overwritten.</p>

    <p></p>
  syntax: public void upload(final InputStream sourceStream, final long length, final PremiumPageBlobTier premiumBlobTier, final AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  uid: com.microsoft.azure.storage.blob.CloudPageBlob.upload(final InputStream,final long,final PremiumPageBlobTier,final AccessCondition,BlobRequestOptions,OperationContext)
- fullName: com.microsoft.azure.storage.blob.CloudPageBlob.uploadFromByteArray(final byte[] buffer, final int offset, final int length, final PremiumPageBlobTier premiumBlobTier, final AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  name: uploadFromByteArray(final byte[] buffer, final int offset, final int length, final PremiumPageBlobTier premiumBlobTier, final AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  nameWithType: CloudPageBlob.uploadFromByteArray(final byte[] buffer, final int offset, final int length, final PremiumPageBlobTier premiumBlobTier, final AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  parameters:
  - description: <p>A <code>byte</code> array which represents the data to write to the blob. </p>
    name: buffer
    type: <xref href="final+byte+%5B%5D?alt=final+byte+%5B%5D&text=final+byte+%5B%5D" data-throw-if-not-resolved="False"/>
  - description: <p>A <code>int</code> which represents the offset of the byte array from which to start the data upload. </p>
    name: offset
    type: <xref href="final+int?alt=final+int&text=final+int" data-throw-if-not-resolved="False"/>
  - description: <p>An <code>int</code> which represents the number of bytes to upload from the input buffer. </p>
    name: length
    type: <xref href="final+int?alt=final+int&text=final+int" data-throw-if-not-resolved="False"/>
  - description: <p>A <xref uid="com.microsoft.azure.storage.blob.PremiumPageBlobTier" data-throw-if-not-resolved="false" data-raw-source="PremiumPageBlobTier"></xref> object which represents the tier of the blob. </p>
    name: premiumBlobTier
    type: final <xref href="com.microsoft.azure.storage.blob.PremiumPageBlobTier?alt=com.microsoft.azure.storage.blob.PremiumPageBlobTier&text=PremiumPageBlobTier" data-throw-if-not-resolved="False"/>
  - description: <p>An <xref uid="com.microsoft.azure.storage.AccessCondition" data-throw-if-not-resolved="false" data-raw-source="AccessCondition"></xref> object that represents the access conditions for the blob. </p>
    name: accessCondition
    type: final <xref href="com.microsoft.azure.storage.AccessCondition?alt=com.microsoft.azure.storage.AccessCondition&text=AccessCondition" data-throw-if-not-resolved="False"/>
  - description: <p>A <xref uid="com.microsoft.azure.storage.blob.BlobRequestOptions" data-throw-if-not-resolved="false" data-raw-source="BlobRequestOptions"></xref> object that specifies any additional options for the request. Specifying <code>null</code> will use the default request options from the associated service client ( <xref uid="com.microsoft.azure.storage.blob.CloudBlobClient" data-throw-if-not-resolved="false" data-raw-source="CloudBlobClient"></xref>). </p>
    name: options
    type: <xref href="com.microsoft.azure.storage.blob.BlobRequestOptions?alt=com.microsoft.azure.storage.blob.BlobRequestOptions&text=BlobRequestOptions" data-throw-if-not-resolved="False"/>
  - description: <p>An <xref uid="com.microsoft.azure.storage.OperationContext" data-throw-if-not-resolved="false" data-raw-source="OperationContext"></xref> object that represents the context for the current operation. This object is used to track requests to the storage service, and to provide additional runtime information about the operation.</p>
    name: opContext
    type: <xref href="com.microsoft.azure.storage.OperationContext?alt=com.microsoft.azure.storage.OperationContext&text=OperationContext" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Uploads a blob from data in a byte array. If the blob already exists on the service, it will be overwritten.</p>

    <p></p>
  syntax: public void uploadFromByteArray(final byte[] buffer, final int offset, final int length, final PremiumPageBlobTier premiumBlobTier, final AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  uid: com.microsoft.azure.storage.blob.CloudPageBlob.uploadFromByteArray(final byte [],final int,final int,final PremiumPageBlobTier,final AccessCondition,BlobRequestOptions,OperationContext)
- fullName: com.microsoft.azure.storage.blob.CloudPageBlob.uploadFromFile(final String path, final PremiumPageBlobTier premiumBlobTier, final AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  name: uploadFromFile(final String path, final PremiumPageBlobTier premiumBlobTier, final AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  nameWithType: CloudPageBlob.uploadFromFile(final String path, final PremiumPageBlobTier premiumBlobTier, final AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  parameters:
  - description: <p>A <code>String</code> which represents the path to the file to be uploaded. </p>
    name: path
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>A <xref uid="com.microsoft.azure.storage.blob.PremiumPageBlobTier" data-throw-if-not-resolved="false" data-raw-source="PremiumPageBlobTier"></xref> object which represents the tier of the blob. </p>
    name: premiumBlobTier
    type: final <xref href="com.microsoft.azure.storage.blob.PremiumPageBlobTier?alt=com.microsoft.azure.storage.blob.PremiumPageBlobTier&text=PremiumPageBlobTier" data-throw-if-not-resolved="False"/>
  - description: <p>An <xref uid="com.microsoft.azure.storage.AccessCondition" data-throw-if-not-resolved="false" data-raw-source="AccessCondition"></xref> object that represents the access conditions for the blob. </p>
    name: accessCondition
    type: final <xref href="com.microsoft.azure.storage.AccessCondition?alt=com.microsoft.azure.storage.AccessCondition&text=AccessCondition" data-throw-if-not-resolved="False"/>
  - description: <p>A <xref uid="com.microsoft.azure.storage.blob.BlobRequestOptions" data-throw-if-not-resolved="false" data-raw-source="BlobRequestOptions"></xref> object that specifies any additional options for the request. Specifying <code>null</code> will use the default request options from the associated service client ( <xref uid="com.microsoft.azure.storage.blob.CloudBlobClient" data-throw-if-not-resolved="false" data-raw-source="CloudBlobClient"></xref>). </p>
    name: options
    type: <xref href="com.microsoft.azure.storage.blob.BlobRequestOptions?alt=com.microsoft.azure.storage.blob.BlobRequestOptions&text=BlobRequestOptions" data-throw-if-not-resolved="False"/>
  - description: <p>An <xref uid="com.microsoft.azure.storage.OperationContext" data-throw-if-not-resolved="false" data-raw-source="OperationContext"></xref> object that represents the context for the current operation. This object is used to track requests to the storage service, and to provide additional runtime information about the operation.</p>
    name: opContext
    type: <xref href="com.microsoft.azure.storage.OperationContext?alt=com.microsoft.azure.storage.OperationContext&text=OperationContext" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Uploads a blob from a file. If the blob already exists on the service, it will be overwritten.</p>

    <p></p>
  syntax: public void uploadFromFile(final String path, final PremiumPageBlobTier premiumBlobTier, final AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  uid: com.microsoft.azure.storage.blob.CloudPageBlob.uploadFromFile(final String,final PremiumPageBlobTier,final AccessCondition,BlobRequestOptions,OperationContext)
- fullName: com.microsoft.azure.storage.blob.CloudPageBlob.uploadPages(final InputStream sourceStream, final long offset, final long length)
  name: uploadPages(final InputStream sourceStream, final long offset, final long length)
  nameWithType: CloudPageBlob.uploadPages(final InputStream sourceStream, final long offset, final long length)
  parameters:
  - description: <p>An <xref uid="" data-throw-if-not-resolved="false" data-raw-source="InputStream"></xref> object which represents the input stream to write to the page blob. </p>
    name: sourceStream
    type: <xref href="final+InputStream?alt=final+InputStream&text=final+InputStream" data-throw-if-not-resolved="False"/>
  - description: <p>A <code>long</code> which represents the offset, in number of bytes, at which to begin writing the data. This value must be a multiple of 512. </p>
    name: offset
    type: <xref href="final+long?alt=final+long&text=final+long" data-throw-if-not-resolved="False"/>
  - description: <p>A <code>long</code> which represents the length, in bytes, of the data to write. This value must be a multiple of 512.</p>
    name: length
    type: <xref href="final+long?alt=final+long&text=final+long" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>If the offset or length are not multiples of 512, or if the length is greater than 4 MB. </p>
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
    description: <p>If an I/O exception occurred. </p>
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  summary: >-
    <p>Uploads a range of contiguous pages, up to 4 MB in size, at the specified offset in the page blob.</p>

    <p></p>
  syntax: public void uploadPages(final InputStream sourceStream, final long offset, final long length)
  uid: com.microsoft.azure.storage.blob.CloudPageBlob.uploadPages(final InputStream,final long,final long)
- fullName: com.microsoft.azure.storage.blob.CloudPageBlob.uploadPages(final InputStream sourceStream, final long offset, final long length, final AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  name: uploadPages(final InputStream sourceStream, final long offset, final long length, final AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  nameWithType: CloudPageBlob.uploadPages(final InputStream sourceStream, final long offset, final long length, final AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  parameters:
  - description: <p>An <xref uid="" data-throw-if-not-resolved="false" data-raw-source="InputStream"></xref> object which represents the input stream to write to the page blob. </p>
    name: sourceStream
    type: <xref href="final+InputStream?alt=final+InputStream&text=final+InputStream" data-throw-if-not-resolved="False"/>
  - description: <p>A <code>long</code> which represents the offset, in number of bytes, at which to begin writing the data. This value must be a multiple of 512. </p>
    name: offset
    type: <xref href="final+long?alt=final+long&text=final+long" data-throw-if-not-resolved="False"/>
  - description: <p>A <code>long</code> which represents the length, in bytes, of the data to write. This value must be a multiple of 512. </p>
    name: length
    type: <xref href="final+long?alt=final+long&text=final+long" data-throw-if-not-resolved="False"/>
  - description: <p>An <xref uid="com.microsoft.azure.storage.AccessCondition" data-throw-if-not-resolved="false" data-raw-source="AccessCondition"></xref> object which represents the access conditions for the blob. </p>
    name: accessCondition
    type: final <xref href="com.microsoft.azure.storage.AccessCondition?alt=com.microsoft.azure.storage.AccessCondition&text=AccessCondition" data-throw-if-not-resolved="False"/>
  - description: <p>A <xref uid="com.microsoft.azure.storage.blob.BlobRequestOptions" data-throw-if-not-resolved="false" data-raw-source="BlobRequestOptions"></xref> object that specifies any additional options for the request. Specifying <code>null</code> will use the default request options from the associated service client ( <xref uid="com.microsoft.azure.storage.blob.CloudBlobClient" data-throw-if-not-resolved="false" data-raw-source="CloudBlobClient"></xref>). </p>
    name: options
    type: <xref href="com.microsoft.azure.storage.blob.BlobRequestOptions?alt=com.microsoft.azure.storage.blob.BlobRequestOptions&text=BlobRequestOptions" data-throw-if-not-resolved="False"/>
  - description: <p>An <xref uid="com.microsoft.azure.storage.OperationContext" data-throw-if-not-resolved="false" data-raw-source="OperationContext"></xref> object which represents the context for the current operation. This object is used to track requests to the storage service, and to provide additional runtime information about the operation.</p>
    name: opContext
    type: <xref href="com.microsoft.azure.storage.OperationContext?alt=com.microsoft.azure.storage.OperationContext&text=OperationContext" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>If the offset or length are not multiples of 512, or if the length is greater than 4 MB. </p>
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
    description: <p>If an I/O exception occurred. </p>
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  summary: >-
    <p>Uploads a range of contiguous pages, up to 4 MB in size, at the specified offset in the page blob, using the specified lease ID, request options, and operation context.</p>

    <p></p>
  syntax: public void uploadPages(final InputStream sourceStream, final long offset, final long length, final AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  uid: com.microsoft.azure.storage.blob.CloudPageBlob.uploadPages(final InputStream,final long,final long,final AccessCondition,BlobRequestOptions,OperationContext)
- fullName: com.microsoft.azure.storage.blob.CloudPageBlob.uploadPremiumPageBlobTier(final PremiumPageBlobTier premiumBlobTier)
  name: uploadPremiumPageBlobTier(final PremiumPageBlobTier premiumBlobTier)
  nameWithType: CloudPageBlob.uploadPremiumPageBlobTier(final PremiumPageBlobTier premiumBlobTier)
  parameters:
  - description: <p>A <xref uid="com.microsoft.azure.storage.blob.PremiumPageBlobTier" data-throw-if-not-resolved="false" data-raw-source="PremiumPageBlobTier"></xref> object which represents the tier of the blob. </p>
    name: premiumBlobTier
    type: final <xref href="com.microsoft.azure.storage.blob.PremiumPageBlobTier?alt=com.microsoft.azure.storage.blob.PremiumPageBlobTier&text=PremiumPageBlobTier" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  summary: <p>Sets the blob tier on a page blob on a premium storage account. </p>
  syntax: public void uploadPremiumPageBlobTier(final PremiumPageBlobTier premiumBlobTier)
  uid: com.microsoft.azure.storage.blob.CloudPageBlob.uploadPremiumPageBlobTier(final PremiumPageBlobTier)
- fullName: com.microsoft.azure.storage.blob.CloudPageBlob.uploadPremiumPageBlobTier(final PremiumPageBlobTier premiumBlobTier, BlobRequestOptions options, OperationContext opContext)
  name: uploadPremiumPageBlobTier(final PremiumPageBlobTier premiumBlobTier, BlobRequestOptions options, OperationContext opContext)
  nameWithType: CloudPageBlob.uploadPremiumPageBlobTier(final PremiumPageBlobTier premiumBlobTier, BlobRequestOptions options, OperationContext opContext)
  parameters:
  - description: <p>A <xref uid="com.microsoft.azure.storage.blob.PremiumPageBlobTier" data-throw-if-not-resolved="false" data-raw-source="PremiumPageBlobTier"></xref> object which represents the tier of the blob. </p>
    name: premiumBlobTier
    type: final <xref href="com.microsoft.azure.storage.blob.PremiumPageBlobTier?alt=com.microsoft.azure.storage.blob.PremiumPageBlobTier&text=PremiumPageBlobTier" data-throw-if-not-resolved="False"/>
  - description: <p>A <xref uid="com.microsoft.azure.storage.blob.BlobRequestOptions" data-throw-if-not-resolved="false" data-raw-source="BlobRequestOptions"></xref> object that specifies any additional options for the request. Specifying <code>null</code> will use the default request options from the associated service client ( <xref uid="com.microsoft.azure.storage.blob.CloudBlobClient" data-throw-if-not-resolved="false" data-raw-source="CloudBlobClient"></xref>). </p>
    name: options
    type: <xref href="com.microsoft.azure.storage.blob.BlobRequestOptions?alt=com.microsoft.azure.storage.blob.BlobRequestOptions&text=BlobRequestOptions" data-throw-if-not-resolved="False"/>
  - description: <p>An <xref uid="com.microsoft.azure.storage.OperationContext" data-throw-if-not-resolved="false" data-raw-source="OperationContext"></xref> object which represents the context for the current operation. This object is used to track requests to the storage service, and to provide additional runtime information about the operation. </p>
    name: opContext
    type: <xref href="com.microsoft.azure.storage.OperationContext?alt=com.microsoft.azure.storage.OperationContext&text=OperationContext" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  summary: <p>Sets the tier on a page blob on a premium storage account. </p>
  syntax: public void uploadPremiumPageBlobTier(final PremiumPageBlobTier premiumBlobTier, BlobRequestOptions options, OperationContext opContext)
  uid: com.microsoft.azure.storage.blob.CloudPageBlob.uploadPremiumPageBlobTier(final PremiumPageBlobTier,BlobRequestOptions,OperationContext)
nameWithType: CloudPageBlob
syntax: public class CloudPageBlob extends CloudBlob
type: class
uid: com.microsoft.azure.storage.blob.CloudPageBlob
fullName: com.microsoft.azure.storage.blob.CloudPageBlob
name: CloudPageBlob
package: com.microsoft.azure.storage.blob
summary: <p>Represents a Microsoft Azure page blob. </p>
metadata: {}
