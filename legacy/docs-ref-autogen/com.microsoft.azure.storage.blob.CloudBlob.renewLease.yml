### YamlMime:JavaMember
nameWithType: CloudBlob.renewLease
type: method
members:
- fullName: com.microsoft.azure.storage.blob.CloudBlob.renewLease(final AccessCondition accessCondition)
  name: renewLease(final AccessCondition accessCondition)
  nameWithType: CloudBlob.renewLease(final AccessCondition accessCondition)
  parameters:
  - description: <p>An <xref uid="com.microsoft.azure.storage.AccessCondition" data-throw-if-not-resolved="false" data-raw-source="AccessCondition"></xref> object that represents the access conditions for the blob. The LeaseID is required to be set on the AccessCondition.</p>
    name: accessCondition
    type: final <xref href="com.microsoft.azure.storage.AccessCondition?alt=com.microsoft.azure.storage.AccessCondition&text=AccessCondition" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  returns:
    type: <xref href="final+void?alt=final+void&text=final+void" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Renews an existing lease.</p>

    <p></p>
  syntax: public final void renewLease(final AccessCondition accessCondition)
  uid: com.microsoft.azure.storage.blob.CloudBlob.renewLease(final AccessCondition)
- fullName: com.microsoft.azure.storage.blob.CloudBlob.renewLease(final AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  name: renewLease(final AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  nameWithType: CloudBlob.renewLease(final AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  parameters:
  - description: <p>An <xref uid="com.microsoft.azure.storage.AccessCondition" data-throw-if-not-resolved="false" data-raw-source="AccessCondition"></xref> object that represents the access conditions for the blob. The LeaseID is required to be set on the AccessCondition. </p>
    name: accessCondition
    type: final <xref href="com.microsoft.azure.storage.AccessCondition?alt=com.microsoft.azure.storage.AccessCondition&text=AccessCondition" data-throw-if-not-resolved="False"/>
  - description: <p>A <xref uid="com.microsoft.azure.storage.blob.BlobRequestOptions" data-throw-if-not-resolved="false" data-raw-source="BlobRequestOptions"></xref> object that specifies any additional options for the request. Specifying <code>null</code> will use the default request options from the associated service client ( <xref uid="com.microsoft.azure.storage.blob.CloudBlobClient" data-throw-if-not-resolved="false" data-raw-source="CloudBlobClient"></xref>). </p>
    name: options
    type: <xref href="com.microsoft.azure.storage.blob.BlobRequestOptions?alt=com.microsoft.azure.storage.blob.BlobRequestOptions&text=BlobRequestOptions" data-throw-if-not-resolved="False"/>
  - description: <p>An <xref uid="com.microsoft.azure.storage.OperationContext" data-throw-if-not-resolved="false" data-raw-source="OperationContext"></xref> object that represents the context for the current operation. This object is used to track requests to the storage service, and to provide additional runtime information about the operation.</p>
    name: opContext
    type: <xref href="com.microsoft.azure.storage.OperationContext?alt=com.microsoft.azure.storage.OperationContext&text=OperationContext" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  returns:
    type: <xref href="final+void?alt=final+void&text=final+void" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Renews an existing lease using the specified request options and operation context.</p>

    <p></p>
  syntax: public final void renewLease(final AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  uid: com.microsoft.azure.storage.blob.CloudBlob.renewLease(final AccessCondition,BlobRequestOptions,OperationContext)
uid: com.microsoft.azure.storage.blob.CloudBlob.renewLease*
fullName: com.microsoft.azure.storage.blob.CloudBlob.renewLease
name: renewLease(final AccessCondition accessCondition)
package: com.microsoft.azure.storage.blob
metadata: {}
