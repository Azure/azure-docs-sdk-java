### YamlMime:JavaMember
nameWithType: ShardKey.fromRawValue
type: method
members:
- fullName: com.microsoft.azure.elasticdb.shard.base.ShardKey.fromRawValue(ShardKeyType keyType, byte[] rawValue)
  name: fromRawValue(ShardKeyType keyType, byte[] rawValue)
  nameWithType: ShardKey.fromRawValue(ShardKeyType keyType, byte[] rawValue)
  parameters:
  - description: <p>Type of the shard key (Int32, Int64, Guid, byte[] etc.). </p>
    name: keyType
    type: <xref href="com.microsoft.azure.elasticdb.shard.base.ShardKeyType?alt=com.microsoft.azure.elasticdb.shard.base.ShardKeyType&text=ShardKeyType" data-throw-if-not-resolved="False"/>
  - description: <p>Binary representation of the key. </p>
    name: rawValue
    type: <xref href="byte+%5B%5D?alt=byte []&text=byte+%5B%5D" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>A new shard key instance. </p>
    type: <xref href="com.microsoft.azure.elasticdb.shard.base.ShardKey?alt=com.microsoft.azure.elasticdb.shard.base.ShardKey&text=ShardKey" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>endregion </p><p>Instantiates a new shard key using the specified type and binary representation.</p>

    <p></p>
  syntax: public static ShardKey fromRawValue(ShardKeyType keyType, byte[] rawValue)
  uid: com.microsoft.azure.elasticdb.shard.base.ShardKey.fromRawValue(ShardKeyType,byte [])
uid: com.microsoft.azure.elasticdb.shard.base.ShardKey.fromRawValue*
fullName: com.microsoft.azure.elasticdb.shard.base.ShardKey.fromRawValue(ShardKeyType keyType, byte[] rawValue)
name: fromRawValue(ShardKeyType keyType, byte[] rawValue)
package: com.microsoft.azure.elasticdb.shard.base
metadata: {}
