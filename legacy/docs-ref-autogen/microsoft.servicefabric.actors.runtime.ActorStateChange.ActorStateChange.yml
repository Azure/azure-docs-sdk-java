### YamlMime:JavaMember
nameWithType: ActorStateChange.ActorStateChange
type: constructor
members:
- fullName: microsoft.servicefabric.actors.runtime.ActorStateChange.ActorStateChange(String stateName, Class<?> type, Object value, StateChangeKind changeKind)
  name: ActorStateChange(String stateName, Class<?> type, Object value, StateChangeKind changeKind)
  nameWithType: ActorStateChange.ActorStateChange(String stateName, Class<?> type, Object value, StateChangeKind changeKind)
  parameters:
  - description: <p>Name of the actor state </p>
    name: stateName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>Type of value associated with given actor state name. </p>
    name: type
    type: <xref href="Class%3C%3F%3E?alt=Class<?>&text=Class%3C%3F%3E" data-throw-if-not-resolved="False"/>
  - description: <p>Value associated with given actor state name. </p>
    name: value
    type: <xref href="Object?alt=Object&text=Object" data-throw-if-not-resolved="False"/>
  - description: <p>Kind of state change for given actor state name. </p>
    name: changeKind
    type: <xref href="microsoft.servicefabric.actors.runtime.StateChangeKind?alt=microsoft.servicefabric.actors.runtime.StateChangeKind&text=StateChangeKind" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Creates an instance of ActorStateChange class.</p>

    <p></p>
  syntax: public ActorStateChange(String stateName, Class<?> type, Object value, StateChangeKind changeKind)
  uid: microsoft.servicefabric.actors.runtime.ActorStateChange.ActorStateChange(String,Class<?>,Object,StateChangeKind)
uid: microsoft.servicefabric.actors.runtime.ActorStateChange.ActorStateChange*
fullName: microsoft.servicefabric.actors.runtime.ActorStateChange.ActorStateChange
name: ActorStateChange
package: microsoft.servicefabric.actors.runtime
metadata: {}
