### YamlMime:JavaMember
nameWithType: Jobs.getAllLifetimeStatisticsAsync
type: method
members:
- fullName: com.microsoft.azure.batch.protocol.Jobs.getAllLifetimeStatisticsAsync()
  name: getAllLifetimeStatisticsAsync()
  nameWithType: Jobs.getAllLifetimeStatisticsAsync()
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the JobStatistics object </p>
    type: Observable&lt;<xref href="com.microsoft.azure.batch.protocol.models.JobStatistics?alt=com.microsoft.azure.batch.protocol.models.JobStatistics&text=JobStatistics" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Gets lifetime summary statistics for all of the jobs in the specified account. Statistics are aggregated across all jobs that have ever existed in the account, from account creation to the last update time of the statistics. The statistics may not be immediately available. The Batch service performs periodic roll-up of statistics. The typical delay is about 30 minutes.</p>

    <p></p>
  syntax: public Observable<JobStatistics> getAllLifetimeStatisticsAsync()
  uid: com.microsoft.azure.batch.protocol.Jobs.getAllLifetimeStatisticsAsync()
- fullName: com.microsoft.azure.batch.protocol.Jobs.getAllLifetimeStatisticsAsync(final ServiceCallback<JobStatistics> serviceCallback)
  name: getAllLifetimeStatisticsAsync(final ServiceCallback<JobStatistics> serviceCallback)
  nameWithType: Jobs.getAllLifetimeStatisticsAsync(final ServiceCallback<JobStatistics> serviceCallback)
  parameters:
  - description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    name: serviceCallback
    type: final ServiceCallback&lt;<xref href="com.microsoft.azure.batch.protocol.models.JobStatistics?alt=com.microsoft.azure.batch.protocol.models.JobStatistics&text=JobStatistics" data-throw-if-not-resolved="False"/>&gt;
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
    type: ServiceFuture&lt;<xref href="com.microsoft.azure.batch.protocol.models.JobStatistics?alt=com.microsoft.azure.batch.protocol.models.JobStatistics&text=JobStatistics" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Gets lifetime summary statistics for all of the jobs in the specified account. Statistics are aggregated across all jobs that have ever existed in the account, from account creation to the last update time of the statistics. The statistics may not be immediately available. The Batch service performs periodic roll-up of statistics. The typical delay is about 30 minutes.</p>

    <p></p>
  syntax: public ServiceFuture<JobStatistics> getAllLifetimeStatisticsAsync(final ServiceCallback<JobStatistics> serviceCallback)
  uid: com.microsoft.azure.batch.protocol.Jobs.getAllLifetimeStatisticsAsync(final ServiceCallback<JobStatistics>)
- fullName: com.microsoft.azure.batch.protocol.Jobs.getAllLifetimeStatisticsAsync(JobGetAllLifetimeStatisticsOptions jobGetAllLifetimeStatisticsOptions)
  name: getAllLifetimeStatisticsAsync(JobGetAllLifetimeStatisticsOptions jobGetAllLifetimeStatisticsOptions)
  nameWithType: Jobs.getAllLifetimeStatisticsAsync(JobGetAllLifetimeStatisticsOptions jobGetAllLifetimeStatisticsOptions)
  parameters:
  - description: <p>Additional parameters for the operation </p>
    name: jobGetAllLifetimeStatisticsOptions
    type: <xref href="com.microsoft.azure.batch.protocol.models.JobGetAllLifetimeStatisticsOptions?alt=com.microsoft.azure.batch.protocol.models.JobGetAllLifetimeStatisticsOptions&text=JobGetAllLifetimeStatisticsOptions" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the JobStatistics object </p>
    type: Observable&lt;<xref href="com.microsoft.azure.batch.protocol.models.JobStatistics?alt=com.microsoft.azure.batch.protocol.models.JobStatistics&text=JobStatistics" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Gets lifetime summary statistics for all of the jobs in the specified account. Statistics are aggregated across all jobs that have ever existed in the account, from account creation to the last update time of the statistics. The statistics may not be immediately available. The Batch service performs periodic roll-up of statistics. The typical delay is about 30 minutes.</p>

    <p></p>
  syntax: public Observable<JobStatistics> getAllLifetimeStatisticsAsync(JobGetAllLifetimeStatisticsOptions jobGetAllLifetimeStatisticsOptions)
  uid: com.microsoft.azure.batch.protocol.Jobs.getAllLifetimeStatisticsAsync(JobGetAllLifetimeStatisticsOptions)
- fullName: com.microsoft.azure.batch.protocol.Jobs.getAllLifetimeStatisticsAsync(JobGetAllLifetimeStatisticsOptions jobGetAllLifetimeStatisticsOptions, final ServiceCallback<JobStatistics> serviceCallback)
  name: getAllLifetimeStatisticsAsync(JobGetAllLifetimeStatisticsOptions jobGetAllLifetimeStatisticsOptions, final ServiceCallback<JobStatistics> serviceCallback)
  nameWithType: Jobs.getAllLifetimeStatisticsAsync(JobGetAllLifetimeStatisticsOptions jobGetAllLifetimeStatisticsOptions, final ServiceCallback<JobStatistics> serviceCallback)
  parameters:
  - description: <p>Additional parameters for the operation </p>
    name: jobGetAllLifetimeStatisticsOptions
    type: <xref href="com.microsoft.azure.batch.protocol.models.JobGetAllLifetimeStatisticsOptions?alt=com.microsoft.azure.batch.protocol.models.JobGetAllLifetimeStatisticsOptions&text=JobGetAllLifetimeStatisticsOptions" data-throw-if-not-resolved="False"/>
  - description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    name: serviceCallback
    type: final ServiceCallback&lt;<xref href="com.microsoft.azure.batch.protocol.models.JobStatistics?alt=com.microsoft.azure.batch.protocol.models.JobStatistics&text=JobStatistics" data-throw-if-not-resolved="False"/>&gt;
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
    type: ServiceFuture&lt;<xref href="com.microsoft.azure.batch.protocol.models.JobStatistics?alt=com.microsoft.azure.batch.protocol.models.JobStatistics&text=JobStatistics" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Gets lifetime summary statistics for all of the jobs in the specified account. Statistics are aggregated across all jobs that have ever existed in the account, from account creation to the last update time of the statistics. The statistics may not be immediately available. The Batch service performs periodic roll-up of statistics. The typical delay is about 30 minutes.</p>

    <p></p>
  syntax: public ServiceFuture<JobStatistics> getAllLifetimeStatisticsAsync(JobGetAllLifetimeStatisticsOptions jobGetAllLifetimeStatisticsOptions, final ServiceCallback<JobStatistics> serviceCallback)
  uid: com.microsoft.azure.batch.protocol.Jobs.getAllLifetimeStatisticsAsync(JobGetAllLifetimeStatisticsOptions,final ServiceCallback<JobStatistics>)
uid: com.microsoft.azure.batch.protocol.Jobs.getAllLifetimeStatisticsAsync*
fullName: com.microsoft.azure.batch.protocol.Jobs.getAllLifetimeStatisticsAsync()
name: getAllLifetimeStatisticsAsync()
package: com.microsoft.azure.batch.protocol
metadata: {}
