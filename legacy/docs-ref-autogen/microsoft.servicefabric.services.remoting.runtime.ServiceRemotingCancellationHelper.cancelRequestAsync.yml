### YamlMime:JavaMember
nameWithType: ServiceRemotingCancellationHelper.cancelRequestAsync
type: method
members:
- fullName: microsoft.servicefabric.services.remoting.runtime.ServiceRemotingCancellationHelper.cancelRequestAsync(int interfaceId, int methodId, String callContext)
  name: cancelRequestAsync(int interfaceId, int methodId, String callContext)
  nameWithType: ServiceRemotingCancellationHelper.cancelRequestAsync(int interfaceId, int methodId, String callContext)
  parameters:
  - description: <p>The interface id of the remote interface </p>
    name: interfaceId
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  - description: <p>The methodId of the remote method </p>
    name: methodId
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  - description: <p>callContext. </p>
    name: callContext
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>returns a Completable future having byte array. </p>
    type: <xref href="CompletableFuture%3Cbyte%5B%5D%3E?alt=CompletableFuture<byte[]>&text=CompletableFuture%3Cbyte%5B%5D%3E" data-throw-if-not-resolved="False"/>
  summary: <p>Cancels the request asynchronously. </p>
  syntax: public CompletableFuture<byte[]> cancelRequestAsync(int interfaceId, int methodId, String callContext)
  uid: microsoft.servicefabric.services.remoting.runtime.ServiceRemotingCancellationHelper.cancelRequestAsync(int,int,String)
uid: microsoft.servicefabric.services.remoting.runtime.ServiceRemotingCancellationHelper.cancelRequestAsync*
fullName: microsoft.servicefabric.services.remoting.runtime.ServiceRemotingCancellationHelper.cancelRequestAsync(int interfaceId, int methodId, String callContext)
name: cancelRequestAsync(int interfaceId, int methodId, String callContext)
package: microsoft.servicefabric.services.remoting.runtime
metadata: {}
