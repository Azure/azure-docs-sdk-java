### YamlMime:JavaMember
nameWithType: JobSchedules.addAsync
type: method
members:
- fullName: com.microsoft.azure.batch.protocol.JobSchedules.addAsync(JobScheduleAddParameter cloudJobSchedule)
  name: addAsync(JobScheduleAddParameter cloudJobSchedule)
  nameWithType: JobSchedules.addAsync(JobScheduleAddParameter cloudJobSchedule)
  parameters:
  - description: <p>The job schedule to be added. </p>
    name: cloudJobSchedule
    type: <xref href="com.microsoft.azure.batch.protocol.models.JobScheduleAddParameter?alt=com.microsoft.azure.batch.protocol.models.JobScheduleAddParameter&text=JobScheduleAddParameter" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceResponseWithHeaders"></xref> object if successful. </p>
    type: <xref href="Observable%3CVoid%3E?alt=Observable%3CVoid%3E&text=Observable%3CVoid%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Adds a job schedule to the specified account.</p>

    <p></p>
  syntax: public Observable<Void> addAsync(JobScheduleAddParameter cloudJobSchedule)
  uid: com.microsoft.azure.batch.protocol.JobSchedules.addAsync(JobScheduleAddParameter)
- fullName: com.microsoft.azure.batch.protocol.JobSchedules.addAsync(JobScheduleAddParameter cloudJobSchedule, final ServiceCallback<Void> serviceCallback)
  name: addAsync(JobScheduleAddParameter cloudJobSchedule, final ServiceCallback<Void> serviceCallback)
  nameWithType: JobSchedules.addAsync(JobScheduleAddParameter cloudJobSchedule, final ServiceCallback<Void> serviceCallback)
  parameters:
  - description: <p>The job schedule to be added. </p>
    name: cloudJobSchedule
    type: <xref href="com.microsoft.azure.batch.protocol.models.JobScheduleAddParameter?alt=com.microsoft.azure.batch.protocol.models.JobScheduleAddParameter&text=JobScheduleAddParameter" data-throw-if-not-resolved="False"/>
  - description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    name: serviceCallback
    type: <xref href="final+ServiceCallback%3CVoid%3E?alt=final+ServiceCallback%3CVoid%3E&text=final+ServiceCallback%3CVoid%3E" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
    type: <xref href="ServiceFuture%3CVoid%3E?alt=ServiceFuture%3CVoid%3E&text=ServiceFuture%3CVoid%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Adds a job schedule to the specified account.</p>

    <p></p>
  syntax: public ServiceFuture<Void> addAsync(JobScheduleAddParameter cloudJobSchedule, final ServiceCallback<Void> serviceCallback)
  uid: com.microsoft.azure.batch.protocol.JobSchedules.addAsync(JobScheduleAddParameter,final ServiceCallback<Void>)
- fullName: com.microsoft.azure.batch.protocol.JobSchedules.addAsync(JobScheduleAddParameter cloudJobSchedule, JobScheduleAddOptions jobScheduleAddOptions)
  name: addAsync(JobScheduleAddParameter cloudJobSchedule, JobScheduleAddOptions jobScheduleAddOptions)
  nameWithType: JobSchedules.addAsync(JobScheduleAddParameter cloudJobSchedule, JobScheduleAddOptions jobScheduleAddOptions)
  parameters:
  - description: <p>The job schedule to be added. </p>
    name: cloudJobSchedule
    type: <xref href="com.microsoft.azure.batch.protocol.models.JobScheduleAddParameter?alt=com.microsoft.azure.batch.protocol.models.JobScheduleAddParameter&text=JobScheduleAddParameter" data-throw-if-not-resolved="False"/>
  - description: <p>Additional parameters for the operation </p>
    name: jobScheduleAddOptions
    type: <xref href="com.microsoft.azure.batch.protocol.models.JobScheduleAddOptions?alt=com.microsoft.azure.batch.protocol.models.JobScheduleAddOptions&text=JobScheduleAddOptions" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceResponseWithHeaders"></xref> object if successful. </p>
    type: <xref href="Observable%3CVoid%3E?alt=Observable%3CVoid%3E&text=Observable%3CVoid%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Adds a job schedule to the specified account.</p>

    <p></p>
  syntax: public Observable<Void> addAsync(JobScheduleAddParameter cloudJobSchedule, JobScheduleAddOptions jobScheduleAddOptions)
  uid: com.microsoft.azure.batch.protocol.JobSchedules.addAsync(JobScheduleAddParameter,JobScheduleAddOptions)
- fullName: com.microsoft.azure.batch.protocol.JobSchedules.addAsync(JobScheduleAddParameter cloudJobSchedule, JobScheduleAddOptions jobScheduleAddOptions, final ServiceCallback<Void> serviceCallback)
  name: addAsync(JobScheduleAddParameter cloudJobSchedule, JobScheduleAddOptions jobScheduleAddOptions, final ServiceCallback<Void> serviceCallback)
  nameWithType: JobSchedules.addAsync(JobScheduleAddParameter cloudJobSchedule, JobScheduleAddOptions jobScheduleAddOptions, final ServiceCallback<Void> serviceCallback)
  parameters:
  - description: <p>The job schedule to be added. </p>
    name: cloudJobSchedule
    type: <xref href="com.microsoft.azure.batch.protocol.models.JobScheduleAddParameter?alt=com.microsoft.azure.batch.protocol.models.JobScheduleAddParameter&text=JobScheduleAddParameter" data-throw-if-not-resolved="False"/>
  - description: <p>Additional parameters for the operation </p>
    name: jobScheduleAddOptions
    type: <xref href="com.microsoft.azure.batch.protocol.models.JobScheduleAddOptions?alt=com.microsoft.azure.batch.protocol.models.JobScheduleAddOptions&text=JobScheduleAddOptions" data-throw-if-not-resolved="False"/>
  - description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    name: serviceCallback
    type: <xref href="final+ServiceCallback%3CVoid%3E?alt=final+ServiceCallback%3CVoid%3E&text=final+ServiceCallback%3CVoid%3E" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
    type: <xref href="ServiceFuture%3CVoid%3E?alt=ServiceFuture%3CVoid%3E&text=ServiceFuture%3CVoid%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Adds a job schedule to the specified account.</p>

    <p></p>
  syntax: public ServiceFuture<Void> addAsync(JobScheduleAddParameter cloudJobSchedule, JobScheduleAddOptions jobScheduleAddOptions, final ServiceCallback<Void> serviceCallback)
  uid: com.microsoft.azure.batch.protocol.JobSchedules.addAsync(JobScheduleAddParameter,JobScheduleAddOptions,final ServiceCallback<Void>)
uid: com.microsoft.azure.batch.protocol.JobSchedules.addAsync*
fullName: com.microsoft.azure.batch.protocol.JobSchedules.addAsync
name: addAsync(JobScheduleAddParameter cloudJobSchedule)
package: com.microsoft.azure.batch.protocol
metadata: {}
