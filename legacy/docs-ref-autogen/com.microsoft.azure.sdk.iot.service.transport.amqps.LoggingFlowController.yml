### YamlMime:JavaType
constructors:
- fullName: com.microsoft.azure.sdk.iot.service.transport.amqps.LoggingFlowController.LoggingFlowController(String linkCorrelationId)
  name: LoggingFlowController(String linkCorrelationId)
  nameWithType: LoggingFlowController.LoggingFlowController(String linkCorrelationId)
  parameters:
  - name: linkCorrelationId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  syntax: public LoggingFlowController(String linkCorrelationId)
  uid: com.microsoft.azure.sdk.iot.service.transport.amqps.LoggingFlowController.LoggingFlowController(String)
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
- <xref href="BaseHandler" data-throw-if-not-resolved="False"/>
methods:
- fullName: com.microsoft.azure.sdk.iot.service.transport.amqps.LoggingFlowController.onUnhandled(Event event)
  name: onUnhandled(Event event)
  nameWithType: LoggingFlowController.onUnhandled(Event event)
  parameters:
  - name: event
    type: <xref href="Event?alt=Event&text=Event" data-throw-if-not-resolved="False"/>
  syntax: public void onUnhandled(Event event)
  uid: com.microsoft.azure.sdk.iot.service.transport.amqps.LoggingFlowController.onUnhandled(Event)
nameWithType: LoggingFlowController
syntax: public class LoggingFlowController
type: class
uid: com.microsoft.azure.sdk.iot.service.transport.amqps.LoggingFlowController
fullName: com.microsoft.azure.sdk.iot.service.transport.amqps.LoggingFlowController
name: LoggingFlowController
package: com.microsoft.azure.sdk.iot.service.transport.amqps
summary: >-
  <p>Copy of <xref uid="" data-throw-if-not-resolved="false" data-raw-source="org.apache.qpid.proton.reactor.FlowController"></xref> but with some small edits for logging purposes.</p>

  <p>Use this FlowController to automatically flow link credit back to the service from this client's receiver links after each delivery on the receiver link. </p>
metadata: {}
