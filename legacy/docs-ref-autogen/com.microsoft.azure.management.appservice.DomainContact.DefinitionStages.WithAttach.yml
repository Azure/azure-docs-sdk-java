### YamlMime:JavaType
inheritedMembers:
- com.microsoft.azure.management.resources.fluentcore.model.Attachable.InDefinition.attach()
- com.microsoft.azure.management.appservice.DomainContact.DefinitionStages.WithFaxNumber.withFaxNumber(String)
- com.microsoft.azure.management.appservice.DomainContact.DefinitionStages.WithJobTitle.withJobTitle(String)
- com.microsoft.azure.management.appservice.DomainContact.DefinitionStages.WithOrganization.withOrganization(String)
methods:
- com.microsoft.azure.management.appservice.DomainContact.DefinitionStages.WithAttach.build()
nameWithType: DomainContact.DefinitionStages.WithAttach<ParentT>
syntax: public interface WithAttach<ParentT> extends Attachable<ParentT>.InDefinition,DomainContact.DefinitionStages.WithOrganization<ParentT>,DomainContact.DefinitionStages.WithJobTitle<ParentT>,DomainContact.DefinitionStages.WithFaxNumber<ParentT>
type: interface
typeParameters:
- description: <p>the return type of <xref uid="com.microsoft.azure.management.resources.fluentcore.model.Attachable.InDefinition.attach()" data-throw-if-not-resolved="false">WithAttach#attach()</xref></p>
  name: ParentT
uid: com.microsoft.azure.management.appservice.DomainContact.DefinitionStages.WithAttach
fullName: com.microsoft.azure.management.appservice.DomainContact.DefinitionStages.WithAttach<ParentT>
name: DomainContact.DefinitionStages.WithAttach<ParentT>
package: com.microsoft.azure.management.appservice
summary: >-
  <p>The final stage of the domain contact definition. </p>

  <p>At this stage, any remaining optional settings can be specified, or the domain contact definition can be attached to the parent domain definition using <xref uid="com.microsoft.azure.management.resources.fluentcore.model.Attachable.InDefinition.attach()" data-throw-if-not-resolved="false">WithAttach#attach()</xref>. </p>
metadata: {}
