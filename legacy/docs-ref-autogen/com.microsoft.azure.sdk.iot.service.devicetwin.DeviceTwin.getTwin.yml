### YamlMime:JavaMember
nameWithType: DeviceTwin.getTwin
type: method
members:
- fullName: com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwin.getTwin(DeviceTwinDevice device)
  name: getTwin(DeviceTwinDevice device)
  nameWithType: DeviceTwin.getTwin(DeviceTwinDevice device)
  parameters:
  - description: <p>The device with a valid id for which device twin is to be retrieved. </p>
    name: device
    type: <xref href="com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice?alt=com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice&text=DeviceTwinDevice" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
    description: <p>This exception is thrown if the IO operation failed </p>
  - type: <xref href="IotHubException?alt=IotHubException&text=IotHubException" data-throw-if-not-resolved="False"/>
    description: <p>This exception is thrown if the response verification failed </p>
  summary: >-
    <p>This method retrieves device twin for the specified device.</p>

    <p></p>
  syntax: public void getTwin(DeviceTwinDevice device)
  uid: com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwin.getTwin(DeviceTwinDevice)
uid: com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwin.getTwin*
fullName: com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwin.getTwin(DeviceTwinDevice device)
name: getTwin(DeviceTwinDevice device)
package: com.microsoft.azure.sdk.iot.service.devicetwin
metadata: {}
