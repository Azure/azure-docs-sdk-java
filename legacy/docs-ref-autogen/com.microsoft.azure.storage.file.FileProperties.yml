### YamlMime:JavaType
constructors:
- fullName: com.microsoft.azure.storage.file.FileProperties.FileProperties()
  name: FileProperties()
  nameWithType: FileProperties.FileProperties()
  summary: <p>Creates an instance of the  class. </p>
  syntax: public FileProperties()
  uid: com.microsoft.azure.storage.file.FileProperties.FileProperties()
- fullName: com.microsoft.azure.storage.file.FileProperties.FileProperties(final FileProperties other)
  name: FileProperties(final FileProperties other)
  nameWithType: FileProperties.FileProperties(final FileProperties other)
  parameters:
  - description: <p>A <code>FileProperties</code> object which represents the file properties to copy. </p>
    name: other
    type: final <xref href="com.microsoft.azure.storage.file.FileProperties?alt=com.microsoft.azure.storage.file.FileProperties&text=FileProperties" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Creates an instance of the  class by copying values from another instance of the  class.</p>

    <p></p>
  syntax: public FileProperties(final FileProperties other)
  uid: com.microsoft.azure.storage.file.FileProperties.FileProperties(final FileProperties)
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
methods:
- fullName: com.microsoft.azure.storage.file.FileProperties.getCacheControl()
  name: getCacheControl()
  nameWithType: FileProperties.getCacheControl()
  returns:
    description: <p>A <code>String</code> which represents the content cache control value for the file. </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the cache control value for the file.</p>

    <p></p>
  syntax: public String getCacheControl()
  uid: com.microsoft.azure.storage.file.FileProperties.getCacheControl()
- fullName: com.microsoft.azure.storage.file.FileProperties.getChangeTime()
  name: getChangeTime()
  nameWithType: FileProperties.getChangeTime()
  returns:
    description: <p>A <code>String</code> object which represents the change time. </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the change time for the file.</p>

    <p></p>
  syntax: public String getChangeTime()
  uid: com.microsoft.azure.storage.file.FileProperties.getChangeTime()
- fullName: com.microsoft.azure.storage.file.FileProperties.getContentDisposition()
  name: getContentDisposition()
  nameWithType: FileProperties.getContentDisposition()
  returns:
    description: <p>A <code>String</code> which represents the content disposition, or <code>null</code> if content disposition has not been set on the file. </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the content disposition value for the file.</p>

    <p></p>
  syntax: public String getContentDisposition()
  uid: com.microsoft.azure.storage.file.FileProperties.getContentDisposition()
- fullName: com.microsoft.azure.storage.file.FileProperties.getContentEncoding()
  name: getContentEncoding()
  nameWithType: FileProperties.getContentEncoding()
  returns:
    description: <p>A <code>String</code> which represents the content encoding, or <code>null</code> if content encoding has not been set on the file. </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the content encoding value for the file.</p>

    <p></p>
  syntax: public String getContentEncoding()
  uid: com.microsoft.azure.storage.file.FileProperties.getContentEncoding()
- fullName: com.microsoft.azure.storage.file.FileProperties.getContentLanguage()
  name: getContentLanguage()
  nameWithType: FileProperties.getContentLanguage()
  returns:
    description: <p>A <code>String</code> which represents the content language, or <code>null</code> if content language has not been set on the file. </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the content language value for the file.</p>

    <p></p>
  syntax: public String getContentLanguage()
  uid: com.microsoft.azure.storage.file.FileProperties.getContentLanguage()
- fullName: com.microsoft.azure.storage.file.FileProperties.getContentMD5()
  name: getContentMD5()
  nameWithType: FileProperties.getContentMD5()
  returns:
    description: <p>A <code>String</code> which represents the content MD5 value. </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the content MD5 value for the file.</p>

    <p></p>
  syntax: public String getContentMD5()
  uid: com.microsoft.azure.storage.file.FileProperties.getContentMD5()
- fullName: com.microsoft.azure.storage.file.FileProperties.getContentType()
  name: getContentType()
  nameWithType: FileProperties.getContentType()
  returns:
    description: <p>A <code>String</code> which represents the content type, or <code>null</code> if the content type has not be set for the file. </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the content type value for the file.</p>

    <p></p>
  syntax: public String getContentType()
  uid: com.microsoft.azure.storage.file.FileProperties.getContentType()
- fullName: com.microsoft.azure.storage.file.FileProperties.getCopyState()
  name: getCopyState()
  nameWithType: FileProperties.getCopyState()
  returns:
    description: <p>A <xref uid="com.microsoft.azure.storage.file.CopyState" data-throw-if-not-resolved="false" data-raw-source="CopyState"></xref> object which represents the copy state of the file. </p>
    type: <xref href="com.microsoft.azure.storage.file.CopyState?alt=com.microsoft.azure.storage.file.CopyState&text=CopyState" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the file's copy state.</p>

    <p></p>
  syntax: public CopyState getCopyState()
  uid: com.microsoft.azure.storage.file.FileProperties.getCopyState()
- fullName: com.microsoft.azure.storage.file.FileProperties.getCreationTime()
  name: getCreationTime()
  nameWithType: FileProperties.getCreationTime()
  returns:
    description: <p>A <code>String</code> object which represents the creation time. </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the creation time for the file.</p>

    <p></p>
  syntax: public String getCreationTime()
  uid: com.microsoft.azure.storage.file.FileProperties.getCreationTime()
- fullName: com.microsoft.azure.storage.file.FileProperties.getEtag()
  name: getEtag()
  nameWithType: FileProperties.getEtag()
  returns:
    description: <p>A <code>String</code> which represents the ETag value. </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the ETag value for the file. </p>

    <p>The ETag value is a unique identifier that is updated when a write operation is performed against the file. It may be used to perform operations conditionally, providing concurrency control and improved efficiency. </p>

    <p>The <xref uid="com.microsoft.azure.storage.AccessCondition.generateIfMatchCondition(final String)" data-throw-if-not-resolved="false" data-raw-source="AccessCondition#generateIfMatchCondition(String)"></xref> and <xref uid="com.microsoft.azure.storage.AccessCondition.generateIfNoneMatchCondition(final String)" data-throw-if-not-resolved="false" data-raw-source="AccessCondition#generateIfNoneMatchCondition(String)"></xref> methods take an ETag value and return an <xref uid="com.microsoft.azure.storage.AccessCondition" data-throw-if-not-resolved="false" data-raw-source="AccessCondition"></xref> object that may be specified on the request.</p>

    <p></p>
  syntax: public String getEtag()
  uid: com.microsoft.azure.storage.file.FileProperties.getEtag()
- fullName: com.microsoft.azure.storage.file.FileProperties.getFileId()
  name: getFileId()
  nameWithType: FileProperties.getFileId()
  returns:
    description: <p>A <code>String</code> which specifies the file's id. </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the file's id.</p>

    <p></p>
  syntax: public String getFileId()
  uid: com.microsoft.azure.storage.file.FileProperties.getFileId()
- fullName: com.microsoft.azure.storage.file.FileProperties.getFilePermissionKey()
  name: getFilePermissionKey()
  nameWithType: FileProperties.getFilePermissionKey()
  returns:
    description: <p>A <code>String</code> which specifies the file's permission key. </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the file's permission key.</p>

    <p></p>
  syntax: public String getFilePermissionKey()
  uid: com.microsoft.azure.storage.file.FileProperties.getFilePermissionKey()
- fullName: com.microsoft.azure.storage.file.FileProperties.getLastModified()
  name: getLastModified()
  nameWithType: FileProperties.getLastModified()
  returns:
    description: <p>A <xref uid="" data-throw-if-not-resolved="false" data-raw-source="java.util.Date"></xref> object which represents the last modified time. </p>
    type: <xref href="Date?alt=Date&text=Date" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the last modified time for the file.</p>

    <p></p>
  syntax: public Date getLastModified()
  uid: com.microsoft.azure.storage.file.FileProperties.getLastModified()
- fullName: com.microsoft.azure.storage.file.FileProperties.getLastWriteTime()
  name: getLastWriteTime()
  nameWithType: FileProperties.getLastWriteTime()
  returns:
    description: <p>A <code>String</code> object which represents the last write time. </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the last write time for the file.</p>

    <p></p>
  syntax: public String getLastWriteTime()
  uid: com.microsoft.azure.storage.file.FileProperties.getLastWriteTime()
- fullName: com.microsoft.azure.storage.file.FileProperties.getLength()
  name: getLength()
  nameWithType: FileProperties.getLength()
  returns:
    description: <p>A <code>long</code> which represents the length of the file. </p>
    type: <xref href="long?alt=long&text=long" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the size, in bytes, of the file.</p>

    <p></p>
  syntax: public long getLength()
  uid: com.microsoft.azure.storage.file.FileProperties.getLength()
- fullName: com.microsoft.azure.storage.file.FileProperties.getNtfsAttributes()
  name: getNtfsAttributes()
  nameWithType: FileProperties.getNtfsAttributes()
  returns:
    description: <p>A <xref uid="com.microsoft.azure.storage.file.NtfsAttributes" data-throw-if-not-resolved="false" data-raw-source="NtfsAttributes"></xref> object which represents the file system attributes. </p>
    type: EnumSet&lt;<xref href="com.microsoft.azure.storage.file.NtfsAttributes?alt=com.microsoft.azure.storage.file.NtfsAttributes&text=NtfsAttributes" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Gets the file system attributes for files and directories. If not set, indicates preservation of existing values.</p>

    <p></p>
  syntax: public EnumSet<NtfsAttributes> getNtfsAttributes()
  uid: com.microsoft.azure.storage.file.FileProperties.getNtfsAttributes()
- fullName: com.microsoft.azure.storage.file.FileProperties.getParentId()
  name: getParentId()
  nameWithType: FileProperties.getParentId()
  returns:
    description: <p>A <code>String</code> which specifies the file's parent id. </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the file's parent id.</p>

    <p></p>
  syntax: public String getParentId()
  uid: com.microsoft.azure.storage.file.FileProperties.getParentId()
- fullName: com.microsoft.azure.storage.file.FileProperties.isServerEncrypted()
  name: isServerEncrypted()
  nameWithType: FileProperties.isServerEncrypted()
  returns:
    description: <p>A <code>boolean</code> which specifies the file's encryption status. </p>
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the file's server-side encryption status.</p>

    <p></p>
  syntax: public boolean isServerEncrypted()
  uid: com.microsoft.azure.storage.file.FileProperties.isServerEncrypted()
- fullName: com.microsoft.azure.storage.file.FileProperties.setCacheControl(final String cacheControl)
  name: setCacheControl(final String cacheControl)
  nameWithType: FileProperties.setCacheControl(final String cacheControl)
  parameters:
  - description: <p>A <code>String</code> which specifies the cache control value to set. </p>
    name: cacheControl
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Sets the cache control value for the file.</p>

    <p></p>
  syntax: public void setCacheControl(final String cacheControl)
  uid: com.microsoft.azure.storage.file.FileProperties.setCacheControl(final String)
- fullName: com.microsoft.azure.storage.file.FileProperties.setChangeTime(String changeTime)
  name: setChangeTime(String changeTime)
  nameWithType: FileProperties.setChangeTime(String changeTime)
  parameters:
  - description: <p>A <code>String</code> object which specifies the change time to set. </p>
    name: changeTime
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Sets the change time for the file.</p>

    <p></p>
  syntax: protected void setChangeTime(String changeTime)
  uid: com.microsoft.azure.storage.file.FileProperties.setChangeTime(String)
- fullName: com.microsoft.azure.storage.file.FileProperties.setContentDisposition(final String contentDisposition)
  name: setContentDisposition(final String contentDisposition)
  nameWithType: FileProperties.setContentDisposition(final String contentDisposition)
  parameters:
  - description: <p>A <code>String</code> which specifies the content disposition value to set. </p>
    name: contentDisposition
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Sets the content disposition value for the file.</p>

    <p></p>
  syntax: public void setContentDisposition(final String contentDisposition)
  uid: com.microsoft.azure.storage.file.FileProperties.setContentDisposition(final String)
- fullName: com.microsoft.azure.storage.file.FileProperties.setContentEncoding(final String contentEncoding)
  name: setContentEncoding(final String contentEncoding)
  nameWithType: FileProperties.setContentEncoding(final String contentEncoding)
  parameters:
  - description: <p>A <code>String</code> which specifies the content encoding value to set. </p>
    name: contentEncoding
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Sets the content encoding value for the file.</p>

    <p></p>
  syntax: public void setContentEncoding(final String contentEncoding)
  uid: com.microsoft.azure.storage.file.FileProperties.setContentEncoding(final String)
- fullName: com.microsoft.azure.storage.file.FileProperties.setContentLanguage(final String contentLanguage)
  name: setContentLanguage(final String contentLanguage)
  nameWithType: FileProperties.setContentLanguage(final String contentLanguage)
  parameters:
  - description: <p>A <code>String</code> which specifies the content language value to set. </p>
    name: contentLanguage
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Sets the content language for the file.</p>

    <p></p>
  syntax: public void setContentLanguage(final String contentLanguage)
  uid: com.microsoft.azure.storage.file.FileProperties.setContentLanguage(final String)
- fullName: com.microsoft.azure.storage.file.FileProperties.setContentMD5(final String contentMD5)
  name: setContentMD5(final String contentMD5)
  nameWithType: FileProperties.setContentMD5(final String contentMD5)
  parameters:
  - description: <p>A <code>String</code> which specifies the content MD5 value to set. </p>
    name: contentMD5
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Sets the content MD5 value for the file.</p>

    <p></p>
  syntax: public void setContentMD5(final String contentMD5)
  uid: com.microsoft.azure.storage.file.FileProperties.setContentMD5(final String)
- fullName: com.microsoft.azure.storage.file.FileProperties.setContentType(final String contentType)
  name: setContentType(final String contentType)
  nameWithType: FileProperties.setContentType(final String contentType)
  parameters:
  - description: <p>A <code>String</code> which specifies the content type value to set. </p>
    name: contentType
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Sets the content type value for the file.</p>

    <p></p>
  syntax: public void setContentType(final String contentType)
  uid: com.microsoft.azure.storage.file.FileProperties.setContentType(final String)
- fullName: com.microsoft.azure.storage.file.FileProperties.setCopyState(final CopyState copyState)
  name: setCopyState(final CopyState copyState)
  nameWithType: FileProperties.setCopyState(final CopyState copyState)
  parameters:
  - description: <p>A <xref uid="com.microsoft.azure.storage.file.CopyState" data-throw-if-not-resolved="false" data-raw-source="CopyState"></xref> object which specifies the copy state value to set. </p>
    name: copyState
    type: final <xref href="com.microsoft.azure.storage.file.CopyState?alt=com.microsoft.azure.storage.file.CopyState&text=CopyState" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Sets the copy state value for the file.</p>

    <p></p>
  syntax: protected void setCopyState(final CopyState copyState)
  uid: com.microsoft.azure.storage.file.FileProperties.setCopyState(final CopyState)
- fullName: com.microsoft.azure.storage.file.FileProperties.setCreationTime(String creationTime)
  name: setCreationTime(String creationTime)
  nameWithType: FileProperties.setCreationTime(String creationTime)
  parameters:
  - description: <p>A <code>String</code> object which specifies the creation time to set. </p>
    name: creationTime
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Sets the creation time to set for the file.</p>

    <p></p>
  syntax: public void setCreationTime(String creationTime)
  uid: com.microsoft.azure.storage.file.FileProperties.setCreationTime(String)
- fullName: com.microsoft.azure.storage.file.FileProperties.setEtag(final String etag)
  name: setEtag(final String etag)
  nameWithType: FileProperties.setEtag(final String etag)
  parameters:
  - description: <p>A <code>String</code> which specifies the ETag value to set. </p>
    name: etag
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Sets the ETag value for the file.</p>

    <p></p>
  syntax: protected void setEtag(final String etag)
  uid: com.microsoft.azure.storage.file.FileProperties.setEtag(final String)
- fullName: com.microsoft.azure.storage.file.FileProperties.setFileId(String fileId)
  name: setFileId(String fileId)
  nameWithType: FileProperties.setFileId(String fileId)
  parameters:
  - description: <p>A <code>String</code> which specifies the id to set. </p>
    name: fileId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Sets the file's id.</p>

    <p></p>
  syntax: protected void setFileId(String fileId)
  uid: com.microsoft.azure.storage.file.FileProperties.setFileId(String)
- fullName: com.microsoft.azure.storage.file.FileProperties.setFilePermissionKey(String filePermissionKey)
  name: setFilePermissionKey(String filePermissionKey)
  nameWithType: FileProperties.setFilePermissionKey(String filePermissionKey)
  parameters:
  - description: <p>A <code>String</code> which specifies the file permission key to set. </p>
    name: filePermissionKey
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Sets the file's permission key.</p>

    <p></p>
  syntax: public void setFilePermissionKey(String filePermissionKey)
  uid: com.microsoft.azure.storage.file.FileProperties.setFilePermissionKey(String)
- fullName: com.microsoft.azure.storage.file.FileProperties.setLastModified(final Date lastModified)
  name: setLastModified(final Date lastModified)
  nameWithType: FileProperties.setLastModified(final Date lastModified)
  parameters:
  - description: <p>A <xref uid="" data-throw-if-not-resolved="false" data-raw-source="java.util.Date"></xref> object which specifies the last modified time to set. </p>
    name: lastModified
    type: <xref href="final+Date?alt=final+Date&text=final+Date" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Sets the last modified time for the file.</p>

    <p></p>
  syntax: protected void setLastModified(final Date lastModified)
  uid: com.microsoft.azure.storage.file.FileProperties.setLastModified(final Date)
- fullName: com.microsoft.azure.storage.file.FileProperties.setLastWriteTime(String lastWriteTime)
  name: setLastWriteTime(String lastWriteTime)
  nameWithType: FileProperties.setLastWriteTime(String lastWriteTime)
  parameters:
  - description: <p>A <code>String</code> object which specifies the last write time to set. </p>
    name: lastWriteTime
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Sets the last write time for the file.</p>

    <p></p>
  syntax: protected void setLastWriteTime(String lastWriteTime)
  uid: com.microsoft.azure.storage.file.FileProperties.setLastWriteTime(String)
- fullName: com.microsoft.azure.storage.file.FileProperties.setLength(final long length)
  name: setLength(final long length)
  nameWithType: FileProperties.setLength(final long length)
  parameters:
  - description: <p>A <code>long</code> which specifies the length to set. </p>
    name: length
    type: <xref href="final+long?alt=final+long&text=final+long" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Sets the content length, in bytes, for the file.</p>

    <p></p>
  syntax: protected void setLength(final long length)
  uid: com.microsoft.azure.storage.file.FileProperties.setLength(final long)
- fullName: com.microsoft.azure.storage.file.FileProperties.setNtfsAttributes(EnumSet<NtfsAttributes> ntfsAttributes)
  name: setNtfsAttributes(EnumSet<NtfsAttributes> ntfsAttributes)
  nameWithType: FileProperties.setNtfsAttributes(EnumSet<NtfsAttributes> ntfsAttributes)
  parameters:
  - description: <p>A <xref uid="com.microsoft.azure.storage.file.NtfsAttributes" data-throw-if-not-resolved="false" data-raw-source="NtfsAttributes"></xref> which specifies the file system attributes to set. </p>
    name: ntfsAttributes
    type: EnumSet&lt;<xref href="com.microsoft.azure.storage.file.NtfsAttributes?alt=com.microsoft.azure.storage.file.NtfsAttributes&text=NtfsAttributes" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Sets the file system attributes for files and directories. If not set, indicates preservation of existing values.</p>

    <p></p>
  syntax: public void setNtfsAttributes(EnumSet<NtfsAttributes> ntfsAttributes)
  uid: com.microsoft.azure.storage.file.FileProperties.setNtfsAttributes(EnumSet<NtfsAttributes>)
- fullName: com.microsoft.azure.storage.file.FileProperties.setParentId(String parentId)
  name: setParentId(String parentId)
  nameWithType: FileProperties.setParentId(String parentId)
  parameters:
  - description: <p>A <code>String</code> which specifies the parent id to set. </p>
    name: parentId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Sets the file's parent id.</p>

    <p></p>
  syntax: protected void setParentId(String parentId)
  uid: com.microsoft.azure.storage.file.FileProperties.setParentId(String)
- fullName: com.microsoft.azure.storage.file.FileProperties.setServerEncrypted(boolean serverEncrypted)
  name: setServerEncrypted(boolean serverEncrypted)
  nameWithType: FileProperties.setServerEncrypted(boolean serverEncrypted)
  parameters:
  - description: <p>A <code>boolean</code> which specifies the encryption status to set. </p>
    name: serverEncrypted
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Sets the file's server-side encryption status.</p>

    <p></p>
  syntax: protected void setServerEncrypted(boolean serverEncrypted)
  uid: com.microsoft.azure.storage.file.FileProperties.setServerEncrypted(boolean)
nameWithType: FileProperties
syntax: public class FileProperties
type: class
uid: com.microsoft.azure.storage.file.FileProperties
fullName: com.microsoft.azure.storage.file.FileProperties
name: FileProperties
package: com.microsoft.azure.storage.file
summary: <p>Represents the system properties for a file. </p>
metadata: {}
