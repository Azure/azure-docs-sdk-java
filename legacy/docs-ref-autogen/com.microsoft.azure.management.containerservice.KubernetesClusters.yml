### YamlMime:JavaType
inheritedMembers:
- com.microsoft.azure.management.resources.fluentcore.collection.SupportsBatchCreation.create(Creatable<ResourceT>...)
- com.microsoft.azure.management.resources.fluentcore.collection.SupportsBatchCreation.create(List<Creatable<ResourceT>>)
- com.microsoft.azure.management.resources.fluentcore.collection.SupportsBatchCreation.createAsync(Creatable<ResourceT>...)
- com.microsoft.azure.management.resources.fluentcore.collection.SupportsBatchCreation.createAsync(List<Creatable<ResourceT>>)
- com.microsoft.azure.management.resources.fluentcore.collection.SupportsBatchCreation.createAsync(ServiceCallback<CreatedResources<ResourceT>>,Creatable<ResourceT>...)
- com.microsoft.azure.management.resources.fluentcore.collection.SupportsBatchCreation.createAsync(final ServiceCallback<CreatedResources<ResourceT>>,List<Creatable<ResourceT>>)
- com.microsoft.azure.management.resources.fluentcore.collection.SupportsCreating.define(String)
- com.microsoft.azure.management.resources.fluentcore.collection.SupportsDeletingById.deleteById(String)
- com.microsoft.azure.management.resources.fluentcore.collection.SupportsDeletingById.deleteByIdAsync(String,ServiceCallback<Void>)
- com.microsoft.azure.management.resources.fluentcore.collection.SupportsDeletingById.deleteByIdAsync(String)
- com.microsoft.azure.management.resources.fluentcore.arm.collection.SupportsDeletingByResourceGroup.deleteByResourceGroup(String,String)
- com.microsoft.azure.management.resources.fluentcore.arm.collection.SupportsDeletingByResourceGroup.deleteByResourceGroupAsync(String,String,ServiceCallback<Void>)
- com.microsoft.azure.management.resources.fluentcore.arm.collection.SupportsDeletingByResourceGroup.deleteByResourceGroupAsync(String,String)
- com.microsoft.azure.management.resources.fluentcore.arm.collection.SupportsGettingById.getById(String)
- com.microsoft.azure.management.resources.fluentcore.arm.collection.SupportsGettingById.getByIdAsync(String)
- com.microsoft.azure.management.resources.fluentcore.arm.collection.SupportsGettingById.getByIdAsync(String,ServiceCallback<T>)
- com.microsoft.azure.management.resources.fluentcore.arm.collection.SupportsGettingByResourceGroup.getByResourceGroup(String,String)
- com.microsoft.azure.management.resources.fluentcore.arm.collection.SupportsGettingByResourceGroup.getByResourceGroupAsync(String,String)
- com.microsoft.azure.management.resources.fluentcore.arm.collection.SupportsGettingByResourceGroup.getByResourceGroupAsync(String,String,ServiceCallback<T>)
- com.microsoft.azure.management.resources.fluentcore.model.HasInner.inner()
- com.microsoft.azure.management.resources.fluentcore.collection.SupportsListing.list()
- com.microsoft.azure.management.resources.fluentcore.collection.SupportsListing.listAsync()
- com.microsoft.azure.management.resources.fluentcore.arm.collection.SupportsListingByResourceGroup.listByResourceGroup(String)
- com.microsoft.azure.management.resources.fluentcore.arm.collection.SupportsListingByResourceGroup.listByResourceGroupAsync(String)
- com.microsoft.azure.management.resources.fluentcore.arm.models.HasManager.manager()
methods:
- fullName: com.microsoft.azure.management.containerservice.KubernetesClusters.getAdminKubeConfigContent(String resourceGroupName, String kubernetesClusterName)
  name: getAdminKubeConfigContent(String resourceGroupName, String kubernetesClusterName)
  nameWithType: KubernetesClusters.getAdminKubeConfigContent(String resourceGroupName, String kubernetesClusterName)
  parameters:
  - description: <p>the resource group name where the cluster is </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the managed cluster name </p>
    name: kubernetesClusterName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the Kube.config content which can be used with a Kubernetes client </p>
    type: <xref href="byte+%5B%5D?alt=byte+%5B%5D&text=byte+%5B%5D" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Returns the admin Kube.config content which can be used with a Kubernetes client.</p>

    <p></p>
  syntax: public byte [] getAdminKubeConfigContent(String resourceGroupName, String kubernetesClusterName)
  uid: com.microsoft.azure.management.containerservice.KubernetesClusters.getAdminKubeConfigContent(String,String)
- fullName: com.microsoft.azure.management.containerservice.KubernetesClusters.getAdminKubeConfigContentAsync(String resourceGroupName, String kubernetesClusterName)
  name: getAdminKubeConfigContentAsync(String resourceGroupName, String kubernetesClusterName)
  nameWithType: KubernetesClusters.getAdminKubeConfigContentAsync(String resourceGroupName, String kubernetesClusterName)
  parameters:
  - description: <p>the resource group name where the cluster is </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the managed cluster name </p>
    name: kubernetesClusterName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>a future representation of the Kube.config content which can be used with a Kubernetes client </p>
    type: <xref href="Observable%3Cbyte%5B%5D%3E?alt=Observable%3Cbyte%5B%5D%3E&text=Observable%3Cbyte%5B%5D%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Returns asynchronously the admin Kube.config content which can be used with a Kubernetes client.</p>

    <p></p>
  syntax: public Observable<byte[]> getAdminKubeConfigContentAsync(String resourceGroupName, String kubernetesClusterName)
  uid: com.microsoft.azure.management.containerservice.KubernetesClusters.getAdminKubeConfigContentAsync(String,String)
- fullName: com.microsoft.azure.management.containerservice.KubernetesClusters.getUserKubeConfigContent(String resourceGroupName, String kubernetesClusterName)
  name: getUserKubeConfigContent(String resourceGroupName, String kubernetesClusterName)
  nameWithType: KubernetesClusters.getUserKubeConfigContent(String resourceGroupName, String kubernetesClusterName)
  parameters:
  - description: <p>the resource group name where the cluster is </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the managed cluster name </p>
    name: kubernetesClusterName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the Kube.config content which can be used with a Kubernetes client </p>
    type: <xref href="byte+%5B%5D?alt=byte+%5B%5D&text=byte+%5B%5D" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Returns the user Kube.config content which can be used with a Kubernetes client.</p>

    <p></p>
  syntax: public byte [] getUserKubeConfigContent(String resourceGroupName, String kubernetesClusterName)
  uid: com.microsoft.azure.management.containerservice.KubernetesClusters.getUserKubeConfigContent(String,String)
- fullName: com.microsoft.azure.management.containerservice.KubernetesClusters.getUserKubeConfigContentAsync(String resourceGroupName, String kubernetesClusterName)
  name: getUserKubeConfigContentAsync(String resourceGroupName, String kubernetesClusterName)
  nameWithType: KubernetesClusters.getUserKubeConfigContentAsync(String resourceGroupName, String kubernetesClusterName)
  parameters:
  - description: <p>the resource group name where the cluster is </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the managed cluster name </p>
    name: kubernetesClusterName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>a future representation of the Kube.config content which can be used with a Kubernetes client </p>
    type: <xref href="Observable%3Cbyte%5B%5D%3E?alt=Observable%3Cbyte%5B%5D%3E&text=Observable%3Cbyte%5B%5D%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Returns asynchronously the user Kube.config content which can be used with a Kubernetes client.</p>

    <p></p>
  syntax: public Observable<byte[]> getUserKubeConfigContentAsync(String resourceGroupName, String kubernetesClusterName)
  uid: com.microsoft.azure.management.containerservice.KubernetesClusters.getUserKubeConfigContentAsync(String,String)
- fullName: com.microsoft.azure.management.containerservice.KubernetesClusters.listKubernetesVersions(Region region)
  name: listKubernetesVersions(Region region)
  nameWithType: KubernetesClusters.listKubernetesVersions(Region region)
  parameters:
  - description: <p>the Azure region to query into </p>
    name: region
    type: <xref href="com.microsoft.azure.management.resources.fluentcore.arm.Region?alt=com.microsoft.azure.management.resources.fluentcore.arm.Region&text=Region" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>a set of Kubernetes versions which can be used when creating a service in this region </p>
    type: <xref href="Set%3CString%3E?alt=Set%3CString%3E&text=Set%3CString%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Returns the list of available Kubernetes versions available for the given Azure region.</p>

    <p></p>
  syntax: public Set<String> listKubernetesVersions(Region region)
  uid: com.microsoft.azure.management.containerservice.KubernetesClusters.listKubernetesVersions(Region)
- fullName: com.microsoft.azure.management.containerservice.KubernetesClusters.listKubernetesVersionsAsync(Region region)
  name: listKubernetesVersionsAsync(Region region)
  nameWithType: KubernetesClusters.listKubernetesVersionsAsync(Region region)
  parameters:
  - description: <p>the Azure region to query into </p>
    name: region
    type: <xref href="com.microsoft.azure.management.resources.fluentcore.arm.Region?alt=com.microsoft.azure.management.resources.fluentcore.arm.Region&text=Region" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>a future representation of a set of Kubernetes versions which can be used when creating a service in this region </p>
    type: <xref href="Observable%3CSet%3CString%3E%3E?alt=Observable%3CSet%3CString%3E%3E&text=Observable%3CSet%3CString%3E%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Returns the list of available Kubernetes versions available for the given Azure region.</p>

    <p></p>
  syntax: public Observable<Set<String>> listKubernetesVersionsAsync(Region region)
  uid: com.microsoft.azure.management.containerservice.KubernetesClusters.listKubernetesVersionsAsync(Region)
nameWithType: KubernetesClusters
syntax: public interface KubernetesClusters extends HasManager<ContainerServiceManager>,HasInner<ManagedClustersInner>,SupportsCreating<KubernetesCluster.DefinitionStages.Blank>,SupportsBatchCreation<KubernetesCluster>,SupportsListing<KubernetesCluster>,SupportsGettingById<KubernetesCluster>,SupportsDeletingById,SupportsDeletingByResourceGroup,SupportsListingByResourceGroup<KubernetesCluster>,SupportsGettingByResourceGroup<KubernetesCluster>
type: interface
uid: com.microsoft.azure.management.containerservice.KubernetesClusters
fullName: com.microsoft.azure.management.containerservice.KubernetesClusters
name: KubernetesClusters
package: com.microsoft.azure.management.containerservice
summary: <p>Entry point to managed Kubernetes service management API. </p>
metadata: {}
