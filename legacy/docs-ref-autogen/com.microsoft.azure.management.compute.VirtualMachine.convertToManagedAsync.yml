### YamlMime:JavaMember
nameWithType: VirtualMachine.convertToManagedAsync
type: method
members:
- fullName: com.microsoft.azure.management.compute.VirtualMachine.convertToManagedAsync()
  name: convertToManagedAsync()
  nameWithType: VirtualMachine.convertToManagedAsync()
  returns:
    description: <p>a representation of the deferred computation of this call </p>
    type: <xref href="Completable?alt=Completable&text=Completable" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Converts (migrates) the virtual machine with un-managed disks to use managed disk asynchronously.</p>

    <p></p>
  syntax: public Completable convertToManagedAsync()
  uid: com.microsoft.azure.management.compute.VirtualMachine.convertToManagedAsync()
- fullName: com.microsoft.azure.management.compute.VirtualMachine.convertToManagedAsync(ServiceCallback<Void> callback)
  name: convertToManagedAsync(ServiceCallback<Void> callback)
  nameWithType: VirtualMachine.convertToManagedAsync(ServiceCallback<Void> callback)
  parameters:
  - description: <p>the callback to call on success or failure </p>
    name: callback
    type: <xref href="ServiceCallback%3CVoid%3E?alt=ServiceCallback<Void>&text=ServiceCallback%3CVoid%3E" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>a handle to cancel the request </p>
    type: <xref href="ServiceFuture%3CVoid%3E?alt=ServiceFuture<Void>&text=ServiceFuture%3CVoid%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Converts (migrates) the virtual machine with un-managed disks to use managed disk asynchronously.</p>

    <p></p>
  syntax: public ServiceFuture<Void> convertToManagedAsync(ServiceCallback<Void> callback)
  uid: com.microsoft.azure.management.compute.VirtualMachine.convertToManagedAsync(ServiceCallback<Void>)
uid: com.microsoft.azure.management.compute.VirtualMachine.convertToManagedAsync*
fullName: com.microsoft.azure.management.compute.VirtualMachine.convertToManagedAsync()
name: convertToManagedAsync()
package: com.microsoft.azure.management.compute
metadata: {}
