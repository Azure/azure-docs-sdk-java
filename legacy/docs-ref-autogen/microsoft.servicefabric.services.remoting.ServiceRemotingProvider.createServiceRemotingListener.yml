### YamlMime:JavaMember
nameWithType: ServiceRemotingProvider.createServiceRemotingListener
type: method
members:
- fullName: microsoft.servicefabric.services.remoting.ServiceRemotingProvider.createServiceRemotingListener(ServiceContext serviceContext, Service serviceImplementation)
  name: createServiceRemotingListener(ServiceContext serviceContext, Service serviceImplementation)
  nameWithType: ServiceRemotingProvider.createServiceRemotingListener(ServiceContext serviceContext, Service serviceImplementation)
  parameters:
  - name: serviceContext
    type: <xref href="system.fabric.ServiceContext?alt=system.fabric.ServiceContext&text=ServiceContext" data-throw-if-not-resolved="False"/>
  - name: serviceImplementation
    type: <xref href="microsoft.servicefabric.services.remoting.Service?alt=microsoft.servicefabric.services.remoting.Service&text=Service" data-throw-if-not-resolved="False"/>
  returns:
    type: abstract <xref href="microsoft.servicefabric.services.remoting.runtime.ServiceRemotingListener?alt=microsoft.servicefabric.services.remoting.runtime.ServiceRemotingListener&text=ServiceRemotingListener" data-throw-if-not-resolved="False"/>
  syntax: public abstract ServiceRemotingListener createServiceRemotingListener(ServiceContext serviceContext, Service serviceImplementation)
  uid: microsoft.servicefabric.services.remoting.ServiceRemotingProvider.createServiceRemotingListener(ServiceContext,Service)
uid: microsoft.servicefabric.services.remoting.ServiceRemotingProvider.createServiceRemotingListener*
fullName: microsoft.servicefabric.services.remoting.ServiceRemotingProvider.createServiceRemotingListener(ServiceContext serviceContext, Service serviceImplementation)
name: createServiceRemotingListener(ServiceContext serviceContext, Service serviceImplementation)
package: microsoft.servicefabric.services.remoting
metadata: {}
