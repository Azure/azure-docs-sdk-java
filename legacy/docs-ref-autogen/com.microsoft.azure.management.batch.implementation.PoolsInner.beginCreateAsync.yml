### YamlMime:JavaMember
nameWithType: PoolsInner.beginCreateAsync
type: method
members:
- fullName: com.microsoft.azure.management.batch.implementation.PoolsInner.beginCreateAsync(String resourceGroupName, String accountName, String poolName, PoolInner parameters)
  name: beginCreateAsync(String resourceGroupName, String accountName, String poolName, PoolInner parameters)
  nameWithType: PoolsInner.beginCreateAsync(String resourceGroupName, String accountName, String poolName, PoolInner parameters)
  parameters:
  - description: <p>The name of the resource group that contains the Batch account. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the Batch account. </p>
    name: accountName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The pool name. This must be unique within the account. </p>
    name: poolName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>Additional parameters for pool creation. </p>
    name: parameters
    type: <xref href="com.microsoft.azure.management.batch.implementation.PoolInner?alt=com.microsoft.azure.management.batch.implementation.PoolInner&text=PoolInner" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the PoolInner object </p>
    type: Observable&lt;<xref href="com.microsoft.azure.management.batch.implementation.PoolInner?alt=com.microsoft.azure.management.batch.implementation.PoolInner&text=PoolInner" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Creates a new pool inside the specified account.</p>

    <p></p>
  syntax: public Observable<PoolInner> beginCreateAsync(String resourceGroupName, String accountName, String poolName, PoolInner parameters)
  uid: com.microsoft.azure.management.batch.implementation.PoolsInner.beginCreateAsync(String,String,String,PoolInner)
- fullName: com.microsoft.azure.management.batch.implementation.PoolsInner.beginCreateAsync(String resourceGroupName, String accountName, String poolName, PoolInner parameters, final ServiceCallback<PoolInner> serviceCallback)
  name: beginCreateAsync(String resourceGroupName, String accountName, String poolName, PoolInner parameters, final ServiceCallback<PoolInner> serviceCallback)
  nameWithType: PoolsInner.beginCreateAsync(String resourceGroupName, String accountName, String poolName, PoolInner parameters, final ServiceCallback<PoolInner> serviceCallback)
  parameters:
  - description: <p>The name of the resource group that contains the Batch account. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the Batch account. </p>
    name: accountName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The pool name. This must be unique within the account. </p>
    name: poolName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>Additional parameters for pool creation. </p>
    name: parameters
    type: <xref href="com.microsoft.azure.management.batch.implementation.PoolInner?alt=com.microsoft.azure.management.batch.implementation.PoolInner&text=PoolInner" data-throw-if-not-resolved="False"/>
  - description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    name: serviceCallback
    type: final ServiceCallback&lt;<xref href="com.microsoft.azure.management.batch.implementation.PoolInner?alt=com.microsoft.azure.management.batch.implementation.PoolInner&text=PoolInner" data-throw-if-not-resolved="False"/>&gt;
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
    type: ServiceFuture&lt;<xref href="com.microsoft.azure.management.batch.implementation.PoolInner?alt=com.microsoft.azure.management.batch.implementation.PoolInner&text=PoolInner" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Creates a new pool inside the specified account.</p>

    <p></p>
  syntax: public ServiceFuture<PoolInner> beginCreateAsync(String resourceGroupName, String accountName, String poolName, PoolInner parameters, final ServiceCallback<PoolInner> serviceCallback)
  uid: com.microsoft.azure.management.batch.implementation.PoolsInner.beginCreateAsync(String,String,String,PoolInner,final ServiceCallback<PoolInner>)
- fullName: com.microsoft.azure.management.batch.implementation.PoolsInner.beginCreateAsync(String resourceGroupName, String accountName, String poolName, PoolInner parameters, String ifMatch, String ifNoneMatch)
  name: beginCreateAsync(String resourceGroupName, String accountName, String poolName, PoolInner parameters, String ifMatch, String ifNoneMatch)
  nameWithType: PoolsInner.beginCreateAsync(String resourceGroupName, String accountName, String poolName, PoolInner parameters, String ifMatch, String ifNoneMatch)
  parameters:
  - description: <p>The name of the resource group that contains the Batch account. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the Batch account. </p>
    name: accountName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The pool name. This must be unique within the account. </p>
    name: poolName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>Additional parameters for pool creation. </p>
    name: parameters
    type: <xref href="com.microsoft.azure.management.batch.implementation.PoolInner?alt=com.microsoft.azure.management.batch.implementation.PoolInner&text=PoolInner" data-throw-if-not-resolved="False"/>
  - description: <p>The entity state (ETag) version of the pool to update. A value of "*" can be used to apply the operation only if the pool already exists. If omitted, this operation will always be applied. </p>
    name: ifMatch
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>Set to '*' to allow a new pool to be created, but to prevent updating an existing pool. Other values will be ignored. </p>
    name: ifNoneMatch
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the PoolInner object </p>
    type: Observable&lt;<xref href="com.microsoft.azure.management.batch.implementation.PoolInner?alt=com.microsoft.azure.management.batch.implementation.PoolInner&text=PoolInner" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Creates a new pool inside the specified account.</p>

    <p></p>
  syntax: public Observable<PoolInner> beginCreateAsync(String resourceGroupName, String accountName, String poolName, PoolInner parameters, String ifMatch, String ifNoneMatch)
  uid: com.microsoft.azure.management.batch.implementation.PoolsInner.beginCreateAsync(String,String,String,PoolInner,String,String)
- fullName: com.microsoft.azure.management.batch.implementation.PoolsInner.beginCreateAsync(String resourceGroupName, String accountName, String poolName, PoolInner parameters, String ifMatch, String ifNoneMatch, final ServiceCallback<PoolInner> serviceCallback)
  name: beginCreateAsync(String resourceGroupName, String accountName, String poolName, PoolInner parameters, String ifMatch, String ifNoneMatch, final ServiceCallback<PoolInner> serviceCallback)
  nameWithType: PoolsInner.beginCreateAsync(String resourceGroupName, String accountName, String poolName, PoolInner parameters, String ifMatch, String ifNoneMatch, final ServiceCallback<PoolInner> serviceCallback)
  parameters:
  - description: <p>The name of the resource group that contains the Batch account. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the Batch account. </p>
    name: accountName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The pool name. This must be unique within the account. </p>
    name: poolName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>Additional parameters for pool creation. </p>
    name: parameters
    type: <xref href="com.microsoft.azure.management.batch.implementation.PoolInner?alt=com.microsoft.azure.management.batch.implementation.PoolInner&text=PoolInner" data-throw-if-not-resolved="False"/>
  - description: <p>The entity state (ETag) version of the pool to update. A value of "*" can be used to apply the operation only if the pool already exists. If omitted, this operation will always be applied. </p>
    name: ifMatch
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>Set to '*' to allow a new pool to be created, but to prevent updating an existing pool. Other values will be ignored. </p>
    name: ifNoneMatch
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    name: serviceCallback
    type: final ServiceCallback&lt;<xref href="com.microsoft.azure.management.batch.implementation.PoolInner?alt=com.microsoft.azure.management.batch.implementation.PoolInner&text=PoolInner" data-throw-if-not-resolved="False"/>&gt;
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
    type: ServiceFuture&lt;<xref href="com.microsoft.azure.management.batch.implementation.PoolInner?alt=com.microsoft.azure.management.batch.implementation.PoolInner&text=PoolInner" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Creates a new pool inside the specified account.</p>

    <p></p>
  syntax: public ServiceFuture<PoolInner> beginCreateAsync(String resourceGroupName, String accountName, String poolName, PoolInner parameters, String ifMatch, String ifNoneMatch, final ServiceCallback<PoolInner> serviceCallback)
  uid: com.microsoft.azure.management.batch.implementation.PoolsInner.beginCreateAsync(String,String,String,PoolInner,String,String,final ServiceCallback<PoolInner>)
uid: com.microsoft.azure.management.batch.implementation.PoolsInner.beginCreateAsync*
fullName: com.microsoft.azure.management.batch.implementation.PoolsInner.beginCreateAsync(String resourceGroupName, String accountName, String poolName, PoolInner parameters)
name: beginCreateAsync(String resourceGroupName, String accountName, String poolName, PoolInner parameters)
package: com.microsoft.azure.management.batch.implementation
metadata: {}
