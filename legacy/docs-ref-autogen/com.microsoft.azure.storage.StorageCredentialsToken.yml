### YamlMime:JavaType
constructors:
- fullName: com.microsoft.azure.storage.StorageCredentialsToken.StorageCredentialsToken(String accountName, String token)
  name: StorageCredentialsToken(String accountName, String token)
  nameWithType: StorageCredentialsToken.StorageCredentialsToken(String accountName, String token)
  parameters:
  - name: accountName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>A <code>String</code> that represents the token. </p>
    name: token
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Creates an instance of the  class, using the specified token. Token credentials must only be used with HTTPS requests on the blob and queue services. The specified token is stored as a .</p>

    <p></p>
  syntax: public StorageCredentialsToken(String accountName, String token)
  uid: com.microsoft.azure.storage.StorageCredentialsToken.StorageCredentialsToken(String,String)
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
- <xref href="com.microsoft.azure.storage.StorageCredentials?alt=com.microsoft.azure.storage.StorageCredentials&text=StorageCredentials" data-throw-if-not-resolved="False"/>
inheritedMembers:
- com.microsoft.azure.storage.StorageCredentials.setHttpsOnly(boolean)
- com.microsoft.azure.storage.StorageCredentials.transformUri(final URI)
- com.microsoft.azure.storage.StorageCredentials.transformUri(StorageUri)
- com.microsoft.azure.storage.StorageCredentials.tryParseCredentials(final Map<String, String>)
- com.microsoft.azure.storage.StorageCredentials.tryParseCredentials(final String)
methods:
- fullName: com.microsoft.azure.storage.StorageCredentialsToken.getAccountName()
  name: getAccountName()
  nameWithType: StorageCredentialsToken.getAccountName()
  returns:
    description: <p>A <code>String</code> that contains the account name. </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the account name.</p>

    <p></p>
  syntax: public String getAccountName()
  uid: com.microsoft.azure.storage.StorageCredentialsToken.getAccountName()
- fullName: com.microsoft.azure.storage.StorageCredentialsToken.getToken()
  name: getToken()
  nameWithType: StorageCredentialsToken.getToken()
  returns:
    description: <p>A <code>String</code> that contains the token. </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the token.</p>

    <p></p>
  syntax: public String getToken()
  uid: com.microsoft.azure.storage.StorageCredentialsToken.getToken()
- fullName: com.microsoft.azure.storage.StorageCredentialsToken.isHttpsOnly()
  name: isHttpsOnly()
  nameWithType: StorageCredentialsToken.isHttpsOnly()
  returns:
    description: <p>A <code>boolean</code> representing whether this <code>StorageCredentials</code> object only allows access via HTTPS. </p>
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets whether this  object only allows access via HTTPS.</p>

    <p></p>
  syntax: public boolean isHttpsOnly()
  uid: com.microsoft.azure.storage.StorageCredentialsToken.isHttpsOnly()
- fullName: com.microsoft.azure.storage.StorageCredentialsToken.toString(final boolean exportSecrets)
  name: toString(final boolean exportSecrets)
  nameWithType: StorageCredentialsToken.toString(final boolean exportSecrets)
  parameters:
  - description: >-
      <p>

        <code>true</code> to include sensitive data in the return string; otherwise, <code>false</code>.</p>
    name: exportSecrets
    type: <xref href="final+boolean?alt=final+boolean&text=final+boolean" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>A <code>String</code> that represents this object, optionally including sensitive data. </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Returns a  that represents this instance, optionally including sensitive data.</p>

    <p></p>
  syntax: public String toString(final boolean exportSecrets)
  uid: com.microsoft.azure.storage.StorageCredentialsToken.toString(final boolean)
- fullName: com.microsoft.azure.storage.StorageCredentialsToken.transformUri(StorageUri resourceUri, OperationContext opContext)
  name: transformUri(StorageUri resourceUri, OperationContext opContext)
  nameWithType: StorageCredentialsToken.transformUri(StorageUri resourceUri, OperationContext opContext)
  parameters:
  - name: resourceUri
    type: <xref href="com.microsoft.azure.storage.StorageUri?alt=com.microsoft.azure.storage.StorageUri&text=StorageUri" data-throw-if-not-resolved="False"/>
  - name: opContext
    type: <xref href="com.microsoft.azure.storage.OperationContext?alt=com.microsoft.azure.storage.OperationContext&text=OperationContext" data-throw-if-not-resolved="False"/>
  returns:
    type: <xref href="com.microsoft.azure.storage.StorageUri?alt=com.microsoft.azure.storage.StorageUri&text=StorageUri" data-throw-if-not-resolved="False"/>
  syntax: public StorageUri transformUri(StorageUri resourceUri, OperationContext opContext)
  uid: com.microsoft.azure.storage.StorageCredentialsToken.transformUri(StorageUri,OperationContext)
- fullName: com.microsoft.azure.storage.StorageCredentialsToken.transformUri(URI resourceUri, OperationContext opContext)
  name: transformUri(URI resourceUri, OperationContext opContext)
  nameWithType: StorageCredentialsToken.transformUri(URI resourceUri, OperationContext opContext)
  parameters:
  - name: resourceUri
    type: <xref href="URI?alt=URI&text=URI" data-throw-if-not-resolved="False"/>
  - name: opContext
    type: <xref href="com.microsoft.azure.storage.OperationContext?alt=com.microsoft.azure.storage.OperationContext&text=OperationContext" data-throw-if-not-resolved="False"/>
  returns:
    type: <xref href="URI?alt=URI&text=URI" data-throw-if-not-resolved="False"/>
  syntax: public URI transformUri(URI resourceUri, OperationContext opContext)
  uid: com.microsoft.azure.storage.StorageCredentialsToken.transformUri(URI,OperationContext)
- fullName: com.microsoft.azure.storage.StorageCredentialsToken.updateToken(final String token)
  name: updateToken(final String token)
  nameWithType: StorageCredentialsToken.updateToken(final String token)
  parameters:
  - description: <p>A <code>String</code> that represents the access token to be used when authenticating HTTPS requests. </p>
    name: token
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  returns:
    type: <xref href="synchronized+void?alt=synchronized+void&text=synchronized+void" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Sets the token to be used when authenticating HTTPS requests.</p>

    <p></p>
  syntax: public synchronized void updateToken(final String token)
  uid: com.microsoft.azure.storage.StorageCredentialsToken.updateToken(final String)
nameWithType: StorageCredentialsToken
syntax: public class StorageCredentialsToken extends StorageCredentials
type: class
uid: com.microsoft.azure.storage.StorageCredentialsToken
fullName: com.microsoft.azure.storage.StorageCredentialsToken
name: StorageCredentialsToken
package: com.microsoft.azure.storage
summary: <p>Represents storage account credentials, based on an authentication token, for accessing the Microsoft Azure storage services. </p>
metadata: {}
