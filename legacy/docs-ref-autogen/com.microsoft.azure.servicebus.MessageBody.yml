### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.servicebus.MessageBody
  id: MessageBody
  parent: com.microsoft.azure.servicebus
  children:
  - com.microsoft.azure.servicebus.MessageBody.fromBinaryData(List<byte[]>)
  - com.microsoft.azure.servicebus.MessageBody.fromSequenceData(List<List<Object>>)
  - com.microsoft.azure.servicebus.MessageBody.fromValueData(Object)
  - com.microsoft.azure.servicebus.MessageBody.getBinaryData()
  - com.microsoft.azure.servicebus.MessageBody.getBodyType()
  - com.microsoft.azure.servicebus.MessageBody.getSequenceData()
  - com.microsoft.azure.servicebus.MessageBody.getValueData()
  href: com.microsoft.azure.servicebus.MessageBody.yml
  langs:
  - java
  name: MessageBody
  nameWithType: MessageBody
  fullName: com.microsoft.azure.servicebus.MessageBody
  type: Class
  source:
    remote: &o0
      path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/MessageBody.java
      branch: master
      repo: https://github.com/Azure/azure-service-bus-java
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/MessageBody.java
    startLine: 11
  package: com.microsoft.azure.servicebus
  summary: "<p>This class encapsulates the body of a message. Body types map to AMQP message body types. It has getters and setters for multiple body types. Client should test for body type before calling corresponding get method. Get methods not corresponding to the type of the body return null. </p>"
  syntax: &o1
    content: public class MessageBody
  inheritance:
  - java.lang.Object
  - Serializable
- uid: com.microsoft.azure.servicebus.MessageBody.fromBinaryData(List<byte[]>)
  id: fromBinaryData(List<byte[]>)
  parent: com.microsoft.azure.servicebus.MessageBody
  href: com.microsoft.azure.servicebus.MessageBody.yml
  langs:
  - java
  name: fromBinaryData(List<byte[]> binaryData)
  nameWithType: MessageBody.fromBinaryData(List<byte[]> binaryData)
  fullName: com.microsoft.azure.servicebus.MessageBody.fromBinaryData(List<byte[]> binaryData)
  overload: com.microsoft.azure.servicebus.MessageBody.fromBinaryData*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/MessageBody.java
    startLine: 69
  package: com.microsoft.azure.servicebus
  summary: "<p>Creates a message body from a list of Data sections.Each Data section is a byte array. Please note that this version of the SDK supports only one Data section in a message. It means only a list of exactly one byte array in it is accepted as message body. </p>"
  syntax:
    content: public static MessageBody fromBinaryData(List<byte[]> binaryData)
    parameters:
    - id: binaryData
      type: ec5d9e1e
      description: <p>a list of byte arrays. </p>
    return:
      type: com.microsoft.azure.servicebus.MessageBody
      description: <p>MessageBody instance wrapping around the binary data. </p>
- uid: com.microsoft.azure.servicebus.MessageBody.fromSequenceData(List<List<Object>>)
  id: fromSequenceData(List<List<Object>>)
  parent: com.microsoft.azure.servicebus.MessageBody
  href: com.microsoft.azure.servicebus.MessageBody.yml
  langs:
  - java
  name: fromSequenceData(List<List<Object>> sequenceData)
  nameWithType: MessageBody.fromSequenceData(List<List<Object>> sequenceData)
  fullName: com.microsoft.azure.servicebus.MessageBody.fromSequenceData(List<List<Object>> sequenceData)
  overload: com.microsoft.azure.servicebus.MessageBody.fromSequenceData*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/MessageBody.java
    startLine: 48
  package: com.microsoft.azure.servicebus
  summary: "<p>Creates a message body from a list of AMQPSequence sections.Each AMQPSequence section is in turn a list of objects. Please note that this version of the SDK supports only one AMQPSequence section in a message. It means only a list of exactly one sequence in it is accepted as message body. </p>"
  syntax:
    content: public static MessageBody fromSequenceData(List<List<Object>> sequenceData)
    parameters:
    - id: sequenceData
      type: 323aca02
      description: <p>a list of AMQPSequence sections. Each AMQPSequence section is in turn a list of objects. Every object in each list must of a type supported by AMQP. </p>
    return:
      type: com.microsoft.azure.servicebus.MessageBody
      description: <p>MessageBody instance wrapping around the sequence data. </p>
- uid: com.microsoft.azure.servicebus.MessageBody.fromValueData(Object)
  id: fromValueData(Object)
  parent: com.microsoft.azure.servicebus.MessageBody
  href: com.microsoft.azure.servicebus.MessageBody.yml
  langs:
  - java
  name: fromValueData(Object value)
  nameWithType: MessageBody.fromValueData(Object value)
  fullName: com.microsoft.azure.servicebus.MessageBody.fromValueData(Object value)
  overload: com.microsoft.azure.servicebus.MessageBody.fromValueData*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/MessageBody.java
    startLine: 27
  package: com.microsoft.azure.servicebus
  summary: "<p>Creates message body of AMQPValue type. </p>"
  syntax:
    content: public static MessageBody fromValueData(Object value)
    parameters:
    - id: value
      type: "79317049"
      description: <p>AMQPValue content of the message. It must be of a type supported by AMQP. </p>
    return:
      type: com.microsoft.azure.servicebus.MessageBody
      description: <p>MessageBody instance wrapping around the value data. </p>
- uid: com.microsoft.azure.servicebus.MessageBody.getBinaryData()
  id: getBinaryData()
  parent: com.microsoft.azure.servicebus.MessageBody
  href: com.microsoft.azure.servicebus.MessageBody.yml
  langs:
  - java
  name: getBinaryData()
  nameWithType: MessageBody.getBinaryData()
  fullName: com.microsoft.azure.servicebus.MessageBody.getBinaryData()
  overload: com.microsoft.azure.servicebus.MessageBody.getBinaryData*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/MessageBody.java
    startLine: 104
  package: com.microsoft.azure.servicebus
  summary: "<p>Returns the content of message body. </p>"
  syntax:
    content: public List<byte[]> getBinaryData()
    return:
      type: ec5d9e1e
      description: <p>message body as list of byte arrays only if the MessageBody is of Binary type. Returns null otherwise. </p>
- uid: com.microsoft.azure.servicebus.MessageBody.getBodyType()
  id: getBodyType()
  parent: com.microsoft.azure.servicebus.MessageBody
  href: com.microsoft.azure.servicebus.MessageBody.yml
  langs:
  - java
  name: getBodyType()
  nameWithType: MessageBody.getBodyType()
  fullName: com.microsoft.azure.servicebus.MessageBody.getBodyType()
  overload: com.microsoft.azure.servicebus.MessageBody.getBodyType*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/MessageBody.java
    startLine: 112
  package: com.microsoft.azure.servicebus
  summary: "<p>Return the type of content in this message body. </p>"
  syntax:
    content: public MessageBodyType getBodyType()
    return:
      type: com.microsoft.azure.servicebus.MessageBodyType
      description: <p>type of message content </p>
- uid: com.microsoft.azure.servicebus.MessageBody.getSequenceData()
  id: getSequenceData()
  parent: com.microsoft.azure.servicebus.MessageBody
  href: com.microsoft.azure.servicebus.MessageBody.yml
  langs:
  - java
  name: getSequenceData()
  nameWithType: MessageBody.getSequenceData()
  fullName: com.microsoft.azure.servicebus.MessageBody.getSequenceData()
  overload: com.microsoft.azure.servicebus.MessageBody.getSequenceData*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/MessageBody.java
    startLine: 96
  package: com.microsoft.azure.servicebus
  summary: "<p>Returns the content of message body. </p>"
  syntax:
    content: public List<List<Object>> getSequenceData()
    return:
      type: 323aca02
      description: <p>a list of AMQPSequence sections only if the MessageBody is of Sequence type. Returns null otherwise. Each AMQPSequence section is in turn a list of objects. </p>
- uid: com.microsoft.azure.servicebus.MessageBody.getValueData()
  id: getValueData()
  parent: com.microsoft.azure.servicebus.MessageBody
  href: com.microsoft.azure.servicebus.MessageBody.yml
  langs:
  - java
  name: getValueData()
  nameWithType: MessageBody.getValueData()
  fullName: com.microsoft.azure.servicebus.MessageBody.getValueData()
  overload: com.microsoft.azure.servicebus.MessageBody.getValueData*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/MessageBody.java
    startLine: 88
  package: com.microsoft.azure.servicebus
  summary: "<p>Returns the content of message body. </p>"
  syntax:
    content: public Object getValueData()
    return:
      type: "79317049"
      description: <p>value of message body only if the MessageBody is of Value type. Returns null otherwise. </p>
references:
- uid: "79317049"
  spec.java:
  - name: Object
    fullName: Object
- uid: com.microsoft.azure.servicebus.MessageBody.fromValueData*
  name: fromValueData
  nameWithType: MessageBody.fromValueData
  fullName: com.microsoft.azure.servicebus.MessageBody.fromValueData
  package: com.microsoft.azure.servicebus
- uid: 323aca02
  spec.java:
  - name: List<List<Object>>
    fullName: List<List<Object>>
- uid: com.microsoft.azure.servicebus.MessageBody.fromSequenceData*
  name: fromSequenceData
  nameWithType: MessageBody.fromSequenceData
  fullName: com.microsoft.azure.servicebus.MessageBody.fromSequenceData
  package: com.microsoft.azure.servicebus
- uid: ec5d9e1e
  spec.java:
  - name: List<byte[]>
    fullName: List<byte[]>
- uid: com.microsoft.azure.servicebus.MessageBody.fromBinaryData*
  name: fromBinaryData
  nameWithType: MessageBody.fromBinaryData
  fullName: com.microsoft.azure.servicebus.MessageBody.fromBinaryData
  package: com.microsoft.azure.servicebus
- uid: com.microsoft.azure.servicebus.MessageBody.getValueData*
  name: getValueData
  nameWithType: MessageBody.getValueData
  fullName: com.microsoft.azure.servicebus.MessageBody.getValueData
  package: com.microsoft.azure.servicebus
- uid: com.microsoft.azure.servicebus.MessageBody.getSequenceData*
  name: getSequenceData
  nameWithType: MessageBody.getSequenceData
  fullName: com.microsoft.azure.servicebus.MessageBody.getSequenceData
  package: com.microsoft.azure.servicebus
- uid: com.microsoft.azure.servicebus.MessageBody.getBinaryData*
  name: getBinaryData
  nameWithType: MessageBody.getBinaryData
  fullName: com.microsoft.azure.servicebus.MessageBody.getBinaryData
  package: com.microsoft.azure.servicebus
- uid: com.microsoft.azure.servicebus.MessageBody.getBodyType*
  name: getBodyType
  nameWithType: MessageBody.getBodyType
  fullName: com.microsoft.azure.servicebus.MessageBody.getBodyType
  package: com.microsoft.azure.servicebus
- uid: com.microsoft.azure.servicebus.MessageBodyType
  parent: com.microsoft.azure.servicebus
  href: com.microsoft.azure.servicebus.MessageBodyType.yml
  name: MessageBodyType
  nameWithType: MessageBodyType
  fullName: com.microsoft.azure.servicebus.MessageBodyType
  type: Enum
  summary: "<p>Enumeration to represent body type of a message. </p>"
  syntax:
    content: public enum MessageBodyType
- uid: com.microsoft.azure.servicebus.MessageBody
  parent: com.microsoft.azure.servicebus
  href: com.microsoft.azure.servicebus.MessageBody.yml
  name: MessageBody
  nameWithType: MessageBody
  fullName: com.microsoft.azure.servicebus.MessageBody
  type: Class
  summary: "<p>This class encapsulates the body of a message. Body types map to AMQP message body types. It has getters and setters for multiple body types. Client should test for body type before calling corresponding get method. Get methods not corresponding to the type of the body return null. </p>"
  syntax: *o1
