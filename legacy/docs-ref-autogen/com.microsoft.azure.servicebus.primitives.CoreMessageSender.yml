### YamlMime:JavaType
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
- <xref href="com.microsoft.azure.servicebus.primitives.ClientEntity?alt=com.microsoft.azure.servicebus.primitives.ClientEntity&text=ClientEntity" data-throw-if-not-resolved="False"/>
inheritedMembers:
- com.microsoft.azure.servicebus.primitives.ClientEntity.ClientEntity(final String)
- com.microsoft.azure.servicebus.primitives.ClientEntity.close()
- com.microsoft.azure.servicebus.primitives.ClientEntity.closeAsync()
- com.microsoft.azure.servicebus.primitives.ClientEntity.finalize()
- com.microsoft.azure.servicebus.primitives.ClientEntity.getClientId()
- com.microsoft.azure.servicebus.primitives.ClientEntity.getIsClosed()
- com.microsoft.azure.servicebus.primitives.ClientEntity.getIsClosingOrClosed()
- com.microsoft.azure.servicebus.primitives.ClientEntity.setClosed()
- com.microsoft.azure.servicebus.primitives.ClientEntity.throwIfClosed(Throwable)
methods:
- fullName: com.microsoft.azure.servicebus.primitives.CoreMessageSender.cancelScheduledMessageAsync(Long[] sequenceNumbers, Duration timeout)
  name: cancelScheduledMessageAsync(Long[] sequenceNumbers, Duration timeout)
  nameWithType: CoreMessageSender.cancelScheduledMessageAsync(Long[] sequenceNumbers, Duration timeout)
  parameters:
  - name: sequenceNumbers
    type: <xref href="Long+%5B%5D?alt=Long+%5B%5D&text=Long+%5B%5D" data-throw-if-not-resolved="False"/>
  - name: timeout
    type: <xref href="Duration?alt=Duration&text=Duration" data-throw-if-not-resolved="False"/>
  returns:
    type: <xref href="CompletableFuture%3CVoid%3E?alt=CompletableFuture%3CVoid%3E&text=CompletableFuture%3CVoid%3E" data-throw-if-not-resolved="False"/>
  syntax: public CompletableFuture<Void> cancelScheduledMessageAsync(Long[] sequenceNumbers, Duration timeout)
  uid: com.microsoft.azure.servicebus.primitives.CoreMessageSender.cancelScheduledMessageAsync(Long [],Duration)
- fullName: com.microsoft.azure.servicebus.primitives.CoreMessageSender.create(final MessagingFactory factory, final String clientId, final String senderPath, final String transferDestinationPath)
  name: create(final MessagingFactory factory, final String clientId, final String senderPath, final String transferDestinationPath)
  nameWithType: CoreMessageSender.create(final MessagingFactory factory, final String clientId, final String senderPath, final String transferDestinationPath)
  parameters:
  - name: factory
    type: final <xref href="com.microsoft.azure.servicebus.primitives.MessagingFactory?alt=com.microsoft.azure.servicebus.primitives.MessagingFactory&text=MessagingFactory" data-throw-if-not-resolved="False"/>
  - name: clientId
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - name: senderPath
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - name: transferDestinationPath
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  returns:
    type: CompletableFuture&lt;<xref href="com.microsoft.azure.servicebus.primitives.CoreMessageSender?alt=com.microsoft.azure.servicebus.primitives.CoreMessageSender&text=CoreMessageSender" data-throw-if-not-resolved="False"/>&gt;
  syntax: public static CompletableFuture<CoreMessageSender> create(final MessagingFactory factory, final String clientId, final String senderPath, final String transferDestinationPath)
  uid: com.microsoft.azure.servicebus.primitives.CoreMessageSender.create(final MessagingFactory,final String,final String,final String)
- fullName: com.microsoft.azure.servicebus.primitives.CoreMessageSender.create(final MessagingFactory factory, final String clientId, final String senderPath, final String transferDestinationPath, final MessagingEntityType entityType)
  name: create(final MessagingFactory factory, final String clientId, final String senderPath, final String transferDestinationPath, final MessagingEntityType entityType)
  nameWithType: CoreMessageSender.create(final MessagingFactory factory, final String clientId, final String senderPath, final String transferDestinationPath, final MessagingEntityType entityType)
  parameters:
  - name: factory
    type: final <xref href="com.microsoft.azure.servicebus.primitives.MessagingFactory?alt=com.microsoft.azure.servicebus.primitives.MessagingFactory&text=MessagingFactory" data-throw-if-not-resolved="False"/>
  - name: clientId
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - name: senderPath
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - name: transferDestinationPath
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - name: entityType
    type: final <xref href="com.microsoft.azure.servicebus.primitives.MessagingEntityType?alt=com.microsoft.azure.servicebus.primitives.MessagingEntityType&text=MessagingEntityType" data-throw-if-not-resolved="False"/>
  returns:
    type: CompletableFuture&lt;<xref href="com.microsoft.azure.servicebus.primitives.CoreMessageSender?alt=com.microsoft.azure.servicebus.primitives.CoreMessageSender&text=CoreMessageSender" data-throw-if-not-resolved="False"/>&gt;
  syntax: public static CompletableFuture<CoreMessageSender> create(final MessagingFactory factory, final String clientId, final String senderPath, final String transferDestinationPath, final MessagingEntityType entityType)
  uid: com.microsoft.azure.servicebus.primitives.CoreMessageSender.create(final MessagingFactory,final String,final String,final String,final MessagingEntityType)
- fullName: com.microsoft.azure.servicebus.primitives.CoreMessageSender.getContext()
  name: getContext()
  nameWithType: CoreMessageSender.getContext()
  returns:
    type: <xref href="ErrorContext?alt=ErrorContext&text=ErrorContext" data-throw-if-not-resolved="False"/>
  syntax: public ErrorContext getContext()
  uid: com.microsoft.azure.servicebus.primitives.CoreMessageSender.getContext()
- fullName: com.microsoft.azure.servicebus.primitives.CoreMessageSender.getSendPath()
  name: getSendPath()
  nameWithType: CoreMessageSender.getSendPath()
  returns:
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  syntax: public String getSendPath()
  uid: com.microsoft.azure.servicebus.primitives.CoreMessageSender.getSendPath()
- fullName: com.microsoft.azure.servicebus.primitives.CoreMessageSender.onClose()
  name: onClose()
  nameWithType: CoreMessageSender.onClose()
  returns:
    type: <xref href="CompletableFuture%3CVoid%3E?alt=CompletableFuture%3CVoid%3E&text=CompletableFuture%3CVoid%3E" data-throw-if-not-resolved="False"/>
  syntax: protected CompletableFuture<Void> onClose()
  uid: com.microsoft.azure.servicebus.primitives.CoreMessageSender.onClose()
- fullName: com.microsoft.azure.servicebus.primitives.CoreMessageSender.onClose(ErrorCondition condition)
  name: onClose(ErrorCondition condition)
  nameWithType: CoreMessageSender.onClose(ErrorCondition condition)
  parameters:
  - name: condition
    type: <xref href="ErrorCondition?alt=ErrorCondition&text=ErrorCondition" data-throw-if-not-resolved="False"/>
  syntax: public void onClose(ErrorCondition condition)
  uid: com.microsoft.azure.servicebus.primitives.CoreMessageSender.onClose(ErrorCondition)
- fullName: com.microsoft.azure.servicebus.primitives.CoreMessageSender.onError(Exception completionException)
  name: onError(Exception completionException)
  nameWithType: CoreMessageSender.onError(Exception completionException)
  parameters:
  - name: completionException
    type: <xref href="Exception?alt=Exception&text=Exception" data-throw-if-not-resolved="False"/>
  syntax: public void onError(Exception completionException)
  uid: com.microsoft.azure.servicebus.primitives.CoreMessageSender.onError(Exception)
- fullName: com.microsoft.azure.servicebus.primitives.CoreMessageSender.onFlow(final int creditIssued)
  name: onFlow(final int creditIssued)
  nameWithType: CoreMessageSender.onFlow(final int creditIssued)
  parameters:
  - name: creditIssued
    type: <xref href="final+int?alt=final+int&text=final+int" data-throw-if-not-resolved="False"/>
  syntax: public void onFlow(final int creditIssued)
  uid: com.microsoft.azure.servicebus.primitives.CoreMessageSender.onFlow(final int)
- fullName: com.microsoft.azure.servicebus.primitives.CoreMessageSender.onOpenComplete(Exception completionException)
  name: onOpenComplete(Exception completionException)
  nameWithType: CoreMessageSender.onOpenComplete(Exception completionException)
  parameters:
  - name: completionException
    type: <xref href="Exception?alt=Exception&text=Exception" data-throw-if-not-resolved="False"/>
  syntax: public void onOpenComplete(Exception completionException)
  uid: com.microsoft.azure.servicebus.primitives.CoreMessageSender.onOpenComplete(Exception)
- fullName: com.microsoft.azure.servicebus.primitives.CoreMessageSender.onSendComplete(final Delivery delivery)
  name: onSendComplete(final Delivery delivery)
  nameWithType: CoreMessageSender.onSendComplete(final Delivery delivery)
  parameters:
  - name: delivery
    type: <xref href="final+Delivery?alt=final+Delivery&text=final+Delivery" data-throw-if-not-resolved="False"/>
  syntax: public void onSendComplete(final Delivery delivery)
  uid: com.microsoft.azure.servicebus.primitives.CoreMessageSender.onSendComplete(final Delivery)
- fullName: com.microsoft.azure.servicebus.primitives.CoreMessageSender.peekMessagesAsync(long fromSequenceNumber, int messageCount)
  name: peekMessagesAsync(long fromSequenceNumber, int messageCount)
  nameWithType: CoreMessageSender.peekMessagesAsync(long fromSequenceNumber, int messageCount)
  parameters:
  - name: fromSequenceNumber
    type: <xref href="long?alt=long&text=long" data-throw-if-not-resolved="False"/>
  - name: messageCount
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  returns:
    type: <xref href="CompletableFuture%3CCollection%3CMessage%3E%3E?alt=CompletableFuture%3CCollection%3CMessage%3E%3E&text=CompletableFuture%3CCollection%3CMessage%3E%3E" data-throw-if-not-resolved="False"/>
  syntax: public CompletableFuture<Collection<Message>> peekMessagesAsync(long fromSequenceNumber, int messageCount)
  uid: com.microsoft.azure.servicebus.primitives.CoreMessageSender.peekMessagesAsync(long,int)
- fullName: com.microsoft.azure.servicebus.primitives.CoreMessageSender.scheduleMessageAsync(Message[] messages, TransactionContext transaction, Duration timeout)
  name: scheduleMessageAsync(Message[] messages, TransactionContext transaction, Duration timeout)
  nameWithType: CoreMessageSender.scheduleMessageAsync(Message[] messages, TransactionContext transaction, Duration timeout)
  parameters:
  - name: messages
    type: <xref href="Message+%5B%5D?alt=Message+%5B%5D&text=Message+%5B%5D" data-throw-if-not-resolved="False"/>
  - name: transaction
    type: <xref href="com.microsoft.azure.servicebus.TransactionContext?alt=com.microsoft.azure.servicebus.TransactionContext&text=TransactionContext" data-throw-if-not-resolved="False"/>
  - name: timeout
    type: <xref href="Duration?alt=Duration&text=Duration" data-throw-if-not-resolved="False"/>
  returns:
    type: <xref href="CompletableFuture%3Clong%5B%5D%3E?alt=CompletableFuture%3Clong%5B%5D%3E&text=CompletableFuture%3Clong%5B%5D%3E" data-throw-if-not-resolved="False"/>
  syntax: public CompletableFuture<long[]> scheduleMessageAsync(Message[] messages, TransactionContext transaction, Duration timeout)
  uid: com.microsoft.azure.servicebus.primitives.CoreMessageSender.scheduleMessageAsync(Message [],TransactionContext,Duration)
- fullName: com.microsoft.azure.servicebus.primitives.CoreMessageSender.sendAsync(final Iterable<Message> messages, TransactionContext transaction)
  name: sendAsync(final Iterable<Message> messages, TransactionContext transaction)
  nameWithType: CoreMessageSender.sendAsync(final Iterable<Message> messages, TransactionContext transaction)
  parameters:
  - name: messages
    type: <xref href="final+Iterable%3CMessage%3E?alt=final+Iterable%3CMessage%3E&text=final+Iterable%3CMessage%3E" data-throw-if-not-resolved="False"/>
  - name: transaction
    type: <xref href="com.microsoft.azure.servicebus.TransactionContext?alt=com.microsoft.azure.servicebus.TransactionContext&text=TransactionContext" data-throw-if-not-resolved="False"/>
  returns:
    type: <xref href="CompletableFuture%3CVoid%3E?alt=CompletableFuture%3CVoid%3E&text=CompletableFuture%3CVoid%3E" data-throw-if-not-resolved="False"/>
  syntax: public CompletableFuture<Void> sendAsync(final Iterable<Message> messages, TransactionContext transaction)
  uid: com.microsoft.azure.servicebus.primitives.CoreMessageSender.sendAsync(final Iterable<Message>,TransactionContext)
- fullName: com.microsoft.azure.servicebus.primitives.CoreMessageSender.sendAsync(Message msg, TransactionContext transaction)
  name: sendAsync(Message msg, TransactionContext transaction)
  nameWithType: CoreMessageSender.sendAsync(Message msg, TransactionContext transaction)
  parameters:
  - name: msg
    type: <xref href="Message?alt=Message&text=Message" data-throw-if-not-resolved="False"/>
  - name: transaction
    type: <xref href="com.microsoft.azure.servicebus.TransactionContext?alt=com.microsoft.azure.servicebus.TransactionContext&text=TransactionContext" data-throw-if-not-resolved="False"/>
  returns:
    type: <xref href="CompletableFuture%3CVoid%3E?alt=CompletableFuture%3CVoid%3E&text=CompletableFuture%3CVoid%3E" data-throw-if-not-resolved="False"/>
  syntax: public CompletableFuture<Void> sendAsync(Message msg, TransactionContext transaction)
  uid: com.microsoft.azure.servicebus.primitives.CoreMessageSender.sendAsync(Message,TransactionContext)
nameWithType: CoreMessageSender
syntax: public class CoreMessageSender extends ClientEntity
type: class
uid: com.microsoft.azure.servicebus.primitives.CoreMessageSender
fullName: com.microsoft.azure.servicebus.primitives.CoreMessageSender
name: CoreMessageSender
package: com.microsoft.azure.servicebus.primitives
metadata: {}
