### YamlMime:JavaMember
nameWithType: IMessageSender.cancelScheduledMessage
type: method
members:
- fullName: com.microsoft.azure.servicebus.IMessageSender.cancelScheduledMessage(long sequenceNumber)
  name: cancelScheduledMessage(long sequenceNumber)
  nameWithType: IMessageSender.cancelScheduledMessage(long sequenceNumber)
  parameters:
  - description: <p>sequence number of the scheduled message </p>
    name: sequenceNumber
    type: <xref href="long?alt=long&text=long" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="InterruptedException?alt=InterruptedException&text=InterruptedException" data-throw-if-not-resolved="False"/>
    description: <p>if the current thread was interrupted while waiting </p>
  - type: <xref href="ServiceBusException?alt=ServiceBusException&text=ServiceBusException" data-throw-if-not-resolved="False"/>
    description: <p>if scheduled message couldn't be cancelled </p>
  summary: >-
    <p>Cancels the enqueuing of an already sent scheduled message, if it was not already enqueued. This method blocks until the message is sent to the entity. Calling this method is equivalent to calling <code>cancelScheduledMessageAsync(sequenceNumber).get()</code>. For better performance, use async methods.</p>

    <p></p>
  syntax: public void cancelScheduledMessage(long sequenceNumber)
  uid: com.microsoft.azure.servicebus.IMessageSender.cancelScheduledMessage(long)
uid: com.microsoft.azure.servicebus.IMessageSender.cancelScheduledMessage*
fullName: com.microsoft.azure.servicebus.IMessageSender.cancelScheduledMessage(long sequenceNumber)
name: cancelScheduledMessage(long sequenceNumber)
package: com.microsoft.azure.servicebus
metadata: {}
