### YamlMime:JavaMember
nameWithType: CloudBlobContainer.acquireLease
type: method
members:
- fullName: com.microsoft.azure.storage.blob.CloudBlobContainer.acquireLease()
  name: acquireLease()
  nameWithType: CloudBlobContainer.acquireLease()
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  returns:
    description: <p>A <code>String</code> that represents the lease ID.</p>
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Acquires a new infinite lease on the container.</p>

    <p></p>
  syntax: public final String acquireLease()
  uid: com.microsoft.azure.storage.blob.CloudBlobContainer.acquireLease()
- fullName: com.microsoft.azure.storage.blob.CloudBlobContainer.acquireLease(final Integer leaseTimeInSeconds, final String proposedLeaseId)
  name: acquireLease(final Integer leaseTimeInSeconds, final String proposedLeaseId)
  nameWithType: CloudBlobContainer.acquireLease(final Integer leaseTimeInSeconds, final String proposedLeaseId)
  parameters:
  - description: <p>An <code>Integer</code> which specifies the span of time for which to acquire the lease, in seconds. If null, an infinite lease will be acquired. If not null, the value must be greater than zero.</p>
    name: leaseTimeInSeconds
    type: <xref href="final+Integer?alt=final+Integer&text=final+Integer" data-throw-if-not-resolved="False"/>
  - description: <p>A <code>String</code> that represents the proposed lease ID for the new lease, or null if no lease ID is proposed.</p>
    name: proposedLeaseId
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  returns:
    description: <p>A <code>String</code> that represents the lease ID.</p>
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Acquires a new lease on the container with the specified lease time and proposed lease ID.</p>

    <p></p>
  syntax: public final String acquireLease(final Integer leaseTimeInSeconds, final String proposedLeaseId)
  uid: com.microsoft.azure.storage.blob.CloudBlobContainer.acquireLease(final Integer,final String)
- fullName: com.microsoft.azure.storage.blob.CloudBlobContainer.acquireLease(final Integer leaseTimeInSeconds, final String proposedLeaseId, final AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  name: acquireLease(final Integer leaseTimeInSeconds, final String proposedLeaseId, final AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  nameWithType: CloudBlobContainer.acquireLease(final Integer leaseTimeInSeconds, final String proposedLeaseId, final AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  parameters:
  - description: <p>An <code>Integer</code> which specifies the span of time for which to acquire the lease, in seconds. If null, an infinite lease will be acquired. If not null, the value must be greater than zero.</p>
    name: leaseTimeInSeconds
    type: <xref href="final+Integer?alt=final+Integer&text=final+Integer" data-throw-if-not-resolved="False"/>
  - description: <p>A <code>String</code> that represents the proposed lease ID for the new lease, or null if no lease ID is proposed.</p>
    name: proposedLeaseId
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>An <xref uid="com.microsoft.azure.storage.AccessCondition" data-throw-if-not-resolved="false" data-raw-source="AccessCondition"></xref> object that represents the access conditions for the container.</p>
    name: accessCondition
    type: final <xref href="com.microsoft.azure.storage.AccessCondition?alt=com.microsoft.azure.storage.AccessCondition&text=AccessCondition" data-throw-if-not-resolved="False"/>
  - description: <p>A <xref uid="com.microsoft.azure.storage.blob.BlobRequestOptions" data-throw-if-not-resolved="false" data-raw-source="BlobRequestOptions"></xref> object that specifies any additional options for the request. Specifying <code>null</code> will use the default request options from the associated service client (<xref uid="com.microsoft.azure.storage.blob.CloudBlobClient" data-throw-if-not-resolved="false" data-raw-source="CloudBlobClient"></xref>).</p>
    name: options
    type: <xref href="com.microsoft.azure.storage.blob.BlobRequestOptions?alt=com.microsoft.azure.storage.blob.BlobRequestOptions&text=BlobRequestOptions" data-throw-if-not-resolved="False"/>
  - description: <p>An <xref uid="com.microsoft.azure.storage.OperationContext" data-throw-if-not-resolved="false" data-raw-source="OperationContext"></xref> object that represents the context for the current operation. The context is used to track requests to the storage service, and to provide additional runtime information about the operation.</p>
    name: opContext
    type: <xref href="com.microsoft.azure.storage.OperationContext?alt=com.microsoft.azure.storage.OperationContext&text=OperationContext" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  returns:
    description: <p>A <code>String</code> that represents the lease ID.</p>
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Acquires a new lease on the container with the specified lease time, proposed lease ID, request options, and operation context.</p>

    <p></p>
  syntax: public final String acquireLease(final Integer leaseTimeInSeconds, final String proposedLeaseId, final AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  uid: com.microsoft.azure.storage.blob.CloudBlobContainer.acquireLease(final Integer,final String,final AccessCondition,BlobRequestOptions,OperationContext)
uid: com.microsoft.azure.storage.blob.CloudBlobContainer.acquireLease*
fullName: com.microsoft.azure.storage.blob.CloudBlobContainer.acquireLease
name: acquireLease()
package: com.microsoft.azure.storage.blob
metadata: {}
