### YamlMime:JavaMember
nameWithType: Tasks.updateAsync
type: method
members:
- fullName: com.microsoft.azure.batch.protocol.Tasks.updateAsync(String jobId, String taskId)
  name: updateAsync(String jobId, String taskId)
  nameWithType: Tasks.updateAsync(String jobId, String taskId)
  parameters:
  - description: <p>The ID of the job containing the task. </p>
    name: jobId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The ID of the task to update. </p>
    name: taskId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceResponseWithHeaders"></xref> object if successful. </p>
    type: <xref href="Observable%3CVoid%3E?alt=Observable%3CVoid%3E&text=Observable%3CVoid%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Updates the properties of the specified task.</p>

    <p></p>
  syntax: public Observable<Void> updateAsync(String jobId, String taskId)
  uid: com.microsoft.azure.batch.protocol.Tasks.updateAsync(String,String)
- fullName: com.microsoft.azure.batch.protocol.Tasks.updateAsync(String jobId, String taskId, final ServiceCallback<Void> serviceCallback)
  name: updateAsync(String jobId, String taskId, final ServiceCallback<Void> serviceCallback)
  nameWithType: Tasks.updateAsync(String jobId, String taskId, final ServiceCallback<Void> serviceCallback)
  parameters:
  - description: <p>The ID of the job containing the task. </p>
    name: jobId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The ID of the task to update. </p>
    name: taskId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    name: serviceCallback
    type: <xref href="final+ServiceCallback%3CVoid%3E?alt=final+ServiceCallback%3CVoid%3E&text=final+ServiceCallback%3CVoid%3E" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
    type: <xref href="ServiceFuture%3CVoid%3E?alt=ServiceFuture%3CVoid%3E&text=ServiceFuture%3CVoid%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Updates the properties of the specified task.</p>

    <p></p>
  syntax: public ServiceFuture<Void> updateAsync(String jobId, String taskId, final ServiceCallback<Void> serviceCallback)
  uid: com.microsoft.azure.batch.protocol.Tasks.updateAsync(String,String,final ServiceCallback<Void>)
- fullName: com.microsoft.azure.batch.protocol.Tasks.updateAsync(String jobId, String taskId, TaskConstraints constraints, TaskUpdateOptions taskUpdateOptions)
  name: updateAsync(String jobId, String taskId, TaskConstraints constraints, TaskUpdateOptions taskUpdateOptions)
  nameWithType: Tasks.updateAsync(String jobId, String taskId, TaskConstraints constraints, TaskUpdateOptions taskUpdateOptions)
  parameters:
  - description: <p>The ID of the job containing the task. </p>
    name: jobId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The ID of the task to update. </p>
    name: taskId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>Constraints that apply to this task. If omitted, the task is given the default constraints. For multi-instance tasks, updating the retention time applies only to the primary task and not subtasks. </p>
    name: constraints
    type: <xref href="com.microsoft.azure.batch.protocol.models.TaskConstraints?alt=com.microsoft.azure.batch.protocol.models.TaskConstraints&text=TaskConstraints" data-throw-if-not-resolved="False"/>
  - description: <p>Additional parameters for the operation </p>
    name: taskUpdateOptions
    type: <xref href="com.microsoft.azure.batch.protocol.models.TaskUpdateOptions?alt=com.microsoft.azure.batch.protocol.models.TaskUpdateOptions&text=TaskUpdateOptions" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceResponseWithHeaders"></xref> object if successful. </p>
    type: <xref href="Observable%3CVoid%3E?alt=Observable%3CVoid%3E&text=Observable%3CVoid%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Updates the properties of the specified task.</p>

    <p></p>
  syntax: public Observable<Void> updateAsync(String jobId, String taskId, TaskConstraints constraints, TaskUpdateOptions taskUpdateOptions)
  uid: com.microsoft.azure.batch.protocol.Tasks.updateAsync(String,String,TaskConstraints,TaskUpdateOptions)
- fullName: com.microsoft.azure.batch.protocol.Tasks.updateAsync(String jobId, String taskId, TaskConstraints constraints, TaskUpdateOptions taskUpdateOptions, final ServiceCallback<Void> serviceCallback)
  name: updateAsync(String jobId, String taskId, TaskConstraints constraints, TaskUpdateOptions taskUpdateOptions, final ServiceCallback<Void> serviceCallback)
  nameWithType: Tasks.updateAsync(String jobId, String taskId, TaskConstraints constraints, TaskUpdateOptions taskUpdateOptions, final ServiceCallback<Void> serviceCallback)
  parameters:
  - description: <p>The ID of the job containing the task. </p>
    name: jobId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The ID of the task to update. </p>
    name: taskId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>Constraints that apply to this task. If omitted, the task is given the default constraints. For multi-instance tasks, updating the retention time applies only to the primary task and not subtasks. </p>
    name: constraints
    type: <xref href="com.microsoft.azure.batch.protocol.models.TaskConstraints?alt=com.microsoft.azure.batch.protocol.models.TaskConstraints&text=TaskConstraints" data-throw-if-not-resolved="False"/>
  - description: <p>Additional parameters for the operation </p>
    name: taskUpdateOptions
    type: <xref href="com.microsoft.azure.batch.protocol.models.TaskUpdateOptions?alt=com.microsoft.azure.batch.protocol.models.TaskUpdateOptions&text=TaskUpdateOptions" data-throw-if-not-resolved="False"/>
  - description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    name: serviceCallback
    type: <xref href="final+ServiceCallback%3CVoid%3E?alt=final+ServiceCallback%3CVoid%3E&text=final+ServiceCallback%3CVoid%3E" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
    type: <xref href="ServiceFuture%3CVoid%3E?alt=ServiceFuture%3CVoid%3E&text=ServiceFuture%3CVoid%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Updates the properties of the specified task.</p>

    <p></p>
  syntax: public ServiceFuture<Void> updateAsync(String jobId, String taskId, TaskConstraints constraints, TaskUpdateOptions taskUpdateOptions, final ServiceCallback<Void> serviceCallback)
  uid: com.microsoft.azure.batch.protocol.Tasks.updateAsync(String,String,TaskConstraints,TaskUpdateOptions,final ServiceCallback<Void>)
uid: com.microsoft.azure.batch.protocol.Tasks.updateAsync*
fullName: com.microsoft.azure.batch.protocol.Tasks.updateAsync
name: updateAsync(String jobId, String taskId)
package: com.microsoft.azure.batch.protocol
metadata: {}
