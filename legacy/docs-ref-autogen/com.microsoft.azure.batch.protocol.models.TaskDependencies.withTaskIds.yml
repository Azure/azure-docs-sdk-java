### YamlMime:JavaMember
nameWithType: TaskDependencies.withTaskIds
type: method
members:
- fullName: com.microsoft.azure.batch.protocol.models.TaskDependencies.withTaskIds(List<String> taskIds)
  name: withTaskIds(List<String> taskIds)
  nameWithType: TaskDependencies.withTaskIds(List<String> taskIds)
  parameters:
  - description: <p>the taskIds value to set </p>
    name: taskIds
    type: <xref href="List%3CString%3E?alt=List<String>&text=List%3CString%3E" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the TaskDependencies object itself. </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.TaskDependencies?alt=com.microsoft.azure.batch.protocol.models.TaskDependencies&text=TaskDependencies" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the taskIds collection is limited to 64000 characters total (i.e. the combined length of all task IDs). If the taskIds collection exceeds the maximum length, the Add Task request fails with error code TaskDependencyListTooLong. In this case consider using task ID ranges instead.</p>

    <p></p>
  syntax: public TaskDependencies withTaskIds(List<String> taskIds)
  uid: com.microsoft.azure.batch.protocol.models.TaskDependencies.withTaskIds(List<String>)
uid: com.microsoft.azure.batch.protocol.models.TaskDependencies.withTaskIds*
fullName: com.microsoft.azure.batch.protocol.models.TaskDependencies.withTaskIds(List<String> taskIds)
name: withTaskIds(List<String> taskIds)
package: com.microsoft.azure.batch.protocol.models
metadata: {}
