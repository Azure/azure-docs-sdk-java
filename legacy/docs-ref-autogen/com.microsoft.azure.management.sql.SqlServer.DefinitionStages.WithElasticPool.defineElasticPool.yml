### YamlMime:JavaMember
nameWithType: SqlServer.DefinitionStages.WithElasticPool.defineElasticPool
type: method
members:
- fullName: com.microsoft.azure.management.sql.SqlServer.DefinitionStages.WithElasticPool.defineElasticPool(String elasticPoolName)
  name: defineElasticPool(String elasticPoolName)
  nameWithType: SqlServer.DefinitionStages.WithElasticPool.defineElasticPool(String elasticPoolName)
  parameters:
  - description: <p>the name of the new SQL Elastic Pool </p>
    name: elasticPoolName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the first stage of the new SQL Elastic Pool definition </p>
    type: SqlElasticPool.DefinitionStages.Blank&lt;<xref href="com.microsoft.azure.management.sql.SqlServer.DefinitionStages.WithCreate?alt=com.microsoft.azure.management.sql.SqlServer.DefinitionStages.WithCreate&text=SqlServer.DefinitionStages.WithCreate" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Begins the definition of a new SQL Elastic Pool to be added to this server.</p>

    <p></p>
  syntax: public SqlElasticPool.DefinitionStages.Blank<WithCreate> defineElasticPool(String elasticPoolName)
  uid: com.microsoft.azure.management.sql.SqlServer.DefinitionStages.WithElasticPool.defineElasticPool(String)
uid: com.microsoft.azure.management.sql.SqlServer.DefinitionStages.WithElasticPool.defineElasticPool*
fullName: com.microsoft.azure.management.sql.SqlServer.DefinitionStages.WithElasticPool.defineElasticPool(String elasticPoolName)
name: defineElasticPool(String elasticPoolName)
package: com.microsoft.azure.management.sql
metadata: {}
