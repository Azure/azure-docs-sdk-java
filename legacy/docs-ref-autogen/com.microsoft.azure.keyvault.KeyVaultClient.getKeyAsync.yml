### YamlMime:JavaMember
nameWithType: KeyVaultClient.getKeyAsync
type: method
members:
- fullName: com.microsoft.azure.keyvault.KeyVaultClient.getKeyAsync(String keyIdentifier, final ServiceCallback<KeyBundle> serviceCallback)
  name: getKeyAsync(String keyIdentifier, final ServiceCallback<KeyBundle> serviceCallback)
  nameWithType: KeyVaultClient.getKeyAsync(String keyIdentifier, final ServiceCallback<KeyBundle> serviceCallback)
  parameters:
  - description: <p>The full key identifier </p>
    name: keyIdentifier
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    name: serviceCallback
    type: final ServiceCallback&lt;<xref href="com.microsoft.azure.keyvault.models.KeyBundle?alt=com.microsoft.azure.keyvault.models.KeyBundle&text=KeyBundle" data-throw-if-not-resolved="False"/>&gt;
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
    type: ServiceFuture&lt;<xref href="com.microsoft.azure.keyvault.models.KeyBundle?alt=com.microsoft.azure.keyvault.models.KeyBundle&text=KeyBundle" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Gets the public part of a stored key. The get key operation is applicable to all key types. If the requested key is symmetric, then no key material is released in the response. Authorization: Requires the keys/get permission.</p>

    <p></p>
  syntax: public ServiceFuture<KeyBundle> getKeyAsync(String keyIdentifier, final ServiceCallback<KeyBundle> serviceCallback)
  uid: com.microsoft.azure.keyvault.KeyVaultClient.getKeyAsync(String,final ServiceCallback<KeyBundle>)
- fullName: com.microsoft.azure.keyvault.KeyVaultClient.getKeyAsync(String vaultBaseUrl, String keyName, final ServiceCallback<KeyBundle> serviceCallback)
  name: getKeyAsync(String vaultBaseUrl, String keyName, final ServiceCallback<KeyBundle> serviceCallback)
  nameWithType: KeyVaultClient.getKeyAsync(String vaultBaseUrl, String keyName, final ServiceCallback<KeyBundle> serviceCallback)
  parameters:
  - description: <p>The vault name, e.g. <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a></p>
    name: vaultBaseUrl
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the key </p>
    name: keyName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    name: serviceCallback
    type: final ServiceCallback&lt;<xref href="com.microsoft.azure.keyvault.models.KeyBundle?alt=com.microsoft.azure.keyvault.models.KeyBundle&text=KeyBundle" data-throw-if-not-resolved="False"/>&gt;
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
    type: ServiceFuture&lt;<xref href="com.microsoft.azure.keyvault.models.KeyBundle?alt=com.microsoft.azure.keyvault.models.KeyBundle&text=KeyBundle" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Gets the public part of a stored key. The get key operation is applicable to all key types. If the requested key is symmetric, then no key material is released in the response. Authorization: Requires the keys/get permission.</p>

    <p></p>
  syntax: public ServiceFuture<KeyBundle> getKeyAsync(String vaultBaseUrl, String keyName, final ServiceCallback<KeyBundle> serviceCallback)
  uid: com.microsoft.azure.keyvault.KeyVaultClient.getKeyAsync(String,String,final ServiceCallback<KeyBundle>)
- fullName: com.microsoft.azure.keyvault.KeyVaultClient.getKeyAsync(String vaultBaseUrl, String keyName, String keyVersion, final ServiceCallback<KeyBundle> serviceCallback)
  name: getKeyAsync(String vaultBaseUrl, String keyName, String keyVersion, final ServiceCallback<KeyBundle> serviceCallback)
  nameWithType: KeyVaultClient.getKeyAsync(String vaultBaseUrl, String keyName, String keyVersion, final ServiceCallback<KeyBundle> serviceCallback)
  parameters:
  - description: <p>The vault name, e.g. <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a></p>
    name: vaultBaseUrl
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the key </p>
    name: keyName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The version of the key </p>
    name: keyVersion
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    name: serviceCallback
    type: final ServiceCallback&lt;<xref href="com.microsoft.azure.keyvault.models.KeyBundle?alt=com.microsoft.azure.keyvault.models.KeyBundle&text=KeyBundle" data-throw-if-not-resolved="False"/>&gt;
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
    type: ServiceFuture&lt;<xref href="com.microsoft.azure.keyvault.models.KeyBundle?alt=com.microsoft.azure.keyvault.models.KeyBundle&text=KeyBundle" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Gets the public part of a stored key. The get key operation is applicable to all key types. If the requested key is symmetric, then no key material is released in the response. Authorization: Requires the keys/get permission.</p>

    <p></p>
  syntax: public ServiceFuture<KeyBundle> getKeyAsync(String vaultBaseUrl, String keyName, String keyVersion, final ServiceCallback<KeyBundle> serviceCallback)
  uid: com.microsoft.azure.keyvault.KeyVaultClient.getKeyAsync(String,String,String,final ServiceCallback<KeyBundle>)
uid: com.microsoft.azure.keyvault.KeyVaultClient.getKeyAsync*
fullName: com.microsoft.azure.keyvault.KeyVaultClient.getKeyAsync(String keyIdentifier, final ServiceCallback<KeyBundle> serviceCallback)
name: getKeyAsync(String keyIdentifier, final ServiceCallback<KeyBundle> serviceCallback)
package: com.microsoft.azure.keyvault
metadata: {}
