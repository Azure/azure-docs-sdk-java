### YamlMime:JavaMember
nameWithType: Utils.rootResource
type: method
members:
- fullName: com.microsoft.azure.management.resources.fluentcore.utils.Utils.rootResource(Observable<Indexable> stream)
  name: rootResource(Observable<Indexable> stream)
  nameWithType: Utils.rootResource(Observable<Indexable> stream)
  parameters:
  - description: <p>the input observable of <xref uid="" data-throw-if-not-resolved="false">Indexable</xref></p>
    name: stream
    type: Observable&lt;<xref href="com.microsoft.azure.management.resources.fluentcore.model.Indexable?alt=com.microsoft.azure.management.resources.fluentcore.model.Indexable&text=Indexable" data-throw-if-not-resolved="False"/>&gt;
  returns:
    description: <p>an observable that emits last item </p>
    type: static&lt;U extends <xref href="com.microsoft.azure.management.resources.fluentcore.model.Indexable?alt=com.microsoft.azure.management.resources.fluentcore.model.Indexable&text=Indexable" data-throw-if-not-resolved="False"/>&gt; Observable&lt;U&gt;
  summary: >-
    <p>Gets an observable of <xref uid="" data-throw-if-not-resolved="false">U</xref> that emits only the root resource from a given observable of <xref uid="" data-throw-if-not-resolved="false">Indexable</xref>.</p>

    <p></p>
  syntax: public static static<U extends Indexable> Observable<U> rootResource(Observable<Indexable> stream)
  uid: com.microsoft.azure.management.resources.fluentcore.utils.Utils.rootResource(Observable<Indexable>)
uid: com.microsoft.azure.management.resources.fluentcore.utils.Utils.rootResource*
fullName: com.microsoft.azure.management.resources.fluentcore.utils.Utils.rootResource(Observable<Indexable> stream)
name: rootResource(Observable<Indexable> stream)
package: com.microsoft.azure.management.resources.fluentcore.utils
metadata: {}
