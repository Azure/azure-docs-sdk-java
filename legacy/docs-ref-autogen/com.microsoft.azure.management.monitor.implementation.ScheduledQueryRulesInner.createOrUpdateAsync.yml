### YamlMime:JavaMember
nameWithType: ScheduledQueryRulesInner.createOrUpdateAsync
type: method
members:
- fullName: com.microsoft.azure.management.monitor.implementation.ScheduledQueryRulesInner.createOrUpdateAsync(String resourceGroupName, String ruleName, LogSearchRuleResourceInner parameters)
  name: createOrUpdateAsync(String resourceGroupName, String ruleName, LogSearchRuleResourceInner parameters)
  nameWithType: ScheduledQueryRulesInner.createOrUpdateAsync(String resourceGroupName, String ruleName, LogSearchRuleResourceInner parameters)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the rule. </p>
    name: ruleName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The parameters of the rule to create or update. </p>
    name: parameters
    type: <xref href="com.microsoft.azure.management.monitor.implementation.LogSearchRuleResourceInner?alt=com.microsoft.azure.management.monitor.implementation.LogSearchRuleResourceInner&text=LogSearchRuleResourceInner" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the LogSearchRuleResourceInner object </p>
    type: Observable&lt;<xref href="com.microsoft.azure.management.monitor.implementation.LogSearchRuleResourceInner?alt=com.microsoft.azure.management.monitor.implementation.LogSearchRuleResourceInner&text=LogSearchRuleResourceInner" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Creates or updates an log search rule.</p>

    <p></p>
  syntax: public Observable<LogSearchRuleResourceInner> createOrUpdateAsync(String resourceGroupName, String ruleName, LogSearchRuleResourceInner parameters)
  uid: com.microsoft.azure.management.monitor.implementation.ScheduledQueryRulesInner.createOrUpdateAsync(String,String,LogSearchRuleResourceInner)
- fullName: com.microsoft.azure.management.monitor.implementation.ScheduledQueryRulesInner.createOrUpdateAsync(String resourceGroupName, String ruleName, LogSearchRuleResourceInner parameters, final ServiceCallback<LogSearchRuleResourceInner> serviceCallback)
  name: createOrUpdateAsync(String resourceGroupName, String ruleName, LogSearchRuleResourceInner parameters, final ServiceCallback<LogSearchRuleResourceInner> serviceCallback)
  nameWithType: ScheduledQueryRulesInner.createOrUpdateAsync(String resourceGroupName, String ruleName, LogSearchRuleResourceInner parameters, final ServiceCallback<LogSearchRuleResourceInner> serviceCallback)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the rule. </p>
    name: ruleName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The parameters of the rule to create or update. </p>
    name: parameters
    type: <xref href="com.microsoft.azure.management.monitor.implementation.LogSearchRuleResourceInner?alt=com.microsoft.azure.management.monitor.implementation.LogSearchRuleResourceInner&text=LogSearchRuleResourceInner" data-throw-if-not-resolved="False"/>
  - description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    name: serviceCallback
    type: final ServiceCallback&lt;<xref href="com.microsoft.azure.management.monitor.implementation.LogSearchRuleResourceInner?alt=com.microsoft.azure.management.monitor.implementation.LogSearchRuleResourceInner&text=LogSearchRuleResourceInner" data-throw-if-not-resolved="False"/>&gt;
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
    type: ServiceFuture&lt;<xref href="com.microsoft.azure.management.monitor.implementation.LogSearchRuleResourceInner?alt=com.microsoft.azure.management.monitor.implementation.LogSearchRuleResourceInner&text=LogSearchRuleResourceInner" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Creates or updates an log search rule.</p>

    <p></p>
  syntax: public ServiceFuture<LogSearchRuleResourceInner> createOrUpdateAsync(String resourceGroupName, String ruleName, LogSearchRuleResourceInner parameters, final ServiceCallback<LogSearchRuleResourceInner> serviceCallback)
  uid: com.microsoft.azure.management.monitor.implementation.ScheduledQueryRulesInner.createOrUpdateAsync(String,String,LogSearchRuleResourceInner,final ServiceCallback<LogSearchRuleResourceInner>)
uid: com.microsoft.azure.management.monitor.implementation.ScheduledQueryRulesInner.createOrUpdateAsync*
fullName: com.microsoft.azure.management.monitor.implementation.ScheduledQueryRulesInner.createOrUpdateAsync(String resourceGroupName, String ruleName, LogSearchRuleResourceInner parameters)
name: createOrUpdateAsync(String resourceGroupName, String ruleName, LogSearchRuleResourceInner parameters)
package: com.microsoft.azure.management.monitor.implementation
metadata: {}
