### YamlMime:JavaType
methods:
- fullName: com.microsoft.azure.sdk.iot.device.hsm.UnixDomainSocketChannel.close()
  name: close()
  nameWithType: UnixDomainSocketChannel.close()
  exceptions:
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
    description: <p>if the unix domain socket close fails for any reason. </p>
  summary: <p>Close the unix domain socket. </p>
  syntax: public void close()
  uid: com.microsoft.azure.sdk.iot.device.hsm.UnixDomainSocketChannel.close()
- fullName: com.microsoft.azure.sdk.iot.device.hsm.UnixDomainSocketChannel.open(String address)
  name: open(String address)
  nameWithType: UnixDomainSocketChannel.open(String address)
  parameters:
  - description: <p>the address to open the connection to. </p>
    name: address
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
    description: <p>if the connection fails to open for any reason. </p>
  summary: <p>Open the unix domain socket for the provided address </p>
  syntax: public void open(String address)
  uid: com.microsoft.azure.sdk.iot.device.hsm.UnixDomainSocketChannel.open(String)
- fullName: com.microsoft.azure.sdk.iot.device.hsm.UnixDomainSocketChannel.read(byte[] inputBuffer)
  name: read(byte[] inputBuffer)
  nameWithType: UnixDomainSocketChannel.read(byte[] inputBuffer)
  parameters:
  - description: <p>the empty byte array to be written to with the read bytes from the unix domain socket. </p>
    name: inputBuffer
    type: <xref href="byte+%5B%5D?alt=byte+%5B%5D&text=byte+%5B%5D" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
    description: <p>if the unix domain socket cannot be read from for any reason. </p>
  returns:
    description: <p>the number of bytes read from the unix domain socket during this call. </p>
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  summary: <p>Read from the unix domain socket into the provided input buffer. </p>
  syntax: public int read(byte[] inputBuffer)
  uid: com.microsoft.azure.sdk.iot.device.hsm.UnixDomainSocketChannel.read(byte [])
- fullName: com.microsoft.azure.sdk.iot.device.hsm.UnixDomainSocketChannel.write(byte[] output)
  name: write(byte[] output)
  nameWithType: UnixDomainSocketChannel.write(byte[] output)
  parameters:
  - description: <p>the bytes to write to the unix domain socket. </p>
    name: output
    type: <xref href="byte+%5B%5D?alt=byte+%5B%5D&text=byte+%5B%5D" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
    description: <p>if the bytes fail to write for any reason. </p>
  summary: <p>Write the provided bytes to the unix domain socket. </p>
  syntax: public void write(byte[] output)
  uid: com.microsoft.azure.sdk.iot.device.hsm.UnixDomainSocketChannel.write(byte [])
nameWithType: UnixDomainSocketChannel
syntax: public interface UnixDomainSocketChannel
type: interface
uid: com.microsoft.azure.sdk.iot.device.hsm.UnixDomainSocketChannel
fullName: com.microsoft.azure.sdk.iot.device.hsm.UnixDomainSocketChannel
name: UnixDomainSocketChannel
package: com.microsoft.azure.sdk.iot.device.hsm
summary: <p>The definition for a readable and writable unix domain socket channel that may be needed in module creation depending on the Edge runtime. </p>
metadata: {}
