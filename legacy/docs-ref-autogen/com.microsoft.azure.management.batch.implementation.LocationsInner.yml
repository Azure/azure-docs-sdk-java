### YamlMime:JavaType
constructors:
- fullName: com.microsoft.azure.management.batch.implementation.LocationsInner.LocationsInner(Retrofit retrofit, BatchManagementClientImpl client)
  name: LocationsInner(Retrofit retrofit, BatchManagementClientImpl client)
  nameWithType: LocationsInner.LocationsInner(Retrofit retrofit, BatchManagementClientImpl client)
  parameters:
  - description: <p>the Retrofit instance built from a Retrofit Builder. </p>
    name: retrofit
    type: <xref href="Retrofit?alt=Retrofit&text=Retrofit" data-throw-if-not-resolved="False"/>
  - description: <p>the instance of the service client containing this operation class. </p>
    name: client
    type: <xref href="com.microsoft.azure.management.batch.implementation.BatchManagementClientImpl?alt=com.microsoft.azure.management.batch.implementation.BatchManagementClientImpl&text=BatchManagementClientImpl" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Initializes an instance of LocationsInner.</p>

    <p></p>
  syntax: public LocationsInner(Retrofit retrofit, BatchManagementClientImpl client)
  uid: com.microsoft.azure.management.batch.implementation.LocationsInner.LocationsInner(Retrofit,BatchManagementClientImpl)
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
methods:
- fullName: com.microsoft.azure.management.batch.implementation.LocationsInner.checkNameAvailability(String locationName, String name)
  name: checkNameAvailability(String locationName, String name)
  nameWithType: LocationsInner.checkNameAvailability(String locationName, String name)
  parameters:
  - description: <p>The desired region for the name check. </p>
    name: locationName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name to check for availability </p>
    name: name
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="CloudException?alt=CloudException&text=CloudException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  returns:
    description: <p>the CheckNameAvailabilityResultInner object if successful. </p>
    type: <xref href="com.microsoft.azure.management.batch.implementation.CheckNameAvailabilityResultInner?alt=com.microsoft.azure.management.batch.implementation.CheckNameAvailabilityResultInner&text=CheckNameAvailabilityResultInner" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Checks whether the Batch account name is available in the specified region.</p>

    <p></p>
  syntax: public CheckNameAvailabilityResultInner checkNameAvailability(String locationName, String name)
  uid: com.microsoft.azure.management.batch.implementation.LocationsInner.checkNameAvailability(String,String)
- fullName: com.microsoft.azure.management.batch.implementation.LocationsInner.checkNameAvailabilityAsync(String locationName, String name)
  name: checkNameAvailabilityAsync(String locationName, String name)
  nameWithType: LocationsInner.checkNameAvailabilityAsync(String locationName, String name)
  parameters:
  - description: <p>The desired region for the name check. </p>
    name: locationName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name to check for availability </p>
    name: name
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the CheckNameAvailabilityResultInner object </p>
    type: Observable&lt;<xref href="com.microsoft.azure.management.batch.implementation.CheckNameAvailabilityResultInner?alt=com.microsoft.azure.management.batch.implementation.CheckNameAvailabilityResultInner&text=CheckNameAvailabilityResultInner" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Checks whether the Batch account name is available in the specified region.</p>

    <p></p>
  syntax: public Observable<CheckNameAvailabilityResultInner> checkNameAvailabilityAsync(String locationName, String name)
  uid: com.microsoft.azure.management.batch.implementation.LocationsInner.checkNameAvailabilityAsync(String,String)
- fullName: com.microsoft.azure.management.batch.implementation.LocationsInner.checkNameAvailabilityAsync(String locationName, String name, final ServiceCallback<CheckNameAvailabilityResultInner> serviceCallback)
  name: checkNameAvailabilityAsync(String locationName, String name, final ServiceCallback<CheckNameAvailabilityResultInner> serviceCallback)
  nameWithType: LocationsInner.checkNameAvailabilityAsync(String locationName, String name, final ServiceCallback<CheckNameAvailabilityResultInner> serviceCallback)
  parameters:
  - description: <p>The desired region for the name check. </p>
    name: locationName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name to check for availability </p>
    name: name
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    name: serviceCallback
    type: final ServiceCallback&lt;<xref href="com.microsoft.azure.management.batch.implementation.CheckNameAvailabilityResultInner?alt=com.microsoft.azure.management.batch.implementation.CheckNameAvailabilityResultInner&text=CheckNameAvailabilityResultInner" data-throw-if-not-resolved="False"/>&gt;
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
    type: ServiceFuture&lt;<xref href="com.microsoft.azure.management.batch.implementation.CheckNameAvailabilityResultInner?alt=com.microsoft.azure.management.batch.implementation.CheckNameAvailabilityResultInner&text=CheckNameAvailabilityResultInner" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Checks whether the Batch account name is available in the specified region.</p>

    <p></p>
  syntax: public ServiceFuture<CheckNameAvailabilityResultInner> checkNameAvailabilityAsync(String locationName, String name, final ServiceCallback<CheckNameAvailabilityResultInner> serviceCallback)
  uid: com.microsoft.azure.management.batch.implementation.LocationsInner.checkNameAvailabilityAsync(String,String,final ServiceCallback<CheckNameAvailabilityResultInner>)
- fullName: com.microsoft.azure.management.batch.implementation.LocationsInner.checkNameAvailabilityWithServiceResponseAsync(String locationName, String name)
  name: checkNameAvailabilityWithServiceResponseAsync(String locationName, String name)
  nameWithType: LocationsInner.checkNameAvailabilityWithServiceResponseAsync(String locationName, String name)
  parameters:
  - description: <p>The desired region for the name check. </p>
    name: locationName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name to check for availability </p>
    name: name
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the CheckNameAvailabilityResultInner object </p>
    type: Observable&lt;ServiceResponse&lt;<xref href="com.microsoft.azure.management.batch.implementation.CheckNameAvailabilityResultInner?alt=com.microsoft.azure.management.batch.implementation.CheckNameAvailabilityResultInner&text=CheckNameAvailabilityResultInner" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Checks whether the Batch account name is available in the specified region.</p>

    <p></p>
  syntax: public Observable<ServiceResponse<CheckNameAvailabilityResultInner>> checkNameAvailabilityWithServiceResponseAsync(String locationName, String name)
  uid: com.microsoft.azure.management.batch.implementation.LocationsInner.checkNameAvailabilityWithServiceResponseAsync(String,String)
- fullName: com.microsoft.azure.management.batch.implementation.LocationsInner.getQuotas(String locationName)
  name: getQuotas(String locationName)
  nameWithType: LocationsInner.getQuotas(String locationName)
  parameters:
  - description: <p>The region for which to retrieve Batch service quotas. </p>
    name: locationName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="CloudException?alt=CloudException&text=CloudException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  returns:
    description: <p>the BatchLocationQuotaInner object if successful. </p>
    type: <xref href="com.microsoft.azure.management.batch.implementation.BatchLocationQuotaInner?alt=com.microsoft.azure.management.batch.implementation.BatchLocationQuotaInner&text=BatchLocationQuotaInner" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the Batch service quotas for the specified subscription at the given location.</p>

    <p></p>
  syntax: public BatchLocationQuotaInner getQuotas(String locationName)
  uid: com.microsoft.azure.management.batch.implementation.LocationsInner.getQuotas(String)
- fullName: com.microsoft.azure.management.batch.implementation.LocationsInner.getQuotasAsync(String locationName)
  name: getQuotasAsync(String locationName)
  nameWithType: LocationsInner.getQuotasAsync(String locationName)
  parameters:
  - description: <p>The region for which to retrieve Batch service quotas. </p>
    name: locationName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the BatchLocationQuotaInner object </p>
    type: Observable&lt;<xref href="com.microsoft.azure.management.batch.implementation.BatchLocationQuotaInner?alt=com.microsoft.azure.management.batch.implementation.BatchLocationQuotaInner&text=BatchLocationQuotaInner" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Gets the Batch service quotas for the specified subscription at the given location.</p>

    <p></p>
  syntax: public Observable<BatchLocationQuotaInner> getQuotasAsync(String locationName)
  uid: com.microsoft.azure.management.batch.implementation.LocationsInner.getQuotasAsync(String)
- fullName: com.microsoft.azure.management.batch.implementation.LocationsInner.getQuotasAsync(String locationName, final ServiceCallback<BatchLocationQuotaInner> serviceCallback)
  name: getQuotasAsync(String locationName, final ServiceCallback<BatchLocationQuotaInner> serviceCallback)
  nameWithType: LocationsInner.getQuotasAsync(String locationName, final ServiceCallback<BatchLocationQuotaInner> serviceCallback)
  parameters:
  - description: <p>The region for which to retrieve Batch service quotas. </p>
    name: locationName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    name: serviceCallback
    type: final ServiceCallback&lt;<xref href="com.microsoft.azure.management.batch.implementation.BatchLocationQuotaInner?alt=com.microsoft.azure.management.batch.implementation.BatchLocationQuotaInner&text=BatchLocationQuotaInner" data-throw-if-not-resolved="False"/>&gt;
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
    type: ServiceFuture&lt;<xref href="com.microsoft.azure.management.batch.implementation.BatchLocationQuotaInner?alt=com.microsoft.azure.management.batch.implementation.BatchLocationQuotaInner&text=BatchLocationQuotaInner" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Gets the Batch service quotas for the specified subscription at the given location.</p>

    <p></p>
  syntax: public ServiceFuture<BatchLocationQuotaInner> getQuotasAsync(String locationName, final ServiceCallback<BatchLocationQuotaInner> serviceCallback)
  uid: com.microsoft.azure.management.batch.implementation.LocationsInner.getQuotasAsync(String,final ServiceCallback<BatchLocationQuotaInner>)
- fullName: com.microsoft.azure.management.batch.implementation.LocationsInner.getQuotasWithServiceResponseAsync(String locationName)
  name: getQuotasWithServiceResponseAsync(String locationName)
  nameWithType: LocationsInner.getQuotasWithServiceResponseAsync(String locationName)
  parameters:
  - description: <p>The region for which to retrieve Batch service quotas. </p>
    name: locationName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the BatchLocationQuotaInner object </p>
    type: Observable&lt;ServiceResponse&lt;<xref href="com.microsoft.azure.management.batch.implementation.BatchLocationQuotaInner?alt=com.microsoft.azure.management.batch.implementation.BatchLocationQuotaInner&text=BatchLocationQuotaInner" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Gets the Batch service quotas for the specified subscription at the given location.</p>

    <p></p>
  syntax: public Observable<ServiceResponse<BatchLocationQuotaInner>> getQuotasWithServiceResponseAsync(String locationName)
  uid: com.microsoft.azure.management.batch.implementation.LocationsInner.getQuotasWithServiceResponseAsync(String)
- fullName: com.microsoft.azure.management.batch.implementation.LocationsInner.listSupportedCloudServiceSkus(final String locationName)
  name: listSupportedCloudServiceSkus(final String locationName)
  nameWithType: LocationsInner.listSupportedCloudServiceSkus(final String locationName)
  parameters:
  - description: <p>The region for which to retrieve Batch service supported SKUs. </p>
    name: locationName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="CloudException?alt=CloudException&text=CloudException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  returns:
    description: <p>the PagedList&lt;SupportedSkuInner&gt; object if successful. </p>
    type: PagedList&lt;<xref href="com.microsoft.azure.management.batch.implementation.SupportedSkuInner?alt=com.microsoft.azure.management.batch.implementation.SupportedSkuInner&text=SupportedSkuInner" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Gets the list of Batch supported Cloud Service VM sizes available at the given location.</p>

    <p></p>
  syntax: public PagedList<SupportedSkuInner> listSupportedCloudServiceSkus(final String locationName)
  uid: com.microsoft.azure.management.batch.implementation.LocationsInner.listSupportedCloudServiceSkus(final String)
- fullName: com.microsoft.azure.management.batch.implementation.LocationsInner.listSupportedCloudServiceSkus(final String locationName, final Integer maxresults, final String filter)
  name: listSupportedCloudServiceSkus(final String locationName, final Integer maxresults, final String filter)
  nameWithType: LocationsInner.listSupportedCloudServiceSkus(final String locationName, final Integer maxresults, final String filter)
  parameters:
  - description: <p>The region for which to retrieve Batch service supported SKUs. </p>
    name: locationName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>The maximum number of items to return in the response. </p>
    name: maxresults
    type: <xref href="final+Integer?alt=final+Integer&text=final+Integer" data-throw-if-not-resolved="False"/>
  - description: <p>OData filter expression. Valid properties for filtering are "familyName". </p>
    name: filter
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="CloudException?alt=CloudException&text=CloudException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  returns:
    description: <p>the PagedList&lt;SupportedSkuInner&gt; object if successful. </p>
    type: PagedList&lt;<xref href="com.microsoft.azure.management.batch.implementation.SupportedSkuInner?alt=com.microsoft.azure.management.batch.implementation.SupportedSkuInner&text=SupportedSkuInner" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Gets the list of Batch supported Cloud Service VM sizes available at the given location.</p>

    <p></p>
  syntax: public PagedList<SupportedSkuInner> listSupportedCloudServiceSkus(final String locationName, final Integer maxresults, final String filter)
  uid: com.microsoft.azure.management.batch.implementation.LocationsInner.listSupportedCloudServiceSkus(final String,final Integer,final String)
- fullName: com.microsoft.azure.management.batch.implementation.LocationsInner.listSupportedCloudServiceSkusAsync(final String locationName)
  name: listSupportedCloudServiceSkusAsync(final String locationName)
  nameWithType: LocationsInner.listSupportedCloudServiceSkusAsync(final String locationName)
  parameters:
  - description: <p>The region for which to retrieve Batch service supported SKUs. </p>
    name: locationName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the PagedList&lt;SupportedSkuInner&gt; object </p>
    type: Observable&lt;Page&lt;<xref href="com.microsoft.azure.management.batch.implementation.SupportedSkuInner?alt=com.microsoft.azure.management.batch.implementation.SupportedSkuInner&text=SupportedSkuInner" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Gets the list of Batch supported Cloud Service VM sizes available at the given location.</p>

    <p></p>
  syntax: public Observable<Page<SupportedSkuInner>> listSupportedCloudServiceSkusAsync(final String locationName)
  uid: com.microsoft.azure.management.batch.implementation.LocationsInner.listSupportedCloudServiceSkusAsync(final String)
- fullName: com.microsoft.azure.management.batch.implementation.LocationsInner.listSupportedCloudServiceSkusAsync(final String locationName, final Integer maxresults, final String filter)
  name: listSupportedCloudServiceSkusAsync(final String locationName, final Integer maxresults, final String filter)
  nameWithType: LocationsInner.listSupportedCloudServiceSkusAsync(final String locationName, final Integer maxresults, final String filter)
  parameters:
  - description: <p>The region for which to retrieve Batch service supported SKUs. </p>
    name: locationName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>The maximum number of items to return in the response. </p>
    name: maxresults
    type: <xref href="final+Integer?alt=final+Integer&text=final+Integer" data-throw-if-not-resolved="False"/>
  - description: <p>OData filter expression. Valid properties for filtering are "familyName". </p>
    name: filter
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the PagedList&lt;SupportedSkuInner&gt; object </p>
    type: Observable&lt;Page&lt;<xref href="com.microsoft.azure.management.batch.implementation.SupportedSkuInner?alt=com.microsoft.azure.management.batch.implementation.SupportedSkuInner&text=SupportedSkuInner" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Gets the list of Batch supported Cloud Service VM sizes available at the given location.</p>

    <p></p>
  syntax: public Observable<Page<SupportedSkuInner>> listSupportedCloudServiceSkusAsync(final String locationName, final Integer maxresults, final String filter)
  uid: com.microsoft.azure.management.batch.implementation.LocationsInner.listSupportedCloudServiceSkusAsync(final String,final Integer,final String)
- fullName: com.microsoft.azure.management.batch.implementation.LocationsInner.listSupportedCloudServiceSkusAsync(final String locationName, final Integer maxresults, final String filter, final ListOperationCallback<SupportedSkuInner> serviceCallback)
  name: listSupportedCloudServiceSkusAsync(final String locationName, final Integer maxresults, final String filter, final ListOperationCallback<SupportedSkuInner> serviceCallback)
  nameWithType: LocationsInner.listSupportedCloudServiceSkusAsync(final String locationName, final Integer maxresults, final String filter, final ListOperationCallback<SupportedSkuInner> serviceCallback)
  parameters:
  - description: <p>The region for which to retrieve Batch service supported SKUs. </p>
    name: locationName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>The maximum number of items to return in the response. </p>
    name: maxresults
    type: <xref href="final+Integer?alt=final+Integer&text=final+Integer" data-throw-if-not-resolved="False"/>
  - description: <p>OData filter expression. Valid properties for filtering are "familyName". </p>
    name: filter
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    name: serviceCallback
    type: final ListOperationCallback&lt;<xref href="com.microsoft.azure.management.batch.implementation.SupportedSkuInner?alt=com.microsoft.azure.management.batch.implementation.SupportedSkuInner&text=SupportedSkuInner" data-throw-if-not-resolved="False"/>&gt;
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
    type: ServiceFuture&lt;List&lt;<xref href="com.microsoft.azure.management.batch.implementation.SupportedSkuInner?alt=com.microsoft.azure.management.batch.implementation.SupportedSkuInner&text=SupportedSkuInner" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Gets the list of Batch supported Cloud Service VM sizes available at the given location.</p>

    <p></p>
  syntax: public ServiceFuture<List<SupportedSkuInner>> listSupportedCloudServiceSkusAsync(final String locationName, final Integer maxresults, final String filter, final ListOperationCallback<SupportedSkuInner> serviceCallback)
  uid: com.microsoft.azure.management.batch.implementation.LocationsInner.listSupportedCloudServiceSkusAsync(final String,final Integer,final String,final ListOperationCallback<SupportedSkuInner>)
- fullName: com.microsoft.azure.management.batch.implementation.LocationsInner.listSupportedCloudServiceSkusAsync(final String locationName, final ListOperationCallback<SupportedSkuInner> serviceCallback)
  name: listSupportedCloudServiceSkusAsync(final String locationName, final ListOperationCallback<SupportedSkuInner> serviceCallback)
  nameWithType: LocationsInner.listSupportedCloudServiceSkusAsync(final String locationName, final ListOperationCallback<SupportedSkuInner> serviceCallback)
  parameters:
  - description: <p>The region for which to retrieve Batch service supported SKUs. </p>
    name: locationName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    name: serviceCallback
    type: final ListOperationCallback&lt;<xref href="com.microsoft.azure.management.batch.implementation.SupportedSkuInner?alt=com.microsoft.azure.management.batch.implementation.SupportedSkuInner&text=SupportedSkuInner" data-throw-if-not-resolved="False"/>&gt;
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
    type: ServiceFuture&lt;List&lt;<xref href="com.microsoft.azure.management.batch.implementation.SupportedSkuInner?alt=com.microsoft.azure.management.batch.implementation.SupportedSkuInner&text=SupportedSkuInner" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Gets the list of Batch supported Cloud Service VM sizes available at the given location.</p>

    <p></p>
  syntax: public ServiceFuture<List<SupportedSkuInner>> listSupportedCloudServiceSkusAsync(final String locationName, final ListOperationCallback<SupportedSkuInner> serviceCallback)
  uid: com.microsoft.azure.management.batch.implementation.LocationsInner.listSupportedCloudServiceSkusAsync(final String,final ListOperationCallback<SupportedSkuInner>)
- fullName: com.microsoft.azure.management.batch.implementation.LocationsInner.listSupportedCloudServiceSkusNext(final String nextPageLink)
  name: listSupportedCloudServiceSkusNext(final String nextPageLink)
  nameWithType: LocationsInner.listSupportedCloudServiceSkusNext(final String nextPageLink)
  parameters:
  - description: <p>The NextLink from the previous successful call to List operation. </p>
    name: nextPageLink
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="CloudException?alt=CloudException&text=CloudException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  returns:
    description: <p>the PagedList&lt;SupportedSkuInner&gt; object if successful. </p>
    type: PagedList&lt;<xref href="com.microsoft.azure.management.batch.implementation.SupportedSkuInner?alt=com.microsoft.azure.management.batch.implementation.SupportedSkuInner&text=SupportedSkuInner" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Gets the list of Batch supported Cloud Service VM sizes available at the given location.</p>

    <p></p>
  syntax: public PagedList<SupportedSkuInner> listSupportedCloudServiceSkusNext(final String nextPageLink)
  uid: com.microsoft.azure.management.batch.implementation.LocationsInner.listSupportedCloudServiceSkusNext(final String)
- fullName: com.microsoft.azure.management.batch.implementation.LocationsInner.listSupportedCloudServiceSkusNextAsync(final String nextPageLink)
  name: listSupportedCloudServiceSkusNextAsync(final String nextPageLink)
  nameWithType: LocationsInner.listSupportedCloudServiceSkusNextAsync(final String nextPageLink)
  parameters:
  - description: <p>The NextLink from the previous successful call to List operation. </p>
    name: nextPageLink
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the PagedList&lt;SupportedSkuInner&gt; object </p>
    type: Observable&lt;Page&lt;<xref href="com.microsoft.azure.management.batch.implementation.SupportedSkuInner?alt=com.microsoft.azure.management.batch.implementation.SupportedSkuInner&text=SupportedSkuInner" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Gets the list of Batch supported Cloud Service VM sizes available at the given location.</p>

    <p></p>
  syntax: public Observable<Page<SupportedSkuInner>> listSupportedCloudServiceSkusNextAsync(final String nextPageLink)
  uid: com.microsoft.azure.management.batch.implementation.LocationsInner.listSupportedCloudServiceSkusNextAsync(final String)
- fullName: com.microsoft.azure.management.batch.implementation.LocationsInner.listSupportedCloudServiceSkusNextAsync(final String nextPageLink, final ServiceFuture<List<SupportedSkuInner>> serviceFuture, final ListOperationCallback<SupportedSkuInner> serviceCallback)
  name: listSupportedCloudServiceSkusNextAsync(final String nextPageLink, final ServiceFuture<List<SupportedSkuInner>> serviceFuture, final ListOperationCallback<SupportedSkuInner> serviceCallback)
  nameWithType: LocationsInner.listSupportedCloudServiceSkusNextAsync(final String nextPageLink, final ServiceFuture<List<SupportedSkuInner>> serviceFuture, final ListOperationCallback<SupportedSkuInner> serviceCallback)
  parameters:
  - description: <p>The NextLink from the previous successful call to List operation. </p>
    name: nextPageLink
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>the ServiceFuture object tracking the Retrofit calls </p>
    name: serviceFuture
    type: final ServiceFuture&lt;List&lt;<xref href="com.microsoft.azure.management.batch.implementation.SupportedSkuInner?alt=com.microsoft.azure.management.batch.implementation.SupportedSkuInner&text=SupportedSkuInner" data-throw-if-not-resolved="False"/>&gt;&gt;
  - description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    name: serviceCallback
    type: final ListOperationCallback&lt;<xref href="com.microsoft.azure.management.batch.implementation.SupportedSkuInner?alt=com.microsoft.azure.management.batch.implementation.SupportedSkuInner&text=SupportedSkuInner" data-throw-if-not-resolved="False"/>&gt;
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
    type: ServiceFuture&lt;List&lt;<xref href="com.microsoft.azure.management.batch.implementation.SupportedSkuInner?alt=com.microsoft.azure.management.batch.implementation.SupportedSkuInner&text=SupportedSkuInner" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Gets the list of Batch supported Cloud Service VM sizes available at the given location.</p>

    <p></p>
  syntax: public ServiceFuture<List<SupportedSkuInner>> listSupportedCloudServiceSkusNextAsync(final String nextPageLink, final ServiceFuture<List<SupportedSkuInner>> serviceFuture, final ListOperationCallback<SupportedSkuInner> serviceCallback)
  uid: com.microsoft.azure.management.batch.implementation.LocationsInner.listSupportedCloudServiceSkusNextAsync(final String,final ServiceFuture<List<SupportedSkuInner>>,final ListOperationCallback<SupportedSkuInner>)
- fullName: com.microsoft.azure.management.batch.implementation.LocationsInner.listSupportedCloudServiceSkusNextSinglePageAsync(final String nextPageLink)
  name: listSupportedCloudServiceSkusNextSinglePageAsync(final String nextPageLink)
  nameWithType: LocationsInner.listSupportedCloudServiceSkusNextSinglePageAsync(final String nextPageLink)
  parameters:
  - description: <p>The NextLink from the previous successful call to List operation. </p>
    name: nextPageLink
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the PagedList&lt;SupportedSkuInner&gt; object wrapped in <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceResponse"></xref> if successful. </p>
    type: Observable&lt;ServiceResponse&lt;Page&lt;<xref href="com.microsoft.azure.management.batch.implementation.SupportedSkuInner?alt=com.microsoft.azure.management.batch.implementation.SupportedSkuInner&text=SupportedSkuInner" data-throw-if-not-resolved="False"/>&gt;&gt;&gt;
  summary: >-
    <p>Gets the list of Batch supported Cloud Service VM sizes available at the given location.</p>

    <p>ServiceResponse&lt;PageImpl&lt;SupportedSkuInner&gt;&gt; * </p>
  syntax: public Observable<ServiceResponse<Page<SupportedSkuInner>>> listSupportedCloudServiceSkusNextSinglePageAsync(final String nextPageLink)
  uid: com.microsoft.azure.management.batch.implementation.LocationsInner.listSupportedCloudServiceSkusNextSinglePageAsync(final String)
- fullName: com.microsoft.azure.management.batch.implementation.LocationsInner.listSupportedCloudServiceSkusNextWithServiceResponseAsync(final String nextPageLink)
  name: listSupportedCloudServiceSkusNextWithServiceResponseAsync(final String nextPageLink)
  nameWithType: LocationsInner.listSupportedCloudServiceSkusNextWithServiceResponseAsync(final String nextPageLink)
  parameters:
  - description: <p>The NextLink from the previous successful call to List operation. </p>
    name: nextPageLink
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the PagedList&lt;SupportedSkuInner&gt; object </p>
    type: Observable&lt;ServiceResponse&lt;Page&lt;<xref href="com.microsoft.azure.management.batch.implementation.SupportedSkuInner?alt=com.microsoft.azure.management.batch.implementation.SupportedSkuInner&text=SupportedSkuInner" data-throw-if-not-resolved="False"/>&gt;&gt;&gt;
  summary: >-
    <p>Gets the list of Batch supported Cloud Service VM sizes available at the given location.</p>

    <p></p>
  syntax: public Observable<ServiceResponse<Page<SupportedSkuInner>>> listSupportedCloudServiceSkusNextWithServiceResponseAsync(final String nextPageLink)
  uid: com.microsoft.azure.management.batch.implementation.LocationsInner.listSupportedCloudServiceSkusNextWithServiceResponseAsync(final String)
- fullName: com.microsoft.azure.management.batch.implementation.LocationsInner.listSupportedCloudServiceSkusSinglePageAsync(final String locationName)
  name: listSupportedCloudServiceSkusSinglePageAsync(final String locationName)
  nameWithType: LocationsInner.listSupportedCloudServiceSkusSinglePageAsync(final String locationName)
  parameters:
  - description: <p>The region for which to retrieve Batch service supported SKUs. </p>
    name: locationName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the PagedList&lt;SupportedSkuInner&gt; object wrapped in <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceResponse"></xref> if successful. </p>
    type: Observable&lt;ServiceResponse&lt;Page&lt;<xref href="com.microsoft.azure.management.batch.implementation.SupportedSkuInner?alt=com.microsoft.azure.management.batch.implementation.SupportedSkuInner&text=SupportedSkuInner" data-throw-if-not-resolved="False"/>&gt;&gt;&gt;
  summary: >-
    <p>Gets the list of Batch supported Cloud Service VM sizes available at the given location.</p>

    <p></p>
  syntax: public Observable<ServiceResponse<Page<SupportedSkuInner>>> listSupportedCloudServiceSkusSinglePageAsync(final String locationName)
  uid: com.microsoft.azure.management.batch.implementation.LocationsInner.listSupportedCloudServiceSkusSinglePageAsync(final String)
- fullName: com.microsoft.azure.management.batch.implementation.LocationsInner.listSupportedCloudServiceSkusSinglePageAsync(final String locationName, final Integer maxresults, final String filter)
  name: listSupportedCloudServiceSkusSinglePageAsync(final String locationName, final Integer maxresults, final String filter)
  nameWithType: LocationsInner.listSupportedCloudServiceSkusSinglePageAsync(final String locationName, final Integer maxresults, final String filter)
  parameters:
  - description: <p>The region for which to retrieve Batch service supported SKUs. ServiceResponse&lt;PageImpl&lt;SupportedSkuInner&gt;&gt; * </p>
    name: locationName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>The maximum number of items to return in the response. ServiceResponse&lt;PageImpl&lt;SupportedSkuInner&gt;&gt; * </p>
    name: maxresults
    type: <xref href="final+Integer?alt=final+Integer&text=final+Integer" data-throw-if-not-resolved="False"/>
  - description: <p>OData filter expression. Valid properties for filtering are "familyName". </p>
    name: filter
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the PagedList&lt;SupportedSkuInner&gt; object wrapped in <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceResponse"></xref> if successful. </p>
    type: Observable&lt;ServiceResponse&lt;Page&lt;<xref href="com.microsoft.azure.management.batch.implementation.SupportedSkuInner?alt=com.microsoft.azure.management.batch.implementation.SupportedSkuInner&text=SupportedSkuInner" data-throw-if-not-resolved="False"/>&gt;&gt;&gt;
  summary: >-
    <p>Gets the list of Batch supported Cloud Service VM sizes available at the given location.</p>

    <p>ServiceResponse&lt;PageImpl&lt;SupportedSkuInner&gt;&gt; * </p>
  syntax: public Observable<ServiceResponse<Page<SupportedSkuInner>>> listSupportedCloudServiceSkusSinglePageAsync(final String locationName, final Integer maxresults, final String filter)
  uid: com.microsoft.azure.management.batch.implementation.LocationsInner.listSupportedCloudServiceSkusSinglePageAsync(final String,final Integer,final String)
- fullName: com.microsoft.azure.management.batch.implementation.LocationsInner.listSupportedCloudServiceSkusWithServiceResponseAsync(final String locationName)
  name: listSupportedCloudServiceSkusWithServiceResponseAsync(final String locationName)
  nameWithType: LocationsInner.listSupportedCloudServiceSkusWithServiceResponseAsync(final String locationName)
  parameters:
  - description: <p>The region for which to retrieve Batch service supported SKUs. </p>
    name: locationName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the PagedList&lt;SupportedSkuInner&gt; object </p>
    type: Observable&lt;ServiceResponse&lt;Page&lt;<xref href="com.microsoft.azure.management.batch.implementation.SupportedSkuInner?alt=com.microsoft.azure.management.batch.implementation.SupportedSkuInner&text=SupportedSkuInner" data-throw-if-not-resolved="False"/>&gt;&gt;&gt;
  summary: >-
    <p>Gets the list of Batch supported Cloud Service VM sizes available at the given location.</p>

    <p></p>
  syntax: public Observable<ServiceResponse<Page<SupportedSkuInner>>> listSupportedCloudServiceSkusWithServiceResponseAsync(final String locationName)
  uid: com.microsoft.azure.management.batch.implementation.LocationsInner.listSupportedCloudServiceSkusWithServiceResponseAsync(final String)
- fullName: com.microsoft.azure.management.batch.implementation.LocationsInner.listSupportedCloudServiceSkusWithServiceResponseAsync(final String locationName, final Integer maxresults, final String filter)
  name: listSupportedCloudServiceSkusWithServiceResponseAsync(final String locationName, final Integer maxresults, final String filter)
  nameWithType: LocationsInner.listSupportedCloudServiceSkusWithServiceResponseAsync(final String locationName, final Integer maxresults, final String filter)
  parameters:
  - description: <p>The region for which to retrieve Batch service supported SKUs. </p>
    name: locationName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>The maximum number of items to return in the response. </p>
    name: maxresults
    type: <xref href="final+Integer?alt=final+Integer&text=final+Integer" data-throw-if-not-resolved="False"/>
  - description: <p>OData filter expression. Valid properties for filtering are "familyName". </p>
    name: filter
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the PagedList&lt;SupportedSkuInner&gt; object </p>
    type: Observable&lt;ServiceResponse&lt;Page&lt;<xref href="com.microsoft.azure.management.batch.implementation.SupportedSkuInner?alt=com.microsoft.azure.management.batch.implementation.SupportedSkuInner&text=SupportedSkuInner" data-throw-if-not-resolved="False"/>&gt;&gt;&gt;
  summary: >-
    <p>Gets the list of Batch supported Cloud Service VM sizes available at the given location.</p>

    <p></p>
  syntax: public Observable<ServiceResponse<Page<SupportedSkuInner>>> listSupportedCloudServiceSkusWithServiceResponseAsync(final String locationName, final Integer maxresults, final String filter)
  uid: com.microsoft.azure.management.batch.implementation.LocationsInner.listSupportedCloudServiceSkusWithServiceResponseAsync(final String,final Integer,final String)
- fullName: com.microsoft.azure.management.batch.implementation.LocationsInner.listSupportedVirtualMachineSkus(final String locationName)
  name: listSupportedVirtualMachineSkus(final String locationName)
  nameWithType: LocationsInner.listSupportedVirtualMachineSkus(final String locationName)
  parameters:
  - description: <p>The region for which to retrieve Batch service supported SKUs. </p>
    name: locationName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="CloudException?alt=CloudException&text=CloudException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  returns:
    description: <p>the PagedList&lt;SupportedSkuInner&gt; object if successful. </p>
    type: PagedList&lt;<xref href="com.microsoft.azure.management.batch.implementation.SupportedSkuInner?alt=com.microsoft.azure.management.batch.implementation.SupportedSkuInner&text=SupportedSkuInner" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Gets the list of Batch supported Virtual Machine VM sizes available at the given location.</p>

    <p></p>
  syntax: public PagedList<SupportedSkuInner> listSupportedVirtualMachineSkus(final String locationName)
  uid: com.microsoft.azure.management.batch.implementation.LocationsInner.listSupportedVirtualMachineSkus(final String)
- fullName: com.microsoft.azure.management.batch.implementation.LocationsInner.listSupportedVirtualMachineSkus(final String locationName, final Integer maxresults, final String filter)
  name: listSupportedVirtualMachineSkus(final String locationName, final Integer maxresults, final String filter)
  nameWithType: LocationsInner.listSupportedVirtualMachineSkus(final String locationName, final Integer maxresults, final String filter)
  parameters:
  - description: <p>The region for which to retrieve Batch service supported SKUs. </p>
    name: locationName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>The maximum number of items to return in the response. </p>
    name: maxresults
    type: <xref href="final+Integer?alt=final+Integer&text=final+Integer" data-throw-if-not-resolved="False"/>
  - description: <p>OData filter expression. Valid properties for filtering are "familyName". </p>
    name: filter
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="CloudException?alt=CloudException&text=CloudException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  returns:
    description: <p>the PagedList&lt;SupportedSkuInner&gt; object if successful. </p>
    type: PagedList&lt;<xref href="com.microsoft.azure.management.batch.implementation.SupportedSkuInner?alt=com.microsoft.azure.management.batch.implementation.SupportedSkuInner&text=SupportedSkuInner" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Gets the list of Batch supported Virtual Machine VM sizes available at the given location.</p>

    <p></p>
  syntax: public PagedList<SupportedSkuInner> listSupportedVirtualMachineSkus(final String locationName, final Integer maxresults, final String filter)
  uid: com.microsoft.azure.management.batch.implementation.LocationsInner.listSupportedVirtualMachineSkus(final String,final Integer,final String)
- fullName: com.microsoft.azure.management.batch.implementation.LocationsInner.listSupportedVirtualMachineSkusAsync(final String locationName)
  name: listSupportedVirtualMachineSkusAsync(final String locationName)
  nameWithType: LocationsInner.listSupportedVirtualMachineSkusAsync(final String locationName)
  parameters:
  - description: <p>The region for which to retrieve Batch service supported SKUs. </p>
    name: locationName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the PagedList&lt;SupportedSkuInner&gt; object </p>
    type: Observable&lt;Page&lt;<xref href="com.microsoft.azure.management.batch.implementation.SupportedSkuInner?alt=com.microsoft.azure.management.batch.implementation.SupportedSkuInner&text=SupportedSkuInner" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Gets the list of Batch supported Virtual Machine VM sizes available at the given location.</p>

    <p></p>
  syntax: public Observable<Page<SupportedSkuInner>> listSupportedVirtualMachineSkusAsync(final String locationName)
  uid: com.microsoft.azure.management.batch.implementation.LocationsInner.listSupportedVirtualMachineSkusAsync(final String)
- fullName: com.microsoft.azure.management.batch.implementation.LocationsInner.listSupportedVirtualMachineSkusAsync(final String locationName, final Integer maxresults, final String filter)
  name: listSupportedVirtualMachineSkusAsync(final String locationName, final Integer maxresults, final String filter)
  nameWithType: LocationsInner.listSupportedVirtualMachineSkusAsync(final String locationName, final Integer maxresults, final String filter)
  parameters:
  - description: <p>The region for which to retrieve Batch service supported SKUs. </p>
    name: locationName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>The maximum number of items to return in the response. </p>
    name: maxresults
    type: <xref href="final+Integer?alt=final+Integer&text=final+Integer" data-throw-if-not-resolved="False"/>
  - description: <p>OData filter expression. Valid properties for filtering are "familyName". </p>
    name: filter
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the PagedList&lt;SupportedSkuInner&gt; object </p>
    type: Observable&lt;Page&lt;<xref href="com.microsoft.azure.management.batch.implementation.SupportedSkuInner?alt=com.microsoft.azure.management.batch.implementation.SupportedSkuInner&text=SupportedSkuInner" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Gets the list of Batch supported Virtual Machine VM sizes available at the given location.</p>

    <p></p>
  syntax: public Observable<Page<SupportedSkuInner>> listSupportedVirtualMachineSkusAsync(final String locationName, final Integer maxresults, final String filter)
  uid: com.microsoft.azure.management.batch.implementation.LocationsInner.listSupportedVirtualMachineSkusAsync(final String,final Integer,final String)
- fullName: com.microsoft.azure.management.batch.implementation.LocationsInner.listSupportedVirtualMachineSkusAsync(final String locationName, final Integer maxresults, final String filter, final ListOperationCallback<SupportedSkuInner> serviceCallback)
  name: listSupportedVirtualMachineSkusAsync(final String locationName, final Integer maxresults, final String filter, final ListOperationCallback<SupportedSkuInner> serviceCallback)
  nameWithType: LocationsInner.listSupportedVirtualMachineSkusAsync(final String locationName, final Integer maxresults, final String filter, final ListOperationCallback<SupportedSkuInner> serviceCallback)
  parameters:
  - description: <p>The region for which to retrieve Batch service supported SKUs. </p>
    name: locationName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>The maximum number of items to return in the response. </p>
    name: maxresults
    type: <xref href="final+Integer?alt=final+Integer&text=final+Integer" data-throw-if-not-resolved="False"/>
  - description: <p>OData filter expression. Valid properties for filtering are "familyName". </p>
    name: filter
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    name: serviceCallback
    type: final ListOperationCallback&lt;<xref href="com.microsoft.azure.management.batch.implementation.SupportedSkuInner?alt=com.microsoft.azure.management.batch.implementation.SupportedSkuInner&text=SupportedSkuInner" data-throw-if-not-resolved="False"/>&gt;
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
    type: ServiceFuture&lt;List&lt;<xref href="com.microsoft.azure.management.batch.implementation.SupportedSkuInner?alt=com.microsoft.azure.management.batch.implementation.SupportedSkuInner&text=SupportedSkuInner" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Gets the list of Batch supported Virtual Machine VM sizes available at the given location.</p>

    <p></p>
  syntax: public ServiceFuture<List<SupportedSkuInner>> listSupportedVirtualMachineSkusAsync(final String locationName, final Integer maxresults, final String filter, final ListOperationCallback<SupportedSkuInner> serviceCallback)
  uid: com.microsoft.azure.management.batch.implementation.LocationsInner.listSupportedVirtualMachineSkusAsync(final String,final Integer,final String,final ListOperationCallback<SupportedSkuInner>)
- fullName: com.microsoft.azure.management.batch.implementation.LocationsInner.listSupportedVirtualMachineSkusAsync(final String locationName, final ListOperationCallback<SupportedSkuInner> serviceCallback)
  name: listSupportedVirtualMachineSkusAsync(final String locationName, final ListOperationCallback<SupportedSkuInner> serviceCallback)
  nameWithType: LocationsInner.listSupportedVirtualMachineSkusAsync(final String locationName, final ListOperationCallback<SupportedSkuInner> serviceCallback)
  parameters:
  - description: <p>The region for which to retrieve Batch service supported SKUs. </p>
    name: locationName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    name: serviceCallback
    type: final ListOperationCallback&lt;<xref href="com.microsoft.azure.management.batch.implementation.SupportedSkuInner?alt=com.microsoft.azure.management.batch.implementation.SupportedSkuInner&text=SupportedSkuInner" data-throw-if-not-resolved="False"/>&gt;
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
    type: ServiceFuture&lt;List&lt;<xref href="com.microsoft.azure.management.batch.implementation.SupportedSkuInner?alt=com.microsoft.azure.management.batch.implementation.SupportedSkuInner&text=SupportedSkuInner" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Gets the list of Batch supported Virtual Machine VM sizes available at the given location.</p>

    <p></p>
  syntax: public ServiceFuture<List<SupportedSkuInner>> listSupportedVirtualMachineSkusAsync(final String locationName, final ListOperationCallback<SupportedSkuInner> serviceCallback)
  uid: com.microsoft.azure.management.batch.implementation.LocationsInner.listSupportedVirtualMachineSkusAsync(final String,final ListOperationCallback<SupportedSkuInner>)
- fullName: com.microsoft.azure.management.batch.implementation.LocationsInner.listSupportedVirtualMachineSkusNext(final String nextPageLink)
  name: listSupportedVirtualMachineSkusNext(final String nextPageLink)
  nameWithType: LocationsInner.listSupportedVirtualMachineSkusNext(final String nextPageLink)
  parameters:
  - description: <p>The NextLink from the previous successful call to List operation. </p>
    name: nextPageLink
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="CloudException?alt=CloudException&text=CloudException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  returns:
    description: <p>the PagedList&lt;SupportedSkuInner&gt; object if successful. </p>
    type: PagedList&lt;<xref href="com.microsoft.azure.management.batch.implementation.SupportedSkuInner?alt=com.microsoft.azure.management.batch.implementation.SupportedSkuInner&text=SupportedSkuInner" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Gets the list of Batch supported Virtual Machine VM sizes available at the given location.</p>

    <p></p>
  syntax: public PagedList<SupportedSkuInner> listSupportedVirtualMachineSkusNext(final String nextPageLink)
  uid: com.microsoft.azure.management.batch.implementation.LocationsInner.listSupportedVirtualMachineSkusNext(final String)
- fullName: com.microsoft.azure.management.batch.implementation.LocationsInner.listSupportedVirtualMachineSkusNextAsync(final String nextPageLink)
  name: listSupportedVirtualMachineSkusNextAsync(final String nextPageLink)
  nameWithType: LocationsInner.listSupportedVirtualMachineSkusNextAsync(final String nextPageLink)
  parameters:
  - description: <p>The NextLink from the previous successful call to List operation. </p>
    name: nextPageLink
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the PagedList&lt;SupportedSkuInner&gt; object </p>
    type: Observable&lt;Page&lt;<xref href="com.microsoft.azure.management.batch.implementation.SupportedSkuInner?alt=com.microsoft.azure.management.batch.implementation.SupportedSkuInner&text=SupportedSkuInner" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Gets the list of Batch supported Virtual Machine VM sizes available at the given location.</p>

    <p></p>
  syntax: public Observable<Page<SupportedSkuInner>> listSupportedVirtualMachineSkusNextAsync(final String nextPageLink)
  uid: com.microsoft.azure.management.batch.implementation.LocationsInner.listSupportedVirtualMachineSkusNextAsync(final String)
- fullName: com.microsoft.azure.management.batch.implementation.LocationsInner.listSupportedVirtualMachineSkusNextAsync(final String nextPageLink, final ServiceFuture<List<SupportedSkuInner>> serviceFuture, final ListOperationCallback<SupportedSkuInner> serviceCallback)
  name: listSupportedVirtualMachineSkusNextAsync(final String nextPageLink, final ServiceFuture<List<SupportedSkuInner>> serviceFuture, final ListOperationCallback<SupportedSkuInner> serviceCallback)
  nameWithType: LocationsInner.listSupportedVirtualMachineSkusNextAsync(final String nextPageLink, final ServiceFuture<List<SupportedSkuInner>> serviceFuture, final ListOperationCallback<SupportedSkuInner> serviceCallback)
  parameters:
  - description: <p>The NextLink from the previous successful call to List operation. </p>
    name: nextPageLink
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>the ServiceFuture object tracking the Retrofit calls </p>
    name: serviceFuture
    type: final ServiceFuture&lt;List&lt;<xref href="com.microsoft.azure.management.batch.implementation.SupportedSkuInner?alt=com.microsoft.azure.management.batch.implementation.SupportedSkuInner&text=SupportedSkuInner" data-throw-if-not-resolved="False"/>&gt;&gt;
  - description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    name: serviceCallback
    type: final ListOperationCallback&lt;<xref href="com.microsoft.azure.management.batch.implementation.SupportedSkuInner?alt=com.microsoft.azure.management.batch.implementation.SupportedSkuInner&text=SupportedSkuInner" data-throw-if-not-resolved="False"/>&gt;
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
    type: ServiceFuture&lt;List&lt;<xref href="com.microsoft.azure.management.batch.implementation.SupportedSkuInner?alt=com.microsoft.azure.management.batch.implementation.SupportedSkuInner&text=SupportedSkuInner" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Gets the list of Batch supported Virtual Machine VM sizes available at the given location.</p>

    <p></p>
  syntax: public ServiceFuture<List<SupportedSkuInner>> listSupportedVirtualMachineSkusNextAsync(final String nextPageLink, final ServiceFuture<List<SupportedSkuInner>> serviceFuture, final ListOperationCallback<SupportedSkuInner> serviceCallback)
  uid: com.microsoft.azure.management.batch.implementation.LocationsInner.listSupportedVirtualMachineSkusNextAsync(final String,final ServiceFuture<List<SupportedSkuInner>>,final ListOperationCallback<SupportedSkuInner>)
- fullName: com.microsoft.azure.management.batch.implementation.LocationsInner.listSupportedVirtualMachineSkusNextSinglePageAsync(final String nextPageLink)
  name: listSupportedVirtualMachineSkusNextSinglePageAsync(final String nextPageLink)
  nameWithType: LocationsInner.listSupportedVirtualMachineSkusNextSinglePageAsync(final String nextPageLink)
  parameters:
  - description: <p>The NextLink from the previous successful call to List operation. </p>
    name: nextPageLink
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the PagedList&lt;SupportedSkuInner&gt; object wrapped in <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceResponse"></xref> if successful. </p>
    type: Observable&lt;ServiceResponse&lt;Page&lt;<xref href="com.microsoft.azure.management.batch.implementation.SupportedSkuInner?alt=com.microsoft.azure.management.batch.implementation.SupportedSkuInner&text=SupportedSkuInner" data-throw-if-not-resolved="False"/>&gt;&gt;&gt;
  summary: >-
    <p>Gets the list of Batch supported Virtual Machine VM sizes available at the given location.</p>

    <p>ServiceResponse&lt;PageImpl&lt;SupportedSkuInner&gt;&gt; * </p>
  syntax: public Observable<ServiceResponse<Page<SupportedSkuInner>>> listSupportedVirtualMachineSkusNextSinglePageAsync(final String nextPageLink)
  uid: com.microsoft.azure.management.batch.implementation.LocationsInner.listSupportedVirtualMachineSkusNextSinglePageAsync(final String)
- fullName: com.microsoft.azure.management.batch.implementation.LocationsInner.listSupportedVirtualMachineSkusNextWithServiceResponseAsync(final String nextPageLink)
  name: listSupportedVirtualMachineSkusNextWithServiceResponseAsync(final String nextPageLink)
  nameWithType: LocationsInner.listSupportedVirtualMachineSkusNextWithServiceResponseAsync(final String nextPageLink)
  parameters:
  - description: <p>The NextLink from the previous successful call to List operation. </p>
    name: nextPageLink
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the PagedList&lt;SupportedSkuInner&gt; object </p>
    type: Observable&lt;ServiceResponse&lt;Page&lt;<xref href="com.microsoft.azure.management.batch.implementation.SupportedSkuInner?alt=com.microsoft.azure.management.batch.implementation.SupportedSkuInner&text=SupportedSkuInner" data-throw-if-not-resolved="False"/>&gt;&gt;&gt;
  summary: >-
    <p>Gets the list of Batch supported Virtual Machine VM sizes available at the given location.</p>

    <p></p>
  syntax: public Observable<ServiceResponse<Page<SupportedSkuInner>>> listSupportedVirtualMachineSkusNextWithServiceResponseAsync(final String nextPageLink)
  uid: com.microsoft.azure.management.batch.implementation.LocationsInner.listSupportedVirtualMachineSkusNextWithServiceResponseAsync(final String)
- fullName: com.microsoft.azure.management.batch.implementation.LocationsInner.listSupportedVirtualMachineSkusSinglePageAsync(final String locationName)
  name: listSupportedVirtualMachineSkusSinglePageAsync(final String locationName)
  nameWithType: LocationsInner.listSupportedVirtualMachineSkusSinglePageAsync(final String locationName)
  parameters:
  - description: <p>The region for which to retrieve Batch service supported SKUs. </p>
    name: locationName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the PagedList&lt;SupportedSkuInner&gt; object wrapped in <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceResponse"></xref> if successful. </p>
    type: Observable&lt;ServiceResponse&lt;Page&lt;<xref href="com.microsoft.azure.management.batch.implementation.SupportedSkuInner?alt=com.microsoft.azure.management.batch.implementation.SupportedSkuInner&text=SupportedSkuInner" data-throw-if-not-resolved="False"/>&gt;&gt;&gt;
  summary: >-
    <p>Gets the list of Batch supported Virtual Machine VM sizes available at the given location.</p>

    <p></p>
  syntax: public Observable<ServiceResponse<Page<SupportedSkuInner>>> listSupportedVirtualMachineSkusSinglePageAsync(final String locationName)
  uid: com.microsoft.azure.management.batch.implementation.LocationsInner.listSupportedVirtualMachineSkusSinglePageAsync(final String)
- fullName: com.microsoft.azure.management.batch.implementation.LocationsInner.listSupportedVirtualMachineSkusSinglePageAsync(final String locationName, final Integer maxresults, final String filter)
  name: listSupportedVirtualMachineSkusSinglePageAsync(final String locationName, final Integer maxresults, final String filter)
  nameWithType: LocationsInner.listSupportedVirtualMachineSkusSinglePageAsync(final String locationName, final Integer maxresults, final String filter)
  parameters:
  - description: <p>The region for which to retrieve Batch service supported SKUs. ServiceResponse&lt;PageImpl&lt;SupportedSkuInner&gt;&gt; * </p>
    name: locationName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>The maximum number of items to return in the response. ServiceResponse&lt;PageImpl&lt;SupportedSkuInner&gt;&gt; * </p>
    name: maxresults
    type: <xref href="final+Integer?alt=final+Integer&text=final+Integer" data-throw-if-not-resolved="False"/>
  - description: <p>OData filter expression. Valid properties for filtering are "familyName". </p>
    name: filter
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the PagedList&lt;SupportedSkuInner&gt; object wrapped in <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceResponse"></xref> if successful. </p>
    type: Observable&lt;ServiceResponse&lt;Page&lt;<xref href="com.microsoft.azure.management.batch.implementation.SupportedSkuInner?alt=com.microsoft.azure.management.batch.implementation.SupportedSkuInner&text=SupportedSkuInner" data-throw-if-not-resolved="False"/>&gt;&gt;&gt;
  summary: >-
    <p>Gets the list of Batch supported Virtual Machine VM sizes available at the given location.</p>

    <p>ServiceResponse&lt;PageImpl&lt;SupportedSkuInner&gt;&gt; * </p>
  syntax: public Observable<ServiceResponse<Page<SupportedSkuInner>>> listSupportedVirtualMachineSkusSinglePageAsync(final String locationName, final Integer maxresults, final String filter)
  uid: com.microsoft.azure.management.batch.implementation.LocationsInner.listSupportedVirtualMachineSkusSinglePageAsync(final String,final Integer,final String)
- fullName: com.microsoft.azure.management.batch.implementation.LocationsInner.listSupportedVirtualMachineSkusWithServiceResponseAsync(final String locationName)
  name: listSupportedVirtualMachineSkusWithServiceResponseAsync(final String locationName)
  nameWithType: LocationsInner.listSupportedVirtualMachineSkusWithServiceResponseAsync(final String locationName)
  parameters:
  - description: <p>The region for which to retrieve Batch service supported SKUs. </p>
    name: locationName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the PagedList&lt;SupportedSkuInner&gt; object </p>
    type: Observable&lt;ServiceResponse&lt;Page&lt;<xref href="com.microsoft.azure.management.batch.implementation.SupportedSkuInner?alt=com.microsoft.azure.management.batch.implementation.SupportedSkuInner&text=SupportedSkuInner" data-throw-if-not-resolved="False"/>&gt;&gt;&gt;
  summary: >-
    <p>Gets the list of Batch supported Virtual Machine VM sizes available at the given location.</p>

    <p></p>
  syntax: public Observable<ServiceResponse<Page<SupportedSkuInner>>> listSupportedVirtualMachineSkusWithServiceResponseAsync(final String locationName)
  uid: com.microsoft.azure.management.batch.implementation.LocationsInner.listSupportedVirtualMachineSkusWithServiceResponseAsync(final String)
- fullName: com.microsoft.azure.management.batch.implementation.LocationsInner.listSupportedVirtualMachineSkusWithServiceResponseAsync(final String locationName, final Integer maxresults, final String filter)
  name: listSupportedVirtualMachineSkusWithServiceResponseAsync(final String locationName, final Integer maxresults, final String filter)
  nameWithType: LocationsInner.listSupportedVirtualMachineSkusWithServiceResponseAsync(final String locationName, final Integer maxresults, final String filter)
  parameters:
  - description: <p>The region for which to retrieve Batch service supported SKUs. </p>
    name: locationName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>The maximum number of items to return in the response. </p>
    name: maxresults
    type: <xref href="final+Integer?alt=final+Integer&text=final+Integer" data-throw-if-not-resolved="False"/>
  - description: <p>OData filter expression. Valid properties for filtering are "familyName". </p>
    name: filter
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the PagedList&lt;SupportedSkuInner&gt; object </p>
    type: Observable&lt;ServiceResponse&lt;Page&lt;<xref href="com.microsoft.azure.management.batch.implementation.SupportedSkuInner?alt=com.microsoft.azure.management.batch.implementation.SupportedSkuInner&text=SupportedSkuInner" data-throw-if-not-resolved="False"/>&gt;&gt;&gt;
  summary: >-
    <p>Gets the list of Batch supported Virtual Machine VM sizes available at the given location.</p>

    <p></p>
  syntax: public Observable<ServiceResponse<Page<SupportedSkuInner>>> listSupportedVirtualMachineSkusWithServiceResponseAsync(final String locationName, final Integer maxresults, final String filter)
  uid: com.microsoft.azure.management.batch.implementation.LocationsInner.listSupportedVirtualMachineSkusWithServiceResponseAsync(final String,final Integer,final String)
nameWithType: LocationsInner
syntax: public class LocationsInner
type: class
uid: com.microsoft.azure.management.batch.implementation.LocationsInner
fullName: com.microsoft.azure.management.batch.implementation.LocationsInner
name: LocationsInner
package: com.microsoft.azure.management.batch.implementation
summary: <p>An instance of this class provides access to all the operations defined in Locations. </p>
metadata: {}
