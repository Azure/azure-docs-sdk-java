### YamlMime:JavaType
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
methods:
- fullName: com.microsoft.azure.cognitiveservices.vision.computervision.models.ReadResult.angle()
  name: angle()
  nameWithType: ReadResult.angle()
  returns:
    description: <p>the angle value </p>
    type: <xref href="double?alt=double&text=double" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the angle value.</p>

    <p></p>
  syntax: public double angle()
  uid: com.microsoft.azure.cognitiveservices.vision.computervision.models.ReadResult.angle()
- fullName: com.microsoft.azure.cognitiveservices.vision.computervision.models.ReadResult.height()
  name: height()
  nameWithType: ReadResult.height()
  returns:
    description: <p>the height value </p>
    type: <xref href="double?alt=double&text=double" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the height value.</p>

    <p></p>
  syntax: public double height()
  uid: com.microsoft.azure.cognitiveservices.vision.computervision.models.ReadResult.height()
- fullName: com.microsoft.azure.cognitiveservices.vision.computervision.models.ReadResult.language()
  name: language()
  nameWithType: ReadResult.language()
  returns:
    description: <p>the language value </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the language value.</p>

    <p></p>
  syntax: public String language()
  uid: com.microsoft.azure.cognitiveservices.vision.computervision.models.ReadResult.language()
- fullName: com.microsoft.azure.cognitiveservices.vision.computervision.models.ReadResult.lines()
  name: lines()
  nameWithType: ReadResult.lines()
  returns:
    description: <p>the lines value </p>
    type: List&lt;<xref href="com.microsoft.azure.cognitiveservices.vision.computervision.models.Line?alt=com.microsoft.azure.cognitiveservices.vision.computervision.models.Line&text=Line" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Get the lines value.</p>

    <p></p>
  syntax: public List<Line> lines()
  uid: com.microsoft.azure.cognitiveservices.vision.computervision.models.ReadResult.lines()
- fullName: com.microsoft.azure.cognitiveservices.vision.computervision.models.ReadResult.page()
  name: page()
  nameWithType: ReadResult.page()
  returns:
    description: <p>the page value </p>
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the page value.</p>

    <p></p>
  syntax: public int page()
  uid: com.microsoft.azure.cognitiveservices.vision.computervision.models.ReadResult.page()
- fullName: com.microsoft.azure.cognitiveservices.vision.computervision.models.ReadResult.unit()
  name: unit()
  nameWithType: ReadResult.unit()
  returns:
    description: <p>the unit value </p>
    type: <xref href="com.microsoft.azure.cognitiveservices.vision.computervision.models.TextRecognitionResultDimensionUnit?alt=com.microsoft.azure.cognitiveservices.vision.computervision.models.TextRecognitionResultDimensionUnit&text=TextRecognitionResultDimensionUnit" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the unit value.</p>

    <p></p>
  syntax: public TextRecognitionResultDimensionUnit unit()
  uid: com.microsoft.azure.cognitiveservices.vision.computervision.models.ReadResult.unit()
- fullName: com.microsoft.azure.cognitiveservices.vision.computervision.models.ReadResult.width()
  name: width()
  nameWithType: ReadResult.width()
  returns:
    description: <p>the width value </p>
    type: <xref href="double?alt=double&text=double" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the width value.</p>

    <p></p>
  syntax: public double width()
  uid: com.microsoft.azure.cognitiveservices.vision.computervision.models.ReadResult.width()
- fullName: com.microsoft.azure.cognitiveservices.vision.computervision.models.ReadResult.withAngle(double angle)
  name: withAngle(double angle)
  nameWithType: ReadResult.withAngle(double angle)
  parameters:
  - description: <p>the angle value to set </p>
    name: angle
    type: <xref href="double?alt=double&text=double" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the ReadResult object itself. </p>
    type: <xref href="com.microsoft.azure.cognitiveservices.vision.computervision.models.ReadResult?alt=com.microsoft.azure.cognitiveservices.vision.computervision.models.ReadResult&text=ReadResult" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the angle value.</p>

    <p></p>
  syntax: public ReadResult withAngle(double angle)
  uid: com.microsoft.azure.cognitiveservices.vision.computervision.models.ReadResult.withAngle(double)
- fullName: com.microsoft.azure.cognitiveservices.vision.computervision.models.ReadResult.withHeight(double height)
  name: withHeight(double height)
  nameWithType: ReadResult.withHeight(double height)
  parameters:
  - description: <p>the height value to set </p>
    name: height
    type: <xref href="double?alt=double&text=double" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the ReadResult object itself. </p>
    type: <xref href="com.microsoft.azure.cognitiveservices.vision.computervision.models.ReadResult?alt=com.microsoft.azure.cognitiveservices.vision.computervision.models.ReadResult&text=ReadResult" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the height value.</p>

    <p></p>
  syntax: public ReadResult withHeight(double height)
  uid: com.microsoft.azure.cognitiveservices.vision.computervision.models.ReadResult.withHeight(double)
- fullName: com.microsoft.azure.cognitiveservices.vision.computervision.models.ReadResult.withLanguage(String language)
  name: withLanguage(String language)
  nameWithType: ReadResult.withLanguage(String language)
  parameters:
  - description: <p>the language value to set </p>
    name: language
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the ReadResult object itself. </p>
    type: <xref href="com.microsoft.azure.cognitiveservices.vision.computervision.models.ReadResult?alt=com.microsoft.azure.cognitiveservices.vision.computervision.models.ReadResult&text=ReadResult" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the language value.</p>

    <p></p>
  syntax: public ReadResult withLanguage(String language)
  uid: com.microsoft.azure.cognitiveservices.vision.computervision.models.ReadResult.withLanguage(String)
- fullName: com.microsoft.azure.cognitiveservices.vision.computervision.models.ReadResult.withLines(List<Line> lines)
  name: withLines(List<Line> lines)
  nameWithType: ReadResult.withLines(List<Line> lines)
  parameters:
  - description: <p>the lines value to set </p>
    name: lines
    type: List&lt;<xref href="com.microsoft.azure.cognitiveservices.vision.computervision.models.Line?alt=com.microsoft.azure.cognitiveservices.vision.computervision.models.Line&text=Line" data-throw-if-not-resolved="False"/>&gt;
  returns:
    description: <p>the ReadResult object itself. </p>
    type: <xref href="com.microsoft.azure.cognitiveservices.vision.computervision.models.ReadResult?alt=com.microsoft.azure.cognitiveservices.vision.computervision.models.ReadResult&text=ReadResult" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the lines value.</p>

    <p></p>
  syntax: public ReadResult withLines(List<Line> lines)
  uid: com.microsoft.azure.cognitiveservices.vision.computervision.models.ReadResult.withLines(List<Line>)
- fullName: com.microsoft.azure.cognitiveservices.vision.computervision.models.ReadResult.withPage(int page)
  name: withPage(int page)
  nameWithType: ReadResult.withPage(int page)
  parameters:
  - description: <p>the page value to set </p>
    name: page
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the ReadResult object itself. </p>
    type: <xref href="com.microsoft.azure.cognitiveservices.vision.computervision.models.ReadResult?alt=com.microsoft.azure.cognitiveservices.vision.computervision.models.ReadResult&text=ReadResult" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the page value.</p>

    <p></p>
  syntax: public ReadResult withPage(int page)
  uid: com.microsoft.azure.cognitiveservices.vision.computervision.models.ReadResult.withPage(int)
- fullName: com.microsoft.azure.cognitiveservices.vision.computervision.models.ReadResult.withUnit(TextRecognitionResultDimensionUnit unit)
  name: withUnit(TextRecognitionResultDimensionUnit unit)
  nameWithType: ReadResult.withUnit(TextRecognitionResultDimensionUnit unit)
  parameters:
  - description: <p>the unit value to set </p>
    name: unit
    type: <xref href="com.microsoft.azure.cognitiveservices.vision.computervision.models.TextRecognitionResultDimensionUnit?alt=com.microsoft.azure.cognitiveservices.vision.computervision.models.TextRecognitionResultDimensionUnit&text=TextRecognitionResultDimensionUnit" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the ReadResult object itself. </p>
    type: <xref href="com.microsoft.azure.cognitiveservices.vision.computervision.models.ReadResult?alt=com.microsoft.azure.cognitiveservices.vision.computervision.models.ReadResult&text=ReadResult" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the unit value.</p>

    <p></p>
  syntax: public ReadResult withUnit(TextRecognitionResultDimensionUnit unit)
  uid: com.microsoft.azure.cognitiveservices.vision.computervision.models.ReadResult.withUnit(TextRecognitionResultDimensionUnit)
- fullName: com.microsoft.azure.cognitiveservices.vision.computervision.models.ReadResult.withWidth(double width)
  name: withWidth(double width)
  nameWithType: ReadResult.withWidth(double width)
  parameters:
  - description: <p>the width value to set </p>
    name: width
    type: <xref href="double?alt=double&text=double" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the ReadResult object itself. </p>
    type: <xref href="com.microsoft.azure.cognitiveservices.vision.computervision.models.ReadResult?alt=com.microsoft.azure.cognitiveservices.vision.computervision.models.ReadResult&text=ReadResult" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the width value.</p>

    <p></p>
  syntax: public ReadResult withWidth(double width)
  uid: com.microsoft.azure.cognitiveservices.vision.computervision.models.ReadResult.withWidth(double)
nameWithType: ReadResult
syntax: public class ReadResult
type: class
uid: com.microsoft.azure.cognitiveservices.vision.computervision.models.ReadResult
fullName: com.microsoft.azure.cognitiveservices.vision.computervision.models.ReadResult
name: ReadResult
package: com.microsoft.azure.cognitiveservices.vision.computervision.models
summary: <p>Text extracted from a page in the input document. </p>
metadata: {}
