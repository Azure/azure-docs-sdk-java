### YamlMime:JavaMember
nameWithType: IMessageReceiver.receiveDeferredMessage
type: method
members:
- fullName: com.microsoft.azure.servicebus.IMessageReceiver.receiveDeferredMessage(long sequenceNumber)
  name: receiveDeferredMessage(long sequenceNumber)
  nameWithType: IMessageReceiver.receiveDeferredMessage(long sequenceNumber)
  parameters:
  - description: <p>The <xref uid="com.microsoft.azure.servicebus.Message.getSequenceNumber()" data-throw-if-not-resolved="false">Message#getSequenceNumber()</xref>. </p>
    name: sequenceNumber
    type: <xref href="long?alt=long&text=long" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="InterruptedException?alt=InterruptedException&text=InterruptedException" data-throw-if-not-resolved="False"/>
    description: <p>if the current thread was interrupted while waiting </p>
  - type: <xref href="ServiceBusException?alt=ServiceBusException&text=ServiceBusException" data-throw-if-not-resolved="False"/>
    description: <p>if receive failed </p>
  returns:
    description: <p>The received <xref uid="com.microsoft.azure.servicebus.Message" data-throw-if-not-resolved="false">Message</xref> or null if there is no message for given sequence number. </p>
    type: <xref href="com.microsoft.azure.servicebus.IMessage?alt=com.microsoft.azure.servicebus.IMessage&text=IMessage" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Receives a deferred <xref uid="com.microsoft.azure.servicebus.Message" data-throw-if-not-resolved="false">Message</xref>. Deferred messages can only be received by using sequence number.</p>

    <p></p>
  syntax: public IMessage receiveDeferredMessage(long sequenceNumber)
  uid: com.microsoft.azure.servicebus.IMessageReceiver.receiveDeferredMessage(long)
uid: com.microsoft.azure.servicebus.IMessageReceiver.receiveDeferredMessage*
fullName: com.microsoft.azure.servicebus.IMessageReceiver.receiveDeferredMessage(long sequenceNumber)
name: receiveDeferredMessage(long sequenceNumber)
package: com.microsoft.azure.servicebus
metadata: {}
