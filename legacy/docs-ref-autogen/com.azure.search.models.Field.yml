### YamlMime:JavaType
uid: "com.azure.search.models.Field"
fullName: "com.azure.search.models.Field"
name: "Field"
nameWithType: "Field"
summary: "Represents a field in an index definition, which describes the name, data type, and search behavior of a field."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "java.lang.<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  methodsRef:
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#clone--\">clone</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#equals-java.lang.Object-\">equals</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#finalize--\">finalize</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#getClass--\">getClass</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#hashCode--\">hashCode</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notify--\">notify</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notifyAll--\">notifyAll</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString--\">toString</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait--\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-int-\">wait</a>"
syntax: "public final class **Field**"
constructors:
- uid: "com.azure.search.models.Field.Field()"
  fullName: "com.azure.search.models.Field.Field()"
  name: "Field()"
  nameWithType: "Field.Field()"
  syntax: "public Field()"
methods:
- uid: "com.azure.search.models.Field.getAnalyzer()"
  fullName: "com.azure.search.models.Field.getAnalyzer()"
  name: "getAnalyzer()"
  nameWithType: "Field.getAnalyzer()"
  summary: "Get the analyzer property: The name of the language analyzer to use for the field."
  syntax: "public String getAnalyzer()"
  desc: "Get the analyzer property: The name of the language analyzer to use for the field. This option can be used only with searchable fields and it can't be set together with either searchAnalyzer or indexAnalyzer. Once the analyzer is chosen, it cannot be changed for the field. Must be null for complex fields."
  returns:
    description: "the analyzer value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
- uid: "com.azure.search.models.Field.getFields()"
  fullName: "com.azure.search.models.Field.getFields()"
  name: "getFields()"
  nameWithType: "Field.getFields()"
  summary: "Get the fields property: A list of sub-fields if this is a field of type Edm.<wbr>Complex<wbr>Type or Collection(Edm.<wbr>Complex<wbr>Type)."
  syntax: "public List<Field> getFields()"
  desc: "Get the fields property: A list of sub-fields if this is a field of type Edm.ComplexType or Collection(Edm.ComplexType). Must be null or empty for simple fields."
  returns:
    description: "the fields value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<xref href=\"com.azure.search.models.Field?alt=com.azure.search.models.Field&text=Field\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.search.models.Field.getIndexAnalyzer()"
  fullName: "com.azure.search.models.Field.getIndexAnalyzer()"
  name: "getIndexAnalyzer()"
  nameWithType: "Field.getIndexAnalyzer()"
  summary: "Get the index<wbr>Analyzer property: The name of the analyzer used at indexing time for the field."
  syntax: "public String getIndexAnalyzer()"
  desc: "Get the indexAnalyzer property: The name of the analyzer used at indexing time for the field. This option can be used only with searchable fields. It must be set together with searchAnalyzer and it cannot be set together with the analyzer option. Once the analyzer is chosen, it cannot be changed for the field. Must be null for complex fields."
  returns:
    description: "the indexAnalyzer value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
- uid: "com.azure.search.models.Field.getName()"
  fullName: "com.azure.search.models.Field.getName()"
  name: "getName()"
  nameWithType: "Field.getName()"
  summary: "Get the name property: The name of the field, which must be unique within the fields collection of the index or parent field."
  syntax: "public String getName()"
  desc: "Get the name property: The name of the field, which must be unique within the fields collection of the index or parent field."
  returns:
    description: "the name value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
- uid: "com.azure.search.models.Field.getSearchAnalyzer()"
  fullName: "com.azure.search.models.Field.getSearchAnalyzer()"
  name: "getSearchAnalyzer()"
  nameWithType: "Field.getSearchAnalyzer()"
  summary: "Get the search<wbr>Analyzer property: The name of the analyzer used at search time for the field."
  syntax: "public String getSearchAnalyzer()"
  desc: "Get the searchAnalyzer property: The name of the analyzer used at search time for the field. This option can be used only with searchable fields. It must be set together with indexAnalyzer and it cannot be set together with the analyzer option. This analyzer can be updated on an existing field. Must be null for complex fields."
  returns:
    description: "the searchAnalyzer value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
- uid: "com.azure.search.models.Field.getSynonymMaps()"
  fullName: "com.azure.search.models.Field.getSynonymMaps()"
  name: "getSynonymMaps()"
  nameWithType: "Field.getSynonymMaps()"
  summary: "Get the synonym<wbr>Maps property: A list of the names of synonym maps to associate with this field."
  syntax: "public List<String> getSynonymMaps()"
  desc: "Get the synonymMaps property: A list of the names of synonym maps to associate with this field. This option can be used only with searchable fields. Currently only one synonym map per field is supported. Assigning a synonym map to a field ensures that query terms targeting that field are expanded at query-time using the rules in the synonym map. This attribute can be changed on existing fields. Must be null or an empty collection for complex fields."
  returns:
    description: "the synonymMaps value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>&gt;"
- uid: "com.azure.search.models.Field.getType()"
  fullName: "com.azure.search.models.Field.getType()"
  name: "getType()"
  nameWithType: "Field.getType()"
  summary: "Get the type property: The data type of the field."
  syntax: "public DataType getType()"
  desc: "Get the type property: The data type of the field. Possible values include: 'Edm.String', 'Edm.Int32', 'Edm.Int64', 'Edm.Double', 'Edm.Boolean', 'Edm.DateTimeOffset', 'Edm.GeographyPoint', 'Edm.ComplexType'."
  returns:
    description: "the type value."
    type: "<xref href=\"com.azure.search.models.DataType?alt=com.azure.search.models.DataType&text=DataType\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.search.models.Field.isFacetable()"
  fullName: "com.azure.search.models.Field.isFacetable()"
  name: "isFacetable()"
  nameWithType: "Field.isFacetable()"
  summary: "Get the facetable property: A value indicating whether to enable the field to be referenced in facet queries."
  syntax: "public Boolean isFacetable()"
  desc: "Get the facetable property: A value indicating whether to enable the field to be referenced in facet queries. Typically used in a presentation of search results that includes hit count by category (for example, search for digital cameras and see hits by brand, by megapixels, by price, and so on). This property must be null for complex fields. Fields of type Edm.GeographyPoint or Collection(Edm.GeographyPoint) cannot be facetable. Default is true for all other simple fields."
  returns:
    description: "the facetable value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Boolean.html\">Boolean</a>"
- uid: "com.azure.search.models.Field.isFilterable()"
  fullName: "com.azure.search.models.Field.isFilterable()"
  name: "isFilterable()"
  nameWithType: "Field.isFilterable()"
  summary: "Get the filterable property: A value indicating whether to enable the field to be referenced in $filter queries."
  syntax: "public Boolean isFilterable()"
  desc: "Get the filterable property: A value indicating whether to enable the field to be referenced in $filter queries. filterable differs from searchable in how strings are handled. Fields of type Edm.String or Collection(Edm.String) that are filterable do not undergo word-breaking, so comparisons are for exact matches only. For example, if you set such a field f to \"sunny day\", $filter=f eq 'sunny' will find no matches, but $filter=f eq 'sunny day' will. This property must be null for complex fields. Default is true for simple fields and null for complex fields."
  returns:
    description: "the filterable value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Boolean.html\">Boolean</a>"
- uid: "com.azure.search.models.Field.isKey()"
  fullName: "com.azure.search.models.Field.isKey()"
  name: "isKey()"
  nameWithType: "Field.isKey()"
  summary: "Get the key property: A value indicating whether the field uniquely identifies documents in the index."
  syntax: "public Boolean isKey()"
  desc: "Get the key property: A value indicating whether the field uniquely identifies documents in the index. Exactly one top-level field in each index must be chosen as the key field and it must be of type Edm.String. Key fields can be used to look up documents directly and update or delete specific documents. Default is false for simple fields and null for complex fields."
  returns:
    description: "the key value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Boolean.html\">Boolean</a>"
- uid: "com.azure.search.models.Field.isRetrievable()"
  fullName: "com.azure.search.models.Field.isRetrievable()"
  name: "isRetrievable()"
  nameWithType: "Field.isRetrievable()"
  summary: "Get the retrievable property: A value indicating whether the field can be returned in a search result."
  syntax: "public Boolean isRetrievable()"
  desc: "Get the retrievable property: A value indicating whether the field can be returned in a search result. You can disable this option if you want to use a field (for example, margin) as a filter, sorting, or scoring mechanism but do not want the field to be visible to the end user. This property must be true for key fields, and it must be null for complex fields. This property can be changed on existing fields. Enabling this property does not cause any increase in index storage requirements. Default is true for simple fields and null for complex fields."
  returns:
    description: "the retrievable value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Boolean.html\">Boolean</a>"
- uid: "com.azure.search.models.Field.isSearchable()"
  fullName: "com.azure.search.models.Field.isSearchable()"
  name: "isSearchable()"
  nameWithType: "Field.isSearchable()"
  summary: "Get the searchable property: A value indicating whether the field is full-text searchable."
  syntax: "public Boolean isSearchable()"
  desc: "Get the searchable property: A value indicating whether the field is full-text searchable. This means it will undergo analysis such as word-breaking during indexing. If you set a searchable field to a value like \"sunny day\", internally it will be split into the individual tokens \"sunny\" and \"day\". This enables full-text searches for these terms. Fields of type Edm.String or Collection(Edm.String) are searchable by default. This property must be false for simple fields of other non-string data types, and it must be null for complex fields. Note: searchable fields consume extra space in your index since Azure Cognitive Search will store an additional tokenized version of the field value for full-text searches. If you want to save space in your index and you don't need a field to be included in searches, set searchable to false."
  returns:
    description: "the searchable value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Boolean.html\">Boolean</a>"
- uid: "com.azure.search.models.Field.isSortable()"
  fullName: "com.azure.search.models.Field.isSortable()"
  name: "isSortable()"
  nameWithType: "Field.isSortable()"
  summary: "Get the sortable property: A value indicating whether to enable the field to be referenced in $orderby expressions."
  syntax: "public Boolean isSortable()"
  desc: "Get the sortable property: A value indicating whether to enable the field to be referenced in $orderby expressions. By default Azure Cognitive Search sorts results by score, but in many experiences users will want to sort by fields in the documents. A simple field can be sortable only if it is single-valued (it has a single value in the scope of the parent document). Simple collection fields cannot be sortable, since they are multi-valued. Simple sub-fields of complex collections are also multi-valued, and therefore cannot be sortable. This is true whether it's an immediate parent field, or an ancestor field, that's the complex collection. Complex fields cannot be sortable and the sortable property must be null for such fields. The default for sortable is true for single-valued simple fields, false for multi-valued simple fields, and null for complex fields."
  returns:
    description: "the sortable value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Boolean.html\">Boolean</a>"
- uid: "com.azure.search.models.Field.setAnalyzer(java.lang.String)"
  fullName: "com.azure.search.models.Field.setAnalyzer(String analyzer)"
  name: "setAnalyzer(String analyzer)"
  nameWithType: "Field.setAnalyzer(String analyzer)"
  summary: "Set the analyzer property: The name of the language analyzer to use for the field."
  parameters:
  - description: "the analyzer value to set."
    name: "analyzer"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public Field setAnalyzer(String analyzer)"
  desc: "Set the analyzer property: The name of the language analyzer to use for the field. This option can be used only with searchable fields and it can't be set together with either searchAnalyzer or indexAnalyzer. Once the analyzer is chosen, it cannot be changed for the field. Must be null for complex fields."
  returns:
    description: "the Field object itself."
    type: "<xref href=\"com.azure.search.models.Field?alt=com.azure.search.models.Field&text=Field\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.search.models.Field.setFacetable(java.lang.Boolean)"
  fullName: "com.azure.search.models.Field.setFacetable(Boolean facetable)"
  name: "setFacetable(Boolean facetable)"
  nameWithType: "Field.setFacetable(Boolean facetable)"
  summary: "Set the facetable property: A value indicating whether to enable the field to be referenced in facet queries."
  parameters:
  - description: "the facetable value to set."
    name: "facetable"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Boolean.html\">Boolean</a>"
  syntax: "public Field setFacetable(Boolean facetable)"
  desc: "Set the facetable property: A value indicating whether to enable the field to be referenced in facet queries. Typically used in a presentation of search results that includes hit count by category (for example, search for digital cameras and see hits by brand, by megapixels, by price, and so on). This property must be null for complex fields. Fields of type Edm.GeographyPoint or Collection(Edm.GeographyPoint) cannot be facetable. Default is true for all other simple fields."
  returns:
    description: "the Field object itself."
    type: "<xref href=\"com.azure.search.models.Field?alt=com.azure.search.models.Field&text=Field\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.search.models.Field.setFields(java.util.List<com.azure.search.models.Field>)"
  fullName: "com.azure.search.models.Field.setFields(List<Field> fields)"
  name: "setFields(List<Field> fields)"
  nameWithType: "Field.setFields(List<Field> fields)"
  summary: "Set the fields property: A list of sub-fields if this is a field of type Edm.<wbr>Complex<wbr>Type or Collection(Edm.<wbr>Complex<wbr>Type)."
  parameters:
  - description: "the fields value to set."
    name: "fields"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<xref href=\"com.azure.search.models.Field?alt=com.azure.search.models.Field&text=Field\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public Field setFields(List<Field> fields)"
  desc: "Set the fields property: A list of sub-fields if this is a field of type Edm.ComplexType or Collection(Edm.ComplexType). Must be null or empty for simple fields."
  returns:
    description: "the Field object itself."
    type: "<xref href=\"com.azure.search.models.Field?alt=com.azure.search.models.Field&text=Field\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.search.models.Field.setFilterable(java.lang.Boolean)"
  fullName: "com.azure.search.models.Field.setFilterable(Boolean filterable)"
  name: "setFilterable(Boolean filterable)"
  nameWithType: "Field.setFilterable(Boolean filterable)"
  summary: "Set the filterable property: A value indicating whether to enable the field to be referenced in $filter queries."
  parameters:
  - description: "the filterable value to set."
    name: "filterable"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Boolean.html\">Boolean</a>"
  syntax: "public Field setFilterable(Boolean filterable)"
  desc: "Set the filterable property: A value indicating whether to enable the field to be referenced in $filter queries. filterable differs from searchable in how strings are handled. Fields of type Edm.String or Collection(Edm.String) that are filterable do not undergo word-breaking, so comparisons are for exact matches only. For example, if you set such a field f to \"sunny day\", $filter=f eq 'sunny' will find no matches, but $filter=f eq 'sunny day' will. This property must be null for complex fields. Default is true for simple fields and null for complex fields."
  returns:
    description: "the Field object itself."
    type: "<xref href=\"com.azure.search.models.Field?alt=com.azure.search.models.Field&text=Field\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.search.models.Field.setIndexAnalyzer(java.lang.String)"
  fullName: "com.azure.search.models.Field.setIndexAnalyzer(String indexAnalyzer)"
  name: "setIndexAnalyzer(String indexAnalyzer)"
  nameWithType: "Field.setIndexAnalyzer(String indexAnalyzer)"
  summary: "Set the index<wbr>Analyzer property: The name of the analyzer used at indexing time for the field."
  parameters:
  - description: "the indexAnalyzer value to set."
    name: "indexAnalyzer"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public Field setIndexAnalyzer(String indexAnalyzer)"
  desc: "Set the indexAnalyzer property: The name of the analyzer used at indexing time for the field. This option can be used only with searchable fields. It must be set together with searchAnalyzer and it cannot be set together with the analyzer option. Once the analyzer is chosen, it cannot be changed for the field. Must be null for complex fields."
  returns:
    description: "the Field object itself."
    type: "<xref href=\"com.azure.search.models.Field?alt=com.azure.search.models.Field&text=Field\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.search.models.Field.setKey(java.lang.Boolean)"
  fullName: "com.azure.search.models.Field.setKey(Boolean key)"
  name: "setKey(Boolean key)"
  nameWithType: "Field.setKey(Boolean key)"
  summary: "Set the key property: A value indicating whether the field uniquely identifies documents in the index."
  parameters:
  - description: "the key value to set."
    name: "key"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Boolean.html\">Boolean</a>"
  syntax: "public Field setKey(Boolean key)"
  desc: "Set the key property: A value indicating whether the field uniquely identifies documents in the index. Exactly one top-level field in each index must be chosen as the key field and it must be of type Edm.String. Key fields can be used to look up documents directly and update or delete specific documents. Default is false for simple fields and null for complex fields."
  returns:
    description: "the Field object itself."
    type: "<xref href=\"com.azure.search.models.Field?alt=com.azure.search.models.Field&text=Field\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.search.models.Field.setName(java.lang.String)"
  fullName: "com.azure.search.models.Field.setName(String name)"
  name: "setName(String name)"
  nameWithType: "Field.setName(String name)"
  summary: "Set the name property: The name of the field, which must be unique within the fields collection of the index or parent field."
  parameters:
  - description: "the name value to set."
    name: "name"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public Field setName(String name)"
  desc: "Set the name property: The name of the field, which must be unique within the fields collection of the index or parent field."
  returns:
    description: "the Field object itself."
    type: "<xref href=\"com.azure.search.models.Field?alt=com.azure.search.models.Field&text=Field\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.search.models.Field.setRetrievable(java.lang.Boolean)"
  fullName: "com.azure.search.models.Field.setRetrievable(Boolean retrievable)"
  name: "setRetrievable(Boolean retrievable)"
  nameWithType: "Field.setRetrievable(Boolean retrievable)"
  summary: "Set the retrievable property: A value indicating whether the field can be returned in a search result."
  parameters:
  - description: "the retrievable value to set."
    name: "retrievable"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Boolean.html\">Boolean</a>"
  syntax: "public Field setRetrievable(Boolean retrievable)"
  desc: "Set the retrievable property: A value indicating whether the field can be returned in a search result. You can disable this option if you want to use a field (for example, margin) as a filter, sorting, or scoring mechanism but do not want the field to be visible to the end user. This property must be true for key fields, and it must be null for complex fields. This property can be changed on existing fields. Enabling this property does not cause any increase in index storage requirements. Default is true for simple fields and null for complex fields."
  returns:
    description: "the Field object itself."
    type: "<xref href=\"com.azure.search.models.Field?alt=com.azure.search.models.Field&text=Field\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.search.models.Field.setSearchable(java.lang.Boolean)"
  fullName: "com.azure.search.models.Field.setSearchable(Boolean searchable)"
  name: "setSearchable(Boolean searchable)"
  nameWithType: "Field.setSearchable(Boolean searchable)"
  summary: "Set the searchable property: A value indicating whether the field is full-text searchable."
  parameters:
  - description: "the searchable value to set."
    name: "searchable"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Boolean.html\">Boolean</a>"
  syntax: "public Field setSearchable(Boolean searchable)"
  desc: "Set the searchable property: A value indicating whether the field is full-text searchable. This means it will undergo analysis such as word-breaking during indexing. If you set a searchable field to a value like \"sunny day\", internally it will be split into the individual tokens \"sunny\" and \"day\". This enables full-text searches for these terms. Fields of type Edm.String or Collection(Edm.String) are searchable by default. This property must be false for simple fields of other non-string data types, and it must be null for complex fields. Note: searchable fields consume extra space in your index since Azure Cognitive Search will store an additional tokenized version of the field value for full-text searches. If you want to save space in your index and you don't need a field to be included in searches, set searchable to false."
  returns:
    description: "the Field object itself."
    type: "<xref href=\"com.azure.search.models.Field?alt=com.azure.search.models.Field&text=Field\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.search.models.Field.setSearchAnalyzer(java.lang.String)"
  fullName: "com.azure.search.models.Field.setSearchAnalyzer(String searchAnalyzer)"
  name: "setSearchAnalyzer(String searchAnalyzer)"
  nameWithType: "Field.setSearchAnalyzer(String searchAnalyzer)"
  summary: "Set the search<wbr>Analyzer property: The name of the analyzer used at search time for the field."
  parameters:
  - description: "the searchAnalyzer value to set."
    name: "searchAnalyzer"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public Field setSearchAnalyzer(String searchAnalyzer)"
  desc: "Set the searchAnalyzer property: The name of the analyzer used at search time for the field. This option can be used only with searchable fields. It must be set together with indexAnalyzer and it cannot be set together with the analyzer option. This analyzer can be updated on an existing field. Must be null for complex fields."
  returns:
    description: "the Field object itself."
    type: "<xref href=\"com.azure.search.models.Field?alt=com.azure.search.models.Field&text=Field\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.search.models.Field.setSortable(java.lang.Boolean)"
  fullName: "com.azure.search.models.Field.setSortable(Boolean sortable)"
  name: "setSortable(Boolean sortable)"
  nameWithType: "Field.setSortable(Boolean sortable)"
  summary: "Set the sortable property: A value indicating whether to enable the field to be referenced in $orderby expressions."
  parameters:
  - description: "the sortable value to set."
    name: "sortable"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Boolean.html\">Boolean</a>"
  syntax: "public Field setSortable(Boolean sortable)"
  desc: "Set the sortable property: A value indicating whether to enable the field to be referenced in $orderby expressions. By default Azure Cognitive Search sorts results by score, but in many experiences users will want to sort by fields in the documents. A simple field can be sortable only if it is single-valued (it has a single value in the scope of the parent document). Simple collection fields cannot be sortable, since they are multi-valued. Simple sub-fields of complex collections are also multi-valued, and therefore cannot be sortable. This is true whether it's an immediate parent field, or an ancestor field, that's the complex collection. Complex fields cannot be sortable and the sortable property must be null for such fields. The default for sortable is true for single-valued simple fields, false for multi-valued simple fields, and null for complex fields."
  returns:
    description: "the Field object itself."
    type: "<xref href=\"com.azure.search.models.Field?alt=com.azure.search.models.Field&text=Field\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.search.models.Field.setSynonymMaps(java.util.List<java.lang.String>)"
  fullName: "com.azure.search.models.Field.setSynonymMaps(List<String> synonymMaps)"
  name: "setSynonymMaps(List<String> synonymMaps)"
  nameWithType: "Field.setSynonymMaps(List<String> synonymMaps)"
  summary: "Set the synonym<wbr>Maps property: A list of the names of synonym maps to associate with this field."
  parameters:
  - description: "the synonymMaps value to set."
    name: "synonymMaps"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>&gt;"
  syntax: "public Field setSynonymMaps(List<String> synonymMaps)"
  desc: "Set the synonymMaps property: A list of the names of synonym maps to associate with this field. This option can be used only with searchable fields. Currently only one synonym map per field is supported. Assigning a synonym map to a field ensures that query terms targeting that field are expanded at query-time using the rules in the synonym map. This attribute can be changed on existing fields. Must be null or an empty collection for complex fields."
  returns:
    description: "the Field object itself."
    type: "<xref href=\"com.azure.search.models.Field?alt=com.azure.search.models.Field&text=Field\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.search.models.Field.setType(com.azure.search.models.DataType)"
  fullName: "com.azure.search.models.Field.setType(DataType type)"
  name: "setType(DataType type)"
  nameWithType: "Field.setType(DataType type)"
  summary: "Set the type property: The data type of the field."
  parameters:
  - description: "the type value to set."
    name: "type"
    type: "<xref href=\"com.azure.search.models.DataType?alt=com.azure.search.models.DataType&text=DataType\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Field setType(DataType type)"
  desc: "Set the type property: The data type of the field. Possible values include: 'Edm.String', 'Edm.Int32', 'Edm.Int64', 'Edm.Double', 'Edm.Boolean', 'Edm.DateTimeOffset', 'Edm.GeographyPoint', 'Edm.ComplexType'."
  returns:
    description: "the Field object itself."
    type: "<xref href=\"com.azure.search.models.Field?alt=com.azure.search.models.Field&text=Field\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Represents a field in an index definition, which describes the name, data type, and search behavior of a field."
metadata: {}
package: "com.azure.search.models"
artifact: com.azure:azure-search:11.0.0-beta.1
