### YamlMime:JavaMember
nameWithType: FileOperations.deleteFileFromComputeNode
type: method
members:
- fullName: com.microsoft.azure.batch.FileOperations.deleteFileFromComputeNode(String poolId, String nodeId, String fileName)
  name: deleteFileFromComputeNode(String poolId, String nodeId, String fileName)
  nameWithType: FileOperations.deleteFileFromComputeNode(String poolId, String nodeId, String fileName)
  parameters:
  - description: <p>The ID of the pool that contains the compute node. </p>
    name: poolId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The ID of the compute node. </p>
    name: nodeId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the file to delete. </p>
    name: fileName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="BatchErrorException?alt=BatchErrorException&text=BatchErrorException" data-throw-if-not-resolved="False"/>
    description: <p>Exception thrown when an error response is received from the Batch service. </p>
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
    description: <p>Exception thrown when there is an error in serialization/deserialization of data sent to/received from the Batch service. </p>
  summary: >-
    <p>Deletes the specified file from the specified compute node.</p>

    <p></p>
  syntax: public void deleteFileFromComputeNode(String poolId, String nodeId, String fileName)
  uid: com.microsoft.azure.batch.FileOperations.deleteFileFromComputeNode(String,String,String)
- fullName: com.microsoft.azure.batch.FileOperations.deleteFileFromComputeNode(String poolId, String nodeId, String fileName, Boolean recursive)
  name: deleteFileFromComputeNode(String poolId, String nodeId, String fileName, Boolean recursive)
  nameWithType: FileOperations.deleteFileFromComputeNode(String poolId, String nodeId, String fileName, Boolean recursive)
  parameters:
  - description: <p>The ID of the pool that contains the compute node. </p>
    name: poolId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The ID of the compute node. </p>
    name: nodeId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the file to delete. </p>
    name: fileName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>If the file-path parameter represents a directory instead of a file, you can set the recursive parameter to true to delete the directory and all of the files and subdirectories in it. If recursive is false or null, then the directory must be empty or deletion will fail. </p>
    name: recursive
    type: <xref href="Boolean?alt=Boolean&text=Boolean" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="BatchErrorException?alt=BatchErrorException&text=BatchErrorException" data-throw-if-not-resolved="False"/>
    description: <p>Exception thrown when an error response is received from the Batch service. </p>
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
    description: <p>Exception thrown when there is an error in serialization/deserialization of data sent to/received from the Batch service. </p>
  summary: >-
    <p>Deletes the specified file from the specified compute node.</p>

    <p></p>
  syntax: public void deleteFileFromComputeNode(String poolId, String nodeId, String fileName, Boolean recursive)
  uid: com.microsoft.azure.batch.FileOperations.deleteFileFromComputeNode(String,String,String,Boolean)
- fullName: com.microsoft.azure.batch.FileOperations.deleteFileFromComputeNode(String poolId, String nodeId, String fileName, Boolean recursive, Iterable<BatchClientBehavior> additionalBehaviors)
  name: deleteFileFromComputeNode(String poolId, String nodeId, String fileName, Boolean recursive, Iterable<BatchClientBehavior> additionalBehaviors)
  nameWithType: FileOperations.deleteFileFromComputeNode(String poolId, String nodeId, String fileName, Boolean recursive, Iterable<BatchClientBehavior> additionalBehaviors)
  parameters:
  - description: <p>The ID of the pool that contains the compute node. </p>
    name: poolId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The ID of the compute node. </p>
    name: nodeId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the file to delete. </p>
    name: fileName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>If the file-path parameter represents a directory instead of a file, you can set the recursive parameter to true to delete the directory and all of the files and subdirectories in it. If recursive is false or null, then the directory must be empty or deletion will fail. </p>
    name: recursive
    type: <xref href="Boolean?alt=Boolean&text=Boolean" data-throw-if-not-resolved="False"/>
  - description: <p>A collection of <xref uid="com.microsoft.azure.batch.BatchClientBehavior" data-throw-if-not-resolved="false">BatchClientBehavior</xref> instances that are applied to the Batch service request. </p>
    name: additionalBehaviors
    type: Iterable&lt;<xref href="com.microsoft.azure.batch.BatchClientBehavior?alt=com.microsoft.azure.batch.BatchClientBehavior&text=BatchClientBehavior" data-throw-if-not-resolved="False"/>&gt;
  exceptions:
  - type: <xref href="BatchErrorException?alt=BatchErrorException&text=BatchErrorException" data-throw-if-not-resolved="False"/>
    description: <p>Exception thrown when an error response is received from the Batch service. </p>
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
    description: <p>Exception thrown when there is an error in serialization/deserialization of data sent to/received from the Batch service. </p>
  summary: >-
    <p>Deletes the specified file from the specified compute node.</p>

    <p></p>
  syntax: public void deleteFileFromComputeNode(String poolId, String nodeId, String fileName, Boolean recursive, Iterable<BatchClientBehavior> additionalBehaviors)
  uid: com.microsoft.azure.batch.FileOperations.deleteFileFromComputeNode(String,String,String,Boolean,Iterable<BatchClientBehavior>)
uid: com.microsoft.azure.batch.FileOperations.deleteFileFromComputeNode*
fullName: com.microsoft.azure.batch.FileOperations.deleteFileFromComputeNode(String poolId, String nodeId, String fileName)
name: deleteFileFromComputeNode(String poolId, String nodeId, String fileName)
package: com.microsoft.azure.batch
metadata: {}
