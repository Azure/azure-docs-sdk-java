### YamlMime:JavaMember
nameWithType: ProxyBase.invoke
type: method
members:
- fullName: microsoft.servicefabric.services.remoting.builder.ProxyBase.invoke(int interfaceId, int methodId, byte[] requestMsgBodyBytes)
  name: invoke(int interfaceId, int methodId, byte[] requestMsgBodyBytes)
  nameWithType: ProxyBase.invoke(int interfaceId, int methodId, byte[] requestMsgBodyBytes)
  parameters:
  - description: <p>Id of the remote interface. </p>
    name: interfaceId
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  - description: <p>Id of the remote method to be invokved. </p>
    name: methodId
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  - description: <p>Message body to be sent to remote object. </p>
    name: requestMsgBodyBytes
    type: <xref href="byte+%5B%5D?alt=byte []&text=byte+%5B%5D" data-throw-if-not-resolved="False"/>
  returns:
    type: <xref href="abstract+void?alt=abstract void&text=abstract+void" data-throw-if-not-resolved="False"/>
  summary: <p>Called by the generated proxy class to send the message to the remote object. </p>
  syntax: protected abstract void invoke(int interfaceId, int methodId, byte[] requestMsgBodyBytes)
  uid: microsoft.servicefabric.services.remoting.builder.ProxyBase.invoke(int,int,byte [])
- fullName: microsoft.servicefabric.services.remoting.builder.ProxyBase.invoke(int interfaceId, int methodId, Object requestMsgBodyValue)
  name: invoke(int interfaceId, int methodId, Object requestMsgBodyValue)
  nameWithType: ProxyBase.invoke(int interfaceId, int methodId, Object requestMsgBodyValue)
  parameters:
  - description: <p>Id of the remote interface. </p>
    name: interfaceId
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  - description: <p>Id of the remote method to be invokved. </p>
    name: methodId
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  - description: <p>Message body to be sent to remote object. </p>
    name: requestMsgBodyValue
    type: <xref href="Object?alt=Object&text=Object" data-throw-if-not-resolved="False"/>
  summary: <p>Called by the generated proxy class to send the message to the remote object. </p>
  syntax: protected void invoke(int interfaceId, int methodId, Object requestMsgBodyValue)
  uid: microsoft.servicefabric.services.remoting.builder.ProxyBase.invoke(int,int,Object)
uid: microsoft.servicefabric.services.remoting.builder.ProxyBase.invoke*
fullName: microsoft.servicefabric.services.remoting.builder.ProxyBase.invoke(int interfaceId, int methodId, byte[] requestMsgBodyBytes)
name: invoke(int interfaceId, int methodId, byte[] requestMsgBodyBytes)
package: microsoft.servicefabric.services.remoting.builder
metadata: {}
