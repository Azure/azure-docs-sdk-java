### YamlMime:JavaType
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
- <xref href="ProxyResource" data-throw-if-not-resolved="False"/>
methods:
- fullName: com.microsoft.azure.management.batchai.implementation.ClusterInner.allocationState()
  name: allocationState()
  nameWithType: ClusterInner.allocationState()
  returns:
    description: <p>the allocationState value </p>
    type: <xref href="com.microsoft.azure.management.batchai.AllocationState?alt=com.microsoft.azure.management.batchai.AllocationState&text=AllocationState" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get allocation state of the cluster. Possible values are: steady - Indicates that the cluster is not resizing. There are no changes to the number of compute nodes in the cluster in progress. A cluster enters this state when it is created and when no operations are being performed on the cluster to change the number of compute nodes. resizing - Indicates that the cluster is resizing; that is, compute nodes are being added to or removed from the cluster. Possible values include: 'steady', 'resizing'.</p>

    <p></p>
  syntax: public AllocationState allocationState()
  uid: com.microsoft.azure.management.batchai.implementation.ClusterInner.allocationState()
- fullName: com.microsoft.azure.management.batchai.implementation.ClusterInner.allocationStateTransitionTime()
  name: allocationStateTransitionTime()
  nameWithType: ClusterInner.allocationStateTransitionTime()
  returns:
    description: <p>the allocationStateTransitionTime value </p>
    type: <xref href="DateTime?alt=DateTime&text=DateTime" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the time at which the cluster entered its current allocation state.</p>

    <p></p>
  syntax: public DateTime allocationStateTransitionTime()
  uid: com.microsoft.azure.management.batchai.implementation.ClusterInner.allocationStateTransitionTime()
- fullName: com.microsoft.azure.management.batchai.implementation.ClusterInner.creationTime()
  name: creationTime()
  nameWithType: ClusterInner.creationTime()
  returns:
    description: <p>the creationTime value </p>
    type: <xref href="DateTime?alt=DateTime&text=DateTime" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the time when the cluster was created.</p>

    <p></p>
  syntax: public DateTime creationTime()
  uid: com.microsoft.azure.management.batchai.implementation.ClusterInner.creationTime()
- fullName: com.microsoft.azure.management.batchai.implementation.ClusterInner.currentNodeCount()
  name: currentNodeCount()
  nameWithType: ClusterInner.currentNodeCount()
  returns:
    description: <p>the currentNodeCount value </p>
    type: <xref href="Integer?alt=Integer&text=Integer" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the number of compute nodes currently assigned to the cluster.</p>

    <p></p>
  syntax: public Integer currentNodeCount()
  uid: com.microsoft.azure.management.batchai.implementation.ClusterInner.currentNodeCount()
- fullName: com.microsoft.azure.management.batchai.implementation.ClusterInner.errors()
  name: errors()
  nameWithType: ClusterInner.errors()
  returns:
    description: <p>the errors value </p>
    type: List&lt;<xref href="com.microsoft.azure.management.batchai.BatchAIError?alt=com.microsoft.azure.management.batchai.BatchAIError&text=BatchAIError" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Get collection of errors encountered by various compute nodes during node setup.</p>

    <p></p>
  syntax: public List<BatchAIError> errors()
  uid: com.microsoft.azure.management.batchai.implementation.ClusterInner.errors()
- fullName: com.microsoft.azure.management.batchai.implementation.ClusterInner.nodeSetup()
  name: nodeSetup()
  nameWithType: ClusterInner.nodeSetup()
  returns:
    description: <p>the nodeSetup value </p>
    type: <xref href="com.microsoft.azure.management.batchai.NodeSetup?alt=com.microsoft.azure.management.batchai.NodeSetup&text=NodeSetup" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get setup (mount file systems, performance counters settings and custom setup task) to be performed on each compute node in the cluster.</p>

    <p></p>
  syntax: public NodeSetup nodeSetup()
  uid: com.microsoft.azure.management.batchai.implementation.ClusterInner.nodeSetup()
- fullName: com.microsoft.azure.management.batchai.implementation.ClusterInner.nodeStateCounts()
  name: nodeStateCounts()
  nameWithType: ClusterInner.nodeStateCounts()
  returns:
    description: <p>the nodeStateCounts value </p>
    type: <xref href="com.microsoft.azure.management.batchai.NodeStateCounts?alt=com.microsoft.azure.management.batchai.NodeStateCounts&text=NodeStateCounts" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get counts of various node states on the cluster.</p>

    <p></p>
  syntax: public NodeStateCounts nodeStateCounts()
  uid: com.microsoft.azure.management.batchai.implementation.ClusterInner.nodeStateCounts()
- fullName: com.microsoft.azure.management.batchai.implementation.ClusterInner.provisioningState()
  name: provisioningState()
  nameWithType: ClusterInner.provisioningState()
  returns:
    description: <p>the provisioningState value </p>
    type: <xref href="com.microsoft.azure.management.batchai.ProvisioningState?alt=com.microsoft.azure.management.batchai.ProvisioningState&text=ProvisioningState" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get provisioning state of the cluster. Possible value are: creating - Specifies that the cluster is being created. succeeded - Specifies that the cluster has been created successfully. failed - Specifies that the cluster creation has failed. deleting - Specifies that the cluster is being deleted. Possible values include: 'creating', 'succeeded', 'failed', 'deleting'.</p>

    <p></p>
  syntax: public ProvisioningState provisioningState()
  uid: com.microsoft.azure.management.batchai.implementation.ClusterInner.provisioningState()
- fullName: com.microsoft.azure.management.batchai.implementation.ClusterInner.provisioningStateTransitionTime()
  name: provisioningStateTransitionTime()
  nameWithType: ClusterInner.provisioningStateTransitionTime()
  returns:
    description: <p>the provisioningStateTransitionTime value </p>
    type: <xref href="DateTime?alt=DateTime&text=DateTime" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get time when the provisioning state was changed.</p>

    <p></p>
  syntax: public DateTime provisioningStateTransitionTime()
  uid: com.microsoft.azure.management.batchai.implementation.ClusterInner.provisioningStateTransitionTime()
- fullName: com.microsoft.azure.management.batchai.implementation.ClusterInner.scaleSettings()
  name: scaleSettings()
  nameWithType: ClusterInner.scaleSettings()
  returns:
    description: <p>the scaleSettings value </p>
    type: <xref href="com.microsoft.azure.management.batchai.ScaleSettings?alt=com.microsoft.azure.management.batchai.ScaleSettings&text=ScaleSettings" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get scale settings of the cluster.</p>

    <p></p>
  syntax: public ScaleSettings scaleSettings()
  uid: com.microsoft.azure.management.batchai.implementation.ClusterInner.scaleSettings()
- fullName: com.microsoft.azure.management.batchai.implementation.ClusterInner.subnet()
  name: subnet()
  nameWithType: ClusterInner.subnet()
  returns:
    description: <p>the subnet value </p>
    type: <xref href="com.microsoft.azure.management.batchai.ResourceId?alt=com.microsoft.azure.management.batchai.ResourceId&text=ResourceId" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get virtual network subnet resource ID the cluster nodes belong to.</p>

    <p></p>
  syntax: public ResourceId subnet()
  uid: com.microsoft.azure.management.batchai.implementation.ClusterInner.subnet()
- fullName: com.microsoft.azure.management.batchai.implementation.ClusterInner.userAccountSettings()
  name: userAccountSettings()
  nameWithType: ClusterInner.userAccountSettings()
  returns:
    description: <p>the userAccountSettings value </p>
    type: <xref href="com.microsoft.azure.management.batchai.UserAccountSettings?alt=com.microsoft.azure.management.batchai.UserAccountSettings&text=UserAccountSettings" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get administrator user account settings which can be used to SSH to compute nodes.</p>

    <p></p>
  syntax: public UserAccountSettings userAccountSettings()
  uid: com.microsoft.azure.management.batchai.implementation.ClusterInner.userAccountSettings()
- fullName: com.microsoft.azure.management.batchai.implementation.ClusterInner.virtualMachineConfiguration()
  name: virtualMachineConfiguration()
  nameWithType: ClusterInner.virtualMachineConfiguration()
  returns:
    description: <p>the virtualMachineConfiguration value </p>
    type: <xref href="com.microsoft.azure.management.batchai.VirtualMachineConfiguration?alt=com.microsoft.azure.management.batchai.VirtualMachineConfiguration&text=VirtualMachineConfiguration" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get virtual machine configuration (OS image) of the compute nodes. All nodes in a cluster have the same OS image configuration.</p>

    <p></p>
  syntax: public VirtualMachineConfiguration virtualMachineConfiguration()
  uid: com.microsoft.azure.management.batchai.implementation.ClusterInner.virtualMachineConfiguration()
- fullName: com.microsoft.azure.management.batchai.implementation.ClusterInner.vmPriority()
  name: vmPriority()
  nameWithType: ClusterInner.vmPriority()
  returns:
    description: <p>the vmPriority value </p>
    type: <xref href="com.microsoft.azure.management.batchai.VmPriority?alt=com.microsoft.azure.management.batchai.VmPriority&text=VmPriority" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get vM priority of cluster nodes. Possible values include: 'dedicated', 'lowpriority'.</p>

    <p></p>
  syntax: public VmPriority vmPriority()
  uid: com.microsoft.azure.management.batchai.implementation.ClusterInner.vmPriority()
- fullName: com.microsoft.azure.management.batchai.implementation.ClusterInner.vmSize()
  name: vmSize()
  nameWithType: ClusterInner.vmSize()
  returns:
    description: <p>the vmSize value </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the size of the virtual machines in the cluster. All nodes in a cluster have the same VM size.</p>

    <p></p>
  syntax: public String vmSize()
  uid: com.microsoft.azure.management.batchai.implementation.ClusterInner.vmSize()
- fullName: com.microsoft.azure.management.batchai.implementation.ClusterInner.withNodeSetup(NodeSetup nodeSetup)
  name: withNodeSetup(NodeSetup nodeSetup)
  nameWithType: ClusterInner.withNodeSetup(NodeSetup nodeSetup)
  parameters:
  - description: <p>the nodeSetup value to set </p>
    name: nodeSetup
    type: <xref href="com.microsoft.azure.management.batchai.NodeSetup?alt=com.microsoft.azure.management.batchai.NodeSetup&text=NodeSetup" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the ClusterInner object itself. </p>
    type: <xref href="com.microsoft.azure.management.batchai.implementation.ClusterInner?alt=com.microsoft.azure.management.batchai.implementation.ClusterInner&text=ClusterInner" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set setup (mount file systems, performance counters settings and custom setup task) to be performed on each compute node in the cluster.</p>

    <p></p>
  syntax: public ClusterInner withNodeSetup(NodeSetup nodeSetup)
  uid: com.microsoft.azure.management.batchai.implementation.ClusterInner.withNodeSetup(NodeSetup)
- fullName: com.microsoft.azure.management.batchai.implementation.ClusterInner.withScaleSettings(ScaleSettings scaleSettings)
  name: withScaleSettings(ScaleSettings scaleSettings)
  nameWithType: ClusterInner.withScaleSettings(ScaleSettings scaleSettings)
  parameters:
  - description: <p>the scaleSettings value to set </p>
    name: scaleSettings
    type: <xref href="com.microsoft.azure.management.batchai.ScaleSettings?alt=com.microsoft.azure.management.batchai.ScaleSettings&text=ScaleSettings" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the ClusterInner object itself. </p>
    type: <xref href="com.microsoft.azure.management.batchai.implementation.ClusterInner?alt=com.microsoft.azure.management.batchai.implementation.ClusterInner&text=ClusterInner" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set scale settings of the cluster.</p>

    <p></p>
  syntax: public ClusterInner withScaleSettings(ScaleSettings scaleSettings)
  uid: com.microsoft.azure.management.batchai.implementation.ClusterInner.withScaleSettings(ScaleSettings)
- fullName: com.microsoft.azure.management.batchai.implementation.ClusterInner.withSubnet(ResourceId subnet)
  name: withSubnet(ResourceId subnet)
  nameWithType: ClusterInner.withSubnet(ResourceId subnet)
  parameters:
  - description: <p>the subnet value to set </p>
    name: subnet
    type: <xref href="com.microsoft.azure.management.batchai.ResourceId?alt=com.microsoft.azure.management.batchai.ResourceId&text=ResourceId" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the ClusterInner object itself. </p>
    type: <xref href="com.microsoft.azure.management.batchai.implementation.ClusterInner?alt=com.microsoft.azure.management.batchai.implementation.ClusterInner&text=ClusterInner" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set virtual network subnet resource ID the cluster nodes belong to.</p>

    <p></p>
  syntax: public ClusterInner withSubnet(ResourceId subnet)
  uid: com.microsoft.azure.management.batchai.implementation.ClusterInner.withSubnet(ResourceId)
- fullName: com.microsoft.azure.management.batchai.implementation.ClusterInner.withUserAccountSettings(UserAccountSettings userAccountSettings)
  name: withUserAccountSettings(UserAccountSettings userAccountSettings)
  nameWithType: ClusterInner.withUserAccountSettings(UserAccountSettings userAccountSettings)
  parameters:
  - description: <p>the userAccountSettings value to set </p>
    name: userAccountSettings
    type: <xref href="com.microsoft.azure.management.batchai.UserAccountSettings?alt=com.microsoft.azure.management.batchai.UserAccountSettings&text=UserAccountSettings" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the ClusterInner object itself. </p>
    type: <xref href="com.microsoft.azure.management.batchai.implementation.ClusterInner?alt=com.microsoft.azure.management.batchai.implementation.ClusterInner&text=ClusterInner" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set administrator user account settings which can be used to SSH to compute nodes.</p>

    <p></p>
  syntax: public ClusterInner withUserAccountSettings(UserAccountSettings userAccountSettings)
  uid: com.microsoft.azure.management.batchai.implementation.ClusterInner.withUserAccountSettings(UserAccountSettings)
- fullName: com.microsoft.azure.management.batchai.implementation.ClusterInner.withVirtualMachineConfiguration(VirtualMachineConfiguration virtualMachineConfiguration)
  name: withVirtualMachineConfiguration(VirtualMachineConfiguration virtualMachineConfiguration)
  nameWithType: ClusterInner.withVirtualMachineConfiguration(VirtualMachineConfiguration virtualMachineConfiguration)
  parameters:
  - description: <p>the virtualMachineConfiguration value to set </p>
    name: virtualMachineConfiguration
    type: <xref href="com.microsoft.azure.management.batchai.VirtualMachineConfiguration?alt=com.microsoft.azure.management.batchai.VirtualMachineConfiguration&text=VirtualMachineConfiguration" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the ClusterInner object itself. </p>
    type: <xref href="com.microsoft.azure.management.batchai.implementation.ClusterInner?alt=com.microsoft.azure.management.batchai.implementation.ClusterInner&text=ClusterInner" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set virtual machine configuration (OS image) of the compute nodes. All nodes in a cluster have the same OS image configuration.</p>

    <p></p>
  syntax: public ClusterInner withVirtualMachineConfiguration(VirtualMachineConfiguration virtualMachineConfiguration)
  uid: com.microsoft.azure.management.batchai.implementation.ClusterInner.withVirtualMachineConfiguration(VirtualMachineConfiguration)
- fullName: com.microsoft.azure.management.batchai.implementation.ClusterInner.withVmPriority(VmPriority vmPriority)
  name: withVmPriority(VmPriority vmPriority)
  nameWithType: ClusterInner.withVmPriority(VmPriority vmPriority)
  parameters:
  - description: <p>the vmPriority value to set </p>
    name: vmPriority
    type: <xref href="com.microsoft.azure.management.batchai.VmPriority?alt=com.microsoft.azure.management.batchai.VmPriority&text=VmPriority" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the ClusterInner object itself. </p>
    type: <xref href="com.microsoft.azure.management.batchai.implementation.ClusterInner?alt=com.microsoft.azure.management.batchai.implementation.ClusterInner&text=ClusterInner" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set vM priority of cluster nodes. Possible values include: 'dedicated', 'lowpriority'.</p>

    <p></p>
  syntax: public ClusterInner withVmPriority(VmPriority vmPriority)
  uid: com.microsoft.azure.management.batchai.implementation.ClusterInner.withVmPriority(VmPriority)
- fullName: com.microsoft.azure.management.batchai.implementation.ClusterInner.withVmSize(String vmSize)
  name: withVmSize(String vmSize)
  nameWithType: ClusterInner.withVmSize(String vmSize)
  parameters:
  - description: <p>the vmSize value to set </p>
    name: vmSize
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the ClusterInner object itself. </p>
    type: <xref href="com.microsoft.azure.management.batchai.implementation.ClusterInner?alt=com.microsoft.azure.management.batchai.implementation.ClusterInner&text=ClusterInner" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the size of the virtual machines in the cluster. All nodes in a cluster have the same VM size.</p>

    <p></p>
  syntax: public ClusterInner withVmSize(String vmSize)
  uid: com.microsoft.azure.management.batchai.implementation.ClusterInner.withVmSize(String)
nameWithType: ClusterInner
syntax: public class ClusterInner
type: class
uid: com.microsoft.azure.management.batchai.implementation.ClusterInner
fullName: com.microsoft.azure.management.batchai.implementation.ClusterInner
name: ClusterInner
package: com.microsoft.azure.management.batchai.implementation
summary: <p>Information about a Cluster. </p>
metadata: {}
