### YamlMime:JavaMember
nameWithType: RegistryManager.updateDeviceAsync
type: method
members:
- fullName: com.microsoft.azure.sdk.iot.service.RegistryManager.updateDeviceAsync(Device device)
  name: updateDeviceAsync(Device device)
  nameWithType: RegistryManager.updateDeviceAsync(Device device)
  parameters:
  - description: <p>The device object containing updated data </p>
    name: device
    type: <xref href="com.microsoft.azure.sdk.iot.service.Device?alt=com.microsoft.azure.sdk.iot.service.Device&text=Device" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
    description: <p>This exception is thrown if the IO operation failed </p>
  - type: <xref href="IotHubException?alt=IotHubException&text=IotHubException" data-throw-if-not-resolved="False"/>
    description: <p>This exception is thrown if the response verification failed </p>
  returns:
    description: <p>The future object for the requested operation </p>
    type: CompletableFuture&lt;<xref href="com.microsoft.azure.sdk.iot.service.Device?alt=com.microsoft.azure.sdk.iot.service.Device&text=Device" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Async wrapper for updateDevice() operation</p>

    <p></p>
  syntax: public CompletableFuture<Device> updateDeviceAsync(Device device)
  uid: com.microsoft.azure.sdk.iot.service.RegistryManager.updateDeviceAsync(Device)
- fullName: com.microsoft.azure.sdk.iot.service.RegistryManager.updateDeviceAsync(Device device, Boolean forceUpdate)
  name: updateDeviceAsync(Device device, Boolean forceUpdate)
  nameWithType: RegistryManager.updateDeviceAsync(Device device, Boolean forceUpdate)
  parameters:
  - description: <p>The device object containing updated data </p>
    name: device
    type: <xref href="com.microsoft.azure.sdk.iot.service.Device?alt=com.microsoft.azure.sdk.iot.service.Device&text=Device" data-throw-if-not-resolved="False"/>
  - description: <p>True is the update has to be forced regardless if the device state </p>
    name: forceUpdate
    type: <xref href="Boolean?alt=Boolean&text=Boolean" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
    description: <p>This exception is thrown if the IO operation failed </p>
  - type: <xref href="IotHubException?alt=IotHubException&text=IotHubException" data-throw-if-not-resolved="False"/>
    description: <p>This exception is thrown if the response verification failed </p>
  returns:
    description: <p>The future object for the requested operation </p>
    type: CompletableFuture&lt;<xref href="com.microsoft.azure.sdk.iot.service.Device?alt=com.microsoft.azure.sdk.iot.service.Device&text=Device" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Async wrapper for forced updateDevice() operation</p>

    <p></p>
  syntax: public CompletableFuture<Device> updateDeviceAsync(Device device, Boolean forceUpdate)
  uid: com.microsoft.azure.sdk.iot.service.RegistryManager.updateDeviceAsync(Device,Boolean)
uid: com.microsoft.azure.sdk.iot.service.RegistryManager.updateDeviceAsync*
fullName: com.microsoft.azure.sdk.iot.service.RegistryManager.updateDeviceAsync(Device device)
name: updateDeviceAsync(Device device)
package: com.microsoft.azure.sdk.iot.service
metadata: {}
