### YamlMime:JavaType
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
methods:
- fullName: com.microsoft.azure.management.sql.JobTarget.databaseName()
  name: databaseName()
  nameWithType: JobTarget.databaseName()
  returns:
    description: <p>the databaseName value </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the target database name.</p>

    <p></p>
  syntax: public String databaseName()
  uid: com.microsoft.azure.management.sql.JobTarget.databaseName()
- fullName: com.microsoft.azure.management.sql.JobTarget.elasticPoolName()
  name: elasticPoolName()
  nameWithType: JobTarget.elasticPoolName()
  returns:
    description: <p>the elasticPoolName value </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the target elastic pool name.</p>

    <p></p>
  syntax: public String elasticPoolName()
  uid: com.microsoft.azure.management.sql.JobTarget.elasticPoolName()
- fullName: com.microsoft.azure.management.sql.JobTarget.membershipType()
  name: membershipType()
  nameWithType: JobTarget.membershipType()
  returns:
    description: <p>the membershipType value </p>
    type: <xref href="com.microsoft.azure.management.sql.JobTargetGroupMembershipType?alt=com.microsoft.azure.management.sql.JobTargetGroupMembershipType&text=JobTargetGroupMembershipType" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get whether the target is included or excluded from the group. Possible values include: 'Include', 'Exclude'.</p>

    <p></p>
  syntax: public JobTargetGroupMembershipType membershipType()
  uid: com.microsoft.azure.management.sql.JobTarget.membershipType()
- fullName: com.microsoft.azure.management.sql.JobTarget.refreshCredential()
  name: refreshCredential()
  nameWithType: JobTarget.refreshCredential()
  returns:
    description: <p>the refreshCredential value </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the resource ID of the credential that is used during job execution to connect to the target and determine the list of databases inside the target.</p>

    <p></p>
  syntax: public String refreshCredential()
  uid: com.microsoft.azure.management.sql.JobTarget.refreshCredential()
- fullName: com.microsoft.azure.management.sql.JobTarget.serverName()
  name: serverName()
  nameWithType: JobTarget.serverName()
  returns:
    description: <p>the serverName value </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the target server name.</p>

    <p></p>
  syntax: public String serverName()
  uid: com.microsoft.azure.management.sql.JobTarget.serverName()
- fullName: com.microsoft.azure.management.sql.JobTarget.shardMapName()
  name: shardMapName()
  nameWithType: JobTarget.shardMapName()
  returns:
    description: <p>the shardMapName value </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the target shard map.</p>

    <p></p>
  syntax: public String shardMapName()
  uid: com.microsoft.azure.management.sql.JobTarget.shardMapName()
- fullName: com.microsoft.azure.management.sql.JobTarget.type()
  name: type()
  nameWithType: JobTarget.type()
  returns:
    description: <p>the type value </p>
    type: <xref href="com.microsoft.azure.management.sql.JobTargetType?alt=com.microsoft.azure.management.sql.JobTargetType&text=JobTargetType" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the target type. Possible values include: 'TargetGroup', 'SqlDatabase', 'SqlElasticPool', 'SqlShardMap', 'SqlServer'.</p>

    <p></p>
  syntax: public JobTargetType type()
  uid: com.microsoft.azure.management.sql.JobTarget.type()
- fullName: com.microsoft.azure.management.sql.JobTarget.withDatabaseName(String databaseName)
  name: withDatabaseName(String databaseName)
  nameWithType: JobTarget.withDatabaseName(String databaseName)
  parameters:
  - description: <p>the databaseName value to set </p>
    name: databaseName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the JobTarget object itself. </p>
    type: <xref href="com.microsoft.azure.management.sql.JobTarget?alt=com.microsoft.azure.management.sql.JobTarget&text=JobTarget" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the target database name.</p>

    <p></p>
  syntax: public JobTarget withDatabaseName(String databaseName)
  uid: com.microsoft.azure.management.sql.JobTarget.withDatabaseName(String)
- fullName: com.microsoft.azure.management.sql.JobTarget.withElasticPoolName(String elasticPoolName)
  name: withElasticPoolName(String elasticPoolName)
  nameWithType: JobTarget.withElasticPoolName(String elasticPoolName)
  parameters:
  - description: <p>the elasticPoolName value to set </p>
    name: elasticPoolName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the JobTarget object itself. </p>
    type: <xref href="com.microsoft.azure.management.sql.JobTarget?alt=com.microsoft.azure.management.sql.JobTarget&text=JobTarget" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the target elastic pool name.</p>

    <p></p>
  syntax: public JobTarget withElasticPoolName(String elasticPoolName)
  uid: com.microsoft.azure.management.sql.JobTarget.withElasticPoolName(String)
- fullName: com.microsoft.azure.management.sql.JobTarget.withMembershipType(JobTargetGroupMembershipType membershipType)
  name: withMembershipType(JobTargetGroupMembershipType membershipType)
  nameWithType: JobTarget.withMembershipType(JobTargetGroupMembershipType membershipType)
  parameters:
  - description: <p>the membershipType value to set </p>
    name: membershipType
    type: <xref href="com.microsoft.azure.management.sql.JobTargetGroupMembershipType?alt=com.microsoft.azure.management.sql.JobTargetGroupMembershipType&text=JobTargetGroupMembershipType" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the JobTarget object itself. </p>
    type: <xref href="com.microsoft.azure.management.sql.JobTarget?alt=com.microsoft.azure.management.sql.JobTarget&text=JobTarget" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set whether the target is included or excluded from the group. Possible values include: 'Include', 'Exclude'.</p>

    <p></p>
  syntax: public JobTarget withMembershipType(JobTargetGroupMembershipType membershipType)
  uid: com.microsoft.azure.management.sql.JobTarget.withMembershipType(JobTargetGroupMembershipType)
- fullName: com.microsoft.azure.management.sql.JobTarget.withRefreshCredential(String refreshCredential)
  name: withRefreshCredential(String refreshCredential)
  nameWithType: JobTarget.withRefreshCredential(String refreshCredential)
  parameters:
  - description: <p>the refreshCredential value to set </p>
    name: refreshCredential
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the JobTarget object itself. </p>
    type: <xref href="com.microsoft.azure.management.sql.JobTarget?alt=com.microsoft.azure.management.sql.JobTarget&text=JobTarget" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the resource ID of the credential that is used during job execution to connect to the target and determine the list of databases inside the target.</p>

    <p></p>
  syntax: public JobTarget withRefreshCredential(String refreshCredential)
  uid: com.microsoft.azure.management.sql.JobTarget.withRefreshCredential(String)
- fullName: com.microsoft.azure.management.sql.JobTarget.withServerName(String serverName)
  name: withServerName(String serverName)
  nameWithType: JobTarget.withServerName(String serverName)
  parameters:
  - description: <p>the serverName value to set </p>
    name: serverName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the JobTarget object itself. </p>
    type: <xref href="com.microsoft.azure.management.sql.JobTarget?alt=com.microsoft.azure.management.sql.JobTarget&text=JobTarget" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the target server name.</p>

    <p></p>
  syntax: public JobTarget withServerName(String serverName)
  uid: com.microsoft.azure.management.sql.JobTarget.withServerName(String)
- fullName: com.microsoft.azure.management.sql.JobTarget.withShardMapName(String shardMapName)
  name: withShardMapName(String shardMapName)
  nameWithType: JobTarget.withShardMapName(String shardMapName)
  parameters:
  - description: <p>the shardMapName value to set </p>
    name: shardMapName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the JobTarget object itself. </p>
    type: <xref href="com.microsoft.azure.management.sql.JobTarget?alt=com.microsoft.azure.management.sql.JobTarget&text=JobTarget" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the target shard map.</p>

    <p></p>
  syntax: public JobTarget withShardMapName(String shardMapName)
  uid: com.microsoft.azure.management.sql.JobTarget.withShardMapName(String)
- fullName: com.microsoft.azure.management.sql.JobTarget.withType(JobTargetType type)
  name: withType(JobTargetType type)
  nameWithType: JobTarget.withType(JobTargetType type)
  parameters:
  - description: <p>the type value to set </p>
    name: type
    type: <xref href="com.microsoft.azure.management.sql.JobTargetType?alt=com.microsoft.azure.management.sql.JobTargetType&text=JobTargetType" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the JobTarget object itself. </p>
    type: <xref href="com.microsoft.azure.management.sql.JobTarget?alt=com.microsoft.azure.management.sql.JobTarget&text=JobTarget" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the target type. Possible values include: 'TargetGroup', 'SqlDatabase', 'SqlElasticPool', 'SqlShardMap', 'SqlServer'.</p>

    <p></p>
  syntax: public JobTarget withType(JobTargetType type)
  uid: com.microsoft.azure.management.sql.JobTarget.withType(JobTargetType)
nameWithType: JobTarget
syntax: public class JobTarget
type: class
uid: com.microsoft.azure.management.sql.JobTarget
fullName: com.microsoft.azure.management.sql.JobTarget
name: JobTarget
package: com.microsoft.azure.management.sql
summary: <p>A job target, for example a specific database or a container of databases that is evaluated during job execution. </p>
metadata: {}
