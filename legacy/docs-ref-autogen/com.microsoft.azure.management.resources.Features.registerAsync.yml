### YamlMime:JavaMember
nameWithType: Features.registerAsync
type: method
members:
- fullName: com.microsoft.azure.management.resources.Features.registerAsync(String resourceProviderName, String featureName)
  name: registerAsync(String resourceProviderName, String featureName)
  nameWithType: Features.registerAsync(String resourceProviderName, String featureName)
  parameters:
  - description: <p>the name of the resource provider </p>
    name: resourceProviderName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the name of the feature </p>
    name: featureName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>a representation of the deferred computation of this call returning the registered feature </p>
    type: Observable&lt;<xref href="com.microsoft.azure.management.resources.Feature?alt=com.microsoft.azure.management.resources.Feature&text=Feature" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Registers a feature in a resource provider asynchronously.</p>

    <p></p>
  syntax: public Observable<Feature> registerAsync(String resourceProviderName, String featureName)
  uid: com.microsoft.azure.management.resources.Features.registerAsync(String,String)
- fullName: com.microsoft.azure.management.resources.Features.registerAsync(String resourceProviderName, String featureName, ServiceCallback<Feature> callback)
  name: registerAsync(String resourceProviderName, String featureName, ServiceCallback<Feature> callback)
  nameWithType: Features.registerAsync(String resourceProviderName, String featureName, ServiceCallback<Feature> callback)
  parameters:
  - description: <p>the name of the resource provider </p>
    name: resourceProviderName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the name of the feature </p>
    name: featureName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the callback to call on success or failure </p>
    name: callback
    type: ServiceCallback&lt;<xref href="com.microsoft.azure.management.resources.Feature?alt=com.microsoft.azure.management.resources.Feature&text=Feature" data-throw-if-not-resolved="False"/>&gt;
  returns:
    description: <p>a handle to cancel the request </p>
    type: ServiceFuture&lt;<xref href="com.microsoft.azure.management.resources.Feature?alt=com.microsoft.azure.management.resources.Feature&text=Feature" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Registers a feature in a resource provider asynchronously.</p>

    <p></p>
  syntax: public ServiceFuture<Feature> registerAsync(String resourceProviderName, String featureName, ServiceCallback<Feature> callback)
  uid: com.microsoft.azure.management.resources.Features.registerAsync(String,String,ServiceCallback<Feature>)
uid: com.microsoft.azure.management.resources.Features.registerAsync*
fullName: com.microsoft.azure.management.resources.Features.registerAsync(String resourceProviderName, String featureName)
name: registerAsync(String resourceProviderName, String featureName)
package: com.microsoft.azure.management.resources
metadata: {}
