### YamlMime:JavaMember
nameWithType: MetricAlertsInner.updateAsync
type: method
members:
- fullName: com.microsoft.azure.management.monitor.implementation.MetricAlertsInner.updateAsync(String resourceGroupName, String ruleName, MetricAlertResourcePatch parameters)
  name: updateAsync(String resourceGroupName, String ruleName, MetricAlertResourcePatch parameters)
  nameWithType: MetricAlertsInner.updateAsync(String resourceGroupName, String ruleName, MetricAlertResourcePatch parameters)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the rule. </p>
    name: ruleName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The parameters of the rule to update. </p>
    name: parameters
    type: <xref href="com.microsoft.azure.management.monitor.MetricAlertResourcePatch?alt=com.microsoft.azure.management.monitor.MetricAlertResourcePatch&text=MetricAlertResourcePatch" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the MetricAlertResourceInner object </p>
    type: Observable&lt;<xref href="com.microsoft.azure.management.monitor.implementation.MetricAlertResourceInner?alt=com.microsoft.azure.management.monitor.implementation.MetricAlertResourceInner&text=MetricAlertResourceInner" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Update an metric alert definition.</p>

    <p></p>
  syntax: public Observable<MetricAlertResourceInner> updateAsync(String resourceGroupName, String ruleName, MetricAlertResourcePatch parameters)
  uid: com.microsoft.azure.management.monitor.implementation.MetricAlertsInner.updateAsync(String,String,MetricAlertResourcePatch)
- fullName: com.microsoft.azure.management.monitor.implementation.MetricAlertsInner.updateAsync(String resourceGroupName, String ruleName, MetricAlertResourcePatch parameters, final ServiceCallback<MetricAlertResourceInner> serviceCallback)
  name: updateAsync(String resourceGroupName, String ruleName, MetricAlertResourcePatch parameters, final ServiceCallback<MetricAlertResourceInner> serviceCallback)
  nameWithType: MetricAlertsInner.updateAsync(String resourceGroupName, String ruleName, MetricAlertResourcePatch parameters, final ServiceCallback<MetricAlertResourceInner> serviceCallback)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the rule. </p>
    name: ruleName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The parameters of the rule to update. </p>
    name: parameters
    type: <xref href="com.microsoft.azure.management.monitor.MetricAlertResourcePatch?alt=com.microsoft.azure.management.monitor.MetricAlertResourcePatch&text=MetricAlertResourcePatch" data-throw-if-not-resolved="False"/>
  - description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    name: serviceCallback
    type: final ServiceCallback&lt;<xref href="com.microsoft.azure.management.monitor.implementation.MetricAlertResourceInner?alt=com.microsoft.azure.management.monitor.implementation.MetricAlertResourceInner&text=MetricAlertResourceInner" data-throw-if-not-resolved="False"/>&gt;
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
    type: ServiceFuture&lt;<xref href="com.microsoft.azure.management.monitor.implementation.MetricAlertResourceInner?alt=com.microsoft.azure.management.monitor.implementation.MetricAlertResourceInner&text=MetricAlertResourceInner" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Update an metric alert definition.</p>

    <p></p>
  syntax: public ServiceFuture<MetricAlertResourceInner> updateAsync(String resourceGroupName, String ruleName, MetricAlertResourcePatch parameters, final ServiceCallback<MetricAlertResourceInner> serviceCallback)
  uid: com.microsoft.azure.management.monitor.implementation.MetricAlertsInner.updateAsync(String,String,MetricAlertResourcePatch,final ServiceCallback<MetricAlertResourceInner>)
uid: com.microsoft.azure.management.monitor.implementation.MetricAlertsInner.updateAsync*
fullName: com.microsoft.azure.management.monitor.implementation.MetricAlertsInner.updateAsync(String resourceGroupName, String ruleName, MetricAlertResourcePatch parameters)
name: updateAsync(String resourceGroupName, String ruleName, MetricAlertResourcePatch parameters)
package: com.microsoft.azure.management.monitor.implementation
metadata: {}
