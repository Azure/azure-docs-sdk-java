### YamlMime:JavaType
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
- <xref href="ProxyResource" data-throw-if-not-resolved="False"/>
methods:
- fullName: com.microsoft.azure.management.batchai.implementation.JobInner.caffe2Settings()
  name: caffe2Settings()
  nameWithType: JobInner.caffe2Settings()
  returns:
    description: <p>the caffe2Settings value </p>
    type: <xref href="com.microsoft.azure.management.batchai.Caffe2Settings?alt=com.microsoft.azure.management.batchai.Caffe2Settings&text=Caffe2Settings" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the caffe2Settings value.</p>

    <p></p>
  syntax: public Caffe2Settings caffe2Settings()
  uid: com.microsoft.azure.management.batchai.implementation.JobInner.caffe2Settings()
- fullName: com.microsoft.azure.management.batchai.implementation.JobInner.caffeSettings()
  name: caffeSettings()
  nameWithType: JobInner.caffeSettings()
  returns:
    description: <p>the caffeSettings value </p>
    type: <xref href="com.microsoft.azure.management.batchai.CaffeSettings?alt=com.microsoft.azure.management.batchai.CaffeSettings&text=CaffeSettings" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the caffeSettings value.</p>

    <p></p>
  syntax: public CaffeSettings caffeSettings()
  uid: com.microsoft.azure.management.batchai.implementation.JobInner.caffeSettings()
- fullName: com.microsoft.azure.management.batchai.implementation.JobInner.chainerSettings()
  name: chainerSettings()
  nameWithType: JobInner.chainerSettings()
  returns:
    description: <p>the chainerSettings value </p>
    type: <xref href="com.microsoft.azure.management.batchai.ChainerSettings?alt=com.microsoft.azure.management.batchai.ChainerSettings&text=ChainerSettings" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the chainerSettings value.</p>

    <p></p>
  syntax: public ChainerSettings chainerSettings()
  uid: com.microsoft.azure.management.batchai.implementation.JobInner.chainerSettings()
- fullName: com.microsoft.azure.management.batchai.implementation.JobInner.cluster()
  name: cluster()
  nameWithType: JobInner.cluster()
  returns:
    description: <p>the cluster value </p>
    type: <xref href="com.microsoft.azure.management.batchai.ResourceId?alt=com.microsoft.azure.management.batchai.ResourceId&text=ResourceId" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get resource ID of the cluster associated with the job.</p>

    <p></p>
  syntax: public ResourceId cluster()
  uid: com.microsoft.azure.management.batchai.implementation.JobInner.cluster()
- fullName: com.microsoft.azure.management.batchai.implementation.JobInner.cntkSettings()
  name: cntkSettings()
  nameWithType: JobInner.cntkSettings()
  returns:
    description: <p>the cntkSettings value </p>
    type: <xref href="com.microsoft.azure.management.batchai.CNTKsettings?alt=com.microsoft.azure.management.batchai.CNTKsettings&text=CNTKsettings" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the cntkSettings value.</p>

    <p></p>
  syntax: public CNTKsettings cntkSettings()
  uid: com.microsoft.azure.management.batchai.implementation.JobInner.cntkSettings()
- fullName: com.microsoft.azure.management.batchai.implementation.JobInner.constraints()
  name: constraints()
  nameWithType: JobInner.constraints()
  returns:
    description: <p>the constraints value </p>
    type: <xref href="com.microsoft.azure.management.batchai.JobPropertiesConstraints?alt=com.microsoft.azure.management.batchai.JobPropertiesConstraints&text=JobPropertiesConstraints" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get constraints associated with the Job.</p>

    <p></p>
  syntax: public JobPropertiesConstraints constraints()
  uid: com.microsoft.azure.management.batchai.implementation.JobInner.constraints()
- fullName: com.microsoft.azure.management.batchai.implementation.JobInner.containerSettings()
  name: containerSettings()
  nameWithType: JobInner.containerSettings()
  returns:
    description: <p>the containerSettings value </p>
    type: <xref href="com.microsoft.azure.management.batchai.ContainerSettings?alt=com.microsoft.azure.management.batchai.ContainerSettings&text=ContainerSettings" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get if the container was downloaded as part of cluster setup then the same container image will be used. If not provided, the job will run on the VM.</p>

    <p></p>
  syntax: public ContainerSettings containerSettings()
  uid: com.microsoft.azure.management.batchai.implementation.JobInner.containerSettings()
- fullName: com.microsoft.azure.management.batchai.implementation.JobInner.creationTime()
  name: creationTime()
  nameWithType: JobInner.creationTime()
  returns:
    description: <p>the creationTime value </p>
    type: <xref href="DateTime?alt=DateTime&text=DateTime" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the creation time of the job.</p>

    <p></p>
  syntax: public DateTime creationTime()
  uid: com.microsoft.azure.management.batchai.implementation.JobInner.creationTime()
- fullName: com.microsoft.azure.management.batchai.implementation.JobInner.customMpiSettings()
  name: customMpiSettings()
  nameWithType: JobInner.customMpiSettings()
  returns:
    description: <p>the customMpiSettings value </p>
    type: <xref href="com.microsoft.azure.management.batchai.CustomMpiSettings?alt=com.microsoft.azure.management.batchai.CustomMpiSettings&text=CustomMpiSettings" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the customMpiSettings value.</p>

    <p></p>
  syntax: public CustomMpiSettings customMpiSettings()
  uid: com.microsoft.azure.management.batchai.implementation.JobInner.customMpiSettings()
- fullName: com.microsoft.azure.management.batchai.implementation.JobInner.customToolkitSettings()
  name: customToolkitSettings()
  nameWithType: JobInner.customToolkitSettings()
  returns:
    description: <p>the customToolkitSettings value </p>
    type: <xref href="com.microsoft.azure.management.batchai.CustomToolkitSettings?alt=com.microsoft.azure.management.batchai.CustomToolkitSettings&text=CustomToolkitSettings" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the customToolkitSettings value.</p>

    <p></p>
  syntax: public CustomToolkitSettings customToolkitSettings()
  uid: com.microsoft.azure.management.batchai.implementation.JobInner.customToolkitSettings()
- fullName: com.microsoft.azure.management.batchai.implementation.JobInner.environmentVariables()
  name: environmentVariables()
  nameWithType: JobInner.environmentVariables()
  returns:
    description: <p>the environmentVariables value </p>
    type: List&lt;<xref href="com.microsoft.azure.management.batchai.EnvironmentVariable?alt=com.microsoft.azure.management.batchai.EnvironmentVariable&text=EnvironmentVariable" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Get a collection of user defined environment variables to be setup for the job.</p>

    <p></p>
  syntax: public List<EnvironmentVariable> environmentVariables()
  uid: com.microsoft.azure.management.batchai.implementation.JobInner.environmentVariables()
- fullName: com.microsoft.azure.management.batchai.implementation.JobInner.executionInfo()
  name: executionInfo()
  nameWithType: JobInner.executionInfo()
  returns:
    description: <p>the executionInfo value </p>
    type: <xref href="com.microsoft.azure.management.batchai.JobPropertiesExecutionInfo?alt=com.microsoft.azure.management.batchai.JobPropertiesExecutionInfo&text=JobPropertiesExecutionInfo" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get information about the execution of a job.</p>

    <p></p>
  syntax: public JobPropertiesExecutionInfo executionInfo()
  uid: com.microsoft.azure.management.batchai.implementation.JobInner.executionInfo()
- fullName: com.microsoft.azure.management.batchai.implementation.JobInner.executionState()
  name: executionState()
  nameWithType: JobInner.executionState()
  returns:
    description: <p>the executionState value </p>
    type: <xref href="com.microsoft.azure.management.batchai.ExecutionState?alt=com.microsoft.azure.management.batchai.ExecutionState&text=ExecutionState" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the current state of the job. Possible values are: queued - The job is queued and able to run. A job enters this state when it is created, or when it is awaiting a retry after a failed run. running - The job is running on a compute cluster. This includes job-level preparation such as downloading resource files or set up container specified on the job - it does not necessarily mean that the job command line has started executing. terminating - The job is terminated by the user, the terminate operation is in progress. succeeded - The job has completed running succesfully and exited with exit code 0. failed - The job has finished unsuccessfully (failed with a non-zero exit code) and has exhausted its retry limit. A job is also marked as failed if an error occurred launching the job. Possible values include: 'queued', 'running', 'terminating', 'succeeded', 'failed'.</p>

    <p></p>
  syntax: public ExecutionState executionState()
  uid: com.microsoft.azure.management.batchai.implementation.JobInner.executionState()
- fullName: com.microsoft.azure.management.batchai.implementation.JobInner.executionStateTransitionTime()
  name: executionStateTransitionTime()
  nameWithType: JobInner.executionStateTransitionTime()
  returns:
    description: <p>the executionStateTransitionTime value </p>
    type: <xref href="DateTime?alt=DateTime&text=DateTime" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the time at which the job entered its current execution state.</p>

    <p></p>
  syntax: public DateTime executionStateTransitionTime()
  uid: com.microsoft.azure.management.batchai.implementation.JobInner.executionStateTransitionTime()
- fullName: com.microsoft.azure.management.batchai.implementation.JobInner.horovodSettings()
  name: horovodSettings()
  nameWithType: JobInner.horovodSettings()
  returns:
    description: <p>the horovodSettings value </p>
    type: <xref href="com.microsoft.azure.management.batchai.HorovodSettings?alt=com.microsoft.azure.management.batchai.HorovodSettings&text=HorovodSettings" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the horovodSettings value.</p>

    <p></p>
  syntax: public HorovodSettings horovodSettings()
  uid: com.microsoft.azure.management.batchai.implementation.JobInner.horovodSettings()
- fullName: com.microsoft.azure.management.batchai.implementation.JobInner.inputDirectories()
  name: inputDirectories()
  nameWithType: JobInner.inputDirectories()
  returns:
    description: <p>the inputDirectories value </p>
    type: List&lt;<xref href="com.microsoft.azure.management.batchai.InputDirectory?alt=com.microsoft.azure.management.batchai.InputDirectory&text=InputDirectory" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Get a list of input directories for the job.</p>

    <p></p>
  syntax: public List<InputDirectory> inputDirectories()
  uid: com.microsoft.azure.management.batchai.implementation.JobInner.inputDirectories()
- fullName: com.microsoft.azure.management.batchai.implementation.JobInner.jobOutputDirectoryPathSegment()
  name: jobOutputDirectoryPathSegment()
  nameWithType: JobInner.jobOutputDirectoryPathSegment()
  returns:
    description: <p>the jobOutputDirectoryPathSegment value </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get a segment of job's output directories path created by Batch AI. Batch AI creates job's output directories under an unique path to avoid conflicts between jobs. This value contains a path segment generated by Batch AI to make the path unique and can be used to find the output directory on the node or mounted filesystem.</p>

    <p></p>
  syntax: public String jobOutputDirectoryPathSegment()
  uid: com.microsoft.azure.management.batchai.implementation.JobInner.jobOutputDirectoryPathSegment()
- fullName: com.microsoft.azure.management.batchai.implementation.JobInner.jobPreparation()
  name: jobPreparation()
  nameWithType: JobInner.jobPreparation()
  returns:
    description: <p>the jobPreparation value </p>
    type: <xref href="com.microsoft.azure.management.batchai.JobPreparation?alt=com.microsoft.azure.management.batchai.JobPreparation&text=JobPreparation" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the specified actions will run on all the nodes that are part of the job.</p>

    <p></p>
  syntax: public JobPreparation jobPreparation()
  uid: com.microsoft.azure.management.batchai.implementation.JobInner.jobPreparation()
- fullName: com.microsoft.azure.management.batchai.implementation.JobInner.mountVolumes()
  name: mountVolumes()
  nameWithType: JobInner.mountVolumes()
  returns:
    description: <p>the mountVolumes value </p>
    type: <xref href="com.microsoft.azure.management.batchai.MountVolumes?alt=com.microsoft.azure.management.batchai.MountVolumes&text=MountVolumes" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get collection of mount volumes available to the job during execution. These volumes are mounted before the job execution and unmouted after the job completion. The volumes are mounted at location specified by $AZ_BATCHAI_JOB_MOUNT_ROOT environment variable.</p>

    <p></p>
  syntax: public MountVolumes mountVolumes()
  uid: com.microsoft.azure.management.batchai.implementation.JobInner.mountVolumes()
- fullName: com.microsoft.azure.management.batchai.implementation.JobInner.nodeCount()
  name: nodeCount()
  nameWithType: JobInner.nodeCount()
  returns:
    description: <p>the nodeCount value </p>
    type: <xref href="Integer?alt=Integer&text=Integer" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the job will be gang scheduled on that many compute nodes.</p>

    <p></p>
  syntax: public Integer nodeCount()
  uid: com.microsoft.azure.management.batchai.implementation.JobInner.nodeCount()
- fullName: com.microsoft.azure.management.batchai.implementation.JobInner.outputDirectories()
  name: outputDirectories()
  nameWithType: JobInner.outputDirectories()
  returns:
    description: <p>the outputDirectories value </p>
    type: List&lt;<xref href="com.microsoft.azure.management.batchai.OutputDirectory?alt=com.microsoft.azure.management.batchai.OutputDirectory&text=OutputDirectory" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Get a list of output directories for the job.</p>

    <p></p>
  syntax: public List<OutputDirectory> outputDirectories()
  uid: com.microsoft.azure.management.batchai.implementation.JobInner.outputDirectories()
- fullName: com.microsoft.azure.management.batchai.implementation.JobInner.provisioningState()
  name: provisioningState()
  nameWithType: JobInner.provisioningState()
  returns:
    description: <p>the provisioningState value </p>
    type: <xref href="com.microsoft.azure.management.batchai.ProvisioningState?alt=com.microsoft.azure.management.batchai.ProvisioningState&text=ProvisioningState" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the provisioned state of the Batch AI job. Possible values include: 'creating', 'succeeded', 'failed', 'deleting'.</p>

    <p></p>
  syntax: public ProvisioningState provisioningState()
  uid: com.microsoft.azure.management.batchai.implementation.JobInner.provisioningState()
- fullName: com.microsoft.azure.management.batchai.implementation.JobInner.provisioningStateTransitionTime()
  name: provisioningStateTransitionTime()
  nameWithType: JobInner.provisioningStateTransitionTime()
  returns:
    description: <p>the provisioningStateTransitionTime value </p>
    type: <xref href="DateTime?alt=DateTime&text=DateTime" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the time at which the job entered its current provisioning state.</p>

    <p></p>
  syntax: public DateTime provisioningStateTransitionTime()
  uid: com.microsoft.azure.management.batchai.implementation.JobInner.provisioningStateTransitionTime()
- fullName: com.microsoft.azure.management.batchai.implementation.JobInner.pyTorchSettings()
  name: pyTorchSettings()
  nameWithType: JobInner.pyTorchSettings()
  returns:
    description: <p>the pyTorchSettings value </p>
    type: <xref href="com.microsoft.azure.management.batchai.PyTorchSettings?alt=com.microsoft.azure.management.batchai.PyTorchSettings&text=PyTorchSettings" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the pyTorchSettings value.</p>

    <p></p>
  syntax: public PyTorchSettings pyTorchSettings()
  uid: com.microsoft.azure.management.batchai.implementation.JobInner.pyTorchSettings()
- fullName: com.microsoft.azure.management.batchai.implementation.JobInner.schedulingPriority()
  name: schedulingPriority()
  nameWithType: JobInner.schedulingPriority()
  returns:
    description: <p>the schedulingPriority value </p>
    type: <xref href="com.microsoft.azure.management.batchai.JobPriority?alt=com.microsoft.azure.management.batchai.JobPriority&text=JobPriority" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get scheduling priority associated with the job. Possible values include: 'low', 'normal', 'high'.</p>

    <p></p>
  syntax: public JobPriority schedulingPriority()
  uid: com.microsoft.azure.management.batchai.implementation.JobInner.schedulingPriority()
- fullName: com.microsoft.azure.management.batchai.implementation.JobInner.secrets()
  name: secrets()
  nameWithType: JobInner.secrets()
  returns:
    description: <p>the secrets value </p>
    type: List&lt;<xref href="com.microsoft.azure.management.batchai.EnvironmentVariableWithSecretValue?alt=com.microsoft.azure.management.batchai.EnvironmentVariableWithSecretValue&text=EnvironmentVariableWithSecretValue" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Get a collection of user defined environment variables with secret values to be setup for the job. Server will never report values of these variables back.</p>

    <p></p>
  syntax: public List<EnvironmentVariableWithSecretValue> secrets()
  uid: com.microsoft.azure.management.batchai.implementation.JobInner.secrets()
- fullName: com.microsoft.azure.management.batchai.implementation.JobInner.stdOutErrPathPrefix()
  name: stdOutErrPathPrefix()
  nameWithType: JobInner.stdOutErrPathPrefix()
  returns:
    description: <p>the stdOutErrPathPrefix value </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the path where the Batch AI service stores stdout, stderror and execution log of the job.</p>

    <p></p>
  syntax: public String stdOutErrPathPrefix()
  uid: com.microsoft.azure.management.batchai.implementation.JobInner.stdOutErrPathPrefix()
- fullName: com.microsoft.azure.management.batchai.implementation.JobInner.tensorFlowSettings()
  name: tensorFlowSettings()
  nameWithType: JobInner.tensorFlowSettings()
  returns:
    description: <p>the tensorFlowSettings value </p>
    type: <xref href="com.microsoft.azure.management.batchai.TensorFlowSettings?alt=com.microsoft.azure.management.batchai.TensorFlowSettings&text=TensorFlowSettings" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the tensorFlowSettings value.</p>

    <p></p>
  syntax: public TensorFlowSettings tensorFlowSettings()
  uid: com.microsoft.azure.management.batchai.implementation.JobInner.tensorFlowSettings()
- fullName: com.microsoft.azure.management.batchai.implementation.JobInner.toolType()
  name: toolType()
  nameWithType: JobInner.toolType()
  returns:
    description: <p>the toolType value </p>
    type: <xref href="com.microsoft.azure.management.batchai.ToolType?alt=com.microsoft.azure.management.batchai.ToolType&text=ToolType" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get possible values are: cntk, tensorflow, caffe, caffe2, chainer, pytorch, custom, mpi, horovod. Possible values include: 'cntk', 'tensorflow', 'caffe', 'caffe2', 'chainer', 'horovod', 'mpi', 'custom'.</p>

    <p></p>
  syntax: public ToolType toolType()
  uid: com.microsoft.azure.management.batchai.implementation.JobInner.toolType()
- fullName: com.microsoft.azure.management.batchai.implementation.JobInner.withCaffe2Settings(Caffe2Settings caffe2Settings)
  name: withCaffe2Settings(Caffe2Settings caffe2Settings)
  nameWithType: JobInner.withCaffe2Settings(Caffe2Settings caffe2Settings)
  parameters:
  - description: <p>the caffe2Settings value to set </p>
    name: caffe2Settings
    type: <xref href="com.microsoft.azure.management.batchai.Caffe2Settings?alt=com.microsoft.azure.management.batchai.Caffe2Settings&text=Caffe2Settings" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the JobInner object itself. </p>
    type: <xref href="com.microsoft.azure.management.batchai.implementation.JobInner?alt=com.microsoft.azure.management.batchai.implementation.JobInner&text=JobInner" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the caffe2Settings value.</p>

    <p></p>
  syntax: public JobInner withCaffe2Settings(Caffe2Settings caffe2Settings)
  uid: com.microsoft.azure.management.batchai.implementation.JobInner.withCaffe2Settings(Caffe2Settings)
- fullName: com.microsoft.azure.management.batchai.implementation.JobInner.withCaffeSettings(CaffeSettings caffeSettings)
  name: withCaffeSettings(CaffeSettings caffeSettings)
  nameWithType: JobInner.withCaffeSettings(CaffeSettings caffeSettings)
  parameters:
  - description: <p>the caffeSettings value to set </p>
    name: caffeSettings
    type: <xref href="com.microsoft.azure.management.batchai.CaffeSettings?alt=com.microsoft.azure.management.batchai.CaffeSettings&text=CaffeSettings" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the JobInner object itself. </p>
    type: <xref href="com.microsoft.azure.management.batchai.implementation.JobInner?alt=com.microsoft.azure.management.batchai.implementation.JobInner&text=JobInner" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the caffeSettings value.</p>

    <p></p>
  syntax: public JobInner withCaffeSettings(CaffeSettings caffeSettings)
  uid: com.microsoft.azure.management.batchai.implementation.JobInner.withCaffeSettings(CaffeSettings)
- fullName: com.microsoft.azure.management.batchai.implementation.JobInner.withChainerSettings(ChainerSettings chainerSettings)
  name: withChainerSettings(ChainerSettings chainerSettings)
  nameWithType: JobInner.withChainerSettings(ChainerSettings chainerSettings)
  parameters:
  - description: <p>the chainerSettings value to set </p>
    name: chainerSettings
    type: <xref href="com.microsoft.azure.management.batchai.ChainerSettings?alt=com.microsoft.azure.management.batchai.ChainerSettings&text=ChainerSettings" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the JobInner object itself. </p>
    type: <xref href="com.microsoft.azure.management.batchai.implementation.JobInner?alt=com.microsoft.azure.management.batchai.implementation.JobInner&text=JobInner" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the chainerSettings value.</p>

    <p></p>
  syntax: public JobInner withChainerSettings(ChainerSettings chainerSettings)
  uid: com.microsoft.azure.management.batchai.implementation.JobInner.withChainerSettings(ChainerSettings)
- fullName: com.microsoft.azure.management.batchai.implementation.JobInner.withCluster(ResourceId cluster)
  name: withCluster(ResourceId cluster)
  nameWithType: JobInner.withCluster(ResourceId cluster)
  parameters:
  - description: <p>the cluster value to set </p>
    name: cluster
    type: <xref href="com.microsoft.azure.management.batchai.ResourceId?alt=com.microsoft.azure.management.batchai.ResourceId&text=ResourceId" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the JobInner object itself. </p>
    type: <xref href="com.microsoft.azure.management.batchai.implementation.JobInner?alt=com.microsoft.azure.management.batchai.implementation.JobInner&text=JobInner" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set resource ID of the cluster associated with the job.</p>

    <p></p>
  syntax: public JobInner withCluster(ResourceId cluster)
  uid: com.microsoft.azure.management.batchai.implementation.JobInner.withCluster(ResourceId)
- fullName: com.microsoft.azure.management.batchai.implementation.JobInner.withCntkSettings(CNTKsettings cntkSettings)
  name: withCntkSettings(CNTKsettings cntkSettings)
  nameWithType: JobInner.withCntkSettings(CNTKsettings cntkSettings)
  parameters:
  - description: <p>the cntkSettings value to set </p>
    name: cntkSettings
    type: <xref href="com.microsoft.azure.management.batchai.CNTKsettings?alt=com.microsoft.azure.management.batchai.CNTKsettings&text=CNTKsettings" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the JobInner object itself. </p>
    type: <xref href="com.microsoft.azure.management.batchai.implementation.JobInner?alt=com.microsoft.azure.management.batchai.implementation.JobInner&text=JobInner" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the cntkSettings value.</p>

    <p></p>
  syntax: public JobInner withCntkSettings(CNTKsettings cntkSettings)
  uid: com.microsoft.azure.management.batchai.implementation.JobInner.withCntkSettings(CNTKsettings)
- fullName: com.microsoft.azure.management.batchai.implementation.JobInner.withConstraints(JobPropertiesConstraints constraints)
  name: withConstraints(JobPropertiesConstraints constraints)
  nameWithType: JobInner.withConstraints(JobPropertiesConstraints constraints)
  parameters:
  - description: <p>the constraints value to set </p>
    name: constraints
    type: <xref href="com.microsoft.azure.management.batchai.JobPropertiesConstraints?alt=com.microsoft.azure.management.batchai.JobPropertiesConstraints&text=JobPropertiesConstraints" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the JobInner object itself. </p>
    type: <xref href="com.microsoft.azure.management.batchai.implementation.JobInner?alt=com.microsoft.azure.management.batchai.implementation.JobInner&text=JobInner" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set constraints associated with the Job.</p>

    <p></p>
  syntax: public JobInner withConstraints(JobPropertiesConstraints constraints)
  uid: com.microsoft.azure.management.batchai.implementation.JobInner.withConstraints(JobPropertiesConstraints)
- fullName: com.microsoft.azure.management.batchai.implementation.JobInner.withContainerSettings(ContainerSettings containerSettings)
  name: withContainerSettings(ContainerSettings containerSettings)
  nameWithType: JobInner.withContainerSettings(ContainerSettings containerSettings)
  parameters:
  - description: <p>the containerSettings value to set </p>
    name: containerSettings
    type: <xref href="com.microsoft.azure.management.batchai.ContainerSettings?alt=com.microsoft.azure.management.batchai.ContainerSettings&text=ContainerSettings" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the JobInner object itself. </p>
    type: <xref href="com.microsoft.azure.management.batchai.implementation.JobInner?alt=com.microsoft.azure.management.batchai.implementation.JobInner&text=JobInner" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set if the container was downloaded as part of cluster setup then the same container image will be used. If not provided, the job will run on the VM.</p>

    <p></p>
  syntax: public JobInner withContainerSettings(ContainerSettings containerSettings)
  uid: com.microsoft.azure.management.batchai.implementation.JobInner.withContainerSettings(ContainerSettings)
- fullName: com.microsoft.azure.management.batchai.implementation.JobInner.withCustomMpiSettings(CustomMpiSettings customMpiSettings)
  name: withCustomMpiSettings(CustomMpiSettings customMpiSettings)
  nameWithType: JobInner.withCustomMpiSettings(CustomMpiSettings customMpiSettings)
  parameters:
  - description: <p>the customMpiSettings value to set </p>
    name: customMpiSettings
    type: <xref href="com.microsoft.azure.management.batchai.CustomMpiSettings?alt=com.microsoft.azure.management.batchai.CustomMpiSettings&text=CustomMpiSettings" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the JobInner object itself. </p>
    type: <xref href="com.microsoft.azure.management.batchai.implementation.JobInner?alt=com.microsoft.azure.management.batchai.implementation.JobInner&text=JobInner" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the customMpiSettings value.</p>

    <p></p>
  syntax: public JobInner withCustomMpiSettings(CustomMpiSettings customMpiSettings)
  uid: com.microsoft.azure.management.batchai.implementation.JobInner.withCustomMpiSettings(CustomMpiSettings)
- fullName: com.microsoft.azure.management.batchai.implementation.JobInner.withCustomToolkitSettings(CustomToolkitSettings customToolkitSettings)
  name: withCustomToolkitSettings(CustomToolkitSettings customToolkitSettings)
  nameWithType: JobInner.withCustomToolkitSettings(CustomToolkitSettings customToolkitSettings)
  parameters:
  - description: <p>the customToolkitSettings value to set </p>
    name: customToolkitSettings
    type: <xref href="com.microsoft.azure.management.batchai.CustomToolkitSettings?alt=com.microsoft.azure.management.batchai.CustomToolkitSettings&text=CustomToolkitSettings" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the JobInner object itself. </p>
    type: <xref href="com.microsoft.azure.management.batchai.implementation.JobInner?alt=com.microsoft.azure.management.batchai.implementation.JobInner&text=JobInner" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the customToolkitSettings value.</p>

    <p></p>
  syntax: public JobInner withCustomToolkitSettings(CustomToolkitSettings customToolkitSettings)
  uid: com.microsoft.azure.management.batchai.implementation.JobInner.withCustomToolkitSettings(CustomToolkitSettings)
- fullName: com.microsoft.azure.management.batchai.implementation.JobInner.withEnvironmentVariables(List<EnvironmentVariable> environmentVariables)
  name: withEnvironmentVariables(List<EnvironmentVariable> environmentVariables)
  nameWithType: JobInner.withEnvironmentVariables(List<EnvironmentVariable> environmentVariables)
  parameters:
  - description: <p>the environmentVariables value to set </p>
    name: environmentVariables
    type: List&lt;<xref href="com.microsoft.azure.management.batchai.EnvironmentVariable?alt=com.microsoft.azure.management.batchai.EnvironmentVariable&text=EnvironmentVariable" data-throw-if-not-resolved="False"/>&gt;
  returns:
    description: <p>the JobInner object itself. </p>
    type: <xref href="com.microsoft.azure.management.batchai.implementation.JobInner?alt=com.microsoft.azure.management.batchai.implementation.JobInner&text=JobInner" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set a collection of user defined environment variables to be setup for the job.</p>

    <p></p>
  syntax: public JobInner withEnvironmentVariables(List<EnvironmentVariable> environmentVariables)
  uid: com.microsoft.azure.management.batchai.implementation.JobInner.withEnvironmentVariables(List<EnvironmentVariable>)
- fullName: com.microsoft.azure.management.batchai.implementation.JobInner.withExecutionInfo(JobPropertiesExecutionInfo executionInfo)
  name: withExecutionInfo(JobPropertiesExecutionInfo executionInfo)
  nameWithType: JobInner.withExecutionInfo(JobPropertiesExecutionInfo executionInfo)
  parameters:
  - description: <p>the executionInfo value to set </p>
    name: executionInfo
    type: <xref href="com.microsoft.azure.management.batchai.JobPropertiesExecutionInfo?alt=com.microsoft.azure.management.batchai.JobPropertiesExecutionInfo&text=JobPropertiesExecutionInfo" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the JobInner object itself. </p>
    type: <xref href="com.microsoft.azure.management.batchai.implementation.JobInner?alt=com.microsoft.azure.management.batchai.implementation.JobInner&text=JobInner" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set information about the execution of a job.</p>

    <p></p>
  syntax: public JobInner withExecutionInfo(JobPropertiesExecutionInfo executionInfo)
  uid: com.microsoft.azure.management.batchai.implementation.JobInner.withExecutionInfo(JobPropertiesExecutionInfo)
- fullName: com.microsoft.azure.management.batchai.implementation.JobInner.withHorovodSettings(HorovodSettings horovodSettings)
  name: withHorovodSettings(HorovodSettings horovodSettings)
  nameWithType: JobInner.withHorovodSettings(HorovodSettings horovodSettings)
  parameters:
  - description: <p>the horovodSettings value to set </p>
    name: horovodSettings
    type: <xref href="com.microsoft.azure.management.batchai.HorovodSettings?alt=com.microsoft.azure.management.batchai.HorovodSettings&text=HorovodSettings" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the JobInner object itself. </p>
    type: <xref href="com.microsoft.azure.management.batchai.implementation.JobInner?alt=com.microsoft.azure.management.batchai.implementation.JobInner&text=JobInner" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the horovodSettings value.</p>

    <p></p>
  syntax: public JobInner withHorovodSettings(HorovodSettings horovodSettings)
  uid: com.microsoft.azure.management.batchai.implementation.JobInner.withHorovodSettings(HorovodSettings)
- fullName: com.microsoft.azure.management.batchai.implementation.JobInner.withInputDirectories(List<InputDirectory> inputDirectories)
  name: withInputDirectories(List<InputDirectory> inputDirectories)
  nameWithType: JobInner.withInputDirectories(List<InputDirectory> inputDirectories)
  parameters:
  - description: <p>the inputDirectories value to set </p>
    name: inputDirectories
    type: List&lt;<xref href="com.microsoft.azure.management.batchai.InputDirectory?alt=com.microsoft.azure.management.batchai.InputDirectory&text=InputDirectory" data-throw-if-not-resolved="False"/>&gt;
  returns:
    description: <p>the JobInner object itself. </p>
    type: <xref href="com.microsoft.azure.management.batchai.implementation.JobInner?alt=com.microsoft.azure.management.batchai.implementation.JobInner&text=JobInner" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set a list of input directories for the job.</p>

    <p></p>
  syntax: public JobInner withInputDirectories(List<InputDirectory> inputDirectories)
  uid: com.microsoft.azure.management.batchai.implementation.JobInner.withInputDirectories(List<InputDirectory>)
- fullName: com.microsoft.azure.management.batchai.implementation.JobInner.withJobPreparation(JobPreparation jobPreparation)
  name: withJobPreparation(JobPreparation jobPreparation)
  nameWithType: JobInner.withJobPreparation(JobPreparation jobPreparation)
  parameters:
  - description: <p>the jobPreparation value to set </p>
    name: jobPreparation
    type: <xref href="com.microsoft.azure.management.batchai.JobPreparation?alt=com.microsoft.azure.management.batchai.JobPreparation&text=JobPreparation" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the JobInner object itself. </p>
    type: <xref href="com.microsoft.azure.management.batchai.implementation.JobInner?alt=com.microsoft.azure.management.batchai.implementation.JobInner&text=JobInner" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the specified actions will run on all the nodes that are part of the job.</p>

    <p></p>
  syntax: public JobInner withJobPreparation(JobPreparation jobPreparation)
  uid: com.microsoft.azure.management.batchai.implementation.JobInner.withJobPreparation(JobPreparation)
- fullName: com.microsoft.azure.management.batchai.implementation.JobInner.withMountVolumes(MountVolumes mountVolumes)
  name: withMountVolumes(MountVolumes mountVolumes)
  nameWithType: JobInner.withMountVolumes(MountVolumes mountVolumes)
  parameters:
  - description: <p>the mountVolumes value to set </p>
    name: mountVolumes
    type: <xref href="com.microsoft.azure.management.batchai.MountVolumes?alt=com.microsoft.azure.management.batchai.MountVolumes&text=MountVolumes" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the JobInner object itself. </p>
    type: <xref href="com.microsoft.azure.management.batchai.implementation.JobInner?alt=com.microsoft.azure.management.batchai.implementation.JobInner&text=JobInner" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set collection of mount volumes available to the job during execution. These volumes are mounted before the job execution and unmouted after the job completion. The volumes are mounted at location specified by $AZ_BATCHAI_JOB_MOUNT_ROOT environment variable.</p>

    <p></p>
  syntax: public JobInner withMountVolumes(MountVolumes mountVolumes)
  uid: com.microsoft.azure.management.batchai.implementation.JobInner.withMountVolumes(MountVolumes)
- fullName: com.microsoft.azure.management.batchai.implementation.JobInner.withNodeCount(Integer nodeCount)
  name: withNodeCount(Integer nodeCount)
  nameWithType: JobInner.withNodeCount(Integer nodeCount)
  parameters:
  - description: <p>the nodeCount value to set </p>
    name: nodeCount
    type: <xref href="Integer?alt=Integer&text=Integer" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the JobInner object itself. </p>
    type: <xref href="com.microsoft.azure.management.batchai.implementation.JobInner?alt=com.microsoft.azure.management.batchai.implementation.JobInner&text=JobInner" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the job will be gang scheduled on that many compute nodes.</p>

    <p></p>
  syntax: public JobInner withNodeCount(Integer nodeCount)
  uid: com.microsoft.azure.management.batchai.implementation.JobInner.withNodeCount(Integer)
- fullName: com.microsoft.azure.management.batchai.implementation.JobInner.withOutputDirectories(List<OutputDirectory> outputDirectories)
  name: withOutputDirectories(List<OutputDirectory> outputDirectories)
  nameWithType: JobInner.withOutputDirectories(List<OutputDirectory> outputDirectories)
  parameters:
  - description: <p>the outputDirectories value to set </p>
    name: outputDirectories
    type: List&lt;<xref href="com.microsoft.azure.management.batchai.OutputDirectory?alt=com.microsoft.azure.management.batchai.OutputDirectory&text=OutputDirectory" data-throw-if-not-resolved="False"/>&gt;
  returns:
    description: <p>the JobInner object itself. </p>
    type: <xref href="com.microsoft.azure.management.batchai.implementation.JobInner?alt=com.microsoft.azure.management.batchai.implementation.JobInner&text=JobInner" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set a list of output directories for the job.</p>

    <p></p>
  syntax: public JobInner withOutputDirectories(List<OutputDirectory> outputDirectories)
  uid: com.microsoft.azure.management.batchai.implementation.JobInner.withOutputDirectories(List<OutputDirectory>)
- fullName: com.microsoft.azure.management.batchai.implementation.JobInner.withPyTorchSettings(PyTorchSettings pyTorchSettings)
  name: withPyTorchSettings(PyTorchSettings pyTorchSettings)
  nameWithType: JobInner.withPyTorchSettings(PyTorchSettings pyTorchSettings)
  parameters:
  - description: <p>the pyTorchSettings value to set </p>
    name: pyTorchSettings
    type: <xref href="com.microsoft.azure.management.batchai.PyTorchSettings?alt=com.microsoft.azure.management.batchai.PyTorchSettings&text=PyTorchSettings" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the JobInner object itself. </p>
    type: <xref href="com.microsoft.azure.management.batchai.implementation.JobInner?alt=com.microsoft.azure.management.batchai.implementation.JobInner&text=JobInner" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the pyTorchSettings value.</p>

    <p></p>
  syntax: public JobInner withPyTorchSettings(PyTorchSettings pyTorchSettings)
  uid: com.microsoft.azure.management.batchai.implementation.JobInner.withPyTorchSettings(PyTorchSettings)
- fullName: com.microsoft.azure.management.batchai.implementation.JobInner.withSchedulingPriority(JobPriority schedulingPriority)
  name: withSchedulingPriority(JobPriority schedulingPriority)
  nameWithType: JobInner.withSchedulingPriority(JobPriority schedulingPriority)
  parameters:
  - description: <p>the schedulingPriority value to set </p>
    name: schedulingPriority
    type: <xref href="com.microsoft.azure.management.batchai.JobPriority?alt=com.microsoft.azure.management.batchai.JobPriority&text=JobPriority" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the JobInner object itself. </p>
    type: <xref href="com.microsoft.azure.management.batchai.implementation.JobInner?alt=com.microsoft.azure.management.batchai.implementation.JobInner&text=JobInner" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set scheduling priority associated with the job. Possible values include: 'low', 'normal', 'high'.</p>

    <p></p>
  syntax: public JobInner withSchedulingPriority(JobPriority schedulingPriority)
  uid: com.microsoft.azure.management.batchai.implementation.JobInner.withSchedulingPriority(JobPriority)
- fullName: com.microsoft.azure.management.batchai.implementation.JobInner.withSecrets(List<EnvironmentVariableWithSecretValue> secrets)
  name: withSecrets(List<EnvironmentVariableWithSecretValue> secrets)
  nameWithType: JobInner.withSecrets(List<EnvironmentVariableWithSecretValue> secrets)
  parameters:
  - description: <p>the secrets value to set </p>
    name: secrets
    type: List&lt;<xref href="com.microsoft.azure.management.batchai.EnvironmentVariableWithSecretValue?alt=com.microsoft.azure.management.batchai.EnvironmentVariableWithSecretValue&text=EnvironmentVariableWithSecretValue" data-throw-if-not-resolved="False"/>&gt;
  returns:
    description: <p>the JobInner object itself. </p>
    type: <xref href="com.microsoft.azure.management.batchai.implementation.JobInner?alt=com.microsoft.azure.management.batchai.implementation.JobInner&text=JobInner" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set a collection of user defined environment variables with secret values to be setup for the job. Server will never report values of these variables back.</p>

    <p></p>
  syntax: public JobInner withSecrets(List<EnvironmentVariableWithSecretValue> secrets)
  uid: com.microsoft.azure.management.batchai.implementation.JobInner.withSecrets(List<EnvironmentVariableWithSecretValue>)
- fullName: com.microsoft.azure.management.batchai.implementation.JobInner.withStdOutErrPathPrefix(String stdOutErrPathPrefix)
  name: withStdOutErrPathPrefix(String stdOutErrPathPrefix)
  nameWithType: JobInner.withStdOutErrPathPrefix(String stdOutErrPathPrefix)
  parameters:
  - description: <p>the stdOutErrPathPrefix value to set </p>
    name: stdOutErrPathPrefix
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the JobInner object itself. </p>
    type: <xref href="com.microsoft.azure.management.batchai.implementation.JobInner?alt=com.microsoft.azure.management.batchai.implementation.JobInner&text=JobInner" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the path where the Batch AI service stores stdout, stderror and execution log of the job.</p>

    <p></p>
  syntax: public JobInner withStdOutErrPathPrefix(String stdOutErrPathPrefix)
  uid: com.microsoft.azure.management.batchai.implementation.JobInner.withStdOutErrPathPrefix(String)
- fullName: com.microsoft.azure.management.batchai.implementation.JobInner.withTensorFlowSettings(TensorFlowSettings tensorFlowSettings)
  name: withTensorFlowSettings(TensorFlowSettings tensorFlowSettings)
  nameWithType: JobInner.withTensorFlowSettings(TensorFlowSettings tensorFlowSettings)
  parameters:
  - description: <p>the tensorFlowSettings value to set </p>
    name: tensorFlowSettings
    type: <xref href="com.microsoft.azure.management.batchai.TensorFlowSettings?alt=com.microsoft.azure.management.batchai.TensorFlowSettings&text=TensorFlowSettings" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the JobInner object itself. </p>
    type: <xref href="com.microsoft.azure.management.batchai.implementation.JobInner?alt=com.microsoft.azure.management.batchai.implementation.JobInner&text=JobInner" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the tensorFlowSettings value.</p>

    <p></p>
  syntax: public JobInner withTensorFlowSettings(TensorFlowSettings tensorFlowSettings)
  uid: com.microsoft.azure.management.batchai.implementation.JobInner.withTensorFlowSettings(TensorFlowSettings)
- fullName: com.microsoft.azure.management.batchai.implementation.JobInner.withToolType(ToolType toolType)
  name: withToolType(ToolType toolType)
  nameWithType: JobInner.withToolType(ToolType toolType)
  parameters:
  - description: <p>the toolType value to set </p>
    name: toolType
    type: <xref href="com.microsoft.azure.management.batchai.ToolType?alt=com.microsoft.azure.management.batchai.ToolType&text=ToolType" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the JobInner object itself. </p>
    type: <xref href="com.microsoft.azure.management.batchai.implementation.JobInner?alt=com.microsoft.azure.management.batchai.implementation.JobInner&text=JobInner" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set possible values are: cntk, tensorflow, caffe, caffe2, chainer, pytorch, custom, mpi, horovod. Possible values include: 'cntk', 'tensorflow', 'caffe', 'caffe2', 'chainer', 'horovod', 'mpi', 'custom'.</p>

    <p></p>
  syntax: public JobInner withToolType(ToolType toolType)
  uid: com.microsoft.azure.management.batchai.implementation.JobInner.withToolType(ToolType)
nameWithType: JobInner
syntax: public class JobInner
type: class
uid: com.microsoft.azure.management.batchai.implementation.JobInner
fullName: com.microsoft.azure.management.batchai.implementation.JobInner
name: JobInner
package: com.microsoft.azure.management.batchai.implementation
summary: <p>Information about a Job. </p>
metadata: {}
