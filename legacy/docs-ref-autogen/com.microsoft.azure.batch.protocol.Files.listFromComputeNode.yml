### YamlMime:JavaMember
nameWithType: Files.listFromComputeNode
type: method
members:
- fullName: com.microsoft.azure.batch.protocol.Files.listFromComputeNode(final String poolId, final String nodeId)
  name: listFromComputeNode(final String poolId, final String nodeId)
  nameWithType: Files.listFromComputeNode(final String poolId, final String nodeId)
  parameters:
  - description: <p>The ID of the pool that contains the compute node. </p>
    name: poolId
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>The ID of the compute node whose files you want to list. </p>
    name: nodeId
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="BatchErrorException?alt=BatchErrorException&text=BatchErrorException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  returns:
    description: <p>the PagedList&lt;NodeFile&gt; object if successful. </p>
    type: PagedList&lt;<xref href="com.microsoft.azure.batch.protocol.models.NodeFile?alt=com.microsoft.azure.batch.protocol.models.NodeFile&text=NodeFile" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Lists all of the files in task directories on the specified compute node.</p>

    <p></p>
  syntax: public PagedList<NodeFile> listFromComputeNode(final String poolId, final String nodeId)
  uid: com.microsoft.azure.batch.protocol.Files.listFromComputeNode(final String,final String)
- fullName: com.microsoft.azure.batch.protocol.Files.listFromComputeNode(final String poolId, final String nodeId, final Boolean recursive, final FileListFromComputeNodeOptions fileListFromComputeNodeOptions)
  name: listFromComputeNode(final String poolId, final String nodeId, final Boolean recursive, final FileListFromComputeNodeOptions fileListFromComputeNodeOptions)
  nameWithType: Files.listFromComputeNode(final String poolId, final String nodeId, final Boolean recursive, final FileListFromComputeNodeOptions fileListFromComputeNodeOptions)
  parameters:
  - description: <p>The ID of the pool that contains the compute node. </p>
    name: poolId
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>The ID of the compute node whose files you want to list. </p>
    name: nodeId
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>Whether to list children of a directory. </p>
    name: recursive
    type: <xref href="final+Boolean?alt=final+Boolean&text=final+Boolean" data-throw-if-not-resolved="False"/>
  - description: <p>Additional parameters for the operation </p>
    name: fileListFromComputeNodeOptions
    type: final <xref href="com.microsoft.azure.batch.protocol.models.FileListFromComputeNodeOptions?alt=com.microsoft.azure.batch.protocol.models.FileListFromComputeNodeOptions&text=FileListFromComputeNodeOptions" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="BatchErrorException?alt=BatchErrorException&text=BatchErrorException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  returns:
    description: <p>the PagedList&lt;NodeFile&gt; object if successful. </p>
    type: PagedList&lt;<xref href="com.microsoft.azure.batch.protocol.models.NodeFile?alt=com.microsoft.azure.batch.protocol.models.NodeFile&text=NodeFile" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Lists all of the files in task directories on the specified compute node.</p>

    <p></p>
  syntax: public PagedList<NodeFile> listFromComputeNode(final String poolId, final String nodeId, final Boolean recursive, final FileListFromComputeNodeOptions fileListFromComputeNodeOptions)
  uid: com.microsoft.azure.batch.protocol.Files.listFromComputeNode(final String,final String,final Boolean,final FileListFromComputeNodeOptions)
uid: com.microsoft.azure.batch.protocol.Files.listFromComputeNode*
fullName: com.microsoft.azure.batch.protocol.Files.listFromComputeNode
name: listFromComputeNode(final String poolId, final String nodeId)
package: com.microsoft.azure.batch.protocol
metadata: {}
