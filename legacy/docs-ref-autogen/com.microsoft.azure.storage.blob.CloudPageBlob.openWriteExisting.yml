### YamlMime:JavaMember
nameWithType: CloudPageBlob.openWriteExisting
type: method
members:
- fullName: com.microsoft.azure.storage.blob.CloudPageBlob.openWriteExisting()
  name: openWriteExisting()
  nameWithType: CloudPageBlob.openWriteExisting()
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  returns:
    description: <p>A <xref uid="com.microsoft.azure.storage.blob.BlobOutputStream" data-throw-if-not-resolved="false">BlobOutputStream</xref> object used to write data to the blob.</p>
    type: <xref href="com.microsoft.azure.storage.blob.BlobOutputStream?alt=com.microsoft.azure.storage.blob.BlobOutputStream&text=BlobOutputStream" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Opens an output stream object to write data to the page blob. The page blob must already exist and any existing data may be overwritten.</p>

    <p></p>
  syntax: public BlobOutputStream openWriteExisting()
  uid: com.microsoft.azure.storage.blob.CloudPageBlob.openWriteExisting()
- fullName: com.microsoft.azure.storage.blob.CloudPageBlob.openWriteExisting(AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  name: openWriteExisting(AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  nameWithType: CloudPageBlob.openWriteExisting(AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  parameters:
  - description: <p>An <xref uid="com.microsoft.azure.storage.AccessCondition" data-throw-if-not-resolved="false">AccessCondition</xref> object which represents the access conditions for the blob. </p>
    name: accessCondition
    type: <xref href="com.microsoft.azure.storage.AccessCondition?alt=com.microsoft.azure.storage.AccessCondition&text=AccessCondition" data-throw-if-not-resolved="False"/>
  - description: <p>A <xref uid="com.microsoft.azure.storage.blob.BlobRequestOptions" data-throw-if-not-resolved="false">BlobRequestOptions</xref> object that specifies any additional options for the request. Specifying <code>null</code> will use the default request options from the associated service client ( <xref uid="com.microsoft.azure.storage.blob.CloudBlobClient" data-throw-if-not-resolved="false">CloudBlobClient</xref>). </p>
    name: options
    type: <xref href="com.microsoft.azure.storage.blob.BlobRequestOptions?alt=com.microsoft.azure.storage.blob.BlobRequestOptions&text=BlobRequestOptions" data-throw-if-not-resolved="False"/>
  - description: <p>An <xref uid="com.microsoft.azure.storage.OperationContext" data-throw-if-not-resolved="false">OperationContext</xref> object which represents the context for the current operation. This object is used to track requests to the storage service, and to provide additional runtime information about the operation.</p>
    name: opContext
    type: <xref href="com.microsoft.azure.storage.OperationContext?alt=com.microsoft.azure.storage.OperationContext&text=OperationContext" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  returns:
    description: <p>A <xref uid="com.microsoft.azure.storage.blob.BlobOutputStream" data-throw-if-not-resolved="false">BlobOutputStream</xref> object used to write data to the blob.</p>
    type: <xref href="com.microsoft.azure.storage.blob.BlobOutputStream?alt=com.microsoft.azure.storage.blob.BlobOutputStream&text=BlobOutputStream" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Opens an output stream object to write data to the page blob, using the specified lease ID, request options and operation context. The page blob must already exist and any existing data may be overwritten.</p>

    <p></p>
  syntax: public BlobOutputStream openWriteExisting(AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  uid: com.microsoft.azure.storage.blob.CloudPageBlob.openWriteExisting(AccessCondition,BlobRequestOptions,OperationContext)
uid: com.microsoft.azure.storage.blob.CloudPageBlob.openWriteExisting*
fullName: com.microsoft.azure.storage.blob.CloudPageBlob.openWriteExisting()
name: openWriteExisting()
package: com.microsoft.azure.storage.blob
metadata: {}
