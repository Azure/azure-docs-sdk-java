### YamlMime:JavaMember
nameWithType: ContractAPIHttp.ContractAPIHttp
type: constructor
members:
- fullName: com.microsoft.azure.sdk.iot.provisioning.device.internal.contract.http.ContractAPIHttp.ContractAPIHttp(ProvisioningDeviceClientConfig provisioningDeviceClientConfig)
  name: ContractAPIHttp(ProvisioningDeviceClientConfig provisioningDeviceClientConfig)
  nameWithType: ContractAPIHttp.ContractAPIHttp(ProvisioningDeviceClientConfig provisioningDeviceClientConfig)
  parameters:
  - description: >-
      <p>Config used for provisioning Cannot be<code>nullÂ 

          </code> . </p>
    name: provisioningDeviceClientConfig
    type: <xref href="com.microsoft.azure.sdk.iot.provisioning.device.internal.ProvisioningDeviceClientConfig?alt=com.microsoft.azure.sdk.iot.provisioning.device.internal.ProvisioningDeviceClientConfig&text=ProvisioningDeviceClientConfig" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="ProvisioningDeviceClientException?alt=ProvisioningDeviceClientException&text=ProvisioningDeviceClientException" data-throw-if-not-resolved="False"/>
    description: <p>is thrown when any of the input parameters are invalid </p>
  summary: <p>Constructor for Contract API HTTP </p>
  syntax: public ContractAPIHttp(ProvisioningDeviceClientConfig provisioningDeviceClientConfig)
  uid: com.microsoft.azure.sdk.iot.provisioning.device.internal.contract.http.ContractAPIHttp.ContractAPIHttp(ProvisioningDeviceClientConfig)
uid: com.microsoft.azure.sdk.iot.provisioning.device.internal.contract.http.ContractAPIHttp.ContractAPIHttp*
fullName: com.microsoft.azure.sdk.iot.provisioning.device.internal.contract.http.ContractAPIHttp.ContractAPIHttp
name: ContractAPIHttp
package: com.microsoft.azure.sdk.iot.provisioning.device.internal.contract.http
metadata: {}
