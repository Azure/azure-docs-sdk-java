### YamlMime:JavaType
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
- <xref href="AutoCloseable" data-throw-if-not-resolved="False"/>
methods:
- fullName: com.microsoft.cognitiveservices.speech.EmbeddedSpeechConfig.close()
  name: close()
  nameWithType: EmbeddedSpeechConfig.close()
  returns:
    type: <xref href="final+void?alt=final+void&text=final+void" data-throw-if-not-resolved="False"/>
  summary: <p>Dispose of associated resources. </p>
  syntax: public final void close()
  uid: com.microsoft.cognitiveservices.speech.EmbeddedSpeechConfig.close()
- fullName: com.microsoft.cognitiveservices.speech.EmbeddedSpeechConfig.fromPath(String path)
  name: fromPath(String path)
  nameWithType: EmbeddedSpeechConfig.fromPath(String path)
  parameters:
  - description: <p>The folder path to search for offline models. This can be a root path under which several models are located in subfolders, or a direct path to a specific model folder. </p>
    name: path
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>An embedded speech config instance. </p>
    type: final <xref href="com.microsoft.cognitiveservices.speech.EmbeddedSpeechConfig?alt=com.microsoft.cognitiveservices.speech.EmbeddedSpeechConfig&text=EmbeddedSpeechConfig" data-throw-if-not-resolved="False"/>
  summary: <p>Creates an instance of the embedded speech config with a specified offline model path for speech recognition and/or synthesis. </p>
  syntax: public static final EmbeddedSpeechConfig fromPath(String path)
  uid: com.microsoft.cognitiveservices.speech.EmbeddedSpeechConfig.fromPath(String)
- fullName: com.microsoft.cognitiveservices.speech.EmbeddedSpeechConfig.fromPaths(List<String> paths)
  name: fromPaths(List<String> paths)
  nameWithType: EmbeddedSpeechConfig.fromPaths(List<String> paths)
  parameters:
  - description: <p>he folder paths to search for offline models. These can be root paths under which several models are located in subfolders, or direct paths to specific model folders. </p>
    name: paths
    type: <xref href="List%3CString%3E?alt=List%3CString%3E&text=List%3CString%3E" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>An embedded speech config instance. </p>
    type: final <xref href="com.microsoft.cognitiveservices.speech.EmbeddedSpeechConfig?alt=com.microsoft.cognitiveservices.speech.EmbeddedSpeechConfig&text=EmbeddedSpeechConfig" data-throw-if-not-resolved="False"/>
  summary: <p>Creates an instance of the embedded speech config with specified offline model paths for speech recognition and/or synthesis. </p>
  syntax: public static final EmbeddedSpeechConfig fromPaths(List<String> paths)
  uid: com.microsoft.cognitiveservices.speech.EmbeddedSpeechConfig.fromPaths(List<String>)
- fullName: com.microsoft.cognitiveservices.speech.EmbeddedSpeechConfig.getProperty(PropertyId id)
  name: getProperty(PropertyId id)
  nameWithType: EmbeddedSpeechConfig.getProperty(PropertyId id)
  parameters:
  - description: <p>PropertyId of the property. </p>
    name: id
    type: <xref href="com.microsoft.cognitiveservices.speech.PropertyId?alt=com.microsoft.cognitiveservices.speech.PropertyId&text=PropertyId" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>The value. </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: <p>Gets the property by propertyId. </p>
  syntax: public String getProperty(PropertyId id)
  uid: com.microsoft.cognitiveservices.speech.EmbeddedSpeechConfig.getProperty(PropertyId)
- fullName: com.microsoft.cognitiveservices.speech.EmbeddedSpeechConfig.getProperty(String name)
  name: getProperty(String name)
  nameWithType: EmbeddedSpeechConfig.getProperty(String name)
  parameters:
  - description: <p>the name of the property. </p>
    name: name
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>The value. </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: <p>Gets a named property as value. </p>
  syntax: public String getProperty(String name)
  uid: com.microsoft.cognitiveservices.speech.EmbeddedSpeechConfig.getProperty(String)
- fullName: com.microsoft.cognitiveservices.speech.EmbeddedSpeechConfig.getSpeechRecognitionModelName()
  name: getSpeechRecognitionModelName()
  nameWithType: EmbeddedSpeechConfig.getSpeechRecognitionModelName()
  returns:
    description: <p>The recognition model name. </p>
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  summary: <p>Gets the model name for speech recognition. </p>
  syntax: public final String getSpeechRecognitionModelName()
  uid: com.microsoft.cognitiveservices.speech.EmbeddedSpeechConfig.getSpeechRecognitionModelName()
- fullName: com.microsoft.cognitiveservices.speech.EmbeddedSpeechConfig.getSpeechRecognitionModels()
  name: getSpeechRecognitionModels()
  nameWithType: EmbeddedSpeechConfig.getSpeechRecognitionModels()
  returns:
    description: <p>Speech recognition model info. </p>
    type: final List&lt;<xref href="com.microsoft.cognitiveservices.speech.SpeechRecognitionModel?alt=com.microsoft.cognitiveservices.speech.SpeechRecognitionModel&text=SpeechRecognitionModel" data-throw-if-not-resolved="False"/>&gt;
  summary: <p>Gets a list of available speech recognition models. </p>
  syntax: public final List<SpeechRecognitionModel> getSpeechRecognitionModels()
  uid: com.microsoft.cognitiveservices.speech.EmbeddedSpeechConfig.getSpeechRecognitionModels()
- fullName: com.microsoft.cognitiveservices.speech.EmbeddedSpeechConfig.getSpeechRecognitionOutputFormat()
  name: getSpeechRecognitionOutputFormat()
  nameWithType: EmbeddedSpeechConfig.getSpeechRecognitionOutputFormat()
  returns:
    description: <p>The recognition output format. </p>
    type: final <xref href="com.microsoft.cognitiveservices.speech.OutputFormat?alt=com.microsoft.cognitiveservices.speech.OutputFormat&text=OutputFormat" data-throw-if-not-resolved="False"/>
  summary: <p>Gets the embedded speech recognition output format. </p>
  syntax: public final OutputFormat getSpeechRecognitionOutputFormat()
  uid: com.microsoft.cognitiveservices.speech.EmbeddedSpeechConfig.getSpeechRecognitionOutputFormat()
- fullName: com.microsoft.cognitiveservices.speech.EmbeddedSpeechConfig.getSpeechSynthesisOutputFormat()
  name: getSpeechSynthesisOutputFormat()
  nameWithType: EmbeddedSpeechConfig.getSpeechSynthesisOutputFormat()
  returns:
    description: <p>Returns the synthesis output format. </p>
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  summary: <p>Gets the embedded speech synthesis output format. </p>
  syntax: public final String getSpeechSynthesisOutputFormat()
  uid: com.microsoft.cognitiveservices.speech.EmbeddedSpeechConfig.getSpeechSynthesisOutputFormat()
- fullName: com.microsoft.cognitiveservices.speech.EmbeddedSpeechConfig.getSpeechSynthesisVoiceName()
  name: getSpeechSynthesisVoiceName()
  nameWithType: EmbeddedSpeechConfig.getSpeechSynthesisVoiceName()
  returns:
    description: <p>Returns the embedded speech synthesis voice name. </p>
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  summary: <p>Gets the voice name for embedded speech synthesis. </p>
  syntax: public final String getSpeechSynthesisVoiceName()
  uid: com.microsoft.cognitiveservices.speech.EmbeddedSpeechConfig.getSpeechSynthesisVoiceName()
- fullName: com.microsoft.cognitiveservices.speech.EmbeddedSpeechConfig.setProfanity(ProfanityOption value)
  name: setProfanity(ProfanityOption value)
  nameWithType: EmbeddedSpeechConfig.setProfanity(ProfanityOption value)
  parameters:
  - description: <p>The profanity option. </p>
    name: value
    type: <xref href="com.microsoft.cognitiveservices.speech.ProfanityOption?alt=com.microsoft.cognitiveservices.speech.ProfanityOption&text=ProfanityOption" data-throw-if-not-resolved="False"/>
  returns:
    type: <xref href="final+void?alt=final+void&text=final+void" data-throw-if-not-resolved="False"/>
  summary: <p>Sets the profanity option. This can be used to remove profane words or mask them in output. </p>
  syntax: public final void setProfanity(ProfanityOption value)
  uid: com.microsoft.cognitiveservices.speech.EmbeddedSpeechConfig.setProfanity(ProfanityOption)
- fullName: com.microsoft.cognitiveservices.speech.EmbeddedSpeechConfig.setProperty(PropertyId id, String value)
  name: setProperty(PropertyId id, String value)
  nameWithType: EmbeddedSpeechConfig.setProperty(PropertyId id, String value)
  parameters:
  - description: <p>PropertyId of the property. </p>
    name: id
    type: <xref href="com.microsoft.cognitiveservices.speech.PropertyId?alt=com.microsoft.cognitiveservices.speech.PropertyId&text=PropertyId" data-throw-if-not-resolved="False"/>
  - description: <p>The value. </p>
    name: value
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: <p>Sets the property by propertyId. </p>
  syntax: public void setProperty(PropertyId id, String value)
  uid: com.microsoft.cognitiveservices.speech.EmbeddedSpeechConfig.setProperty(PropertyId,String)
- fullName: com.microsoft.cognitiveservices.speech.EmbeddedSpeechConfig.setProperty(String name, String value)
  name: setProperty(String name, String value)
  nameWithType: EmbeddedSpeechConfig.setProperty(String name, String value)
  parameters:
  - description: <p>the name of the property. </p>
    name: name
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the value. </p>
    name: value
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: <p>Sets a named property as value. </p>
  syntax: public void setProperty(String name, String value)
  uid: com.microsoft.cognitiveservices.speech.EmbeddedSpeechConfig.setProperty(String,String)
- fullName: com.microsoft.cognitiveservices.speech.EmbeddedSpeechConfig.setSpeechRecognitionModel(String name, String key)
  name: setSpeechRecognitionModel(String name, String key)
  nameWithType: EmbeddedSpeechConfig.setSpeechRecognitionModel(String name, String key)
  parameters:
  - description: <p>The model name. </p>
    name: name
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The model decryption key. </p>
    name: key
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    type: <xref href="final+void?alt=final+void&text=final+void" data-throw-if-not-resolved="False"/>
  summary: <p>Sets the model for speech recognition. </p>
  syntax: public final void setSpeechRecognitionModel(String name, String key)
  uid: com.microsoft.cognitiveservices.speech.EmbeddedSpeechConfig.setSpeechRecognitionModel(String,String)
- fullName: com.microsoft.cognitiveservices.speech.EmbeddedSpeechConfig.setSpeechRecognitionOutputFormat(OutputFormat value)
  name: setSpeechRecognitionOutputFormat(OutputFormat value)
  nameWithType: EmbeddedSpeechConfig.setSpeechRecognitionOutputFormat(OutputFormat value)
  parameters:
  - description: <p>The recognition output format. </p>
    name: value
    type: <xref href="com.microsoft.cognitiveservices.speech.OutputFormat?alt=com.microsoft.cognitiveservices.speech.OutputFormat&text=OutputFormat" data-throw-if-not-resolved="False"/>
  returns:
    type: <xref href="final+void?alt=final+void&text=final+void" data-throw-if-not-resolved="False"/>
  summary: <p>Sets the speech recognition output format. </p>
  syntax: public final void setSpeechRecognitionOutputFormat(OutputFormat value)
  uid: com.microsoft.cognitiveservices.speech.EmbeddedSpeechConfig.setSpeechRecognitionOutputFormat(OutputFormat)
- fullName: com.microsoft.cognitiveservices.speech.EmbeddedSpeechConfig.setSpeechSynthesisOutputFormat(SpeechSynthesisOutputFormat value)
  name: setSpeechSynthesisOutputFormat(SpeechSynthesisOutputFormat value)
  nameWithType: EmbeddedSpeechConfig.setSpeechSynthesisOutputFormat(SpeechSynthesisOutputFormat value)
  parameters:
  - description: <p>The synthesis output format ID (e.g. Riff16Khz16BitMonoPcm). </p>
    name: value
    type: <xref href="com.microsoft.cognitiveservices.speech.SpeechSynthesisOutputFormat?alt=com.microsoft.cognitiveservices.speech.SpeechSynthesisOutputFormat&text=SpeechSynthesisOutputFormat" data-throw-if-not-resolved="False"/>
  returns:
    type: <xref href="final+void?alt=final+void&text=final+void" data-throw-if-not-resolved="False"/>
  summary: <p>Sets the embedded speech synthesis output format. </p>
  syntax: public final void setSpeechSynthesisOutputFormat(SpeechSynthesisOutputFormat value)
  uid: com.microsoft.cognitiveservices.speech.EmbeddedSpeechConfig.setSpeechSynthesisOutputFormat(SpeechSynthesisOutputFormat)
- fullName: com.microsoft.cognitiveservices.speech.EmbeddedSpeechConfig.setSpeechSynthesisVoice(String name, String key)
  name: setSpeechSynthesisVoice(String name, String key)
  nameWithType: EmbeddedSpeechConfig.setSpeechSynthesisVoice(String name, String key)
  parameters:
  - description: <p>The voice name for embedded speech synthesis. </p>
    name: name
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The decryption key. </p>
    name: key
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    type: <xref href="final+void?alt=final+void&text=final+void" data-throw-if-not-resolved="False"/>
  summary: <p>Sets the voice for speech synthesis. </p>
  syntax: public final void setSpeechSynthesisVoice(String name, String key)
  uid: com.microsoft.cognitiveservices.speech.EmbeddedSpeechConfig.setSpeechSynthesisVoice(String,String)
nameWithType: EmbeddedSpeechConfig
syntax: public class EmbeddedSpeechConfig
type: class
uid: com.microsoft.cognitiveservices.speech.EmbeddedSpeechConfig
fullName: com.microsoft.cognitiveservices.speech.EmbeddedSpeechConfig
name: EmbeddedSpeechConfig
package: com.microsoft.cognitiveservices.speech
summary: '<p>Class that defines embedded (offline) configurations for speech recognition and speech synthesis. This is currently a preview of the API. The functionality is not available in public releases. Note: close() must be called in order to release underlying resources held by the object. Added in version 1.19.0 </p>'
metadata: {}
