### YamlMime:JavaType
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
methods:
- fullName: com.microsoft.azure.management.resources.fluentcore.arm.ResourceUtils.constructResourceId(final String subscriptionId, final String resourceGroupName, final String resourceProviderNamespace, final String resourceType, final String resourceName, final String parentResourcePath)
  name: constructResourceId(final String subscriptionId, final String resourceGroupName, final String resourceProviderNamespace, final String resourceType, final String resourceName, final String parentResourcePath)
  nameWithType: ResourceUtils.constructResourceId(final String subscriptionId, final String resourceGroupName, final String resourceProviderNamespace, final String resourceType, final String resourceName, final String parentResourcePath)
  parameters:
  - description: <p>the subscription UUID </p>
    name: subscriptionId
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>the resource group name </p>
    name: resourceGroupName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>the resource provider namespace </p>
    name: resourceProviderNamespace
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>the type of the resource or nested resource </p>
    name: resourceType
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>name of the resource or nested resource </p>
    name: resourceName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>parent resource's relative path to the provider, if the resource is a generic resource </p>
    name: parentResourcePath
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the resource ID string </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Creates a resource ID from information of a generic resource.</p>

    <p></p>
  syntax: public static String constructResourceId(final String subscriptionId, final String resourceGroupName, final String resourceProviderNamespace, final String resourceType, final String resourceName, final String parentResourcePath)
  uid: com.microsoft.azure.management.resources.fluentcore.arm.ResourceUtils.constructResourceId(final String,final String,final String,final String,final String,final String)
- fullName: com.microsoft.azure.management.resources.fluentcore.arm.ResourceUtils.defaultApiVersion(String id, Provider provider)
  name: defaultApiVersion(String id, Provider provider)
  nameWithType: ResourceUtils.defaultApiVersion(String id, Provider provider)
  parameters:
  - description: <p>the resource ID </p>
    name: id
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the resource provider </p>
    name: provider
    type: <xref href="com.microsoft.azure.management.resources.Provider?alt=com.microsoft.azure.management.resources.Provider&text=Provider" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the default api version to use </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Find out the default api version to make a REST request with from the resource provider.</p>

    <p></p>
  syntax: public static String defaultApiVersion(String id, Provider provider)
  uid: com.microsoft.azure.management.resources.fluentcore.arm.ResourceUtils.defaultApiVersion(String,Provider)
- fullName: com.microsoft.azure.management.resources.fluentcore.arm.ResourceUtils.extractFromResourceId(String id, String identifier)
  name: extractFromResourceId(String id, String identifier)
  nameWithType: ResourceUtils.extractFromResourceId(String id, String identifier)
  parameters:
  - description: <p>the resource ID </p>
    name: id
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the identifier to match, e.g. "resourceGroups", "storageAccounts" </p>
    name: identifier
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the information extracted from the identifier </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Extract information from a resource ID string with the resource type as the identifier.</p>

    <p></p>
  syntax: public static String extractFromResourceId(String id, String identifier)
  uid: com.microsoft.azure.management.resources.fluentcore.arm.ResourceUtils.extractFromResourceId(String,String)
- fullName: com.microsoft.azure.management.resources.fluentcore.arm.ResourceUtils.groupFromResourceId(String id)
  name: groupFromResourceId(String id)
  nameWithType: ResourceUtils.groupFromResourceId(String id)
  parameters:
  - description: <p>the resource ID string </p>
    name: id
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the resource group name </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: <p>Extract resource group from a resource ID string. </p>
  syntax: public static String groupFromResourceId(String id)
  uid: com.microsoft.azure.management.resources.fluentcore.arm.ResourceUtils.groupFromResourceId(String)
- fullName: com.microsoft.azure.management.resources.fluentcore.arm.ResourceUtils.nameFromResourceId(String id)
  name: nameFromResourceId(String id)
  nameWithType: ResourceUtils.nameFromResourceId(String id)
  parameters:
  - description: <p>the resource ID </p>
    name: id
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the name of the resource </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: <p>Extract name of the resource from a resource ID. </p>
  syntax: public static String nameFromResourceId(String id)
  uid: com.microsoft.azure.management.resources.fluentcore.arm.ResourceUtils.nameFromResourceId(String)
- fullName: com.microsoft.azure.management.resources.fluentcore.arm.ResourceUtils.parentRelativePathFromResourceId(String id)
  name: parentRelativePathFromResourceId(String id)
  nameWithType: ResourceUtils.parentRelativePathFromResourceId(String id)
  parameters:
  - description: <p>the resource ID string </p>
    name: id
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the parent resource ID </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Extract parent resource path from a resource ID string. E.g. subscriptions/s/resourcegroups/r/foos/foo/bars/bar will return foos/foo.</p>

    <p></p>
  syntax: public static String parentRelativePathFromResourceId(String id)
  uid: com.microsoft.azure.management.resources.fluentcore.arm.ResourceUtils.parentRelativePathFromResourceId(String)
- fullName: com.microsoft.azure.management.resources.fluentcore.arm.ResourceUtils.parentResourceIdFromResourceId(String id)
  name: parentResourceIdFromResourceId(String id)
  nameWithType: ResourceUtils.parentResourceIdFromResourceId(String id)
  parameters:
  - description: <p>the resource ID string </p>
    name: id
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the parent resource ID </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Extract parent resource ID from a resource ID string. E.g. subscriptions/s/resourcegroups/r/foos/foo/bars/bar will return subscriptions/s/resourcegroups/r/foos/foo.</p>

    <p></p>
  syntax: public static String parentResourceIdFromResourceId(String id)
  uid: com.microsoft.azure.management.resources.fluentcore.arm.ResourceUtils.parentResourceIdFromResourceId(String)
- fullName: com.microsoft.azure.management.resources.fluentcore.arm.ResourceUtils.relativePathFromResourceId(String id)
  name: relativePathFromResourceId(String id)
  nameWithType: ResourceUtils.relativePathFromResourceId(String id)
  parameters:
  - description: <p>the id of the resource </p>
    name: id
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the relative path </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Extract the relative path to the current resource provider. E.g. subscriptions/sub1/resourceGroups/rg1/providers/Microsoft.Foo/foos/foo1 will return foos/foo1.</p>

    <p></p>
  syntax: public static String relativePathFromResourceId(String id)
  uid: com.microsoft.azure.management.resources.fluentcore.arm.ResourceUtils.relativePathFromResourceId(String)
- fullName: com.microsoft.azure.management.resources.fluentcore.arm.ResourceUtils.resourceProviderFromResourceId(String id)
  name: resourceProviderFromResourceId(String id)
  nameWithType: ResourceUtils.resourceProviderFromResourceId(String id)
  parameters:
  - description: <p>the resource ID string </p>
    name: id
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the resource group name </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: <p>Extract resource provider from a resource ID string. </p>
  syntax: public static String resourceProviderFromResourceId(String id)
  uid: com.microsoft.azure.management.resources.fluentcore.arm.ResourceUtils.resourceProviderFromResourceId(String)
- fullName: com.microsoft.azure.management.resources.fluentcore.arm.ResourceUtils.resourceTypeFromResourceId(String id)
  name: resourceTypeFromResourceId(String id)
  nameWithType: ResourceUtils.resourceTypeFromResourceId(String id)
  parameters:
  - description: <p>the resource ID string </p>
    name: id
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the resource type </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: <p>Extract resource type from a resource ID string. </p>
  syntax: public static String resourceTypeFromResourceId(String id)
  uid: com.microsoft.azure.management.resources.fluentcore.arm.ResourceUtils.resourceTypeFromResourceId(String)
- fullName: com.microsoft.azure.management.resources.fluentcore.arm.ResourceUtils.subscriptionFromResourceId(String id)
  name: subscriptionFromResourceId(String id)
  nameWithType: ResourceUtils.subscriptionFromResourceId(String id)
  parameters:
  - description: <p>the resource ID string </p>
    name: id
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the subscription ID </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: <p>Extract the subscription ID from a resource ID string. </p>
  syntax: public static String subscriptionFromResourceId(String id)
  uid: com.microsoft.azure.management.resources.fluentcore.arm.ResourceUtils.subscriptionFromResourceId(String)
nameWithType: ResourceUtils
syntax: public class ResourceUtils
type: class
uid: com.microsoft.azure.management.resources.fluentcore.arm.ResourceUtils
fullName: com.microsoft.azure.management.resources.fluentcore.arm.ResourceUtils
name: ResourceUtils
package: com.microsoft.azure.management.resources.fluentcore.arm
summary: <p>Utility methods for Azure resource IDs. </p>
metadata: {}
