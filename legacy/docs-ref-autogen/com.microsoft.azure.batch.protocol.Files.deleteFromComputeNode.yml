### YamlMime:JavaMember
nameWithType: Files.deleteFromComputeNode
type: method
members:
- fullName: com.microsoft.azure.batch.protocol.Files.deleteFromComputeNode(String poolId, String nodeId, String filePath)
  name: deleteFromComputeNode(String poolId, String nodeId, String filePath)
  nameWithType: Files.deleteFromComputeNode(String poolId, String nodeId, String filePath)
  parameters:
  - description: <p>The ID of the pool that contains the compute node. </p>
    name: poolId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The ID of the compute node from which you want to delete the file. </p>
    name: nodeId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The path to the file or directory that you want to delete. </p>
    name: filePath
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="BatchErrorException?alt=BatchErrorException&text=BatchErrorException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  summary: >-
    <p>Deletes the specified file from the compute node.</p>

    <p></p>
  syntax: public void deleteFromComputeNode(String poolId, String nodeId, String filePath)
  uid: com.microsoft.azure.batch.protocol.Files.deleteFromComputeNode(String,String,String)
- fullName: com.microsoft.azure.batch.protocol.Files.deleteFromComputeNode(String poolId, String nodeId, String filePath, Boolean recursive, FileDeleteFromComputeNodeOptions fileDeleteFromComputeNodeOptions)
  name: deleteFromComputeNode(String poolId, String nodeId, String filePath, Boolean recursive, FileDeleteFromComputeNodeOptions fileDeleteFromComputeNodeOptions)
  nameWithType: Files.deleteFromComputeNode(String poolId, String nodeId, String filePath, Boolean recursive, FileDeleteFromComputeNodeOptions fileDeleteFromComputeNodeOptions)
  parameters:
  - description: <p>The ID of the pool that contains the compute node. </p>
    name: poolId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The ID of the compute node from which you want to delete the file. </p>
    name: nodeId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The path to the file or directory that you want to delete. </p>
    name: filePath
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>Whether to delete children of a directory. If the filePath parameter represents a directory instead of a file, you can set recursive to true to delete the directory and all of the files and subdirectories in it. If recursive is false then the directory must be empty or deletion will fail. </p>
    name: recursive
    type: <xref href="Boolean?alt=Boolean&text=Boolean" data-throw-if-not-resolved="False"/>
  - description: <p>Additional parameters for the operation </p>
    name: fileDeleteFromComputeNodeOptions
    type: <xref href="com.microsoft.azure.batch.protocol.models.FileDeleteFromComputeNodeOptions?alt=com.microsoft.azure.batch.protocol.models.FileDeleteFromComputeNodeOptions&text=FileDeleteFromComputeNodeOptions" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="BatchErrorException?alt=BatchErrorException&text=BatchErrorException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  summary: >-
    <p>Deletes the specified file from the compute node.</p>

    <p></p>
  syntax: public void deleteFromComputeNode(String poolId, String nodeId, String filePath, Boolean recursive, FileDeleteFromComputeNodeOptions fileDeleteFromComputeNodeOptions)
  uid: com.microsoft.azure.batch.protocol.Files.deleteFromComputeNode(String,String,String,Boolean,FileDeleteFromComputeNodeOptions)
uid: com.microsoft.azure.batch.protocol.Files.deleteFromComputeNode*
fullName: com.microsoft.azure.batch.protocol.Files.deleteFromComputeNode(String poolId, String nodeId, String filePath)
name: deleteFromComputeNode(String poolId, String nodeId, String filePath)
package: com.microsoft.azure.batch.protocol
metadata: {}
