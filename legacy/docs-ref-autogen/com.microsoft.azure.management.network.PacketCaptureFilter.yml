### YamlMime:JavaType
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
methods:
- fullName: com.microsoft.azure.management.network.PacketCaptureFilter.localIPAddress()
  name: localIPAddress()
  nameWithType: PacketCaptureFilter.localIPAddress()
  returns:
    description: <p>the localIPAddress value </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the localIPAddress value.</p>

    <p></p>
  syntax: public String localIPAddress()
  uid: com.microsoft.azure.management.network.PacketCaptureFilter.localIPAddress()
- fullName: com.microsoft.azure.management.network.PacketCaptureFilter.localPort()
  name: localPort()
  nameWithType: PacketCaptureFilter.localPort()
  returns:
    description: <p>the localPort value </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the localPort value.</p>

    <p></p>
  syntax: public String localPort()
  uid: com.microsoft.azure.management.network.PacketCaptureFilter.localPort()
- fullName: com.microsoft.azure.management.network.PacketCaptureFilter.protocol()
  name: protocol()
  nameWithType: PacketCaptureFilter.protocol()
  returns:
    description: <p>the protocol value </p>
    type: <xref href="com.microsoft.azure.management.network.PcProtocol?alt=com.microsoft.azure.management.network.PcProtocol&text=PcProtocol" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the protocol value.</p>

    <p></p>
  syntax: public PcProtocol protocol()
  uid: com.microsoft.azure.management.network.PacketCaptureFilter.protocol()
- fullName: com.microsoft.azure.management.network.PacketCaptureFilter.remoteIPAddress()
  name: remoteIPAddress()
  nameWithType: PacketCaptureFilter.remoteIPAddress()
  returns:
    description: <p>the remoteIPAddress value </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the remoteIPAddress value.</p>

    <p></p>
  syntax: public String remoteIPAddress()
  uid: com.microsoft.azure.management.network.PacketCaptureFilter.remoteIPAddress()
- fullName: com.microsoft.azure.management.network.PacketCaptureFilter.remotePort()
  name: remotePort()
  nameWithType: PacketCaptureFilter.remotePort()
  returns:
    description: <p>the remotePort value </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the remotePort value.</p>

    <p></p>
  syntax: public String remotePort()
  uid: com.microsoft.azure.management.network.PacketCaptureFilter.remotePort()
- fullName: com.microsoft.azure.management.network.PacketCaptureFilter.withLocalIPAddress(String localIPAddress)
  name: withLocalIPAddress(String localIPAddress)
  nameWithType: PacketCaptureFilter.withLocalIPAddress(String localIPAddress)
  parameters:
  - description: <p>the localIPAddress value to set </p>
    name: localIPAddress
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the PacketCaptureFilter object itself. </p>
    type: <xref href="com.microsoft.azure.management.network.PacketCaptureFilter?alt=com.microsoft.azure.management.network.PacketCaptureFilter&text=PacketCaptureFilter" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the localIPAddress value.</p>

    <p></p>
  syntax: public PacketCaptureFilter withLocalIPAddress(String localIPAddress)
  uid: com.microsoft.azure.management.network.PacketCaptureFilter.withLocalIPAddress(String)
- fullName: com.microsoft.azure.management.network.PacketCaptureFilter.withLocalPort(String localPort)
  name: withLocalPort(String localPort)
  nameWithType: PacketCaptureFilter.withLocalPort(String localPort)
  parameters:
  - description: <p>the localPort value to set </p>
    name: localPort
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the PacketCaptureFilter object itself. </p>
    type: <xref href="com.microsoft.azure.management.network.PacketCaptureFilter?alt=com.microsoft.azure.management.network.PacketCaptureFilter&text=PacketCaptureFilter" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the localPort value.</p>

    <p></p>
  syntax: public PacketCaptureFilter withLocalPort(String localPort)
  uid: com.microsoft.azure.management.network.PacketCaptureFilter.withLocalPort(String)
- fullName: com.microsoft.azure.management.network.PacketCaptureFilter.withProtocol(PcProtocol protocol)
  name: withProtocol(PcProtocol protocol)
  nameWithType: PacketCaptureFilter.withProtocol(PcProtocol protocol)
  parameters:
  - description: <p>the protocol value to set </p>
    name: protocol
    type: <xref href="com.microsoft.azure.management.network.PcProtocol?alt=com.microsoft.azure.management.network.PcProtocol&text=PcProtocol" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the PacketCaptureFilter object itself. </p>
    type: <xref href="com.microsoft.azure.management.network.PacketCaptureFilter?alt=com.microsoft.azure.management.network.PacketCaptureFilter&text=PacketCaptureFilter" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the protocol value.</p>

    <p></p>
  syntax: public PacketCaptureFilter withProtocol(PcProtocol protocol)
  uid: com.microsoft.azure.management.network.PacketCaptureFilter.withProtocol(PcProtocol)
- fullName: com.microsoft.azure.management.network.PacketCaptureFilter.withRemoteIPAddress(String remoteIPAddress)
  name: withRemoteIPAddress(String remoteIPAddress)
  nameWithType: PacketCaptureFilter.withRemoteIPAddress(String remoteIPAddress)
  parameters:
  - description: <p>the remoteIPAddress value to set </p>
    name: remoteIPAddress
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the PacketCaptureFilter object itself. </p>
    type: <xref href="com.microsoft.azure.management.network.PacketCaptureFilter?alt=com.microsoft.azure.management.network.PacketCaptureFilter&text=PacketCaptureFilter" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the remoteIPAddress value.</p>

    <p></p>
  syntax: public PacketCaptureFilter withRemoteIPAddress(String remoteIPAddress)
  uid: com.microsoft.azure.management.network.PacketCaptureFilter.withRemoteIPAddress(String)
- fullName: com.microsoft.azure.management.network.PacketCaptureFilter.withRemotePort(String remotePort)
  name: withRemotePort(String remotePort)
  nameWithType: PacketCaptureFilter.withRemotePort(String remotePort)
  parameters:
  - description: <p>the remotePort value to set </p>
    name: remotePort
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the PacketCaptureFilter object itself. </p>
    type: <xref href="com.microsoft.azure.management.network.PacketCaptureFilter?alt=com.microsoft.azure.management.network.PacketCaptureFilter&text=PacketCaptureFilter" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the remotePort value.</p>

    <p></p>
  syntax: public PacketCaptureFilter withRemotePort(String remotePort)
  uid: com.microsoft.azure.management.network.PacketCaptureFilter.withRemotePort(String)
nameWithType: PacketCaptureFilter
syntax: public class PacketCaptureFilter
type: class
uid: com.microsoft.azure.management.network.PacketCaptureFilter
fullName: com.microsoft.azure.management.network.PacketCaptureFilter
name: PacketCaptureFilter
package: com.microsoft.azure.management.network
summary: <p>Filter that is applied to packet capture request. Multiple filters can be applied. </p>
metadata: {}
