### YamlMime:JavaType
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
- <xref href="com.microsoft.azure.batch.IInheritedBehaviors?alt=com.microsoft.azure.batch.IInheritedBehaviors&text=IInheritedBehaviors" data-throw-if-not-resolved="False"/>
methods:
- fullName: com.microsoft.azure.batch.ComputeNodeOperations.addComputeNodeUser(String poolId, String nodeId, ComputeNodeUser user)
  name: addComputeNodeUser(String poolId, String nodeId, ComputeNodeUser user)
  nameWithType: ComputeNodeOperations.addComputeNodeUser(String poolId, String nodeId, ComputeNodeUser user)
  parameters:
  - description: <p>The ID of the pool that contains the compute node. </p>
    name: poolId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The ID of the compute node where the user account will be created. </p>
    name: nodeId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The user account to be created. </p>
    name: user
    type: <xref href="com.microsoft.azure.batch.protocol.models.ComputeNodeUser?alt=com.microsoft.azure.batch.protocol.models.ComputeNodeUser&text=ComputeNodeUser" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="BatchErrorException?alt=BatchErrorException&text=BatchErrorException" data-throw-if-not-resolved="False"/>
    description: <p>Exception thrown when an error response is received from the Batch service. </p>
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
    description: <p>Exception thrown when there is an error in serialization/deserialization of data sent to/received from the Batch service. </p>
  summary: >-
    <p>Adds a user account to the specified compute node.</p>

    <p></p>
  syntax: public void addComputeNodeUser(String poolId, String nodeId, ComputeNodeUser user)
  uid: com.microsoft.azure.batch.ComputeNodeOperations.addComputeNodeUser(String,String,ComputeNodeUser)
- fullName: com.microsoft.azure.batch.ComputeNodeOperations.addComputeNodeUser(String poolId, String nodeId, ComputeNodeUser user, Iterable<BatchClientBehavior> additionalBehaviors)
  name: addComputeNodeUser(String poolId, String nodeId, ComputeNodeUser user, Iterable<BatchClientBehavior> additionalBehaviors)
  nameWithType: ComputeNodeOperations.addComputeNodeUser(String poolId, String nodeId, ComputeNodeUser user, Iterable<BatchClientBehavior> additionalBehaviors)
  parameters:
  - description: <p>The ID of the pool that contains the compute node. </p>
    name: poolId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The ID of the compute node where the user account will be created. </p>
    name: nodeId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The user account to be created. </p>
    name: user
    type: <xref href="com.microsoft.azure.batch.protocol.models.ComputeNodeUser?alt=com.microsoft.azure.batch.protocol.models.ComputeNodeUser&text=ComputeNodeUser" data-throw-if-not-resolved="False"/>
  - description: <p>A collection of <xref uid="com.microsoft.azure.batch.BatchClientBehavior" data-throw-if-not-resolved="false" data-raw-source="BatchClientBehavior"></xref> instances that are applied to the Batch service request. </p>
    name: additionalBehaviors
    type: Iterable&lt;<xref href="com.microsoft.azure.batch.BatchClientBehavior?alt=com.microsoft.azure.batch.BatchClientBehavior&text=BatchClientBehavior" data-throw-if-not-resolved="False"/>&gt;
  exceptions:
  - type: <xref href="BatchErrorException?alt=BatchErrorException&text=BatchErrorException" data-throw-if-not-resolved="False"/>
    description: <p>Exception thrown when an error response is received from the Batch service. </p>
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
    description: <p>Exception thrown when there is an error in serialization/deserialization of data sent to/received from the Batch service. </p>
  summary: >-
    <p>Adds a user account to the specified compute node.</p>

    <p></p>
  syntax: public void addComputeNodeUser(String poolId, String nodeId, ComputeNodeUser user, Iterable<BatchClientBehavior> additionalBehaviors)
  uid: com.microsoft.azure.batch.ComputeNodeOperations.addComputeNodeUser(String,String,ComputeNodeUser,Iterable<BatchClientBehavior>)
- fullName: com.microsoft.azure.batch.ComputeNodeOperations.customBehaviors()
  name: customBehaviors()
  nameWithType: ComputeNodeOperations.customBehaviors()
  overridden: com.microsoft.azure.batch.IInheritedBehaviors.customBehaviors()
  returns:
    description: <p>A collection of <xref uid="com.microsoft.azure.batch.BatchClientBehavior" data-throw-if-not-resolved="false" data-raw-source="BatchClientBehavior"></xref> instances. </p>
    type: Collection&lt;<xref href="com.microsoft.azure.batch.BatchClientBehavior?alt=com.microsoft.azure.batch.BatchClientBehavior&text=BatchClientBehavior" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Gets a collection of behaviors that modify or customize requests to the Batch service.</p>

    <p></p>
  syntax: public Collection<BatchClientBehavior> customBehaviors()
  uid: com.microsoft.azure.batch.ComputeNodeOperations.customBehaviors()
- fullName: com.microsoft.azure.batch.ComputeNodeOperations.deleteComputeNodeUser(String poolId, String nodeId, String userName)
  name: deleteComputeNodeUser(String poolId, String nodeId, String userName)
  nameWithType: ComputeNodeOperations.deleteComputeNodeUser(String poolId, String nodeId, String userName)
  parameters:
  - description: <p>The ID of the pool that contains the compute node. </p>
    name: poolId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The ID of the compute node where the user account will be deleted. </p>
    name: nodeId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the user account to be deleted. </p>
    name: userName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="BatchErrorException?alt=BatchErrorException&text=BatchErrorException" data-throw-if-not-resolved="False"/>
    description: <p>Exception thrown when an error response is received from the Batch service. </p>
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
    description: <p>Exception thrown when there is an error in serialization/deserialization of data sent to/received from the Batch service. </p>
  summary: >-
    <p>Deletes the specified user account from the specified compute node.</p>

    <p></p>
  syntax: public void deleteComputeNodeUser(String poolId, String nodeId, String userName)
  uid: com.microsoft.azure.batch.ComputeNodeOperations.deleteComputeNodeUser(String,String,String)
- fullName: com.microsoft.azure.batch.ComputeNodeOperations.deleteComputeNodeUser(String poolId, String nodeId, String userName, Iterable<BatchClientBehavior> additionalBehaviors)
  name: deleteComputeNodeUser(String poolId, String nodeId, String userName, Iterable<BatchClientBehavior> additionalBehaviors)
  nameWithType: ComputeNodeOperations.deleteComputeNodeUser(String poolId, String nodeId, String userName, Iterable<BatchClientBehavior> additionalBehaviors)
  parameters:
  - description: <p>The ID of the pool that contains the compute node. </p>
    name: poolId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The ID of the compute node where the user account will be deleted. </p>
    name: nodeId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the user account to be deleted. </p>
    name: userName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>A collection of <xref uid="com.microsoft.azure.batch.BatchClientBehavior" data-throw-if-not-resolved="false" data-raw-source="BatchClientBehavior"></xref> instances that are applied to the Batch service request. </p>
    name: additionalBehaviors
    type: Iterable&lt;<xref href="com.microsoft.azure.batch.BatchClientBehavior?alt=com.microsoft.azure.batch.BatchClientBehavior&text=BatchClientBehavior" data-throw-if-not-resolved="False"/>&gt;
  exceptions:
  - type: <xref href="BatchErrorException?alt=BatchErrorException&text=BatchErrorException" data-throw-if-not-resolved="False"/>
    description: <p>Exception thrown when an error response is received from the Batch service. </p>
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
    description: <p>Exception thrown when there is an error in serialization/deserialization of data sent to/received from the Batch service. </p>
  summary: >-
    <p>Deletes the specified user account from the specified compute node.</p>

    <p></p>
  syntax: public void deleteComputeNodeUser(String poolId, String nodeId, String userName, Iterable<BatchClientBehavior> additionalBehaviors)
  uid: com.microsoft.azure.batch.ComputeNodeOperations.deleteComputeNodeUser(String,String,String,Iterable<BatchClientBehavior>)
- fullName: com.microsoft.azure.batch.ComputeNodeOperations.disableComputeNodeScheduling(String poolId, String nodeId)
  name: disableComputeNodeScheduling(String poolId, String nodeId)
  nameWithType: ComputeNodeOperations.disableComputeNodeScheduling(String poolId, String nodeId)
  parameters:
  - description: <p>The ID of the pool. </p>
    name: poolId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the ID of the compute node. </p>
    name: nodeId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="BatchErrorException?alt=BatchErrorException&text=BatchErrorException" data-throw-if-not-resolved="False"/>
    description: <p>Exception thrown when an error response is received from the Batch service. </p>
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
    description: <p>Exception thrown when there is an error in serialization/deserialization of data sent to/received from the Batch service. </p>
  summary: >-
    <p>Disables task scheduling on the specified compute node.</p>

    <p></p>
  syntax: public void disableComputeNodeScheduling(String poolId, String nodeId)
  uid: com.microsoft.azure.batch.ComputeNodeOperations.disableComputeNodeScheduling(String,String)
- fullName: com.microsoft.azure.batch.ComputeNodeOperations.disableComputeNodeScheduling(String poolId, String nodeId, DisableComputeNodeSchedulingOption nodeDisableSchedulingOption)
  name: disableComputeNodeScheduling(String poolId, String nodeId, DisableComputeNodeSchedulingOption nodeDisableSchedulingOption)
  nameWithType: ComputeNodeOperations.disableComputeNodeScheduling(String poolId, String nodeId, DisableComputeNodeSchedulingOption nodeDisableSchedulingOption)
  parameters:
  - description: <p>The ID of the pool. </p>
    name: poolId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The ID of the compute node. </p>
    name: nodeId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>Specifies what to do with currently running tasks. </p>
    name: nodeDisableSchedulingOption
    type: <xref href="com.microsoft.azure.batch.protocol.models.DisableComputeNodeSchedulingOption?alt=com.microsoft.azure.batch.protocol.models.DisableComputeNodeSchedulingOption&text=DisableComputeNodeSchedulingOption" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="BatchErrorException?alt=BatchErrorException&text=BatchErrorException" data-throw-if-not-resolved="False"/>
    description: <p>Exception thrown when an error response is received from the Batch service. </p>
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
    description: <p>Exception thrown when there is an error in serialization/deserialization of data sent to/received from the Batch service. </p>
  summary: >-
    <p>Disables task scheduling on the specified compute node.</p>

    <p></p>
  syntax: public void disableComputeNodeScheduling(String poolId, String nodeId, DisableComputeNodeSchedulingOption nodeDisableSchedulingOption)
  uid: com.microsoft.azure.batch.ComputeNodeOperations.disableComputeNodeScheduling(String,String,DisableComputeNodeSchedulingOption)
- fullName: com.microsoft.azure.batch.ComputeNodeOperations.disableComputeNodeScheduling(String poolId, String nodeId, DisableComputeNodeSchedulingOption nodeDisableSchedulingOption, Iterable<BatchClientBehavior> additionalBehaviors)
  name: disableComputeNodeScheduling(String poolId, String nodeId, DisableComputeNodeSchedulingOption nodeDisableSchedulingOption, Iterable<BatchClientBehavior> additionalBehaviors)
  nameWithType: ComputeNodeOperations.disableComputeNodeScheduling(String poolId, String nodeId, DisableComputeNodeSchedulingOption nodeDisableSchedulingOption, Iterable<BatchClientBehavior> additionalBehaviors)
  parameters:
  - description: <p>The ID of the pool. </p>
    name: poolId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The ID of the compute node. </p>
    name: nodeId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>Specifies what to do with currently running tasks. </p>
    name: nodeDisableSchedulingOption
    type: <xref href="com.microsoft.azure.batch.protocol.models.DisableComputeNodeSchedulingOption?alt=com.microsoft.azure.batch.protocol.models.DisableComputeNodeSchedulingOption&text=DisableComputeNodeSchedulingOption" data-throw-if-not-resolved="False"/>
  - description: <p>A collection of <xref uid="com.microsoft.azure.batch.BatchClientBehavior" data-throw-if-not-resolved="false" data-raw-source="BatchClientBehavior"></xref> instances that are applied to the Batch service request. </p>
    name: additionalBehaviors
    type: Iterable&lt;<xref href="com.microsoft.azure.batch.BatchClientBehavior?alt=com.microsoft.azure.batch.BatchClientBehavior&text=BatchClientBehavior" data-throw-if-not-resolved="False"/>&gt;
  exceptions:
  - type: <xref href="BatchErrorException?alt=BatchErrorException&text=BatchErrorException" data-throw-if-not-resolved="False"/>
    description: <p>Exception thrown when an error response is received from the Batch service. </p>
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
    description: <p>Exception thrown when there is an error in serialization/deserialization of data sent to/received from the Batch service. </p>
  summary: >-
    <p>Disables task scheduling on the specified compute node.</p>

    <p></p>
  syntax: public void disableComputeNodeScheduling(String poolId, String nodeId, DisableComputeNodeSchedulingOption nodeDisableSchedulingOption, Iterable<BatchClientBehavior> additionalBehaviors)
  uid: com.microsoft.azure.batch.ComputeNodeOperations.disableComputeNodeScheduling(String,String,DisableComputeNodeSchedulingOption,Iterable<BatchClientBehavior>)
- fullName: com.microsoft.azure.batch.ComputeNodeOperations.enableComputeNodeScheduling(String poolId, String nodeId)
  name: enableComputeNodeScheduling(String poolId, String nodeId)
  nameWithType: ComputeNodeOperations.enableComputeNodeScheduling(String poolId, String nodeId)
  parameters:
  - description: <p>The ID of the pool. </p>
    name: poolId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The ID of the compute node. </p>
    name: nodeId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="BatchErrorException?alt=BatchErrorException&text=BatchErrorException" data-throw-if-not-resolved="False"/>
    description: <p>Exception thrown when an error response is received from the Batch service. </p>
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
    description: <p>Exception thrown when there is an error in serialization/deserialization of data sent to/received from the Batch service. </p>
  summary: >-
    <p>Enables task scheduling on the specified compute node.</p>

    <p></p>
  syntax: public void enableComputeNodeScheduling(String poolId, String nodeId)
  uid: com.microsoft.azure.batch.ComputeNodeOperations.enableComputeNodeScheduling(String,String)
- fullName: com.microsoft.azure.batch.ComputeNodeOperations.enableComputeNodeScheduling(String poolId, String nodeId, Iterable<BatchClientBehavior> additionalBehaviors)
  name: enableComputeNodeScheduling(String poolId, String nodeId, Iterable<BatchClientBehavior> additionalBehaviors)
  nameWithType: ComputeNodeOperations.enableComputeNodeScheduling(String poolId, String nodeId, Iterable<BatchClientBehavior> additionalBehaviors)
  parameters:
  - description: <p>The ID of the pool. </p>
    name: poolId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The ID of the compute node. </p>
    name: nodeId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>A collection of <xref uid="com.microsoft.azure.batch.BatchClientBehavior" data-throw-if-not-resolved="false" data-raw-source="BatchClientBehavior"></xref> instances that are applied to the Batch service request. </p>
    name: additionalBehaviors
    type: Iterable&lt;<xref href="com.microsoft.azure.batch.BatchClientBehavior?alt=com.microsoft.azure.batch.BatchClientBehavior&text=BatchClientBehavior" data-throw-if-not-resolved="False"/>&gt;
  exceptions:
  - type: <xref href="BatchErrorException?alt=BatchErrorException&text=BatchErrorException" data-throw-if-not-resolved="False"/>
    description: <p>Exception thrown when an error response is received from the Batch service. </p>
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
    description: <p>Exception thrown when there is an error in serialization/deserialization of data sent to/received from the Batch service. </p>
  summary: >-
    <p>Enables task scheduling on the specified compute node.</p>

    <p></p>
  syntax: public void enableComputeNodeScheduling(String poolId, String nodeId, Iterable<BatchClientBehavior> additionalBehaviors)
  uid: com.microsoft.azure.batch.ComputeNodeOperations.enableComputeNodeScheduling(String,String,Iterable<BatchClientBehavior>)
- fullName: com.microsoft.azure.batch.ComputeNodeOperations.getComputeNode(String poolId, String nodeId)
  name: getComputeNode(String poolId, String nodeId)
  nameWithType: ComputeNodeOperations.getComputeNode(String poolId, String nodeId)
  parameters:
  - description: <p>The ID of the pool. </p>
    name: poolId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the ID of the compute node to get from the pool. </p>
    name: nodeId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="BatchErrorException?alt=BatchErrorException&text=BatchErrorException" data-throw-if-not-resolved="False"/>
    description: <p>Exception thrown when an error response is received from the Batch service. </p>
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
    description: <p>Exception thrown when there is an error in serialization/deserialization of data sent to/received from the Batch service. </p>
  returns:
    description: <p>A <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ComputeNode"></xref> containing information about the specified compute node. </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.ComputeNode?alt=com.microsoft.azure.batch.protocol.models.ComputeNode&text=ComputeNode" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the specified compute node.</p>

    <p></p>
  syntax: public ComputeNode getComputeNode(String poolId, String nodeId)
  uid: com.microsoft.azure.batch.ComputeNodeOperations.getComputeNode(String,String)
- fullName: com.microsoft.azure.batch.ComputeNodeOperations.getComputeNode(String poolId, String nodeId, DetailLevel detailLevel)
  name: getComputeNode(String poolId, String nodeId, DetailLevel detailLevel)
  nameWithType: ComputeNodeOperations.getComputeNode(String poolId, String nodeId, DetailLevel detailLevel)
  parameters:
  - description: <p>The ID of the pool. </p>
    name: poolId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The ID of the compute node to get from the pool. </p>
    name: nodeId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>A <xref uid="com.microsoft.azure.batch.DetailLevel" data-throw-if-not-resolved="false" data-raw-source="DetailLevel"></xref> used for controlling which properties are retrieved from the service. </p>
    name: detailLevel
    type: <xref href="com.microsoft.azure.batch.DetailLevel?alt=com.microsoft.azure.batch.DetailLevel&text=DetailLevel" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="BatchErrorException?alt=BatchErrorException&text=BatchErrorException" data-throw-if-not-resolved="False"/>
    description: <p>Exception thrown when an error response is received from the Batch service. </p>
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
    description: <p>Exception thrown when there is an error in serialization/deserialization of data sent to/received from the Batch service. </p>
  returns:
    description: <p>A <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ComputeNode"></xref> containing information about the specified compute node. </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.ComputeNode?alt=com.microsoft.azure.batch.protocol.models.ComputeNode&text=ComputeNode" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the specified compute node.</p>

    <p></p>
  syntax: public ComputeNode getComputeNode(String poolId, String nodeId, DetailLevel detailLevel)
  uid: com.microsoft.azure.batch.ComputeNodeOperations.getComputeNode(String,String,DetailLevel)
- fullName: com.microsoft.azure.batch.ComputeNodeOperations.getComputeNode(String poolId, String nodeId, DetailLevel detailLevel, Iterable<BatchClientBehavior> additionalBehaviors)
  name: getComputeNode(String poolId, String nodeId, DetailLevel detailLevel, Iterable<BatchClientBehavior> additionalBehaviors)
  nameWithType: ComputeNodeOperations.getComputeNode(String poolId, String nodeId, DetailLevel detailLevel, Iterable<BatchClientBehavior> additionalBehaviors)
  parameters:
  - description: <p>The ID of the pool. </p>
    name: poolId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The ID of the compute node to get from the pool. </p>
    name: nodeId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>A <xref uid="com.microsoft.azure.batch.DetailLevel" data-throw-if-not-resolved="false" data-raw-source="DetailLevel"></xref> used for controlling which properties are retrieved from the service. </p>
    name: detailLevel
    type: <xref href="com.microsoft.azure.batch.DetailLevel?alt=com.microsoft.azure.batch.DetailLevel&text=DetailLevel" data-throw-if-not-resolved="False"/>
  - description: <p>A collection of <xref uid="com.microsoft.azure.batch.BatchClientBehavior" data-throw-if-not-resolved="false" data-raw-source="BatchClientBehavior"></xref> instances that are applied to the Batch service request. </p>
    name: additionalBehaviors
    type: Iterable&lt;<xref href="com.microsoft.azure.batch.BatchClientBehavior?alt=com.microsoft.azure.batch.BatchClientBehavior&text=BatchClientBehavior" data-throw-if-not-resolved="False"/>&gt;
  exceptions:
  - type: <xref href="BatchErrorException?alt=BatchErrorException&text=BatchErrorException" data-throw-if-not-resolved="False"/>
    description: <p>Exception thrown when an error response is received from the Batch service. </p>
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
    description: <p>Exception thrown when there is an error in serialization/deserialization of data sent to/received from the Batch service. </p>
  returns:
    description: <p>A <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ComputeNode"></xref> containing information about the specified compute node. </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.ComputeNode?alt=com.microsoft.azure.batch.protocol.models.ComputeNode&text=ComputeNode" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the specified compute node.</p>

    <p></p>
  syntax: public ComputeNode getComputeNode(String poolId, String nodeId, DetailLevel detailLevel, Iterable<BatchClientBehavior> additionalBehaviors)
  uid: com.microsoft.azure.batch.ComputeNodeOperations.getComputeNode(String,String,DetailLevel,Iterable<BatchClientBehavior>)
- fullName: com.microsoft.azure.batch.ComputeNodeOperations.getComputeNodeRemoteDesktop(String poolId, String nodeId)
  name: getComputeNodeRemoteDesktop(String poolId, String nodeId)
  nameWithType: ComputeNodeOperations.getComputeNodeRemoteDesktop(String poolId, String nodeId)
  parameters:
  - description: <p>The ID of the pool that contains the compute node. </p>
    name: poolId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The ID of the compute node for which to get a Remote Desktop file. </p>
    name: nodeId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="BatchErrorException?alt=BatchErrorException&text=BatchErrorException" data-throw-if-not-resolved="False"/>
    description: <p>Exception thrown when an error response is received from the Batch service. </p>
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
    description: <p>Exception thrown when there is an error in serialization/deserialization of data sent to/received from the Batch service. </p>
  returns:
    description: <p>The RDP file contents. </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets a Remote Desktop Protocol (RDP) file for the specified node.</p>

    <p></p>
  syntax: public String getComputeNodeRemoteDesktop(String poolId, String nodeId)
  uid: com.microsoft.azure.batch.ComputeNodeOperations.getComputeNodeRemoteDesktop(String,String)
- fullName: com.microsoft.azure.batch.ComputeNodeOperations.getComputeNodeRemoteDesktop(String poolId, String nodeId, Iterable<BatchClientBehavior> additionalBehaviors)
  name: getComputeNodeRemoteDesktop(String poolId, String nodeId, Iterable<BatchClientBehavior> additionalBehaviors)
  nameWithType: ComputeNodeOperations.getComputeNodeRemoteDesktop(String poolId, String nodeId, Iterable<BatchClientBehavior> additionalBehaviors)
  parameters:
  - description: <p>The ID of the pool that contains the compute node. </p>
    name: poolId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The ID of the compute node for which to get a Remote Desktop file. </p>
    name: nodeId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>A collection of <xref uid="com.microsoft.azure.batch.BatchClientBehavior" data-throw-if-not-resolved="false" data-raw-source="BatchClientBehavior"></xref> instances that are applied to the Batch service request. </p>
    name: additionalBehaviors
    type: Iterable&lt;<xref href="com.microsoft.azure.batch.BatchClientBehavior?alt=com.microsoft.azure.batch.BatchClientBehavior&text=BatchClientBehavior" data-throw-if-not-resolved="False"/>&gt;
  exceptions:
  - type: <xref href="BatchErrorException?alt=BatchErrorException&text=BatchErrorException" data-throw-if-not-resolved="False"/>
    description: <p>Exception thrown when an error response is received from the Batch service. </p>
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
    description: <p>Exception thrown when there is an error in serialization/deserialization of data sent to/received from the Batch service. </p>
  returns:
    description: <p>The RDP file contents. </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets a Remote Desktop Protocol (RDP) file for the specified node.</p>

    <p></p>
  syntax: public String getComputeNodeRemoteDesktop(String poolId, String nodeId, Iterable<BatchClientBehavior> additionalBehaviors)
  uid: com.microsoft.azure.batch.ComputeNodeOperations.getComputeNodeRemoteDesktop(String,String,Iterable<BatchClientBehavior>)
- fullName: com.microsoft.azure.batch.ComputeNodeOperations.getComputeNodeRemoteLoginSettings(String poolId, String nodeId)
  name: getComputeNodeRemoteLoginSettings(String poolId, String nodeId)
  nameWithType: ComputeNodeOperations.getComputeNodeRemoteLoginSettings(String poolId, String nodeId)
  parameters:
  - description: <p>The ID of the pool that contains the compute node. </p>
    name: poolId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The ID of the compute node for which to get a remote login settings. </p>
    name: nodeId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="BatchErrorException?alt=BatchErrorException&text=BatchErrorException" data-throw-if-not-resolved="False"/>
    description: <p>Exception thrown when an error response is received from the Batch service. </p>
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
    description: <p>Exception thrown when there is an error in serialization/deserialization of data sent to/received from the Batch service. </p>
  returns:
    description: <p>The remote settings for the specified compute node. </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.ComputeNodeGetRemoteLoginSettingsResult?alt=com.microsoft.azure.batch.protocol.models.ComputeNodeGetRemoteLoginSettingsResult&text=ComputeNodeGetRemoteLoginSettingsResult" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the settings required for remote login to a compute node.</p>

    <p></p>
  syntax: public ComputeNodeGetRemoteLoginSettingsResult getComputeNodeRemoteLoginSettings(String poolId, String nodeId)
  uid: com.microsoft.azure.batch.ComputeNodeOperations.getComputeNodeRemoteLoginSettings(String,String)
- fullName: com.microsoft.azure.batch.ComputeNodeOperations.getComputeNodeRemoteLoginSettings(String poolId, String nodeId, Iterable<BatchClientBehavior> additionalBehaviors)
  name: getComputeNodeRemoteLoginSettings(String poolId, String nodeId, Iterable<BatchClientBehavior> additionalBehaviors)
  nameWithType: ComputeNodeOperations.getComputeNodeRemoteLoginSettings(String poolId, String nodeId, Iterable<BatchClientBehavior> additionalBehaviors)
  parameters:
  - description: <p>The ID of the pool that contains the compute node. </p>
    name: poolId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The ID of the compute node for which to get a remote login settings. </p>
    name: nodeId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>A collection of <xref uid="com.microsoft.azure.batch.BatchClientBehavior" data-throw-if-not-resolved="false" data-raw-source="BatchClientBehavior"></xref> instances that are applied to the Batch service request. </p>
    name: additionalBehaviors
    type: Iterable&lt;<xref href="com.microsoft.azure.batch.BatchClientBehavior?alt=com.microsoft.azure.batch.BatchClientBehavior&text=BatchClientBehavior" data-throw-if-not-resolved="False"/>&gt;
  exceptions:
  - type: <xref href="BatchErrorException?alt=BatchErrorException&text=BatchErrorException" data-throw-if-not-resolved="False"/>
    description: <p>Exception thrown when an error response is received from the Batch service. </p>
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
    description: <p>Exception thrown when there is an error in serialization/deserialization of data sent to/received from the Batch service. </p>
  returns:
    description: <p>The remote login settings for the specified compute node. </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.ComputeNodeGetRemoteLoginSettingsResult?alt=com.microsoft.azure.batch.protocol.models.ComputeNodeGetRemoteLoginSettingsResult&text=ComputeNodeGetRemoteLoginSettingsResult" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the settings required for remote login to a compute node.</p>

    <p></p>
  syntax: public ComputeNodeGetRemoteLoginSettingsResult getComputeNodeRemoteLoginSettings(String poolId, String nodeId, Iterable<BatchClientBehavior> additionalBehaviors)
  uid: com.microsoft.azure.batch.ComputeNodeOperations.getComputeNodeRemoteLoginSettings(String,String,Iterable<BatchClientBehavior>)
- fullName: com.microsoft.azure.batch.ComputeNodeOperations.listComputeNodes(String poolId)
  name: listComputeNodes(String poolId)
  nameWithType: ComputeNodeOperations.listComputeNodes(String poolId)
  parameters:
  - description: <p>The ID of the pool. </p>
    name: poolId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="BatchErrorException?alt=BatchErrorException&text=BatchErrorException" data-throw-if-not-resolved="False"/>
    description: <p>Exception thrown when an error response is received from the Batch service. </p>
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
    description: <p>Exception thrown when there is an error in serialization/deserialization of data sent to/received from the Batch service. </p>
  returns:
    description: <p>A list of <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ComputeNode"></xref> objects. </p>
    type: PagedList&lt;<xref href="com.microsoft.azure.batch.protocol.models.ComputeNode?alt=com.microsoft.azure.batch.protocol.models.ComputeNode&text=ComputeNode" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Lists the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="compute nodes"></xref> of the specified pool.</p>

    <p></p>
  syntax: public PagedList<ComputeNode> listComputeNodes(String poolId)
  uid: com.microsoft.azure.batch.ComputeNodeOperations.listComputeNodes(String)
- fullName: com.microsoft.azure.batch.ComputeNodeOperations.listComputeNodes(String poolId, DetailLevel detailLevel)
  name: listComputeNodes(String poolId, DetailLevel detailLevel)
  nameWithType: ComputeNodeOperations.listComputeNodes(String poolId, DetailLevel detailLevel)
  parameters:
  - description: <p>The ID of the pool. </p>
    name: poolId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>A <xref uid="com.microsoft.azure.batch.DetailLevel" data-throw-if-not-resolved="false" data-raw-source="DetailLevel"></xref> used for filtering the list and for controlling which properties are retrieved from the service. </p>
    name: detailLevel
    type: <xref href="com.microsoft.azure.batch.DetailLevel?alt=com.microsoft.azure.batch.DetailLevel&text=DetailLevel" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="BatchErrorException?alt=BatchErrorException&text=BatchErrorException" data-throw-if-not-resolved="False"/>
    description: <p>Exception thrown when an error response is received from the Batch service. </p>
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
    description: <p>Exception thrown when there is an error in serialization/deserialization of data sent to/received from the Batch service. </p>
  returns:
    description: <p>A list of <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ComputeNode"></xref> objects. </p>
    type: PagedList&lt;<xref href="com.microsoft.azure.batch.protocol.models.ComputeNode?alt=com.microsoft.azure.batch.protocol.models.ComputeNode&text=ComputeNode" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Lists the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="compute nodes"></xref> of the specified pool.</p>

    <p></p>
  syntax: public PagedList<ComputeNode> listComputeNodes(String poolId, DetailLevel detailLevel)
  uid: com.microsoft.azure.batch.ComputeNodeOperations.listComputeNodes(String,DetailLevel)
- fullName: com.microsoft.azure.batch.ComputeNodeOperations.listComputeNodes(String poolId, DetailLevel detailLevel, Iterable<BatchClientBehavior> additionalBehaviors)
  name: listComputeNodes(String poolId, DetailLevel detailLevel, Iterable<BatchClientBehavior> additionalBehaviors)
  nameWithType: ComputeNodeOperations.listComputeNodes(String poolId, DetailLevel detailLevel, Iterable<BatchClientBehavior> additionalBehaviors)
  parameters:
  - description: <p>The ID of the pool. </p>
    name: poolId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>A <xref uid="com.microsoft.azure.batch.DetailLevel" data-throw-if-not-resolved="false" data-raw-source="DetailLevel"></xref> used for filtering the list and for controlling which properties are retrieved from the service. </p>
    name: detailLevel
    type: <xref href="com.microsoft.azure.batch.DetailLevel?alt=com.microsoft.azure.batch.DetailLevel&text=DetailLevel" data-throw-if-not-resolved="False"/>
  - description: <p>A collection of <xref uid="com.microsoft.azure.batch.BatchClientBehavior" data-throw-if-not-resolved="false" data-raw-source="BatchClientBehavior"></xref> instances that are applied to the Batch service request. </p>
    name: additionalBehaviors
    type: Iterable&lt;<xref href="com.microsoft.azure.batch.BatchClientBehavior?alt=com.microsoft.azure.batch.BatchClientBehavior&text=BatchClientBehavior" data-throw-if-not-resolved="False"/>&gt;
  exceptions:
  - type: <xref href="BatchErrorException?alt=BatchErrorException&text=BatchErrorException" data-throw-if-not-resolved="False"/>
    description: <p>Exception thrown when an error response is received from the Batch service. </p>
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
    description: <p>Exception thrown when there is an error in serialization/deserialization of data sent to/received from the Batch service. </p>
  returns:
    description: <p>A list of <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ComputeNode"></xref> objects. </p>
    type: PagedList&lt;<xref href="com.microsoft.azure.batch.protocol.models.ComputeNode?alt=com.microsoft.azure.batch.protocol.models.ComputeNode&text=ComputeNode" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Lists the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="compute nodes"></xref> of the specified pool.</p>

    <p></p>
  syntax: public PagedList<ComputeNode> listComputeNodes(String poolId, DetailLevel detailLevel, Iterable<BatchClientBehavior> additionalBehaviors)
  uid: com.microsoft.azure.batch.ComputeNodeOperations.listComputeNodes(String,DetailLevel,Iterable<BatchClientBehavior>)
- fullName: com.microsoft.azure.batch.ComputeNodeOperations.rebootComputeNode(String poolId, String nodeId)
  name: rebootComputeNode(String poolId, String nodeId)
  nameWithType: ComputeNodeOperations.rebootComputeNode(String poolId, String nodeId)
  parameters:
  - description: <p>The ID of the pool that contains the compute node. </p>
    name: poolId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The ID of the compute node to reboot. </p>
    name: nodeId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="BatchErrorException?alt=BatchErrorException&text=BatchErrorException" data-throw-if-not-resolved="False"/>
    description: <p>Exception thrown when an error response is received from the Batch service. </p>
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
    description: <p>Exception thrown when there is an error in serialization/deserialization of data sent to/received from the Batch service. </p>
  summary: >-
    <p>Reboots the specified compute node. </p>

    <p>You can reboot a compute node only when it is in the <xref uid="com.microsoft.azure.batch.protocol.models.ComputeNodeState.IDLE" data-throw-if-not-resolved="false" data-raw-source="Idle"></xref> or <xref uid="com.microsoft.azure.batch.protocol.models.ComputeNodeState.RUNNING" data-throw-if-not-resolved="false" data-raw-source="Running"></xref> state.</p>

    <p></p>
  syntax: public void rebootComputeNode(String poolId, String nodeId)
  uid: com.microsoft.azure.batch.ComputeNodeOperations.rebootComputeNode(String,String)
- fullName: com.microsoft.azure.batch.ComputeNodeOperations.rebootComputeNode(String poolId, String nodeId, ComputeNodeRebootOption nodeRebootOption)
  name: rebootComputeNode(String poolId, String nodeId, ComputeNodeRebootOption nodeRebootOption)
  nameWithType: ComputeNodeOperations.rebootComputeNode(String poolId, String nodeId, ComputeNodeRebootOption nodeRebootOption)
  parameters:
  - description: <p>The ID of the pool that contains the compute node. </p>
    name: poolId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The ID of the compute node to reboot. </p>
    name: nodeId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>Specifies when to reboot the node and what to do with currently running tasks. </p>
    name: nodeRebootOption
    type: <xref href="com.microsoft.azure.batch.protocol.models.ComputeNodeRebootOption?alt=com.microsoft.azure.batch.protocol.models.ComputeNodeRebootOption&text=ComputeNodeRebootOption" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="BatchErrorException?alt=BatchErrorException&text=BatchErrorException" data-throw-if-not-resolved="False"/>
    description: <p>Exception thrown when an error response is received from the Batch service. </p>
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
    description: <p>Exception thrown when there is an error in serialization/deserialization of data sent to/received from the Batch service. </p>
  summary: >-
    <p>Reboots the specified compute node. </p>

    <p>You can reboot a compute node only when it is in the <xref uid="com.microsoft.azure.batch.protocol.models.ComputeNodeState.IDLE" data-throw-if-not-resolved="false" data-raw-source="Idle"></xref> or <xref uid="com.microsoft.azure.batch.protocol.models.ComputeNodeState.RUNNING" data-throw-if-not-resolved="false" data-raw-source="Running"></xref> state.</p>

    <p></p>
  syntax: public void rebootComputeNode(String poolId, String nodeId, ComputeNodeRebootOption nodeRebootOption)
  uid: com.microsoft.azure.batch.ComputeNodeOperations.rebootComputeNode(String,String,ComputeNodeRebootOption)
- fullName: com.microsoft.azure.batch.ComputeNodeOperations.rebootComputeNode(String poolId, String nodeId, ComputeNodeRebootOption nodeRebootOption, Iterable<BatchClientBehavior> additionalBehaviors)
  name: rebootComputeNode(String poolId, String nodeId, ComputeNodeRebootOption nodeRebootOption, Iterable<BatchClientBehavior> additionalBehaviors)
  nameWithType: ComputeNodeOperations.rebootComputeNode(String poolId, String nodeId, ComputeNodeRebootOption nodeRebootOption, Iterable<BatchClientBehavior> additionalBehaviors)
  parameters:
  - description: <p>The ID of the pool that contains the compute node. </p>
    name: poolId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The ID of the compute node to reboot. </p>
    name: nodeId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>Specifies when to reboot the node and what to do with currently running tasks. </p>
    name: nodeRebootOption
    type: <xref href="com.microsoft.azure.batch.protocol.models.ComputeNodeRebootOption?alt=com.microsoft.azure.batch.protocol.models.ComputeNodeRebootOption&text=ComputeNodeRebootOption" data-throw-if-not-resolved="False"/>
  - description: <p>A collection of <xref uid="com.microsoft.azure.batch.BatchClientBehavior" data-throw-if-not-resolved="false" data-raw-source="BatchClientBehavior"></xref> instances that are applied to the Batch service request. </p>
    name: additionalBehaviors
    type: Iterable&lt;<xref href="com.microsoft.azure.batch.BatchClientBehavior?alt=com.microsoft.azure.batch.BatchClientBehavior&text=BatchClientBehavior" data-throw-if-not-resolved="False"/>&gt;
  exceptions:
  - type: <xref href="BatchErrorException?alt=BatchErrorException&text=BatchErrorException" data-throw-if-not-resolved="False"/>
    description: <p>Exception thrown when an error response is received from the Batch service. </p>
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
    description: <p>Exception thrown when there is an error in serialization/deserialization of data sent to/received from the Batch service. </p>
  summary: >-
    <p>Reboots the specified compute node. </p>

    <p>You can reboot a compute node only when it is in the <xref uid="com.microsoft.azure.batch.protocol.models.ComputeNodeState.IDLE" data-throw-if-not-resolved="false" data-raw-source="Idle"></xref> or <xref uid="com.microsoft.azure.batch.protocol.models.ComputeNodeState.RUNNING" data-throw-if-not-resolved="false" data-raw-source="Running"></xref> state.</p>

    <p></p>
  syntax: public void rebootComputeNode(String poolId, String nodeId, ComputeNodeRebootOption nodeRebootOption, Iterable<BatchClientBehavior> additionalBehaviors)
  uid: com.microsoft.azure.batch.ComputeNodeOperations.rebootComputeNode(String,String,ComputeNodeRebootOption,Iterable<BatchClientBehavior>)
- fullName: com.microsoft.azure.batch.ComputeNodeOperations.reimageComputeNode(String poolId, String nodeId)
  name: reimageComputeNode(String poolId, String nodeId)
  nameWithType: ComputeNodeOperations.reimageComputeNode(String poolId, String nodeId)
  parameters:
  - description: <p>The ID of the pool that contains the compute node. </p>
    name: poolId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The ID of the compute node to reimage. </p>
    name: nodeId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="BatchErrorException?alt=BatchErrorException&text=BatchErrorException" data-throw-if-not-resolved="False"/>
    description: <p>Exception thrown when an error response is received from the Batch service. </p>
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
    description: <p>Exception thrown when there is an error in serialization/deserialization of data sent to/received from the Batch service. </p>
  summary: >-
    <p>Reinstalls the operating system on the specified compute node. </p>

    <p>You can reimage a compute node only when it is in the <xref uid="com.microsoft.azure.batch.protocol.models.ComputeNodeState.IDLE" data-throw-if-not-resolved="false" data-raw-source="Idle"></xref> or <xref uid="com.microsoft.azure.batch.protocol.models.ComputeNodeState.RUNNING" data-throw-if-not-resolved="false" data-raw-source="Running"></xref> state.</p>

    <p></p>
  syntax: public void reimageComputeNode(String poolId, String nodeId)
  uid: com.microsoft.azure.batch.ComputeNodeOperations.reimageComputeNode(String,String)
- fullName: com.microsoft.azure.batch.ComputeNodeOperations.reimageComputeNode(String poolId, String nodeId, ComputeNodeReimageOption nodeReimageOption)
  name: reimageComputeNode(String poolId, String nodeId, ComputeNodeReimageOption nodeReimageOption)
  nameWithType: ComputeNodeOperations.reimageComputeNode(String poolId, String nodeId, ComputeNodeReimageOption nodeReimageOption)
  parameters:
  - description: <p>The ID of the pool that contains the compute node. </p>
    name: poolId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The ID of the compute node to reimage. </p>
    name: nodeId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>Specifies when to reimage the node and what to do with currently running tasks. </p>
    name: nodeReimageOption
    type: <xref href="com.microsoft.azure.batch.protocol.models.ComputeNodeReimageOption?alt=com.microsoft.azure.batch.protocol.models.ComputeNodeReimageOption&text=ComputeNodeReimageOption" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="BatchErrorException?alt=BatchErrorException&text=BatchErrorException" data-throw-if-not-resolved="False"/>
    description: <p>Exception thrown when an error response is received from the Batch service. </p>
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
    description: <p>Exception thrown when there is an error in serialization/deserialization of data sent to/received from the Batch service. </p>
  summary: >-
    <p>Reinstalls the operating system on the specified compute node. </p>

    <p>You can reimage a compute node only when it is in the <xref uid="com.microsoft.azure.batch.protocol.models.ComputeNodeState.IDLE" data-throw-if-not-resolved="false" data-raw-source="Idle"></xref> or <xref uid="com.microsoft.azure.batch.protocol.models.ComputeNodeState.RUNNING" data-throw-if-not-resolved="false" data-raw-source="Running"></xref> state.</p>

    <p></p>
  syntax: public void reimageComputeNode(String poolId, String nodeId, ComputeNodeReimageOption nodeReimageOption)
  uid: com.microsoft.azure.batch.ComputeNodeOperations.reimageComputeNode(String,String,ComputeNodeReimageOption)
- fullName: com.microsoft.azure.batch.ComputeNodeOperations.reimageComputeNode(String poolId, String nodeId, ComputeNodeReimageOption nodeReimageOption, Iterable<BatchClientBehavior> additionalBehaviors)
  name: reimageComputeNode(String poolId, String nodeId, ComputeNodeReimageOption nodeReimageOption, Iterable<BatchClientBehavior> additionalBehaviors)
  nameWithType: ComputeNodeOperations.reimageComputeNode(String poolId, String nodeId, ComputeNodeReimageOption nodeReimageOption, Iterable<BatchClientBehavior> additionalBehaviors)
  parameters:
  - description: <p>The ID of the pool that contains the compute node. </p>
    name: poolId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The ID of the compute node to reimage. </p>
    name: nodeId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>Specifies when to reimage the node and what to do with currently running tasks. </p>
    name: nodeReimageOption
    type: <xref href="com.microsoft.azure.batch.protocol.models.ComputeNodeReimageOption?alt=com.microsoft.azure.batch.protocol.models.ComputeNodeReimageOption&text=ComputeNodeReimageOption" data-throw-if-not-resolved="False"/>
  - description: <p>A collection of <xref uid="com.microsoft.azure.batch.BatchClientBehavior" data-throw-if-not-resolved="false" data-raw-source="BatchClientBehavior"></xref> instances that are applied to the Batch service request. </p>
    name: additionalBehaviors
    type: Iterable&lt;<xref href="com.microsoft.azure.batch.BatchClientBehavior?alt=com.microsoft.azure.batch.BatchClientBehavior&text=BatchClientBehavior" data-throw-if-not-resolved="False"/>&gt;
  exceptions:
  - type: <xref href="BatchErrorException?alt=BatchErrorException&text=BatchErrorException" data-throw-if-not-resolved="False"/>
    description: <p>Exception thrown when an error response is received from the Batch service. </p>
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
    description: <p>Exception thrown when there is an error in serialization/deserialization of data sent to/received from the Batch service. </p>
  summary: >-
    <p>Reinstalls the operating system on the specified compute node. </p>

    <p>You can reimage a compute node only when it is in the <xref uid="com.microsoft.azure.batch.protocol.models.ComputeNodeState.IDLE" data-throw-if-not-resolved="false" data-raw-source="Idle"></xref> or <xref uid="com.microsoft.azure.batch.protocol.models.ComputeNodeState.RUNNING" data-throw-if-not-resolved="false" data-raw-source="Running"></xref> state.</p>

    <p></p>
  syntax: public void reimageComputeNode(String poolId, String nodeId, ComputeNodeReimageOption nodeReimageOption, Iterable<BatchClientBehavior> additionalBehaviors)
  uid: com.microsoft.azure.batch.ComputeNodeOperations.reimageComputeNode(String,String,ComputeNodeReimageOption,Iterable<BatchClientBehavior>)
- fullName: com.microsoft.azure.batch.ComputeNodeOperations.updateComputeNodeUser(String poolId, String nodeId, String userName, String sshPublicKey)
  name: updateComputeNodeUser(String poolId, String nodeId, String userName, String sshPublicKey)
  nameWithType: ComputeNodeOperations.updateComputeNodeUser(String poolId, String nodeId, String userName, String sshPublicKey)
  parameters:
  - description: <p>The ID of the pool that contains the compute node. </p>
    name: poolId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The ID of the compute node where the user account will be updated. </p>
    name: nodeId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the user account to update. </p>
    name: userName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The SSH public key that can be used for remote login to the compute node. If null, the SSH public key is removed. </p>
    name: sshPublicKey
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="BatchErrorException?alt=BatchErrorException&text=BatchErrorException" data-throw-if-not-resolved="False"/>
    description: <p>Exception thrown when an error response is received from the Batch service. </p>
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
    description: <p>Exception thrown when there is an error in serialization/deserialization of data sent to/received from the Batch service. </p>
  summary: >-
    <p>Updates the specified user account on the specified compute node.</p>

    <p></p>
  syntax: public void updateComputeNodeUser(String poolId, String nodeId, String userName, String sshPublicKey)
  uid: com.microsoft.azure.batch.ComputeNodeOperations.updateComputeNodeUser(String,String,String,String)
- fullName: com.microsoft.azure.batch.ComputeNodeOperations.updateComputeNodeUser(String poolId, String nodeId, String userName, String password, DateTime expiryTime)
  name: updateComputeNodeUser(String poolId, String nodeId, String userName, String password, DateTime expiryTime)
  nameWithType: ComputeNodeOperations.updateComputeNodeUser(String poolId, String nodeId, String userName, String password, DateTime expiryTime)
  parameters:
  - description: <p>The ID of the pool that contains the compute node. </p>
    name: poolId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The ID of the compute node where the user account will be updated. </p>
    name: nodeId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the user account to update. </p>
    name: userName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The password of the account. If null, the password is removed. </p>
    name: password
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The time at which the account should expire. If null, the expiry time is replaced with its default value. </p>
    name: expiryTime
    type: <xref href="DateTime?alt=DateTime&text=DateTime" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="BatchErrorException?alt=BatchErrorException&text=BatchErrorException" data-throw-if-not-resolved="False"/>
    description: <p>Exception thrown when an error response is received from the Batch service. </p>
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
    description: <p>Exception thrown when there is an error in serialization/deserialization of data sent to/received from the Batch service. </p>
  summary: >-
    <p>Updates the specified user account on the specified compute node.</p>

    <p></p>
  syntax: public void updateComputeNodeUser(String poolId, String nodeId, String userName, String password, DateTime expiryTime)
  uid: com.microsoft.azure.batch.ComputeNodeOperations.updateComputeNodeUser(String,String,String,String,DateTime)
- fullName: com.microsoft.azure.batch.ComputeNodeOperations.updateComputeNodeUser(String poolId, String nodeId, String userName, String password, DateTime expiryTime, Iterable<BatchClientBehavior> additionalBehaviors)
  name: updateComputeNodeUser(String poolId, String nodeId, String userName, String password, DateTime expiryTime, Iterable<BatchClientBehavior> additionalBehaviors)
  nameWithType: ComputeNodeOperations.updateComputeNodeUser(String poolId, String nodeId, String userName, String password, DateTime expiryTime, Iterable<BatchClientBehavior> additionalBehaviors)
  parameters:
  - description: <p>The ID of the pool that contains the compute node. </p>
    name: poolId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The ID of the compute node where the user account will be updated. </p>
    name: nodeId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the user account to update. </p>
    name: userName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The password of the account. If null, the password is removed. </p>
    name: password
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The time at which the account should expire. If null, the expiry time is replaced with its default value. </p>
    name: expiryTime
    type: <xref href="DateTime?alt=DateTime&text=DateTime" data-throw-if-not-resolved="False"/>
  - description: <p>A collection of <xref uid="com.microsoft.azure.batch.BatchClientBehavior" data-throw-if-not-resolved="false" data-raw-source="BatchClientBehavior"></xref> instances that are applied to the Batch service request. </p>
    name: additionalBehaviors
    type: Iterable&lt;<xref href="com.microsoft.azure.batch.BatchClientBehavior?alt=com.microsoft.azure.batch.BatchClientBehavior&text=BatchClientBehavior" data-throw-if-not-resolved="False"/>&gt;
  exceptions:
  - type: <xref href="BatchErrorException?alt=BatchErrorException&text=BatchErrorException" data-throw-if-not-resolved="False"/>
    description: <p>Exception thrown when an error response is received from the Batch service. </p>
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
    description: <p>Exception thrown when there is an error in serialization/deserialization of data sent to/received from the Batch service. </p>
  summary: >-
    <p>Updates the specified user account on the specified compute node.</p>

    <p></p>
  syntax: public void updateComputeNodeUser(String poolId, String nodeId, String userName, String password, DateTime expiryTime, Iterable<BatchClientBehavior> additionalBehaviors)
  uid: com.microsoft.azure.batch.ComputeNodeOperations.updateComputeNodeUser(String,String,String,String,DateTime,Iterable<BatchClientBehavior>)
- fullName: com.microsoft.azure.batch.ComputeNodeOperations.updateComputeNodeUser(String poolId, String nodeId, String userName, String sshPublicKey, Iterable<BatchClientBehavior> additionalBehaviors)
  name: updateComputeNodeUser(String poolId, String nodeId, String userName, String sshPublicKey, Iterable<BatchClientBehavior> additionalBehaviors)
  nameWithType: ComputeNodeOperations.updateComputeNodeUser(String poolId, String nodeId, String userName, String sshPublicKey, Iterable<BatchClientBehavior> additionalBehaviors)
  parameters:
  - description: <p>The ID of the pool that contains the compute node. </p>
    name: poolId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The ID of the compute node where the user account will be updated. </p>
    name: nodeId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the user account to update. </p>
    name: userName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The SSH public key that can be used for remote login to the compute node. If null, the SSH public key is removed. </p>
    name: sshPublicKey
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>A collection of <xref uid="com.microsoft.azure.batch.BatchClientBehavior" data-throw-if-not-resolved="false" data-raw-source="BatchClientBehavior"></xref> instances that are applied to the Batch service request. </p>
    name: additionalBehaviors
    type: Iterable&lt;<xref href="com.microsoft.azure.batch.BatchClientBehavior?alt=com.microsoft.azure.batch.BatchClientBehavior&text=BatchClientBehavior" data-throw-if-not-resolved="False"/>&gt;
  exceptions:
  - type: <xref href="BatchErrorException?alt=BatchErrorException&text=BatchErrorException" data-throw-if-not-resolved="False"/>
    description: <p>Exception thrown when an error response is received from the Batch service. </p>
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
    description: <p>Exception thrown when there is an error in serialization/deserialization of data sent to/received from the Batch service. </p>
  summary: >-
    <p>Updates the specified user account on the specified compute node.</p>

    <p></p>
  syntax: public void updateComputeNodeUser(String poolId, String nodeId, String userName, String sshPublicKey, Iterable<BatchClientBehavior> additionalBehaviors)
  uid: com.microsoft.azure.batch.ComputeNodeOperations.updateComputeNodeUser(String,String,String,String,Iterable<BatchClientBehavior>)
- fullName: com.microsoft.azure.batch.ComputeNodeOperations.uploadBatchServiceLogs(String poolId, String nodeId, String containerUrl, DateTime startTime)
  name: uploadBatchServiceLogs(String poolId, String nodeId, String containerUrl, DateTime startTime)
  nameWithType: ComputeNodeOperations.uploadBatchServiceLogs(String poolId, String nodeId, String containerUrl, DateTime startTime)
  parameters:
  - description: <p>The ID of the pool that contains the compute node. </p>
    name: poolId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The ID of the compute node from which you want to upload the Azure Batch service log files. </p>
    name: nodeId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The URL of the container within Azure Blob Storage to which to upload the Batch Service log file(s). </p>
    name: containerUrl
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The start of the time range from which to upload Batch Service log file(s). </p>
    name: startTime
    type: <xref href="DateTime?alt=DateTime&text=DateTime" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="BatchErrorException?alt=BatchErrorException&text=BatchErrorException" data-throw-if-not-resolved="False"/>
    description: <p>Exception thrown when an error response is received from the Batch service. </p>
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
    description: <p>Exception thrown when there is an error in serialization/deserialization of data sent to/received from the Batch service. </p>
  returns:
    description: <p>The result of uploading Batch service log files from a specific compute node. </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.UploadBatchServiceLogsResult?alt=com.microsoft.azure.batch.protocol.models.UploadBatchServiceLogsResult&text=UploadBatchServiceLogsResult" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Upload Azure Batch service log files from the specified compute node to Azure Blob Storage. This is for gathering Azure Batch service log files in an automated fashion from nodes if you are experiencing an error and wish to escalate to Azure support. The Azure Batch service log files should be shared with Azure support to aid in debugging issues with the Batch service.</p>

    <p></p>
  syntax: public UploadBatchServiceLogsResult uploadBatchServiceLogs(String poolId, String nodeId, String containerUrl, DateTime startTime)
  uid: com.microsoft.azure.batch.ComputeNodeOperations.uploadBatchServiceLogs(String,String,String,DateTime)
- fullName: com.microsoft.azure.batch.ComputeNodeOperations.uploadBatchServiceLogs(String poolId, String nodeId, String containerUrl, DateTime startTime, DateTime endTime, Iterable<BatchClientBehavior> additionalBehaviors)
  name: uploadBatchServiceLogs(String poolId, String nodeId, String containerUrl, DateTime startTime, DateTime endTime, Iterable<BatchClientBehavior> additionalBehaviors)
  nameWithType: ComputeNodeOperations.uploadBatchServiceLogs(String poolId, String nodeId, String containerUrl, DateTime startTime, DateTime endTime, Iterable<BatchClientBehavior> additionalBehaviors)
  parameters:
  - description: <p>The ID of the pool that contains the compute node. </p>
    name: poolId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The ID of the compute node from which you want to upload the Azure Batch service log files. </p>
    name: nodeId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The URL of the container within Azure Blob Storage to which to upload the Batch Service log file(s). </p>
    name: containerUrl
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The start of the time range from which to upload Batch Service log file(s). </p>
    name: startTime
    type: <xref href="DateTime?alt=DateTime&text=DateTime" data-throw-if-not-resolved="False"/>
  - description: <p>The end of the time range from which to upload Batch Service log file(s). </p>
    name: endTime
    type: <xref href="DateTime?alt=DateTime&text=DateTime" data-throw-if-not-resolved="False"/>
  - description: <p>A collection of <xref uid="com.microsoft.azure.batch.BatchClientBehavior" data-throw-if-not-resolved="false" data-raw-source="BatchClientBehavior"></xref> instances that are applied to the Batch service request. </p>
    name: additionalBehaviors
    type: Iterable&lt;<xref href="com.microsoft.azure.batch.BatchClientBehavior?alt=com.microsoft.azure.batch.BatchClientBehavior&text=BatchClientBehavior" data-throw-if-not-resolved="False"/>&gt;
  exceptions:
  - type: <xref href="BatchErrorException?alt=BatchErrorException&text=BatchErrorException" data-throw-if-not-resolved="False"/>
    description: <p>Exception thrown when an error response is received from the Batch service. </p>
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
    description: <p>Exception thrown when there is an error in serialization/deserialization of data sent to/received from the Batch service. </p>
  returns:
    description: <p>The result of uploading Batch service log files from a specific compute node. </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.UploadBatchServiceLogsResult?alt=com.microsoft.azure.batch.protocol.models.UploadBatchServiceLogsResult&text=UploadBatchServiceLogsResult" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Upload Azure Batch service log files from the specified compute node to Azure Blob Storage. This is for gathering Azure Batch service log files in an automated fashion from nodes if you are experiencing an error and wish to escalate to Azure support. The Azure Batch service log files should be shared with Azure support to aid in debugging issues with the Batch service.</p>

    <p></p>
  syntax: public UploadBatchServiceLogsResult uploadBatchServiceLogs(String poolId, String nodeId, String containerUrl, DateTime startTime, DateTime endTime, Iterable<BatchClientBehavior> additionalBehaviors)
  uid: com.microsoft.azure.batch.ComputeNodeOperations.uploadBatchServiceLogs(String,String,String,DateTime,DateTime,Iterable<BatchClientBehavior>)
- fullName: com.microsoft.azure.batch.ComputeNodeOperations.withCustomBehaviors(Collection<BatchClientBehavior> behaviors)
  name: withCustomBehaviors(Collection<BatchClientBehavior> behaviors)
  nameWithType: ComputeNodeOperations.withCustomBehaviors(Collection<BatchClientBehavior> behaviors)
  overridden: com.microsoft.azure.batch.IInheritedBehaviors.withCustomBehaviors(Collection<BatchClientBehavior>)
  parameters:
  - description: <p>The collection of <xref uid="com.microsoft.azure.batch.BatchClientBehavior" data-throw-if-not-resolved="false" data-raw-source="BatchClientBehavior"></xref> instances. </p>
    name: behaviors
    type: Collection&lt;<xref href="com.microsoft.azure.batch.BatchClientBehavior?alt=com.microsoft.azure.batch.BatchClientBehavior&text=BatchClientBehavior" data-throw-if-not-resolved="False"/>&gt;
  returns:
    description: <p>The current instance. </p>
    type: <xref href="com.microsoft.azure.batch.IInheritedBehaviors?alt=com.microsoft.azure.batch.IInheritedBehaviors&text=IInheritedBehaviors" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Sets a collection of behaviors that modify or customize requests to the Batch service.</p>

    <p></p>
  syntax: public IInheritedBehaviors withCustomBehaviors(Collection<BatchClientBehavior> behaviors)
  uid: com.microsoft.azure.batch.ComputeNodeOperations.withCustomBehaviors(Collection<BatchClientBehavior>)
nameWithType: ComputeNodeOperations
syntax: public class ComputeNodeOperations implements IInheritedBehaviors
type: class
uid: com.microsoft.azure.batch.ComputeNodeOperations
fullName: com.microsoft.azure.batch.ComputeNodeOperations
name: ComputeNodeOperations
package: com.microsoft.azure.batch
summary: <p>Performs compute node-related operations on an Azure Batch account. </p>
metadata: {}
