### YamlMime:JavaType
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
methods:
- fullName: com.microsoft.azure.management.compute.OSProfile.adminPassword()
  name: adminPassword()
  nameWithType: OSProfile.adminPassword()
  returns:
    description: <p>the adminPassword value </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the adminPassword value.</p>

    <p></p>
  syntax: public String adminPassword()
  uid: com.microsoft.azure.management.compute.OSProfile.adminPassword()
- fullName: com.microsoft.azure.management.compute.OSProfile.adminUsername()
  name: adminUsername()
  nameWithType: OSProfile.adminUsername()
  returns:
    description: <p>the adminUsername value </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the adminUsername value.</p>

    <p></p>
  syntax: public String adminUsername()
  uid: com.microsoft.azure.management.compute.OSProfile.adminUsername()
- fullName: com.microsoft.azure.management.compute.OSProfile.computerName()
  name: computerName()
  nameWithType: OSProfile.computerName()
  returns:
    description: <p>the computerName value </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the computerName value.</p>

    <p></p>
  syntax: public String computerName()
  uid: com.microsoft.azure.management.compute.OSProfile.computerName()
- fullName: com.microsoft.azure.management.compute.OSProfile.customData()
  name: customData()
  nameWithType: OSProfile.customData()
  returns:
    description: <p>the customData value </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the customData value.</p>

    <p></p>
  syntax: public String customData()
  uid: com.microsoft.azure.management.compute.OSProfile.customData()
- fullName: com.microsoft.azure.management.compute.OSProfile.linuxConfiguration()
  name: linuxConfiguration()
  nameWithType: OSProfile.linuxConfiguration()
  returns:
    description: <p>the linuxConfiguration value </p>
    type: <xref href="com.microsoft.azure.management.compute.LinuxConfiguration?alt=com.microsoft.azure.management.compute.LinuxConfiguration&text=LinuxConfiguration" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the linuxConfiguration value.</p>

    <p></p>
  syntax: public LinuxConfiguration linuxConfiguration()
  uid: com.microsoft.azure.management.compute.OSProfile.linuxConfiguration()
- fullName: com.microsoft.azure.management.compute.OSProfile.secrets()
  name: secrets()
  nameWithType: OSProfile.secrets()
  returns:
    description: <p>the secrets value </p>
    type: List&lt;<xref href="com.microsoft.azure.management.compute.VaultSecretGroup?alt=com.microsoft.azure.management.compute.VaultSecretGroup&text=VaultSecretGroup" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Get the secrets value.</p>

    <p></p>
  syntax: public List<VaultSecretGroup> secrets()
  uid: com.microsoft.azure.management.compute.OSProfile.secrets()
- fullName: com.microsoft.azure.management.compute.OSProfile.windowsConfiguration()
  name: windowsConfiguration()
  nameWithType: OSProfile.windowsConfiguration()
  returns:
    description: <p>the windowsConfiguration value </p>
    type: <xref href="com.microsoft.azure.management.compute.WindowsConfiguration?alt=com.microsoft.azure.management.compute.WindowsConfiguration&text=WindowsConfiguration" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the windowsConfiguration value.</p>

    <p></p>
  syntax: public WindowsConfiguration windowsConfiguration()
  uid: com.microsoft.azure.management.compute.OSProfile.windowsConfiguration()
- fullName: com.microsoft.azure.management.compute.OSProfile.withAdminPassword(String adminPassword)
  name: withAdminPassword(String adminPassword)
  nameWithType: OSProfile.withAdminPassword(String adminPassword)
  parameters:
  - description: <p>the adminPassword value to set </p>
    name: adminPassword
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the OSProfile object itself. </p>
    type: <xref href="com.microsoft.azure.management.compute.OSProfile?alt=com.microsoft.azure.management.compute.OSProfile&text=OSProfile" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the adminPassword value.</p>

    <p></p>
  syntax: public OSProfile withAdminPassword(String adminPassword)
  uid: com.microsoft.azure.management.compute.OSProfile.withAdminPassword(String)
- fullName: com.microsoft.azure.management.compute.OSProfile.withAdminUsername(String adminUsername)
  name: withAdminUsername(String adminUsername)
  nameWithType: OSProfile.withAdminUsername(String adminUsername)
  parameters:
  - description: <p>the adminUsername value to set </p>
    name: adminUsername
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the OSProfile object itself. </p>
    type: <xref href="com.microsoft.azure.management.compute.OSProfile?alt=com.microsoft.azure.management.compute.OSProfile&text=OSProfile" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the adminUsername value.</p>

    <p></p>
  syntax: public OSProfile withAdminUsername(String adminUsername)
  uid: com.microsoft.azure.management.compute.OSProfile.withAdminUsername(String)
- fullName: com.microsoft.azure.management.compute.OSProfile.withComputerName(String computerName)
  name: withComputerName(String computerName)
  nameWithType: OSProfile.withComputerName(String computerName)
  parameters:
  - description: <p>the computerName value to set </p>
    name: computerName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the OSProfile object itself. </p>
    type: <xref href="com.microsoft.azure.management.compute.OSProfile?alt=com.microsoft.azure.management.compute.OSProfile&text=OSProfile" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the computerName value.</p>

    <p></p>
  syntax: public OSProfile withComputerName(String computerName)
  uid: com.microsoft.azure.management.compute.OSProfile.withComputerName(String)
- fullName: com.microsoft.azure.management.compute.OSProfile.withCustomData(String customData)
  name: withCustomData(String customData)
  nameWithType: OSProfile.withCustomData(String customData)
  parameters:
  - description: <p>the customData value to set </p>
    name: customData
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the OSProfile object itself. </p>
    type: <xref href="com.microsoft.azure.management.compute.OSProfile?alt=com.microsoft.azure.management.compute.OSProfile&text=OSProfile" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the customData value.</p>

    <p></p>
  syntax: public OSProfile withCustomData(String customData)
  uid: com.microsoft.azure.management.compute.OSProfile.withCustomData(String)
- fullName: com.microsoft.azure.management.compute.OSProfile.withLinuxConfiguration(LinuxConfiguration linuxConfiguration)
  name: withLinuxConfiguration(LinuxConfiguration linuxConfiguration)
  nameWithType: OSProfile.withLinuxConfiguration(LinuxConfiguration linuxConfiguration)
  parameters:
  - description: <p>the linuxConfiguration value to set </p>
    name: linuxConfiguration
    type: <xref href="com.microsoft.azure.management.compute.LinuxConfiguration?alt=com.microsoft.azure.management.compute.LinuxConfiguration&text=LinuxConfiguration" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the OSProfile object itself. </p>
    type: <xref href="com.microsoft.azure.management.compute.OSProfile?alt=com.microsoft.azure.management.compute.OSProfile&text=OSProfile" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the linuxConfiguration value.</p>

    <p></p>
  syntax: public OSProfile withLinuxConfiguration(LinuxConfiguration linuxConfiguration)
  uid: com.microsoft.azure.management.compute.OSProfile.withLinuxConfiguration(LinuxConfiguration)
- fullName: com.microsoft.azure.management.compute.OSProfile.withSecrets(List<VaultSecretGroup> secrets)
  name: withSecrets(List<VaultSecretGroup> secrets)
  nameWithType: OSProfile.withSecrets(List<VaultSecretGroup> secrets)
  parameters:
  - description: <p>the secrets value to set </p>
    name: secrets
    type: List&lt;<xref href="com.microsoft.azure.management.compute.VaultSecretGroup?alt=com.microsoft.azure.management.compute.VaultSecretGroup&text=VaultSecretGroup" data-throw-if-not-resolved="False"/>&gt;
  returns:
    description: <p>the OSProfile object itself. </p>
    type: <xref href="com.microsoft.azure.management.compute.OSProfile?alt=com.microsoft.azure.management.compute.OSProfile&text=OSProfile" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the secrets value.</p>

    <p></p>
  syntax: public OSProfile withSecrets(List<VaultSecretGroup> secrets)
  uid: com.microsoft.azure.management.compute.OSProfile.withSecrets(List<VaultSecretGroup>)
- fullName: com.microsoft.azure.management.compute.OSProfile.withWindowsConfiguration(WindowsConfiguration windowsConfiguration)
  name: withWindowsConfiguration(WindowsConfiguration windowsConfiguration)
  nameWithType: OSProfile.withWindowsConfiguration(WindowsConfiguration windowsConfiguration)
  parameters:
  - description: <p>the windowsConfiguration value to set </p>
    name: windowsConfiguration
    type: <xref href="com.microsoft.azure.management.compute.WindowsConfiguration?alt=com.microsoft.azure.management.compute.WindowsConfiguration&text=WindowsConfiguration" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the OSProfile object itself. </p>
    type: <xref href="com.microsoft.azure.management.compute.OSProfile?alt=com.microsoft.azure.management.compute.OSProfile&text=OSProfile" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the windowsConfiguration value.</p>

    <p></p>
  syntax: public OSProfile withWindowsConfiguration(WindowsConfiguration windowsConfiguration)
  uid: com.microsoft.azure.management.compute.OSProfile.withWindowsConfiguration(WindowsConfiguration)
nameWithType: OSProfile
syntax: public class OSProfile
type: class
uid: com.microsoft.azure.management.compute.OSProfile
fullName: com.microsoft.azure.management.compute.OSProfile
name: OSProfile
package: com.microsoft.azure.management.compute
summary: <p>Describes an OS profile. </p>
metadata: {}
