### YamlMime:JavaType
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
methods:
- fullName: com.microsoft.azure.sdk.iot.provisioning.service.auth.ProvisioningConnectionStringBuilder.createConnectionString(String connectionString)
  name: createConnectionString(String connectionString)
  nameWithType: ProvisioningConnectionStringBuilder.createConnectionString(String connectionString)
  parameters:
  - description: <p>The serialized connection string </p>
    name: connectionString
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>This exception is thrown if the object creation failed </p>
  returns:
    description: <p>The ProvisioningConnectionString object </p>
    type: <xref href="com.microsoft.azure.sdk.iot.provisioning.service.auth.ProvisioningConnectionString?alt=com.microsoft.azure.sdk.iot.provisioning.service.auth.ProvisioningConnectionString&text=ProvisioningConnectionString" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Static constructor to create ProvisioningConnectionString deserialize the given string</p>

    <p></p>
  syntax: public static ProvisioningConnectionString createConnectionString(String connectionString)
  uid: com.microsoft.azure.sdk.iot.provisioning.service.auth.ProvisioningConnectionStringBuilder.createConnectionString(String)
- fullName: com.microsoft.azure.sdk.iot.provisioning.service.auth.ProvisioningConnectionStringBuilder.createConnectionString(String hostName, AuthenticationMethod authenticationMethod)
  name: createConnectionString(String hostName, AuthenticationMethod authenticationMethod)
  nameWithType: ProvisioningConnectionStringBuilder.createConnectionString(String hostName, AuthenticationMethod authenticationMethod)
  parameters:
  - description: <p>The hostName string </p>
    name: hostName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The AuthenticationMethod object </p>
    name: authenticationMethod
    type: <xref href="com.microsoft.azure.sdk.iot.provisioning.service.auth.AuthenticationMethod?alt=com.microsoft.azure.sdk.iot.provisioning.service.auth.AuthenticationMethod&text=AuthenticationMethod" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>This exception is thrown if the object creation failed </p>
  returns:
    description: <p>The ProvisioningConnectionString object </p>
    type: <xref href="com.microsoft.azure.sdk.iot.provisioning.service.auth.ProvisioningConnectionString?alt=com.microsoft.azure.sdk.iot.provisioning.service.auth.ProvisioningConnectionString&text=ProvisioningConnectionString" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Static constructor to create ProvisioningConnectionString from host name and authentication method</p>

    <p></p>
  syntax: public static ProvisioningConnectionString createConnectionString(String hostName, AuthenticationMethod authenticationMethod)
  uid: com.microsoft.azure.sdk.iot.provisioning.service.auth.ProvisioningConnectionStringBuilder.createConnectionString(String,AuthenticationMethod)
nameWithType: ProvisioningConnectionStringBuilder
syntax: public class ProvisioningConnectionStringBuilder
type: class
uid: com.microsoft.azure.sdk.iot.provisioning.service.auth.ProvisioningConnectionStringBuilder
fullName: com.microsoft.azure.sdk.iot.provisioning.service.auth.ProvisioningConnectionStringBuilder
name: ProvisioningConnectionStringBuilder
package: com.microsoft.azure.sdk.iot.provisioning.service.auth
summary: <p>Provide static constructors to create ProvisioningConnectionString object </p>
metadata: {}
