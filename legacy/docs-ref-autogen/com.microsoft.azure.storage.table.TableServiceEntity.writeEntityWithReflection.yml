### YamlMime:JavaMember
nameWithType: TableServiceEntity.writeEntityWithReflection
type: method
members:
- fullName: com.microsoft.azure.storage.table.TableServiceEntity.writeEntityWithReflection(final Object instance)
  name: writeEntityWithReflection(final Object instance)
  nameWithType: TableServiceEntity.writeEntityWithReflection(final Object instance)
  parameters:
  - description: <p>An <code>Object</code> reference to an instance of a class implementing <xref uid="com.microsoft.azure.storage.table.TableEntity" data-throw-if-not-resolved="false" data-raw-source="TableEntity"></xref> to serialize the table entity data from. </p>
    name: instance
    type: <xref href="final+Object?alt=final+Object&text=final+Object" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>if the table entity is invalid or improperly formatted. </p>
  - type: <xref href="IllegalAccessException?alt=IllegalAccessException&text=IllegalAccessException" data-throw-if-not-resolved="False"/>
    description: <p>if the table entity threw an exception during serialization. </p>
  - type: <xref href="InvocationTargetException?alt=InvocationTargetException&text=InvocationTargetException" data-throw-if-not-resolved="False"/>
    description: <p>if a method invoked on the instance parameter threw an exception during serialization. </p>
  returns:
    description: <p>A <code>java.util.HashMap</code> object which maps <code>String</code> property names to <xref uid="com.microsoft.azure.storage.table.EntityProperty" data-throw-if-not-resolved="false" data-raw-source="EntityProperty"></xref> objects containing typed data values serialized from the instance parameter object.</p>
    type: HashMap&lt;String, <xref href="com.microsoft.azure.storage.table.EntityProperty?alt=com.microsoft.azure.storage.table.EntityProperty&text=EntityProperty" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Serializes the property data from a table entity instance into a property map using reflection. </p>

    <p>This static method takes an object instance that represents a table entity type and uses reflection on its class type to find methods to serialize the data from the instance into the property map. </p>

    <p>Each property name and data type in the properties map is compared with the methods in the class type for a pair of getter and setter methods to use for serialization and deserialization. The class is scanned for methods with names that match the property name with "get" and "set" prepended, or with the <xref uid="com.microsoft.azure.storage.table.StoreAs" data-throw-if-not-resolved="false" data-raw-source="StoreAs"></xref> annotation set with the property name. The methods must have return types or parameter data types that match the data type of the corresponding <xref uid="com.microsoft.azure.storage.table.EntityProperty" data-throw-if-not-resolved="false" data-raw-source="EntityProperty"></xref> value. If such a pair is found, the data is copied from the instance object by invoking the getter method on the instance. Properties that do not have a method pair with matching name and data type are not copied.</p>

    <p></p>
  syntax: public static HashMap<String, EntityProperty> writeEntityWithReflection(final Object instance)
  uid: com.microsoft.azure.storage.table.TableServiceEntity.writeEntityWithReflection(final Object)
uid: com.microsoft.azure.storage.table.TableServiceEntity.writeEntityWithReflection*
fullName: com.microsoft.azure.storage.table.TableServiceEntity.writeEntityWithReflection
name: writeEntityWithReflection(final Object instance)
package: com.microsoft.azure.storage.table
metadata: {}
