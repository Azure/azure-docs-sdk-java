### YamlMime:JavaMember
nameWithType: DeviceTwin.hasNext
type: method
members:
- fullName: com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwin.hasNext(QueryCollection deviceTwinQueryCollection)
  name: hasNext(QueryCollection deviceTwinQueryCollection)
  nameWithType: DeviceTwin.hasNext(QueryCollection deviceTwinQueryCollection)
  parameters:
  - description: <p>the query to check. </p>
    name: deviceTwinQueryCollection
    type: <xref href="com.microsoft.azure.sdk.iot.service.devicetwin.QueryCollection?alt=com.microsoft.azure.sdk.iot.service.devicetwin.QueryCollection&text=QueryCollection" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>if the provided deviceTwinQueryCollection is null. </p>
  returns:
    description: <p>True if the provided deviceTwinQueryCollection has a next page to query, false otherwise. </p>
    type: <xref href="synchronized+boolean?alt=synchronized+boolean&text=synchronized+boolean" data-throw-if-not-resolved="False"/>
  summary: <p>Returns if the provided deviceTwinQueryCollection has a next page to query. </p>
  syntax: public synchronized boolean hasNext(QueryCollection deviceTwinQueryCollection)
  uid: com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwin.hasNext(QueryCollection)
uid: com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwin.hasNext*
fullName: com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwin.hasNext
name: hasNext(QueryCollection deviceTwinQueryCollection)
package: com.microsoft.azure.sdk.iot.service.devicetwin
metadata: {}
