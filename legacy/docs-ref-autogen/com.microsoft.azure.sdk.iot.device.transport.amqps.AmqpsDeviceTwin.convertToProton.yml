### YamlMime:JavaMember
nameWithType: AmqpsDeviceTwin.convertToProton
type: method
members:
- fullName: com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsDeviceTwin.convertToProton(Message message)
  name: convertToProton(Message message)
  nameWithType: AmqpsDeviceTwin.convertToProton(Message message)
  parameters:
  - description: <p>The IoTHubMessage to convert </p>
    name: message
    type: <xref href="com.microsoft.azure.sdk.iot.device.Message?alt=com.microsoft.azure.sdk.iot.device.Message&text=Message" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="TransportException?alt=TransportException&text=TransportException" data-throw-if-not-resolved="False"/>
    description: <p>if the conversion fails </p>
  returns:
    description: <p>the converted message </p>
    type: <xref href="com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsConvertToProtonReturnValue?alt=com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsConvertToProtonReturnValue&text=AmqpsConvertToProtonReturnValue" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Convert IoTHubMessage to Proton message Set the message type to twin</p>

    <p></p>
  syntax: protected AmqpsConvertToProtonReturnValue convertToProton(Message message)
  uid: com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsDeviceTwin.convertToProton(Message)
uid: com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsDeviceTwin.convertToProton*
fullName: com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsDeviceTwin.convertToProton(Message message)
name: convertToProton(Message message)
package: com.microsoft.azure.sdk.iot.device.transport.amqps
metadata: {}
