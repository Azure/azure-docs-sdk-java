### YamlMime:JavaType
fields:
- com.microsoft.cognitiveservices.speech.Connection.connected
- com.microsoft.cognitiveservices.speech.Connection.disconnected
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
- <xref href="Closeable" data-throw-if-not-resolved="False"/>
methods:
- com.microsoft.cognitiveservices.speech.Connection.close()
- com.microsoft.cognitiveservices.speech.Connection.closeConnection()
- com.microsoft.cognitiveservices.speech.Connection.fromConversationTranslator(ConversationTranslator)
- com.microsoft.cognitiveservices.speech.Connection.fromRecognizer(Recognizer)
- com.microsoft.cognitiveservices.speech.Connection.openConnection(boolean)
- com.microsoft.cognitiveservices.speech.Connection.sendMessageAsync(String,String)
- com.microsoft.cognitiveservices.speech.Connection.setMessageProperty(String,String,String)
nameWithType: Connection
syntax: public class Connection
type: class
uid: com.microsoft.cognitiveservices.speech.Connection
fullName: com.microsoft.cognitiveservices.speech.Connection
name: Connection
package: com.microsoft.cognitiveservices.speech
summary: '<p>Connection is a proxy class for managing connection to the speech service of the specified Recognizer. By default, a Recognizer autonomously manages connection to service when needed. The Connection class provides additional methods for users to explicitly open or close a connection and to subscribe to connection status changes. The use of Connection is optional. It is intended for scenarios where fine tuning of application behavior based on connection status is needed. Users can optionally call openConnection() to manually initiate a service connection before starting recognition on the Recognizer associated with this Connection. After starting a recognition, calling openConnection() or closeConnection() might fail. This will not impact the Recognizer or the ongoing recognition. Connection might drop for various reasons, the Recognizer will always try to reinstitute the connection as required to guarantee ongoing operations. In all these cases Connected/Disconnected events will indicate the change of the connection status. Note: close() must be called in order to relinquish underlying resources held by the object. Added in version 1.2.0. </p>'
metadata: {}
