### YamlMime:JavaMember
nameWithType: Tasks.listSubtasksWithServiceResponseAsync
type: method
members:
- fullName: com.microsoft.azure.batch.protocol.Tasks.listSubtasksWithServiceResponseAsync(String jobId, String taskId)
  name: listSubtasksWithServiceResponseAsync(String jobId, String taskId)
  nameWithType: Tasks.listSubtasksWithServiceResponseAsync(String jobId, String taskId)
  parameters:
  - description: <p>The ID of the job. </p>
    name: jobId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The ID of the task. </p>
    name: taskId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the CloudTaskListSubtasksResult object </p>
    type: Observable&lt;ServiceResponseWithHeaders&lt;<xref href="com.microsoft.azure.batch.protocol.models.CloudTaskListSubtasksResult?alt=com.microsoft.azure.batch.protocol.models.CloudTaskListSubtasksResult&text=CloudTaskListSubtasksResult" data-throw-if-not-resolved="False"/>, <xref href="com.microsoft.azure.batch.protocol.models.TaskListSubtasksHeaders?alt=com.microsoft.azure.batch.protocol.models.TaskListSubtasksHeaders&text=TaskListSubtasksHeaders" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Lists all of the subtasks that are associated with the specified multi-instance task. If the task is not a multi-instance task then this returns an empty collection.</p>

    <p></p>
  syntax: public Observable<ServiceResponseWithHeaders<CloudTaskListSubtasksResult, TaskListSubtasksHeaders>> listSubtasksWithServiceResponseAsync(String jobId, String taskId)
  uid: com.microsoft.azure.batch.protocol.Tasks.listSubtasksWithServiceResponseAsync(String,String)
- fullName: com.microsoft.azure.batch.protocol.Tasks.listSubtasksWithServiceResponseAsync(String jobId, String taskId, TaskListSubtasksOptions taskListSubtasksOptions)
  name: listSubtasksWithServiceResponseAsync(String jobId, String taskId, TaskListSubtasksOptions taskListSubtasksOptions)
  nameWithType: Tasks.listSubtasksWithServiceResponseAsync(String jobId, String taskId, TaskListSubtasksOptions taskListSubtasksOptions)
  parameters:
  - description: <p>The ID of the job. </p>
    name: jobId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The ID of the task. </p>
    name: taskId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>Additional parameters for the operation </p>
    name: taskListSubtasksOptions
    type: <xref href="com.microsoft.azure.batch.protocol.models.TaskListSubtasksOptions?alt=com.microsoft.azure.batch.protocol.models.TaskListSubtasksOptions&text=TaskListSubtasksOptions" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the CloudTaskListSubtasksResult object </p>
    type: Observable&lt;ServiceResponseWithHeaders&lt;<xref href="com.microsoft.azure.batch.protocol.models.CloudTaskListSubtasksResult?alt=com.microsoft.azure.batch.protocol.models.CloudTaskListSubtasksResult&text=CloudTaskListSubtasksResult" data-throw-if-not-resolved="False"/>, <xref href="com.microsoft.azure.batch.protocol.models.TaskListSubtasksHeaders?alt=com.microsoft.azure.batch.protocol.models.TaskListSubtasksHeaders&text=TaskListSubtasksHeaders" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Lists all of the subtasks that are associated with the specified multi-instance task. If the task is not a multi-instance task then this returns an empty collection.</p>

    <p></p>
  syntax: public Observable<ServiceResponseWithHeaders<CloudTaskListSubtasksResult, TaskListSubtasksHeaders>> listSubtasksWithServiceResponseAsync(String jobId, String taskId, TaskListSubtasksOptions taskListSubtasksOptions)
  uid: com.microsoft.azure.batch.protocol.Tasks.listSubtasksWithServiceResponseAsync(String,String,TaskListSubtasksOptions)
uid: com.microsoft.azure.batch.protocol.Tasks.listSubtasksWithServiceResponseAsync*
fullName: com.microsoft.azure.batch.protocol.Tasks.listSubtasksWithServiceResponseAsync(String jobId, String taskId)
name: listSubtasksWithServiceResponseAsync(String jobId, String taskId)
package: com.microsoft.azure.batch.protocol
metadata: {}
