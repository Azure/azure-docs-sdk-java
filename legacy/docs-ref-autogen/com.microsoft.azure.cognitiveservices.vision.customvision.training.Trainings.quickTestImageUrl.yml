### YamlMime:JavaMember
nameWithType: Trainings.quickTestImageUrl
type: method
members:
- fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.quickTestImageUrl()
  name: quickTestImageUrl()
  nameWithType: Trainings.quickTestImageUrl()
  returns:
    description: <p>the first stage of the quickTestImageUrl call </p>
    type: <xref href="TrainingsQuickTestImageUrlDefinitionStages.WithProjectId?alt=TrainingsQuickTestImageUrlDefinitionStages.WithProjectId&text=TrainingsQuickTestImageUrlDefinitionStages.WithProjectId" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Quick test an image url.</p>

    <p></p>
  syntax: public TrainingsQuickTestImageUrlDefinitionStages.WithProjectId quickTestImageUrl()
  uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.quickTestImageUrl()
- fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.quickTestImageUrl(UUID projectId, String url, QuickTestImageUrlOptionalParameter quickTestImageUrlOptionalParameter)
  name: quickTestImageUrl(UUID projectId, String url, QuickTestImageUrlOptionalParameter quickTestImageUrlOptionalParameter)
  nameWithType: Trainings.quickTestImageUrl(UUID projectId, String url, QuickTestImageUrlOptionalParameter quickTestImageUrlOptionalParameter)
  parameters:
  - description: <p>The project to evaluate against. </p>
    name: projectId
    type: <xref href="UUID?alt=UUID&text=UUID" data-throw-if-not-resolved="False"/>
  - description: <p>Url of the image. </p>
    name: url
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the object representing the optional parameters to be set before calling this API </p>
    name: quickTestImageUrlOptionalParameter
    type: <xref href="com.microsoft.azure.cognitiveservices.vision.customvision.training.models.QuickTestImageUrlOptionalParameter?alt=com.microsoft.azure.cognitiveservices.vision.customvision.training.models.QuickTestImageUrlOptionalParameter&text=QuickTestImageUrlOptionalParameter" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="CustomVisionErrorException?alt=CustomVisionErrorException&text=CustomVisionErrorException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  returns:
    description: <p>the ImagePrediction object if successful. </p>
    type: <xref href="com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImagePrediction?alt=com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImagePrediction&text=ImagePrediction" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Quick test an image url.</p>

    <p></p>
  syntax: public ImagePrediction quickTestImageUrl(UUID projectId, String url, QuickTestImageUrlOptionalParameter quickTestImageUrlOptionalParameter)
  uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.quickTestImageUrl(UUID,String,QuickTestImageUrlOptionalParameter)
uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.quickTestImageUrl*
fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.quickTestImageUrl()
name: quickTestImageUrl()
package: com.microsoft.azure.cognitiveservices.vision.customvision.training
metadata: {}
