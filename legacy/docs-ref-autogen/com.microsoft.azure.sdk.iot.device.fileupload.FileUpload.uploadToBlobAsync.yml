### YamlMime:JavaMember
nameWithType: FileUpload.uploadToBlobAsync
type: method
members:
- fullName: com.microsoft.azure.sdk.iot.device.fileupload.FileUpload.uploadToBlobAsync(String blobName, InputStream inputStream, long streamLength, IotHubEventCallback statusCallback, Object statusCallbackContext)
  name: uploadToBlobAsync(String blobName, InputStream inputStream, long streamLength, IotHubEventCallback statusCallback, Object statusCallbackContext)
  nameWithType: FileUpload.uploadToBlobAsync(String blobName, InputStream inputStream, long streamLength, IotHubEventCallback statusCallback, Object statusCallbackContext)
  parameters:
  - description: <p>is the name of the file in the container. </p>
    name: blobName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>is the input stream. </p>
    name: inputStream
    type: <xref href="InputStream?alt=InputStream&text=InputStream" data-throw-if-not-resolved="False"/>
  - description: <p>is the stream length. </p>
    name: streamLength
    type: <xref href="long?alt=long&text=long" data-throw-if-not-resolved="False"/>
  - description: <p>is the callback to notify that the upload is completed (with status). </p>
    name: statusCallback
    type: <xref href="com.microsoft.azure.sdk.iot.device.IotHubEventCallback?alt=com.microsoft.azure.sdk.iot.device.IotHubEventCallback&text=IotHubEventCallback" data-throw-if-not-resolved="False"/>
  - description: <p>is the context of the callback, allowing multiple uploads in parallel. </p>
    name: statusCallbackContext
    type: <xref href="Object?alt=Object&text=Object" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: >-
      <p>if one of the parameters is invalid. blobName is<code>null 

          </code> or empty, inputStream is<code>null 

          </code> or not available, streamLength is negative, statusCallback is<code>null 

          </code></p>
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
    description: <p>if an I/O error occurs in the inputStream. </p>
  returns:
    type: <xref href="synchronized+void?alt=synchronized+void&text=synchronized+void" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Upload the file to container, which was associated to the iothub. This function will start the upload process, and back the execution to the caller. The upload process will be executed in background. When it is completed, the background thread will trigger the callback with the upload status.</p>

    <p></p>
  syntax: public synchronized void uploadToBlobAsync(String blobName, InputStream inputStream, long streamLength, IotHubEventCallback statusCallback, Object statusCallbackContext)
  uid: com.microsoft.azure.sdk.iot.device.fileupload.FileUpload.uploadToBlobAsync(String,InputStream,long,IotHubEventCallback,Object)
uid: com.microsoft.azure.sdk.iot.device.fileupload.FileUpload.uploadToBlobAsync*
fullName: com.microsoft.azure.sdk.iot.device.fileupload.FileUpload.uploadToBlobAsync
name: uploadToBlobAsync(String blobName, InputStream inputStream, long streamLength, IotHubEventCallback statusCallback, Object statusCallbackContext)
package: com.microsoft.azure.sdk.iot.device.fileupload
metadata: {}
