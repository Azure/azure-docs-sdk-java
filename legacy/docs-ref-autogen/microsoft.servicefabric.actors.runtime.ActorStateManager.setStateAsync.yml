### YamlMime:JavaMember
nameWithType: ActorStateManager.setStateAsync
type: method
members:
- fullName: microsoft.servicefabric.actors.runtime.ActorStateManager.setStateAsync(String stateName, T value)
  name: setStateAsync(String stateName, T value)
  nameWithType: ActorStateManager.setStateAsync(String stateName, T value)
  parameters:
  - description: <p>Name of the actor state to set. </p>
    name: stateName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>Value of the actor state to set. </p>
    name: value
    type: <xref href="T?alt=T&text=T" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>A task that represents the asynchronous set operation. </p>
    type: <xref href="%3CT%3E+CompletableFuture%3C%3F%3E?alt=<T> CompletableFuture<?>&text=%3CT%3E+CompletableFuture%3C%3F%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Removes an actor state with specified state name. If an actor state with specified name does not exist, it is added.</p>

    <p></p>
  syntax: public <T> CompletableFuture<?> setStateAsync(String stateName, T value)
  uid: microsoft.servicefabric.actors.runtime.ActorStateManager.setStateAsync(String,T)
- fullName: microsoft.servicefabric.actors.runtime.ActorStateManager.setStateAsync(String stateName, T value, CancellationToken cancellationToken)
  name: setStateAsync(String stateName, T value, CancellationToken cancellationToken)
  nameWithType: ActorStateManager.setStateAsync(String stateName, T value, CancellationToken cancellationToken)
  parameters:
  - description: <p>Name of the actor state to set. </p>
    name: stateName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>Value of the actor state to set. </p>
    name: value
    type: <xref href="T?alt=T&text=T" data-throw-if-not-resolved="False"/>
  - description: >-
      <p>

        <xref uid="system.fabric.CancellationToken" data-throw-if-not-resolved="false">system.fabric.CancellationToken</xref> object to indicate the cancellation status of the operation. </p>
    name: cancellationToken
    type: <xref href="system.fabric.CancellationToken?alt=system.fabric.CancellationToken&text=CancellationToken" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>A task that represents the asynchronous set operation. </p>
    type: <xref href="%3CT%3E+CompletableFuture%3C%3F%3E?alt=<T> CompletableFuture<?>&text=%3CT%3E+CompletableFuture%3C%3F%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Removes an actor state with specified state name. If an actor state with specified name does not exist, it is added.</p>

    <p></p>
  syntax: public <T> CompletableFuture<?> setStateAsync(String stateName, T value, CancellationToken cancellationToken)
  uid: microsoft.servicefabric.actors.runtime.ActorStateManager.setStateAsync(String,T,CancellationToken)
uid: microsoft.servicefabric.actors.runtime.ActorStateManager.setStateAsync*
fullName: microsoft.servicefabric.actors.runtime.ActorStateManager.setStateAsync(String stateName, T value)
name: setStateAsync(String stateName, T value)
package: microsoft.servicefabric.actors.runtime
metadata: {}
