### YamlMime:JavaMember
nameWithType: Tasks.addCollection
type: method
members:
- fullName: com.microsoft.azure.batch.protocol.Tasks.addCollection(String jobId, List<TaskAddParameter> value)
  name: addCollection(String jobId, List<TaskAddParameter> value)
  nameWithType: Tasks.addCollection(String jobId, List<TaskAddParameter> value)
  parameters:
  - description: <p>The ID of the job to which the task collection is to be added. </p>
    name: jobId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The collection of tasks to add. The maximum count of tasks is 100. The total serialized size of this collection must be less than 1MB. If it is greater than 1MB (for example if each task has 100's of resource files or environment variables), the request will fail with code 'RequestBodyTooLarge' and should be retried again with fewer tasks. </p>
    name: value
    type: List&lt;<xref href="com.microsoft.azure.batch.protocol.models.TaskAddParameter?alt=com.microsoft.azure.batch.protocol.models.TaskAddParameter&text=TaskAddParameter" data-throw-if-not-resolved="False"/>&gt;
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="BatchErrorException?alt=BatchErrorException&text=BatchErrorException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  returns:
    description: <p>the TaskAddCollectionResult object if successful. </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.TaskAddCollectionResult?alt=com.microsoft.azure.batch.protocol.models.TaskAddCollectionResult&text=TaskAddCollectionResult" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Adds a collection of tasks to the specified job. Note that each task must have a unique ID. The Batch service may not return the results for each task in the same order the tasks were submitted in this request. If the server times out or the connection is closed during the request, the request may have been partially or fully processed, or not at all. In such cases, the user should re-issue the request. Note that it is up to the user to correctly handle failures when re-issuing a request. For example, you should use the same task IDs during a retry so that if the prior operation succeeded, the retry will not create extra tasks unexpectedly. If the response contains any tasks which failed to add, a client can retry the request. In a retry, it is most efficient to resubmit only tasks that failed to add, and to omit tasks that were successfully added on the first attempt. The maximum lifetime of a task from addition to completion is 180 days. If a task has not completed within 180 days of being added it will be terminated by the Batch service and left in whatever state it was in at that time.</p>

    <p></p>
  syntax: public TaskAddCollectionResult addCollection(String jobId, List<TaskAddParameter> value)
  uid: com.microsoft.azure.batch.protocol.Tasks.addCollection(String,List<TaskAddParameter>)
- fullName: com.microsoft.azure.batch.protocol.Tasks.addCollection(String jobId, List<TaskAddParameter> value, TaskAddCollectionOptions taskAddCollectionOptions)
  name: addCollection(String jobId, List<TaskAddParameter> value, TaskAddCollectionOptions taskAddCollectionOptions)
  nameWithType: Tasks.addCollection(String jobId, List<TaskAddParameter> value, TaskAddCollectionOptions taskAddCollectionOptions)
  parameters:
  - description: <p>The ID of the job to which the task collection is to be added. </p>
    name: jobId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The collection of tasks to add. The maximum count of tasks is 100. The total serialized size of this collection must be less than 1MB. If it is greater than 1MB (for example if each task has 100's of resource files or environment variables), the request will fail with code 'RequestBodyTooLarge' and should be retried again with fewer tasks. </p>
    name: value
    type: List&lt;<xref href="com.microsoft.azure.batch.protocol.models.TaskAddParameter?alt=com.microsoft.azure.batch.protocol.models.TaskAddParameter&text=TaskAddParameter" data-throw-if-not-resolved="False"/>&gt;
  - description: <p>Additional parameters for the operation </p>
    name: taskAddCollectionOptions
    type: <xref href="com.microsoft.azure.batch.protocol.models.TaskAddCollectionOptions?alt=com.microsoft.azure.batch.protocol.models.TaskAddCollectionOptions&text=TaskAddCollectionOptions" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="BatchErrorException?alt=BatchErrorException&text=BatchErrorException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  returns:
    description: <p>the TaskAddCollectionResult object if successful. </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.TaskAddCollectionResult?alt=com.microsoft.azure.batch.protocol.models.TaskAddCollectionResult&text=TaskAddCollectionResult" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Adds a collection of tasks to the specified job. Note that each task must have a unique ID. The Batch service may not return the results for each task in the same order the tasks were submitted in this request. If the server times out or the connection is closed during the request, the request may have been partially or fully processed, or not at all. In such cases, the user should re-issue the request. Note that it is up to the user to correctly handle failures when re-issuing a request. For example, you should use the same task IDs during a retry so that if the prior operation succeeded, the retry will not create extra tasks unexpectedly. If the response contains any tasks which failed to add, a client can retry the request. In a retry, it is most efficient to resubmit only tasks that failed to add, and to omit tasks that were successfully added on the first attempt. The maximum lifetime of a task from addition to completion is 180 days. If a task has not completed within 180 days of being added it will be terminated by the Batch service and left in whatever state it was in at that time.</p>

    <p></p>
  syntax: public TaskAddCollectionResult addCollection(String jobId, List<TaskAddParameter> value, TaskAddCollectionOptions taskAddCollectionOptions)
  uid: com.microsoft.azure.batch.protocol.Tasks.addCollection(String,List<TaskAddParameter>,TaskAddCollectionOptions)
uid: com.microsoft.azure.batch.protocol.Tasks.addCollection*
fullName: com.microsoft.azure.batch.protocol.Tasks.addCollection(String jobId, List<TaskAddParameter> value)
name: addCollection(String jobId, List<TaskAddParameter> value)
package: com.microsoft.azure.batch.protocol
metadata: {}
