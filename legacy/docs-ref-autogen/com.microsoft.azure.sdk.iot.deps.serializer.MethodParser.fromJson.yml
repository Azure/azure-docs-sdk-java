### YamlMime:JavaMember
nameWithType: MethodParser.fromJson
type: method
members:
- fullName: com.microsoft.azure.sdk.iot.deps.serializer.MethodParser.fromJson(String json)
  name: fromJson(String json)
  nameWithType: MethodParser.fromJson(String json)
  parameters:
  - description: <p>- Json with the information to change the collection.<ul><li><p>If contains `methodName`, it is a full method including `methodName`, `responseTimeoutInSeconds`, `connectTimeoutInSeconds`, and `payload`.</p></li><li><p>If contains `status`, it is a response with `status` and `payload`.</p></li><li><p>Otherwise, it is only `payload`. </p></li></ul></p>
    name: json
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>This exception is thrown if the one of the provided information do not fits the requirements. </p>
  returns:
    type: <xref href="synchronized+void?alt=synchronized+void&text=synchronized+void" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the Method collection with the provided information in the json.</p>

    <p></p>
  syntax: public synchronized void fromJson(String json)
  uid: com.microsoft.azure.sdk.iot.deps.serializer.MethodParser.fromJson(String)
uid: com.microsoft.azure.sdk.iot.deps.serializer.MethodParser.fromJson*
fullName: com.microsoft.azure.sdk.iot.deps.serializer.MethodParser.fromJson
name: fromJson(String json)
package: com.microsoft.azure.sdk.iot.deps.serializer
metadata: {}
