### YamlMime:JavaType
constructors:
- com.microsoft.azure.storage.file.CloudFileShare.CloudFileShare(final StorageUri)
- com.microsoft.azure.storage.file.CloudFileShare.CloudFileShare(final StorageUri,final StorageCredentials)
- com.microsoft.azure.storage.file.CloudFileShare.CloudFileShare(final String,String,final CloudFileClient)
- com.microsoft.azure.storage.file.CloudFileShare.CloudFileShare(final URI)
- com.microsoft.azure.storage.file.CloudFileShare.CloudFileShare(final URI,final StorageCredentials)
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
methods:
- com.microsoft.azure.storage.file.CloudFileShare.assertNoSnapshot()
- com.microsoft.azure.storage.file.CloudFileShare.create()
- com.microsoft.azure.storage.file.CloudFileShare.create(FileRequestOptions,OperationContext)
- com.microsoft.azure.storage.file.CloudFileShare.createFilePermission(String)
- com.microsoft.azure.storage.file.CloudFileShare.createFilePermission(String,FileRequestOptions,OperationContext)
- com.microsoft.azure.storage.file.CloudFileShare.createIfNotExists()
- com.microsoft.azure.storage.file.CloudFileShare.createIfNotExists(FileRequestOptions,OperationContext)
- com.microsoft.azure.storage.file.CloudFileShare.createSnapshot()
- com.microsoft.azure.storage.file.CloudFileShare.createSnapshot(final AccessCondition,FileRequestOptions,OperationContext)
- com.microsoft.azure.storage.file.CloudFileShare.createSnapshot(final HashMap<String, String>,final AccessCondition,FileRequestOptions,OperationContext)
- com.microsoft.azure.storage.file.CloudFileShare.delete()
- com.microsoft.azure.storage.file.CloudFileShare.delete(AccessCondition,FileRequestOptions,OperationContext)
- com.microsoft.azure.storage.file.CloudFileShare.delete(DeleteShareSnapshotsOption,AccessCondition,FileRequestOptions,OperationContext)
- com.microsoft.azure.storage.file.CloudFileShare.deleteIfExists()
- com.microsoft.azure.storage.file.CloudFileShare.deleteIfExists(AccessCondition,FileRequestOptions,OperationContext)
- com.microsoft.azure.storage.file.CloudFileShare.deleteIfExists(DeleteShareSnapshotsOption,AccessCondition,FileRequestOptions,OperationContext)
- com.microsoft.azure.storage.file.CloudFileShare.downloadAttributes()
- com.microsoft.azure.storage.file.CloudFileShare.downloadAttributes(AccessCondition,FileRequestOptions,OperationContext)
- com.microsoft.azure.storage.file.CloudFileShare.downloadPermissions()
- com.microsoft.azure.storage.file.CloudFileShare.downloadPermissions(AccessCondition,FileRequestOptions,OperationContext)
- com.microsoft.azure.storage.file.CloudFileShare.exists()
- com.microsoft.azure.storage.file.CloudFileShare.exists(final AccessCondition,FileRequestOptions,OperationContext)
- com.microsoft.azure.storage.file.CloudFileShare.generateSharedAccessSignature(final SharedAccessFilePolicy,final String)
- com.microsoft.azure.storage.file.CloudFileShare.generateSharedAccessSignature(final SharedAccessFilePolicy,final String,final IPRange,final SharedAccessProtocols)
- com.microsoft.azure.storage.file.CloudFileShare.getFilePermission(String)
- com.microsoft.azure.storage.file.CloudFileShare.getFilePermission(String,FileRequestOptions,OperationContext)
- com.microsoft.azure.storage.file.CloudFileShare.getMetadata()
- com.microsoft.azure.storage.file.CloudFileShare.getName()
- com.microsoft.azure.storage.file.CloudFileShare.getProperties()
- com.microsoft.azure.storage.file.CloudFileShare.getQualifiedUri()
- com.microsoft.azure.storage.file.CloudFileShare.getRootDirectoryReference()
- com.microsoft.azure.storage.file.CloudFileShare.getServiceClient()
- com.microsoft.azure.storage.file.CloudFileShare.getSnapshot()
- com.microsoft.azure.storage.file.CloudFileShare.getStats()
- com.microsoft.azure.storage.file.CloudFileShare.getStats(FileRequestOptions,OperationContext)
- com.microsoft.azure.storage.file.CloudFileShare.getStorageUri()
- com.microsoft.azure.storage.file.CloudFileShare.getUri()
- com.microsoft.azure.storage.file.CloudFileShare.isSnapshot()
- com.microsoft.azure.storage.file.CloudFileShare.setMetadata(final HashMap<String, String>)
- com.microsoft.azure.storage.file.CloudFileShare.setProperties(final FileShareProperties)
- com.microsoft.azure.storage.file.CloudFileShare.uploadMetadata()
- com.microsoft.azure.storage.file.CloudFileShare.uploadMetadata(AccessCondition,FileRequestOptions,OperationContext)
- com.microsoft.azure.storage.file.CloudFileShare.uploadPermissions(final FileSharePermissions)
- com.microsoft.azure.storage.file.CloudFileShare.uploadPermissions(final FileSharePermissions,final AccessCondition,FileRequestOptions,OperationContext)
- com.microsoft.azure.storage.file.CloudFileShare.uploadProperties()
- com.microsoft.azure.storage.file.CloudFileShare.uploadProperties(AccessCondition,FileRequestOptions,OperationContext)
nameWithType: CloudFileShare
syntax: public class CloudFileShare
type: class
uid: com.microsoft.azure.storage.file.CloudFileShare
fullName: com.microsoft.azure.storage.file.CloudFileShare
name: CloudFileShare
package: com.microsoft.azure.storage.file
summary: >-
  <p>Represents a share in the Microsoft Azure File service. </p>

  <p>Shares hold directories, which are encapsulated as <xref uid="com.microsoft.azure.storage.file.CloudFileDirectory" data-throw-if-not-resolved="false">CloudFileDirectory</xref> objects, and directories hold files. Directories can also contain sub-directories. </p>
metadata: {}
