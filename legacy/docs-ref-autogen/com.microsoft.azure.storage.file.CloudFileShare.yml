### YamlMime:JavaType
constructors:
- fullName: com.microsoft.azure.storage.file.CloudFileShare.CloudFileShare(final StorageUri storageUri)
  name: CloudFileShare(final StorageUri storageUri)
  nameWithType: CloudFileShare.CloudFileShare(final StorageUri storageUri)
  parameters:
  - description: <p>A <xref uid="com.microsoft.azure.storage.StorageUri" data-throw-if-not-resolved="false" data-raw-source="StorageUri"></xref> object which represents the absolute URI of the share.</p>
    name: storageUri
    type: final <xref href="com.microsoft.azure.storage.StorageUri?alt=com.microsoft.azure.storage.StorageUri&text=StorageUri" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  summary: >-
    <p>Creates an instance of the  class using the specified URI.</p>

    <p></p>
  syntax: public CloudFileShare(final StorageUri storageUri)
  uid: com.microsoft.azure.storage.file.CloudFileShare.CloudFileShare(final StorageUri)
- fullName: com.microsoft.azure.storage.file.CloudFileShare.CloudFileShare(final StorageUri storageUri, final StorageCredentials credentials)
  name: CloudFileShare(final StorageUri storageUri, final StorageCredentials credentials)
  nameWithType: CloudFileShare.CloudFileShare(final StorageUri storageUri, final StorageCredentials credentials)
  parameters:
  - description: <p>A <xref uid="com.microsoft.azure.storage.StorageUri" data-throw-if-not-resolved="false" data-raw-source="StorageUri"></xref> object which represents the absolute StorageUri of the share. </p>
    name: storageUri
    type: final <xref href="com.microsoft.azure.storage.StorageUri?alt=com.microsoft.azure.storage.StorageUri&text=StorageUri" data-throw-if-not-resolved="False"/>
  - description: <p>A <xref uid="com.microsoft.azure.storage.StorageCredentials" data-throw-if-not-resolved="false" data-raw-source="StorageCredentials"></xref> object used to authenticate access. </p>
    name: credentials
    type: final <xref href="com.microsoft.azure.storage.StorageCredentials?alt=com.microsoft.azure.storage.StorageCredentials&text=StorageCredentials" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  summary: >-
    <p>Creates an instance of the  class using the specified StorageUri and credentials.</p>

    <p></p>
  syntax: public CloudFileShare(final StorageUri storageUri, final StorageCredentials credentials)
  uid: com.microsoft.azure.storage.file.CloudFileShare.CloudFileShare(final StorageUri,final StorageCredentials)
- fullName: com.microsoft.azure.storage.file.CloudFileShare.CloudFileShare(final String shareName, String snapshotID, final CloudFileClient client)
  name: CloudFileShare(final String shareName, String snapshotID, final CloudFileClient client)
  nameWithType: CloudFileShare.CloudFileShare(final String shareName, String snapshotID, final CloudFileClient client)
  parameters:
  - description: <p>A <code>String</code> which represents the name of the share, which must adhere to share naming rules. The share name should not include any path separator characters (/). Share names must be lowercase, between 3-63 characters long and must start with a letter or number. Share names may contain only letters, numbers, and the dash (-) character. </p>
    name: shareName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>A <code>String</code> that represents the snapshot version, if applicable. </p>
    name: snapshotID
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>A <xref uid="com.microsoft.azure.storage.file.CloudFileClient" data-throw-if-not-resolved="false" data-raw-source="CloudFileClient"></xref> object that represents the associated service client, and that specifies the endpoint for the File service.</p>
    name: client
    type: final <xref href="com.microsoft.azure.storage.file.CloudFileClient?alt=com.microsoft.azure.storage.file.CloudFileClient&text=CloudFileClient" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  - type: <xref href="URISyntaxException?alt=URISyntaxException&text=URISyntaxException" data-throw-if-not-resolved="False"/>
    description: <p>If the resource URI constructed based on the shareName is invalid.</p>
  summary: >-
    <p>Creates an instance of the  class using the specified name and client.</p>

    <p></p>
  syntax: public CloudFileShare(final String shareName, String snapshotID, final CloudFileClient client)
  uid: com.microsoft.azure.storage.file.CloudFileShare.CloudFileShare(final String,String,final CloudFileClient)
- fullName: com.microsoft.azure.storage.file.CloudFileShare.CloudFileShare(final URI uri)
  name: CloudFileShare(final URI uri)
  nameWithType: CloudFileShare.CloudFileShare(final URI uri)
  parameters:
  - description: <p>A <code>java.net.URI</code> object that represents the absolute URI of the share.</p>
    name: uri
    type: <xref href="final+URI?alt=final+URI&text=final+URI" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  summary: >-
    <p>Creates an instance of the  class using the specified URI.</p>

    <p></p>
  syntax: public CloudFileShare(final URI uri)
  uid: com.microsoft.azure.storage.file.CloudFileShare.CloudFileShare(final URI)
- fullName: com.microsoft.azure.storage.file.CloudFileShare.CloudFileShare(final URI uri, final StorageCredentials credentials)
  name: CloudFileShare(final URI uri, final StorageCredentials credentials)
  nameWithType: CloudFileShare.CloudFileShare(final URI uri, final StorageCredentials credentials)
  parameters:
  - description: <p>A <code>java.net.URI</code> object that represents the absolute URI of the share. </p>
    name: uri
    type: <xref href="final+URI?alt=final+URI&text=final+URI" data-throw-if-not-resolved="False"/>
  - description: <p>A <xref uid="com.microsoft.azure.storage.StorageCredentials" data-throw-if-not-resolved="false" data-raw-source="StorageCredentials"></xref> object used to authenticate access.</p>
    name: credentials
    type: final <xref href="com.microsoft.azure.storage.StorageCredentials?alt=com.microsoft.azure.storage.StorageCredentials&text=StorageCredentials" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  summary: >-
    <p>Creates an instance of the  class using the specified URI and credentials.</p>

    <p></p>
  syntax: public CloudFileShare(final URI uri, final StorageCredentials credentials)
  uid: com.microsoft.azure.storage.file.CloudFileShare.CloudFileShare(final URI,final StorageCredentials)
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
methods:
- fullName: com.microsoft.azure.storage.file.CloudFileShare.assertNoSnapshot()
  name: assertNoSnapshot()
  nameWithType: CloudFileShare.assertNoSnapshot()
  summary: <p>Asserts that the share is not a snapshot. </p>
  syntax: protected void assertNoSnapshot()
  uid: com.microsoft.azure.storage.file.CloudFileShare.assertNoSnapshot()
- fullName: com.microsoft.azure.storage.file.CloudFileShare.create()
  name: create()
  nameWithType: CloudFileShare.create()
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  summary: >-
    <p>Creates the share.</p>

    <p></p>
  syntax: public void create()
  uid: com.microsoft.azure.storage.file.CloudFileShare.create()
- fullName: com.microsoft.azure.storage.file.CloudFileShare.create(FileRequestOptions options, OperationContext opContext)
  name: create(FileRequestOptions options, OperationContext opContext)
  nameWithType: CloudFileShare.create(FileRequestOptions options, OperationContext opContext)
  parameters:
  - description: <p>A <xref uid="com.microsoft.azure.storage.file.FileRequestOptions" data-throw-if-not-resolved="false" data-raw-source="FileRequestOptions"></xref> object that specifies any additional options for the request. Specifying <code>null</code> will use the default request options from the associated service client ( <xref uid="com.microsoft.azure.storage.file.CloudFileClient" data-throw-if-not-resolved="false" data-raw-source="CloudFileClient"></xref>). </p>
    name: options
    type: <xref href="com.microsoft.azure.storage.file.FileRequestOptions?alt=com.microsoft.azure.storage.file.FileRequestOptions&text=FileRequestOptions" data-throw-if-not-resolved="False"/>
  - description: <p>An <xref uid="com.microsoft.azure.storage.OperationContext" data-throw-if-not-resolved="false" data-raw-source="OperationContext"></xref> object that represents the context for the current operation. This object is used to track requests to the storage service, and to provide additional runtime information about the operation.</p>
    name: opContext
    type: <xref href="com.microsoft.azure.storage.OperationContext?alt=com.microsoft.azure.storage.OperationContext&text=OperationContext" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  summary: >-
    <p>Creates the share using the specified options and operation context.</p>

    <p></p>
  syntax: public void create(FileRequestOptions options, OperationContext opContext)
  uid: com.microsoft.azure.storage.file.CloudFileShare.create(FileRequestOptions,OperationContext)
- fullName: com.microsoft.azure.storage.file.CloudFileShare.createFilePermission(String permission)
  name: createFilePermission(String permission)
  nameWithType: CloudFileShare.createFilePermission(String permission)
  parameters:
  - description: <p>A <code>String</code> object that represents the file permission to create. </p>
    name: permission
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>The <code>String</code> representing the file permission key associated with the file permission created.</p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Creates a file permission.</p>

    <p></p>
  syntax: public String createFilePermission(String permission)
  uid: com.microsoft.azure.storage.file.CloudFileShare.createFilePermission(String)
- fullName: com.microsoft.azure.storage.file.CloudFileShare.createFilePermission(String permission, FileRequestOptions options, OperationContext opContext)
  name: createFilePermission(String permission, FileRequestOptions options, OperationContext opContext)
  nameWithType: CloudFileShare.createFilePermission(String permission, FileRequestOptions options, OperationContext opContext)
  parameters:
  - description: <p>A <code>String</code> object that represents the file permission to create. </p>
    name: permission
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>A <xref uid="com.microsoft.azure.storage.file.FileRequestOptions" data-throw-if-not-resolved="false" data-raw-source="FileRequestOptions"></xref> object that specifies any additional options for the request. Specifying <code>null</code> will use the default request options from the associated service client ( <xref uid="com.microsoft.azure.storage.file.CloudFileClient" data-throw-if-not-resolved="false" data-raw-source="CloudFileClient"></xref>). </p>
    name: options
    type: <xref href="com.microsoft.azure.storage.file.FileRequestOptions?alt=com.microsoft.azure.storage.file.FileRequestOptions&text=FileRequestOptions" data-throw-if-not-resolved="False"/>
  - description: <p>An <xref uid="com.microsoft.azure.storage.OperationContext" data-throw-if-not-resolved="false" data-raw-source="OperationContext"></xref> object that represents the context for the current operation. This object is used to track requests to the storage service, and to provide additional runtime information about the operation. </p>
    name: opContext
    type: <xref href="com.microsoft.azure.storage.OperationContext?alt=com.microsoft.azure.storage.OperationContext&text=OperationContext" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>The <code>String</code> representing the file permission key associated with the file permission created.</p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Creates a file permission.</p>

    <p></p>
  syntax: public String createFilePermission(String permission, FileRequestOptions options, OperationContext opContext)
  uid: com.microsoft.azure.storage.file.CloudFileShare.createFilePermission(String,FileRequestOptions,OperationContext)
- fullName: com.microsoft.azure.storage.file.CloudFileShare.createIfNotExists()
  name: createIfNotExists()
  nameWithType: CloudFileShare.createIfNotExists()
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  returns:
    description: >-
      <p>

        <code>true</code> if the share did not already exist and was created; otherwise, <code>false</code>.</p>
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Creates the share if it does not exist.</p>

    <p></p>
  syntax: public boolean createIfNotExists()
  uid: com.microsoft.azure.storage.file.CloudFileShare.createIfNotExists()
- fullName: com.microsoft.azure.storage.file.CloudFileShare.createIfNotExists(FileRequestOptions options, OperationContext opContext)
  name: createIfNotExists(FileRequestOptions options, OperationContext opContext)
  nameWithType: CloudFileShare.createIfNotExists(FileRequestOptions options, OperationContext opContext)
  parameters:
  - description: <p>A <xref uid="com.microsoft.azure.storage.file.FileRequestOptions" data-throw-if-not-resolved="false" data-raw-source="FileRequestOptions"></xref> object that specifies any additional options for the request. Specifying <code>null</code> will use the default request options from the associated service client (<xref uid="com.microsoft.azure.storage.file.CloudFileClient" data-throw-if-not-resolved="false" data-raw-source="CloudFileClient"></xref>). </p>
    name: options
    type: <xref href="com.microsoft.azure.storage.file.FileRequestOptions?alt=com.microsoft.azure.storage.file.FileRequestOptions&text=FileRequestOptions" data-throw-if-not-resolved="False"/>
  - description: <p>An <xref uid="com.microsoft.azure.storage.OperationContext" data-throw-if-not-resolved="false" data-raw-source="OperationContext"></xref> object that represents the context for the current operation. This object is used to track requests to the storage service, and to provide additional runtime information about the operation.</p>
    name: opContext
    type: <xref href="com.microsoft.azure.storage.OperationContext?alt=com.microsoft.azure.storage.OperationContext&text=OperationContext" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  returns:
    description: >-
      <p>

        <code>true</code> if the share did not already exist and was created; otherwise, <code>false</code>.</p>
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Creates the share if it does not exist, using the specified request options and operation context.</p>

    <p></p>
  syntax: public boolean createIfNotExists(FileRequestOptions options, OperationContext opContext)
  uid: com.microsoft.azure.storage.file.CloudFileShare.createIfNotExists(FileRequestOptions,OperationContext)
- fullName: com.microsoft.azure.storage.file.CloudFileShare.createSnapshot()
  name: createSnapshot()
  nameWithType: CloudFileShare.createSnapshot()
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  returns:
    description: <p>A <code>CloudFileShare</code> object that represents the snapshot of the share.</p>
    type: final <xref href="com.microsoft.azure.storage.file.CloudFileShare?alt=com.microsoft.azure.storage.file.CloudFileShare&text=CloudFileShare" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Creates a snapshot of the share.</p>

    <p></p>
  syntax: public final CloudFileShare createSnapshot()
  uid: com.microsoft.azure.storage.file.CloudFileShare.createSnapshot()
- fullName: com.microsoft.azure.storage.file.CloudFileShare.createSnapshot(final AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  name: createSnapshot(final AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  nameWithType: CloudFileShare.createSnapshot(final AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  parameters:
  - description: <p>An <xref uid="com.microsoft.azure.storage.AccessCondition" data-throw-if-not-resolved="false" data-raw-source="AccessCondition"></xref> object that represents the access conditions for the share. </p>
    name: accessCondition
    type: final <xref href="com.microsoft.azure.storage.AccessCondition?alt=com.microsoft.azure.storage.AccessCondition&text=AccessCondition" data-throw-if-not-resolved="False"/>
  - description: <p>A <xref uid="com.microsoft.azure.storage.file.FileRequestOptions" data-throw-if-not-resolved="false" data-raw-source="FileRequestOptions"></xref> object that specifies any additional options for the request. Specifying <code>null</code> will use the default request options from the associated service client ( <xref uid="com.microsoft.azure.storage.file.CloudFileClient" data-throw-if-not-resolved="false" data-raw-source="CloudFileClient"></xref>). </p>
    name: options
    type: <xref href="com.microsoft.azure.storage.file.FileRequestOptions?alt=com.microsoft.azure.storage.file.FileRequestOptions&text=FileRequestOptions" data-throw-if-not-resolved="False"/>
  - description: <p>An <xref uid="com.microsoft.azure.storage.OperationContext" data-throw-if-not-resolved="false" data-raw-source="OperationContext"></xref> object that represents the context for the current operation. This object is used to track requests to the storage service, and to provide additional runtime information about the operation.</p>
    name: opContext
    type: <xref href="com.microsoft.azure.storage.OperationContext?alt=com.microsoft.azure.storage.OperationContext&text=OperationContext" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  returns:
    description: <p>A <code>CloudFileShare</code> object that represents the snapshot of the file share.</p>
    type: final <xref href="com.microsoft.azure.storage.file.CloudFileShare?alt=com.microsoft.azure.storage.file.CloudFileShare&text=CloudFileShare" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Creates a snapshot of the file share using the specified request options and operation context.</p>

    <p></p>
  syntax: public final CloudFileShare createSnapshot(final AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  uid: com.microsoft.azure.storage.file.CloudFileShare.createSnapshot(final AccessCondition,FileRequestOptions,OperationContext)
- fullName: com.microsoft.azure.storage.file.CloudFileShare.createSnapshot(final HashMap<String, String> metadata, final AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  name: createSnapshot(final HashMap<String, String> metadata, final AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  nameWithType: CloudFileShare.createSnapshot(final HashMap<String, String> metadata, final AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  parameters:
  - description: <p>A collection of name-value pairs defining the metadata of the snapshot, or null. </p>
    name: metadata
    type: <xref href="final+HashMap%3CString%2C+String%3E?alt=final+HashMap%3CString%2C+String%3E&text=final+HashMap%3CString%2C+String%3E" data-throw-if-not-resolved="False"/>
  - description: <p>An <xref uid="com.microsoft.azure.storage.AccessCondition" data-throw-if-not-resolved="false" data-raw-source="AccessCondition"></xref> object that represents the access conditions for the file share. </p>
    name: accessCondition
    type: final <xref href="com.microsoft.azure.storage.AccessCondition?alt=com.microsoft.azure.storage.AccessCondition&text=AccessCondition" data-throw-if-not-resolved="False"/>
  - description: <p>A <xref uid="com.microsoft.azure.storage.file.FileRequestOptions" data-throw-if-not-resolved="false" data-raw-source="FileRequestOptions"></xref> object that specifies any additional options for the request. Specifying <code>null</code> will use the default request options from the associated service client ( <xref uid="com.microsoft.azure.storage.file.CloudFileClient" data-throw-if-not-resolved="false" data-raw-source="CloudFileClient"></xref>). </p>
    name: options
    type: <xref href="com.microsoft.azure.storage.file.FileRequestOptions?alt=com.microsoft.azure.storage.file.FileRequestOptions&text=FileRequestOptions" data-throw-if-not-resolved="False"/>
  - description: <p>An <xref uid="com.microsoft.azure.storage.OperationContext" data-throw-if-not-resolved="false" data-raw-source="OperationContext"></xref> object that represents the context for the current operation. This object is used to track requests to the storage service, and to provide additional runtime information about the operation.</p>
    name: opContext
    type: <xref href="com.microsoft.azure.storage.OperationContext?alt=com.microsoft.azure.storage.OperationContext&text=OperationContext" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  returns:
    description: <p>A <code>CloudFileShare</code> object that represents the snapshot of the file share.</p>
    type: final <xref href="com.microsoft.azure.storage.file.CloudFileShare?alt=com.microsoft.azure.storage.file.CloudFileShare&text=CloudFileShare" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Creates a snapshot of the file share using the specified request options and operation context.</p>

    <p></p>
  syntax: public final CloudFileShare createSnapshot(final HashMap<String, String> metadata, final AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  uid: com.microsoft.azure.storage.file.CloudFileShare.createSnapshot(final HashMap<String, String>,final AccessCondition,FileRequestOptions,OperationContext)
- fullName: com.microsoft.azure.storage.file.CloudFileShare.delete()
  name: delete()
  nameWithType: CloudFileShare.delete()
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  summary: >-
    <p>Deletes the share.</p>

    <p></p>
  syntax: public void delete()
  uid: com.microsoft.azure.storage.file.CloudFileShare.delete()
- fullName: com.microsoft.azure.storage.file.CloudFileShare.delete(AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  name: delete(AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  nameWithType: CloudFileShare.delete(AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  parameters:
  - description: <p>An <xref uid="com.microsoft.azure.storage.AccessCondition" data-throw-if-not-resolved="false" data-raw-source="AccessCondition"></xref> object that represents the access conditions for the share. </p>
    name: accessCondition
    type: <xref href="com.microsoft.azure.storage.AccessCondition?alt=com.microsoft.azure.storage.AccessCondition&text=AccessCondition" data-throw-if-not-resolved="False"/>
  - description: <p>A <xref uid="com.microsoft.azure.storage.file.FileRequestOptions" data-throw-if-not-resolved="false" data-raw-source="FileRequestOptions"></xref> object that specifies any additional options for the request. Specifying <code>null</code> will use the default request options from the associated service client ( <xref uid="com.microsoft.azure.storage.file.CloudFileClient" data-throw-if-not-resolved="false" data-raw-source="CloudFileClient"></xref>). </p>
    name: options
    type: <xref href="com.microsoft.azure.storage.file.FileRequestOptions?alt=com.microsoft.azure.storage.file.FileRequestOptions&text=FileRequestOptions" data-throw-if-not-resolved="False"/>
  - description: <p>An <xref uid="com.microsoft.azure.storage.OperationContext" data-throw-if-not-resolved="false" data-raw-source="OperationContext"></xref> object that represents the context for the current operation. This object is used to track requests to the storage service, and to provide additional runtime information about the operation.</p>
    name: opContext
    type: <xref href="com.microsoft.azure.storage.OperationContext?alt=com.microsoft.azure.storage.OperationContext&text=OperationContext" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  summary: >-
    <p>Deletes the share using the specified request options and operation context.</p>

    <p></p>
  syntax: public void delete(AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  uid: com.microsoft.azure.storage.file.CloudFileShare.delete(AccessCondition,FileRequestOptions,OperationContext)
- fullName: com.microsoft.azure.storage.file.CloudFileShare.delete(DeleteShareSnapshotsOption deleteSnapshotsOption, AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  name: delete(DeleteShareSnapshotsOption deleteSnapshotsOption, AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  nameWithType: CloudFileShare.delete(DeleteShareSnapshotsOption deleteSnapshotsOption, AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  parameters:
  - description: <p>A <xref uid="com.microsoft.azure.storage.file.DeleteShareSnapshotsOption" data-throw-if-not-resolved="false" data-raw-source="DeleteShareSnapshotsOption"></xref> object that indicates whether to delete only snapshots, or the share and its snapshots. </p>
    name: deleteSnapshotsOption
    type: <xref href="com.microsoft.azure.storage.file.DeleteShareSnapshotsOption?alt=com.microsoft.azure.storage.file.DeleteShareSnapshotsOption&text=DeleteShareSnapshotsOption" data-throw-if-not-resolved="False"/>
  - description: <p>An <xref uid="com.microsoft.azure.storage.AccessCondition" data-throw-if-not-resolved="false" data-raw-source="AccessCondition"></xref> object that represents the access conditions for the share. </p>
    name: accessCondition
    type: <xref href="com.microsoft.azure.storage.AccessCondition?alt=com.microsoft.azure.storage.AccessCondition&text=AccessCondition" data-throw-if-not-resolved="False"/>
  - description: <p>A <xref uid="com.microsoft.azure.storage.file.FileRequestOptions" data-throw-if-not-resolved="false" data-raw-source="FileRequestOptions"></xref> object that specifies any additional options for the request. Specifying <code>null</code> will use the default request options from the associated service client ( <xref uid="com.microsoft.azure.storage.file.CloudFileClient" data-throw-if-not-resolved="false" data-raw-source="CloudFileClient"></xref>). </p>
    name: options
    type: <xref href="com.microsoft.azure.storage.file.FileRequestOptions?alt=com.microsoft.azure.storage.file.FileRequestOptions&text=FileRequestOptions" data-throw-if-not-resolved="False"/>
  - description: <p>An <xref uid="com.microsoft.azure.storage.OperationContext" data-throw-if-not-resolved="false" data-raw-source="OperationContext"></xref> object that represents the context for the current operation. This object is used to track requests to the storage service, and to provide additional runtime information about the operation.</p>
    name: opContext
    type: <xref href="com.microsoft.azure.storage.OperationContext?alt=com.microsoft.azure.storage.OperationContext&text=OperationContext" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  summary: >-
    <p>Deletes the share using the specified snapshot and request options, and operation context. </p>

    <p>A share that has snapshots cannot be deleted unless the snapshots are also deleted. If a share has snapshots, use the <xref uid="com.microsoft.azure.storage.file.DeleteShareSnapshotsOption.INCLUDE_SNAPSHOTS" data-throw-if-not-resolved="false" data-raw-source="DeleteShareSnapshotsOption#INCLUDE_SNAPSHOTS"></xref> value in the  parameter to include the snapshots when deleting the base share.</p>

    <p></p>
  syntax: public void delete(DeleteShareSnapshotsOption deleteSnapshotsOption, AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  uid: com.microsoft.azure.storage.file.CloudFileShare.delete(DeleteShareSnapshotsOption,AccessCondition,FileRequestOptions,OperationContext)
- fullName: com.microsoft.azure.storage.file.CloudFileShare.deleteIfExists()
  name: deleteIfExists()
  nameWithType: CloudFileShare.deleteIfExists()
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  returns:
    description: >-
      <p>

        <code>true</code> if the share existed and was deleted; otherwise, <code>false</code>.</p>
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Deletes the share if it exists.</p>

    <p></p>
  syntax: public boolean deleteIfExists()
  uid: com.microsoft.azure.storage.file.CloudFileShare.deleteIfExists()
- fullName: com.microsoft.azure.storage.file.CloudFileShare.deleteIfExists(AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  name: deleteIfExists(AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  nameWithType: CloudFileShare.deleteIfExists(AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  parameters:
  - description: <p>An <xref uid="com.microsoft.azure.storage.AccessCondition" data-throw-if-not-resolved="false" data-raw-source="AccessCondition"></xref> object that represents the access conditions for the share. </p>
    name: accessCondition
    type: <xref href="com.microsoft.azure.storage.AccessCondition?alt=com.microsoft.azure.storage.AccessCondition&text=AccessCondition" data-throw-if-not-resolved="False"/>
  - description: <p>A <xref uid="com.microsoft.azure.storage.file.FileRequestOptions" data-throw-if-not-resolved="false" data-raw-source="FileRequestOptions"></xref> object that specifies any additional options for the request. Specifying <code>null</code> will use the default request options from the associated service client ( <xref uid="com.microsoft.azure.storage.file.CloudFileClient" data-throw-if-not-resolved="false" data-raw-source="CloudFileClient"></xref>). </p>
    name: options
    type: <xref href="com.microsoft.azure.storage.file.FileRequestOptions?alt=com.microsoft.azure.storage.file.FileRequestOptions&text=FileRequestOptions" data-throw-if-not-resolved="False"/>
  - description: <p>An <xref uid="com.microsoft.azure.storage.OperationContext" data-throw-if-not-resolved="false" data-raw-source="OperationContext"></xref> object that represents the context for the current operation. This object is used to track requests to the storage service, and to provide additional runtime information about the operation.</p>
    name: opContext
    type: <xref href="com.microsoft.azure.storage.OperationContext?alt=com.microsoft.azure.storage.OperationContext&text=OperationContext" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  returns:
    description: >-
      <p>

        <code>true</code> if the share existed and was deleted; otherwise, <code>false</code>.</p>
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Deletes the share if it exists using the specified request options and operation context.</p>

    <p></p>
  syntax: public boolean deleteIfExists(AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  uid: com.microsoft.azure.storage.file.CloudFileShare.deleteIfExists(AccessCondition,FileRequestOptions,OperationContext)
- fullName: com.microsoft.azure.storage.file.CloudFileShare.deleteIfExists(DeleteShareSnapshotsOption deleteSnapshotsOption, AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  name: deleteIfExists(DeleteShareSnapshotsOption deleteSnapshotsOption, AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  nameWithType: CloudFileShare.deleteIfExists(DeleteShareSnapshotsOption deleteSnapshotsOption, AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  parameters:
  - description: <p>A <xref uid="com.microsoft.azure.storage.file.DeleteShareSnapshotsOption" data-throw-if-not-resolved="false" data-raw-source="DeleteShareSnapshotsOption"></xref> object that indicates whether to delete only snapshots, or the share and its snapshots. </p>
    name: deleteSnapshotsOption
    type: <xref href="com.microsoft.azure.storage.file.DeleteShareSnapshotsOption?alt=com.microsoft.azure.storage.file.DeleteShareSnapshotsOption&text=DeleteShareSnapshotsOption" data-throw-if-not-resolved="False"/>
  - description: <p>An <xref uid="com.microsoft.azure.storage.AccessCondition" data-throw-if-not-resolved="false" data-raw-source="AccessCondition"></xref> object that represents the access conditions for the share. </p>
    name: accessCondition
    type: <xref href="com.microsoft.azure.storage.AccessCondition?alt=com.microsoft.azure.storage.AccessCondition&text=AccessCondition" data-throw-if-not-resolved="False"/>
  - description: <p>A <xref uid="com.microsoft.azure.storage.file.FileRequestOptions" data-throw-if-not-resolved="false" data-raw-source="FileRequestOptions"></xref> object that specifies any additional options for the request. Specifying <code>null</code> will use the default request options from the associated service client ( <xref uid="com.microsoft.azure.storage.file.CloudFileClient" data-throw-if-not-resolved="false" data-raw-source="CloudFileClient"></xref>). </p>
    name: options
    type: <xref href="com.microsoft.azure.storage.file.FileRequestOptions?alt=com.microsoft.azure.storage.file.FileRequestOptions&text=FileRequestOptions" data-throw-if-not-resolved="False"/>
  - description: <p>An <xref uid="com.microsoft.azure.storage.OperationContext" data-throw-if-not-resolved="false" data-raw-source="OperationContext"></xref> object that represents the context for the current operation. This object is used to track requests to the storage service, and to provide additional runtime information about the operation.</p>
    name: opContext
    type: <xref href="com.microsoft.azure.storage.OperationContext?alt=com.microsoft.azure.storage.OperationContext&text=OperationContext" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  returns:
    description: >-
      <p>

        <code>true</code> if the share existed and was deleted; otherwise, <code>false</code>.</p>
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Deletes the share if it exists, using the specified snapshot and request options, and operation context. </p>

    <p>A share that has snapshots cannot be deleted unless the snapshots are also deleted. If a share has snapshots, use the <xref uid="com.microsoft.azure.storage.file.DeleteShareSnapshotsOption.INCLUDE_SNAPSHOTS" data-throw-if-not-resolved="false" data-raw-source="DeleteShareSnapshotsOption#INCLUDE_SNAPSHOTS"></xref> value in the  parameter to include the snapshots when deleting the base share.</p>

    <p></p>
  syntax: public boolean deleteIfExists(DeleteShareSnapshotsOption deleteSnapshotsOption, AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  uid: com.microsoft.azure.storage.file.CloudFileShare.deleteIfExists(DeleteShareSnapshotsOption,AccessCondition,FileRequestOptions,OperationContext)
- fullName: com.microsoft.azure.storage.file.CloudFileShare.downloadAttributes()
  name: downloadAttributes()
  nameWithType: CloudFileShare.downloadAttributes()
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  summary: >-
    <p>Downloads the share's attributes, which consist of metadata and properties.</p>

    <p></p>
  syntax: public void downloadAttributes()
  uid: com.microsoft.azure.storage.file.CloudFileShare.downloadAttributes()
- fullName: com.microsoft.azure.storage.file.CloudFileShare.downloadAttributes(AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  name: downloadAttributes(AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  nameWithType: CloudFileShare.downloadAttributes(AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  parameters:
  - description: <p>An <xref uid="com.microsoft.azure.storage.AccessCondition" data-throw-if-not-resolved="false" data-raw-source="AccessCondition"></xref> object that represents the access conditions for the share. </p>
    name: accessCondition
    type: <xref href="com.microsoft.azure.storage.AccessCondition?alt=com.microsoft.azure.storage.AccessCondition&text=AccessCondition" data-throw-if-not-resolved="False"/>
  - description: <p>A <xref uid="com.microsoft.azure.storage.file.FileRequestOptions" data-throw-if-not-resolved="false" data-raw-source="FileRequestOptions"></xref> object that specifies any additional options for the request. Specifying <code>null</code> will use the default request options from the associated service client ( <xref uid="com.microsoft.azure.storage.file.CloudFileClient" data-throw-if-not-resolved="false" data-raw-source="CloudFileClient"></xref>). </p>
    name: options
    type: <xref href="com.microsoft.azure.storage.file.FileRequestOptions?alt=com.microsoft.azure.storage.file.FileRequestOptions&text=FileRequestOptions" data-throw-if-not-resolved="False"/>
  - description: <p>An <xref uid="com.microsoft.azure.storage.OperationContext" data-throw-if-not-resolved="false" data-raw-source="OperationContext"></xref> object that represents the context for the current operation. This object is used to track requests to the storage service, and to provide additional runtime information about the operation.</p>
    name: opContext
    type: <xref href="com.microsoft.azure.storage.OperationContext?alt=com.microsoft.azure.storage.OperationContext&text=OperationContext" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  summary: >-
    <p>Downloads the share's attributes, which consist of metadata and properties, using the specified request options and operation context.</p>

    <p></p>
  syntax: public void downloadAttributes(AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  uid: com.microsoft.azure.storage.file.CloudFileShare.downloadAttributes(AccessCondition,FileRequestOptions,OperationContext)
- fullName: com.microsoft.azure.storage.file.CloudFileShare.downloadPermissions()
  name: downloadPermissions()
  nameWithType: CloudFileShare.downloadPermissions()
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  returns:
    description: <p>A <xref uid="com.microsoft.azure.storage.file.FileSharePermissions" data-throw-if-not-resolved="false" data-raw-source="FileSharePermissions"></xref> object that represents the share's permissions.</p>
    type: <xref href="com.microsoft.azure.storage.file.FileSharePermissions?alt=com.microsoft.azure.storage.file.FileSharePermissions&text=FileSharePermissions" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Downloads the permission settings for the share.</p>

    <p></p>
  syntax: public FileSharePermissions downloadPermissions()
  uid: com.microsoft.azure.storage.file.CloudFileShare.downloadPermissions()
- fullName: com.microsoft.azure.storage.file.CloudFileShare.downloadPermissions(AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  name: downloadPermissions(AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  nameWithType: CloudFileShare.downloadPermissions(AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  parameters:
  - description: <p>An <xref uid="com.microsoft.azure.storage.AccessCondition" data-throw-if-not-resolved="false" data-raw-source="AccessCondition"></xref> object that represents the access conditions for the share. </p>
    name: accessCondition
    type: <xref href="com.microsoft.azure.storage.AccessCondition?alt=com.microsoft.azure.storage.AccessCondition&text=AccessCondition" data-throw-if-not-resolved="False"/>
  - description: <p>A <xref uid="com.microsoft.azure.storage.file.FileRequestOptions" data-throw-if-not-resolved="false" data-raw-source="FileRequestOptions"></xref> object that specifies any additional options for the request. Specifying <code>null</code> will use the default request options from the associated service client ( <xref uid="com.microsoft.azure.storage.file.CloudFileClient" data-throw-if-not-resolved="false" data-raw-source="CloudFileClient"></xref>). </p>
    name: options
    type: <xref href="com.microsoft.azure.storage.file.FileRequestOptions?alt=com.microsoft.azure.storage.file.FileRequestOptions&text=FileRequestOptions" data-throw-if-not-resolved="False"/>
  - description: <p>An <xref uid="com.microsoft.azure.storage.OperationContext" data-throw-if-not-resolved="false" data-raw-source="OperationContext"></xref> object that represents the context for the current operation. This object is used to track requests to the storage service, and to provide additional runtime information about the operation.</p>
    name: opContext
    type: <xref href="com.microsoft.azure.storage.OperationContext?alt=com.microsoft.azure.storage.OperationContext&text=OperationContext" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  returns:
    description: <p>A <xref uid="com.microsoft.azure.storage.file.FileSharePermissions" data-throw-if-not-resolved="false" data-raw-source="FileSharePermissions"></xref> object that represents the share's permissions.</p>
    type: <xref href="com.microsoft.azure.storage.file.FileSharePermissions?alt=com.microsoft.azure.storage.file.FileSharePermissions&text=FileSharePermissions" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Downloads the permissions settings for the share using the specified request options and operation context.</p>

    <p></p>
  syntax: public FileSharePermissions downloadPermissions(AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  uid: com.microsoft.azure.storage.file.CloudFileShare.downloadPermissions(AccessCondition,FileRequestOptions,OperationContext)
- fullName: com.microsoft.azure.storage.file.CloudFileShare.exists()
  name: exists()
  nameWithType: CloudFileShare.exists()
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  returns:
    description: >-
      <p>

        <code>true</code> if the share exists, otherwise <code>false</code>.</p>
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Returns a value that indicates whether the share exists.</p>

    <p></p>
  syntax: public boolean exists()
  uid: com.microsoft.azure.storage.file.CloudFileShare.exists()
- fullName: com.microsoft.azure.storage.file.CloudFileShare.exists(final AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  name: exists(final AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  nameWithType: CloudFileShare.exists(final AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  parameters:
  - description: <p>An <xref uid="com.microsoft.azure.storage.AccessCondition" data-throw-if-not-resolved="false" data-raw-source="AccessCondition"></xref> object that represents the access conditions for the share. </p>
    name: accessCondition
    type: final <xref href="com.microsoft.azure.storage.AccessCondition?alt=com.microsoft.azure.storage.AccessCondition&text=AccessCondition" data-throw-if-not-resolved="False"/>
  - description: <p>A <xref uid="com.microsoft.azure.storage.file.FileRequestOptions" data-throw-if-not-resolved="false" data-raw-source="FileRequestOptions"></xref> object that specifies any additional options for the request. Specifying <code>null</code> will use the default request options from the associated service client ( <xref uid="com.microsoft.azure.storage.file.CloudFileClient" data-throw-if-not-resolved="false" data-raw-source="CloudFileClient"></xref>). </p>
    name: options
    type: <xref href="com.microsoft.azure.storage.file.FileRequestOptions?alt=com.microsoft.azure.storage.file.FileRequestOptions&text=FileRequestOptions" data-throw-if-not-resolved="False"/>
  - description: <p>An <xref uid="com.microsoft.azure.storage.OperationContext" data-throw-if-not-resolved="false" data-raw-source="OperationContext"></xref> object that represents the context for the current operation. This object is used to track requests to the storage service, and to provide additional runtime information about the operation.</p>
    name: opContext
    type: <xref href="com.microsoft.azure.storage.OperationContext?alt=com.microsoft.azure.storage.OperationContext&text=OperationContext" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  returns:
    description: >-
      <p>

        <code>true</code> if the share exists, otherwise <code>false</code>.</p>
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Returns a value that indicates whether the share exists, using the specified request options and operation context.</p>

    <p></p>
  syntax: public boolean exists(final AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  uid: com.microsoft.azure.storage.file.CloudFileShare.exists(final AccessCondition,FileRequestOptions,OperationContext)
- fullName: com.microsoft.azure.storage.file.CloudFileShare.generateSharedAccessSignature(final SharedAccessFilePolicy policy, final String groupPolicyIdentifier)
  name: generateSharedAccessSignature(final SharedAccessFilePolicy policy, final String groupPolicyIdentifier)
  nameWithType: CloudFileShare.generateSharedAccessSignature(final SharedAccessFilePolicy policy, final String groupPolicyIdentifier)
  parameters:
  - description: <p>An <xref uid="com.microsoft.azure.storage.file.SharedAccessFilePolicy" data-throw-if-not-resolved="false" data-raw-source="SharedAccessFilePolicy"></xref> object that represents the access policy for the shared access signature. </p>
    name: policy
    type: final <xref href="com.microsoft.azure.storage.file.SharedAccessFilePolicy?alt=com.microsoft.azure.storage.file.SharedAccessFilePolicy&text=SharedAccessFilePolicy" data-throw-if-not-resolved="False"/>
  - description: <p>A <code>String</code> which represents the share-level access policy.</p>
    name: groupPolicyIdentifier
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  - type: <xref href="InvalidKeyException?alt=InvalidKeyException&text=InvalidKeyException" data-throw-if-not-resolved="False"/>
    description: <p>If the key is invalid. </p>
  returns:
    description: <p>A <code>String</code> which represents a shared access signature for the share.</p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Returns a shared access signature for the share. Note this does not contain the leading "?".</p>

    <p></p>
  syntax: public String generateSharedAccessSignature(final SharedAccessFilePolicy policy, final String groupPolicyIdentifier)
  uid: com.microsoft.azure.storage.file.CloudFileShare.generateSharedAccessSignature(final SharedAccessFilePolicy,final String)
- fullName: com.microsoft.azure.storage.file.CloudFileShare.generateSharedAccessSignature(final SharedAccessFilePolicy policy, final String groupPolicyIdentifier, final IPRange ipRange, final SharedAccessProtocols protocols)
  name: generateSharedAccessSignature(final SharedAccessFilePolicy policy, final String groupPolicyIdentifier, final IPRange ipRange, final SharedAccessProtocols protocols)
  nameWithType: CloudFileShare.generateSharedAccessSignature(final SharedAccessFilePolicy policy, final String groupPolicyIdentifier, final IPRange ipRange, final SharedAccessProtocols protocols)
  parameters:
  - description: <p>An <xref uid="com.microsoft.azure.storage.file.SharedAccessFilePolicy" data-throw-if-not-resolved="false" data-raw-source="SharedAccessFilePolicy"></xref> object that represents the access policy for the shared access signature. </p>
    name: policy
    type: final <xref href="com.microsoft.azure.storage.file.SharedAccessFilePolicy?alt=com.microsoft.azure.storage.file.SharedAccessFilePolicy&text=SharedAccessFilePolicy" data-throw-if-not-resolved="False"/>
  - description: <p>A <code>String</code> which represents the share-level access policy. </p>
    name: groupPolicyIdentifier
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>A <xref uid="com.microsoft.azure.storage.IPRange" data-throw-if-not-resolved="false" data-raw-source="IPRange"></xref> object containing the range of allowed IP addresses. </p>
    name: ipRange
    type: final <xref href="com.microsoft.azure.storage.IPRange?alt=com.microsoft.azure.storage.IPRange&text=IPRange" data-throw-if-not-resolved="False"/>
  - description: <p>A <xref uid="com.microsoft.azure.storage.SharedAccessProtocols" data-throw-if-not-resolved="false" data-raw-source="SharedAccessProtocols"></xref> representing the allowed Internet protocols.</p>
    name: protocols
    type: final <xref href="com.microsoft.azure.storage.SharedAccessProtocols?alt=com.microsoft.azure.storage.SharedAccessProtocols&text=SharedAccessProtocols" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  - type: <xref href="InvalidKeyException?alt=InvalidKeyException&text=InvalidKeyException" data-throw-if-not-resolved="False"/>
    description: <p>If the key is invalid. </p>
  returns:
    description: <p>A <code>String</code> which represents a shared access signature for the share.</p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Returns a shared access signature for the share. Note this does not contain the leading "?".</p>

    <p></p>
  syntax: public String generateSharedAccessSignature(final SharedAccessFilePolicy policy, final String groupPolicyIdentifier, final IPRange ipRange, final SharedAccessProtocols protocols)
  uid: com.microsoft.azure.storage.file.CloudFileShare.generateSharedAccessSignature(final SharedAccessFilePolicy,final String,final IPRange,final SharedAccessProtocols)
- fullName: com.microsoft.azure.storage.file.CloudFileShare.getFilePermission(String filePermissionKey)
  name: getFilePermission(String filePermissionKey)
  nameWithType: CloudFileShare.getFilePermission(String filePermissionKey)
  parameters:
  - description: <p>A <code>String</code> object that represents the file permission key. </p>
    name: filePermissionKey
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>The <code>String</code> representing the file permission associated with the file permission key.</p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the file permission associated with a file permission key.</p>

    <p></p>
  syntax: public String getFilePermission(String filePermissionKey)
  uid: com.microsoft.azure.storage.file.CloudFileShare.getFilePermission(String)
- fullName: com.microsoft.azure.storage.file.CloudFileShare.getFilePermission(String filePermissionKey, FileRequestOptions options, OperationContext opContext)
  name: getFilePermission(String filePermissionKey, FileRequestOptions options, OperationContext opContext)
  nameWithType: CloudFileShare.getFilePermission(String filePermissionKey, FileRequestOptions options, OperationContext opContext)
  parameters:
  - description: <p>A <code>String</code> object that represents the file permission key. </p>
    name: filePermissionKey
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>A <xref uid="com.microsoft.azure.storage.file.FileRequestOptions" data-throw-if-not-resolved="false" data-raw-source="FileRequestOptions"></xref> object that specifies any additional options for the request. Specifying <code>null</code> will use the default request options from the associated service client ( <xref uid="com.microsoft.azure.storage.file.CloudFileClient" data-throw-if-not-resolved="false" data-raw-source="CloudFileClient"></xref>). </p>
    name: options
    type: <xref href="com.microsoft.azure.storage.file.FileRequestOptions?alt=com.microsoft.azure.storage.file.FileRequestOptions&text=FileRequestOptions" data-throw-if-not-resolved="False"/>
  - description: <p>An <xref uid="com.microsoft.azure.storage.OperationContext" data-throw-if-not-resolved="false" data-raw-source="OperationContext"></xref> object that represents the context for the current operation. This object is used to track requests to the storage service, and to provide additional runtime information about the operation. </p>
    name: opContext
    type: <xref href="com.microsoft.azure.storage.OperationContext?alt=com.microsoft.azure.storage.OperationContext&text=OperationContext" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>The <code>String</code> representing the file permission associated with the file permission key.</p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the file permission associated with a file permission key.</p>

    <p></p>
  syntax: public String getFilePermission(String filePermissionKey, FileRequestOptions options, OperationContext opContext)
  uid: com.microsoft.azure.storage.file.CloudFileShare.getFilePermission(String,FileRequestOptions,OperationContext)
- fullName: com.microsoft.azure.storage.file.CloudFileShare.getMetadata()
  name: getMetadata()
  nameWithType: CloudFileShare.getMetadata()
  returns:
    description: <p>A <code>java.util.HashMap</code> object that represents the metadata for the share. </p>
    type: <xref href="HashMap%3CString%2C+String%3E?alt=HashMap%3CString%2C+String%3E&text=HashMap%3CString%2C+String%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Returns the metadata for the share. This value is initialized with the metadata from the share by a call to <xref uid="com.microsoft.azure.storage.file.CloudFileShare.downloadAttributes()" data-throw-if-not-resolved="false" data-raw-source="downloadAttributes"></xref>, and is set on the share with a call to <xref uid="com.microsoft.azure.storage.file.CloudFileShare.uploadMetadata()" data-throw-if-not-resolved="false" data-raw-source="uploadMetadata"></xref>.</p>

    <p></p>
  syntax: public HashMap<String, String> getMetadata()
  uid: com.microsoft.azure.storage.file.CloudFileShare.getMetadata()
- fullName: com.microsoft.azure.storage.file.CloudFileShare.getName()
  name: getName()
  nameWithType: CloudFileShare.getName()
  returns:
    description: <p>A <code>String</code> that represents the name of the share. </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Returns the name of the share.</p>

    <p></p>
  syntax: public String getName()
  uid: com.microsoft.azure.storage.file.CloudFileShare.getName()
- fullName: com.microsoft.azure.storage.file.CloudFileShare.getProperties()
  name: getProperties()
  nameWithType: CloudFileShare.getProperties()
  returns:
    description: <p>A <xref uid="com.microsoft.azure.storage.file.FileShareProperties" data-throw-if-not-resolved="false" data-raw-source="FileShareProperties"></xref> object that represents the properties for the share. </p>
    type: <xref href="com.microsoft.azure.storage.file.FileShareProperties?alt=com.microsoft.azure.storage.file.FileShareProperties&text=FileShareProperties" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Returns the properties for the share.</p>

    <p></p>
  syntax: public FileShareProperties getProperties()
  uid: com.microsoft.azure.storage.file.CloudFileShare.getProperties()
- fullName: com.microsoft.azure.storage.file.CloudFileShare.getQualifiedUri()
  name: getQualifiedUri()
  nameWithType: CloudFileShare.getQualifiedUri()
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  - type: <xref href="URISyntaxException?alt=URISyntaxException&text=URISyntaxException" data-throw-if-not-resolved="False"/>
    description: <p>If the resource URI is invalid. </p>
  returns:
    description: <p>A <code>java.net.URI</code> object that represents the snapshot or shared access signature.</p>
    type: <xref href="final+URI?alt=final+URI&text=final+URI" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Returns the snapshot or shared access signature qualified URI for this share.</p>

    <p></p>
  syntax: public final URI getQualifiedUri()
  uid: com.microsoft.azure.storage.file.CloudFileShare.getQualifiedUri()
- fullName: com.microsoft.azure.storage.file.CloudFileShare.getRootDirectoryReference()
  name: getRootDirectoryReference()
  nameWithType: CloudFileShare.getRootDirectoryReference()
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
  - type: <xref href="URISyntaxException?alt=URISyntaxException&text=URISyntaxException" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>A <xref uid="com.microsoft.azure.storage.file.CloudFileDirectory" data-throw-if-not-resolved="false" data-raw-source="CloudFileDirectory"></xref> reference to the root directory for this share. </p>
    type: <xref href="com.microsoft.azure.storage.file.CloudFileDirectory?alt=com.microsoft.azure.storage.file.CloudFileDirectory&text=CloudFileDirectory" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Returns a reference to a <xref uid="com.microsoft.azure.storage.file.CloudFileDirectory" data-throw-if-not-resolved="false" data-raw-source="CloudFileDirectory"></xref> object that represents the root file directory within this share.</p>

    <p></p>
  syntax: public CloudFileDirectory getRootDirectoryReference()
  uid: com.microsoft.azure.storage.file.CloudFileShare.getRootDirectoryReference()
- fullName: com.microsoft.azure.storage.file.CloudFileShare.getServiceClient()
  name: getServiceClient()
  nameWithType: CloudFileShare.getServiceClient()
  returns:
    description: <p>A <xref uid="com.microsoft.azure.storage.file.CloudFileClient" data-throw-if-not-resolved="false" data-raw-source="CloudFileClient"></xref> object that represents the service client associated with this share. </p>
    type: <xref href="com.microsoft.azure.storage.file.CloudFileClient?alt=com.microsoft.azure.storage.file.CloudFileClient&text=CloudFileClient" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Returns the File service client associated with this share.</p>

    <p></p>
  syntax: public CloudFileClient getServiceClient()
  uid: com.microsoft.azure.storage.file.CloudFileShare.getServiceClient()
- fullName: com.microsoft.azure.storage.file.CloudFileShare.getSnapshot()
  name: getSnapshot()
  nameWithType: CloudFileShare.getSnapshot()
  returns:
    description: <p>The snapshotID as a string for this share. </p>
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Returns the snapshotID for this share.</p>

    <p></p>
  syntax: public final String getSnapshot()
  uid: com.microsoft.azure.storage.file.CloudFileShare.getSnapshot()
- fullName: com.microsoft.azure.storage.file.CloudFileShare.getStats()
  name: getStats()
  nameWithType: CloudFileShare.getStats()
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  returns:
    description: <p>A <xref uid="com.microsoft.azure.storage.file.ShareStats" data-throw-if-not-resolved="false" data-raw-source="ShareStats"></xref> object for the given storage service.</p>
    type: <xref href="com.microsoft.azure.storage.file.ShareStats?alt=com.microsoft.azure.storage.file.ShareStats&text=ShareStats" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Queries the service for this share's <xref uid="com.microsoft.azure.storage.file.ShareStats" data-throw-if-not-resolved="false" data-raw-source="ShareStats"></xref>.</p>

    <p></p>
  syntax: public ShareStats getStats()
  uid: com.microsoft.azure.storage.file.CloudFileShare.getStats()
- fullName: com.microsoft.azure.storage.file.CloudFileShare.getStats(FileRequestOptions options, OperationContext opContext)
  name: getStats(FileRequestOptions options, OperationContext opContext)
  nameWithType: CloudFileShare.getStats(FileRequestOptions options, OperationContext opContext)
  parameters:
  - description: <p>A <xref uid="com.microsoft.azure.storage.file.FileRequestOptions" data-throw-if-not-resolved="false" data-raw-source="FileRequestOptions"></xref> object that specifies any additional options for the request. Specifying <code>null</code> will use the default request options from the associated service client (<xref uid="com.microsoft.azure.storage.file.CloudFileClient" data-throw-if-not-resolved="false" data-raw-source="CloudFileClient"></xref>). </p>
    name: options
    type: <xref href="com.microsoft.azure.storage.file.FileRequestOptions?alt=com.microsoft.azure.storage.file.FileRequestOptions&text=FileRequestOptions" data-throw-if-not-resolved="False"/>
  - description: <p>An <xref uid="com.microsoft.azure.storage.OperationContext" data-throw-if-not-resolved="false" data-raw-source="OperationContext"></xref> object that represents the context for the current operation. This object is used to track requests to the storage service, and to provide additional runtime information about the operation.</p>
    name: opContext
    type: <xref href="com.microsoft.azure.storage.OperationContext?alt=com.microsoft.azure.storage.OperationContext&text=OperationContext" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  returns:
    description: <p>A <xref uid="com.microsoft.azure.storage.file.ShareStats" data-throw-if-not-resolved="false" data-raw-source="ShareStats"></xref> object for the given storage service.</p>
    type: <xref href="com.microsoft.azure.storage.file.ShareStats?alt=com.microsoft.azure.storage.file.ShareStats&text=ShareStats" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Queries the service for this share's <xref uid="com.microsoft.azure.storage.file.ShareStats" data-throw-if-not-resolved="false" data-raw-source="ShareStats"></xref>.</p>

    <p></p>
  syntax: public ShareStats getStats(FileRequestOptions options, OperationContext opContext)
  uid: com.microsoft.azure.storage.file.CloudFileShare.getStats(FileRequestOptions,OperationContext)
- fullName: com.microsoft.azure.storage.file.CloudFileShare.getStorageUri()
  name: getStorageUri()
  nameWithType: CloudFileShare.getStorageUri()
  returns:
    description: <p>A <xref uid="com.microsoft.azure.storage.StorageUri" data-throw-if-not-resolved="false" data-raw-source="StorageUri"></xref> object which represents the list of URIs for all locations. </p>
    type: <xref href="com.microsoft.azure.storage.StorageUri?alt=com.microsoft.azure.storage.StorageUri&text=StorageUri" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Returns the list of URIs for all locations.</p>

    <p></p>
  syntax: public StorageUri getStorageUri()
  uid: com.microsoft.azure.storage.file.CloudFileShare.getStorageUri()
- fullName: com.microsoft.azure.storage.file.CloudFileShare.getUri()
  name: getUri()
  nameWithType: CloudFileShare.getUri()
  returns:
    description: <p>The absolute URI to the share. </p>
    type: <xref href="URI?alt=URI&text=URI" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Returns the URI for this share.</p>

    <p></p>
  syntax: public URI getUri()
  uid: com.microsoft.azure.storage.file.CloudFileShare.getUri()
- fullName: com.microsoft.azure.storage.file.CloudFileShare.isSnapshot()
  name: isSnapshot()
  nameWithType: CloudFileShare.isSnapshot()
  returns:
    description: >-
      <p>

        <code>true</code> if the share is a snapshot, otherwise <code>false</code>.</p>
    type: <xref href="final+boolean?alt=final+boolean&text=final+boolean" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Indicates whether this share is a snapshot.</p>

    <p></p>
  syntax: public final boolean isSnapshot()
  uid: com.microsoft.azure.storage.file.CloudFileShare.isSnapshot()
- fullName: com.microsoft.azure.storage.file.CloudFileShare.setMetadata(final HashMap<String, String> metadata)
  name: setMetadata(final HashMap<String, String> metadata)
  nameWithType: CloudFileShare.setMetadata(final HashMap<String, String> metadata)
  parameters:
  - description: <p>A <code>java.util.HashMap</code> object that represents the metadata being assigned to the share. </p>
    name: metadata
    type: <xref href="final+HashMap%3CString%2C+String%3E?alt=final+HashMap%3CString%2C+String%3E&text=final+HashMap%3CString%2C+String%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Sets the metadata collection of name-value pairs to be set on the share with an <xref uid="com.microsoft.azure.storage.file.CloudFileShare.uploadMetadata()" data-throw-if-not-resolved="false" data-raw-source="uploadMetadata"></xref> call. This collection will overwrite any existing share metadata. If this is set to an empty collection, the share metadata will be cleared on an <xref uid="com.microsoft.azure.storage.file.CloudFileShare.uploadMetadata()" data-throw-if-not-resolved="false" data-raw-source="uploadMetadata"></xref> call.</p>

    <p></p>
  syntax: public void setMetadata(final HashMap<String, String> metadata)
  uid: com.microsoft.azure.storage.file.CloudFileShare.setMetadata(final HashMap<String, String>)
- fullName: com.microsoft.azure.storage.file.CloudFileShare.setProperties(final FileShareProperties properties)
  name: setProperties(final FileShareProperties properties)
  nameWithType: CloudFileShare.setProperties(final FileShareProperties properties)
  parameters:
  - description: <p>A <xref uid="com.microsoft.azure.storage.file.FileShareProperties" data-throw-if-not-resolved="false" data-raw-source="FileShareProperties"></xref> object that represents the properties being assigned to the share. </p>
    name: properties
    type: final <xref href="com.microsoft.azure.storage.file.FileShareProperties?alt=com.microsoft.azure.storage.file.FileShareProperties&text=FileShareProperties" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Sets the properties for the share.</p>

    <p></p>
  syntax: public void setProperties(final FileShareProperties properties)
  uid: com.microsoft.azure.storage.file.CloudFileShare.setProperties(final FileShareProperties)
- fullName: com.microsoft.azure.storage.file.CloudFileShare.uploadMetadata()
  name: uploadMetadata()
  nameWithType: CloudFileShare.uploadMetadata()
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  summary: >-
    <p>Uploads the share's metadata.</p>

    <p></p>
  syntax: public void uploadMetadata()
  uid: com.microsoft.azure.storage.file.CloudFileShare.uploadMetadata()
- fullName: com.microsoft.azure.storage.file.CloudFileShare.uploadMetadata(AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  name: uploadMetadata(AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  nameWithType: CloudFileShare.uploadMetadata(AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  parameters:
  - description: <p>An <xref uid="com.microsoft.azure.storage.AccessCondition" data-throw-if-not-resolved="false" data-raw-source="AccessCondition"></xref> object that represents the access conditions for the share. </p>
    name: accessCondition
    type: <xref href="com.microsoft.azure.storage.AccessCondition?alt=com.microsoft.azure.storage.AccessCondition&text=AccessCondition" data-throw-if-not-resolved="False"/>
  - description: <p>A <xref uid="com.microsoft.azure.storage.file.FileRequestOptions" data-throw-if-not-resolved="false" data-raw-source="FileRequestOptions"></xref> object that specifies any additional options for the request. Specifying <code>null</code> will use the default request options from the associated service client ( <xref uid="com.microsoft.azure.storage.file.CloudFileClient" data-throw-if-not-resolved="false" data-raw-source="CloudFileClient"></xref>). </p>
    name: options
    type: <xref href="com.microsoft.azure.storage.file.FileRequestOptions?alt=com.microsoft.azure.storage.file.FileRequestOptions&text=FileRequestOptions" data-throw-if-not-resolved="False"/>
  - description: <p>An <xref uid="com.microsoft.azure.storage.OperationContext" data-throw-if-not-resolved="false" data-raw-source="OperationContext"></xref> object that represents the context for the current operation. This object is used to track requests to the storage service, and to provide additional runtime information about the operation.</p>
    name: opContext
    type: <xref href="com.microsoft.azure.storage.OperationContext?alt=com.microsoft.azure.storage.OperationContext&text=OperationContext" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  summary: >-
    <p>Uploads the share's metadata using the specified request options and operation context.</p>

    <p></p>
  syntax: public void uploadMetadata(AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  uid: com.microsoft.azure.storage.file.CloudFileShare.uploadMetadata(AccessCondition,FileRequestOptions,OperationContext)
- fullName: com.microsoft.azure.storage.file.CloudFileShare.uploadPermissions(final FileSharePermissions permissions)
  name: uploadPermissions(final FileSharePermissions permissions)
  nameWithType: CloudFileShare.uploadPermissions(final FileSharePermissions permissions)
  parameters:
  - description: <p>A <xref uid="com.microsoft.azure.storage.file.FileSharePermissions" data-throw-if-not-resolved="false" data-raw-source="FileSharePermissions"></xref> object that represents the permissions to upload.</p>
    name: permissions
    type: final <xref href="com.microsoft.azure.storage.file.FileSharePermissions?alt=com.microsoft.azure.storage.file.FileSharePermissions&text=FileSharePermissions" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  summary: >-
    <p>Uploads the share's permissions.</p>

    <p></p>
  syntax: public void uploadPermissions(final FileSharePermissions permissions)
  uid: com.microsoft.azure.storage.file.CloudFileShare.uploadPermissions(final FileSharePermissions)
- fullName: com.microsoft.azure.storage.file.CloudFileShare.uploadPermissions(final FileSharePermissions permissions, final AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  name: uploadPermissions(final FileSharePermissions permissions, final AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  nameWithType: CloudFileShare.uploadPermissions(final FileSharePermissions permissions, final AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  parameters:
  - description: <p>A <xref uid="com.microsoft.azure.storage.file.FileSharePermissions" data-throw-if-not-resolved="false" data-raw-source="FileSharePermissions"></xref> object that represents the permissions to upload. </p>
    name: permissions
    type: final <xref href="com.microsoft.azure.storage.file.FileSharePermissions?alt=com.microsoft.azure.storage.file.FileSharePermissions&text=FileSharePermissions" data-throw-if-not-resolved="False"/>
  - description: <p>An <xref uid="com.microsoft.azure.storage.AccessCondition" data-throw-if-not-resolved="false" data-raw-source="AccessCondition"></xref> object that represents the access conditions for the share. </p>
    name: accessCondition
    type: final <xref href="com.microsoft.azure.storage.AccessCondition?alt=com.microsoft.azure.storage.AccessCondition&text=AccessCondition" data-throw-if-not-resolved="False"/>
  - description: <p>A <xref uid="com.microsoft.azure.storage.file.FileRequestOptions" data-throw-if-not-resolved="false" data-raw-source="FileRequestOptions"></xref> object that specifies any additional options for the request. Specifying <code>null</code> will use the default request options from the associated service client ( <xref uid="com.microsoft.azure.storage.file.CloudFileClient" data-throw-if-not-resolved="false" data-raw-source="CloudFileClient"></xref>). </p>
    name: options
    type: <xref href="com.microsoft.azure.storage.file.FileRequestOptions?alt=com.microsoft.azure.storage.file.FileRequestOptions&text=FileRequestOptions" data-throw-if-not-resolved="False"/>
  - description: <p>An <xref uid="com.microsoft.azure.storage.OperationContext" data-throw-if-not-resolved="false" data-raw-source="OperationContext"></xref> object that represents the context for the current operation. This object is used to track requests to the storage service, and to provide additional runtime information about the operation.</p>
    name: opContext
    type: <xref href="com.microsoft.azure.storage.OperationContext?alt=com.microsoft.azure.storage.OperationContext&text=OperationContext" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  summary: >-
    <p>Uploads the share's permissions using the specified request options and operation context.</p>

    <p></p>
  syntax: public void uploadPermissions(final FileSharePermissions permissions, final AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  uid: com.microsoft.azure.storage.file.CloudFileShare.uploadPermissions(final FileSharePermissions,final AccessCondition,FileRequestOptions,OperationContext)
- fullName: com.microsoft.azure.storage.file.CloudFileShare.uploadProperties()
  name: uploadProperties()
  nameWithType: CloudFileShare.uploadProperties()
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  returns:
    type: <xref href="final+void?alt=final+void&text=final+void" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Updates the share's properties on the storage service. </p>

    <p>Use <xref uid="com.microsoft.azure.storage.file.CloudFileShare.downloadAttributes()" data-throw-if-not-resolved="false" data-raw-source="CloudFileShare#downloadAttributes"></xref> to retrieve the latest values for the share's properties and metadata from the Microsoft Azure storage service.</p>

    <p></p>
  syntax: public final void uploadProperties()
  uid: com.microsoft.azure.storage.file.CloudFileShare.uploadProperties()
- fullName: com.microsoft.azure.storage.file.CloudFileShare.uploadProperties(AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  name: uploadProperties(AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  nameWithType: CloudFileShare.uploadProperties(AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  parameters:
  - description: <p>An <xref uid="com.microsoft.azure.storage.AccessCondition" data-throw-if-not-resolved="false" data-raw-source="AccessCondition"></xref> object that represents the access conditions for the share. </p>
    name: accessCondition
    type: <xref href="com.microsoft.azure.storage.AccessCondition?alt=com.microsoft.azure.storage.AccessCondition&text=AccessCondition" data-throw-if-not-resolved="False"/>
  - description: <p>A <xref uid="com.microsoft.azure.storage.file.FileRequestOptions" data-throw-if-not-resolved="false" data-raw-source="FileRequestOptions"></xref> object that specifies any additional options for the request. Specifying <code>null</code> will use the default request options from the associated service client ( <xref uid="com.microsoft.azure.storage.file.CloudFileClient" data-throw-if-not-resolved="false" data-raw-source="CloudFileClient"></xref>). </p>
    name: options
    type: <xref href="com.microsoft.azure.storage.file.FileRequestOptions?alt=com.microsoft.azure.storage.file.FileRequestOptions&text=FileRequestOptions" data-throw-if-not-resolved="False"/>
  - description: <p>An <xref uid="com.microsoft.azure.storage.OperationContext" data-throw-if-not-resolved="false" data-raw-source="OperationContext"></xref> object that represents the context for the current operation. This object is used to track requests to the storage service, and to provide additional runtime information about the operation.</p>
    name: opContext
    type: <xref href="com.microsoft.azure.storage.OperationContext?alt=com.microsoft.azure.storage.OperationContext&text=OperationContext" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  returns:
    type: <xref href="final+void?alt=final+void&text=final+void" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Updates the share's properties using the request options, and operation context. </p>

    <p>Use <xref uid="com.microsoft.azure.storage.file.CloudFileShare.downloadAttributes()" data-throw-if-not-resolved="false" data-raw-source="CloudFileShare#downloadAttributes"></xref> to retrieve the latest values for the share's properties and metadata from the Microsoft Azure storage service.</p>

    <p></p>
  syntax: public final void uploadProperties(AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  uid: com.microsoft.azure.storage.file.CloudFileShare.uploadProperties(AccessCondition,FileRequestOptions,OperationContext)
nameWithType: CloudFileShare
syntax: public class CloudFileShare
type: class
uid: com.microsoft.azure.storage.file.CloudFileShare
fullName: com.microsoft.azure.storage.file.CloudFileShare
name: CloudFileShare
package: com.microsoft.azure.storage.file
summary: >-
  <p>Represents a share in the Microsoft Azure File service. </p>

  <p>Shares hold directories, which are encapsulated as <xref uid="com.microsoft.azure.storage.file.CloudFileDirectory" data-throw-if-not-resolved="false" data-raw-source="CloudFileDirectory"></xref> objects, and directories hold files. Directories can also contain sub-directories. </p>
metadata: {}
