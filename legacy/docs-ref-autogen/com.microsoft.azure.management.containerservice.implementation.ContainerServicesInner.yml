### YamlMime:JavaType
constructors:
- fullName: com.microsoft.azure.management.containerservice.implementation.ContainerServicesInner.ContainerServicesInner(Retrofit retrofit, ContainerServiceManagementClientImpl client)
  name: ContainerServicesInner(Retrofit retrofit, ContainerServiceManagementClientImpl client)
  nameWithType: ContainerServicesInner.ContainerServicesInner(Retrofit retrofit, ContainerServiceManagementClientImpl client)
  parameters:
  - description: <p>the Retrofit instance built from a Retrofit Builder. </p>
    name: retrofit
    type: <xref href="Retrofit?alt=Retrofit&text=Retrofit" data-throw-if-not-resolved="False"/>
  - description: <p>the instance of the service client containing this operation class. </p>
    name: client
    type: <xref href="com.microsoft.azure.management.containerservice.implementation.ContainerServiceManagementClientImpl?alt=com.microsoft.azure.management.containerservice.implementation.ContainerServiceManagementClientImpl&text=ContainerServiceManagementClientImpl" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Initializes an instance of ContainerServicesInner.</p>

    <p></p>
  syntax: public ContainerServicesInner(Retrofit retrofit, ContainerServiceManagementClientImpl client)
  uid: com.microsoft.azure.management.containerservice.implementation.ContainerServicesInner.ContainerServicesInner(Retrofit,ContainerServiceManagementClientImpl)
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
- <xref href="com.microsoft.azure.management.resources.fluentcore.collection.InnerSupportsGet?alt=com.microsoft.azure.management.resources.fluentcore.collection.InnerSupportsGet&text=InnerSupportsGet%3CInnerT%3E" data-throw-if-not-resolved="False"/>
inheritedMembers:
- com.microsoft.azure.management.resources.fluentcore.collection.InnerSupportsGet.getByResourceGroupAsync(String,String,ServiceCallback<InnerT>)
methods:
- fullName: com.microsoft.azure.management.containerservice.implementation.ContainerServicesInner.beginCreateOrUpdate(String resourceGroupName, String containerServiceName, ContainerServiceInner parameters)
  name: beginCreateOrUpdate(String resourceGroupName, String containerServiceName, ContainerServiceInner parameters)
  nameWithType: ContainerServicesInner.beginCreateOrUpdate(String resourceGroupName, String containerServiceName, ContainerServiceInner parameters)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the container service in the specified subscription and resource group. </p>
    name: containerServiceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>Parameters supplied to the Create or Update a Container Service operation. </p>
    name: parameters
    type: <xref href="com.microsoft.azure.management.containerservice.implementation.ContainerServiceInner?alt=com.microsoft.azure.management.containerservice.implementation.ContainerServiceInner&text=ContainerServiceInner" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="CloudException?alt=CloudException&text=CloudException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  returns:
    description: <p>the ContainerServiceInner object if successful. </p>
    type: <xref href="com.microsoft.azure.management.containerservice.implementation.ContainerServiceInner?alt=com.microsoft.azure.management.containerservice.implementation.ContainerServiceInner&text=ContainerServiceInner" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Creates or updates a container service. Creates or updates a container service with the specified configuration of orchestrator, masters, and agents.</p>

    <p></p>
  syntax: public ContainerServiceInner beginCreateOrUpdate(String resourceGroupName, String containerServiceName, ContainerServiceInner parameters)
  uid: com.microsoft.azure.management.containerservice.implementation.ContainerServicesInner.beginCreateOrUpdate(String,String,ContainerServiceInner)
- fullName: com.microsoft.azure.management.containerservice.implementation.ContainerServicesInner.beginCreateOrUpdateAsync(String resourceGroupName, String containerServiceName, ContainerServiceInner parameters)
  name: beginCreateOrUpdateAsync(String resourceGroupName, String containerServiceName, ContainerServiceInner parameters)
  nameWithType: ContainerServicesInner.beginCreateOrUpdateAsync(String resourceGroupName, String containerServiceName, ContainerServiceInner parameters)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the container service in the specified subscription and resource group. </p>
    name: containerServiceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>Parameters supplied to the Create or Update a Container Service operation. </p>
    name: parameters
    type: <xref href="com.microsoft.azure.management.containerservice.implementation.ContainerServiceInner?alt=com.microsoft.azure.management.containerservice.implementation.ContainerServiceInner&text=ContainerServiceInner" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the ContainerServiceInner object </p>
    type: Observable&lt;<xref href="com.microsoft.azure.management.containerservice.implementation.ContainerServiceInner?alt=com.microsoft.azure.management.containerservice.implementation.ContainerServiceInner&text=ContainerServiceInner" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Creates or updates a container service. Creates or updates a container service with the specified configuration of orchestrator, masters, and agents.</p>

    <p></p>
  syntax: public Observable<ContainerServiceInner> beginCreateOrUpdateAsync(String resourceGroupName, String containerServiceName, ContainerServiceInner parameters)
  uid: com.microsoft.azure.management.containerservice.implementation.ContainerServicesInner.beginCreateOrUpdateAsync(String,String,ContainerServiceInner)
- fullName: com.microsoft.azure.management.containerservice.implementation.ContainerServicesInner.beginCreateOrUpdateAsync(String resourceGroupName, String containerServiceName, ContainerServiceInner parameters, final ServiceCallback<ContainerServiceInner> serviceCallback)
  name: beginCreateOrUpdateAsync(String resourceGroupName, String containerServiceName, ContainerServiceInner parameters, final ServiceCallback<ContainerServiceInner> serviceCallback)
  nameWithType: ContainerServicesInner.beginCreateOrUpdateAsync(String resourceGroupName, String containerServiceName, ContainerServiceInner parameters, final ServiceCallback<ContainerServiceInner> serviceCallback)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the container service in the specified subscription and resource group. </p>
    name: containerServiceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>Parameters supplied to the Create or Update a Container Service operation. </p>
    name: parameters
    type: <xref href="com.microsoft.azure.management.containerservice.implementation.ContainerServiceInner?alt=com.microsoft.azure.management.containerservice.implementation.ContainerServiceInner&text=ContainerServiceInner" data-throw-if-not-resolved="False"/>
  - description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    name: serviceCallback
    type: final ServiceCallback&lt;<xref href="com.microsoft.azure.management.containerservice.implementation.ContainerServiceInner?alt=com.microsoft.azure.management.containerservice.implementation.ContainerServiceInner&text=ContainerServiceInner" data-throw-if-not-resolved="False"/>&gt;
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
    type: ServiceFuture&lt;<xref href="com.microsoft.azure.management.containerservice.implementation.ContainerServiceInner?alt=com.microsoft.azure.management.containerservice.implementation.ContainerServiceInner&text=ContainerServiceInner" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Creates or updates a container service. Creates or updates a container service with the specified configuration of orchestrator, masters, and agents.</p>

    <p></p>
  syntax: public ServiceFuture<ContainerServiceInner> beginCreateOrUpdateAsync(String resourceGroupName, String containerServiceName, ContainerServiceInner parameters, final ServiceCallback<ContainerServiceInner> serviceCallback)
  uid: com.microsoft.azure.management.containerservice.implementation.ContainerServicesInner.beginCreateOrUpdateAsync(String,String,ContainerServiceInner,final ServiceCallback<ContainerServiceInner>)
- fullName: com.microsoft.azure.management.containerservice.implementation.ContainerServicesInner.beginCreateOrUpdateWithServiceResponseAsync(String resourceGroupName, String containerServiceName, ContainerServiceInner parameters)
  name: beginCreateOrUpdateWithServiceResponseAsync(String resourceGroupName, String containerServiceName, ContainerServiceInner parameters)
  nameWithType: ContainerServicesInner.beginCreateOrUpdateWithServiceResponseAsync(String resourceGroupName, String containerServiceName, ContainerServiceInner parameters)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the container service in the specified subscription and resource group. </p>
    name: containerServiceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>Parameters supplied to the Create or Update a Container Service operation. </p>
    name: parameters
    type: <xref href="com.microsoft.azure.management.containerservice.implementation.ContainerServiceInner?alt=com.microsoft.azure.management.containerservice.implementation.ContainerServiceInner&text=ContainerServiceInner" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the ContainerServiceInner object </p>
    type: Observable&lt;ServiceResponse&lt;<xref href="com.microsoft.azure.management.containerservice.implementation.ContainerServiceInner?alt=com.microsoft.azure.management.containerservice.implementation.ContainerServiceInner&text=ContainerServiceInner" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Creates or updates a container service. Creates or updates a container service with the specified configuration of orchestrator, masters, and agents.</p>

    <p></p>
  syntax: public Observable<ServiceResponse<ContainerServiceInner>> beginCreateOrUpdateWithServiceResponseAsync(String resourceGroupName, String containerServiceName, ContainerServiceInner parameters)
  uid: com.microsoft.azure.management.containerservice.implementation.ContainerServicesInner.beginCreateOrUpdateWithServiceResponseAsync(String,String,ContainerServiceInner)
- fullName: com.microsoft.azure.management.containerservice.implementation.ContainerServicesInner.beginDelete(String resourceGroupName, String containerServiceName)
  name: beginDelete(String resourceGroupName, String containerServiceName)
  nameWithType: ContainerServicesInner.beginDelete(String resourceGroupName, String containerServiceName)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the container service in the specified subscription and resource group. </p>
    name: containerServiceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="CloudException?alt=CloudException&text=CloudException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  summary: >-
    <p>Deletes the specified container service. Deletes the specified container service in the specified subscription and resource group. The operation does not delete other resources created as part of creating a container service, including storage accounts, VMs, and availability sets. All the other resources created with the container service are part of the same resource group and can be deleted individually.</p>

    <p></p>
  syntax: public void beginDelete(String resourceGroupName, String containerServiceName)
  uid: com.microsoft.azure.management.containerservice.implementation.ContainerServicesInner.beginDelete(String,String)
- fullName: com.microsoft.azure.management.containerservice.implementation.ContainerServicesInner.beginDeleteAsync(String resourceGroupName, String containerServiceName)
  name: beginDeleteAsync(String resourceGroupName, String containerServiceName)
  nameWithType: ContainerServicesInner.beginDeleteAsync(String resourceGroupName, String containerServiceName)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the container service in the specified subscription and resource group. </p>
    name: containerServiceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceResponse"></xref> object if successful. </p>
    type: <xref href="Observable%3CVoid%3E?alt=Observable%3CVoid%3E&text=Observable%3CVoid%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Deletes the specified container service. Deletes the specified container service in the specified subscription and resource group. The operation does not delete other resources created as part of creating a container service, including storage accounts, VMs, and availability sets. All the other resources created with the container service are part of the same resource group and can be deleted individually.</p>

    <p></p>
  syntax: public Observable<Void> beginDeleteAsync(String resourceGroupName, String containerServiceName)
  uid: com.microsoft.azure.management.containerservice.implementation.ContainerServicesInner.beginDeleteAsync(String,String)
- fullName: com.microsoft.azure.management.containerservice.implementation.ContainerServicesInner.beginDeleteAsync(String resourceGroupName, String containerServiceName, final ServiceCallback<Void> serviceCallback)
  name: beginDeleteAsync(String resourceGroupName, String containerServiceName, final ServiceCallback<Void> serviceCallback)
  nameWithType: ContainerServicesInner.beginDeleteAsync(String resourceGroupName, String containerServiceName, final ServiceCallback<Void> serviceCallback)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the container service in the specified subscription and resource group. </p>
    name: containerServiceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    name: serviceCallback
    type: <xref href="final+ServiceCallback%3CVoid%3E?alt=final+ServiceCallback%3CVoid%3E&text=final+ServiceCallback%3CVoid%3E" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
    type: <xref href="ServiceFuture%3CVoid%3E?alt=ServiceFuture%3CVoid%3E&text=ServiceFuture%3CVoid%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Deletes the specified container service. Deletes the specified container service in the specified subscription and resource group. The operation does not delete other resources created as part of creating a container service, including storage accounts, VMs, and availability sets. All the other resources created with the container service are part of the same resource group and can be deleted individually.</p>

    <p></p>
  syntax: public ServiceFuture<Void> beginDeleteAsync(String resourceGroupName, String containerServiceName, final ServiceCallback<Void> serviceCallback)
  uid: com.microsoft.azure.management.containerservice.implementation.ContainerServicesInner.beginDeleteAsync(String,String,final ServiceCallback<Void>)
- fullName: com.microsoft.azure.management.containerservice.implementation.ContainerServicesInner.beginDeleteWithServiceResponseAsync(String resourceGroupName, String containerServiceName)
  name: beginDeleteWithServiceResponseAsync(String resourceGroupName, String containerServiceName)
  nameWithType: ContainerServicesInner.beginDeleteWithServiceResponseAsync(String resourceGroupName, String containerServiceName)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the container service in the specified subscription and resource group. </p>
    name: containerServiceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceResponse"></xref> object if successful. </p>
    type: <xref href="Observable%3CServiceResponse%3CVoid%3E%3E?alt=Observable%3CServiceResponse%3CVoid%3E%3E&text=Observable%3CServiceResponse%3CVoid%3E%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Deletes the specified container service. Deletes the specified container service in the specified subscription and resource group. The operation does not delete other resources created as part of creating a container service, including storage accounts, VMs, and availability sets. All the other resources created with the container service are part of the same resource group and can be deleted individually.</p>

    <p></p>
  syntax: public Observable<ServiceResponse<Void>> beginDeleteWithServiceResponseAsync(String resourceGroupName, String containerServiceName)
  uid: com.microsoft.azure.management.containerservice.implementation.ContainerServicesInner.beginDeleteWithServiceResponseAsync(String,String)
- fullName: com.microsoft.azure.management.containerservice.implementation.ContainerServicesInner.createOrUpdate(String resourceGroupName, String containerServiceName, ContainerServiceInner parameters)
  name: createOrUpdate(String resourceGroupName, String containerServiceName, ContainerServiceInner parameters)
  nameWithType: ContainerServicesInner.createOrUpdate(String resourceGroupName, String containerServiceName, ContainerServiceInner parameters)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the container service in the specified subscription and resource group. </p>
    name: containerServiceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>Parameters supplied to the Create or Update a Container Service operation. </p>
    name: parameters
    type: <xref href="com.microsoft.azure.management.containerservice.implementation.ContainerServiceInner?alt=com.microsoft.azure.management.containerservice.implementation.ContainerServiceInner&text=ContainerServiceInner" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="CloudException?alt=CloudException&text=CloudException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  returns:
    description: <p>the ContainerServiceInner object if successful. </p>
    type: <xref href="com.microsoft.azure.management.containerservice.implementation.ContainerServiceInner?alt=com.microsoft.azure.management.containerservice.implementation.ContainerServiceInner&text=ContainerServiceInner" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Creates or updates a container service. Creates or updates a container service with the specified configuration of orchestrator, masters, and agents.</p>

    <p></p>
  syntax: public ContainerServiceInner createOrUpdate(String resourceGroupName, String containerServiceName, ContainerServiceInner parameters)
  uid: com.microsoft.azure.management.containerservice.implementation.ContainerServicesInner.createOrUpdate(String,String,ContainerServiceInner)
- fullName: com.microsoft.azure.management.containerservice.implementation.ContainerServicesInner.createOrUpdateAsync(String resourceGroupName, String containerServiceName, ContainerServiceInner parameters)
  name: createOrUpdateAsync(String resourceGroupName, String containerServiceName, ContainerServiceInner parameters)
  nameWithType: ContainerServicesInner.createOrUpdateAsync(String resourceGroupName, String containerServiceName, ContainerServiceInner parameters)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the container service in the specified subscription and resource group. </p>
    name: containerServiceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>Parameters supplied to the Create or Update a Container Service operation. </p>
    name: parameters
    type: <xref href="com.microsoft.azure.management.containerservice.implementation.ContainerServiceInner?alt=com.microsoft.azure.management.containerservice.implementation.ContainerServiceInner&text=ContainerServiceInner" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable for the request </p>
    type: Observable&lt;<xref href="com.microsoft.azure.management.containerservice.implementation.ContainerServiceInner?alt=com.microsoft.azure.management.containerservice.implementation.ContainerServiceInner&text=ContainerServiceInner" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Creates or updates a container service. Creates or updates a container service with the specified configuration of orchestrator, masters, and agents.</p>

    <p></p>
  syntax: public Observable<ContainerServiceInner> createOrUpdateAsync(String resourceGroupName, String containerServiceName, ContainerServiceInner parameters)
  uid: com.microsoft.azure.management.containerservice.implementation.ContainerServicesInner.createOrUpdateAsync(String,String,ContainerServiceInner)
- fullName: com.microsoft.azure.management.containerservice.implementation.ContainerServicesInner.createOrUpdateAsync(String resourceGroupName, String containerServiceName, ContainerServiceInner parameters, final ServiceCallback<ContainerServiceInner> serviceCallback)
  name: createOrUpdateAsync(String resourceGroupName, String containerServiceName, ContainerServiceInner parameters, final ServiceCallback<ContainerServiceInner> serviceCallback)
  nameWithType: ContainerServicesInner.createOrUpdateAsync(String resourceGroupName, String containerServiceName, ContainerServiceInner parameters, final ServiceCallback<ContainerServiceInner> serviceCallback)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the container service in the specified subscription and resource group. </p>
    name: containerServiceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>Parameters supplied to the Create or Update a Container Service operation. </p>
    name: parameters
    type: <xref href="com.microsoft.azure.management.containerservice.implementation.ContainerServiceInner?alt=com.microsoft.azure.management.containerservice.implementation.ContainerServiceInner&text=ContainerServiceInner" data-throw-if-not-resolved="False"/>
  - description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    name: serviceCallback
    type: final ServiceCallback&lt;<xref href="com.microsoft.azure.management.containerservice.implementation.ContainerServiceInner?alt=com.microsoft.azure.management.containerservice.implementation.ContainerServiceInner&text=ContainerServiceInner" data-throw-if-not-resolved="False"/>&gt;
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
    type: ServiceFuture&lt;<xref href="com.microsoft.azure.management.containerservice.implementation.ContainerServiceInner?alt=com.microsoft.azure.management.containerservice.implementation.ContainerServiceInner&text=ContainerServiceInner" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Creates or updates a container service. Creates or updates a container service with the specified configuration of orchestrator, masters, and agents.</p>

    <p></p>
  syntax: public ServiceFuture<ContainerServiceInner> createOrUpdateAsync(String resourceGroupName, String containerServiceName, ContainerServiceInner parameters, final ServiceCallback<ContainerServiceInner> serviceCallback)
  uid: com.microsoft.azure.management.containerservice.implementation.ContainerServicesInner.createOrUpdateAsync(String,String,ContainerServiceInner,final ServiceCallback<ContainerServiceInner>)
- fullName: com.microsoft.azure.management.containerservice.implementation.ContainerServicesInner.createOrUpdateWithServiceResponseAsync(String resourceGroupName, String containerServiceName, ContainerServiceInner parameters)
  name: createOrUpdateWithServiceResponseAsync(String resourceGroupName, String containerServiceName, ContainerServiceInner parameters)
  nameWithType: ContainerServicesInner.createOrUpdateWithServiceResponseAsync(String resourceGroupName, String containerServiceName, ContainerServiceInner parameters)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the container service in the specified subscription and resource group. </p>
    name: containerServiceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>Parameters supplied to the Create or Update a Container Service operation. </p>
    name: parameters
    type: <xref href="com.microsoft.azure.management.containerservice.implementation.ContainerServiceInner?alt=com.microsoft.azure.management.containerservice.implementation.ContainerServiceInner&text=ContainerServiceInner" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable for the request </p>
    type: Observable&lt;ServiceResponse&lt;<xref href="com.microsoft.azure.management.containerservice.implementation.ContainerServiceInner?alt=com.microsoft.azure.management.containerservice.implementation.ContainerServiceInner&text=ContainerServiceInner" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Creates or updates a container service. Creates or updates a container service with the specified configuration of orchestrator, masters, and agents.</p>

    <p></p>
  syntax: public Observable<ServiceResponse<ContainerServiceInner>> createOrUpdateWithServiceResponseAsync(String resourceGroupName, String containerServiceName, ContainerServiceInner parameters)
  uid: com.microsoft.azure.management.containerservice.implementation.ContainerServicesInner.createOrUpdateWithServiceResponseAsync(String,String,ContainerServiceInner)
- fullName: com.microsoft.azure.management.containerservice.implementation.ContainerServicesInner.delete(String resourceGroupName, String containerServiceName)
  name: delete(String resourceGroupName, String containerServiceName)
  nameWithType: ContainerServicesInner.delete(String resourceGroupName, String containerServiceName)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the container service in the specified subscription and resource group. </p>
    name: containerServiceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="CloudException?alt=CloudException&text=CloudException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  summary: >-
    <p>Deletes the specified container service. Deletes the specified container service in the specified subscription and resource group. The operation does not delete other resources created as part of creating a container service, including storage accounts, VMs, and availability sets. All the other resources created with the container service are part of the same resource group and can be deleted individually.</p>

    <p></p>
  syntax: public void delete(String resourceGroupName, String containerServiceName)
  uid: com.microsoft.azure.management.containerservice.implementation.ContainerServicesInner.delete(String,String)
- fullName: com.microsoft.azure.management.containerservice.implementation.ContainerServicesInner.deleteAsync(String resourceGroupName, String containerServiceName)
  name: deleteAsync(String resourceGroupName, String containerServiceName)
  nameWithType: ContainerServicesInner.deleteAsync(String resourceGroupName, String containerServiceName)
  overridden: com.microsoft.azure.management.resources.fluentcore.collection.InnerSupportsDelete.deleteAsync(String,String)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the container service in the specified subscription and resource group. </p>
    name: containerServiceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable for the request </p>
    type: <xref href="Observable%3CVoid%3E?alt=Observable%3CVoid%3E&text=Observable%3CVoid%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Deletes the specified container service. Deletes the specified container service in the specified subscription and resource group. The operation does not delete other resources created as part of creating a container service, including storage accounts, VMs, and availability sets. All the other resources created with the container service are part of the same resource group and can be deleted individually.</p>

    <p></p>
  syntax: public Observable<Void> deleteAsync(String resourceGroupName, String containerServiceName)
  uid: com.microsoft.azure.management.containerservice.implementation.ContainerServicesInner.deleteAsync(String,String)
- fullName: com.microsoft.azure.management.containerservice.implementation.ContainerServicesInner.deleteAsync(String resourceGroupName, String containerServiceName, final ServiceCallback<Void> serviceCallback)
  name: deleteAsync(String resourceGroupName, String containerServiceName, final ServiceCallback<Void> serviceCallback)
  nameWithType: ContainerServicesInner.deleteAsync(String resourceGroupName, String containerServiceName, final ServiceCallback<Void> serviceCallback)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the container service in the specified subscription and resource group. </p>
    name: containerServiceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    name: serviceCallback
    type: <xref href="final+ServiceCallback%3CVoid%3E?alt=final+ServiceCallback%3CVoid%3E&text=final+ServiceCallback%3CVoid%3E" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
    type: <xref href="ServiceFuture%3CVoid%3E?alt=ServiceFuture%3CVoid%3E&text=ServiceFuture%3CVoid%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Deletes the specified container service. Deletes the specified container service in the specified subscription and resource group. The operation does not delete other resources created as part of creating a container service, including storage accounts, VMs, and availability sets. All the other resources created with the container service are part of the same resource group and can be deleted individually.</p>

    <p></p>
  syntax: public ServiceFuture<Void> deleteAsync(String resourceGroupName, String containerServiceName, final ServiceCallback<Void> serviceCallback)
  uid: com.microsoft.azure.management.containerservice.implementation.ContainerServicesInner.deleteAsync(String,String,final ServiceCallback<Void>)
- fullName: com.microsoft.azure.management.containerservice.implementation.ContainerServicesInner.deleteWithServiceResponseAsync(String resourceGroupName, String containerServiceName)
  name: deleteWithServiceResponseAsync(String resourceGroupName, String containerServiceName)
  nameWithType: ContainerServicesInner.deleteWithServiceResponseAsync(String resourceGroupName, String containerServiceName)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the container service in the specified subscription and resource group. </p>
    name: containerServiceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable for the request </p>
    type: <xref href="Observable%3CServiceResponse%3CVoid%3E%3E?alt=Observable%3CServiceResponse%3CVoid%3E%3E&text=Observable%3CServiceResponse%3CVoid%3E%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Deletes the specified container service. Deletes the specified container service in the specified subscription and resource group. The operation does not delete other resources created as part of creating a container service, including storage accounts, VMs, and availability sets. All the other resources created with the container service are part of the same resource group and can be deleted individually.</p>

    <p></p>
  syntax: public Observable<ServiceResponse<Void>> deleteWithServiceResponseAsync(String resourceGroupName, String containerServiceName)
  uid: com.microsoft.azure.management.containerservice.implementation.ContainerServicesInner.deleteWithServiceResponseAsync(String,String)
- fullName: com.microsoft.azure.management.containerservice.implementation.ContainerServicesInner.getByResourceGroup(String resourceGroupName, String containerServiceName)
  name: getByResourceGroup(String resourceGroupName, String containerServiceName)
  nameWithType: ContainerServicesInner.getByResourceGroup(String resourceGroupName, String containerServiceName)
  overridden: com.microsoft.azure.management.resources.fluentcore.collection.InnerSupportsGet.getByResourceGroup(String,String)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the container service in the specified subscription and resource group. </p>
    name: containerServiceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="CloudException?alt=CloudException&text=CloudException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  returns:
    description: <p>the ContainerServiceInner object if successful. </p>
    type: <xref href="com.microsoft.azure.management.containerservice.implementation.ContainerServiceInner?alt=com.microsoft.azure.management.containerservice.implementation.ContainerServiceInner&text=ContainerServiceInner" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the properties of the specified container service. Gets the properties of the specified container service in the specified subscription and resource group. The operation returns the properties including state, orchestrator, number of masters and agents, and FQDNs of masters and agents.</p>

    <p></p>
  syntax: public ContainerServiceInner getByResourceGroup(String resourceGroupName, String containerServiceName)
  uid: com.microsoft.azure.management.containerservice.implementation.ContainerServicesInner.getByResourceGroup(String,String)
- fullName: com.microsoft.azure.management.containerservice.implementation.ContainerServicesInner.getByResourceGroupAsync(String resourceGroupName, String containerServiceName)
  name: getByResourceGroupAsync(String resourceGroupName, String containerServiceName)
  nameWithType: ContainerServicesInner.getByResourceGroupAsync(String resourceGroupName, String containerServiceName)
  overridden: com.microsoft.azure.management.resources.fluentcore.collection.InnerSupportsGet.getByResourceGroupAsync(String,String)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the container service in the specified subscription and resource group. </p>
    name: containerServiceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the ContainerServiceInner object </p>
    type: Observable&lt;<xref href="com.microsoft.azure.management.containerservice.implementation.ContainerServiceInner?alt=com.microsoft.azure.management.containerservice.implementation.ContainerServiceInner&text=ContainerServiceInner" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Gets the properties of the specified container service. Gets the properties of the specified container service in the specified subscription and resource group. The operation returns the properties including state, orchestrator, number of masters and agents, and FQDNs of masters and agents.</p>

    <p></p>
  syntax: public Observable<ContainerServiceInner> getByResourceGroupAsync(String resourceGroupName, String containerServiceName)
  uid: com.microsoft.azure.management.containerservice.implementation.ContainerServicesInner.getByResourceGroupAsync(String,String)
- fullName: com.microsoft.azure.management.containerservice.implementation.ContainerServicesInner.getByResourceGroupAsync(String resourceGroupName, String containerServiceName, final ServiceCallback<ContainerServiceInner> serviceCallback)
  name: getByResourceGroupAsync(String resourceGroupName, String containerServiceName, final ServiceCallback<ContainerServiceInner> serviceCallback)
  nameWithType: ContainerServicesInner.getByResourceGroupAsync(String resourceGroupName, String containerServiceName, final ServiceCallback<ContainerServiceInner> serviceCallback)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the container service in the specified subscription and resource group. </p>
    name: containerServiceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    name: serviceCallback
    type: final ServiceCallback&lt;<xref href="com.microsoft.azure.management.containerservice.implementation.ContainerServiceInner?alt=com.microsoft.azure.management.containerservice.implementation.ContainerServiceInner&text=ContainerServiceInner" data-throw-if-not-resolved="False"/>&gt;
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
    type: ServiceFuture&lt;<xref href="com.microsoft.azure.management.containerservice.implementation.ContainerServiceInner?alt=com.microsoft.azure.management.containerservice.implementation.ContainerServiceInner&text=ContainerServiceInner" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Gets the properties of the specified container service. Gets the properties of the specified container service in the specified subscription and resource group. The operation returns the properties including state, orchestrator, number of masters and agents, and FQDNs of masters and agents.</p>

    <p></p>
  syntax: public ServiceFuture<ContainerServiceInner> getByResourceGroupAsync(String resourceGroupName, String containerServiceName, final ServiceCallback<ContainerServiceInner> serviceCallback)
  uid: com.microsoft.azure.management.containerservice.implementation.ContainerServicesInner.getByResourceGroupAsync(String,String,final ServiceCallback<ContainerServiceInner>)
- fullName: com.microsoft.azure.management.containerservice.implementation.ContainerServicesInner.getByResourceGroupWithServiceResponseAsync(String resourceGroupName, String containerServiceName)
  name: getByResourceGroupWithServiceResponseAsync(String resourceGroupName, String containerServiceName)
  nameWithType: ContainerServicesInner.getByResourceGroupWithServiceResponseAsync(String resourceGroupName, String containerServiceName)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the container service in the specified subscription and resource group. </p>
    name: containerServiceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the ContainerServiceInner object </p>
    type: Observable&lt;ServiceResponse&lt;<xref href="com.microsoft.azure.management.containerservice.implementation.ContainerServiceInner?alt=com.microsoft.azure.management.containerservice.implementation.ContainerServiceInner&text=ContainerServiceInner" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Gets the properties of the specified container service. Gets the properties of the specified container service in the specified subscription and resource group. The operation returns the properties including state, orchestrator, number of masters and agents, and FQDNs of masters and agents.</p>

    <p></p>
  syntax: public Observable<ServiceResponse<ContainerServiceInner>> getByResourceGroupWithServiceResponseAsync(String resourceGroupName, String containerServiceName)
  uid: com.microsoft.azure.management.containerservice.implementation.ContainerServicesInner.getByResourceGroupWithServiceResponseAsync(String,String)
- fullName: com.microsoft.azure.management.containerservice.implementation.ContainerServicesInner.list()
  name: list()
  nameWithType: ContainerServicesInner.list()
  overridden: com.microsoft.azure.management.resources.fluentcore.collection.InnerSupportsListing.list()
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="CloudException?alt=CloudException&text=CloudException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  returns:
    description: <p>the PagedList&lt;ContainerServiceInner&gt; object if successful. </p>
    type: PagedList&lt;<xref href="com.microsoft.azure.management.containerservice.implementation.ContainerServiceInner?alt=com.microsoft.azure.management.containerservice.implementation.ContainerServiceInner&text=ContainerServiceInner" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Gets a list of container services in the specified subscription. Gets a list of container services in the specified subscription. The operation returns properties of each container service including state, orchestrator, number of masters and agents, and FQDNs of masters and agents.</p>

    <p></p>
  syntax: public PagedList<ContainerServiceInner> list()
  uid: com.microsoft.azure.management.containerservice.implementation.ContainerServicesInner.list()
- fullName: com.microsoft.azure.management.containerservice.implementation.ContainerServicesInner.listAsync()
  name: listAsync()
  nameWithType: ContainerServicesInner.listAsync()
  overridden: com.microsoft.azure.management.resources.fluentcore.collection.InnerSupportsListing.listAsync()
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the PagedList&lt;ContainerServiceInner&gt; object </p>
    type: Observable&lt;Page&lt;<xref href="com.microsoft.azure.management.containerservice.implementation.ContainerServiceInner?alt=com.microsoft.azure.management.containerservice.implementation.ContainerServiceInner&text=ContainerServiceInner" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Gets a list of container services in the specified subscription. Gets a list of container services in the specified subscription. The operation returns properties of each container service including state, orchestrator, number of masters and agents, and FQDNs of masters and agents.</p>

    <p></p>
  syntax: public Observable<Page<ContainerServiceInner>> listAsync()
  uid: com.microsoft.azure.management.containerservice.implementation.ContainerServicesInner.listAsync()
- fullName: com.microsoft.azure.management.containerservice.implementation.ContainerServicesInner.listAsync(final ListOperationCallback<ContainerServiceInner> serviceCallback)
  name: listAsync(final ListOperationCallback<ContainerServiceInner> serviceCallback)
  nameWithType: ContainerServicesInner.listAsync(final ListOperationCallback<ContainerServiceInner> serviceCallback)
  parameters:
  - description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    name: serviceCallback
    type: final ListOperationCallback&lt;<xref href="com.microsoft.azure.management.containerservice.implementation.ContainerServiceInner?alt=com.microsoft.azure.management.containerservice.implementation.ContainerServiceInner&text=ContainerServiceInner" data-throw-if-not-resolved="False"/>&gt;
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
    type: ServiceFuture&lt;List&lt;<xref href="com.microsoft.azure.management.containerservice.implementation.ContainerServiceInner?alt=com.microsoft.azure.management.containerservice.implementation.ContainerServiceInner&text=ContainerServiceInner" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Gets a list of container services in the specified subscription. Gets a list of container services in the specified subscription. The operation returns properties of each container service including state, orchestrator, number of masters and agents, and FQDNs of masters and agents.</p>

    <p></p>
  syntax: public ServiceFuture<List<ContainerServiceInner>> listAsync(final ListOperationCallback<ContainerServiceInner> serviceCallback)
  uid: com.microsoft.azure.management.containerservice.implementation.ContainerServicesInner.listAsync(final ListOperationCallback<ContainerServiceInner>)
- fullName: com.microsoft.azure.management.containerservice.implementation.ContainerServicesInner.listByResourceGroup(final String resourceGroupName)
  name: listByResourceGroup(final String resourceGroupName)
  nameWithType: ContainerServicesInner.listByResourceGroup(final String resourceGroupName)
  overridden: com.microsoft.azure.management.resources.fluentcore.collection.InnerSupportsListing.listByResourceGroup(String)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="CloudException?alt=CloudException&text=CloudException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  returns:
    description: <p>the PagedList&lt;ContainerServiceInner&gt; object if successful. </p>
    type: PagedList&lt;<xref href="com.microsoft.azure.management.containerservice.implementation.ContainerServiceInner?alt=com.microsoft.azure.management.containerservice.implementation.ContainerServiceInner&text=ContainerServiceInner" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Gets a list of container services in the specified resource group. Gets a list of container services in the specified subscription and resource group. The operation returns properties of each container service including state, orchestrator, number of masters and agents, and FQDNs of masters and agents.</p>

    <p></p>
  syntax: public PagedList<ContainerServiceInner> listByResourceGroup(final String resourceGroupName)
  uid: com.microsoft.azure.management.containerservice.implementation.ContainerServicesInner.listByResourceGroup(final String)
- fullName: com.microsoft.azure.management.containerservice.implementation.ContainerServicesInner.listByResourceGroupAsync(final String resourceGroupName)
  name: listByResourceGroupAsync(final String resourceGroupName)
  nameWithType: ContainerServicesInner.listByResourceGroupAsync(final String resourceGroupName)
  overridden: com.microsoft.azure.management.resources.fluentcore.collection.InnerSupportsListing.listByResourceGroupAsync(String)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the PagedList&lt;ContainerServiceInner&gt; object </p>
    type: Observable&lt;Page&lt;<xref href="com.microsoft.azure.management.containerservice.implementation.ContainerServiceInner?alt=com.microsoft.azure.management.containerservice.implementation.ContainerServiceInner&text=ContainerServiceInner" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Gets a list of container services in the specified resource group. Gets a list of container services in the specified subscription and resource group. The operation returns properties of each container service including state, orchestrator, number of masters and agents, and FQDNs of masters and agents.</p>

    <p></p>
  syntax: public Observable<Page<ContainerServiceInner>> listByResourceGroupAsync(final String resourceGroupName)
  uid: com.microsoft.azure.management.containerservice.implementation.ContainerServicesInner.listByResourceGroupAsync(final String)
- fullName: com.microsoft.azure.management.containerservice.implementation.ContainerServicesInner.listByResourceGroupAsync(final String resourceGroupName, final ListOperationCallback<ContainerServiceInner> serviceCallback)
  name: listByResourceGroupAsync(final String resourceGroupName, final ListOperationCallback<ContainerServiceInner> serviceCallback)
  nameWithType: ContainerServicesInner.listByResourceGroupAsync(final String resourceGroupName, final ListOperationCallback<ContainerServiceInner> serviceCallback)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    name: serviceCallback
    type: final ListOperationCallback&lt;<xref href="com.microsoft.azure.management.containerservice.implementation.ContainerServiceInner?alt=com.microsoft.azure.management.containerservice.implementation.ContainerServiceInner&text=ContainerServiceInner" data-throw-if-not-resolved="False"/>&gt;
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
    type: ServiceFuture&lt;List&lt;<xref href="com.microsoft.azure.management.containerservice.implementation.ContainerServiceInner?alt=com.microsoft.azure.management.containerservice.implementation.ContainerServiceInner&text=ContainerServiceInner" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Gets a list of container services in the specified resource group. Gets a list of container services in the specified subscription and resource group. The operation returns properties of each container service including state, orchestrator, number of masters and agents, and FQDNs of masters and agents.</p>

    <p></p>
  syntax: public ServiceFuture<List<ContainerServiceInner>> listByResourceGroupAsync(final String resourceGroupName, final ListOperationCallback<ContainerServiceInner> serviceCallback)
  uid: com.microsoft.azure.management.containerservice.implementation.ContainerServicesInner.listByResourceGroupAsync(final String,final ListOperationCallback<ContainerServiceInner>)
- fullName: com.microsoft.azure.management.containerservice.implementation.ContainerServicesInner.listByResourceGroupNext(final String nextPageLink)
  name: listByResourceGroupNext(final String nextPageLink)
  nameWithType: ContainerServicesInner.listByResourceGroupNext(final String nextPageLink)
  parameters:
  - description: <p>The NextLink from the previous successful call to List operation. </p>
    name: nextPageLink
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="CloudException?alt=CloudException&text=CloudException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  returns:
    description: <p>the PagedList&lt;ContainerServiceInner&gt; object if successful. </p>
    type: PagedList&lt;<xref href="com.microsoft.azure.management.containerservice.implementation.ContainerServiceInner?alt=com.microsoft.azure.management.containerservice.implementation.ContainerServiceInner&text=ContainerServiceInner" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Gets a list of container services in the specified resource group. Gets a list of container services in the specified subscription and resource group. The operation returns properties of each container service including state, orchestrator, number of masters and agents, and FQDNs of masters and agents.</p>

    <p></p>
  syntax: public PagedList<ContainerServiceInner> listByResourceGroupNext(final String nextPageLink)
  uid: com.microsoft.azure.management.containerservice.implementation.ContainerServicesInner.listByResourceGroupNext(final String)
- fullName: com.microsoft.azure.management.containerservice.implementation.ContainerServicesInner.listByResourceGroupNextAsync(final String nextPageLink)
  name: listByResourceGroupNextAsync(final String nextPageLink)
  nameWithType: ContainerServicesInner.listByResourceGroupNextAsync(final String nextPageLink)
  parameters:
  - description: <p>The NextLink from the previous successful call to List operation. </p>
    name: nextPageLink
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the PagedList&lt;ContainerServiceInner&gt; object </p>
    type: Observable&lt;Page&lt;<xref href="com.microsoft.azure.management.containerservice.implementation.ContainerServiceInner?alt=com.microsoft.azure.management.containerservice.implementation.ContainerServiceInner&text=ContainerServiceInner" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Gets a list of container services in the specified resource group. Gets a list of container services in the specified subscription and resource group. The operation returns properties of each container service including state, orchestrator, number of masters and agents, and FQDNs of masters and agents.</p>

    <p></p>
  syntax: public Observable<Page<ContainerServiceInner>> listByResourceGroupNextAsync(final String nextPageLink)
  uid: com.microsoft.azure.management.containerservice.implementation.ContainerServicesInner.listByResourceGroupNextAsync(final String)
- fullName: com.microsoft.azure.management.containerservice.implementation.ContainerServicesInner.listByResourceGroupNextAsync(final String nextPageLink, final ServiceFuture<List<ContainerServiceInner>> serviceFuture, final ListOperationCallback<ContainerServiceInner> serviceCallback)
  name: listByResourceGroupNextAsync(final String nextPageLink, final ServiceFuture<List<ContainerServiceInner>> serviceFuture, final ListOperationCallback<ContainerServiceInner> serviceCallback)
  nameWithType: ContainerServicesInner.listByResourceGroupNextAsync(final String nextPageLink, final ServiceFuture<List<ContainerServiceInner>> serviceFuture, final ListOperationCallback<ContainerServiceInner> serviceCallback)
  parameters:
  - description: <p>The NextLink from the previous successful call to List operation. </p>
    name: nextPageLink
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>the ServiceFuture object tracking the Retrofit calls </p>
    name: serviceFuture
    type: final ServiceFuture&lt;List&lt;<xref href="com.microsoft.azure.management.containerservice.implementation.ContainerServiceInner?alt=com.microsoft.azure.management.containerservice.implementation.ContainerServiceInner&text=ContainerServiceInner" data-throw-if-not-resolved="False"/>&gt;&gt;
  - description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    name: serviceCallback
    type: final ListOperationCallback&lt;<xref href="com.microsoft.azure.management.containerservice.implementation.ContainerServiceInner?alt=com.microsoft.azure.management.containerservice.implementation.ContainerServiceInner&text=ContainerServiceInner" data-throw-if-not-resolved="False"/>&gt;
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
    type: ServiceFuture&lt;List&lt;<xref href="com.microsoft.azure.management.containerservice.implementation.ContainerServiceInner?alt=com.microsoft.azure.management.containerservice.implementation.ContainerServiceInner&text=ContainerServiceInner" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Gets a list of container services in the specified resource group. Gets a list of container services in the specified subscription and resource group. The operation returns properties of each container service including state, orchestrator, number of masters and agents, and FQDNs of masters and agents.</p>

    <p></p>
  syntax: public ServiceFuture<List<ContainerServiceInner>> listByResourceGroupNextAsync(final String nextPageLink, final ServiceFuture<List<ContainerServiceInner>> serviceFuture, final ListOperationCallback<ContainerServiceInner> serviceCallback)
  uid: com.microsoft.azure.management.containerservice.implementation.ContainerServicesInner.listByResourceGroupNextAsync(final String,final ServiceFuture<List<ContainerServiceInner>>,final ListOperationCallback<ContainerServiceInner>)
- fullName: com.microsoft.azure.management.containerservice.implementation.ContainerServicesInner.listByResourceGroupNextSinglePageAsync(final String nextPageLink)
  name: listByResourceGroupNextSinglePageAsync(final String nextPageLink)
  nameWithType: ContainerServicesInner.listByResourceGroupNextSinglePageAsync(final String nextPageLink)
  parameters:
  - description: <p>The NextLink from the previous successful call to List operation. </p>
    name: nextPageLink
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the PagedList&lt;ContainerServiceInner&gt; object wrapped in <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceResponse"></xref> if successful. </p>
    type: Observable&lt;ServiceResponse&lt;Page&lt;<xref href="com.microsoft.azure.management.containerservice.implementation.ContainerServiceInner?alt=com.microsoft.azure.management.containerservice.implementation.ContainerServiceInner&text=ContainerServiceInner" data-throw-if-not-resolved="False"/>&gt;&gt;&gt;
  summary: >-
    <p>Gets a list of container services in the specified resource group. Gets a list of container services in the specified subscription and resource group. The operation returns properties of each container service including state, orchestrator, number of masters and agents, and FQDNs of masters and agents.</p>

    <p>ServiceResponse&lt;PageImpl&lt;ContainerServiceInner&gt;&gt; * </p>
  syntax: public Observable<ServiceResponse<Page<ContainerServiceInner>>> listByResourceGroupNextSinglePageAsync(final String nextPageLink)
  uid: com.microsoft.azure.management.containerservice.implementation.ContainerServicesInner.listByResourceGroupNextSinglePageAsync(final String)
- fullName: com.microsoft.azure.management.containerservice.implementation.ContainerServicesInner.listByResourceGroupNextWithServiceResponseAsync(final String nextPageLink)
  name: listByResourceGroupNextWithServiceResponseAsync(final String nextPageLink)
  nameWithType: ContainerServicesInner.listByResourceGroupNextWithServiceResponseAsync(final String nextPageLink)
  parameters:
  - description: <p>The NextLink from the previous successful call to List operation. </p>
    name: nextPageLink
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the PagedList&lt;ContainerServiceInner&gt; object </p>
    type: Observable&lt;ServiceResponse&lt;Page&lt;<xref href="com.microsoft.azure.management.containerservice.implementation.ContainerServiceInner?alt=com.microsoft.azure.management.containerservice.implementation.ContainerServiceInner&text=ContainerServiceInner" data-throw-if-not-resolved="False"/>&gt;&gt;&gt;
  summary: >-
    <p>Gets a list of container services in the specified resource group. Gets a list of container services in the specified subscription and resource group. The operation returns properties of each container service including state, orchestrator, number of masters and agents, and FQDNs of masters and agents.</p>

    <p></p>
  syntax: public Observable<ServiceResponse<Page<ContainerServiceInner>>> listByResourceGroupNextWithServiceResponseAsync(final String nextPageLink)
  uid: com.microsoft.azure.management.containerservice.implementation.ContainerServicesInner.listByResourceGroupNextWithServiceResponseAsync(final String)
- fullName: com.microsoft.azure.management.containerservice.implementation.ContainerServicesInner.listByResourceGroupSinglePageAsync(final String resourceGroupName)
  name: listByResourceGroupSinglePageAsync(final String resourceGroupName)
  nameWithType: ContainerServicesInner.listByResourceGroupSinglePageAsync(final String resourceGroupName)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the PagedList&lt;ContainerServiceInner&gt; object wrapped in <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceResponse"></xref> if successful. </p>
    type: Observable&lt;ServiceResponse&lt;Page&lt;<xref href="com.microsoft.azure.management.containerservice.implementation.ContainerServiceInner?alt=com.microsoft.azure.management.containerservice.implementation.ContainerServiceInner&text=ContainerServiceInner" data-throw-if-not-resolved="False"/>&gt;&gt;&gt;
  summary: >-
    <p>Gets a list of container services in the specified resource group. Gets a list of container services in the specified subscription and resource group. The operation returns properties of each container service including state, orchestrator, number of masters and agents, and FQDNs of masters and agents.</p>

    <p>ServiceResponse&lt;PageImpl&lt;ContainerServiceInner&gt;&gt; * </p>
  syntax: public Observable<ServiceResponse<Page<ContainerServiceInner>>> listByResourceGroupSinglePageAsync(final String resourceGroupName)
  uid: com.microsoft.azure.management.containerservice.implementation.ContainerServicesInner.listByResourceGroupSinglePageAsync(final String)
- fullName: com.microsoft.azure.management.containerservice.implementation.ContainerServicesInner.listByResourceGroupWithServiceResponseAsync(final String resourceGroupName)
  name: listByResourceGroupWithServiceResponseAsync(final String resourceGroupName)
  nameWithType: ContainerServicesInner.listByResourceGroupWithServiceResponseAsync(final String resourceGroupName)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the PagedList&lt;ContainerServiceInner&gt; object </p>
    type: Observable&lt;ServiceResponse&lt;Page&lt;<xref href="com.microsoft.azure.management.containerservice.implementation.ContainerServiceInner?alt=com.microsoft.azure.management.containerservice.implementation.ContainerServiceInner&text=ContainerServiceInner" data-throw-if-not-resolved="False"/>&gt;&gt;&gt;
  summary: >-
    <p>Gets a list of container services in the specified resource group. Gets a list of container services in the specified subscription and resource group. The operation returns properties of each container service including state, orchestrator, number of masters and agents, and FQDNs of masters and agents.</p>

    <p></p>
  syntax: public Observable<ServiceResponse<Page<ContainerServiceInner>>> listByResourceGroupWithServiceResponseAsync(final String resourceGroupName)
  uid: com.microsoft.azure.management.containerservice.implementation.ContainerServicesInner.listByResourceGroupWithServiceResponseAsync(final String)
- fullName: com.microsoft.azure.management.containerservice.implementation.ContainerServicesInner.listNext(final String nextPageLink)
  name: listNext(final String nextPageLink)
  nameWithType: ContainerServicesInner.listNext(final String nextPageLink)
  parameters:
  - description: <p>The NextLink from the previous successful call to List operation. </p>
    name: nextPageLink
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="CloudException?alt=CloudException&text=CloudException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  returns:
    description: <p>the PagedList&lt;ContainerServiceInner&gt; object if successful. </p>
    type: PagedList&lt;<xref href="com.microsoft.azure.management.containerservice.implementation.ContainerServiceInner?alt=com.microsoft.azure.management.containerservice.implementation.ContainerServiceInner&text=ContainerServiceInner" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Gets a list of container services in the specified subscription. Gets a list of container services in the specified subscription. The operation returns properties of each container service including state, orchestrator, number of masters and agents, and FQDNs of masters and agents.</p>

    <p></p>
  syntax: public PagedList<ContainerServiceInner> listNext(final String nextPageLink)
  uid: com.microsoft.azure.management.containerservice.implementation.ContainerServicesInner.listNext(final String)
- fullName: com.microsoft.azure.management.containerservice.implementation.ContainerServicesInner.listNextAsync(final String nextPageLink)
  name: listNextAsync(final String nextPageLink)
  nameWithType: ContainerServicesInner.listNextAsync(final String nextPageLink)
  parameters:
  - description: <p>The NextLink from the previous successful call to List operation. </p>
    name: nextPageLink
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the PagedList&lt;ContainerServiceInner&gt; object </p>
    type: Observable&lt;Page&lt;<xref href="com.microsoft.azure.management.containerservice.implementation.ContainerServiceInner?alt=com.microsoft.azure.management.containerservice.implementation.ContainerServiceInner&text=ContainerServiceInner" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Gets a list of container services in the specified subscription. Gets a list of container services in the specified subscription. The operation returns properties of each container service including state, orchestrator, number of masters and agents, and FQDNs of masters and agents.</p>

    <p></p>
  syntax: public Observable<Page<ContainerServiceInner>> listNextAsync(final String nextPageLink)
  uid: com.microsoft.azure.management.containerservice.implementation.ContainerServicesInner.listNextAsync(final String)
- fullName: com.microsoft.azure.management.containerservice.implementation.ContainerServicesInner.listNextAsync(final String nextPageLink, final ServiceFuture<List<ContainerServiceInner>> serviceFuture, final ListOperationCallback<ContainerServiceInner> serviceCallback)
  name: listNextAsync(final String nextPageLink, final ServiceFuture<List<ContainerServiceInner>> serviceFuture, final ListOperationCallback<ContainerServiceInner> serviceCallback)
  nameWithType: ContainerServicesInner.listNextAsync(final String nextPageLink, final ServiceFuture<List<ContainerServiceInner>> serviceFuture, final ListOperationCallback<ContainerServiceInner> serviceCallback)
  parameters:
  - description: <p>The NextLink from the previous successful call to List operation. </p>
    name: nextPageLink
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>the ServiceFuture object tracking the Retrofit calls </p>
    name: serviceFuture
    type: final ServiceFuture&lt;List&lt;<xref href="com.microsoft.azure.management.containerservice.implementation.ContainerServiceInner?alt=com.microsoft.azure.management.containerservice.implementation.ContainerServiceInner&text=ContainerServiceInner" data-throw-if-not-resolved="False"/>&gt;&gt;
  - description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    name: serviceCallback
    type: final ListOperationCallback&lt;<xref href="com.microsoft.azure.management.containerservice.implementation.ContainerServiceInner?alt=com.microsoft.azure.management.containerservice.implementation.ContainerServiceInner&text=ContainerServiceInner" data-throw-if-not-resolved="False"/>&gt;
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
    type: ServiceFuture&lt;List&lt;<xref href="com.microsoft.azure.management.containerservice.implementation.ContainerServiceInner?alt=com.microsoft.azure.management.containerservice.implementation.ContainerServiceInner&text=ContainerServiceInner" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Gets a list of container services in the specified subscription. Gets a list of container services in the specified subscription. The operation returns properties of each container service including state, orchestrator, number of masters and agents, and FQDNs of masters and agents.</p>

    <p></p>
  syntax: public ServiceFuture<List<ContainerServiceInner>> listNextAsync(final String nextPageLink, final ServiceFuture<List<ContainerServiceInner>> serviceFuture, final ListOperationCallback<ContainerServiceInner> serviceCallback)
  uid: com.microsoft.azure.management.containerservice.implementation.ContainerServicesInner.listNextAsync(final String,final ServiceFuture<List<ContainerServiceInner>>,final ListOperationCallback<ContainerServiceInner>)
- fullName: com.microsoft.azure.management.containerservice.implementation.ContainerServicesInner.listNextSinglePageAsync(final String nextPageLink)
  name: listNextSinglePageAsync(final String nextPageLink)
  nameWithType: ContainerServicesInner.listNextSinglePageAsync(final String nextPageLink)
  parameters:
  - description: <p>The NextLink from the previous successful call to List operation. </p>
    name: nextPageLink
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the PagedList&lt;ContainerServiceInner&gt; object wrapped in <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceResponse"></xref> if successful. </p>
    type: Observable&lt;ServiceResponse&lt;Page&lt;<xref href="com.microsoft.azure.management.containerservice.implementation.ContainerServiceInner?alt=com.microsoft.azure.management.containerservice.implementation.ContainerServiceInner&text=ContainerServiceInner" data-throw-if-not-resolved="False"/>&gt;&gt;&gt;
  summary: >-
    <p>Gets a list of container services in the specified subscription. Gets a list of container services in the specified subscription. The operation returns properties of each container service including state, orchestrator, number of masters and agents, and FQDNs of masters and agents.</p>

    <p>ServiceResponse&lt;PageImpl&lt;ContainerServiceInner&gt;&gt; * </p>
  syntax: public Observable<ServiceResponse<Page<ContainerServiceInner>>> listNextSinglePageAsync(final String nextPageLink)
  uid: com.microsoft.azure.management.containerservice.implementation.ContainerServicesInner.listNextSinglePageAsync(final String)
- fullName: com.microsoft.azure.management.containerservice.implementation.ContainerServicesInner.listNextWithServiceResponseAsync(final String nextPageLink)
  name: listNextWithServiceResponseAsync(final String nextPageLink)
  nameWithType: ContainerServicesInner.listNextWithServiceResponseAsync(final String nextPageLink)
  parameters:
  - description: <p>The NextLink from the previous successful call to List operation. </p>
    name: nextPageLink
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the PagedList&lt;ContainerServiceInner&gt; object </p>
    type: Observable&lt;ServiceResponse&lt;Page&lt;<xref href="com.microsoft.azure.management.containerservice.implementation.ContainerServiceInner?alt=com.microsoft.azure.management.containerservice.implementation.ContainerServiceInner&text=ContainerServiceInner" data-throw-if-not-resolved="False"/>&gt;&gt;&gt;
  summary: >-
    <p>Gets a list of container services in the specified subscription. Gets a list of container services in the specified subscription. The operation returns properties of each container service including state, orchestrator, number of masters and agents, and FQDNs of masters and agents.</p>

    <p></p>
  syntax: public Observable<ServiceResponse<Page<ContainerServiceInner>>> listNextWithServiceResponseAsync(final String nextPageLink)
  uid: com.microsoft.azure.management.containerservice.implementation.ContainerServicesInner.listNextWithServiceResponseAsync(final String)
- fullName: com.microsoft.azure.management.containerservice.implementation.ContainerServicesInner.listOrchestrators(String location)
  name: listOrchestrators(String location)
  nameWithType: ContainerServicesInner.listOrchestrators(String location)
  parameters:
  - description: <p>The name of a supported Azure region. </p>
    name: location
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="CloudException?alt=CloudException&text=CloudException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  returns:
    description: <p>the OrchestratorVersionProfileListResultInner object if successful. </p>
    type: <xref href="com.microsoft.azure.management.containerservice.implementation.OrchestratorVersionProfileListResultInner?alt=com.microsoft.azure.management.containerservice.implementation.OrchestratorVersionProfileListResultInner&text=OrchestratorVersionProfileListResultInner" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets a list of supported orchestrators in the specified subscription. Gets a list of supported orchestrators in the specified subscription. The operation returns properties of each orchestrator including version, available upgrades and whether that version or upgrades are in preview.</p>

    <p></p>
  syntax: public OrchestratorVersionProfileListResultInner listOrchestrators(String location)
  uid: com.microsoft.azure.management.containerservice.implementation.ContainerServicesInner.listOrchestrators(String)
- fullName: com.microsoft.azure.management.containerservice.implementation.ContainerServicesInner.listOrchestrators(String location, String resourceType)
  name: listOrchestrators(String location, String resourceType)
  nameWithType: ContainerServicesInner.listOrchestrators(String location, String resourceType)
  parameters:
  - description: <p>The name of a supported Azure region. </p>
    name: location
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>resource type for which the list of orchestrators needs to be returned </p>
    name: resourceType
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="CloudException?alt=CloudException&text=CloudException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  returns:
    description: <p>the OrchestratorVersionProfileListResultInner object if successful. </p>
    type: <xref href="com.microsoft.azure.management.containerservice.implementation.OrchestratorVersionProfileListResultInner?alt=com.microsoft.azure.management.containerservice.implementation.OrchestratorVersionProfileListResultInner&text=OrchestratorVersionProfileListResultInner" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets a list of supported orchestrators in the specified subscription. Gets a list of supported orchestrators in the specified subscription. The operation returns properties of each orchestrator including version, available upgrades and whether that version or upgrades are in preview.</p>

    <p></p>
  syntax: public OrchestratorVersionProfileListResultInner listOrchestrators(String location, String resourceType)
  uid: com.microsoft.azure.management.containerservice.implementation.ContainerServicesInner.listOrchestrators(String,String)
- fullName: com.microsoft.azure.management.containerservice.implementation.ContainerServicesInner.listOrchestratorsAsync(String location)
  name: listOrchestratorsAsync(String location)
  nameWithType: ContainerServicesInner.listOrchestratorsAsync(String location)
  parameters:
  - description: <p>The name of a supported Azure region. </p>
    name: location
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the OrchestratorVersionProfileListResultInner object </p>
    type: Observable&lt;<xref href="com.microsoft.azure.management.containerservice.implementation.OrchestratorVersionProfileListResultInner?alt=com.microsoft.azure.management.containerservice.implementation.OrchestratorVersionProfileListResultInner&text=OrchestratorVersionProfileListResultInner" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Gets a list of supported orchestrators in the specified subscription. Gets a list of supported orchestrators in the specified subscription. The operation returns properties of each orchestrator including version, available upgrades and whether that version or upgrades are in preview.</p>

    <p></p>
  syntax: public Observable<OrchestratorVersionProfileListResultInner> listOrchestratorsAsync(String location)
  uid: com.microsoft.azure.management.containerservice.implementation.ContainerServicesInner.listOrchestratorsAsync(String)
- fullName: com.microsoft.azure.management.containerservice.implementation.ContainerServicesInner.listOrchestratorsAsync(String location, final ServiceCallback<OrchestratorVersionProfileListResultInner> serviceCallback)
  name: listOrchestratorsAsync(String location, final ServiceCallback<OrchestratorVersionProfileListResultInner> serviceCallback)
  nameWithType: ContainerServicesInner.listOrchestratorsAsync(String location, final ServiceCallback<OrchestratorVersionProfileListResultInner> serviceCallback)
  parameters:
  - description: <p>The name of a supported Azure region. </p>
    name: location
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    name: serviceCallback
    type: final ServiceCallback&lt;<xref href="com.microsoft.azure.management.containerservice.implementation.OrchestratorVersionProfileListResultInner?alt=com.microsoft.azure.management.containerservice.implementation.OrchestratorVersionProfileListResultInner&text=OrchestratorVersionProfileListResultInner" data-throw-if-not-resolved="False"/>&gt;
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
    type: ServiceFuture&lt;<xref href="com.microsoft.azure.management.containerservice.implementation.OrchestratorVersionProfileListResultInner?alt=com.microsoft.azure.management.containerservice.implementation.OrchestratorVersionProfileListResultInner&text=OrchestratorVersionProfileListResultInner" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Gets a list of supported orchestrators in the specified subscription. Gets a list of supported orchestrators in the specified subscription. The operation returns properties of each orchestrator including version, available upgrades and whether that version or upgrades are in preview.</p>

    <p></p>
  syntax: public ServiceFuture<OrchestratorVersionProfileListResultInner> listOrchestratorsAsync(String location, final ServiceCallback<OrchestratorVersionProfileListResultInner> serviceCallback)
  uid: com.microsoft.azure.management.containerservice.implementation.ContainerServicesInner.listOrchestratorsAsync(String,final ServiceCallback<OrchestratorVersionProfileListResultInner>)
- fullName: com.microsoft.azure.management.containerservice.implementation.ContainerServicesInner.listOrchestratorsAsync(String location, String resourceType)
  name: listOrchestratorsAsync(String location, String resourceType)
  nameWithType: ContainerServicesInner.listOrchestratorsAsync(String location, String resourceType)
  parameters:
  - description: <p>The name of a supported Azure region. </p>
    name: location
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>resource type for which the list of orchestrators needs to be returned </p>
    name: resourceType
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the OrchestratorVersionProfileListResultInner object </p>
    type: Observable&lt;<xref href="com.microsoft.azure.management.containerservice.implementation.OrchestratorVersionProfileListResultInner?alt=com.microsoft.azure.management.containerservice.implementation.OrchestratorVersionProfileListResultInner&text=OrchestratorVersionProfileListResultInner" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Gets a list of supported orchestrators in the specified subscription. Gets a list of supported orchestrators in the specified subscription. The operation returns properties of each orchestrator including version, available upgrades and whether that version or upgrades are in preview.</p>

    <p></p>
  syntax: public Observable<OrchestratorVersionProfileListResultInner> listOrchestratorsAsync(String location, String resourceType)
  uid: com.microsoft.azure.management.containerservice.implementation.ContainerServicesInner.listOrchestratorsAsync(String,String)
- fullName: com.microsoft.azure.management.containerservice.implementation.ContainerServicesInner.listOrchestratorsAsync(String location, String resourceType, final ServiceCallback<OrchestratorVersionProfileListResultInner> serviceCallback)
  name: listOrchestratorsAsync(String location, String resourceType, final ServiceCallback<OrchestratorVersionProfileListResultInner> serviceCallback)
  nameWithType: ContainerServicesInner.listOrchestratorsAsync(String location, String resourceType, final ServiceCallback<OrchestratorVersionProfileListResultInner> serviceCallback)
  parameters:
  - description: <p>The name of a supported Azure region. </p>
    name: location
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>resource type for which the list of orchestrators needs to be returned </p>
    name: resourceType
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    name: serviceCallback
    type: final ServiceCallback&lt;<xref href="com.microsoft.azure.management.containerservice.implementation.OrchestratorVersionProfileListResultInner?alt=com.microsoft.azure.management.containerservice.implementation.OrchestratorVersionProfileListResultInner&text=OrchestratorVersionProfileListResultInner" data-throw-if-not-resolved="False"/>&gt;
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
    type: ServiceFuture&lt;<xref href="com.microsoft.azure.management.containerservice.implementation.OrchestratorVersionProfileListResultInner?alt=com.microsoft.azure.management.containerservice.implementation.OrchestratorVersionProfileListResultInner&text=OrchestratorVersionProfileListResultInner" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Gets a list of supported orchestrators in the specified subscription. Gets a list of supported orchestrators in the specified subscription. The operation returns properties of each orchestrator including version, available upgrades and whether that version or upgrades are in preview.</p>

    <p></p>
  syntax: public ServiceFuture<OrchestratorVersionProfileListResultInner> listOrchestratorsAsync(String location, String resourceType, final ServiceCallback<OrchestratorVersionProfileListResultInner> serviceCallback)
  uid: com.microsoft.azure.management.containerservice.implementation.ContainerServicesInner.listOrchestratorsAsync(String,String,final ServiceCallback<OrchestratorVersionProfileListResultInner>)
- fullName: com.microsoft.azure.management.containerservice.implementation.ContainerServicesInner.listOrchestratorsWithServiceResponseAsync(String location)
  name: listOrchestratorsWithServiceResponseAsync(String location)
  nameWithType: ContainerServicesInner.listOrchestratorsWithServiceResponseAsync(String location)
  parameters:
  - description: <p>The name of a supported Azure region. </p>
    name: location
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the OrchestratorVersionProfileListResultInner object </p>
    type: Observable&lt;ServiceResponse&lt;<xref href="com.microsoft.azure.management.containerservice.implementation.OrchestratorVersionProfileListResultInner?alt=com.microsoft.azure.management.containerservice.implementation.OrchestratorVersionProfileListResultInner&text=OrchestratorVersionProfileListResultInner" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Gets a list of supported orchestrators in the specified subscription. Gets a list of supported orchestrators in the specified subscription. The operation returns properties of each orchestrator including version, available upgrades and whether that version or upgrades are in preview.</p>

    <p></p>
  syntax: public Observable<ServiceResponse<OrchestratorVersionProfileListResultInner>> listOrchestratorsWithServiceResponseAsync(String location)
  uid: com.microsoft.azure.management.containerservice.implementation.ContainerServicesInner.listOrchestratorsWithServiceResponseAsync(String)
- fullName: com.microsoft.azure.management.containerservice.implementation.ContainerServicesInner.listOrchestratorsWithServiceResponseAsync(String location, String resourceType)
  name: listOrchestratorsWithServiceResponseAsync(String location, String resourceType)
  nameWithType: ContainerServicesInner.listOrchestratorsWithServiceResponseAsync(String location, String resourceType)
  parameters:
  - description: <p>The name of a supported Azure region. </p>
    name: location
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>resource type for which the list of orchestrators needs to be returned </p>
    name: resourceType
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the OrchestratorVersionProfileListResultInner object </p>
    type: Observable&lt;ServiceResponse&lt;<xref href="com.microsoft.azure.management.containerservice.implementation.OrchestratorVersionProfileListResultInner?alt=com.microsoft.azure.management.containerservice.implementation.OrchestratorVersionProfileListResultInner&text=OrchestratorVersionProfileListResultInner" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Gets a list of supported orchestrators in the specified subscription. Gets a list of supported orchestrators in the specified subscription. The operation returns properties of each orchestrator including version, available upgrades and whether that version or upgrades are in preview.</p>

    <p></p>
  syntax: public Observable<ServiceResponse<OrchestratorVersionProfileListResultInner>> listOrchestratorsWithServiceResponseAsync(String location, String resourceType)
  uid: com.microsoft.azure.management.containerservice.implementation.ContainerServicesInner.listOrchestratorsWithServiceResponseAsync(String,String)
- fullName: com.microsoft.azure.management.containerservice.implementation.ContainerServicesInner.listSinglePageAsync()
  name: listSinglePageAsync()
  nameWithType: ContainerServicesInner.listSinglePageAsync()
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the PagedList&lt;ContainerServiceInner&gt; object wrapped in <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceResponse"></xref> if successful. </p>
    type: Observable&lt;ServiceResponse&lt;Page&lt;<xref href="com.microsoft.azure.management.containerservice.implementation.ContainerServiceInner?alt=com.microsoft.azure.management.containerservice.implementation.ContainerServiceInner&text=ContainerServiceInner" data-throw-if-not-resolved="False"/>&gt;&gt;&gt;
  summary: >-
    <p>Gets a list of container services in the specified subscription. Gets a list of container services in the specified subscription. The operation returns properties of each container service including state, orchestrator, number of masters and agents, and FQDNs of masters and agents.</p>

    <p></p>
  syntax: public Observable<ServiceResponse<Page<ContainerServiceInner>>> listSinglePageAsync()
  uid: com.microsoft.azure.management.containerservice.implementation.ContainerServicesInner.listSinglePageAsync()
- fullName: com.microsoft.azure.management.containerservice.implementation.ContainerServicesInner.listWithServiceResponseAsync()
  name: listWithServiceResponseAsync()
  nameWithType: ContainerServicesInner.listWithServiceResponseAsync()
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the PagedList&lt;ContainerServiceInner&gt; object </p>
    type: Observable&lt;ServiceResponse&lt;Page&lt;<xref href="com.microsoft.azure.management.containerservice.implementation.ContainerServiceInner?alt=com.microsoft.azure.management.containerservice.implementation.ContainerServiceInner&text=ContainerServiceInner" data-throw-if-not-resolved="False"/>&gt;&gt;&gt;
  summary: >-
    <p>Gets a list of container services in the specified subscription. Gets a list of container services in the specified subscription. The operation returns properties of each container service including state, orchestrator, number of masters and agents, and FQDNs of masters and agents.</p>

    <p></p>
  syntax: public Observable<ServiceResponse<Page<ContainerServiceInner>>> listWithServiceResponseAsync()
  uid: com.microsoft.azure.management.containerservice.implementation.ContainerServicesInner.listWithServiceResponseAsync()
nameWithType: ContainerServicesInner
syntax: public class ContainerServicesInner implements InnerSupportsGet<ContainerServiceInner>,InnerSupportsDelete<Void>,InnerSupportsListing<ContainerServiceInner>
type: class
uid: com.microsoft.azure.management.containerservice.implementation.ContainerServicesInner
fullName: com.microsoft.azure.management.containerservice.implementation.ContainerServicesInner
name: ContainerServicesInner
package: com.microsoft.azure.management.containerservice.implementation
summary: <p>An instance of this class provides access to all the operations defined in ContainerServices. </p>
metadata: {}
