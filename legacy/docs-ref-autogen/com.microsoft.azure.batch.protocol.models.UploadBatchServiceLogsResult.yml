### YamlMime:JavaType
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
methods:
- fullName: com.microsoft.azure.batch.protocol.models.UploadBatchServiceLogsResult.numberOfFilesUploaded()
  name: numberOfFilesUploaded()
  nameWithType: UploadBatchServiceLogsResult.numberOfFilesUploaded()
  returns:
    description: <p>the numberOfFilesUploaded value </p>
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the numberOfFilesUploaded value.</p>

    <p></p>
  syntax: public int numberOfFilesUploaded()
  uid: com.microsoft.azure.batch.protocol.models.UploadBatchServiceLogsResult.numberOfFilesUploaded()
- fullName: com.microsoft.azure.batch.protocol.models.UploadBatchServiceLogsResult.virtualDirectoryName()
  name: virtualDirectoryName()
  nameWithType: UploadBatchServiceLogsResult.virtualDirectoryName()
  returns:
    description: <p>the virtualDirectoryName value </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the virtual directory name is part of the blob name for each log file uploaded, and it is built based poolId, nodeId and a unique identifier.</p>

    <p></p>
  syntax: public String virtualDirectoryName()
  uid: com.microsoft.azure.batch.protocol.models.UploadBatchServiceLogsResult.virtualDirectoryName()
- fullName: com.microsoft.azure.batch.protocol.models.UploadBatchServiceLogsResult.withNumberOfFilesUploaded(int numberOfFilesUploaded)
  name: withNumberOfFilesUploaded(int numberOfFilesUploaded)
  nameWithType: UploadBatchServiceLogsResult.withNumberOfFilesUploaded(int numberOfFilesUploaded)
  parameters:
  - description: <p>the numberOfFilesUploaded value to set </p>
    name: numberOfFilesUploaded
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the UploadBatchServiceLogsResult object itself. </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.UploadBatchServiceLogsResult?alt=com.microsoft.azure.batch.protocol.models.UploadBatchServiceLogsResult&text=UploadBatchServiceLogsResult" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the numberOfFilesUploaded value.</p>

    <p></p>
  syntax: public UploadBatchServiceLogsResult withNumberOfFilesUploaded(int numberOfFilesUploaded)
  uid: com.microsoft.azure.batch.protocol.models.UploadBatchServiceLogsResult.withNumberOfFilesUploaded(int)
- fullName: com.microsoft.azure.batch.protocol.models.UploadBatchServiceLogsResult.withVirtualDirectoryName(String virtualDirectoryName)
  name: withVirtualDirectoryName(String virtualDirectoryName)
  nameWithType: UploadBatchServiceLogsResult.withVirtualDirectoryName(String virtualDirectoryName)
  parameters:
  - description: <p>the virtualDirectoryName value to set </p>
    name: virtualDirectoryName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the UploadBatchServiceLogsResult object itself. </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.UploadBatchServiceLogsResult?alt=com.microsoft.azure.batch.protocol.models.UploadBatchServiceLogsResult&text=UploadBatchServiceLogsResult" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the virtual directory name is part of the blob name for each log file uploaded, and it is built based poolId, nodeId and a unique identifier.</p>

    <p></p>
  syntax: public UploadBatchServiceLogsResult withVirtualDirectoryName(String virtualDirectoryName)
  uid: com.microsoft.azure.batch.protocol.models.UploadBatchServiceLogsResult.withVirtualDirectoryName(String)
nameWithType: UploadBatchServiceLogsResult
syntax: public class UploadBatchServiceLogsResult
type: class
uid: com.microsoft.azure.batch.protocol.models.UploadBatchServiceLogsResult
fullName: com.microsoft.azure.batch.protocol.models.UploadBatchServiceLogsResult
name: UploadBatchServiceLogsResult
package: com.microsoft.azure.batch.protocol.models
summary: <p>The result of uploading Batch service log files from a specific compute node. </p>
metadata: {}
