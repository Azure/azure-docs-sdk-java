### YamlMime:JavaType
constructors:
- fullName: com.microsoft.azure.sdk.iot.device.auth.IotHubSasTokenWithRefreshAuthenticationProvider.IotHubSasTokenWithRefreshAuthenticationProvider(String hostname, String gatewayHostName, String deviceId, String moduleId, String sharedAccessToken, int suggestedTimeToLiveSeconds, int timeBufferPercentage)
  name: IotHubSasTokenWithRefreshAuthenticationProvider(String hostname, String gatewayHostName, String deviceId, String moduleId, String sharedAccessToken, int suggestedTimeToLiveSeconds, int timeBufferPercentage)
  nameWithType: IotHubSasTokenWithRefreshAuthenticationProvider.IotHubSasTokenWithRefreshAuthenticationProvider(String hostname, String gatewayHostName, String deviceId, String moduleId, String sharedAccessToken, int suggestedTimeToLiveSeconds, int timeBufferPercentage)
  parameters:
  - description: <p>the hostname </p>
    name: hostname
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the gateway hostname </p>
    name: gatewayHostName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the device id </p>
    name: deviceId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the module id </p>
    name: moduleId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the shared access token </p>
    name: sharedAccessToken
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the time to live for generated tokens </p>
    name: suggestedTimeToLiveSeconds
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  - description: <p>the percent of a sas token's life to live before renewing </p>
    name: timeBufferPercentage
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  summary: <p>Constructor for IotHubSasTokenWithRefreshAuthenticationProvider </p>
  syntax: protected IotHubSasTokenWithRefreshAuthenticationProvider(String hostname, String gatewayHostName, String deviceId, String moduleId, String sharedAccessToken, int suggestedTimeToLiveSeconds, int timeBufferPercentage)
  uid: com.microsoft.azure.sdk.iot.device.auth.IotHubSasTokenWithRefreshAuthenticationProvider.IotHubSasTokenWithRefreshAuthenticationProvider(String,String,String,String,String,int,int)
- fullName: com.microsoft.azure.sdk.iot.device.auth.IotHubSasTokenWithRefreshAuthenticationProvider.IotHubSasTokenWithRefreshAuthenticationProvider(String hostname, String gatewayHostName, String deviceId, String moduleId, String sharedAccessToken, int suggestedTimeToLiveSeconds, int timeBufferPercentage, SSLContext sslContext)
  name: IotHubSasTokenWithRefreshAuthenticationProvider(String hostname, String gatewayHostName, String deviceId, String moduleId, String sharedAccessToken, int suggestedTimeToLiveSeconds, int timeBufferPercentage, SSLContext sslContext)
  nameWithType: IotHubSasTokenWithRefreshAuthenticationProvider.IotHubSasTokenWithRefreshAuthenticationProvider(String hostname, String gatewayHostName, String deviceId, String moduleId, String sharedAccessToken, int suggestedTimeToLiveSeconds, int timeBufferPercentage, SSLContext sslContext)
  parameters:
  - description: <p>the hostname </p>
    name: hostname
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the gateway hostname </p>
    name: gatewayHostName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the device id </p>
    name: deviceId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the module id </p>
    name: moduleId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the shared access token </p>
    name: sharedAccessToken
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the time to live for generated tokens </p>
    name: suggestedTimeToLiveSeconds
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  - description: <p>the percent of a sas token's life to live before renewing </p>
    name: timeBufferPercentage
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  - description: <p>the SSLContext the connection will use </p>
    name: sslContext
    type: <xref href="SSLContext?alt=SSLContext&text=SSLContext" data-throw-if-not-resolved="False"/>
  summary: <p>Constructor for IotHubSasTokenWithRefreshAuthenticationProvider </p>
  syntax: protected IotHubSasTokenWithRefreshAuthenticationProvider(String hostname, String gatewayHostName, String deviceId, String moduleId, String sharedAccessToken, int suggestedTimeToLiveSeconds, int timeBufferPercentage, SSLContext sslContext)
  uid: com.microsoft.azure.sdk.iot.device.auth.IotHubSasTokenWithRefreshAuthenticationProvider.IotHubSasTokenWithRefreshAuthenticationProvider(String,String,String,String,String,int,int,SSLContext)
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
- <xref href="com.microsoft.azure.sdk.iot.device.auth.IotHubAuthenticationProvider" data-throw-if-not-resolved="False"/>
- <xref href="com.microsoft.azure.sdk.iot.device.auth.IotHubSasTokenAuthenticationProvider?alt=com.microsoft.azure.sdk.iot.device.auth.IotHubSasTokenAuthenticationProvider&text=IotHubSasTokenAuthenticationProvider" data-throw-if-not-resolved="False"/>
inheritedMembers:
- com.microsoft.azure.sdk.iot.device.auth.IotHubSasTokenAuthenticationProvider.canRefreshToken()
- com.microsoft.azure.sdk.iot.device.auth.IotHubAuthenticationProvider.deviceId
- com.microsoft.azure.sdk.iot.device.auth.IotHubAuthenticationProvider.gatewayHostname
- com.microsoft.azure.sdk.iot.device.auth.IotHubAuthenticationProvider.getDeviceId()
- com.microsoft.azure.sdk.iot.device.auth.IotHubAuthenticationProvider.getGatewayHostname()
- com.microsoft.azure.sdk.iot.device.auth.IotHubAuthenticationProvider.getHostname()
- com.microsoft.azure.sdk.iot.device.auth.IotHubSasTokenAuthenticationProvider.getMillisecondsBeforeProactiveRenewal()
- com.microsoft.azure.sdk.iot.device.auth.IotHubAuthenticationProvider.getModuleId()
- com.microsoft.azure.sdk.iot.device.auth.IotHubAuthenticationProvider.getSSLContext()
- com.microsoft.azure.sdk.iot.device.auth.IotHubSasTokenAuthenticationProvider.getTokenValidSecs()
- com.microsoft.azure.sdk.iot.device.auth.IotHubAuthenticationProvider.hostname
- com.microsoft.azure.sdk.iot.device.auth.IotHubAuthenticationProvider.IotHubAuthenticationProvider(String,String,String,String)
- com.microsoft.azure.sdk.iot.device.auth.IotHubAuthenticationProvider.IotHubAuthenticationProvider(String,String,String,String,SSLContext)
- com.microsoft.azure.sdk.iot.device.auth.IotHubSasTokenAuthenticationProvider.IotHubSasTokenAuthenticationProvider(String,String,String,String)
- com.microsoft.azure.sdk.iot.device.auth.IotHubSasTokenAuthenticationProvider.IotHubSasTokenAuthenticationProvider(String,String,String,String,long,int)
- com.microsoft.azure.sdk.iot.device.auth.IotHubSasTokenAuthenticationProvider.isSasTokenExpired()
- com.microsoft.azure.sdk.iot.device.auth.IotHubAuthenticationProvider.moduleId
- com.microsoft.azure.sdk.iot.device.auth.IotHubSasTokenAuthenticationProvider.sasToken
- com.microsoft.azure.sdk.iot.device.auth.IotHubSasTokenAuthenticationProvider.setTokenValidSecs(long)
- com.microsoft.azure.sdk.iot.device.auth.IotHubSasTokenAuthenticationProvider.shouldRefreshToken(boolean)
- com.microsoft.azure.sdk.iot.device.auth.IotHubSasTokenAuthenticationProvider.tokenValidSecs
methods:
- fullName: com.microsoft.azure.sdk.iot.device.auth.IotHubSasTokenWithRefreshAuthenticationProvider.buildAudience(String hostname, String deviceId, String moduleId)
  name: buildAudience(String hostname, String deviceId, String moduleId)
  nameWithType: IotHubSasTokenWithRefreshAuthenticationProvider.buildAudience(String hostname, String deviceId, String moduleId)
  parameters:
  - description: <p>the hostname </p>
    name: hostname
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the device id </p>
    name: deviceId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the module id </p>
    name: moduleId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="UnsupportedEncodingException?alt=UnsupportedEncodingException&text=UnsupportedEncodingException" data-throw-if-not-resolved="False"/>
    description: <p>if UTF-8 encoding is not supported </p>
  returns:
    description: <p>the audience </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: <p>Constructs the audience string to be used in a sas token </p>
  syntax: protected static String buildAudience(String hostname, String deviceId, String moduleId)
  uid: com.microsoft.azure.sdk.iot.device.auth.IotHubSasTokenWithRefreshAuthenticationProvider.buildAudience(String,String,String)
- fullName: com.microsoft.azure.sdk.iot.device.auth.IotHubSasTokenWithRefreshAuthenticationProvider.getSasToken()
  name: getSasToken()
  nameWithType: IotHubSasTokenWithRefreshAuthenticationProvider.getSasToken()
  exceptions:
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
    description: <p>If an IOException is encountered while refreshing the sas token </p>
  - type: <xref href="TransportException?alt=TransportException&text=TransportException" data-throw-if-not-resolved="False"/>
    description: <p>If a TransportException is encountered while refreshing the sas token </p>
  returns:
    description: <p>the renewed token, or the old token if it did not need to be renewed </p>
    type: <xref href="char+%5B%5D?alt=char+%5B%5D&text=char+%5B%5D" data-throw-if-not-resolved="False"/>
  summary: <p>Check if sas token should be renewed at all, and then renew it if necessary </p>
  syntax: public char [] getSasToken()
  uid: com.microsoft.azure.sdk.iot.device.auth.IotHubSasTokenWithRefreshAuthenticationProvider.getSasToken()
- fullName: com.microsoft.azure.sdk.iot.device.auth.IotHubSasTokenWithRefreshAuthenticationProvider.isAuthenticationProviderRenewalNecessary()
  name: isAuthenticationProviderRenewalNecessary()
  nameWithType: IotHubSasTokenWithRefreshAuthenticationProvider.isAuthenticationProviderRenewalNecessary()
  returns:
    description: <p>false </p>
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False"/>
  summary: <p>Returns false as instances of this class will always be able to renew their own sas token </p>
  syntax: public boolean isAuthenticationProviderRenewalNecessary()
  uid: com.microsoft.azure.sdk.iot.device.auth.IotHubSasTokenWithRefreshAuthenticationProvider.isAuthenticationProviderRenewalNecessary()
- fullName: com.microsoft.azure.sdk.iot.device.auth.IotHubSasTokenWithRefreshAuthenticationProvider.refreshSasToken()
  name: refreshSasToken()
  nameWithType: IotHubSasTokenWithRefreshAuthenticationProvider.refreshSasToken()
  exceptions:
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
    description: <p>If an IOException is encountered while refreshing the sas token </p>
  - type: <xref href="TransportException?alt=TransportException&text=TransportException" data-throw-if-not-resolved="False"/>
    description: <p>If a TransportException is encountered while refreshing the sas token </p>
  returns:
    type: <xref href="abstract+void?alt=abstract+void&text=abstract+void" data-throw-if-not-resolved="False"/>
  summary: <p>Renew the saved sas token </p>
  syntax: public abstract void refreshSasToken()
  uid: com.microsoft.azure.sdk.iot.device.auth.IotHubSasTokenWithRefreshAuthenticationProvider.refreshSasToken()
nameWithType: IotHubSasTokenWithRefreshAuthenticationProvider
syntax: public class IotHubSasTokenWithRefreshAuthenticationProvider extends IotHubSasTokenAuthenticationProvider
type: class
uid: com.microsoft.azure.sdk.iot.device.auth.IotHubSasTokenWithRefreshAuthenticationProvider
fullName: com.microsoft.azure.sdk.iot.device.auth.IotHubSasTokenWithRefreshAuthenticationProvider
name: IotHubSasTokenWithRefreshAuthenticationProvider
package: com.microsoft.azure.sdk.iot.device.auth
summary: <p>Authentication method that uses a shared access signature token and allows for token refresh. </p>
metadata: {}
