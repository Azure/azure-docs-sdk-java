### YamlMime:JavaMember
nameWithType: SqlDatabase.exportTo
type: method
members:
- fullName: com.microsoft.azure.management.sql.SqlDatabase.exportTo(Creatable<StorageAccount> storageAccountCreatable, String containerName, String fileName)
  name: exportTo(Creatable<StorageAccount> storageAccountCreatable, String containerName, String fileName)
  nameWithType: SqlDatabase.exportTo(Creatable<StorageAccount> storageAccountCreatable, String containerName, String fileName)
  parameters:
  - description: <p>a storage account to be created as part of this execution flow </p>
    name: storageAccountCreatable
    type: <xref href="com.microsoft.azure.management.resources.fluentcore.model.Creatable?alt=com.microsoft.azure.management.resources.fluentcore.model.Creatable&text=Creatable" data-throw-if-not-resolved="False"/>&lt;<xref href="com.microsoft.azure.management.storage.StorageAccount?alt=com.microsoft.azure.management.storage.StorageAccount&text=StorageAccount" data-throw-if-not-resolved="False"/>&gt;
  - description: <p>the container name within the storage account to use </p>
    name: containerName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the exported database file name </p>
    name: fileName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>response object </p>
    type: <xref href="SqlDatabaseExportRequest.DefinitionStages.WithAuthenticationTypeAndLoginPassword?alt=SqlDatabaseExportRequest.DefinitionStages.WithAuthenticationTypeAndLoginPassword&text=SqlDatabaseExportRequest.DefinitionStages.WithAuthenticationTypeAndLoginPassword" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Exports the current database to a new storage account and relative path.</p>

    <p></p>
  syntax: public SqlDatabaseExportRequest.DefinitionStages.WithAuthenticationTypeAndLoginPassword exportTo(Creatable<StorageAccount> storageAccountCreatable, String containerName, String fileName)
  uid: com.microsoft.azure.management.sql.SqlDatabase.exportTo(Creatable<StorageAccount>,String,String)
- fullName: com.microsoft.azure.management.sql.SqlDatabase.exportTo(StorageAccount storageAccount, String containerName, String fileName)
  name: exportTo(StorageAccount storageAccount, String containerName, String fileName)
  nameWithType: SqlDatabase.exportTo(StorageAccount storageAccount, String containerName, String fileName)
  parameters:
  - description: <p>an existing storage account to be used </p>
    name: storageAccount
    type: <xref href="com.microsoft.azure.management.storage.StorageAccount?alt=com.microsoft.azure.management.storage.StorageAccount&text=StorageAccount" data-throw-if-not-resolved="False"/>
  - description: <p>the container name within the storage account to use </p>
    name: containerName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the exported database file name </p>
    name: fileName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>response object </p>
    type: <xref href="SqlDatabaseExportRequest.DefinitionStages.WithAuthenticationTypeAndLoginPassword?alt=SqlDatabaseExportRequest.DefinitionStages.WithAuthenticationTypeAndLoginPassword&text=SqlDatabaseExportRequest.DefinitionStages.WithAuthenticationTypeAndLoginPassword" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Exports the current database to an existing storage account and relative path.</p>

    <p></p>
  syntax: public SqlDatabaseExportRequest.DefinitionStages.WithAuthenticationTypeAndLoginPassword exportTo(StorageAccount storageAccount, String containerName, String fileName)
  uid: com.microsoft.azure.management.sql.SqlDatabase.exportTo(StorageAccount,String,String)
- fullName: com.microsoft.azure.management.sql.SqlDatabase.exportTo(String storageUri)
  name: exportTo(String storageUri)
  nameWithType: SqlDatabase.exportTo(String storageUri)
  parameters:
  - description: <p>the storage URI to use </p>
    name: storageUri
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>response object </p>
    type: <xref href="SqlDatabaseExportRequest.DefinitionStages.WithStorageTypeAndKey?alt=SqlDatabaseExportRequest.DefinitionStages.WithStorageTypeAndKey&text=SqlDatabaseExportRequest.DefinitionStages.WithStorageTypeAndKey" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Exports the current database to a specified URI path.</p>

    <p></p>
  syntax: public SqlDatabaseExportRequest.DefinitionStages.WithStorageTypeAndKey exportTo(String storageUri)
  uid: com.microsoft.azure.management.sql.SqlDatabase.exportTo(String)
uid: com.microsoft.azure.management.sql.SqlDatabase.exportTo*
fullName: com.microsoft.azure.management.sql.SqlDatabase.exportTo(Creatable<StorageAccount> storageAccountCreatable, String containerName, String fileName)
name: exportTo(Creatable<StorageAccount> storageAccountCreatable, String containerName, String fileName)
package: com.microsoft.azure.management.sql
metadata: {}
