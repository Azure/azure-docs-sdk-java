### YamlMime:JavaMember
nameWithType: Jobs.listPreparationAndReleaseTaskStatusNextAsync
type: method
members:
- fullName: com.microsoft.azure.batch.protocol.Jobs.listPreparationAndReleaseTaskStatusNextAsync(final String nextPageLink)
  name: listPreparationAndReleaseTaskStatusNextAsync(final String nextPageLink)
  nameWithType: Jobs.listPreparationAndReleaseTaskStatusNextAsync(final String nextPageLink)
  parameters:
  - description: <p>The NextLink from the previous successful call to List operation. </p>
    name: nextPageLink
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the PagedList&lt;JobPreparationAndReleaseTaskExecutionInformation&gt; object </p>
    type: Observable&lt;Page&lt;<xref href="com.microsoft.azure.batch.protocol.models.JobPreparationAndReleaseTaskExecutionInformation?alt=com.microsoft.azure.batch.protocol.models.JobPreparationAndReleaseTaskExecutionInformation&text=JobPreparationAndReleaseTaskExecutionInformation" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Lists the execution status of the Job Preparation and Job Release task for the specified job across the compute nodes where the job has run. This API returns the Job Preparation and Job Release task status on all compute nodes that have run the Job Preparation or Job Release task. This includes nodes which have since been removed from the pool. If this API is invoked on a job which has no Job Preparation or Job Release task, the Batch service returns HTTP status code 409 (Conflict) with an error code of JobPreparationTaskNotSpecified.</p>

    <p></p>
  syntax: public Observable<Page<JobPreparationAndReleaseTaskExecutionInformation>> listPreparationAndReleaseTaskStatusNextAsync(final String nextPageLink)
  uid: com.microsoft.azure.batch.protocol.Jobs.listPreparationAndReleaseTaskStatusNextAsync(final String)
- fullName: com.microsoft.azure.batch.protocol.Jobs.listPreparationAndReleaseTaskStatusNextAsync(final String nextPageLink, final JobListPreparationAndReleaseTaskStatusNextOptions jobListPreparationAndReleaseTaskStatusNextOptions)
  name: listPreparationAndReleaseTaskStatusNextAsync(final String nextPageLink, final JobListPreparationAndReleaseTaskStatusNextOptions jobListPreparationAndReleaseTaskStatusNextOptions)
  nameWithType: Jobs.listPreparationAndReleaseTaskStatusNextAsync(final String nextPageLink, final JobListPreparationAndReleaseTaskStatusNextOptions jobListPreparationAndReleaseTaskStatusNextOptions)
  parameters:
  - description: <p>The NextLink from the previous successful call to List operation. </p>
    name: nextPageLink
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>Additional parameters for the operation </p>
    name: jobListPreparationAndReleaseTaskStatusNextOptions
    type: final <xref href="com.microsoft.azure.batch.protocol.models.JobListPreparationAndReleaseTaskStatusNextOptions?alt=com.microsoft.azure.batch.protocol.models.JobListPreparationAndReleaseTaskStatusNextOptions&text=JobListPreparationAndReleaseTaskStatusNextOptions" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the PagedList&lt;JobPreparationAndReleaseTaskExecutionInformation&gt; object </p>
    type: Observable&lt;Page&lt;<xref href="com.microsoft.azure.batch.protocol.models.JobPreparationAndReleaseTaskExecutionInformation?alt=com.microsoft.azure.batch.protocol.models.JobPreparationAndReleaseTaskExecutionInformation&text=JobPreparationAndReleaseTaskExecutionInformation" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Lists the execution status of the Job Preparation and Job Release task for the specified job across the compute nodes where the job has run. This API returns the Job Preparation and Job Release task status on all compute nodes that have run the Job Preparation or Job Release task. This includes nodes which have since been removed from the pool. If this API is invoked on a job which has no Job Preparation or Job Release task, the Batch service returns HTTP status code 409 (Conflict) with an error code of JobPreparationTaskNotSpecified.</p>

    <p></p>
  syntax: public Observable<Page<JobPreparationAndReleaseTaskExecutionInformation>> listPreparationAndReleaseTaskStatusNextAsync(final String nextPageLink, final JobListPreparationAndReleaseTaskStatusNextOptions jobListPreparationAndReleaseTaskStatusNextOptions)
  uid: com.microsoft.azure.batch.protocol.Jobs.listPreparationAndReleaseTaskStatusNextAsync(final String,final JobListPreparationAndReleaseTaskStatusNextOptions)
- fullName: com.microsoft.azure.batch.protocol.Jobs.listPreparationAndReleaseTaskStatusNextAsync(final String nextPageLink, final JobListPreparationAndReleaseTaskStatusNextOptions jobListPreparationAndReleaseTaskStatusNextOptions, final ServiceFuture<List<JobPreparationAndReleaseTaskExecutionInformation>> serviceFuture, final ListOperationCallback<JobPreparationAndReleaseTaskExecutionInformation> serviceCallback)
  name: listPreparationAndReleaseTaskStatusNextAsync(final String nextPageLink, final JobListPreparationAndReleaseTaskStatusNextOptions jobListPreparationAndReleaseTaskStatusNextOptions, final ServiceFuture<List<JobPreparationAndReleaseTaskExecutionInformation>> serviceFuture, final ListOperationCallback<JobPreparationAndReleaseTaskExecutionInformation> serviceCallback)
  nameWithType: Jobs.listPreparationAndReleaseTaskStatusNextAsync(final String nextPageLink, final JobListPreparationAndReleaseTaskStatusNextOptions jobListPreparationAndReleaseTaskStatusNextOptions, final ServiceFuture<List<JobPreparationAndReleaseTaskExecutionInformation>> serviceFuture, final ListOperationCallback<JobPreparationAndReleaseTaskExecutionInformation> serviceCallback)
  parameters:
  - description: <p>The NextLink from the previous successful call to List operation. </p>
    name: nextPageLink
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>Additional parameters for the operation </p>
    name: jobListPreparationAndReleaseTaskStatusNextOptions
    type: final <xref href="com.microsoft.azure.batch.protocol.models.JobListPreparationAndReleaseTaskStatusNextOptions?alt=com.microsoft.azure.batch.protocol.models.JobListPreparationAndReleaseTaskStatusNextOptions&text=JobListPreparationAndReleaseTaskStatusNextOptions" data-throw-if-not-resolved="False"/>
  - description: <p>the ServiceFuture object tracking the Retrofit calls </p>
    name: serviceFuture
    type: final ServiceFuture&lt;List&lt;<xref href="com.microsoft.azure.batch.protocol.models.JobPreparationAndReleaseTaskExecutionInformation?alt=com.microsoft.azure.batch.protocol.models.JobPreparationAndReleaseTaskExecutionInformation&text=JobPreparationAndReleaseTaskExecutionInformation" data-throw-if-not-resolved="False"/>&gt;&gt;
  - description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    name: serviceCallback
    type: final ListOperationCallback&lt;<xref href="com.microsoft.azure.batch.protocol.models.JobPreparationAndReleaseTaskExecutionInformation?alt=com.microsoft.azure.batch.protocol.models.JobPreparationAndReleaseTaskExecutionInformation&text=JobPreparationAndReleaseTaskExecutionInformation" data-throw-if-not-resolved="False"/>&gt;
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
    type: ServiceFuture&lt;List&lt;<xref href="com.microsoft.azure.batch.protocol.models.JobPreparationAndReleaseTaskExecutionInformation?alt=com.microsoft.azure.batch.protocol.models.JobPreparationAndReleaseTaskExecutionInformation&text=JobPreparationAndReleaseTaskExecutionInformation" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Lists the execution status of the Job Preparation and Job Release task for the specified job across the compute nodes where the job has run. This API returns the Job Preparation and Job Release task status on all compute nodes that have run the Job Preparation or Job Release task. This includes nodes which have since been removed from the pool. If this API is invoked on a job which has no Job Preparation or Job Release task, the Batch service returns HTTP status code 409 (Conflict) with an error code of JobPreparationTaskNotSpecified.</p>

    <p></p>
  syntax: public ServiceFuture<List<JobPreparationAndReleaseTaskExecutionInformation>> listPreparationAndReleaseTaskStatusNextAsync(final String nextPageLink, final JobListPreparationAndReleaseTaskStatusNextOptions jobListPreparationAndReleaseTaskStatusNextOptions, final ServiceFuture<List<JobPreparationAndReleaseTaskExecutionInformation>> serviceFuture, final ListOperationCallback<JobPreparationAndReleaseTaskExecutionInformation> serviceCallback)
  uid: com.microsoft.azure.batch.protocol.Jobs.listPreparationAndReleaseTaskStatusNextAsync(final String,final JobListPreparationAndReleaseTaskStatusNextOptions,final ServiceFuture<List<JobPreparationAndReleaseTaskExecutionInformation>>,final ListOperationCallback<JobPreparationAndReleaseTaskExecutionInformation>)
- fullName: com.microsoft.azure.batch.protocol.Jobs.listPreparationAndReleaseTaskStatusNextAsync(final String nextPageLink, final ServiceFuture<List<JobPreparationAndReleaseTaskExecutionInformation>> serviceFuture, final ListOperationCallback<JobPreparationAndReleaseTaskExecutionInformation> serviceCallback)
  name: listPreparationAndReleaseTaskStatusNextAsync(final String nextPageLink, final ServiceFuture<List<JobPreparationAndReleaseTaskExecutionInformation>> serviceFuture, final ListOperationCallback<JobPreparationAndReleaseTaskExecutionInformation> serviceCallback)
  nameWithType: Jobs.listPreparationAndReleaseTaskStatusNextAsync(final String nextPageLink, final ServiceFuture<List<JobPreparationAndReleaseTaskExecutionInformation>> serviceFuture, final ListOperationCallback<JobPreparationAndReleaseTaskExecutionInformation> serviceCallback)
  parameters:
  - description: <p>The NextLink from the previous successful call to List operation. </p>
    name: nextPageLink
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>the ServiceFuture object tracking the Retrofit calls </p>
    name: serviceFuture
    type: final ServiceFuture&lt;List&lt;<xref href="com.microsoft.azure.batch.protocol.models.JobPreparationAndReleaseTaskExecutionInformation?alt=com.microsoft.azure.batch.protocol.models.JobPreparationAndReleaseTaskExecutionInformation&text=JobPreparationAndReleaseTaskExecutionInformation" data-throw-if-not-resolved="False"/>&gt;&gt;
  - description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    name: serviceCallback
    type: final ListOperationCallback&lt;<xref href="com.microsoft.azure.batch.protocol.models.JobPreparationAndReleaseTaskExecutionInformation?alt=com.microsoft.azure.batch.protocol.models.JobPreparationAndReleaseTaskExecutionInformation&text=JobPreparationAndReleaseTaskExecutionInformation" data-throw-if-not-resolved="False"/>&gt;
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
    type: ServiceFuture&lt;List&lt;<xref href="com.microsoft.azure.batch.protocol.models.JobPreparationAndReleaseTaskExecutionInformation?alt=com.microsoft.azure.batch.protocol.models.JobPreparationAndReleaseTaskExecutionInformation&text=JobPreparationAndReleaseTaskExecutionInformation" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Lists the execution status of the Job Preparation and Job Release task for the specified job across the compute nodes where the job has run. This API returns the Job Preparation and Job Release task status on all compute nodes that have run the Job Preparation or Job Release task. This includes nodes which have since been removed from the pool. If this API is invoked on a job which has no Job Preparation or Job Release task, the Batch service returns HTTP status code 409 (Conflict) with an error code of JobPreparationTaskNotSpecified.</p>

    <p></p>
  syntax: public ServiceFuture<List<JobPreparationAndReleaseTaskExecutionInformation>> listPreparationAndReleaseTaskStatusNextAsync(final String nextPageLink, final ServiceFuture<List<JobPreparationAndReleaseTaskExecutionInformation>> serviceFuture, final ListOperationCallback<JobPreparationAndReleaseTaskExecutionInformation> serviceCallback)
  uid: com.microsoft.azure.batch.protocol.Jobs.listPreparationAndReleaseTaskStatusNextAsync(final String,final ServiceFuture<List<JobPreparationAndReleaseTaskExecutionInformation>>,final ListOperationCallback<JobPreparationAndReleaseTaskExecutionInformation>)
uid: com.microsoft.azure.batch.protocol.Jobs.listPreparationAndReleaseTaskStatusNextAsync*
fullName: com.microsoft.azure.batch.protocol.Jobs.listPreparationAndReleaseTaskStatusNextAsync
name: listPreparationAndReleaseTaskStatusNextAsync(final String nextPageLink)
package: com.microsoft.azure.batch.protocol
metadata: {}
