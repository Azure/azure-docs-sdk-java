### YamlMime:JavaMember
nameWithType: EventProcessorHost.registerEventProcessorFactory
type: method
members:
- fullName: com.microsoft.azure.eventprocessorhost.EventProcessorHost.registerEventProcessorFactory(IEventProcessorFactory<?> factory)
  name: registerEventProcessorFactory(IEventProcessorFactory<?> factory)
  nameWithType: EventProcessorHost.registerEventProcessorFactory(IEventProcessorFactory<?> factory)
  parameters:
  - description: <p>User-supplied event processor factory object. </p>
    name: factory
    type: <xref href="com.microsoft.azure.eventprocessorhost.IEventProcessorFactory?alt=com.microsoft.azure.eventprocessorhost.IEventProcessorFactory&text=IEventProcessorFactory" data-throw-if-not-resolved="False"/>&lt;?&gt;
  returns:
    description: <p>Future that completes when initialization is finished. </p>
    type: <xref href="CompletableFuture%3CVoid%3E?alt=CompletableFuture<Void>&text=CompletableFuture%3CVoid%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Register a user-supplied event processor factory and start processing. </p>

    <p>If creating a new event processor requires more work than just new'ing an objects, the user must create an object that implements IEventProcessorFactory and pass it to this method, instead of calling registerEventProcessor. </p>

    <p>This overload uses default options for the processor host and event processor(s). </p>

    <p>The returned CompletableFuture completes when host initialization is finished. Initialization failures are reported by completing the future with an exception, so it is important to call get() on the future and handle any exceptions thrown.</p>

    <p></p>
  syntax: public CompletableFuture<Void> registerEventProcessorFactory(IEventProcessorFactory<?> factory)
  uid: com.microsoft.azure.eventprocessorhost.EventProcessorHost.registerEventProcessorFactory(IEventProcessorFactory<?>)
- fullName: com.microsoft.azure.eventprocessorhost.EventProcessorHost.registerEventProcessorFactory(IEventProcessorFactory<?> factory, EventProcessorOptions processorOptions)
  name: registerEventProcessorFactory(IEventProcessorFactory<?> factory, EventProcessorOptions processorOptions)
  nameWithType: EventProcessorHost.registerEventProcessorFactory(IEventProcessorFactory<?> factory, EventProcessorOptions processorOptions)
  parameters:
  - description: <p>User-supplied event processor factory object. </p>
    name: factory
    type: <xref href="com.microsoft.azure.eventprocessorhost.IEventProcessorFactory?alt=com.microsoft.azure.eventprocessorhost.IEventProcessorFactory&text=IEventProcessorFactory" data-throw-if-not-resolved="False"/>&lt;?&gt;
  - description: <p>Options for the processor host and event processor(s). </p>
    name: processorOptions
    type: <xref href="com.microsoft.azure.eventprocessorhost.EventProcessorOptions?alt=com.microsoft.azure.eventprocessorhost.EventProcessorOptions&text=EventProcessorOptions" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>Future that completes when initialization is finished. </p>
    type: <xref href="CompletableFuture%3CVoid%3E?alt=CompletableFuture<Void>&text=CompletableFuture%3CVoid%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Register user-supplied event processor factory and start processing. </p>

    <p>This overload takes user-specified options. </p>

    <p>The returned CompletableFuture completes when host initialization is finished. Initialization failures are reported by completing the future with an exception, so it is important to call get() on the future and handle any exceptions thrown.</p>

    <p></p>
  syntax: public CompletableFuture<Void> registerEventProcessorFactory(IEventProcessorFactory<?> factory, EventProcessorOptions processorOptions)
  uid: com.microsoft.azure.eventprocessorhost.EventProcessorHost.registerEventProcessorFactory(IEventProcessorFactory<?>,EventProcessorOptions)
uid: com.microsoft.azure.eventprocessorhost.EventProcessorHost.registerEventProcessorFactory*
fullName: com.microsoft.azure.eventprocessorhost.EventProcessorHost.registerEventProcessorFactory(IEventProcessorFactory<?> factory)
name: registerEventProcessorFactory(IEventProcessorFactory<?> factory)
package: com.microsoft.azure.eventprocessorhost
metadata: {}
