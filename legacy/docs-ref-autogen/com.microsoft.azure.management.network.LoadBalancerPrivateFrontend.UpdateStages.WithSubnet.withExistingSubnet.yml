### YamlMime:JavaMember
nameWithType: LoadBalancerPrivateFrontend.UpdateStages.WithSubnet.withExistingSubnet
type: method
members:
- fullName: com.microsoft.azure.management.network.LoadBalancerPrivateFrontend.UpdateStages.WithSubnet.withExistingSubnet(Network network, String subnetName)
  name: withExistingSubnet(Network network, String subnetName)
  nameWithType: LoadBalancerPrivateFrontend.UpdateStages.WithSubnet.withExistingSubnet(Network network, String subnetName)
  parameters:
  - description: <p>the virtual network the subnet exists in </p>
    name: network
    type: <xref href="com.microsoft.azure.management.network.Network?alt=com.microsoft.azure.management.network.Network&text=Network" data-throw-if-not-resolved="False"/>
  - description: <p>the name of a subnet </p>
    name: subnetName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the next stage of the definition </p>
    type: <xref href="com.microsoft.azure.management.network.LoadBalancerPrivateFrontend.Update?alt=com.microsoft.azure.management.network.LoadBalancerPrivateFrontend.Update&text=LoadBalancerPrivateFrontend.Update" data-throw-if-not-resolved="False"/>
  summary: <p>Assigns the specified subnet to this private frontend of the internal load balancer. </p>
  syntax: public Update withExistingSubnet(Network network, String subnetName)
  uid: com.microsoft.azure.management.network.LoadBalancerPrivateFrontend.UpdateStages.WithSubnet.withExistingSubnet(Network,String)
uid: com.microsoft.azure.management.network.LoadBalancerPrivateFrontend.UpdateStages.WithSubnet.withExistingSubnet*
fullName: com.microsoft.azure.management.network.LoadBalancerPrivateFrontend.UpdateStages.WithSubnet.withExistingSubnet(Network network, String subnetName)
name: withExistingSubnet(Network network, String subnetName)
package: com.microsoft.azure.management.network
metadata: {}
