### YamlMime:JavaType
methods:
- fullName: com.microsoft.azure.cognitiveservices.vision.faceapi.FaceAPI.acceptLanguage()
  name: acceptLanguage()
  nameWithType: FaceAPI.acceptLanguage()
  returns:
    description: <p>the acceptLanguage value. </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets Gets or sets the preferred language for the response..</p>

    <p></p>
  syntax: public String acceptLanguage()
  uid: com.microsoft.azure.cognitiveservices.vision.faceapi.FaceAPI.acceptLanguage()
- fullName: com.microsoft.azure.cognitiveservices.vision.faceapi.FaceAPI.azureRegion()
  name: azureRegion()
  nameWithType: FaceAPI.azureRegion()
  returns:
    description: <p>the azureRegion value. </p>
    type: <xref href="com.microsoft.azure.cognitiveservices.vision.faceapi.models.AzureRegions?alt=com.microsoft.azure.cognitiveservices.vision.faceapi.models.AzureRegions&text=AzureRegions" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets Supported Azure regions for Cognitive Services endpoints. Possible values include: 'westus', 'westeurope', 'southeastasia', 'eastus2', 'westcentralus', 'westus2', 'eastus', 'southcentralus', 'northeurope', 'eastasia', 'australiaeast', 'brazilsouth'.</p>

    <p></p>
  syntax: public AzureRegions azureRegion()
  uid: com.microsoft.azure.cognitiveservices.vision.faceapi.FaceAPI.azureRegion()
- fullName: com.microsoft.azure.cognitiveservices.vision.faceapi.FaceAPI.faceLists()
  name: faceLists()
  nameWithType: FaceAPI.faceLists()
  returns:
    description: <p>the FaceLists object. </p>
    type: <xref href="com.microsoft.azure.cognitiveservices.vision.faceapi.FaceLists?alt=com.microsoft.azure.cognitiveservices.vision.faceapi.FaceLists&text=FaceLists" data-throw-if-not-resolved="False"/>
  summary: <p>Gets the FaceLists object to access its operations. </p>
  syntax: public FaceLists faceLists()
  uid: com.microsoft.azure.cognitiveservices.vision.faceapi.FaceAPI.faceLists()
- fullName: com.microsoft.azure.cognitiveservices.vision.faceapi.FaceAPI.faces()
  name: faces()
  nameWithType: FaceAPI.faces()
  returns:
    description: <p>the Faces object. </p>
    type: <xref href="com.microsoft.azure.cognitiveservices.vision.faceapi.Faces?alt=com.microsoft.azure.cognitiveservices.vision.faceapi.Faces&text=Faces" data-throw-if-not-resolved="False"/>
  summary: <p>Gets the Faces object to access its operations. </p>
  syntax: public Faces faces()
  uid: com.microsoft.azure.cognitiveservices.vision.faceapi.FaceAPI.faces()
- fullName: com.microsoft.azure.cognitiveservices.vision.faceapi.FaceAPI.generateClientRequestId()
  name: generateClientRequestId()
  nameWithType: FaceAPI.generateClientRequestId()
  returns:
    description: <p>the generateClientRequestId value. </p>
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets When set to true a unique x-ms-client-request-id value is generated and included in each request. Default is true..</p>

    <p></p>
  syntax: public boolean generateClientRequestId()
  uid: com.microsoft.azure.cognitiveservices.vision.faceapi.FaceAPI.generateClientRequestId()
- fullName: com.microsoft.azure.cognitiveservices.vision.faceapi.FaceAPI.getAzureClient()
  name: getAzureClient()
  nameWithType: FaceAPI.getAzureClient()
  returns:
    description: <p>the azure client; </p>
    type: <xref href="AzureClient?alt=AzureClient&text=AzureClient" data-throw-if-not-resolved="False"/>
  summary: <p>Gets the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="AzureClient"></xref> used for long running operations. </p>
  syntax: public AzureClient getAzureClient()
  uid: com.microsoft.azure.cognitiveservices.vision.faceapi.FaceAPI.getAzureClient()
- fullName: com.microsoft.azure.cognitiveservices.vision.faceapi.FaceAPI.longRunningOperationRetryTimeout()
  name: longRunningOperationRetryTimeout()
  nameWithType: FaceAPI.longRunningOperationRetryTimeout()
  returns:
    description: <p>the longRunningOperationRetryTimeout value. </p>
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets Gets or sets the retry timeout in seconds for Long Running Operations. Default value is 30..</p>

    <p></p>
  syntax: public int longRunningOperationRetryTimeout()
  uid: com.microsoft.azure.cognitiveservices.vision.faceapi.FaceAPI.longRunningOperationRetryTimeout()
- fullName: com.microsoft.azure.cognitiveservices.vision.faceapi.FaceAPI.personGroupPersons()
  name: personGroupPersons()
  nameWithType: FaceAPI.personGroupPersons()
  returns:
    description: <p>the PersonGroupPersons object. </p>
    type: <xref href="com.microsoft.azure.cognitiveservices.vision.faceapi.PersonGroupPersons?alt=com.microsoft.azure.cognitiveservices.vision.faceapi.PersonGroupPersons&text=PersonGroupPersons" data-throw-if-not-resolved="False"/>
  summary: <p>Gets the PersonGroupPersons object to access its operations. </p>
  syntax: public PersonGroupPersons personGroupPersons()
  uid: com.microsoft.azure.cognitiveservices.vision.faceapi.FaceAPI.personGroupPersons()
- fullName: com.microsoft.azure.cognitiveservices.vision.faceapi.FaceAPI.personGroups()
  name: personGroups()
  nameWithType: FaceAPI.personGroups()
  returns:
    description: <p>the PersonGroups object. </p>
    type: <xref href="com.microsoft.azure.cognitiveservices.vision.faceapi.PersonGroups?alt=com.microsoft.azure.cognitiveservices.vision.faceapi.PersonGroups&text=PersonGroups" data-throw-if-not-resolved="False"/>
  summary: <p>Gets the PersonGroups object to access its operations. </p>
  syntax: public PersonGroups personGroups()
  uid: com.microsoft.azure.cognitiveservices.vision.faceapi.FaceAPI.personGroups()
- fullName: com.microsoft.azure.cognitiveservices.vision.faceapi.FaceAPI.restClient()
  name: restClient()
  nameWithType: FaceAPI.restClient()
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="RestClient"></xref> object. </p>
    type: <xref href="RestClient?alt=RestClient&text=RestClient" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the REST client.</p>

    <p></p>
  syntax: public RestClient restClient()
  uid: com.microsoft.azure.cognitiveservices.vision.faceapi.FaceAPI.restClient()
- fullName: com.microsoft.azure.cognitiveservices.vision.faceapi.FaceAPI.userAgent()
  name: userAgent()
  nameWithType: FaceAPI.userAgent()
  returns:
    description: <p>the user agent string. </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the User-Agent header for the client.</p>

    <p></p>
  syntax: public String userAgent()
  uid: com.microsoft.azure.cognitiveservices.vision.faceapi.FaceAPI.userAgent()
- fullName: com.microsoft.azure.cognitiveservices.vision.faceapi.FaceAPI.withAcceptLanguage(String acceptLanguage)
  name: withAcceptLanguage(String acceptLanguage)
  nameWithType: FaceAPI.withAcceptLanguage(String acceptLanguage)
  parameters:
  - description: <p>the acceptLanguage value. </p>
    name: acceptLanguage
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the service client itself </p>
    type: <xref href="com.microsoft.azure.cognitiveservices.vision.faceapi.FaceAPI?alt=com.microsoft.azure.cognitiveservices.vision.faceapi.FaceAPI&text=FaceAPI" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Sets Gets or sets the preferred language for the response..</p>

    <p></p>
  syntax: public FaceAPI withAcceptLanguage(String acceptLanguage)
  uid: com.microsoft.azure.cognitiveservices.vision.faceapi.FaceAPI.withAcceptLanguage(String)
- fullName: com.microsoft.azure.cognitiveservices.vision.faceapi.FaceAPI.withAzureRegion(AzureRegions azureRegion)
  name: withAzureRegion(AzureRegions azureRegion)
  nameWithType: FaceAPI.withAzureRegion(AzureRegions azureRegion)
  parameters:
  - description: <p>the azureRegion value. </p>
    name: azureRegion
    type: <xref href="com.microsoft.azure.cognitiveservices.vision.faceapi.models.AzureRegions?alt=com.microsoft.azure.cognitiveservices.vision.faceapi.models.AzureRegions&text=AzureRegions" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the service client itself </p>
    type: <xref href="com.microsoft.azure.cognitiveservices.vision.faceapi.FaceAPI?alt=com.microsoft.azure.cognitiveservices.vision.faceapi.FaceAPI&text=FaceAPI" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Sets Supported Azure regions for Cognitive Services endpoints. Possible values include: 'westus', 'westeurope', 'southeastasia', 'eastus2', 'westcentralus', 'westus2', 'eastus', 'southcentralus', 'northeurope', 'eastasia', 'australiaeast', 'brazilsouth'.</p>

    <p></p>
  syntax: public FaceAPI withAzureRegion(AzureRegions azureRegion)
  uid: com.microsoft.azure.cognitiveservices.vision.faceapi.FaceAPI.withAzureRegion(AzureRegions)
- fullName: com.microsoft.azure.cognitiveservices.vision.faceapi.FaceAPI.withGenerateClientRequestId(boolean generateClientRequestId)
  name: withGenerateClientRequestId(boolean generateClientRequestId)
  nameWithType: FaceAPI.withGenerateClientRequestId(boolean generateClientRequestId)
  parameters:
  - description: <p>the generateClientRequestId value. </p>
    name: generateClientRequestId
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the service client itself </p>
    type: <xref href="com.microsoft.azure.cognitiveservices.vision.faceapi.FaceAPI?alt=com.microsoft.azure.cognitiveservices.vision.faceapi.FaceAPI&text=FaceAPI" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Sets When set to true a unique x-ms-client-request-id value is generated and included in each request. Default is true..</p>

    <p></p>
  syntax: public FaceAPI withGenerateClientRequestId(boolean generateClientRequestId)
  uid: com.microsoft.azure.cognitiveservices.vision.faceapi.FaceAPI.withGenerateClientRequestId(boolean)
- fullName: com.microsoft.azure.cognitiveservices.vision.faceapi.FaceAPI.withLongRunningOperationRetryTimeout(int longRunningOperationRetryTimeout)
  name: withLongRunningOperationRetryTimeout(int longRunningOperationRetryTimeout)
  nameWithType: FaceAPI.withLongRunningOperationRetryTimeout(int longRunningOperationRetryTimeout)
  parameters:
  - description: <p>the longRunningOperationRetryTimeout value. </p>
    name: longRunningOperationRetryTimeout
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the service client itself </p>
    type: <xref href="com.microsoft.azure.cognitiveservices.vision.faceapi.FaceAPI?alt=com.microsoft.azure.cognitiveservices.vision.faceapi.FaceAPI&text=FaceAPI" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Sets Gets or sets the retry timeout in seconds for Long Running Operations. Default value is 30..</p>

    <p></p>
  syntax: public FaceAPI withLongRunningOperationRetryTimeout(int longRunningOperationRetryTimeout)
  uid: com.microsoft.azure.cognitiveservices.vision.faceapi.FaceAPI.withLongRunningOperationRetryTimeout(int)
nameWithType: FaceAPI
syntax: public interface FaceAPI
type: interface
uid: com.microsoft.azure.cognitiveservices.vision.faceapi.FaceAPI
fullName: com.microsoft.azure.cognitiveservices.vision.faceapi.FaceAPI
name: FaceAPI
package: com.microsoft.azure.cognitiveservices.vision.faceapi
summary: <p>The interface for FaceAPI class. </p>
metadata: {}
