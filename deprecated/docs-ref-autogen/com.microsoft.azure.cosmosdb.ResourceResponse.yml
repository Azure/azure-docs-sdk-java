### YamlMime:JavaType
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
methods:
- fullName: com.microsoft.azure.cosmosdb.ResourceResponse<T extends Resource>.getActivityId()
  name: getActivityId()
  nameWithType: ResourceResponse<T>.getActivityId()
  returns:
    description: <p>the activity id. </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the Activity ID for the request.</p>

    <p></p>
  syntax: public String getActivityId()
  uid: com.microsoft.azure.cosmosdb.ResourceResponse.getActivityId()
- fullName: com.microsoft.azure.cosmosdb.ResourceResponse<T extends Resource>.getClientSideRequestStatistics()
  name: getClientSideRequestStatistics()
  nameWithType: ResourceResponse<T>.getClientSideRequestStatistics()
  returns:
    description: <p>request statistics for the current request to Azure Cosmos DB service. </p>
    type: <xref href="com.microsoft.azure.cosmosdb.ClientSideRequestStatistics?alt=com.microsoft.azure.cosmosdb.ClientSideRequestStatistics&text=ClientSideRequestStatistics" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the request statistics for the current request to Azure Cosmos DB service.</p>

    <p></p>
  syntax: public ClientSideRequestStatistics getClientSideRequestStatistics()
  uid: com.microsoft.azure.cosmosdb.ResourceResponse.getClientSideRequestStatistics()
- fullName: com.microsoft.azure.cosmosdb.ResourceResponse<T extends Resource>.getCollectionQuota()
  name: getCollectionQuota()
  nameWithType: ResourceResponse<T>.getCollectionQuota()
  returns:
    description: <p>the collection quota. </p>
    type: <xref href="long?alt=long&text=long" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Max Quota.</p>

    <p></p>
  syntax: public long getCollectionQuota()
  uid: com.microsoft.azure.cosmosdb.ResourceResponse.getCollectionQuota()
- fullName: com.microsoft.azure.cosmosdb.ResourceResponse<T extends Resource>.getCollectionSizeQuota()
  name: getCollectionSizeQuota()
  nameWithType: ResourceResponse<T>.getCollectionSizeQuota()
  returns:
    description: <p>the collection size quota. </p>
    type: <xref href="long?alt=long&text=long" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Max Quota.</p>

    <p></p>
  syntax: public long getCollectionSizeQuota()
  uid: com.microsoft.azure.cosmosdb.ResourceResponse.getCollectionSizeQuota()
- fullName: com.microsoft.azure.cosmosdb.ResourceResponse<T extends Resource>.getCollectionSizeUsage()
  name: getCollectionSizeUsage()
  nameWithType: ResourceResponse<T>.getCollectionSizeUsage()
  returns:
    description: <p>the collection size usage. </p>
    type: <xref href="long?alt=long&text=long" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Current Usage.</p>

    <p></p>
  syntax: public long getCollectionSizeUsage()
  uid: com.microsoft.azure.cosmosdb.ResourceResponse.getCollectionSizeUsage()
- fullName: com.microsoft.azure.cosmosdb.ResourceResponse<T extends Resource>.getCollectionUsage()
  name: getCollectionUsage()
  nameWithType: ResourceResponse<T>.getCollectionUsage()
  returns:
    description: <p>the current collection usage. </p>
    type: <xref href="long?alt=long&text=long" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Current Usage.</p>

    <p></p>
  syntax: public long getCollectionUsage()
  uid: com.microsoft.azure.cosmosdb.ResourceResponse.getCollectionUsage()
- fullName: com.microsoft.azure.cosmosdb.ResourceResponse<T extends Resource>.getCurrentResourceQuotaUsage()
  name: getCurrentResourceQuotaUsage()
  nameWithType: ResourceResponse<T>.getCurrentResourceQuotaUsage()
  returns:
    description: <p>the current resource quota usage. </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the current size of this entity (in megabytes (MB) for server resources and in count for master resources)</p>

    <p></p>
  syntax: public String getCurrentResourceQuotaUsage()
  uid: com.microsoft.azure.cosmosdb.ResourceResponse.getCurrentResourceQuotaUsage()
- fullName: com.microsoft.azure.cosmosdb.ResourceResponse<T extends Resource>.getDatabaseQuota()
  name: getDatabaseQuota()
  nameWithType: ResourceResponse<T>.getDatabaseQuota()
  returns:
    description: <p>the database quota. </p>
    type: <xref href="long?alt=long&text=long" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Max Quota.</p>

    <p></p>
  syntax: public long getDatabaseQuota()
  uid: com.microsoft.azure.cosmosdb.ResourceResponse.getDatabaseQuota()
- fullName: com.microsoft.azure.cosmosdb.ResourceResponse<T extends Resource>.getDatabaseUsage()
  name: getDatabaseUsage()
  nameWithType: ResourceResponse<T>.getDatabaseUsage()
  returns:
    description: <p>the current database usage. </p>
    type: <xref href="long?alt=long&text=long" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Current Usage.</p>

    <p></p>
  syntax: public long getDatabaseUsage()
  uid: com.microsoft.azure.cosmosdb.ResourceResponse.getDatabaseUsage()
- fullName: com.microsoft.azure.cosmosdb.ResourceResponse<T extends Resource>.getDocumentCountQuota()
  name: getDocumentCountQuota()
  nameWithType: ResourceResponse<T>.getDocumentCountQuota()
  returns:
    description: <p>the document count quota. </p>
    type: <xref href="long?alt=long&text=long" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Max document count quota.</p>

    <p></p>
  syntax: public long getDocumentCountQuota()
  uid: com.microsoft.azure.cosmosdb.ResourceResponse.getDocumentCountQuota()
- fullName: com.microsoft.azure.cosmosdb.ResourceResponse<T extends Resource>.getDocumentCountUsage()
  name: getDocumentCountUsage()
  nameWithType: ResourceResponse<T>.getDocumentCountUsage()
  returns:
    description: <p>the document count usage. </p>
    type: <xref href="long?alt=long&text=long" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Current document count usage.</p>

    <p></p>
  syntax: public long getDocumentCountUsage()
  uid: com.microsoft.azure.cosmosdb.ResourceResponse.getDocumentCountUsage()
- fullName: com.microsoft.azure.cosmosdb.ResourceResponse<T extends Resource>.getDocumentQuota()
  name: getDocumentQuota()
  nameWithType: ResourceResponse<T>.getDocumentQuota()
  returns:
    description: <p>the document quota. </p>
    type: <xref href="long?alt=long&text=long" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Max Quota.</p>

    <p></p>
  syntax: public long getDocumentQuota()
  uid: com.microsoft.azure.cosmosdb.ResourceResponse.getDocumentQuota()
- fullName: com.microsoft.azure.cosmosdb.ResourceResponse<T extends Resource>.getDocumentUsage()
  name: getDocumentUsage()
  nameWithType: ResourceResponse<T>.getDocumentUsage()
  returns:
    description: <p>the document usage. </p>
    type: <xref href="long?alt=long&text=long" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Current Usage.</p>

    <p></p>
  syntax: public long getDocumentUsage()
  uid: com.microsoft.azure.cosmosdb.ResourceResponse.getDocumentUsage()
- fullName: com.microsoft.azure.cosmosdb.ResourceResponse<T extends Resource>.getIndexTransformationProgress()
  name: getIndexTransformationProgress()
  nameWithType: ResourceResponse<T>.getIndexTransformationProgress()
  returns:
    description: <p>the progress of an index transformation. </p>
    type: <xref href="long?alt=long&text=long" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the progress of an index transformation, if one is underway.</p>

    <p></p>
  syntax: public long getIndexTransformationProgress()
  uid: com.microsoft.azure.cosmosdb.ResourceResponse.getIndexTransformationProgress()
- fullName: com.microsoft.azure.cosmosdb.ResourceResponse<T extends Resource>.getLazyIndexingProgress()
  name: getLazyIndexingProgress()
  nameWithType: ResourceResponse<T>.getLazyIndexingProgress()
  returns:
    description: <p>the progress of lazy indexing. </p>
    type: <xref href="long?alt=long&text=long" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the progress of lazy indexing.</p>

    <p></p>
  syntax: public long getLazyIndexingProgress()
  uid: com.microsoft.azure.cosmosdb.ResourceResponse.getLazyIndexingProgress()
- fullName: com.microsoft.azure.cosmosdb.ResourceResponse<T extends Resource>.getMaxResourceQuota()
  name: getMaxResourceQuota()
  nameWithType: ResourceResponse<T>.getMaxResourceQuota()
  returns:
    description: <p>the max resource quota. </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the maximum size limit for this entity (in megabytes (MB) for server resources and in count for master resources).</p>

    <p></p>
  syntax: public String getMaxResourceQuota()
  uid: com.microsoft.azure.cosmosdb.ResourceResponse.getMaxResourceQuota()
- fullName: com.microsoft.azure.cosmosdb.ResourceResponse<T extends Resource>.getPermissionQuota()
  name: getPermissionQuota()
  nameWithType: ResourceResponse<T>.getPermissionQuota()
  returns:
    description: <p>the permission quota. </p>
    type: <xref href="long?alt=long&text=long" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Max Quota.</p>

    <p></p>
  syntax: public long getPermissionQuota()
  uid: com.microsoft.azure.cosmosdb.ResourceResponse.getPermissionQuota()
- fullName: com.microsoft.azure.cosmosdb.ResourceResponse<T extends Resource>.getPermissionUsage()
  name: getPermissionUsage()
  nameWithType: ResourceResponse<T>.getPermissionUsage()
  returns:
    description: <p>the current permission usage. </p>
    type: <xref href="long?alt=long&text=long" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Current Usage.</p>

    <p></p>
  syntax: public long getPermissionUsage()
  uid: com.microsoft.azure.cosmosdb.ResourceResponse.getPermissionUsage()
- fullName: com.microsoft.azure.cosmosdb.ResourceResponse<T extends Resource>.getRequestCharge()
  name: getRequestCharge()
  nameWithType: ResourceResponse<T>.getRequestCharge()
  returns:
    description: <p>the request charge. </p>
    type: <xref href="double?alt=double&text=double" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the number of index paths (terms) generated by the operation.</p>

    <p></p>
  syntax: public double getRequestCharge()
  uid: com.microsoft.azure.cosmosdb.ResourceResponse.getRequestCharge()
- fullName: com.microsoft.azure.cosmosdb.ResourceResponse<T extends Resource>.getRequestDiagnosticsString()
  name: getRequestDiagnosticsString()
  nameWithType: ResourceResponse<T>.getRequestDiagnosticsString()
  returns:
    description: <p>diagnostics information for the current request to Azure Cosmos DB service. </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the diagnostics information for the current request to Azure Cosmos DB service.</p>

    <p></p>
  syntax: public String getRequestDiagnosticsString()
  uid: com.microsoft.azure.cosmosdb.ResourceResponse.getRequestDiagnosticsString()
- fullName: com.microsoft.azure.cosmosdb.ResourceResponse<T extends Resource>.getRequestLatency()
  name: getRequestLatency()
  nameWithType: ResourceResponse<T>.getRequestLatency()
  returns:
    description: <p>end-to-end request latency for the current request to Azure Cosmos DB service. </p>
    type: <xref href="Duration?alt=Duration&text=Duration" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the end-to-end request latency for the current request to Azure Cosmos DB service.</p>

    <p></p>
  syntax: public Duration getRequestLatency()
  uid: com.microsoft.azure.cosmosdb.ResourceResponse.getRequestLatency()
- fullName: com.microsoft.azure.cosmosdb.ResourceResponse<T extends Resource>.getResource()
  name: getResource()
  nameWithType: ResourceResponse<T>.getResource()
  returns:
    description: <p>the resource. </p>
    type: <xref href="T?alt=T&text=T" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the resource for the request.</p>

    <p></p>
  syntax: public T getResource()
  uid: com.microsoft.azure.cosmosdb.ResourceResponse.getResource()
- fullName: com.microsoft.azure.cosmosdb.ResourceResponse<T extends Resource>.getResponseHeaders()
  name: getResponseHeaders()
  nameWithType: ResourceResponse<T>.getResponseHeaders()
  returns:
    description: <p>the response headers. </p>
    type: <xref href="Map%3CString%2C+String%3E?alt=Map%3CString%2C+String%3E&text=Map%3CString%2C+String%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the headers associated with the response.</p>

    <p></p>
  syntax: public Map<String, String> getResponseHeaders()
  uid: com.microsoft.azure.cosmosdb.ResourceResponse.getResponseHeaders()
- fullName: com.microsoft.azure.cosmosdb.ResourceResponse<T extends Resource>.getSessionToken()
  name: getSessionToken()
  nameWithType: ResourceResponse<T>.getSessionToken()
  returns:
    description: <p>the session token. </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the token used for managing client's consistency requirements.</p>

    <p></p>
  syntax: public String getSessionToken()
  uid: com.microsoft.azure.cosmosdb.ResourceResponse.getSessionToken()
- fullName: com.microsoft.azure.cosmosdb.ResourceResponse<T extends Resource>.getStatusCode()
  name: getStatusCode()
  nameWithType: ResourceResponse<T>.getStatusCode()
  returns:
    description: <p>the status code. </p>
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the HTTP status code associated with the response.</p>

    <p></p>
  syntax: public int getStatusCode()
  uid: com.microsoft.azure.cosmosdb.ResourceResponse.getStatusCode()
- fullName: com.microsoft.azure.cosmosdb.ResourceResponse<T extends Resource>.getStoredProceduresQuota()
  name: getStoredProceduresQuota()
  nameWithType: ResourceResponse<T>.getStoredProceduresQuota()
  returns:
    description: <p>the stored procedures quota. </p>
    type: <xref href="long?alt=long&text=long" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Max Quota.</p>

    <p></p>
  syntax: public long getStoredProceduresQuota()
  uid: com.microsoft.azure.cosmosdb.ResourceResponse.getStoredProceduresQuota()
- fullName: com.microsoft.azure.cosmosdb.ResourceResponse<T extends Resource>.getStoredProceduresUsage()
  name: getStoredProceduresUsage()
  nameWithType: ResourceResponse<T>.getStoredProceduresUsage()
  returns:
    description: <p>the current stored procedures usage. </p>
    type: <xref href="long?alt=long&text=long" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Current Usage.</p>

    <p></p>
  syntax: public long getStoredProceduresUsage()
  uid: com.microsoft.azure.cosmosdb.ResourceResponse.getStoredProceduresUsage()
- fullName: com.microsoft.azure.cosmosdb.ResourceResponse<T extends Resource>.getTriggersQuota()
  name: getTriggersQuota()
  nameWithType: ResourceResponse<T>.getTriggersQuota()
  returns:
    description: <p>the triggers quota. </p>
    type: <xref href="long?alt=long&text=long" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Max Quota.</p>

    <p></p>
  syntax: public long getTriggersQuota()
  uid: com.microsoft.azure.cosmosdb.ResourceResponse.getTriggersQuota()
- fullName: com.microsoft.azure.cosmosdb.ResourceResponse<T extends Resource>.getTriggersUsage()
  name: getTriggersUsage()
  nameWithType: ResourceResponse<T>.getTriggersUsage()
  returns:
    description: <p>the current triggers usage. </p>
    type: <xref href="long?alt=long&text=long" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Current Usage.</p>

    <p></p>
  syntax: public long getTriggersUsage()
  uid: com.microsoft.azure.cosmosdb.ResourceResponse.getTriggersUsage()
- fullName: com.microsoft.azure.cosmosdb.ResourceResponse<T extends Resource>.getUserDefinedFunctionsQuota()
  name: getUserDefinedFunctionsQuota()
  nameWithType: ResourceResponse<T>.getUserDefinedFunctionsQuota()
  returns:
    description: <p>the user defined functions quota. </p>
    type: <xref href="long?alt=long&text=long" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Max Quota.</p>

    <p></p>
  syntax: public long getUserDefinedFunctionsQuota()
  uid: com.microsoft.azure.cosmosdb.ResourceResponse.getUserDefinedFunctionsQuota()
- fullName: com.microsoft.azure.cosmosdb.ResourceResponse<T extends Resource>.getUserDefinedFunctionsUsage()
  name: getUserDefinedFunctionsUsage()
  nameWithType: ResourceResponse<T>.getUserDefinedFunctionsUsage()
  returns:
    description: <p>the current user defined functions usage. </p>
    type: <xref href="long?alt=long&text=long" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Current Usage.</p>

    <p></p>
  syntax: public long getUserDefinedFunctionsUsage()
  uid: com.microsoft.azure.cosmosdb.ResourceResponse.getUserDefinedFunctionsUsage()
- fullName: com.microsoft.azure.cosmosdb.ResourceResponse<T extends Resource>.getUserQuota()
  name: getUserQuota()
  nameWithType: ResourceResponse<T>.getUserQuota()
  returns:
    description: <p>the user quota. </p>
    type: <xref href="long?alt=long&text=long" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Max Quota.</p>

    <p></p>
  syntax: public long getUserQuota()
  uid: com.microsoft.azure.cosmosdb.ResourceResponse.getUserQuota()
- fullName: com.microsoft.azure.cosmosdb.ResourceResponse<T extends Resource>.getUserUsage()
  name: getUserUsage()
  nameWithType: ResourceResponse<T>.getUserUsage()
  returns:
    description: <p>the current user usage. </p>
    type: <xref href="long?alt=long&text=long" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Current Usage.</p>

    <p></p>
  syntax: public long getUserUsage()
  uid: com.microsoft.azure.cosmosdb.ResourceResponse.getUserUsage()
nameWithType: ResourceResponse<T>
syntax: public class ResourceResponse<T extends Resource>
type: class
typeParameters:
- description: <p>the resource type of the resource response. </p>
  name: T
uid: com.microsoft.azure.cosmosdb.ResourceResponse
fullName: com.microsoft.azure.cosmosdb.ResourceResponse<T>
name: ResourceResponse<T>
package: com.microsoft.azure.cosmosdb
summary: >-
  <p>Represents the service response to a request made from DocumentClient in the Azure Cosmos DB database service. Contains both the resource and the response headers.</p>

  <p></p>
metadata: {}
