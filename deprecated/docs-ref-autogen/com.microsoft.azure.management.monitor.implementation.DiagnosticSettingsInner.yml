### YamlMime:JavaType
constructors:
- fullName: com.microsoft.azure.management.monitor.implementation.DiagnosticSettingsInner.DiagnosticSettingsInner(Retrofit retrofit, MonitorManagementClientImpl client)
  name: DiagnosticSettingsInner(Retrofit retrofit, MonitorManagementClientImpl client)
  nameWithType: DiagnosticSettingsInner.DiagnosticSettingsInner(Retrofit retrofit, MonitorManagementClientImpl client)
  parameters:
  - description: <p>the Retrofit instance built from a Retrofit Builder. </p>
    name: retrofit
    type: <xref href="Retrofit?alt=Retrofit&text=Retrofit" data-throw-if-not-resolved="False"/>
  - description: <p>the instance of the service client containing this operation class. </p>
    name: client
    type: <xref href="com.microsoft.azure.management.monitor.implementation.MonitorManagementClientImpl?alt=com.microsoft.azure.management.monitor.implementation.MonitorManagementClientImpl&text=MonitorManagementClientImpl" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Initializes an instance of DiagnosticSettingsInner.</p>

    <p></p>
  syntax: public DiagnosticSettingsInner(Retrofit retrofit, MonitorManagementClientImpl client)
  uid: com.microsoft.azure.management.monitor.implementation.DiagnosticSettingsInner.DiagnosticSettingsInner(Retrofit,MonitorManagementClientImpl)
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
- <xref href="com.microsoft.azure.management.resources.fluentcore.collection.InnerSupportsDelete?alt=com.microsoft.azure.management.resources.fluentcore.collection.InnerSupportsDelete&text=InnerSupportsDelete%3CResponseT%3E" data-throw-if-not-resolved="False"/>
methods:
- fullName: com.microsoft.azure.management.monitor.implementation.DiagnosticSettingsInner.createOrUpdate(String resourceUri, String name, DiagnosticSettingsResourceInner parameters)
  name: createOrUpdate(String resourceUri, String name, DiagnosticSettingsResourceInner parameters)
  nameWithType: DiagnosticSettingsInner.createOrUpdate(String resourceUri, String name, DiagnosticSettingsResourceInner parameters)
  parameters:
  - description: <p>The identifier of the resource. </p>
    name: resourceUri
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the diagnostic setting. </p>
    name: name
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>Parameters supplied to the operation. </p>
    name: parameters
    type: <xref href="com.microsoft.azure.management.monitor.implementation.DiagnosticSettingsResourceInner?alt=com.microsoft.azure.management.monitor.implementation.DiagnosticSettingsResourceInner&text=DiagnosticSettingsResourceInner" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="ErrorResponseException?alt=ErrorResponseException&text=ErrorResponseException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  returns:
    description: <p>the DiagnosticSettingsResourceInner object if successful. </p>
    type: <xref href="com.microsoft.azure.management.monitor.implementation.DiagnosticSettingsResourceInner?alt=com.microsoft.azure.management.monitor.implementation.DiagnosticSettingsResourceInner&text=DiagnosticSettingsResourceInner" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Creates or updates diagnostic settings for the specified resource.</p>

    <p></p>
  syntax: public DiagnosticSettingsResourceInner createOrUpdate(String resourceUri, String name, DiagnosticSettingsResourceInner parameters)
  uid: com.microsoft.azure.management.monitor.implementation.DiagnosticSettingsInner.createOrUpdate(String,String,DiagnosticSettingsResourceInner)
- fullName: com.microsoft.azure.management.monitor.implementation.DiagnosticSettingsInner.createOrUpdateAsync(String resourceUri, String name, DiagnosticSettingsResourceInner parameters)
  name: createOrUpdateAsync(String resourceUri, String name, DiagnosticSettingsResourceInner parameters)
  nameWithType: DiagnosticSettingsInner.createOrUpdateAsync(String resourceUri, String name, DiagnosticSettingsResourceInner parameters)
  parameters:
  - description: <p>The identifier of the resource. </p>
    name: resourceUri
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the diagnostic setting. </p>
    name: name
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>Parameters supplied to the operation. </p>
    name: parameters
    type: <xref href="com.microsoft.azure.management.monitor.implementation.DiagnosticSettingsResourceInner?alt=com.microsoft.azure.management.monitor.implementation.DiagnosticSettingsResourceInner&text=DiagnosticSettingsResourceInner" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the DiagnosticSettingsResourceInner object </p>
    type: Observable&lt;<xref href="com.microsoft.azure.management.monitor.implementation.DiagnosticSettingsResourceInner?alt=com.microsoft.azure.management.monitor.implementation.DiagnosticSettingsResourceInner&text=DiagnosticSettingsResourceInner" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Creates or updates diagnostic settings for the specified resource.</p>

    <p></p>
  syntax: public Observable<DiagnosticSettingsResourceInner> createOrUpdateAsync(String resourceUri, String name, DiagnosticSettingsResourceInner parameters)
  uid: com.microsoft.azure.management.monitor.implementation.DiagnosticSettingsInner.createOrUpdateAsync(String,String,DiagnosticSettingsResourceInner)
- fullName: com.microsoft.azure.management.monitor.implementation.DiagnosticSettingsInner.createOrUpdateAsync(String resourceUri, String name, DiagnosticSettingsResourceInner parameters, final ServiceCallback<DiagnosticSettingsResourceInner> serviceCallback)
  name: createOrUpdateAsync(String resourceUri, String name, DiagnosticSettingsResourceInner parameters, final ServiceCallback<DiagnosticSettingsResourceInner> serviceCallback)
  nameWithType: DiagnosticSettingsInner.createOrUpdateAsync(String resourceUri, String name, DiagnosticSettingsResourceInner parameters, final ServiceCallback<DiagnosticSettingsResourceInner> serviceCallback)
  parameters:
  - description: <p>The identifier of the resource. </p>
    name: resourceUri
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the diagnostic setting. </p>
    name: name
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>Parameters supplied to the operation. </p>
    name: parameters
    type: <xref href="com.microsoft.azure.management.monitor.implementation.DiagnosticSettingsResourceInner?alt=com.microsoft.azure.management.monitor.implementation.DiagnosticSettingsResourceInner&text=DiagnosticSettingsResourceInner" data-throw-if-not-resolved="False"/>
  - description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    name: serviceCallback
    type: final ServiceCallback&lt;<xref href="com.microsoft.azure.management.monitor.implementation.DiagnosticSettingsResourceInner?alt=com.microsoft.azure.management.monitor.implementation.DiagnosticSettingsResourceInner&text=DiagnosticSettingsResourceInner" data-throw-if-not-resolved="False"/>&gt;
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
    type: ServiceFuture&lt;<xref href="com.microsoft.azure.management.monitor.implementation.DiagnosticSettingsResourceInner?alt=com.microsoft.azure.management.monitor.implementation.DiagnosticSettingsResourceInner&text=DiagnosticSettingsResourceInner" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Creates or updates diagnostic settings for the specified resource.</p>

    <p></p>
  syntax: public ServiceFuture<DiagnosticSettingsResourceInner> createOrUpdateAsync(String resourceUri, String name, DiagnosticSettingsResourceInner parameters, final ServiceCallback<DiagnosticSettingsResourceInner> serviceCallback)
  uid: com.microsoft.azure.management.monitor.implementation.DiagnosticSettingsInner.createOrUpdateAsync(String,String,DiagnosticSettingsResourceInner,final ServiceCallback<DiagnosticSettingsResourceInner>)
- fullName: com.microsoft.azure.management.monitor.implementation.DiagnosticSettingsInner.createOrUpdateWithServiceResponseAsync(String resourceUri, String name, DiagnosticSettingsResourceInner parameters)
  name: createOrUpdateWithServiceResponseAsync(String resourceUri, String name, DiagnosticSettingsResourceInner parameters)
  nameWithType: DiagnosticSettingsInner.createOrUpdateWithServiceResponseAsync(String resourceUri, String name, DiagnosticSettingsResourceInner parameters)
  parameters:
  - description: <p>The identifier of the resource. </p>
    name: resourceUri
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the diagnostic setting. </p>
    name: name
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>Parameters supplied to the operation. </p>
    name: parameters
    type: <xref href="com.microsoft.azure.management.monitor.implementation.DiagnosticSettingsResourceInner?alt=com.microsoft.azure.management.monitor.implementation.DiagnosticSettingsResourceInner&text=DiagnosticSettingsResourceInner" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the DiagnosticSettingsResourceInner object </p>
    type: Observable&lt;ServiceResponse&lt;<xref href="com.microsoft.azure.management.monitor.implementation.DiagnosticSettingsResourceInner?alt=com.microsoft.azure.management.monitor.implementation.DiagnosticSettingsResourceInner&text=DiagnosticSettingsResourceInner" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Creates or updates diagnostic settings for the specified resource.</p>

    <p></p>
  syntax: public Observable<ServiceResponse<DiagnosticSettingsResourceInner>> createOrUpdateWithServiceResponseAsync(String resourceUri, String name, DiagnosticSettingsResourceInner parameters)
  uid: com.microsoft.azure.management.monitor.implementation.DiagnosticSettingsInner.createOrUpdateWithServiceResponseAsync(String,String,DiagnosticSettingsResourceInner)
- fullName: com.microsoft.azure.management.monitor.implementation.DiagnosticSettingsInner.delete(String resourceUri, String name)
  name: delete(String resourceUri, String name)
  nameWithType: DiagnosticSettingsInner.delete(String resourceUri, String name)
  parameters:
  - description: <p>The identifier of the resource. </p>
    name: resourceUri
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the diagnostic setting. </p>
    name: name
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="ErrorResponseException?alt=ErrorResponseException&text=ErrorResponseException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  summary: >-
    <p>Deletes existing diagnostic settings for the specified resource.</p>

    <p></p>
  syntax: public void delete(String resourceUri, String name)
  uid: com.microsoft.azure.management.monitor.implementation.DiagnosticSettingsInner.delete(String,String)
- fullName: com.microsoft.azure.management.monitor.implementation.DiagnosticSettingsInner.deleteAsync(String resourceUri, String name)
  name: deleteAsync(String resourceUri, String name)
  nameWithType: DiagnosticSettingsInner.deleteAsync(String resourceUri, String name)
  overridden: com.microsoft.azure.management.resources.fluentcore.collection.InnerSupportsDelete.deleteAsync(String,String)
  parameters:
  - description: <p>The identifier of the resource. </p>
    name: resourceUri
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the diagnostic setting. </p>
    name: name
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceResponse"></xref> object if successful. </p>
    type: <xref href="Observable%3CVoid%3E?alt=Observable%3CVoid%3E&text=Observable%3CVoid%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Deletes existing diagnostic settings for the specified resource.</p>

    <p></p>
  syntax: public Observable<Void> deleteAsync(String resourceUri, String name)
  uid: com.microsoft.azure.management.monitor.implementation.DiagnosticSettingsInner.deleteAsync(String,String)
- fullName: com.microsoft.azure.management.monitor.implementation.DiagnosticSettingsInner.deleteAsync(String resourceUri, String name, final ServiceCallback<Void> serviceCallback)
  name: deleteAsync(String resourceUri, String name, final ServiceCallback<Void> serviceCallback)
  nameWithType: DiagnosticSettingsInner.deleteAsync(String resourceUri, String name, final ServiceCallback<Void> serviceCallback)
  parameters:
  - description: <p>The identifier of the resource. </p>
    name: resourceUri
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the diagnostic setting. </p>
    name: name
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    name: serviceCallback
    type: <xref href="final+ServiceCallback%3CVoid%3E?alt=final+ServiceCallback%3CVoid%3E&text=final+ServiceCallback%3CVoid%3E" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
    type: <xref href="ServiceFuture%3CVoid%3E?alt=ServiceFuture%3CVoid%3E&text=ServiceFuture%3CVoid%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Deletes existing diagnostic settings for the specified resource.</p>

    <p></p>
  syntax: public ServiceFuture<Void> deleteAsync(String resourceUri, String name, final ServiceCallback<Void> serviceCallback)
  uid: com.microsoft.azure.management.monitor.implementation.DiagnosticSettingsInner.deleteAsync(String,String,final ServiceCallback<Void>)
- fullName: com.microsoft.azure.management.monitor.implementation.DiagnosticSettingsInner.deleteWithServiceResponseAsync(String resourceUri, String name)
  name: deleteWithServiceResponseAsync(String resourceUri, String name)
  nameWithType: DiagnosticSettingsInner.deleteWithServiceResponseAsync(String resourceUri, String name)
  parameters:
  - description: <p>The identifier of the resource. </p>
    name: resourceUri
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the diagnostic setting. </p>
    name: name
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceResponse"></xref> object if successful. </p>
    type: <xref href="Observable%3CServiceResponse%3CVoid%3E%3E?alt=Observable%3CServiceResponse%3CVoid%3E%3E&text=Observable%3CServiceResponse%3CVoid%3E%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Deletes existing diagnostic settings for the specified resource.</p>

    <p></p>
  syntax: public Observable<ServiceResponse<Void>> deleteWithServiceResponseAsync(String resourceUri, String name)
  uid: com.microsoft.azure.management.monitor.implementation.DiagnosticSettingsInner.deleteWithServiceResponseAsync(String,String)
- fullName: com.microsoft.azure.management.monitor.implementation.DiagnosticSettingsInner.get(String resourceUri, String name)
  name: get(String resourceUri, String name)
  nameWithType: DiagnosticSettingsInner.get(String resourceUri, String name)
  parameters:
  - description: <p>The identifier of the resource. </p>
    name: resourceUri
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the diagnostic setting. </p>
    name: name
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="ErrorResponseException?alt=ErrorResponseException&text=ErrorResponseException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  returns:
    description: <p>the DiagnosticSettingsResourceInner object if successful. </p>
    type: <xref href="com.microsoft.azure.management.monitor.implementation.DiagnosticSettingsResourceInner?alt=com.microsoft.azure.management.monitor.implementation.DiagnosticSettingsResourceInner&text=DiagnosticSettingsResourceInner" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the active diagnostic settings for the specified resource.</p>

    <p></p>
  syntax: public DiagnosticSettingsResourceInner get(String resourceUri, String name)
  uid: com.microsoft.azure.management.monitor.implementation.DiagnosticSettingsInner.get(String,String)
- fullName: com.microsoft.azure.management.monitor.implementation.DiagnosticSettingsInner.getAsync(String resourceUri, String name)
  name: getAsync(String resourceUri, String name)
  nameWithType: DiagnosticSettingsInner.getAsync(String resourceUri, String name)
  parameters:
  - description: <p>The identifier of the resource. </p>
    name: resourceUri
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the diagnostic setting. </p>
    name: name
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the DiagnosticSettingsResourceInner object </p>
    type: Observable&lt;<xref href="com.microsoft.azure.management.monitor.implementation.DiagnosticSettingsResourceInner?alt=com.microsoft.azure.management.monitor.implementation.DiagnosticSettingsResourceInner&text=DiagnosticSettingsResourceInner" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Gets the active diagnostic settings for the specified resource.</p>

    <p></p>
  syntax: public Observable<DiagnosticSettingsResourceInner> getAsync(String resourceUri, String name)
  uid: com.microsoft.azure.management.monitor.implementation.DiagnosticSettingsInner.getAsync(String,String)
- fullName: com.microsoft.azure.management.monitor.implementation.DiagnosticSettingsInner.getAsync(String resourceUri, String name, final ServiceCallback<DiagnosticSettingsResourceInner> serviceCallback)
  name: getAsync(String resourceUri, String name, final ServiceCallback<DiagnosticSettingsResourceInner> serviceCallback)
  nameWithType: DiagnosticSettingsInner.getAsync(String resourceUri, String name, final ServiceCallback<DiagnosticSettingsResourceInner> serviceCallback)
  parameters:
  - description: <p>The identifier of the resource. </p>
    name: resourceUri
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the diagnostic setting. </p>
    name: name
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    name: serviceCallback
    type: final ServiceCallback&lt;<xref href="com.microsoft.azure.management.monitor.implementation.DiagnosticSettingsResourceInner?alt=com.microsoft.azure.management.monitor.implementation.DiagnosticSettingsResourceInner&text=DiagnosticSettingsResourceInner" data-throw-if-not-resolved="False"/>&gt;
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
    type: ServiceFuture&lt;<xref href="com.microsoft.azure.management.monitor.implementation.DiagnosticSettingsResourceInner?alt=com.microsoft.azure.management.monitor.implementation.DiagnosticSettingsResourceInner&text=DiagnosticSettingsResourceInner" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Gets the active diagnostic settings for the specified resource.</p>

    <p></p>
  syntax: public ServiceFuture<DiagnosticSettingsResourceInner> getAsync(String resourceUri, String name, final ServiceCallback<DiagnosticSettingsResourceInner> serviceCallback)
  uid: com.microsoft.azure.management.monitor.implementation.DiagnosticSettingsInner.getAsync(String,String,final ServiceCallback<DiagnosticSettingsResourceInner>)
- fullName: com.microsoft.azure.management.monitor.implementation.DiagnosticSettingsInner.getWithServiceResponseAsync(String resourceUri, String name)
  name: getWithServiceResponseAsync(String resourceUri, String name)
  nameWithType: DiagnosticSettingsInner.getWithServiceResponseAsync(String resourceUri, String name)
  parameters:
  - description: <p>The identifier of the resource. </p>
    name: resourceUri
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the diagnostic setting. </p>
    name: name
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the DiagnosticSettingsResourceInner object </p>
    type: Observable&lt;ServiceResponse&lt;<xref href="com.microsoft.azure.management.monitor.implementation.DiagnosticSettingsResourceInner?alt=com.microsoft.azure.management.monitor.implementation.DiagnosticSettingsResourceInner&text=DiagnosticSettingsResourceInner" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Gets the active diagnostic settings for the specified resource.</p>

    <p></p>
  syntax: public Observable<ServiceResponse<DiagnosticSettingsResourceInner>> getWithServiceResponseAsync(String resourceUri, String name)
  uid: com.microsoft.azure.management.monitor.implementation.DiagnosticSettingsInner.getWithServiceResponseAsync(String,String)
- fullName: com.microsoft.azure.management.monitor.implementation.DiagnosticSettingsInner.list(String resourceUri)
  name: list(String resourceUri)
  nameWithType: DiagnosticSettingsInner.list(String resourceUri)
  parameters:
  - description: <p>The identifier of the resource. </p>
    name: resourceUri
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="ErrorResponseException?alt=ErrorResponseException&text=ErrorResponseException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  returns:
    description: <p>the DiagnosticSettingsResourceCollectionInner object if successful. </p>
    type: <xref href="com.microsoft.azure.management.monitor.implementation.DiagnosticSettingsResourceCollectionInner?alt=com.microsoft.azure.management.monitor.implementation.DiagnosticSettingsResourceCollectionInner&text=DiagnosticSettingsResourceCollectionInner" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the active diagnostic settings list for the specified resource.</p>

    <p></p>
  syntax: public DiagnosticSettingsResourceCollectionInner list(String resourceUri)
  uid: com.microsoft.azure.management.monitor.implementation.DiagnosticSettingsInner.list(String)
- fullName: com.microsoft.azure.management.monitor.implementation.DiagnosticSettingsInner.listAsync(String resourceUri)
  name: listAsync(String resourceUri)
  nameWithType: DiagnosticSettingsInner.listAsync(String resourceUri)
  parameters:
  - description: <p>The identifier of the resource. </p>
    name: resourceUri
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the DiagnosticSettingsResourceCollectionInner object </p>
    type: Observable&lt;<xref href="com.microsoft.azure.management.monitor.implementation.DiagnosticSettingsResourceCollectionInner?alt=com.microsoft.azure.management.monitor.implementation.DiagnosticSettingsResourceCollectionInner&text=DiagnosticSettingsResourceCollectionInner" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Gets the active diagnostic settings list for the specified resource.</p>

    <p></p>
  syntax: public Observable<DiagnosticSettingsResourceCollectionInner> listAsync(String resourceUri)
  uid: com.microsoft.azure.management.monitor.implementation.DiagnosticSettingsInner.listAsync(String)
- fullName: com.microsoft.azure.management.monitor.implementation.DiagnosticSettingsInner.listAsync(String resourceUri, final ServiceCallback<DiagnosticSettingsResourceCollectionInner> serviceCallback)
  name: listAsync(String resourceUri, final ServiceCallback<DiagnosticSettingsResourceCollectionInner> serviceCallback)
  nameWithType: DiagnosticSettingsInner.listAsync(String resourceUri, final ServiceCallback<DiagnosticSettingsResourceCollectionInner> serviceCallback)
  parameters:
  - description: <p>The identifier of the resource. </p>
    name: resourceUri
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    name: serviceCallback
    type: final ServiceCallback&lt;<xref href="com.microsoft.azure.management.monitor.implementation.DiagnosticSettingsResourceCollectionInner?alt=com.microsoft.azure.management.monitor.implementation.DiagnosticSettingsResourceCollectionInner&text=DiagnosticSettingsResourceCollectionInner" data-throw-if-not-resolved="False"/>&gt;
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
    type: ServiceFuture&lt;<xref href="com.microsoft.azure.management.monitor.implementation.DiagnosticSettingsResourceCollectionInner?alt=com.microsoft.azure.management.monitor.implementation.DiagnosticSettingsResourceCollectionInner&text=DiagnosticSettingsResourceCollectionInner" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Gets the active diagnostic settings list for the specified resource.</p>

    <p></p>
  syntax: public ServiceFuture<DiagnosticSettingsResourceCollectionInner> listAsync(String resourceUri, final ServiceCallback<DiagnosticSettingsResourceCollectionInner> serviceCallback)
  uid: com.microsoft.azure.management.monitor.implementation.DiagnosticSettingsInner.listAsync(String,final ServiceCallback<DiagnosticSettingsResourceCollectionInner>)
- fullName: com.microsoft.azure.management.monitor.implementation.DiagnosticSettingsInner.listWithServiceResponseAsync(String resourceUri)
  name: listWithServiceResponseAsync(String resourceUri)
  nameWithType: DiagnosticSettingsInner.listWithServiceResponseAsync(String resourceUri)
  parameters:
  - description: <p>The identifier of the resource. </p>
    name: resourceUri
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the DiagnosticSettingsResourceCollectionInner object </p>
    type: Observable&lt;ServiceResponse&lt;<xref href="com.microsoft.azure.management.monitor.implementation.DiagnosticSettingsResourceCollectionInner?alt=com.microsoft.azure.management.monitor.implementation.DiagnosticSettingsResourceCollectionInner&text=DiagnosticSettingsResourceCollectionInner" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Gets the active diagnostic settings list for the specified resource.</p>

    <p></p>
  syntax: public Observable<ServiceResponse<DiagnosticSettingsResourceCollectionInner>> listWithServiceResponseAsync(String resourceUri)
  uid: com.microsoft.azure.management.monitor.implementation.DiagnosticSettingsInner.listWithServiceResponseAsync(String)
nameWithType: DiagnosticSettingsInner
syntax: public class DiagnosticSettingsInner implements InnerSupportsDelete<Void>
type: class
uid: com.microsoft.azure.management.monitor.implementation.DiagnosticSettingsInner
fullName: com.microsoft.azure.management.monitor.implementation.DiagnosticSettingsInner
name: DiagnosticSettingsInner
package: com.microsoft.azure.management.monitor.implementation
summary: <p>An instance of this class provides access to all the operations defined in DiagnosticSettings. </p>
metadata: {}
