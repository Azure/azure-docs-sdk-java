### YamlMime:JavaType
constructors:
- fullName: com.microsoft.azure.keyvault.extensions.KeyVaultKeyResolver.KeyVaultKeyResolver(KeyVaultClient client)
  name: KeyVaultKeyResolver(KeyVaultClient client)
  nameWithType: KeyVaultKeyResolver.KeyVaultKeyResolver(KeyVaultClient client)
  parameters:
  - description: <p>the key vault client </p>
    name: client
    type: <xref href="com.microsoft.azure.keyvault.KeyVaultClient?alt=com.microsoft.azure.keyvault.KeyVaultClient&text=KeyVaultClient" data-throw-if-not-resolved="False"/>
  summary: <p>Constructor. </p>
  syntax: public KeyVaultKeyResolver(KeyVaultClient client)
  uid: com.microsoft.azure.keyvault.extensions.KeyVaultKeyResolver.KeyVaultKeyResolver(KeyVaultClient)
- fullName: com.microsoft.azure.keyvault.extensions.KeyVaultKeyResolver.KeyVaultKeyResolver(KeyVaultClient client, Provider provider)
  name: KeyVaultKeyResolver(KeyVaultClient client, Provider provider)
  nameWithType: KeyVaultKeyResolver.KeyVaultKeyResolver(KeyVaultClient client, Provider provider)
  parameters:
  - description: <p>the key vault client </p>
    name: client
    type: <xref href="com.microsoft.azure.keyvault.KeyVaultClient?alt=com.microsoft.azure.keyvault.KeyVaultClient&text=KeyVaultClient" data-throw-if-not-resolved="False"/>
  - description: <p>the java security provider </p>
    name: provider
    type: <xref href="Provider?alt=Provider&text=Provider" data-throw-if-not-resolved="False"/>
  summary: <p>Constructor. </p>
  syntax: public KeyVaultKeyResolver(KeyVaultClient client, Provider provider)
  uid: com.microsoft.azure.keyvault.extensions.KeyVaultKeyResolver.KeyVaultKeyResolver(KeyVaultClient,Provider)
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
- <xref href="com.microsoft.azure.keyvault.core.IKeyResolver?alt=com.microsoft.azure.keyvault.core.IKeyResolver&text=IKeyResolver" data-throw-if-not-resolved="False"/>
methods:
- fullName: com.microsoft.azure.keyvault.extensions.KeyVaultKeyResolver.resolveKeyAsync(String kid)
  name: resolveKeyAsync(String kid)
  nameWithType: KeyVaultKeyResolver.resolveKeyAsync(String kid)
  overridden: com.microsoft.azure.keyvault.core.IKeyResolver.resolveKeyAsync(String)
  parameters:
  - description: <p>The key identifier to resolve. </p>
    name: kid
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>A ListenableFuture containing the resolved IKey </p>
    type: ListenableFuture&lt;<xref href="com.microsoft.azure.keyvault.core.IKey?alt=com.microsoft.azure.keyvault.core.IKey&text=IKey" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Retrieves an IKey implementation for the specified key identifier. Implementations should check the format of the kid to ensure that it is recognized. Null, rather than an exception, should be returned for unrecognized key identifiers to enable chaining of key resolvers.</p>

    <p></p>
  syntax: public ListenableFuture<IKey> resolveKeyAsync(String kid)
  uid: com.microsoft.azure.keyvault.extensions.KeyVaultKeyResolver.resolveKeyAsync(String)
nameWithType: KeyVaultKeyResolver
syntax: public class KeyVaultKeyResolver implements IKeyResolver
type: class
uid: com.microsoft.azure.keyvault.extensions.KeyVaultKeyResolver
fullName: com.microsoft.azure.keyvault.extensions.KeyVaultKeyResolver
name: KeyVaultKeyResolver
package: com.microsoft.azure.keyvault.extensions
summary: <p>The key resolver class that handles resolving key id to type <xref uid="" data-throw-if-not-resolved="false" data-raw-source="IKey"></xref> to be used for cryptography operations. </p>
metadata: {}
