### YamlMime:JavaType
constructors:
- fullName: com.microsoft.azure.sdk.iot.device.auth.IotHubSasTokenHardwareAuthenticationProvider.IotHubSasTokenHardwareAuthenticationProvider(String hostname, String gatewayHostname, String deviceId, String moduleId, SecurityProvider securityProvider)
  name: IotHubSasTokenHardwareAuthenticationProvider(String hostname, String gatewayHostname, String deviceId, String moduleId, SecurityProvider securityProvider)
  nameWithType: IotHubSasTokenHardwareAuthenticationProvider.IotHubSasTokenHardwareAuthenticationProvider(String hostname, String gatewayHostname, String deviceId, String moduleId, SecurityProvider securityProvider)
  parameters:
  - description: <p>The host name of the hub to authenticate against </p>
    name: hostname
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The gateway hostname to use, or null if connecting to an IotHub </p>
    name: gatewayHostname
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The unique id of the device to authenticate </p>
    name: deviceId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the module id. May be null if not using a module </p>
    name: moduleId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the security provider to use for authentication </p>
    name: securityProvider
    type: <xref href="com.microsoft.azure.sdk.iot.provisioning.security.SecurityProvider?alt=com.microsoft.azure.sdk.iot.provisioning.security.SecurityProvider&text=SecurityProvider" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
    description: <p>if the provided securityProvider throws while retrieving a sas token or ssl context instance </p>
  summary: >-
    <p>Creates a Sas Token based authentication object that uses the provided security provider to produce sas tokens.</p>

    <p></p>
  syntax: public IotHubSasTokenHardwareAuthenticationProvider(String hostname, String gatewayHostname, String deviceId, String moduleId, SecurityProvider securityProvider)
  uid: com.microsoft.azure.sdk.iot.device.auth.IotHubSasTokenHardwareAuthenticationProvider.IotHubSasTokenHardwareAuthenticationProvider(String,String,String,String,SecurityProvider)
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
- <xref href="com.microsoft.azure.sdk.iot.device.auth.IotHubAuthenticationProvider" data-throw-if-not-resolved="False"/>
- <xref href="com.microsoft.azure.sdk.iot.device.auth.IotHubSasTokenAuthenticationProvider?alt=com.microsoft.azure.sdk.iot.device.auth.IotHubSasTokenAuthenticationProvider&text=IotHubSasTokenAuthenticationProvider" data-throw-if-not-resolved="False"/>
inheritedMembers:
- com.microsoft.azure.sdk.iot.device.auth.IotHubAuthenticationProvider.deviceId
- com.microsoft.azure.sdk.iot.device.auth.IotHubAuthenticationProvider.gatewayHostname
- com.microsoft.azure.sdk.iot.device.auth.IotHubAuthenticationProvider.getDeviceId()
- com.microsoft.azure.sdk.iot.device.auth.IotHubAuthenticationProvider.getGatewayHostname()
- com.microsoft.azure.sdk.iot.device.auth.IotHubAuthenticationProvider.getHostname()
- com.microsoft.azure.sdk.iot.device.auth.IotHubSasTokenAuthenticationProvider.getMillisecondsBeforeProactiveRenewal()
- com.microsoft.azure.sdk.iot.device.auth.IotHubAuthenticationProvider.getModuleId()
- com.microsoft.azure.sdk.iot.device.auth.IotHubAuthenticationProvider.getSSLContext()
- com.microsoft.azure.sdk.iot.device.auth.IotHubSasTokenAuthenticationProvider.getTokenValidSecs()
- com.microsoft.azure.sdk.iot.device.auth.IotHubAuthenticationProvider.hostname
- com.microsoft.azure.sdk.iot.device.auth.IotHubAuthenticationProvider.IotHubAuthenticationProvider(String,String,String,String)
- com.microsoft.azure.sdk.iot.device.auth.IotHubAuthenticationProvider.IotHubAuthenticationProvider(String,String,String,String,SSLContext)
- com.microsoft.azure.sdk.iot.device.auth.IotHubSasTokenAuthenticationProvider.IotHubSasTokenAuthenticationProvider(String,String,String,String)
- com.microsoft.azure.sdk.iot.device.auth.IotHubSasTokenAuthenticationProvider.IotHubSasTokenAuthenticationProvider(String,String,String,String,long,int)
- com.microsoft.azure.sdk.iot.device.auth.IotHubSasTokenAuthenticationProvider.isSasTokenExpired()
- com.microsoft.azure.sdk.iot.device.auth.IotHubAuthenticationProvider.moduleId
- com.microsoft.azure.sdk.iot.device.auth.IotHubSasTokenAuthenticationProvider.sasToken
- com.microsoft.azure.sdk.iot.device.auth.IotHubSasTokenAuthenticationProvider.setTokenValidSecs(long)
- com.microsoft.azure.sdk.iot.device.auth.IotHubSasTokenAuthenticationProvider.shouldRefreshToken(boolean)
- com.microsoft.azure.sdk.iot.device.auth.IotHubSasTokenAuthenticationProvider.tokenValidSecs
methods:
- fullName: com.microsoft.azure.sdk.iot.device.auth.IotHubSasTokenHardwareAuthenticationProvider.canRefreshToken()
  name: canRefreshToken()
  nameWithType: IotHubSasTokenHardwareAuthenticationProvider.canRefreshToken()
  returns:
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False"/>
  syntax: public boolean canRefreshToken()
  uid: com.microsoft.azure.sdk.iot.device.auth.IotHubSasTokenHardwareAuthenticationProvider.canRefreshToken()
- fullName: com.microsoft.azure.sdk.iot.device.auth.IotHubSasTokenHardwareAuthenticationProvider.getSasToken()
  name: getSasToken()
  nameWithType: IotHubSasTokenHardwareAuthenticationProvider.getSasToken()
  exceptions:
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
    description: <p>if generating the sas token from the TPM fails </p>
  returns:
    description: <p>The value of SasToken </p>
    type: <xref href="char+%5B%5D?alt=char+%5B%5D&text=char+%5B%5D" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Getter for SasToken. If the saved token has expired, this method shall renew it if possible</p>

    <p></p>
  syntax: public char [] getSasToken()
  uid: com.microsoft.azure.sdk.iot.device.auth.IotHubSasTokenHardwareAuthenticationProvider.getSasToken()
- fullName: com.microsoft.azure.sdk.iot.device.auth.IotHubSasTokenHardwareAuthenticationProvider.isAuthenticationProviderRenewalNecessary()
  name: isAuthenticationProviderRenewalNecessary()
  nameWithType: IotHubSasTokenHardwareAuthenticationProvider.isAuthenticationProviderRenewalNecessary()
  returns:
    description: <p>always returns false as the hardware authentication mechanism will never need to be updated with a new key or token </p>
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False"/>
  syntax: public boolean isAuthenticationProviderRenewalNecessary()
  uid: com.microsoft.azure.sdk.iot.device.auth.IotHubSasTokenHardwareAuthenticationProvider.isAuthenticationProviderRenewalNecessary()
nameWithType: IotHubSasTokenHardwareAuthenticationProvider
syntax: public class IotHubSasTokenHardwareAuthenticationProvider extends IotHubSasTokenAuthenticationProvider
type: class
uid: com.microsoft.azure.sdk.iot.device.auth.IotHubSasTokenHardwareAuthenticationProvider
fullName: com.microsoft.azure.sdk.iot.device.auth.IotHubSasTokenHardwareAuthenticationProvider
name: IotHubSasTokenHardwareAuthenticationProvider
package: com.microsoft.azure.sdk.iot.device.auth
metadata: {}
