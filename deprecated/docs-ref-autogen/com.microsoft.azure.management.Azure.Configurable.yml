### YamlMime:JavaType
inheritedMembers:
- com.microsoft.azure.management.resources.fluentcore.arm.AzureConfigurable.withCallbackExecutor(Executor)
- com.microsoft.azure.management.resources.fluentcore.arm.AzureConfigurable.withConnectionTimeout(long,TimeUnit)
- com.microsoft.azure.management.resources.fluentcore.arm.AzureConfigurable.withInterceptor(Interceptor)
- com.microsoft.azure.management.resources.fluentcore.arm.AzureConfigurable.withLogLevel(LogLevel)
- com.microsoft.azure.management.resources.fluentcore.arm.AzureConfigurable.withMaxIdleConnections(int)
- com.microsoft.azure.management.resources.fluentcore.arm.AzureConfigurable.withProxy(Proxy)
- com.microsoft.azure.management.resources.fluentcore.arm.AzureConfigurable.withProxyAuthenticator(Authenticator)
- com.microsoft.azure.management.resources.fluentcore.arm.AzureConfigurable.withReadTimeout(long,TimeUnit)
- com.microsoft.azure.management.resources.fluentcore.arm.AzureConfigurable.withUserAgent(String)
methods:
- fullName: com.microsoft.azure.management.Azure.Configurable.authenticate(AzureTokenCredentials credentials)
  name: authenticate(AzureTokenCredentials credentials)
  nameWithType: Azure.Configurable.authenticate(AzureTokenCredentials credentials)
  parameters:
  - description: <p>The credentials to authenticate API access with </p>
    name: credentials
    type: <xref href="AzureTokenCredentials?alt=AzureTokenCredentials&text=AzureTokenCredentials" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the authenticated Azure client </p>
    type: <xref href="com.microsoft.azure.management.Azure.Authenticated?alt=com.microsoft.azure.management.Azure.Authenticated&text=Azure.Authenticated" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Authenticates API access based on the provided credentials.</p>

    <p></p>
  syntax: public Authenticated authenticate(AzureTokenCredentials credentials)
  uid: com.microsoft.azure.management.Azure.Configurable.authenticate(AzureTokenCredentials)
- fullName: com.microsoft.azure.management.Azure.Configurable.authenticate(File credentialsFile)
  name: authenticate(File credentialsFile)
  nameWithType: Azure.Configurable.authenticate(File credentialsFile)
  parameters:
  - description: <p>the file containing the credentials in the standard Java properties file format following the same schema as <xref uid="com.microsoft.azure.management.Azure.authenticate(File)" data-throw-if-not-resolved="false" data-raw-source="Azure#authenticate(File)"></xref>.</p>
    name: credentialsFile
    type: <xref href="File?alt=File&text=File" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
    description: <p>exceptions thrown from file access </p>
  returns:
    description: <p>Authenticated Azure client </p>
    type: <xref href="com.microsoft.azure.management.Azure.Authenticated?alt=com.microsoft.azure.management.Azure.Authenticated&text=Azure.Authenticated" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Authenticates API access using a properties file containing the required credentials.</p>

    <p></p>
  syntax: public Authenticated authenticate(File credentialsFile)
  uid: com.microsoft.azure.management.Azure.Configurable.authenticate(File)
nameWithType: Azure.Configurable
syntax: public interface Configurable extends AzureConfigurable<Configurable>
type: interface
uid: com.microsoft.azure.management.Azure.Configurable
fullName: com.microsoft.azure.management.Azure.Configurable
name: Azure.Configurable
package: com.microsoft.azure.management
summary: <p>The interface allowing configurations to be made on the client. </p>
metadata: {}
