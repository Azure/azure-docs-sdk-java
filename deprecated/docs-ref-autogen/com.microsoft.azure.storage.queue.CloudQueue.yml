### YamlMime:JavaType
constructors:
- fullName: com.microsoft.azure.storage.queue.CloudQueue.CloudQueue(final StorageUri uri)
  name: CloudQueue(final StorageUri uri)
  nameWithType: CloudQueue.CloudQueue(final StorageUri uri)
  parameters:
  - description: <p>A <code>StorageUri</code> object that represents the absolute URI of the queue.</p>
    name: uri
    type: final <xref href="com.microsoft.azure.storage.StorageUri?alt=com.microsoft.azure.storage.StorageUri&text=StorageUri" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  summary: >-
    <p>Creates an instance of the  class using the specified queue . The queue  must include a SAS token.</p>

    <p></p>
  syntax: public CloudQueue(final StorageUri uri)
  uid: com.microsoft.azure.storage.queue.CloudQueue.CloudQueue(final StorageUri)
- fullName: com.microsoft.azure.storage.queue.CloudQueue.CloudQueue(final StorageUri uri, final StorageCredentials credentials)
  name: CloudQueue(final StorageUri uri, final StorageCredentials credentials)
  nameWithType: CloudQueue.CloudQueue(final StorageUri uri, final StorageCredentials credentials)
  parameters:
  - description: <p>A <code>StorageUri</code> object that represents the absolute URI of the queue. </p>
    name: uri
    type: final <xref href="com.microsoft.azure.storage.StorageUri?alt=com.microsoft.azure.storage.StorageUri&text=StorageUri" data-throw-if-not-resolved="False"/>
  - description: <p>A <xref uid="com.microsoft.azure.storage.StorageCredentials" data-throw-if-not-resolved="false" data-raw-source="StorageCredentials"></xref> object used to authenticate access.</p>
    name: credentials
    type: final <xref href="com.microsoft.azure.storage.StorageCredentials?alt=com.microsoft.azure.storage.StorageCredentials&text=StorageCredentials" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  summary: >-
    <p>Creates an instance of the  class using the specified queue  and credentials. If the  contains a SAS token, the credentials must be .</p>

    <p></p>
  syntax: public CloudQueue(final StorageUri uri, final StorageCredentials credentials)
  uid: com.microsoft.azure.storage.queue.CloudQueue.CloudQueue(final StorageUri,final StorageCredentials)
- fullName: com.microsoft.azure.storage.queue.CloudQueue.CloudQueue(final String queueName, final CloudQueueClient client)
  name: CloudQueue(final String queueName, final CloudQueueClient client)
  nameWithType: CloudQueue.CloudQueue(final String queueName, final CloudQueueClient client)
  parameters:
  - description: <p>The name of the queue, which must adhere to queue naming rules. The queue name should not include any path separator characters (/). Queue names must be lowercase, between 3-63 characters long and must start with a letter or number. Queue names may contain only letters, numbers, and the dash (-) character. </p>
    name: queueName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>A <xref uid="com.microsoft.azure.storage.queue.CloudQueueClient" data-throw-if-not-resolved="false" data-raw-source="CloudQueueClient"></xref> object that represents the associated service client, and that specifies the endpoint for the Queue service. </p>
    name: client
    type: final <xref href="com.microsoft.azure.storage.queue.CloudQueueClient?alt=com.microsoft.azure.storage.queue.CloudQueueClient&text=CloudQueueClient" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="URISyntaxException?alt=URISyntaxException&text=URISyntaxException" data-throw-if-not-resolved="False"/>
    description: <p>If the resource URI constructed based on the queueName is invalid. </p>
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  summary: >-
    <p>Creates an instance of the  class using the specified name and client.</p>

    <p></p>
  syntax: protected CloudQueue(final String queueName, final CloudQueueClient client)
  uid: com.microsoft.azure.storage.queue.CloudQueue.CloudQueue(final String,final CloudQueueClient)
- fullName: com.microsoft.azure.storage.queue.CloudQueue.CloudQueue(final URI uri)
  name: CloudQueue(final URI uri)
  nameWithType: CloudQueue.CloudQueue(final URI uri)
  parameters:
  - description: <p>A <code>java.net.URI</code> object that represents the absolute URI of the queue.</p>
    name: uri
    type: <xref href="final+URI?alt=final+URI&text=final+URI" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  summary: >-
    <p>Creates an instance of the  class using the specified queue URI. The queue  must include a SAS token.</p>

    <p></p>
  syntax: public CloudQueue(final URI uri)
  uid: com.microsoft.azure.storage.queue.CloudQueue.CloudQueue(final URI)
- fullName: com.microsoft.azure.storage.queue.CloudQueue.CloudQueue(final URI uri, final StorageCredentials credentials)
  name: CloudQueue(final URI uri, final StorageCredentials credentials)
  nameWithType: CloudQueue.CloudQueue(final URI uri, final StorageCredentials credentials)
  parameters:
  - description: <p>A <code>java.net.URI</code> object that represents the absolute URI of the queue. </p>
    name: uri
    type: <xref href="final+URI?alt=final+URI&text=final+URI" data-throw-if-not-resolved="False"/>
  - description: <p>A <xref uid="com.microsoft.azure.storage.StorageCredentials" data-throw-if-not-resolved="false" data-raw-source="StorageCredentials"></xref> object used to authenticate access.</p>
    name: credentials
    type: final <xref href="com.microsoft.azure.storage.StorageCredentials?alt=com.microsoft.azure.storage.StorageCredentials&text=StorageCredentials" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  summary: >-
    <p>Creates an instance of the  class using the specified queue  and credentials. If the  contains a SAS token, the credentials must be .</p>

    <p></p>
  syntax: public CloudQueue(final URI uri, final StorageCredentials credentials)
  uid: com.microsoft.azure.storage.queue.CloudQueue.CloudQueue(final URI,final StorageCredentials)
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
methods:
- fullName: com.microsoft.azure.storage.queue.CloudQueue.addMessage(final CloudQueueMessage message)
  name: addMessage(final CloudQueueMessage message)
  nameWithType: CloudQueue.addMessage(final CloudQueueMessage message)
  parameters:
  - description: <p>A <xref uid="com.microsoft.azure.storage.queue.CloudQueueMessage" data-throw-if-not-resolved="false" data-raw-source="CloudQueueMessage"></xref> object that specifies the message to add. The message object is modified to include the message ID and pop receipt, and can be used in subsequent calls to updateMessage and deleteMessage.</p>
    name: message
    type: final <xref href="com.microsoft.azure.storage.queue.CloudQueueMessage?alt=com.microsoft.azure.storage.queue.CloudQueueMessage&text=CloudQueueMessage" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred during the operation. </p>
  summary: >-
    <p>Adds a message to the back of the queue.</p>

    <p></p>
  syntax: public void addMessage(final CloudQueueMessage message)
  uid: com.microsoft.azure.storage.queue.CloudQueue.addMessage(final CloudQueueMessage)
- fullName: com.microsoft.azure.storage.queue.CloudQueue.addMessage(final CloudQueueMessage message, final int timeToLiveInSeconds, final int initialVisibilityDelayInSeconds, QueueRequestOptions options, OperationContext opContext)
  name: addMessage(final CloudQueueMessage message, final int timeToLiveInSeconds, final int initialVisibilityDelayInSeconds, QueueRequestOptions options, OperationContext opContext)
  nameWithType: CloudQueue.addMessage(final CloudQueueMessage message, final int timeToLiveInSeconds, final int initialVisibilityDelayInSeconds, QueueRequestOptions options, OperationContext opContext)
  parameters:
  - description: <p>A <xref uid="com.microsoft.azure.storage.queue.CloudQueueMessage" data-throw-if-not-resolved="false" data-raw-source="CloudQueueMessage"></xref> object that specifies the message to add. The message object is modified to include the message ID and pop receipt, and can be used in subsequent calls to updateMessage and deleteMessage.</p>
    name: message
    type: final <xref href="com.microsoft.azure.storage.queue.CloudQueueMessage?alt=com.microsoft.azure.storage.queue.CloudQueueMessage&text=CloudQueueMessage" data-throw-if-not-resolved="False"/>
  - description: <p>The maximum time to allow the message to be in the queue. A value of zero will set the time-to-live to the service default value of seven days. A value of negative one will set an infinite time-to-live.</p>
    name: timeToLiveInSeconds
    type: <xref href="final+int?alt=final+int&text=final+int" data-throw-if-not-resolved="False"/>
  - description: <p>The length of time during which the message will be invisible, starting when it is added to the queue, or 0 to make the message visible immediately. This value must be greater than or equal to zero and less than the time-to-live value.</p>
    name: initialVisibilityDelayInSeconds
    type: <xref href="final+int?alt=final+int&text=final+int" data-throw-if-not-resolved="False"/>
  - description: <p>A <xref uid="com.microsoft.azure.storage.queue.QueueRequestOptions" data-throw-if-not-resolved="false" data-raw-source="QueueRequestOptions"></xref> object that specifies any additional options for the request. Specifying <code>null</code> will use the default request options from the associated service client ( <xref uid="com.microsoft.azure.storage.queue.CloudQueueClient" data-throw-if-not-resolved="false" data-raw-source="CloudQueueClient"></xref>).</p>
    name: options
    type: <xref href="com.microsoft.azure.storage.queue.QueueRequestOptions?alt=com.microsoft.azure.storage.queue.QueueRequestOptions&text=QueueRequestOptions" data-throw-if-not-resolved="False"/>
  - description: <p>An <xref uid="com.microsoft.azure.storage.OperationContext" data-throw-if-not-resolved="false" data-raw-source="OperationContext"></xref> object that represents the context for the current operation. This object is used to track requests to the storage service, and to provide additional runtime information about the operation.</p>
    name: opContext
    type: <xref href="com.microsoft.azure.storage.OperationContext?alt=com.microsoft.azure.storage.OperationContext&text=OperationContext" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred during the operation. </p>
  summary: >-
    <p>Adds a message to the back of the queue with the specified options.</p>

    <p></p>
  syntax: public void addMessage(final CloudQueueMessage message, final int timeToLiveInSeconds, final int initialVisibilityDelayInSeconds, QueueRequestOptions options, OperationContext opContext)
  uid: com.microsoft.azure.storage.queue.CloudQueue.addMessage(final CloudQueueMessage,final int,final int,QueueRequestOptions,OperationContext)
- fullName: com.microsoft.azure.storage.queue.CloudQueue.clear()
  name: clear()
  nameWithType: CloudQueue.clear()
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred during the operation. </p>
  summary: >-
    <p>Clears all messages from the queue.</p>

    <p></p>
  syntax: public void clear()
  uid: com.microsoft.azure.storage.queue.CloudQueue.clear()
- fullName: com.microsoft.azure.storage.queue.CloudQueue.clear(QueueRequestOptions options, OperationContext opContext)
  name: clear(QueueRequestOptions options, OperationContext opContext)
  nameWithType: CloudQueue.clear(QueueRequestOptions options, OperationContext opContext)
  parameters:
  - description: <p>A <xref uid="com.microsoft.azure.storage.queue.QueueRequestOptions" data-throw-if-not-resolved="false" data-raw-source="QueueRequestOptions"></xref> object that specifies any additional options for the request. Specifying <code>null</code> will use the default request options from the associated service client ( <xref uid="com.microsoft.azure.storage.queue.CloudQueueClient" data-throw-if-not-resolved="false" data-raw-source="CloudQueueClient"></xref>). </p>
    name: options
    type: <xref href="com.microsoft.azure.storage.queue.QueueRequestOptions?alt=com.microsoft.azure.storage.queue.QueueRequestOptions&text=QueueRequestOptions" data-throw-if-not-resolved="False"/>
  - description: <p>An <xref uid="com.microsoft.azure.storage.OperationContext" data-throw-if-not-resolved="false" data-raw-source="OperationContext"></xref> object that represents the context for the current operation. This object is used to track requests to the storage service, and to provide additional runtime information about the operation.</p>
    name: opContext
    type: <xref href="com.microsoft.azure.storage.OperationContext?alt=com.microsoft.azure.storage.OperationContext&text=OperationContext" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred during the operation. </p>
  summary: >-
    <p>Clears all messages from the queue, using the specified request options and operation context.</p>

    <p></p>
  syntax: public void clear(QueueRequestOptions options, OperationContext opContext)
  uid: com.microsoft.azure.storage.queue.CloudQueue.clear(QueueRequestOptions,OperationContext)
- fullName: com.microsoft.azure.storage.queue.CloudQueue.create()
  name: create()
  nameWithType: CloudQueue.create()
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred during the operation. </p>
  summary: >-
    <p>Creates the queue.</p>

    <p></p>
  syntax: public void create()
  uid: com.microsoft.azure.storage.queue.CloudQueue.create()
- fullName: com.microsoft.azure.storage.queue.CloudQueue.create(QueueRequestOptions options, OperationContext opContext)
  name: create(QueueRequestOptions options, OperationContext opContext)
  nameWithType: CloudQueue.create(QueueRequestOptions options, OperationContext opContext)
  parameters:
  - description: <p>A <xref uid="com.microsoft.azure.storage.queue.QueueRequestOptions" data-throw-if-not-resolved="false" data-raw-source="QueueRequestOptions"></xref> object that specifies any additional options for the request. Specifying <code>null</code> will use the default request options from the associated service client ( <xref uid="com.microsoft.azure.storage.queue.CloudQueueClient" data-throw-if-not-resolved="false" data-raw-source="CloudQueueClient"></xref>). </p>
    name: options
    type: <xref href="com.microsoft.azure.storage.queue.QueueRequestOptions?alt=com.microsoft.azure.storage.queue.QueueRequestOptions&text=QueueRequestOptions" data-throw-if-not-resolved="False"/>
  - description: <p>An <xref uid="com.microsoft.azure.storage.OperationContext" data-throw-if-not-resolved="false" data-raw-source="OperationContext"></xref> object that represents the context for the current operation. This object is used to track requests to the storage service, and to provide additional runtime information about the operation.</p>
    name: opContext
    type: <xref href="com.microsoft.azure.storage.OperationContext?alt=com.microsoft.azure.storage.OperationContext&text=OperationContext" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred during the operation. </p>
  summary: >-
    <p>Creates the queue, using the specified request options and operation context.</p>

    <p></p>
  syntax: public void create(QueueRequestOptions options, OperationContext opContext)
  uid: com.microsoft.azure.storage.queue.CloudQueue.create(QueueRequestOptions,OperationContext)
- fullName: com.microsoft.azure.storage.queue.CloudQueue.createIfNotExists()
  name: createIfNotExists()
  nameWithType: CloudQueue.createIfNotExists()
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred during the operation. </p>
  returns:
    description: <p>A value of <code>true</code> if the queue is created in the storage service, otherwise <code>false</code></p>
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Creates the queue if it does not already exist.</p>

    <p></p>
  syntax: public boolean createIfNotExists()
  uid: com.microsoft.azure.storage.queue.CloudQueue.createIfNotExists()
- fullName: com.microsoft.azure.storage.queue.CloudQueue.createIfNotExists(QueueRequestOptions options, OperationContext opContext)
  name: createIfNotExists(QueueRequestOptions options, OperationContext opContext)
  nameWithType: CloudQueue.createIfNotExists(QueueRequestOptions options, OperationContext opContext)
  parameters:
  - description: <p>A <xref uid="com.microsoft.azure.storage.queue.QueueRequestOptions" data-throw-if-not-resolved="false" data-raw-source="QueueRequestOptions"></xref> object that specifies any additional options for the request. Specifying <code>null</code> will use the default request options from the associated service client ( <xref uid="com.microsoft.azure.storage.queue.CloudQueueClient" data-throw-if-not-resolved="false" data-raw-source="CloudQueueClient"></xref>). </p>
    name: options
    type: <xref href="com.microsoft.azure.storage.queue.QueueRequestOptions?alt=com.microsoft.azure.storage.queue.QueueRequestOptions&text=QueueRequestOptions" data-throw-if-not-resolved="False"/>
  - description: <p>An <xref uid="com.microsoft.azure.storage.OperationContext" data-throw-if-not-resolved="false" data-raw-source="OperationContext"></xref> object that represents the context for the current operation. This object is used to track requests to the storage service, and to provide additional runtime information about the operation.</p>
    name: opContext
    type: <xref href="com.microsoft.azure.storage.OperationContext?alt=com.microsoft.azure.storage.OperationContext&text=OperationContext" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred during the operation. </p>
  returns:
    description: <p>A value of <code>true</code> if the queue is created in the storage service, otherwise <code>false</code></p>
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Creates the queue if it does not already exist, using the specified request options and operation context.</p>

    <p></p>
  syntax: public boolean createIfNotExists(QueueRequestOptions options, OperationContext opContext)
  uid: com.microsoft.azure.storage.queue.CloudQueue.createIfNotExists(QueueRequestOptions,OperationContext)
- fullName: com.microsoft.azure.storage.queue.CloudQueue.delete()
  name: delete()
  nameWithType: CloudQueue.delete()
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred during the operation. </p>
  summary: >-
    <p>Deletes the queue.</p>

    <p></p>
  syntax: public void delete()
  uid: com.microsoft.azure.storage.queue.CloudQueue.delete()
- fullName: com.microsoft.azure.storage.queue.CloudQueue.delete(QueueRequestOptions options, OperationContext opContext)
  name: delete(QueueRequestOptions options, OperationContext opContext)
  nameWithType: CloudQueue.delete(QueueRequestOptions options, OperationContext opContext)
  parameters:
  - description: <p>A <xref uid="com.microsoft.azure.storage.queue.QueueRequestOptions" data-throw-if-not-resolved="false" data-raw-source="QueueRequestOptions"></xref> object that specifies any additional options for the request. Specifying <code>null</code> will use the default request options from the associated service client ( <xref uid="com.microsoft.azure.storage.queue.CloudQueueClient" data-throw-if-not-resolved="false" data-raw-source="CloudQueueClient"></xref>). </p>
    name: options
    type: <xref href="com.microsoft.azure.storage.queue.QueueRequestOptions?alt=com.microsoft.azure.storage.queue.QueueRequestOptions&text=QueueRequestOptions" data-throw-if-not-resolved="False"/>
  - description: <p>An <xref uid="com.microsoft.azure.storage.OperationContext" data-throw-if-not-resolved="false" data-raw-source="OperationContext"></xref> object that represents the context for the current operation. This object is used to track requests to the storage service, and to provide additional runtime information about the operation.</p>
    name: opContext
    type: <xref href="com.microsoft.azure.storage.OperationContext?alt=com.microsoft.azure.storage.OperationContext&text=OperationContext" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred during the operation. </p>
  summary: >-
    <p>Deletes the queue, using the specified request options and operation context.</p>

    <p></p>
  syntax: public void delete(QueueRequestOptions options, OperationContext opContext)
  uid: com.microsoft.azure.storage.queue.CloudQueue.delete(QueueRequestOptions,OperationContext)
- fullName: com.microsoft.azure.storage.queue.CloudQueue.deleteIfExists()
  name: deleteIfExists()
  nameWithType: CloudQueue.deleteIfExists()
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred during the operation. </p>
  returns:
    description: <p>A value of <code>true</code> if the queue existed in the storage service and has been deleted, otherwise <code>false</code>.</p>
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Deletes the queue if it exists.</p>

    <p></p>
  syntax: public boolean deleteIfExists()
  uid: com.microsoft.azure.storage.queue.CloudQueue.deleteIfExists()
- fullName: com.microsoft.azure.storage.queue.CloudQueue.deleteIfExists(QueueRequestOptions options, OperationContext opContext)
  name: deleteIfExists(QueueRequestOptions options, OperationContext opContext)
  nameWithType: CloudQueue.deleteIfExists(QueueRequestOptions options, OperationContext opContext)
  parameters:
  - description: <p>A <xref uid="com.microsoft.azure.storage.queue.QueueRequestOptions" data-throw-if-not-resolved="false" data-raw-source="QueueRequestOptions"></xref> object that specifies any additional options for the request. Specifying <code>null</code> will use the default request options from the associated service client ( <xref uid="com.microsoft.azure.storage.queue.CloudQueueClient" data-throw-if-not-resolved="false" data-raw-source="CloudQueueClient"></xref>). </p>
    name: options
    type: <xref href="com.microsoft.azure.storage.queue.QueueRequestOptions?alt=com.microsoft.azure.storage.queue.QueueRequestOptions&text=QueueRequestOptions" data-throw-if-not-resolved="False"/>
  - description: <p>An <xref uid="com.microsoft.azure.storage.OperationContext" data-throw-if-not-resolved="false" data-raw-source="OperationContext"></xref> object that represents the context for the current operation. This object is used to track requests to the storage service, and to provide additional runtime information about the operation.</p>
    name: opContext
    type: <xref href="com.microsoft.azure.storage.OperationContext?alt=com.microsoft.azure.storage.OperationContext&text=OperationContext" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred during the operation. </p>
  returns:
    description: <p>A value of <code>true</code> if the queue existed in the storage service and has been deleted, otherwise <code>false</code>.</p>
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Deletes the queue if it exists, using the specified request options and operation context.</p>

    <p></p>
  syntax: public boolean deleteIfExists(QueueRequestOptions options, OperationContext opContext)
  uid: com.microsoft.azure.storage.queue.CloudQueue.deleteIfExists(QueueRequestOptions,OperationContext)
- fullName: com.microsoft.azure.storage.queue.CloudQueue.deleteMessage(final CloudQueueMessage message)
  name: deleteMessage(final CloudQueueMessage message)
  nameWithType: CloudQueue.deleteMessage(final CloudQueueMessage message)
  parameters:
  - description: <p>A <xref uid="com.microsoft.azure.storage.queue.CloudQueueMessage" data-throw-if-not-resolved="false" data-raw-source="CloudQueueMessage"></xref> object that specifies the message to delete.</p>
    name: message
    type: final <xref href="com.microsoft.azure.storage.queue.CloudQueueMessage?alt=com.microsoft.azure.storage.queue.CloudQueueMessage&text=CloudQueueMessage" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred during the operation. </p>
  summary: >-
    <p>Deletes the specified message from the queue.</p>

    <p></p>
  syntax: public void deleteMessage(final CloudQueueMessage message)
  uid: com.microsoft.azure.storage.queue.CloudQueue.deleteMessage(final CloudQueueMessage)
- fullName: com.microsoft.azure.storage.queue.CloudQueue.deleteMessage(final CloudQueueMessage message, QueueRequestOptions options, OperationContext opContext)
  name: deleteMessage(final CloudQueueMessage message, QueueRequestOptions options, OperationContext opContext)
  nameWithType: CloudQueue.deleteMessage(final CloudQueueMessage message, QueueRequestOptions options, OperationContext opContext)
  parameters:
  - description: <p>A <xref uid="com.microsoft.azure.storage.queue.CloudQueueMessage" data-throw-if-not-resolved="false" data-raw-source="CloudQueueMessage"></xref> object that specifies the message to delete.</p>
    name: message
    type: final <xref href="com.microsoft.azure.storage.queue.CloudQueueMessage?alt=com.microsoft.azure.storage.queue.CloudQueueMessage&text=CloudQueueMessage" data-throw-if-not-resolved="False"/>
  - description: <p>A <xref uid="com.microsoft.azure.storage.queue.QueueRequestOptions" data-throw-if-not-resolved="false" data-raw-source="QueueRequestOptions"></xref> object that specifies any additional options for the request. Specifying <code>null</code> will use the default request options from the associated service client ( <xref uid="com.microsoft.azure.storage.queue.CloudQueueClient" data-throw-if-not-resolved="false" data-raw-source="CloudQueueClient"></xref>).</p>
    name: options
    type: <xref href="com.microsoft.azure.storage.queue.QueueRequestOptions?alt=com.microsoft.azure.storage.queue.QueueRequestOptions&text=QueueRequestOptions" data-throw-if-not-resolved="False"/>
  - description: <p>An <xref uid="com.microsoft.azure.storage.OperationContext" data-throw-if-not-resolved="false" data-raw-source="OperationContext"></xref> object that represents the context for the current operation. This object is used to track requests to the storage service, and to provide additional runtime information about the operation.</p>
    name: opContext
    type: <xref href="com.microsoft.azure.storage.OperationContext?alt=com.microsoft.azure.storage.OperationContext&text=OperationContext" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred during the operation. </p>
  summary: >-
    <p>Deletes the specified message from the queue, using the specified request options and operation context.</p>

    <p></p>
  syntax: public void deleteMessage(final CloudQueueMessage message, QueueRequestOptions options, OperationContext opContext)
  uid: com.microsoft.azure.storage.queue.CloudQueue.deleteMessage(final CloudQueueMessage,QueueRequestOptions,OperationContext)
- fullName: com.microsoft.azure.storage.queue.CloudQueue.downloadAttributes()
  name: downloadAttributes()
  nameWithType: CloudQueue.downloadAttributes()
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred during the operation. </p>
  summary: >-
    <p>Downloads the queue's metadata and approximate message count value.</p>

    <p></p>
  syntax: public void downloadAttributes()
  uid: com.microsoft.azure.storage.queue.CloudQueue.downloadAttributes()
- fullName: com.microsoft.azure.storage.queue.CloudQueue.downloadAttributes(QueueRequestOptions options, OperationContext opContext)
  name: downloadAttributes(QueueRequestOptions options, OperationContext opContext)
  nameWithType: CloudQueue.downloadAttributes(QueueRequestOptions options, OperationContext opContext)
  parameters:
  - description: <p>A <xref uid="com.microsoft.azure.storage.queue.QueueRequestOptions" data-throw-if-not-resolved="false" data-raw-source="QueueRequestOptions"></xref> object that specifies any additional options for the request. Specifying <code>null</code> will use the default request options from the associated service client ( <xref uid="com.microsoft.azure.storage.queue.CloudQueue" data-throw-if-not-resolved="false" data-raw-source="CloudQueue"></xref>). </p>
    name: options
    type: <xref href="com.microsoft.azure.storage.queue.QueueRequestOptions?alt=com.microsoft.azure.storage.queue.QueueRequestOptions&text=QueueRequestOptions" data-throw-if-not-resolved="False"/>
  - description: <p>An <xref uid="com.microsoft.azure.storage.OperationContext" data-throw-if-not-resolved="false" data-raw-source="OperationContext"></xref> object that represents the context for the current operation. This object is used to track requests to the storage service, and to provide additional runtime information about the operation.</p>
    name: opContext
    type: <xref href="com.microsoft.azure.storage.OperationContext?alt=com.microsoft.azure.storage.OperationContext&text=OperationContext" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred during the operation. </p>
  summary: >-
    <p>Downloads the queue's metadata and approximate message count value, using the specified request options and operation context.</p>

    <p></p>
  syntax: public void downloadAttributes(QueueRequestOptions options, OperationContext opContext)
  uid: com.microsoft.azure.storage.queue.CloudQueue.downloadAttributes(QueueRequestOptions,OperationContext)
- fullName: com.microsoft.azure.storage.queue.CloudQueue.downloadPermissions()
  name: downloadPermissions()
  nameWithType: CloudQueue.downloadPermissions()
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  returns:
    description: <p>A <xref uid="com.microsoft.azure.storage.queue.QueuePermissions" data-throw-if-not-resolved="false" data-raw-source="QueuePermissions"></xref> object that represents the queue's permissions.</p>
    type: <xref href="com.microsoft.azure.storage.queue.QueuePermissions?alt=com.microsoft.azure.storage.queue.QueuePermissions&text=QueuePermissions" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Downloads the permission settings for the queue.</p>

    <p></p>
  syntax: public QueuePermissions downloadPermissions()
  uid: com.microsoft.azure.storage.queue.CloudQueue.downloadPermissions()
- fullName: com.microsoft.azure.storage.queue.CloudQueue.downloadPermissions(QueueRequestOptions options, OperationContext opContext)
  name: downloadPermissions(QueueRequestOptions options, OperationContext opContext)
  nameWithType: CloudQueue.downloadPermissions(QueueRequestOptions options, OperationContext opContext)
  parameters:
  - description: <p>A <xref uid="com.microsoft.azure.storage.queue.QueueRequestOptions" data-throw-if-not-resolved="false" data-raw-source="QueueRequestOptions"></xref> object that specifies any additional options for the request. Specifying <code>null</code> will use the default request options from the associated service client ( <xref uid="com.microsoft.azure.storage.queue.CloudQueueClient" data-throw-if-not-resolved="false" data-raw-source="CloudQueueClient"></xref>). </p>
    name: options
    type: <xref href="com.microsoft.azure.storage.queue.QueueRequestOptions?alt=com.microsoft.azure.storage.queue.QueueRequestOptions&text=QueueRequestOptions" data-throw-if-not-resolved="False"/>
  - description: <p>An <xref uid="com.microsoft.azure.storage.OperationContext" data-throw-if-not-resolved="false" data-raw-source="OperationContext"></xref> object that represents the context for the current operation. This object is used to track requests to the storage service, and to provide additional runtime information about the operation.</p>
    name: opContext
    type: <xref href="com.microsoft.azure.storage.OperationContext?alt=com.microsoft.azure.storage.OperationContext&text=OperationContext" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  returns:
    description: <p>A <xref uid="com.microsoft.azure.storage.queue.QueuePermissions" data-throw-if-not-resolved="false" data-raw-source="QueuePermissions"></xref> object that represents the container's permissions.</p>
    type: <xref href="com.microsoft.azure.storage.queue.QueuePermissions?alt=com.microsoft.azure.storage.queue.QueuePermissions&text=QueuePermissions" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Downloads the permissions settings for the queue using the specified request options and operation context.</p>

    <p></p>
  syntax: public QueuePermissions downloadPermissions(QueueRequestOptions options, OperationContext opContext)
  uid: com.microsoft.azure.storage.queue.CloudQueue.downloadPermissions(QueueRequestOptions,OperationContext)
- fullName: com.microsoft.azure.storage.queue.CloudQueue.exists()
  name: exists()
  nameWithType: CloudQueue.exists()
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred during the operation. </p>
  returns:
    description: >-
      <p>

        <code>true</code> if the queue exists in the storage service, otherwise <code>false</code>.</p>
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Returns a value that indicates whether the queue exists.</p>

    <p></p>
  syntax: public boolean exists()
  uid: com.microsoft.azure.storage.queue.CloudQueue.exists()
- fullName: com.microsoft.azure.storage.queue.CloudQueue.exists(QueueRequestOptions options, OperationContext opContext)
  name: exists(QueueRequestOptions options, OperationContext opContext)
  nameWithType: CloudQueue.exists(QueueRequestOptions options, OperationContext opContext)
  parameters:
  - description: <p>A <xref uid="com.microsoft.azure.storage.queue.QueueRequestOptions" data-throw-if-not-resolved="false" data-raw-source="QueueRequestOptions"></xref> object that specifies any additional options for the request. Specifying <code>null</code> will use the default request options from the associated service client ( <xref uid="com.microsoft.azure.storage.queue.CloudQueueClient" data-throw-if-not-resolved="false" data-raw-source="CloudQueueClient"></xref>). </p>
    name: options
    type: <xref href="com.microsoft.azure.storage.queue.QueueRequestOptions?alt=com.microsoft.azure.storage.queue.QueueRequestOptions&text=QueueRequestOptions" data-throw-if-not-resolved="False"/>
  - description: <p>An <xref uid="com.microsoft.azure.storage.OperationContext" data-throw-if-not-resolved="false" data-raw-source="OperationContext"></xref> object that represents the context for the current operation. This object is used to track requests to the storage service, and to provide additional runtime information about the operation.</p>
    name: opContext
    type: <xref href="com.microsoft.azure.storage.OperationContext?alt=com.microsoft.azure.storage.OperationContext&text=OperationContext" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred during the operation. </p>
  returns:
    description: >-
      <p>

        <code>true</code> if the queue exists in the storage service, otherwise <code>false</code>.</p>
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Returns a value that indicates whether the queue existse, using the specified request options and operation context.</p>

    <p></p>
  syntax: public boolean exists(QueueRequestOptions options, OperationContext opContext)
  uid: com.microsoft.azure.storage.queue.CloudQueue.exists(QueueRequestOptions,OperationContext)
- fullName: com.microsoft.azure.storage.queue.CloudQueue.generateSharedAccessSignature(final SharedAccessQueuePolicy policy, final String groupPolicyIdentifier)
  name: generateSharedAccessSignature(final SharedAccessQueuePolicy policy, final String groupPolicyIdentifier)
  nameWithType: CloudQueue.generateSharedAccessSignature(final SharedAccessQueuePolicy policy, final String groupPolicyIdentifier)
  parameters:
  - description: <p>The access policy for the shared access signature. </p>
    name: policy
    type: final <xref href="com.microsoft.azure.storage.queue.SharedAccessQueuePolicy?alt=com.microsoft.azure.storage.queue.SharedAccessQueuePolicy&text=SharedAccessQueuePolicy" data-throw-if-not-resolved="False"/>
  - description: <p>A queue-level access policy.</p>
    name: groupPolicyIdentifier
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="InvalidKeyException?alt=InvalidKeyException&text=InvalidKeyException" data-throw-if-not-resolved="False"/>
    description: <p>If an invalid key was passed. </p>
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>If an unexpected value is passed. </p>
  returns:
    description: <p>A shared access signature for the queue.</p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Returns a shared access signature for the queue.</p>

    <p></p>
  syntax: public String generateSharedAccessSignature(final SharedAccessQueuePolicy policy, final String groupPolicyIdentifier)
  uid: com.microsoft.azure.storage.queue.CloudQueue.generateSharedAccessSignature(final SharedAccessQueuePolicy,final String)
- fullName: com.microsoft.azure.storage.queue.CloudQueue.generateSharedAccessSignature(final SharedAccessQueuePolicy policy, final String groupPolicyIdentifier, final IPRange ipRange, final SharedAccessProtocols protocols)
  name: generateSharedAccessSignature(final SharedAccessQueuePolicy policy, final String groupPolicyIdentifier, final IPRange ipRange, final SharedAccessProtocols protocols)
  nameWithType: CloudQueue.generateSharedAccessSignature(final SharedAccessQueuePolicy policy, final String groupPolicyIdentifier, final IPRange ipRange, final SharedAccessProtocols protocols)
  parameters:
  - description: <p>The access policy for the shared access signature. </p>
    name: policy
    type: final <xref href="com.microsoft.azure.storage.queue.SharedAccessQueuePolicy?alt=com.microsoft.azure.storage.queue.SharedAccessQueuePolicy&text=SharedAccessQueuePolicy" data-throw-if-not-resolved="False"/>
  - description: <p>A queue-level access policy. </p>
    name: groupPolicyIdentifier
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>A <xref uid="com.microsoft.azure.storage.IPRange" data-throw-if-not-resolved="false" data-raw-source="IPRange"></xref> object containing the range of allowed IP addresses. </p>
    name: ipRange
    type: final <xref href="com.microsoft.azure.storage.IPRange?alt=com.microsoft.azure.storage.IPRange&text=IPRange" data-throw-if-not-resolved="False"/>
  - description: <p>A <xref uid="com.microsoft.azure.storage.SharedAccessProtocols" data-throw-if-not-resolved="false" data-raw-source="SharedAccessProtocols"></xref> representing the allowed Internet protocols.</p>
    name: protocols
    type: final <xref href="com.microsoft.azure.storage.SharedAccessProtocols?alt=com.microsoft.azure.storage.SharedAccessProtocols&text=SharedAccessProtocols" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="InvalidKeyException?alt=InvalidKeyException&text=InvalidKeyException" data-throw-if-not-resolved="False"/>
    description: <p>If an invalid key was passed. </p>
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>If an unexpected value is passed. </p>
  returns:
    description: <p>A shared access signature for the queue.</p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Returns a shared access signature for the queue.</p>

    <p></p>
  syntax: public String generateSharedAccessSignature(final SharedAccessQueuePolicy policy, final String groupPolicyIdentifier, final IPRange ipRange, final SharedAccessProtocols protocols)
  uid: com.microsoft.azure.storage.queue.CloudQueue.generateSharedAccessSignature(final SharedAccessQueuePolicy,final String,final IPRange,final SharedAccessProtocols)
- fullName: com.microsoft.azure.storage.queue.CloudQueue.getApproximateMessageCount()
  name: getApproximateMessageCount()
  nameWithType: CloudQueue.getApproximateMessageCount()
  returns:
    description: <p>A <code>Long</code> object that represents the approximate messages count of the queue. </p>
    type: <xref href="long?alt=long&text=long" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the approximate messages count of the queue. This value is initialized by a request to <xref uid="com.microsoft.azure.storage.queue.CloudQueue.downloadAttributes()" data-throw-if-not-resolved="false" data-raw-source="downloadAttributes"></xref> and represents the approximate message count when that request completed.</p>

    <p></p>
  syntax: public long getApproximateMessageCount()
  uid: com.microsoft.azure.storage.queue.CloudQueue.getApproximateMessageCount()
- fullName: com.microsoft.azure.storage.queue.CloudQueue.getMetadata()
  name: getMetadata()
  nameWithType: CloudQueue.getMetadata()
  returns:
    description: <p>A <code>java.util.HashMap</code> object that represents the metadata for the queue. </p>
    type: <xref href="HashMap%3CString%2C+String%3E?alt=HashMap%3CString%2C+String%3E&text=HashMap%3CString%2C+String%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the metadata collection for the queue as stored in this  object. This value is initialized with the metadata from the queue by a call to <xref uid="com.microsoft.azure.storage.queue.CloudQueue.downloadAttributes()" data-throw-if-not-resolved="false" data-raw-source="downloadAttributes"></xref>, and is set on the queue with a call to <xref uid="com.microsoft.azure.storage.queue.CloudQueue.uploadMetadata()" data-throw-if-not-resolved="false" data-raw-source="uploadMetadata"></xref>.</p>

    <p></p>
  syntax: public HashMap<String, String> getMetadata()
  uid: com.microsoft.azure.storage.queue.CloudQueue.getMetadata()
- fullName: com.microsoft.azure.storage.queue.CloudQueue.getName()
  name: getName()
  nameWithType: CloudQueue.getName()
  returns:
    description: <p>A <code>String</code> object that represents the name of the queue. </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the name of the queue.</p>

    <p></p>
  syntax: public String getName()
  uid: com.microsoft.azure.storage.queue.CloudQueue.getName()
- fullName: com.microsoft.azure.storage.queue.CloudQueue.getServiceClient()
  name: getServiceClient()
  nameWithType: CloudQueue.getServiceClient()
  returns:
    description: <p>A <xref uid="com.microsoft.azure.storage.queue.CloudQueueClient" data-throw-if-not-resolved="false" data-raw-source="CloudQueueClient"></xref> object that represents the service client associated with this queue. </p>
    type: <xref href="com.microsoft.azure.storage.queue.CloudQueueClient?alt=com.microsoft.azure.storage.queue.CloudQueueClient&text=CloudQueueClient" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the queue service client associated with this queue.</p>

    <p></p>
  syntax: public CloudQueueClient getServiceClient()
  uid: com.microsoft.azure.storage.queue.CloudQueue.getServiceClient()
- fullName: com.microsoft.azure.storage.queue.CloudQueue.getShouldEncodeMessage()
  name: getShouldEncodeMessage()
  nameWithType: CloudQueue.getShouldEncodeMessage()
  returns:
    description: <p>A <code>Boolean</code> that represents whether the message should be base-64 encoded. </p>
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the value indicating whether the message should be base-64 encoded.</p>

    <p></p>
  syntax: public boolean getShouldEncodeMessage()
  uid: com.microsoft.azure.storage.queue.CloudQueue.getShouldEncodeMessage()
- fullName: com.microsoft.azure.storage.queue.CloudQueue.getStorageUri()
  name: getStorageUri()
  nameWithType: CloudQueue.getStorageUri()
  returns:
    description: <p>A <code>StorageUri</code> that represents the list of URIs for all locations.. </p>
    type: final <xref href="com.microsoft.azure.storage.StorageUri?alt=com.microsoft.azure.storage.StorageUri&text=StorageUri" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Returns the list of URIs for all locations.</p>

    <p></p>
  syntax: public final StorageUri getStorageUri()
  uid: com.microsoft.azure.storage.queue.CloudQueue.getStorageUri()
- fullName: com.microsoft.azure.storage.queue.CloudQueue.getUri()
  name: getUri()
  nameWithType: CloudQueue.getUri()
  returns:
    description: <p>A <code>java.net.URI</code> object that represents the URI for this queue. </p>
    type: <xref href="URI?alt=URI&text=URI" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the absolute URI for this queue.</p>

    <p></p>
  syntax: public URI getUri()
  uid: com.microsoft.azure.storage.queue.CloudQueue.getUri()
- fullName: com.microsoft.azure.storage.queue.CloudQueue.peekMessage()
  name: peekMessage()
  nameWithType: CloudQueue.peekMessage()
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred during the operation. </p>
  returns:
    description: <p>An <xref uid="com.microsoft.azure.storage.queue.CloudQueueMessage" data-throw-if-not-resolved="false" data-raw-source="CloudQueueMessage"></xref> object that represents a message in this queue.</p>
    type: <xref href="com.microsoft.azure.storage.queue.CloudQueueMessage?alt=com.microsoft.azure.storage.queue.CloudQueueMessage&text=CloudQueueMessage" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Peeks a message from the queue. A peek request retrieves a message from the front of the queue without changing its visibility.</p>

    <p></p>
  syntax: public CloudQueueMessage peekMessage()
  uid: com.microsoft.azure.storage.queue.CloudQueue.peekMessage()
- fullName: com.microsoft.azure.storage.queue.CloudQueue.peekMessage(final QueueRequestOptions options, final OperationContext opContext)
  name: peekMessage(final QueueRequestOptions options, final OperationContext opContext)
  nameWithType: CloudQueue.peekMessage(final QueueRequestOptions options, final OperationContext opContext)
  parameters:
  - description: <p>A <xref uid="com.microsoft.azure.storage.queue.QueueRequestOptions" data-throw-if-not-resolved="false" data-raw-source="QueueRequestOptions"></xref> object that specifies any additional options for the request. Specifying <code>null</code> will use the default request options from the associated service client ( <xref uid="com.microsoft.azure.storage.queue.CloudQueueClient" data-throw-if-not-resolved="false" data-raw-source="CloudQueueClient"></xref>). </p>
    name: options
    type: final <xref href="com.microsoft.azure.storage.queue.QueueRequestOptions?alt=com.microsoft.azure.storage.queue.QueueRequestOptions&text=QueueRequestOptions" data-throw-if-not-resolved="False"/>
  - description: <p>An <xref uid="com.microsoft.azure.storage.OperationContext" data-throw-if-not-resolved="false" data-raw-source="OperationContext"></xref> object that represents the context for the current operation. This object is used to track requests to the storage service, and to provide additional runtime information about the operation.</p>
    name: opContext
    type: final <xref href="com.microsoft.azure.storage.OperationContext?alt=com.microsoft.azure.storage.OperationContext&text=OperationContext" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred during the operation. </p>
  returns:
    description: <p>An <xref uid="com.microsoft.azure.storage.queue.CloudQueueMessage" data-throw-if-not-resolved="false" data-raw-source="CloudQueueMessage"></xref> object that represents the requested message from the queue.</p>
    type: <xref href="com.microsoft.azure.storage.queue.CloudQueueMessage?alt=com.microsoft.azure.storage.queue.CloudQueueMessage&text=CloudQueueMessage" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Peeks a message from the queue, using the specified request options and operation context. A peek request retrieves a message from the front of the queue without changing its visibility.</p>

    <p></p>
  syntax: public CloudQueueMessage peekMessage(final QueueRequestOptions options, final OperationContext opContext)
  uid: com.microsoft.azure.storage.queue.CloudQueue.peekMessage(final QueueRequestOptions,final OperationContext)
- fullName: com.microsoft.azure.storage.queue.CloudQueue.peekMessages(final int numberOfMessages)
  name: peekMessages(final int numberOfMessages)
  nameWithType: CloudQueue.peekMessages(final int numberOfMessages)
  parameters:
  - description: <p>The number of messages to retrieve.</p>
    name: numberOfMessages
    type: <xref href="final+int?alt=final+int&text=final+int" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred during the operation. </p>
  returns:
    description: <p>An enumerable collection of <xref uid="com.microsoft.azure.storage.queue.CloudQueueMessage" data-throw-if-not-resolved="false" data-raw-source="CloudQueueMessage"></xref> objects that represents the requested messages from the queue.</p>
    type: Iterable&lt;<xref href="com.microsoft.azure.storage.queue.CloudQueueMessage?alt=com.microsoft.azure.storage.queue.CloudQueueMessage&text=CloudQueueMessage" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Peeks a specified number of messages from the queue. A peek request retrieves messages from the front of the queue without changing their visibility.</p>

    <p></p>
  syntax: public Iterable<CloudQueueMessage> peekMessages(final int numberOfMessages)
  uid: com.microsoft.azure.storage.queue.CloudQueue.peekMessages(final int)
- fullName: com.microsoft.azure.storage.queue.CloudQueue.peekMessages(final int numberOfMessages, QueueRequestOptions options, OperationContext opContext)
  name: peekMessages(final int numberOfMessages, QueueRequestOptions options, OperationContext opContext)
  nameWithType: CloudQueue.peekMessages(final int numberOfMessages, QueueRequestOptions options, OperationContext opContext)
  parameters:
  - description: <p>The number of messages to retrieve.</p>
    name: numberOfMessages
    type: <xref href="final+int?alt=final+int&text=final+int" data-throw-if-not-resolved="False"/>
  - description: <p>A <xref uid="com.microsoft.azure.storage.queue.QueueRequestOptions" data-throw-if-not-resolved="false" data-raw-source="QueueRequestOptions"></xref> object that specifies any additional options for the request. Specifying <code>null</code> will use the default request options from the associated service client ( <xref uid="com.microsoft.azure.storage.queue.CloudQueueClient" data-throw-if-not-resolved="false" data-raw-source="CloudQueueClient"></xref>). </p>
    name: options
    type: <xref href="com.microsoft.azure.storage.queue.QueueRequestOptions?alt=com.microsoft.azure.storage.queue.QueueRequestOptions&text=QueueRequestOptions" data-throw-if-not-resolved="False"/>
  - description: <p>An <xref uid="com.microsoft.azure.storage.OperationContext" data-throw-if-not-resolved="false" data-raw-source="OperationContext"></xref> object that represents the context for the current operation. This object is used to track requests to the storage service, and to provide additional runtime information about the operation.</p>
    name: opContext
    type: <xref href="com.microsoft.azure.storage.OperationContext?alt=com.microsoft.azure.storage.OperationContext&text=OperationContext" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred during the operation. </p>
  returns:
    description: <p>An enumerable collection of <xref uid="com.microsoft.azure.storage.queue.CloudQueueMessage" data-throw-if-not-resolved="false" data-raw-source="CloudQueueMessage"></xref> objects that represents the requested messages from the queue.</p>
    type: Iterable&lt;<xref href="com.microsoft.azure.storage.queue.CloudQueueMessage?alt=com.microsoft.azure.storage.queue.CloudQueueMessage&text=CloudQueueMessage" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Peeks a set of messages from the queue, using the specified request options and operation context. A peek request retrieves messages from the front of the queue without changing their visibility.</p>

    <p></p>
  syntax: public Iterable<CloudQueueMessage> peekMessages(final int numberOfMessages, QueueRequestOptions options, OperationContext opContext)
  uid: com.microsoft.azure.storage.queue.CloudQueue.peekMessages(final int,QueueRequestOptions,OperationContext)
- fullName: com.microsoft.azure.storage.queue.CloudQueue.retrieveMessage()
  name: retrieveMessage()
  nameWithType: CloudQueue.retrieveMessage()
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred during the operation. </p>
  returns:
    description: <p>An <xref uid="com.microsoft.azure.storage.queue.CloudQueueMessage" data-throw-if-not-resolved="false" data-raw-source="CloudQueueMessage"></xref> object that represents a message in this queue.</p>
    type: <xref href="com.microsoft.azure.storage.queue.CloudQueueMessage?alt=com.microsoft.azure.storage.queue.CloudQueueMessage&text=CloudQueueMessage" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Retrieves a message from the front of the queue using the default request options. This operation marks the retrieved message as invisible in the queue for the default visibility timeout period.</p>

    <p></p>
  syntax: public CloudQueueMessage retrieveMessage()
  uid: com.microsoft.azure.storage.queue.CloudQueue.retrieveMessage()
- fullName: com.microsoft.azure.storage.queue.CloudQueue.retrieveMessage(final int visibilityTimeoutInSeconds, final QueueRequestOptions options, final OperationContext opContext)
  name: retrieveMessage(final int visibilityTimeoutInSeconds, final QueueRequestOptions options, final OperationContext opContext)
  nameWithType: CloudQueue.retrieveMessage(final int visibilityTimeoutInSeconds, final QueueRequestOptions options, final OperationContext opContext)
  parameters:
  - description: <p>Specifies the visibility timeout for the message, in seconds.</p>
    name: visibilityTimeoutInSeconds
    type: <xref href="final+int?alt=final+int&text=final+int" data-throw-if-not-resolved="False"/>
  - description: <p>A <xref uid="com.microsoft.azure.storage.queue.QueueRequestOptions" data-throw-if-not-resolved="false" data-raw-source="QueueRequestOptions"></xref> object that specifies any additional options for the request. Specifying <code>null</code> will use the default request options from the associated service client ( <xref uid="com.microsoft.azure.storage.queue.CloudQueueClient" data-throw-if-not-resolved="false" data-raw-source="CloudQueueClient"></xref>). </p>
    name: options
    type: final <xref href="com.microsoft.azure.storage.queue.QueueRequestOptions?alt=com.microsoft.azure.storage.queue.QueueRequestOptions&text=QueueRequestOptions" data-throw-if-not-resolved="False"/>
  - description: <p>An <xref uid="com.microsoft.azure.storage.OperationContext" data-throw-if-not-resolved="false" data-raw-source="OperationContext"></xref> object that represents the context for the current operation. This object is used to track requests to the storage service, and to provide additional runtime information about the operation.</p>
    name: opContext
    type: final <xref href="com.microsoft.azure.storage.OperationContext?alt=com.microsoft.azure.storage.OperationContext&text=OperationContext" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred during the operation. </p>
  returns:
    description: <p>An <xref uid="com.microsoft.azure.storage.queue.CloudQueueMessage" data-throw-if-not-resolved="false" data-raw-source="CloudQueueMessage"></xref> object that represents a message in this queue.</p>
    type: <xref href="com.microsoft.azure.storage.queue.CloudQueueMessage?alt=com.microsoft.azure.storage.queue.CloudQueueMessage&text=CloudQueueMessage" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Retrieves a message from the front of the queue, using the specified request options and operation context. This operation marks the retrieved message as invisible in the queue for the specified visibility timeout period.</p>

    <p></p>
  syntax: public CloudQueueMessage retrieveMessage(final int visibilityTimeoutInSeconds, final QueueRequestOptions options, final OperationContext opContext)
  uid: com.microsoft.azure.storage.queue.CloudQueue.retrieveMessage(final int,final QueueRequestOptions,final OperationContext)
- fullName: com.microsoft.azure.storage.queue.CloudQueue.retrieveMessages(final int numberOfMessages)
  name: retrieveMessages(final int numberOfMessages)
  nameWithType: CloudQueue.retrieveMessages(final int numberOfMessages)
  parameters:
  - description: <p>The number of messages to retrieve.</p>
    name: numberOfMessages
    type: <xref href="final+int?alt=final+int&text=final+int" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred during the operation. </p>
  returns:
    description: <p>An enumerable collection of <xref uid="com.microsoft.azure.storage.queue.CloudQueueMessage" data-throw-if-not-resolved="false" data-raw-source="CloudQueueMessage"></xref> objects that represents the retrieved messages from the queue.</p>
    type: Iterable&lt;<xref href="com.microsoft.azure.storage.queue.CloudQueueMessage?alt=com.microsoft.azure.storage.queue.CloudQueueMessage&text=CloudQueueMessage" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Retrieves the specified number of messages from the front of the queue using the default request options. This operation marks the retrieved messages as invisible in the queue for the default visibility timeout period.</p>

    <p></p>
  syntax: public Iterable<CloudQueueMessage> retrieveMessages(final int numberOfMessages)
  uid: com.microsoft.azure.storage.queue.CloudQueue.retrieveMessages(final int)
- fullName: com.microsoft.azure.storage.queue.CloudQueue.retrieveMessages(final int numberOfMessages, final int visibilityTimeoutInSeconds, QueueRequestOptions options, OperationContext opContext)
  name: retrieveMessages(final int numberOfMessages, final int visibilityTimeoutInSeconds, QueueRequestOptions options, OperationContext opContext)
  nameWithType: CloudQueue.retrieveMessages(final int numberOfMessages, final int visibilityTimeoutInSeconds, QueueRequestOptions options, OperationContext opContext)
  parameters:
  - description: <p>The number of messages to retrieve.</p>
    name: numberOfMessages
    type: <xref href="final+int?alt=final+int&text=final+int" data-throw-if-not-resolved="False"/>
  - description: <p>Specifies the visibility timeout for the retrieved messages, in seconds.</p>
    name: visibilityTimeoutInSeconds
    type: <xref href="final+int?alt=final+int&text=final+int" data-throw-if-not-resolved="False"/>
  - description: <p>A <xref uid="com.microsoft.azure.storage.queue.QueueRequestOptions" data-throw-if-not-resolved="false" data-raw-source="QueueRequestOptions"></xref> object that specifies any additional options for the request. Specifying <code>null</code> will use the default request options from the associated service client ( <xref uid="com.microsoft.azure.storage.queue.CloudQueueClient" data-throw-if-not-resolved="false" data-raw-source="CloudQueueClient"></xref>). </p>
    name: options
    type: <xref href="com.microsoft.azure.storage.queue.QueueRequestOptions?alt=com.microsoft.azure.storage.queue.QueueRequestOptions&text=QueueRequestOptions" data-throw-if-not-resolved="False"/>
  - description: <p>An <xref uid="com.microsoft.azure.storage.OperationContext" data-throw-if-not-resolved="false" data-raw-source="OperationContext"></xref> object that represents the context for the current operation. This object is used to track requests to the storage service, and to provide additional runtime information about the operation.</p>
    name: opContext
    type: <xref href="com.microsoft.azure.storage.OperationContext?alt=com.microsoft.azure.storage.OperationContext&text=OperationContext" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred during the operation. </p>
  returns:
    description: <p>An enumerable collection of <xref uid="com.microsoft.azure.storage.queue.CloudQueueMessage" data-throw-if-not-resolved="false" data-raw-source="CloudQueueMessage"></xref> objects that represents the messages retrieved from the queue.</p>
    type: Iterable&lt;<xref href="com.microsoft.azure.storage.queue.CloudQueueMessage?alt=com.microsoft.azure.storage.queue.CloudQueueMessage&text=CloudQueueMessage" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Retrieves the specified number of messages from the front of the queue using the specified request options and operation context. This operation marks the retrieved messages as invisible in the queue for the default visibility timeout period.</p>

    <p></p>
  syntax: public Iterable<CloudQueueMessage> retrieveMessages(final int numberOfMessages, final int visibilityTimeoutInSeconds, QueueRequestOptions options, OperationContext opContext)
  uid: com.microsoft.azure.storage.queue.CloudQueue.retrieveMessages(final int,final int,QueueRequestOptions,OperationContext)
- fullName: com.microsoft.azure.storage.queue.CloudQueue.setMetadata(final HashMap<String, String> metadata)
  name: setMetadata(final HashMap<String, String> metadata)
  nameWithType: CloudQueue.setMetadata(final HashMap<String, String> metadata)
  parameters:
  - description: <p>A <code>java.util.HashMap</code> object that represents the metadata being assigned to the queue. </p>
    name: metadata
    type: <xref href="final+HashMap%3CString%2C+String%3E?alt=final+HashMap%3CString%2C+String%3E&text=final+HashMap%3CString%2C+String%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Sets the metadata collection of name-value pairs to be set on the queue with an <xref uid="com.microsoft.azure.storage.queue.CloudQueue.uploadMetadata()" data-throw-if-not-resolved="false" data-raw-source="uploadMetadata"></xref> call. This collection will overwrite any existing queue metadata. If this is set to an empty collection, the queue metadata will be cleared on an <xref uid="com.microsoft.azure.storage.queue.CloudQueue.uploadMetadata()" data-throw-if-not-resolved="false" data-raw-source="uploadMetadata"></xref> call.</p>

    <p></p>
  syntax: public void setMetadata(final HashMap<String, String> metadata)
  uid: com.microsoft.azure.storage.queue.CloudQueue.setMetadata(final HashMap<String, String>)
- fullName: com.microsoft.azure.storage.queue.CloudQueue.setShouldEncodeMessage(final boolean shouldEncodeMessage)
  name: setShouldEncodeMessage(final boolean shouldEncodeMessage)
  nameWithType: CloudQueue.setShouldEncodeMessage(final boolean shouldEncodeMessage)
  parameters:
  - description: <p>The value indicates whether the message should be base-64 encoded. </p>
    name: shouldEncodeMessage
    type: <xref href="final+boolean?alt=final+boolean&text=final+boolean" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Sets the flag indicating whether the message should be base-64 encoded.</p>

    <p></p>
  syntax: public void setShouldEncodeMessage(final boolean shouldEncodeMessage)
  uid: com.microsoft.azure.storage.queue.CloudQueue.setShouldEncodeMessage(final boolean)
- fullName: com.microsoft.azure.storage.queue.CloudQueue.updateMessage(final CloudQueueMessage message, final int visibilityTimeoutInSeconds)
  name: updateMessage(final CloudQueueMessage message, final int visibilityTimeoutInSeconds)
  nameWithType: CloudQueue.updateMessage(final CloudQueueMessage message, final int visibilityTimeoutInSeconds)
  parameters:
  - description: <p>The <xref uid="com.microsoft.azure.storage.queue.CloudQueueMessage" data-throw-if-not-resolved="false" data-raw-source="CloudQueueMessage"></xref> to update in the queue.</p>
    name: message
    type: final <xref href="com.microsoft.azure.storage.queue.CloudQueueMessage?alt=com.microsoft.azure.storage.queue.CloudQueueMessage&text=CloudQueueMessage" data-throw-if-not-resolved="False"/>
  - description: <p>Specifies the new visibility timeout for the message, in seconds.</p>
    name: visibilityTimeoutInSeconds
    type: <xref href="final+int?alt=final+int&text=final+int" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred during the operation. </p>
  summary: >-
    <p>Updates the specified message in the queue with a new visibility timeout value in seconds.</p>

    <p></p>
  syntax: public void updateMessage(final CloudQueueMessage message, final int visibilityTimeoutInSeconds)
  uid: com.microsoft.azure.storage.queue.CloudQueue.updateMessage(final CloudQueueMessage,final int)
- fullName: com.microsoft.azure.storage.queue.CloudQueue.updateMessage(final CloudQueueMessage message, final int visibilityTimeoutInSeconds, final EnumSet<MessageUpdateFields> messageUpdateFields, QueueRequestOptions options, OperationContext opContext)
  name: updateMessage(final CloudQueueMessage message, final int visibilityTimeoutInSeconds, final EnumSet<MessageUpdateFields> messageUpdateFields, QueueRequestOptions options, OperationContext opContext)
  nameWithType: CloudQueue.updateMessage(final CloudQueueMessage message, final int visibilityTimeoutInSeconds, final EnumSet<MessageUpdateFields> messageUpdateFields, QueueRequestOptions options, OperationContext opContext)
  parameters:
  - description: <p>The <xref uid="com.microsoft.azure.storage.queue.CloudQueueMessage" data-throw-if-not-resolved="false" data-raw-source="CloudQueueMessage"></xref> to update in the queue.</p>
    name: message
    type: final <xref href="com.microsoft.azure.storage.queue.CloudQueueMessage?alt=com.microsoft.azure.storage.queue.CloudQueueMessage&text=CloudQueueMessage" data-throw-if-not-resolved="False"/>
  - description: <p>Specifies the new visibility timeout for the message, in seconds.</p>
    name: visibilityTimeoutInSeconds
    type: <xref href="final+int?alt=final+int&text=final+int" data-throw-if-not-resolved="False"/>
  - description: <p>An <code>EnumSet</code> of <xref uid="com.microsoft.azure.storage.queue.MessageUpdateFields" data-throw-if-not-resolved="false" data-raw-source="MessageUpdateFields"></xref> values that specifies which parts of the message are to be updated.</p>
    name: messageUpdateFields
    type: final EnumSet&lt;<xref href="com.microsoft.azure.storage.queue.MessageUpdateFields?alt=com.microsoft.azure.storage.queue.MessageUpdateFields&text=MessageUpdateFields" data-throw-if-not-resolved="False"/>&gt;
  - description: <p>A <xref uid="com.microsoft.azure.storage.queue.QueueRequestOptions" data-throw-if-not-resolved="false" data-raw-source="QueueRequestOptions"></xref> object that specifies any additional options for the request. Specifying <code>null</code> will use the default request options from the associated service client ( <xref uid="com.microsoft.azure.storage.queue.CloudQueueClient" data-throw-if-not-resolved="false" data-raw-source="CloudQueueClient"></xref>).</p>
    name: options
    type: <xref href="com.microsoft.azure.storage.queue.QueueRequestOptions?alt=com.microsoft.azure.storage.queue.QueueRequestOptions&text=QueueRequestOptions" data-throw-if-not-resolved="False"/>
  - description: <p>An <xref uid="com.microsoft.azure.storage.OperationContext" data-throw-if-not-resolved="false" data-raw-source="OperationContext"></xref> object that represents the context for the current operation. This object is used to track requests to the storage service, and to provide additional runtime information about the operation.</p>
    name: opContext
    type: <xref href="com.microsoft.azure.storage.OperationContext?alt=com.microsoft.azure.storage.OperationContext&text=OperationContext" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred during the operation. </p>
  summary: >-
    <p>Updates a message in the queue, using the specified request options and operation context.</p>

    <p></p>
  syntax: public void updateMessage(final CloudQueueMessage message, final int visibilityTimeoutInSeconds, final EnumSet<MessageUpdateFields> messageUpdateFields, QueueRequestOptions options, OperationContext opContext)
  uid: com.microsoft.azure.storage.queue.CloudQueue.updateMessage(final CloudQueueMessage,final int,final EnumSet<MessageUpdateFields>,QueueRequestOptions,OperationContext)
- fullName: com.microsoft.azure.storage.queue.CloudQueue.uploadMetadata()
  name: uploadMetadata()
  nameWithType: CloudQueue.uploadMetadata()
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred during the operation. </p>
  summary: >-
    <p>Uploads the metadata in the  object to the queue.</p>

    <p></p>
  syntax: public void uploadMetadata()
  uid: com.microsoft.azure.storage.queue.CloudQueue.uploadMetadata()
- fullName: com.microsoft.azure.storage.queue.CloudQueue.uploadMetadata(QueueRequestOptions options, OperationContext opContext)
  name: uploadMetadata(QueueRequestOptions options, OperationContext opContext)
  nameWithType: CloudQueue.uploadMetadata(QueueRequestOptions options, OperationContext opContext)
  parameters:
  - description: <p>A <xref uid="com.microsoft.azure.storage.queue.QueueRequestOptions" data-throw-if-not-resolved="false" data-raw-source="QueueRequestOptions"></xref> object that specifies any additional options for the request. Specifying <code>null</code> will use the default request options from the associated service client ( <xref uid="com.microsoft.azure.storage.queue.CloudQueueClient" data-throw-if-not-resolved="false" data-raw-source="CloudQueueClient"></xref>).</p>
    name: options
    type: <xref href="com.microsoft.azure.storage.queue.QueueRequestOptions?alt=com.microsoft.azure.storage.queue.QueueRequestOptions&text=QueueRequestOptions" data-throw-if-not-resolved="False"/>
  - description: <p>An <xref uid="com.microsoft.azure.storage.OperationContext" data-throw-if-not-resolved="false" data-raw-source="OperationContext"></xref> object that represents the context for the current operation. This object is used to track requests to the storage service, and to provide additional runtime information about the operation.</p>
    name: opContext
    type: <xref href="com.microsoft.azure.storage.OperationContext?alt=com.microsoft.azure.storage.OperationContext&text=OperationContext" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred during the operation. </p>
  summary: >-
    <p>Uploads the metadata in the  object to the queue, using the specified request options and operation context.</p>

    <p></p>
  syntax: public void uploadMetadata(QueueRequestOptions options, OperationContext opContext)
  uid: com.microsoft.azure.storage.queue.CloudQueue.uploadMetadata(QueueRequestOptions,OperationContext)
- fullName: com.microsoft.azure.storage.queue.CloudQueue.uploadPermissions(final QueuePermissions permissions)
  name: uploadPermissions(final QueuePermissions permissions)
  nameWithType: CloudQueue.uploadPermissions(final QueuePermissions permissions)
  parameters:
  - description: <p>A <xref uid="com.microsoft.azure.storage.queue.QueuePermissions" data-throw-if-not-resolved="false" data-raw-source="QueuePermissions"></xref> object that represents the permissions to upload.</p>
    name: permissions
    type: final <xref href="com.microsoft.azure.storage.queue.QueuePermissions?alt=com.microsoft.azure.storage.queue.QueuePermissions&text=QueuePermissions" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  summary: >-
    <p>Uploads the queue's permissions.</p>

    <p></p>
  syntax: public void uploadPermissions(final QueuePermissions permissions)
  uid: com.microsoft.azure.storage.queue.CloudQueue.uploadPermissions(final QueuePermissions)
- fullName: com.microsoft.azure.storage.queue.CloudQueue.uploadPermissions(final QueuePermissions permissions, QueueRequestOptions options, OperationContext opContext)
  name: uploadPermissions(final QueuePermissions permissions, QueueRequestOptions options, OperationContext opContext)
  nameWithType: CloudQueue.uploadPermissions(final QueuePermissions permissions, QueueRequestOptions options, OperationContext opContext)
  parameters:
  - description: <p>A <xref uid="com.microsoft.azure.storage.queue.QueuePermissions" data-throw-if-not-resolved="false" data-raw-source="QueuePermissions"></xref> object that represents the permissions to upload. </p>
    name: permissions
    type: final <xref href="com.microsoft.azure.storage.queue.QueuePermissions?alt=com.microsoft.azure.storage.queue.QueuePermissions&text=QueuePermissions" data-throw-if-not-resolved="False"/>
  - description: <p>A <xref uid="com.microsoft.azure.storage.queue.QueueRequestOptions" data-throw-if-not-resolved="false" data-raw-source="QueueRequestOptions"></xref> object that specifies any additional options for the request. Specifying <code>null</code> will use the default request options from the associated service client ( <xref uid="com.microsoft.azure.storage.queue.CloudQueueClient" data-throw-if-not-resolved="false" data-raw-source="CloudQueueClient"></xref>). </p>
    name: options
    type: <xref href="com.microsoft.azure.storage.queue.QueueRequestOptions?alt=com.microsoft.azure.storage.queue.QueueRequestOptions&text=QueueRequestOptions" data-throw-if-not-resolved="False"/>
  - description: <p>An <xref uid="com.microsoft.azure.storage.OperationContext" data-throw-if-not-resolved="false" data-raw-source="OperationContext"></xref> object that represents the context for the current operation. This object is used to track requests to the storage service, and to provide additional runtime information about the operation.</p>
    name: opContext
    type: <xref href="com.microsoft.azure.storage.OperationContext?alt=com.microsoft.azure.storage.OperationContext&text=OperationContext" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  summary: >-
    <p>Uploads the queue's permissions using the specified request options and operation context.</p>

    <p></p>
  syntax: public void uploadPermissions(final QueuePermissions permissions, QueueRequestOptions options, OperationContext opContext)
  uid: com.microsoft.azure.storage.queue.CloudQueue.uploadPermissions(final QueuePermissions,QueueRequestOptions,OperationContext)
nameWithType: CloudQueue
syntax: public class CloudQueue
type: class
uid: com.microsoft.azure.storage.queue.CloudQueue
fullName: com.microsoft.azure.storage.queue.CloudQueue
name: CloudQueue
package: com.microsoft.azure.storage.queue
summary: <p>This class represents a queue in the Microsoft Azure Queue service. </p>
metadata: {}
