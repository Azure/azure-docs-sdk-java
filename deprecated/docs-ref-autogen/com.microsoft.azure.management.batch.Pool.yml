### YamlMime:JavaType
inheritedMembers:
- com.microsoft.azure.management.resources.fluentcore.arm.models.ExternalChildResource.id()
- com.microsoft.azure.management.resources.fluentcore.model.HasInner.inner()
- com.microsoft.azure.management.resources.fluentcore.model.Indexable.key()
- com.microsoft.azure.management.resources.fluentcore.arm.models.HasName.name()
- com.microsoft.azure.management.resources.fluentcore.arm.models.HasParent.parent()
- com.microsoft.azure.management.resources.fluentcore.model.Refreshable.refresh()
- com.microsoft.azure.management.resources.fluentcore.model.Refreshable.refreshAsync()
methods:
- fullName: com.microsoft.azure.management.batch.Pool.applicationLicenses()
  name: applicationLicenses()
  nameWithType: Pool.applicationLicenses()
  returns:
    description: <p>the applicationLicenses value </p>
    type: <xref href="List%3CString%3E?alt=List%3CString%3E&text=List%3CString%3E" data-throw-if-not-resolved="False"/>
  syntax: public List<String> applicationLicenses()
  uid: com.microsoft.azure.management.batch.Pool.applicationLicenses()
- fullName: com.microsoft.azure.management.batch.Pool.applicationPackages()
  name: applicationPackages()
  nameWithType: Pool.applicationPackages()
  returns:
    description: <p>the applicationPackages value </p>
    type: List&lt;<xref href="com.microsoft.azure.management.batch.ApplicationPackageReference?alt=com.microsoft.azure.management.batch.ApplicationPackageReference&text=ApplicationPackageReference" data-throw-if-not-resolved="False"/>&gt;
  syntax: public List<ApplicationPackageReference> applicationPackages()
  uid: com.microsoft.azure.management.batch.Pool.applicationPackages()
- fullName: com.microsoft.azure.management.batch.Pool.certificates()
  name: certificates()
  nameWithType: Pool.certificates()
  returns:
    description: <p>the certificates value </p>
    type: List&lt;<xref href="com.microsoft.azure.management.batch.CertificateReference?alt=com.microsoft.azure.management.batch.CertificateReference&text=CertificateReference" data-throw-if-not-resolved="False"/>&gt;
  syntax: public List<CertificateReference> certificates()
  uid: com.microsoft.azure.management.batch.Pool.certificates()
- fullName: com.microsoft.azure.management.batch.Pool.deploymentConfiguration()
  name: deploymentConfiguration()
  nameWithType: Pool.deploymentConfiguration()
  returns:
    description: <p>the deployment configuration value </p>
    type: <xref href="com.microsoft.azure.management.batch.DeploymentConfiguration?alt=com.microsoft.azure.management.batch.DeploymentConfiguration&text=DeploymentConfiguration" data-throw-if-not-resolved="False"/>
  syntax: public DeploymentConfiguration deploymentConfiguration()
  uid: com.microsoft.azure.management.batch.Pool.deploymentConfiguration()
- fullName: com.microsoft.azure.management.batch.Pool.displayName()
  name: displayName()
  nameWithType: Pool.displayName()
  returns:
    description: <p>the display name for the pool </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  syntax: public String displayName()
  uid: com.microsoft.azure.management.batch.Pool.displayName()
- fullName: com.microsoft.azure.management.batch.Pool.interNodeCommunication()
  name: interNodeCommunication()
  nameWithType: Pool.interNodeCommunication()
  returns:
    description: <p>the interNodeCommunication value </p>
    type: <xref href="com.microsoft.azure.management.batch.InterNodeCommunicationState?alt=com.microsoft.azure.management.batch.InterNodeCommunicationState&text=InterNodeCommunicationState" data-throw-if-not-resolved="False"/>
  syntax: public InterNodeCommunicationState interNodeCommunication()
  uid: com.microsoft.azure.management.batch.Pool.interNodeCommunication()
- fullName: com.microsoft.azure.management.batch.Pool.maxTasksPerNode()
  name: maxTasksPerNode()
  nameWithType: Pool.maxTasksPerNode()
  returns:
    description: <p>the maxTasksPerNode value </p>
    type: <xref href="Integer?alt=Integer&text=Integer" data-throw-if-not-resolved="False"/>
  syntax: public Integer maxTasksPerNode()
  uid: com.microsoft.azure.management.batch.Pool.maxTasksPerNode()
- fullName: com.microsoft.azure.management.batch.Pool.metadata()
  name: metadata()
  nameWithType: Pool.metadata()
  returns:
    description: <p>the metadata value </p>
    type: List&lt;<xref href="com.microsoft.azure.management.batch.MetadataItem?alt=com.microsoft.azure.management.batch.MetadataItem&text=MetadataItem" data-throw-if-not-resolved="False"/>&gt;
  syntax: public List<MetadataItem> metadata()
  uid: com.microsoft.azure.management.batch.Pool.metadata()
- fullName: com.microsoft.azure.management.batch.Pool.mountConfiguration()
  name: mountConfiguration()
  nameWithType: Pool.mountConfiguration()
  returns:
    description: <p>the mountConfiguration value </p>
    type: List&lt;<xref href="com.microsoft.azure.management.batch.MountConfiguration?alt=com.microsoft.azure.management.batch.MountConfiguration&text=MountConfiguration" data-throw-if-not-resolved="False"/>&gt;
  syntax: public List<MountConfiguration> mountConfiguration()
  uid: com.microsoft.azure.management.batch.Pool.mountConfiguration()
- fullName: com.microsoft.azure.management.batch.Pool.networkConfiguration()
  name: networkConfiguration()
  nameWithType: Pool.networkConfiguration()
  returns:
    description: <p>the networkConfiguration value </p>
    type: <xref href="com.microsoft.azure.management.batch.NetworkConfiguration?alt=com.microsoft.azure.management.batch.NetworkConfiguration&text=NetworkConfiguration" data-throw-if-not-resolved="False"/>
  syntax: public NetworkConfiguration networkConfiguration()
  uid: com.microsoft.azure.management.batch.Pool.networkConfiguration()
- fullName: com.microsoft.azure.management.batch.Pool.scaleSettings()
  name: scaleSettings()
  nameWithType: Pool.scaleSettings()
  returns:
    description: <p>the scaleSettings value </p>
    type: <xref href="com.microsoft.azure.management.batch.ScaleSettings?alt=com.microsoft.azure.management.batch.ScaleSettings&text=ScaleSettings" data-throw-if-not-resolved="False"/>
  syntax: public ScaleSettings scaleSettings()
  uid: com.microsoft.azure.management.batch.Pool.scaleSettings()
- fullName: com.microsoft.azure.management.batch.Pool.startTask()
  name: startTask()
  nameWithType: Pool.startTask()
  returns:
    description: <p>the startTask value </p>
    type: <xref href="com.microsoft.azure.management.batch.StartTask?alt=com.microsoft.azure.management.batch.StartTask&text=StartTask" data-throw-if-not-resolved="False"/>
  syntax: public StartTask startTask()
  uid: com.microsoft.azure.management.batch.Pool.startTask()
- fullName: com.microsoft.azure.management.batch.Pool.taskSchedulingPolicy()
  name: taskSchedulingPolicy()
  nameWithType: Pool.taskSchedulingPolicy()
  returns:
    description: <p>the taskSchedulingPolicy value </p>
    type: <xref href="com.microsoft.azure.management.batch.TaskSchedulingPolicy?alt=com.microsoft.azure.management.batch.TaskSchedulingPolicy&text=TaskSchedulingPolicy" data-throw-if-not-resolved="False"/>
  syntax: public TaskSchedulingPolicy taskSchedulingPolicy()
  uid: com.microsoft.azure.management.batch.Pool.taskSchedulingPolicy()
- fullName: com.microsoft.azure.management.batch.Pool.taskSlotsPerNode()
  name: taskSlotsPerNode()
  nameWithType: Pool.taskSlotsPerNode()
  returns:
    description: <p>the number of task slots that can be used to run concurrent tasks on a single compute node in the pool </p>
    type: <xref href="Integer?alt=Integer&text=Integer" data-throw-if-not-resolved="False"/>
  syntax: public Integer taskSlotsPerNode()
  uid: com.microsoft.azure.management.batch.Pool.taskSlotsPerNode()
- fullName: com.microsoft.azure.management.batch.Pool.userAccounts()
  name: userAccounts()
  nameWithType: Pool.userAccounts()
  returns:
    description: <p>the userAccounts value </p>
    type: List&lt;<xref href="com.microsoft.azure.management.batch.UserAccount?alt=com.microsoft.azure.management.batch.UserAccount&text=UserAccount" data-throw-if-not-resolved="False"/>&gt;
  syntax: public List<UserAccount> userAccounts()
  uid: com.microsoft.azure.management.batch.Pool.userAccounts()
- fullName: com.microsoft.azure.management.batch.Pool.vmSize()
  name: vmSize()
  nameWithType: Pool.vmSize()
  returns:
    description: <p>the size of virtual machine in the pool </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  syntax: public String vmSize()
  uid: com.microsoft.azure.management.batch.Pool.vmSize()
nameWithType: Pool
syntax: public interface Pool extends ExternalChildResource<Pool, BatchAccount>,HasInner<PoolInner>
type: interface
uid: com.microsoft.azure.management.batch.Pool
fullName: com.microsoft.azure.management.batch.Pool
name: Pool
package: com.microsoft.azure.management.batch
summary: <p>An immutable client-side representation of an Azure Batch account pool. </p>
metadata: {}
