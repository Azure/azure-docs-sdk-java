### YamlMime:JavaType
inheritedMembers:
- com.microsoft.azure.management.resources.fluentcore.arm.models.HasId.id()
- com.microsoft.azure.management.resources.fluentcore.model.HasInner.inner()
- com.microsoft.azure.management.resources.fluentcore.model.Indexable.key()
- com.microsoft.azure.management.resources.fluentcore.arm.models.HasManager.manager()
- com.microsoft.azure.management.resources.fluentcore.arm.models.HasName.name()
- com.microsoft.azure.management.resources.fluentcore.model.Refreshable.refresh()
- com.microsoft.azure.management.resources.fluentcore.model.Refreshable.refreshAsync()
- com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.region()
- com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.regionName()
- com.microsoft.azure.management.resources.fluentcore.arm.models.HasResourceGroup.resourceGroupName()
- com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.tags()
- com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.type()
- com.microsoft.azure.management.resources.fluentcore.model.Updatable.update()
methods:
- fullName: com.microsoft.azure.management.cosmosdb.CosmosDBAccount.consistencyPolicy()
  name: consistencyPolicy()
  nameWithType: CosmosDBAccount.consistencyPolicy()
  returns:
    description: <p>the consistency policy for the CosmosDB database account </p>
    type: <xref href="com.microsoft.azure.management.cosmosdb.ConsistencyPolicy?alt=com.microsoft.azure.management.cosmosdb.ConsistencyPolicy&text=ConsistencyPolicy" data-throw-if-not-resolved="False"/>
  syntax: public ConsistencyPolicy consistencyPolicy()
  uid: com.microsoft.azure.management.cosmosdb.CosmosDBAccount.consistencyPolicy()
- fullName: com.microsoft.azure.management.cosmosdb.CosmosDBAccount.databaseAccountOfferType()
  name: databaseAccountOfferType()
  nameWithType: CosmosDBAccount.databaseAccountOfferType()
  returns:
    description: <p>the offer type for the CosmosDB database account </p>
    type: <xref href="com.microsoft.azure.management.cosmosdb.DatabaseAccountOfferType?alt=com.microsoft.azure.management.cosmosdb.DatabaseAccountOfferType&text=DatabaseAccountOfferType" data-throw-if-not-resolved="False"/>
  syntax: public DatabaseAccountOfferType databaseAccountOfferType()
  uid: com.microsoft.azure.management.cosmosdb.CosmosDBAccount.databaseAccountOfferType()
- fullName: com.microsoft.azure.management.cosmosdb.CosmosDBAccount.defaultConsistencyLevel()
  name: defaultConsistencyLevel()
  nameWithType: CosmosDBAccount.defaultConsistencyLevel()
  returns:
    description: <p>the default consistency level for the CosmosDB database account </p>
    type: <xref href="com.microsoft.azure.management.cosmosdb.DefaultConsistencyLevel?alt=com.microsoft.azure.management.cosmosdb.DefaultConsistencyLevel&text=DefaultConsistencyLevel" data-throw-if-not-resolved="False"/>
  syntax: public DefaultConsistencyLevel defaultConsistencyLevel()
  uid: com.microsoft.azure.management.cosmosdb.CosmosDBAccount.defaultConsistencyLevel()
- fullName: com.microsoft.azure.management.cosmosdb.CosmosDBAccount.documentEndpoint()
  name: documentEndpoint()
  nameWithType: CosmosDBAccount.documentEndpoint()
  returns:
    description: <p>the connection endpoint for the CosmosDB database account </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  syntax: public String documentEndpoint()
  uid: com.microsoft.azure.management.cosmosdb.CosmosDBAccount.documentEndpoint()
- fullName: com.microsoft.azure.management.cosmosdb.CosmosDBAccount.ipRangeFilter()
  name: ipRangeFilter()
  nameWithType: CosmosDBAccount.ipRangeFilter()
  returns:
    description: <p>specifies the set of IP addresses or IP address ranges in CIDR form. </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  syntax: public String ipRangeFilter()
  uid: com.microsoft.azure.management.cosmosdb.CosmosDBAccount.ipRangeFilter()
- fullName: com.microsoft.azure.management.cosmosdb.CosmosDBAccount.kind()
  name: kind()
  nameWithType: CosmosDBAccount.kind()
  returns:
    description: <p>indicates the type of database account </p>
    type: <xref href="com.microsoft.azure.management.cosmosdb.DatabaseAccountKind?alt=com.microsoft.azure.management.cosmosdb.DatabaseAccountKind&text=DatabaseAccountKind" data-throw-if-not-resolved="False"/>
  syntax: public DatabaseAccountKind kind()
  uid: com.microsoft.azure.management.cosmosdb.CosmosDBAccount.kind()
- fullName: com.microsoft.azure.management.cosmosdb.CosmosDBAccount.listConnectionStrings()
  name: listConnectionStrings()
  nameWithType: CosmosDBAccount.listConnectionStrings()
  returns:
    description: <p>the connection strings for the specified Azure CosmosDB database account </p>
    type: <xref href="DatabaseAccountListConnectionStringsResult?alt=DatabaseAccountListConnectionStringsResult&text=DatabaseAccountListConnectionStringsResult" data-throw-if-not-resolved="False"/>
  syntax: public DatabaseAccountListConnectionStringsResult listConnectionStrings()
  uid: com.microsoft.azure.management.cosmosdb.CosmosDBAccount.listConnectionStrings()
- fullName: com.microsoft.azure.management.cosmosdb.CosmosDBAccount.listConnectionStringsAsync()
  name: listConnectionStringsAsync()
  nameWithType: CosmosDBAccount.listConnectionStringsAsync()
  returns:
    description: <p>the connection strings for the specified Azure CosmosDB database account </p>
    type: <xref href="Observable%3CDatabaseAccountListConnectionStringsResult%3E?alt=Observable%3CDatabaseAccountListConnectionStringsResult%3E&text=Observable%3CDatabaseAccountListConnectionStringsResult%3E" data-throw-if-not-resolved="False"/>
  syntax: public Observable<DatabaseAccountListConnectionStringsResult> listConnectionStringsAsync()
  uid: com.microsoft.azure.management.cosmosdb.CosmosDBAccount.listConnectionStringsAsync()
- fullName: com.microsoft.azure.management.cosmosdb.CosmosDBAccount.listKeys()
  name: listKeys()
  nameWithType: CosmosDBAccount.listKeys()
  returns:
    description: <p>the access keys for the specified Azure CosmosDB database account </p>
    type: <xref href="DatabaseAccountListKeysResult?alt=DatabaseAccountListKeysResult&text=DatabaseAccountListKeysResult" data-throw-if-not-resolved="False"/>
  syntax: public DatabaseAccountListKeysResult listKeys()
  uid: com.microsoft.azure.management.cosmosdb.CosmosDBAccount.listKeys()
- fullName: com.microsoft.azure.management.cosmosdb.CosmosDBAccount.listKeysAsync()
  name: listKeysAsync()
  nameWithType: CosmosDBAccount.listKeysAsync()
  returns:
    description: <p>the access keys for the specified Azure CosmosDB database account </p>
    type: <xref href="Observable%3CDatabaseAccountListKeysResult%3E?alt=Observable%3CDatabaseAccountListKeysResult%3E&text=Observable%3CDatabaseAccountListKeysResult%3E" data-throw-if-not-resolved="False"/>
  syntax: public Observable<DatabaseAccountListKeysResult> listKeysAsync()
  uid: com.microsoft.azure.management.cosmosdb.CosmosDBAccount.listKeysAsync()
- fullName: com.microsoft.azure.management.cosmosdb.CosmosDBAccount.readableReplications()
  name: readableReplications()
  nameWithType: CosmosDBAccount.readableReplications()
  returns:
    description: <p>an array that contains the readable georeplication locations enabled for the CosmosDB account </p>
    type: List&lt;<xref href="com.microsoft.azure.management.cosmosdb.Location?alt=com.microsoft.azure.management.cosmosdb.Location&text=Location" data-throw-if-not-resolved="False"/>&gt;
  syntax: public List<Location> readableReplications()
  uid: com.microsoft.azure.management.cosmosdb.CosmosDBAccount.readableReplications()
- fullName: com.microsoft.azure.management.cosmosdb.CosmosDBAccount.regenerateKey(KeyKind keyKind)
  name: regenerateKey(KeyKind keyKind)
  nameWithType: CosmosDBAccount.regenerateKey(KeyKind keyKind)
  parameters:
  - description: <p>the key kind </p>
    name: keyKind
    type: <xref href="com.microsoft.azure.management.cosmosdb.KeyKind?alt=com.microsoft.azure.management.cosmosdb.KeyKind&text=KeyKind" data-throw-if-not-resolved="False"/>
  syntax: public void regenerateKey(KeyKind keyKind)
  uid: com.microsoft.azure.management.cosmosdb.CosmosDBAccount.regenerateKey(KeyKind)
- fullName: com.microsoft.azure.management.cosmosdb.CosmosDBAccount.regenerateKeyAsync(KeyKind keyKind)
  name: regenerateKeyAsync(KeyKind keyKind)
  nameWithType: CosmosDBAccount.regenerateKeyAsync(KeyKind keyKind)
  parameters:
  - description: <p>the key kind </p>
    name: keyKind
    type: <xref href="com.microsoft.azure.management.cosmosdb.KeyKind?alt=com.microsoft.azure.management.cosmosdb.KeyKind&text=KeyKind" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the ServiceResponse object if successful. </p>
    type: <xref href="Observable%3CVoid%3E?alt=Observable%3CVoid%3E&text=Observable%3CVoid%3E" data-throw-if-not-resolved="False"/>
  syntax: public Observable<Void> regenerateKeyAsync(KeyKind keyKind)
  uid: com.microsoft.azure.management.cosmosdb.CosmosDBAccount.regenerateKeyAsync(KeyKind)
- fullName: com.microsoft.azure.management.cosmosdb.CosmosDBAccount.writableReplications()
  name: writableReplications()
  nameWithType: CosmosDBAccount.writableReplications()
  returns:
    description: <p>an array that contains the writable georeplication locations enabled for the CosmosDB account </p>
    type: List&lt;<xref href="com.microsoft.azure.management.cosmosdb.Location?alt=com.microsoft.azure.management.cosmosdb.Location&text=Location" data-throw-if-not-resolved="False"/>&gt;
  syntax: public List<Location> writableReplications()
  uid: com.microsoft.azure.management.cosmosdb.CosmosDBAccount.writableReplications()
nameWithType: CosmosDBAccount
syntax: public interface CosmosDBAccount extends GroupableResource<CosmosDBManager, DatabaseAccountInner>,Refreshable<CosmosDBAccount>,Updatable<CosmosDBAccount.Update>
type: interface
uid: com.microsoft.azure.management.cosmosdb.CosmosDBAccount
fullName: com.microsoft.azure.management.cosmosdb.CosmosDBAccount
name: CosmosDBAccount
package: com.microsoft.azure.management.cosmosdb
summary: <p>An immutable client-side representation of an Azure Cosmos DB. </p>
metadata: {}
