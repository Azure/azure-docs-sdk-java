### YamlMime:JavaType
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
- <xref href="com.microsoft.azure.batch.IInheritedBehaviors?alt=com.microsoft.azure.batch.IInheritedBehaviors&text=IInheritedBehaviors" data-throw-if-not-resolved="False"/>
methods:
- fullName: com.microsoft.azure.batch.FileOperations.customBehaviors()
  name: customBehaviors()
  nameWithType: FileOperations.customBehaviors()
  overridden: com.microsoft.azure.batch.IInheritedBehaviors.customBehaviors()
  returns:
    description: <p>A collection of <xref uid="com.microsoft.azure.batch.BatchClientBehavior" data-throw-if-not-resolved="false" data-raw-source="BatchClientBehavior"></xref> instances. </p>
    type: Collection&lt;<xref href="com.microsoft.azure.batch.BatchClientBehavior?alt=com.microsoft.azure.batch.BatchClientBehavior&text=BatchClientBehavior" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Gets a collection of behaviors that modify or customize requests to the Batch service.</p>

    <p></p>
  syntax: public Collection<BatchClientBehavior> customBehaviors()
  uid: com.microsoft.azure.batch.FileOperations.customBehaviors()
- fullName: com.microsoft.azure.batch.FileOperations.deleteFileFromComputeNode(String poolId, String nodeId, String fileName)
  name: deleteFileFromComputeNode(String poolId, String nodeId, String fileName)
  nameWithType: FileOperations.deleteFileFromComputeNode(String poolId, String nodeId, String fileName)
  parameters:
  - description: <p>The ID of the pool that contains the compute node. </p>
    name: poolId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The ID of the compute node. </p>
    name: nodeId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the file to delete. </p>
    name: fileName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="BatchErrorException?alt=BatchErrorException&text=BatchErrorException" data-throw-if-not-resolved="False"/>
    description: <p>Exception thrown when an error response is received from the Batch service. </p>
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
    description: <p>Exception thrown when there is an error in serialization/deserialization of data sent to/received from the Batch service. </p>
  summary: >-
    <p>Deletes the specified file from the specified compute node.</p>

    <p></p>
  syntax: public void deleteFileFromComputeNode(String poolId, String nodeId, String fileName)
  uid: com.microsoft.azure.batch.FileOperations.deleteFileFromComputeNode(String,String,String)
- fullName: com.microsoft.azure.batch.FileOperations.deleteFileFromComputeNode(String poolId, String nodeId, String fileName, Boolean recursive)
  name: deleteFileFromComputeNode(String poolId, String nodeId, String fileName, Boolean recursive)
  nameWithType: FileOperations.deleteFileFromComputeNode(String poolId, String nodeId, String fileName, Boolean recursive)
  parameters:
  - description: <p>The ID of the pool that contains the compute node. </p>
    name: poolId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The ID of the compute node. </p>
    name: nodeId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the file to delete. </p>
    name: fileName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>If the file-path parameter represents a directory instead of a file, you can set the recursive parameter to true to delete the directory and all of the files and subdirectories in it. If recursive is false or null, then the directory must be empty or deletion will fail. </p>
    name: recursive
    type: <xref href="Boolean?alt=Boolean&text=Boolean" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="BatchErrorException?alt=BatchErrorException&text=BatchErrorException" data-throw-if-not-resolved="False"/>
    description: <p>Exception thrown when an error response is received from the Batch service. </p>
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
    description: <p>Exception thrown when there is an error in serialization/deserialization of data sent to/received from the Batch service. </p>
  summary: >-
    <p>Deletes the specified file from the specified compute node.</p>

    <p></p>
  syntax: public void deleteFileFromComputeNode(String poolId, String nodeId, String fileName, Boolean recursive)
  uid: com.microsoft.azure.batch.FileOperations.deleteFileFromComputeNode(String,String,String,Boolean)
- fullName: com.microsoft.azure.batch.FileOperations.deleteFileFromComputeNode(String poolId, String nodeId, String fileName, Boolean recursive, Iterable<BatchClientBehavior> additionalBehaviors)
  name: deleteFileFromComputeNode(String poolId, String nodeId, String fileName, Boolean recursive, Iterable<BatchClientBehavior> additionalBehaviors)
  nameWithType: FileOperations.deleteFileFromComputeNode(String poolId, String nodeId, String fileName, Boolean recursive, Iterable<BatchClientBehavior> additionalBehaviors)
  parameters:
  - description: <p>The ID of the pool that contains the compute node. </p>
    name: poolId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The ID of the compute node. </p>
    name: nodeId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the file to delete. </p>
    name: fileName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>If the file-path parameter represents a directory instead of a file, you can set the recursive parameter to true to delete the directory and all of the files and subdirectories in it. If recursive is false or null, then the directory must be empty or deletion will fail. </p>
    name: recursive
    type: <xref href="Boolean?alt=Boolean&text=Boolean" data-throw-if-not-resolved="False"/>
  - description: <p>A collection of <xref uid="com.microsoft.azure.batch.BatchClientBehavior" data-throw-if-not-resolved="false" data-raw-source="BatchClientBehavior"></xref> instances that are applied to the Batch service request. </p>
    name: additionalBehaviors
    type: Iterable&lt;<xref href="com.microsoft.azure.batch.BatchClientBehavior?alt=com.microsoft.azure.batch.BatchClientBehavior&text=BatchClientBehavior" data-throw-if-not-resolved="False"/>&gt;
  exceptions:
  - type: <xref href="BatchErrorException?alt=BatchErrorException&text=BatchErrorException" data-throw-if-not-resolved="False"/>
    description: <p>Exception thrown when an error response is received from the Batch service. </p>
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
    description: <p>Exception thrown when there is an error in serialization/deserialization of data sent to/received from the Batch service. </p>
  summary: >-
    <p>Deletes the specified file from the specified compute node.</p>

    <p></p>
  syntax: public void deleteFileFromComputeNode(String poolId, String nodeId, String fileName, Boolean recursive, Iterable<BatchClientBehavior> additionalBehaviors)
  uid: com.microsoft.azure.batch.FileOperations.deleteFileFromComputeNode(String,String,String,Boolean,Iterable<BatchClientBehavior>)
- fullName: com.microsoft.azure.batch.FileOperations.deleteFileFromTask(String jobId, String taskId, String fileName)
  name: deleteFileFromTask(String jobId, String taskId, String fileName)
  nameWithType: FileOperations.deleteFileFromTask(String jobId, String taskId, String fileName)
  parameters:
  - description: <p>The ID of the job containing the task. </p>
    name: jobId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The ID of the task. </p>
    name: taskId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the file to delete. </p>
    name: fileName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="BatchErrorException?alt=BatchErrorException&text=BatchErrorException" data-throw-if-not-resolved="False"/>
    description: <p>Exception thrown when an error response is received from the Batch service. </p>
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
    description: <p>Exception thrown when there is an error in serialization/deserialization of data sent to/received from the Batch service. </p>
  summary: >-
    <p>Deletes the specified file from the specified task's directory on its compute node.</p>

    <p></p>
  syntax: public void deleteFileFromTask(String jobId, String taskId, String fileName)
  uid: com.microsoft.azure.batch.FileOperations.deleteFileFromTask(String,String,String)
- fullName: com.microsoft.azure.batch.FileOperations.deleteFileFromTask(String jobId, String taskId, String fileName, Boolean recursive)
  name: deleteFileFromTask(String jobId, String taskId, String fileName, Boolean recursive)
  nameWithType: FileOperations.deleteFileFromTask(String jobId, String taskId, String fileName, Boolean recursive)
  parameters:
  - description: <p>The ID of the job containing the task. </p>
    name: jobId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The ID of the task. </p>
    name: taskId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the file to delete. </p>
    name: fileName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>If the file-path parameter represents a directory instead of a file, you can set the recursive parameter to true to delete the directory and all of the files and subdirectories in it. If recursive is false or null, then the directory must be empty or deletion will fail. </p>
    name: recursive
    type: <xref href="Boolean?alt=Boolean&text=Boolean" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="BatchErrorException?alt=BatchErrorException&text=BatchErrorException" data-throw-if-not-resolved="False"/>
    description: <p>Exception thrown when an error response is received from the Batch service. </p>
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
    description: <p>Exception thrown when there is an error in serialization/deserialization of data sent to/received from the Batch service. </p>
  summary: >-
    <p>Deletes the specified file from the specified task's directory on its compute node.</p>

    <p></p>
  syntax: public void deleteFileFromTask(String jobId, String taskId, String fileName, Boolean recursive)
  uid: com.microsoft.azure.batch.FileOperations.deleteFileFromTask(String,String,String,Boolean)
- fullName: com.microsoft.azure.batch.FileOperations.deleteFileFromTask(String jobId, String taskId, String fileName, Boolean recursive, Iterable<BatchClientBehavior> additionalBehaviors)
  name: deleteFileFromTask(String jobId, String taskId, String fileName, Boolean recursive, Iterable<BatchClientBehavior> additionalBehaviors)
  nameWithType: FileOperations.deleteFileFromTask(String jobId, String taskId, String fileName, Boolean recursive, Iterable<BatchClientBehavior> additionalBehaviors)
  parameters:
  - description: <p>The ID of the job containing the task. </p>
    name: jobId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The ID of the task. </p>
    name: taskId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the file to delete. </p>
    name: fileName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>If the file-path parameter represents a directory instead of a file, you can set the recursive parameter to true to delete the directory and all of the files and subdirectories in it. If recursive is false or null, then the directory must be empty or deletion will fail. </p>
    name: recursive
    type: <xref href="Boolean?alt=Boolean&text=Boolean" data-throw-if-not-resolved="False"/>
  - description: <p>A collection of <xref uid="com.microsoft.azure.batch.BatchClientBehavior" data-throw-if-not-resolved="false" data-raw-source="BatchClientBehavior"></xref> instances that are applied to the Batch service request. </p>
    name: additionalBehaviors
    type: Iterable&lt;<xref href="com.microsoft.azure.batch.BatchClientBehavior?alt=com.microsoft.azure.batch.BatchClientBehavior&text=BatchClientBehavior" data-throw-if-not-resolved="False"/>&gt;
  exceptions:
  - type: <xref href="BatchErrorException?alt=BatchErrorException&text=BatchErrorException" data-throw-if-not-resolved="False"/>
    description: <p>Exception thrown when an error response is received from the Batch service. </p>
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
    description: <p>Exception thrown when there is an error in serialization/deserialization of data sent to/received from the Batch service. </p>
  summary: >-
    <p>Deletes the specified file from the specified task's directory on its compute node.</p>

    <p></p>
  syntax: public void deleteFileFromTask(String jobId, String taskId, String fileName, Boolean recursive, Iterable<BatchClientBehavior> additionalBehaviors)
  uid: com.microsoft.azure.batch.FileOperations.deleteFileFromTask(String,String,String,Boolean,Iterable<BatchClientBehavior>)
- fullName: com.microsoft.azure.batch.FileOperations.getFileFromComputeNode(String poolId, String nodeId, String fileName, Iterable<BatchClientBehavior> additionalBehaviors, OutputStream outputStream)
  name: getFileFromComputeNode(String poolId, String nodeId, String fileName, Iterable<BatchClientBehavior> additionalBehaviors, OutputStream outputStream)
  nameWithType: FileOperations.getFileFromComputeNode(String poolId, String nodeId, String fileName, Iterable<BatchClientBehavior> additionalBehaviors, OutputStream outputStream)
  parameters:
  - description: <p>The ID of the pool that contains the compute node. </p>
    name: poolId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The ID of the compute node. </p>
    name: nodeId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the file to download. </p>
    name: fileName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>A collection of <xref uid="com.microsoft.azure.batch.BatchClientBehavior" data-throw-if-not-resolved="false" data-raw-source="BatchClientBehavior"></xref> instances that are applied to the Batch service request. </p>
    name: additionalBehaviors
    type: Iterable&lt;<xref href="com.microsoft.azure.batch.BatchClientBehavior?alt=com.microsoft.azure.batch.BatchClientBehavior&text=BatchClientBehavior" data-throw-if-not-resolved="False"/>&gt;
  - description: <p>A stream into which the file contents will be written. </p>
    name: outputStream
    type: <xref href="OutputStream?alt=OutputStream&text=OutputStream" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="BatchErrorException?alt=BatchErrorException&text=BatchErrorException" data-throw-if-not-resolved="False"/>
    description: <p>Exception thrown when an error response is received from the Batch service. </p>
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
    description: <p>Exception thrown when there is an error in serialization/deserialization of data sent to/received from the Batch service. </p>
  summary: >-
    <p>Downloads the specified file from the specified compute node.</p>

    <p></p>
  syntax: public void getFileFromComputeNode(String poolId, String nodeId, String fileName, Iterable<BatchClientBehavior> additionalBehaviors, OutputStream outputStream)
  uid: com.microsoft.azure.batch.FileOperations.getFileFromComputeNode(String,String,String,Iterable<BatchClientBehavior>,OutputStream)
- fullName: com.microsoft.azure.batch.FileOperations.getFileFromComputeNode(String poolId, String nodeId, String fileName, OutputStream outputStream)
  name: getFileFromComputeNode(String poolId, String nodeId, String fileName, OutputStream outputStream)
  nameWithType: FileOperations.getFileFromComputeNode(String poolId, String nodeId, String fileName, OutputStream outputStream)
  parameters:
  - description: <p>The ID of the pool that contains the compute node. </p>
    name: poolId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The ID of the compute node. </p>
    name: nodeId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the file to download. </p>
    name: fileName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>A stream into which the file contents will be written. </p>
    name: outputStream
    type: <xref href="OutputStream?alt=OutputStream&text=OutputStream" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="BatchErrorException?alt=BatchErrorException&text=BatchErrorException" data-throw-if-not-resolved="False"/>
    description: <p>Exception thrown when an error response is received from the Batch service. </p>
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
    description: <p>Exception thrown when there is an error in serialization/deserialization of data sent to/received from the Batch service. </p>
  summary: >-
    <p>Downloads the specified file from the specified compute node.</p>

    <p></p>
  syntax: public void getFileFromComputeNode(String poolId, String nodeId, String fileName, OutputStream outputStream)
  uid: com.microsoft.azure.batch.FileOperations.getFileFromComputeNode(String,String,String,OutputStream)
- fullName: com.microsoft.azure.batch.FileOperations.getFileFromTask(String jobId, String taskId, String fileName, Iterable<BatchClientBehavior> additionalBehaviors, OutputStream outputStream)
  name: getFileFromTask(String jobId, String taskId, String fileName, Iterable<BatchClientBehavior> additionalBehaviors, OutputStream outputStream)
  nameWithType: FileOperations.getFileFromTask(String jobId, String taskId, String fileName, Iterable<BatchClientBehavior> additionalBehaviors, OutputStream outputStream)
  parameters:
  - description: <p>The ID of the job containing the task. </p>
    name: jobId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The ID of the task. </p>
    name: taskId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the file to download. </p>
    name: fileName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>A collection of <xref uid="com.microsoft.azure.batch.BatchClientBehavior" data-throw-if-not-resolved="false" data-raw-source="BatchClientBehavior"></xref> instances that are applied to the Batch service request. </p>
    name: additionalBehaviors
    type: Iterable&lt;<xref href="com.microsoft.azure.batch.BatchClientBehavior?alt=com.microsoft.azure.batch.BatchClientBehavior&text=BatchClientBehavior" data-throw-if-not-resolved="False"/>&gt;
  - description: <p>A stream into which the file contents will be written. </p>
    name: outputStream
    type: <xref href="OutputStream?alt=OutputStream&text=OutputStream" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="BatchErrorException?alt=BatchErrorException&text=BatchErrorException" data-throw-if-not-resolved="False"/>
    description: <p>Exception thrown when an error response is received from the Batch service. </p>
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
    description: <p>Exception thrown when there is an error in serialization/deserialization of data sent to/received from the Batch service. </p>
  summary: >-
    <p>Downloads the specified file from the specified task's directory on its compute node.</p>

    <p></p>
  syntax: public void getFileFromTask(String jobId, String taskId, String fileName, Iterable<BatchClientBehavior> additionalBehaviors, OutputStream outputStream)
  uid: com.microsoft.azure.batch.FileOperations.getFileFromTask(String,String,String,Iterable<BatchClientBehavior>,OutputStream)
- fullName: com.microsoft.azure.batch.FileOperations.getFileFromTask(String jobId, String taskId, String fileName, OutputStream outputStream)
  name: getFileFromTask(String jobId, String taskId, String fileName, OutputStream outputStream)
  nameWithType: FileOperations.getFileFromTask(String jobId, String taskId, String fileName, OutputStream outputStream)
  parameters:
  - description: <p>The ID of the job containing the task. </p>
    name: jobId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The ID of the task. </p>
    name: taskId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the file to download. </p>
    name: fileName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>A stream into which the file contents will be written. </p>
    name: outputStream
    type: <xref href="OutputStream?alt=OutputStream&text=OutputStream" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="BatchErrorException?alt=BatchErrorException&text=BatchErrorException" data-throw-if-not-resolved="False"/>
    description: <p>Exception thrown when an error response is received from the Batch service. </p>
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
    description: <p>Exception thrown when there is an error in serialization/deserialization of data sent to/received from the Batch service. </p>
  summary: >-
    <p>Downloads the specified file from the specified task's directory on its compute node.</p>

    <p></p>
  syntax: public void getFileFromTask(String jobId, String taskId, String fileName, OutputStream outputStream)
  uid: com.microsoft.azure.batch.FileOperations.getFileFromTask(String,String,String,OutputStream)
- fullName: com.microsoft.azure.batch.FileOperations.getFilePropertiesFromComputeNode(String poolId, String nodeId, String fileName)
  name: getFilePropertiesFromComputeNode(String poolId, String nodeId, String fileName)
  nameWithType: FileOperations.getFilePropertiesFromComputeNode(String poolId, String nodeId, String fileName)
  parameters:
  - description: <p>The ID of the pool that contains the compute node. </p>
    name: poolId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the ID of the compute node. </p>
    name: nodeId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the file to retrieve. </p>
    name: fileName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="BatchErrorException?alt=BatchErrorException&text=BatchErrorException" data-throw-if-not-resolved="False"/>
    description: <p>Exception thrown when an error response is received from the Batch service. </p>
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
    description: <p>Exception thrown when there is an error in serialization/deserialization of data sent to/received from the Batch service. </p>
  returns:
    description: <p>A <xref uid="" data-throw-if-not-resolved="false" data-raw-source="FileProperties"></xref> instance containing information about the file. </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.FileProperties?alt=com.microsoft.azure.batch.protocol.models.FileProperties&text=FileProperties" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets information about a file on a compute node.</p>

    <p></p>
  syntax: public FileProperties getFilePropertiesFromComputeNode(String poolId, String nodeId, String fileName)
  uid: com.microsoft.azure.batch.FileOperations.getFilePropertiesFromComputeNode(String,String,String)
- fullName: com.microsoft.azure.batch.FileOperations.getFilePropertiesFromComputeNode(String poolId, String nodeId, String fileName, Iterable<BatchClientBehavior> additionalBehaviors)
  name: getFilePropertiesFromComputeNode(String poolId, String nodeId, String fileName, Iterable<BatchClientBehavior> additionalBehaviors)
  nameWithType: FileOperations.getFilePropertiesFromComputeNode(String poolId, String nodeId, String fileName, Iterable<BatchClientBehavior> additionalBehaviors)
  parameters:
  - description: <p>The ID of the pool that contains the compute node. </p>
    name: poolId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the ID of the compute node. </p>
    name: nodeId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the file to retrieve. </p>
    name: fileName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>A collection of <xref uid="com.microsoft.azure.batch.BatchClientBehavior" data-throw-if-not-resolved="false" data-raw-source="BatchClientBehavior"></xref> instances that are applied to the Batch service request. </p>
    name: additionalBehaviors
    type: Iterable&lt;<xref href="com.microsoft.azure.batch.BatchClientBehavior?alt=com.microsoft.azure.batch.BatchClientBehavior&text=BatchClientBehavior" data-throw-if-not-resolved="False"/>&gt;
  exceptions:
  - type: <xref href="BatchErrorException?alt=BatchErrorException&text=BatchErrorException" data-throw-if-not-resolved="False"/>
    description: <p>Exception thrown when an error response is received from the Batch service. </p>
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
    description: <p>Exception thrown when there is an error in serialization/deserialization of data sent to/received from the Batch service. </p>
  returns:
    description: <p>A <xref uid="" data-throw-if-not-resolved="false" data-raw-source="FileProperties"></xref> instance containing information about the file. </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.FileProperties?alt=com.microsoft.azure.batch.protocol.models.FileProperties&text=FileProperties" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets information about a file on a compute node.</p>

    <p></p>
  syntax: public FileProperties getFilePropertiesFromComputeNode(String poolId, String nodeId, String fileName, Iterable<BatchClientBehavior> additionalBehaviors)
  uid: com.microsoft.azure.batch.FileOperations.getFilePropertiesFromComputeNode(String,String,String,Iterable<BatchClientBehavior>)
- fullName: com.microsoft.azure.batch.FileOperations.getFilePropertiesFromTask(String jobId, String taskId, String fileName)
  name: getFilePropertiesFromTask(String jobId, String taskId, String fileName)
  nameWithType: FileOperations.getFilePropertiesFromTask(String jobId, String taskId, String fileName)
  parameters:
  - description: <p>The ID of the job containing the task. </p>
    name: jobId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The ID of the task. </p>
    name: taskId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the file to retrieve. </p>
    name: fileName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="BatchErrorException?alt=BatchErrorException&text=BatchErrorException" data-throw-if-not-resolved="False"/>
    description: <p>Exception thrown when an error response is received from the Batch service. </p>
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
    description: <p>Exception thrown when there is an error in serialization/deserialization of data sent to/received from the Batch service. </p>
  returns:
    description: <p>A <xref uid="" data-throw-if-not-resolved="false" data-raw-source="FileProperties"></xref> instance containing information about the file. </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.FileProperties?alt=com.microsoft.azure.batch.protocol.models.FileProperties&text=FileProperties" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets information about a file from the specified task's directory on its compute node.</p>

    <p></p>
  syntax: public FileProperties getFilePropertiesFromTask(String jobId, String taskId, String fileName)
  uid: com.microsoft.azure.batch.FileOperations.getFilePropertiesFromTask(String,String,String)
- fullName: com.microsoft.azure.batch.FileOperations.getFilePropertiesFromTask(String jobId, String taskId, String fileName, Iterable<BatchClientBehavior> additionalBehaviors)
  name: getFilePropertiesFromTask(String jobId, String taskId, String fileName, Iterable<BatchClientBehavior> additionalBehaviors)
  nameWithType: FileOperations.getFilePropertiesFromTask(String jobId, String taskId, String fileName, Iterable<BatchClientBehavior> additionalBehaviors)
  parameters:
  - description: <p>The ID of the job containing the task. </p>
    name: jobId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The ID of the task. </p>
    name: taskId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the file to retrieve. </p>
    name: fileName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>A collection of <xref uid="com.microsoft.azure.batch.BatchClientBehavior" data-throw-if-not-resolved="false" data-raw-source="BatchClientBehavior"></xref> instances that are applied to the Batch service request. </p>
    name: additionalBehaviors
    type: Iterable&lt;<xref href="com.microsoft.azure.batch.BatchClientBehavior?alt=com.microsoft.azure.batch.BatchClientBehavior&text=BatchClientBehavior" data-throw-if-not-resolved="False"/>&gt;
  exceptions:
  - type: <xref href="BatchErrorException?alt=BatchErrorException&text=BatchErrorException" data-throw-if-not-resolved="False"/>
    description: <p>Exception thrown when an error response is received from the Batch service. </p>
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
    description: <p>Exception thrown when there is an error in serialization/deserialization of data sent to/received from the Batch service. </p>
  returns:
    description: <p>A <xref uid="" data-throw-if-not-resolved="false" data-raw-source="FileProperties"></xref> instance containing information about the file. </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.FileProperties?alt=com.microsoft.azure.batch.protocol.models.FileProperties&text=FileProperties" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets information about a file from the specified task's directory on its compute node.</p>

    <p></p>
  syntax: public FileProperties getFilePropertiesFromTask(String jobId, String taskId, String fileName, Iterable<BatchClientBehavior> additionalBehaviors)
  uid: com.microsoft.azure.batch.FileOperations.getFilePropertiesFromTask(String,String,String,Iterable<BatchClientBehavior>)
- fullName: com.microsoft.azure.batch.FileOperations.listFilesFromComputeNode(String poolId, String nodeId)
  name: listFilesFromComputeNode(String poolId, String nodeId)
  nameWithType: FileOperations.listFilesFromComputeNode(String poolId, String nodeId)
  parameters:
  - description: <p>The ID of the pool that contains the compute node. </p>
    name: poolId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The ID of the compute node. </p>
    name: nodeId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="BatchErrorException?alt=BatchErrorException&text=BatchErrorException" data-throw-if-not-resolved="False"/>
    description: <p>Exception thrown when an error response is received from the Batch service. </p>
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
    description: <p>Exception thrown when there is an error in serialization/deserialization of data sent to/received from the Batch service. </p>
  returns:
    description: <p>A list of <xref uid="" data-throw-if-not-resolved="false" data-raw-source="NodeFile"></xref> objects. </p>
    type: PagedList&lt;<xref href="com.microsoft.azure.batch.protocol.models.NodeFile?alt=com.microsoft.azure.batch.protocol.models.NodeFile&text=NodeFile" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Lists files on the specified compute node.</p>

    <p></p>
  syntax: public PagedList<NodeFile> listFilesFromComputeNode(String poolId, String nodeId)
  uid: com.microsoft.azure.batch.FileOperations.listFilesFromComputeNode(String,String)
- fullName: com.microsoft.azure.batch.FileOperations.listFilesFromComputeNode(String poolId, String nodeId, Boolean recursive, DetailLevel detailLevel)
  name: listFilesFromComputeNode(String poolId, String nodeId, Boolean recursive, DetailLevel detailLevel)
  nameWithType: FileOperations.listFilesFromComputeNode(String poolId, String nodeId, Boolean recursive, DetailLevel detailLevel)
  parameters:
  - description: <p>The ID of the pool that contains the compute node. </p>
    name: poolId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The ID of the compute node. </p>
    name: nodeId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>If true, recursively lists all files on the compute node. If false or null, lists only the files in the compute node root directory. </p>
    name: recursive
    type: <xref href="Boolean?alt=Boolean&text=Boolean" data-throw-if-not-resolved="False"/>
  - description: <p>A <xref uid="com.microsoft.azure.batch.DetailLevel" data-throw-if-not-resolved="false" data-raw-source="DetailLevel"></xref> used for filtering the list and for controlling which properties are retrieved from the service. </p>
    name: detailLevel
    type: <xref href="com.microsoft.azure.batch.DetailLevel?alt=com.microsoft.azure.batch.DetailLevel&text=DetailLevel" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="BatchErrorException?alt=BatchErrorException&text=BatchErrorException" data-throw-if-not-resolved="False"/>
    description: <p>Exception thrown when an error response is received from the Batch service. </p>
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
    description: <p>Exception thrown when there is an error in serialization/deserialization of data sent to/received from the Batch service. </p>
  returns:
    description: <p>A list of <xref uid="" data-throw-if-not-resolved="false" data-raw-source="NodeFile"></xref> objects. </p>
    type: PagedList&lt;<xref href="com.microsoft.azure.batch.protocol.models.NodeFile?alt=com.microsoft.azure.batch.protocol.models.NodeFile&text=NodeFile" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Lists files on the specified compute node.</p>

    <p></p>
  syntax: public PagedList<NodeFile> listFilesFromComputeNode(String poolId, String nodeId, Boolean recursive, DetailLevel detailLevel)
  uid: com.microsoft.azure.batch.FileOperations.listFilesFromComputeNode(String,String,Boolean,DetailLevel)
- fullName: com.microsoft.azure.batch.FileOperations.listFilesFromComputeNode(String poolId, String nodeId, Boolean recursive, DetailLevel detailLevel, Iterable<BatchClientBehavior> additionalBehaviors)
  name: listFilesFromComputeNode(String poolId, String nodeId, Boolean recursive, DetailLevel detailLevel, Iterable<BatchClientBehavior> additionalBehaviors)
  nameWithType: FileOperations.listFilesFromComputeNode(String poolId, String nodeId, Boolean recursive, DetailLevel detailLevel, Iterable<BatchClientBehavior> additionalBehaviors)
  parameters:
  - description: <p>The ID of the pool that contains the compute node. </p>
    name: poolId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The ID of the compute node. </p>
    name: nodeId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>If true, recursively lists all files on the compute node. If false or null, lists only the files in the compute node root directory. </p>
    name: recursive
    type: <xref href="Boolean?alt=Boolean&text=Boolean" data-throw-if-not-resolved="False"/>
  - description: <p>A <xref uid="com.microsoft.azure.batch.DetailLevel" data-throw-if-not-resolved="false" data-raw-source="DetailLevel"></xref> used for filtering the list and for controlling which properties are retrieved from the service. </p>
    name: detailLevel
    type: <xref href="com.microsoft.azure.batch.DetailLevel?alt=com.microsoft.azure.batch.DetailLevel&text=DetailLevel" data-throw-if-not-resolved="False"/>
  - description: <p>A collection of <xref uid="com.microsoft.azure.batch.BatchClientBehavior" data-throw-if-not-resolved="false" data-raw-source="BatchClientBehavior"></xref> instances that are applied to the Batch service request. </p>
    name: additionalBehaviors
    type: Iterable&lt;<xref href="com.microsoft.azure.batch.BatchClientBehavior?alt=com.microsoft.azure.batch.BatchClientBehavior&text=BatchClientBehavior" data-throw-if-not-resolved="False"/>&gt;
  exceptions:
  - type: <xref href="BatchErrorException?alt=BatchErrorException&text=BatchErrorException" data-throw-if-not-resolved="False"/>
    description: <p>Exception thrown when an error response is received from the Batch service. </p>
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
    description: <p>Exception thrown when there is an error in serialization/deserialization of data sent to/received from the Batch service. </p>
  returns:
    description: <p>A list of <xref uid="" data-throw-if-not-resolved="false" data-raw-source="NodeFile"></xref> objects. </p>
    type: PagedList&lt;<xref href="com.microsoft.azure.batch.protocol.models.NodeFile?alt=com.microsoft.azure.batch.protocol.models.NodeFile&text=NodeFile" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Lists files on the specified compute node.</p>

    <p></p>
  syntax: public PagedList<NodeFile> listFilesFromComputeNode(String poolId, String nodeId, Boolean recursive, DetailLevel detailLevel, Iterable<BatchClientBehavior> additionalBehaviors)
  uid: com.microsoft.azure.batch.FileOperations.listFilesFromComputeNode(String,String,Boolean,DetailLevel,Iterable<BatchClientBehavior>)
- fullName: com.microsoft.azure.batch.FileOperations.listFilesFromTask(String jobId, String taskId)
  name: listFilesFromTask(String jobId, String taskId)
  nameWithType: FileOperations.listFilesFromTask(String jobId, String taskId)
  parameters:
  - description: <p>The ID of the job. </p>
    name: jobId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The ID of the task. </p>
    name: taskId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="BatchErrorException?alt=BatchErrorException&text=BatchErrorException" data-throw-if-not-resolved="False"/>
    description: <p>Exception thrown when an error response is received from the Batch service. </p>
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
    description: <p>Exception thrown when there is an error in serialization/deserialization of data sent to/received from the Batch service. </p>
  returns:
    description: <p>A list of <xref uid="" data-throw-if-not-resolved="false" data-raw-source="NodeFile"></xref> objects. </p>
    type: PagedList&lt;<xref href="com.microsoft.azure.batch.protocol.models.NodeFile?alt=com.microsoft.azure.batch.protocol.models.NodeFile&text=NodeFile" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Lists the files in the specified task's directory on its compute node.</p>

    <p></p>
  syntax: public PagedList<NodeFile> listFilesFromTask(String jobId, String taskId)
  uid: com.microsoft.azure.batch.FileOperations.listFilesFromTask(String,String)
- fullName: com.microsoft.azure.batch.FileOperations.listFilesFromTask(String jobId, String taskId, Boolean recursive, DetailLevel detailLevel)
  name: listFilesFromTask(String jobId, String taskId, Boolean recursive, DetailLevel detailLevel)
  nameWithType: FileOperations.listFilesFromTask(String jobId, String taskId, Boolean recursive, DetailLevel detailLevel)
  parameters:
  - description: <p>The ID of the job. </p>
    name: jobId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The ID of the task. </p>
    name: taskId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>If true, performs a recursive list of all files of the task. If false or null, returns only the files in the root task directory. </p>
    name: recursive
    type: <xref href="Boolean?alt=Boolean&text=Boolean" data-throw-if-not-resolved="False"/>
  - description: <p>A <xref uid="com.microsoft.azure.batch.DetailLevel" data-throw-if-not-resolved="false" data-raw-source="DetailLevel"></xref> used for filtering the list and for controlling which properties are retrieved from the service. </p>
    name: detailLevel
    type: <xref href="com.microsoft.azure.batch.DetailLevel?alt=com.microsoft.azure.batch.DetailLevel&text=DetailLevel" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="BatchErrorException?alt=BatchErrorException&text=BatchErrorException" data-throw-if-not-resolved="False"/>
    description: <p>Exception thrown when an error response is received from the Batch service. </p>
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
    description: <p>Exception thrown when there is an error in serialization/deserialization of data sent to/received from the Batch service. </p>
  returns:
    description: <p>A list of <xref uid="" data-throw-if-not-resolved="false" data-raw-source="NodeFile"></xref> objects. </p>
    type: PagedList&lt;<xref href="com.microsoft.azure.batch.protocol.models.NodeFile?alt=com.microsoft.azure.batch.protocol.models.NodeFile&text=NodeFile" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Lists the files in the specified task's directory on its compute node.</p>

    <p></p>
  syntax: public PagedList<NodeFile> listFilesFromTask(String jobId, String taskId, Boolean recursive, DetailLevel detailLevel)
  uid: com.microsoft.azure.batch.FileOperations.listFilesFromTask(String,String,Boolean,DetailLevel)
- fullName: com.microsoft.azure.batch.FileOperations.listFilesFromTask(String jobId, String taskId, Boolean recursive, DetailLevel detailLevel, Iterable<BatchClientBehavior> additionalBehaviors)
  name: listFilesFromTask(String jobId, String taskId, Boolean recursive, DetailLevel detailLevel, Iterable<BatchClientBehavior> additionalBehaviors)
  nameWithType: FileOperations.listFilesFromTask(String jobId, String taskId, Boolean recursive, DetailLevel detailLevel, Iterable<BatchClientBehavior> additionalBehaviors)
  parameters:
  - description: <p>The ID of the job. </p>
    name: jobId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The ID of the task. </p>
    name: taskId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>If true, performs a recursive list of all files of the task. If false or null, returns only the files in the root task directory. </p>
    name: recursive
    type: <xref href="Boolean?alt=Boolean&text=Boolean" data-throw-if-not-resolved="False"/>
  - description: <p>A <xref uid="com.microsoft.azure.batch.DetailLevel" data-throw-if-not-resolved="false" data-raw-source="DetailLevel"></xref> used for filtering the list and for controlling which properties are retrieved from the service. </p>
    name: detailLevel
    type: <xref href="com.microsoft.azure.batch.DetailLevel?alt=com.microsoft.azure.batch.DetailLevel&text=DetailLevel" data-throw-if-not-resolved="False"/>
  - description: <p>A collection of <xref uid="com.microsoft.azure.batch.BatchClientBehavior" data-throw-if-not-resolved="false" data-raw-source="BatchClientBehavior"></xref> instances that are applied to the Batch service request. </p>
    name: additionalBehaviors
    type: Iterable&lt;<xref href="com.microsoft.azure.batch.BatchClientBehavior?alt=com.microsoft.azure.batch.BatchClientBehavior&text=BatchClientBehavior" data-throw-if-not-resolved="False"/>&gt;
  exceptions:
  - type: <xref href="BatchErrorException?alt=BatchErrorException&text=BatchErrorException" data-throw-if-not-resolved="False"/>
    description: <p>Exception thrown when an error response is received from the Batch service. </p>
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
    description: <p>Exception thrown when there is an error in serialization/deserialization of data sent to/received from the Batch service. </p>
  returns:
    description: <p>A list of <xref uid="" data-throw-if-not-resolved="false" data-raw-source="NodeFile"></xref> objects. </p>
    type: PagedList&lt;<xref href="com.microsoft.azure.batch.protocol.models.NodeFile?alt=com.microsoft.azure.batch.protocol.models.NodeFile&text=NodeFile" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Lists the files in the specified task's directory on its compute node.</p>

    <p></p>
  syntax: public PagedList<NodeFile> listFilesFromTask(String jobId, String taskId, Boolean recursive, DetailLevel detailLevel, Iterable<BatchClientBehavior> additionalBehaviors)
  uid: com.microsoft.azure.batch.FileOperations.listFilesFromTask(String,String,Boolean,DetailLevel,Iterable<BatchClientBehavior>)
- fullName: com.microsoft.azure.batch.FileOperations.withCustomBehaviors(Collection<BatchClientBehavior> behaviors)
  name: withCustomBehaviors(Collection<BatchClientBehavior> behaviors)
  nameWithType: FileOperations.withCustomBehaviors(Collection<BatchClientBehavior> behaviors)
  overridden: com.microsoft.azure.batch.IInheritedBehaviors.withCustomBehaviors(Collection<BatchClientBehavior>)
  parameters:
  - description: <p>The collection of <xref uid="com.microsoft.azure.batch.BatchClientBehavior" data-throw-if-not-resolved="false" data-raw-source="BatchClientBehavior"></xref> instances. </p>
    name: behaviors
    type: Collection&lt;<xref href="com.microsoft.azure.batch.BatchClientBehavior?alt=com.microsoft.azure.batch.BatchClientBehavior&text=BatchClientBehavior" data-throw-if-not-resolved="False"/>&gt;
  returns:
    description: <p>The current instance. </p>
    type: <xref href="com.microsoft.azure.batch.IInheritedBehaviors?alt=com.microsoft.azure.batch.IInheritedBehaviors&text=IInheritedBehaviors" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Sets a collection of behaviors that modify or customize requests to the Batch service.</p>

    <p></p>
  syntax: public IInheritedBehaviors withCustomBehaviors(Collection<BatchClientBehavior> behaviors)
  uid: com.microsoft.azure.batch.FileOperations.withCustomBehaviors(Collection<BatchClientBehavior>)
nameWithType: FileOperations
syntax: public class FileOperations implements IInheritedBehaviors
type: class
uid: com.microsoft.azure.batch.FileOperations
fullName: com.microsoft.azure.batch.FileOperations
name: FileOperations
package: com.microsoft.azure.batch
summary: <p>Performs file-related operations on an Azure Batch account. </p>
metadata: {}
