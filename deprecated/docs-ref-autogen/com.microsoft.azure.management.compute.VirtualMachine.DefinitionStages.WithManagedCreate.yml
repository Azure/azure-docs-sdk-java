### YamlMime:JavaType
inheritedMembers:
- com.microsoft.azure.management.resources.fluentcore.model.Creatable.create()
- com.microsoft.azure.management.resources.fluentcore.model.Creatable.createAsync(final ServiceCallback<T>)
- com.microsoft.azure.management.resources.fluentcore.model.Creatable.createAsync()
- com.microsoft.azure.management.compute.VirtualMachine.DefinitionStages.WithExtension.defineNewExtension(String)
- com.microsoft.azure.management.resources.fluentcore.model.Indexable.key()
- com.microsoft.azure.management.resources.fluentcore.arm.models.HasName.name()
- com.microsoft.azure.management.compute.VirtualMachine.DefinitionStages.WithAvailabilityZone.withAvailabilityZone(AvailabilityZoneId)
- com.microsoft.azure.management.compute.VirtualMachine.DefinitionStages.WithBootDiagnostics.withBootDiagnostics()
- com.microsoft.azure.management.compute.VirtualMachine.DefinitionStages.WithBootDiagnostics.withBootDiagnostics(Creatable<StorageAccount>)
- com.microsoft.azure.management.compute.VirtualMachine.DefinitionStages.WithBootDiagnostics.withBootDiagnostics(StorageAccount)
- com.microsoft.azure.management.compute.VirtualMachine.DefinitionStages.WithBootDiagnostics.withBootDiagnostics(String)
- com.microsoft.azure.management.compute.VirtualMachine.DefinitionStages.WithAvailabilitySet.withExistingAvailabilitySet(AvailabilitySet)
- com.microsoft.azure.management.compute.VirtualMachine.DefinitionStages.WithManagedDataDisk.withExistingDataDisk(Disk)
- com.microsoft.azure.management.compute.VirtualMachine.DefinitionStages.WithManagedDataDisk.withExistingDataDisk(Disk,int,CachingTypes)
- com.microsoft.azure.management.compute.VirtualMachine.DefinitionStages.WithManagedDataDisk.withExistingDataDisk(Disk,int,int,CachingTypes)
- com.microsoft.azure.management.compute.VirtualMachine.DefinitionStages.WithSecondaryNetworkInterface.withExistingSecondaryNetworkInterface(NetworkInterface)
- com.microsoft.azure.management.compute.VirtualMachine.DefinitionStages.WithStorageAccount.withExistingStorageAccount(StorageAccount)
- com.microsoft.azure.management.compute.VirtualMachine.DefinitionStages.WithManagedServiceIdentity.withManagedServiceIdentity()
- com.microsoft.azure.management.compute.VirtualMachine.DefinitionStages.WithManagedServiceIdentity.withManagedServiceIdentity(int)
- com.microsoft.azure.management.compute.VirtualMachine.DefinitionStages.WithAvailabilitySet.withNewAvailabilitySet(String)
- com.microsoft.azure.management.compute.VirtualMachine.DefinitionStages.WithAvailabilitySet.withNewAvailabilitySet(Creatable<AvailabilitySet>)
- com.microsoft.azure.management.compute.VirtualMachine.DefinitionStages.WithManagedDataDisk.withNewDataDisk(Creatable<Disk>)
- com.microsoft.azure.management.compute.VirtualMachine.DefinitionStages.WithManagedDataDisk.withNewDataDisk(Creatable<Disk>,int,CachingTypes)
- com.microsoft.azure.management.compute.VirtualMachine.DefinitionStages.WithManagedDataDisk.withNewDataDisk(int)
- com.microsoft.azure.management.compute.VirtualMachine.DefinitionStages.WithManagedDataDisk.withNewDataDisk(int,int,CachingTypes)
- com.microsoft.azure.management.compute.VirtualMachine.DefinitionStages.WithManagedDataDisk.withNewDataDisk(int,int,CachingTypes,StorageAccountTypes)
- com.microsoft.azure.management.compute.VirtualMachine.DefinitionStages.WithManagedDataDisk.withNewDataDiskFromImage(int)
- com.microsoft.azure.management.compute.VirtualMachine.DefinitionStages.WithManagedDataDisk.withNewDataDiskFromImage(int,int,CachingTypes)
- com.microsoft.azure.management.compute.VirtualMachine.DefinitionStages.WithManagedDataDisk.withNewDataDiskFromImage(int,int,CachingTypes,StorageAccountTypes)
- com.microsoft.azure.management.compute.VirtualMachine.DefinitionStages.WithSecondaryNetworkInterface.withNewSecondaryNetworkInterface(Creatable<NetworkInterface>)
- com.microsoft.azure.management.compute.VirtualMachine.DefinitionStages.WithStorageAccount.withNewStorageAccount(String)
- com.microsoft.azure.management.compute.VirtualMachine.DefinitionStages.WithStorageAccount.withNewStorageAccount(Creatable<StorageAccount>)
- com.microsoft.azure.management.compute.VirtualMachine.DefinitionStages.WithOSDiskSettings.withOSDiskCaching(CachingTypes)
- com.microsoft.azure.management.compute.VirtualMachine.DefinitionStages.WithOSDiskSettings.withOSDiskEncryptionSettings(DiskEncryptionSettings)
- com.microsoft.azure.management.compute.VirtualMachine.DefinitionStages.WithOSDiskSettings.withOSDiskName(String)
- com.microsoft.azure.management.compute.VirtualMachine.DefinitionStages.WithOSDiskSettings.withOSDiskSizeInGB(Integer)
- com.microsoft.azure.management.compute.VirtualMachine.DefinitionStages.WithOSDiskSettings.withOSDiskSizeInGB(int)
- com.microsoft.azure.management.compute.VirtualMachine.DefinitionStages.WithPlan.withPlan(PurchasePlan)
- com.microsoft.azure.management.compute.VirtualMachine.DefinitionStages.WithPlan.withPromotionalPlan(PurchasePlan,String)
- com.microsoft.azure.management.compute.VirtualMachine.DefinitionStages.WithVMSize.withSize(String)
- com.microsoft.azure.management.compute.VirtualMachine.DefinitionStages.WithVMSize.withSize(VirtualMachineSizeTypes)
- com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.DefinitionWithTags.withTag(String,String)
- com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.DefinitionWithTags.withTags(Map<String, String>)
methods:
- fullName: com.microsoft.azure.management.compute.VirtualMachine.DefinitionStages.WithManagedCreate.withDataDiskDefaultCachingType(CachingTypes cachingType)
  name: withDataDiskDefaultCachingType(CachingTypes cachingType)
  nameWithType: VirtualMachine.DefinitionStages.WithManagedCreate.withDataDiskDefaultCachingType(CachingTypes cachingType)
  parameters:
  - description: <p>a caching type </p>
    name: cachingType
    type: <xref href="com.microsoft.azure.management.compute.CachingTypes?alt=com.microsoft.azure.management.compute.CachingTypes&text=CachingTypes" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the next stage of teh definition </p>
    type: <xref href="com.microsoft.azure.management.compute.VirtualMachine.DefinitionStages.WithManagedCreate?alt=com.microsoft.azure.management.compute.VirtualMachine.DefinitionStages.WithManagedCreate&text=VirtualMachine.DefinitionStages.WithManagedCreate" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Specifies the default caching type for the managed data disks.</p>

    <p></p>
  syntax: public WithManagedCreate withDataDiskDefaultCachingType(CachingTypes cachingType)
  uid: com.microsoft.azure.management.compute.VirtualMachine.DefinitionStages.WithManagedCreate.withDataDiskDefaultCachingType(CachingTypes)
- fullName: com.microsoft.azure.management.compute.VirtualMachine.DefinitionStages.WithManagedCreate.withDataDiskDefaultStorageAccountType(StorageAccountTypes storageAccountType)
  name: withDataDiskDefaultStorageAccountType(StorageAccountTypes storageAccountType)
  nameWithType: VirtualMachine.DefinitionStages.WithManagedCreate.withDataDiskDefaultStorageAccountType(StorageAccountTypes storageAccountType)
  parameters:
  - description: <p>a storage account type </p>
    name: storageAccountType
    type: <xref href="com.microsoft.azure.management.compute.StorageAccountTypes?alt=com.microsoft.azure.management.compute.StorageAccountTypes&text=StorageAccountTypes" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the next stage of the definition </p>
    type: <xref href="com.microsoft.azure.management.compute.VirtualMachine.DefinitionStages.WithManagedCreate?alt=com.microsoft.azure.management.compute.VirtualMachine.DefinitionStages.WithManagedCreate&text=VirtualMachine.DefinitionStages.WithManagedCreate" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Specifies the default caching type for managed data disks.</p>

    <p></p>
  syntax: public WithManagedCreate withDataDiskDefaultStorageAccountType(StorageAccountTypes storageAccountType)
  uid: com.microsoft.azure.management.compute.VirtualMachine.DefinitionStages.WithManagedCreate.withDataDiskDefaultStorageAccountType(StorageAccountTypes)
- fullName: com.microsoft.azure.management.compute.VirtualMachine.DefinitionStages.WithManagedCreate.withOSDiskStorageAccountType(StorageAccountTypes accountType)
  name: withOSDiskStorageAccountType(StorageAccountTypes accountType)
  nameWithType: VirtualMachine.DefinitionStages.WithManagedCreate.withOSDiskStorageAccountType(StorageAccountTypes accountType)
  parameters:
  - description: <p>storage account type </p>
    name: accountType
    type: <xref href="com.microsoft.azure.management.compute.StorageAccountTypes?alt=com.microsoft.azure.management.compute.StorageAccountTypes&text=StorageAccountTypes" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the next stage of the definition </p>
    type: <xref href="com.microsoft.azure.management.compute.VirtualMachine.DefinitionStages.WithManagedCreate?alt=com.microsoft.azure.management.compute.VirtualMachine.DefinitionStages.WithManagedCreate&text=VirtualMachine.DefinitionStages.WithManagedCreate" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Specifies the storage account type for the managed OS disk.</p>

    <p></p>
  syntax: public WithManagedCreate withOSDiskStorageAccountType(StorageAccountTypes accountType)
  uid: com.microsoft.azure.management.compute.VirtualMachine.DefinitionStages.WithManagedCreate.withOSDiskStorageAccountType(StorageAccountTypes)
nameWithType: VirtualMachine.DefinitionStages.WithManagedCreate
syntax: public interface WithManagedCreate extends VirtualMachine.DefinitionStages.WithManagedDataDisk,VirtualMachine.DefinitionStages.WithAvailabilityZone,VirtualMachine.DefinitionStages.WithCreate
type: interface
uid: com.microsoft.azure.management.compute.VirtualMachine.DefinitionStages.WithManagedCreate
fullName: com.microsoft.azure.management.compute.VirtualMachine.DefinitionStages.WithManagedCreate
name: VirtualMachine.DefinitionStages.WithManagedCreate
package: com.microsoft.azure.management.compute
summary: <p>The stage of the definition which contains all the minimum required inputs for the VM using managed OS disk to be created and optionally allow managed data disks specific settings to be specified. </p>
metadata: {}
