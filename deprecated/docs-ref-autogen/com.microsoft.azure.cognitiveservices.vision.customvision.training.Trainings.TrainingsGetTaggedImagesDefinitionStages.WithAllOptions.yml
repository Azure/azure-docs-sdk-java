### YamlMime:JavaType
methods:
- fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.TrainingsGetTaggedImagesDefinitionStages.WithAllOptions.withIterationId(UUID iterationId)
  name: withIterationId(UUID iterationId)
  nameWithType: Trainings.TrainingsGetTaggedImagesDefinitionStages.WithAllOptions.withIterationId(UUID iterationId)
  parameters:
  - name: iterationId
    type: <xref href="UUID?alt=UUID&text=UUID" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>next definition stage </p>
    type: <xref href="TrainingsGetTaggedImagesDefinitionStages.WithExecute?alt=TrainingsGetTaggedImagesDefinitionStages.WithExecute&text=TrainingsGetTaggedImagesDefinitionStages.WithExecute" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>The iteration id. Defaults to workspace.</p>

    <p></p>
  syntax: public TrainingsGetTaggedImagesDefinitionStages.WithExecute withIterationId(UUID iterationId)
  uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.TrainingsGetTaggedImagesDefinitionStages.WithAllOptions.withIterationId(UUID)
- fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.TrainingsGetTaggedImagesDefinitionStages.WithAllOptions.withOrderBy(String orderBy)
  name: withOrderBy(String orderBy)
  nameWithType: Trainings.TrainingsGetTaggedImagesDefinitionStages.WithAllOptions.withOrderBy(String orderBy)
  parameters:
  - name: orderBy
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>next definition stage </p>
    type: <xref href="TrainingsGetTaggedImagesDefinitionStages.WithExecute?alt=TrainingsGetTaggedImagesDefinitionStages.WithExecute&text=TrainingsGetTaggedImagesDefinitionStages.WithExecute" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>The ordering. Defaults to newest. Possible values include: 'Newest', 'Oldest'.</p>

    <p></p>
  syntax: public TrainingsGetTaggedImagesDefinitionStages.WithExecute withOrderBy(String orderBy)
  uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.TrainingsGetTaggedImagesDefinitionStages.WithAllOptions.withOrderBy(String)
- fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.TrainingsGetTaggedImagesDefinitionStages.WithAllOptions.withSkip(Integer skip)
  name: withSkip(Integer skip)
  nameWithType: Trainings.TrainingsGetTaggedImagesDefinitionStages.WithAllOptions.withSkip(Integer skip)
  parameters:
  - name: skip
    type: <xref href="Integer?alt=Integer&text=Integer" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>next definition stage </p>
    type: <xref href="TrainingsGetTaggedImagesDefinitionStages.WithExecute?alt=TrainingsGetTaggedImagesDefinitionStages.WithExecute&text=TrainingsGetTaggedImagesDefinitionStages.WithExecute" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Number of images to skip before beginning the image batch. Defaults to 0.</p>

    <p></p>
  syntax: public TrainingsGetTaggedImagesDefinitionStages.WithExecute withSkip(Integer skip)
  uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.TrainingsGetTaggedImagesDefinitionStages.WithAllOptions.withSkip(Integer)
- fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.TrainingsGetTaggedImagesDefinitionStages.WithAllOptions.withTagIds(List<UUID> tagIds)
  name: withTagIds(List<UUID> tagIds)
  nameWithType: Trainings.TrainingsGetTaggedImagesDefinitionStages.WithAllOptions.withTagIds(List<UUID> tagIds)
  parameters:
  - name: tagIds
    type: <xref href="List%3CUUID%3E?alt=List%3CUUID%3E&text=List%3CUUID%3E" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>next definition stage </p>
    type: <xref href="TrainingsGetTaggedImagesDefinitionStages.WithExecute?alt=TrainingsGetTaggedImagesDefinitionStages.WithExecute&text=TrainingsGetTaggedImagesDefinitionStages.WithExecute" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>A list of tags ids to filter the images. Defaults to all tagged images when null. Limited to 20.</p>

    <p></p>
  syntax: public TrainingsGetTaggedImagesDefinitionStages.WithExecute withTagIds(List<UUID> tagIds)
  uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.TrainingsGetTaggedImagesDefinitionStages.WithAllOptions.withTagIds(List<UUID>)
- fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.TrainingsGetTaggedImagesDefinitionStages.WithAllOptions.withTake(Integer take)
  name: withTake(Integer take)
  nameWithType: Trainings.TrainingsGetTaggedImagesDefinitionStages.WithAllOptions.withTake(Integer take)
  parameters:
  - name: take
    type: <xref href="Integer?alt=Integer&text=Integer" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>next definition stage </p>
    type: <xref href="TrainingsGetTaggedImagesDefinitionStages.WithExecute?alt=TrainingsGetTaggedImagesDefinitionStages.WithExecute&text=TrainingsGetTaggedImagesDefinitionStages.WithExecute" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Maximum number of images to return. Defaults to 50, limited to 256.</p>

    <p></p>
  syntax: public TrainingsGetTaggedImagesDefinitionStages.WithExecute withTake(Integer take)
  uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.TrainingsGetTaggedImagesDefinitionStages.WithAllOptions.withTake(Integer)
nameWithType: Trainings.TrainingsGetTaggedImagesDefinitionStages.WithAllOptions
syntax: public interface WithAllOptions
type: interface
uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.TrainingsGetTaggedImagesDefinitionStages.WithAllOptions
fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.TrainingsGetTaggedImagesDefinitionStages.WithAllOptions
name: Trainings.TrainingsGetTaggedImagesDefinitionStages.WithAllOptions
package: com.microsoft.azure.cognitiveservices.vision.customvision.training
summary: <p>The stage of the definition which allows for any other optional settings to be specified. </p>
metadata: {}
