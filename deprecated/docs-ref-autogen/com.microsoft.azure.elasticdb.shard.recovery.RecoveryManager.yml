### YamlMime:JavaType
constructors:
- fullName: com.microsoft.azure.elasticdb.shard.recovery.RecoveryManager.RecoveryManager(ShardMapManager shardMapManager)
  name: RecoveryManager(ShardMapManager shardMapManager)
  nameWithType: RecoveryManager.RecoveryManager(ShardMapManager shardMapManager)
  parameters:
  - description: <p>Shard map manager being recovered. </p>
    name: shardMapManager
    type: <xref href="com.microsoft.azure.elasticdb.shard.mapmanager.ShardMapManager?alt=com.microsoft.azure.elasticdb.shard.mapmanager.ShardMapManager&text=ShardMapManager" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Constructs an instance of the recovery manager for given shard map manager.</p>

    <p></p>
  syntax: public RecoveryManager(ShardMapManager shardMapManager)
  uid: com.microsoft.azure.elasticdb.shard.recovery.RecoveryManager.RecoveryManager(ShardMapManager)
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
methods:
- fullName: com.microsoft.azure.elasticdb.shard.recovery.RecoveryManager.attachShard(ShardLocation location)
  name: attachShard(ShardLocation location)
  nameWithType: RecoveryManager.attachShard(ShardLocation location)
  parameters:
  - description: <p>Location of the shard being attached. Note that this method can cause unrecoverable data loss. Make sure you have taken backups or copies of your databases and only then proceed with great care. </p>
    name: location
    type: <xref href="com.microsoft.azure.elasticdb.shard.base.ShardLocation?alt=com.microsoft.azure.elasticdb.shard.base.ShardLocation&text=ShardLocation" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Attaches a shard to the shard map manager. Earlier versions of mappings for the same shard map will automatically be updated if more recent versions are found on the shard to be attached. After attaching a shard, DetectMappingDifferences(ShardLocation, string) should be called to check for any inconsistencies that warrant manual conflict resolution.</p>

    <p></p>
  syntax: public void attachShard(ShardLocation location)
  uid: com.microsoft.azure.elasticdb.shard.recovery.RecoveryManager.attachShard(ShardLocation)
- fullName: com.microsoft.azure.elasticdb.shard.recovery.RecoveryManager.attachShard(ShardLocation location, String shardMapName)
  name: attachShard(ShardLocation location, String shardMapName)
  nameWithType: RecoveryManager.attachShard(ShardLocation location, String shardMapName)
  parameters:
  - description: <p>Location of the shard being attached. </p>
    name: location
    type: <xref href="com.microsoft.azure.elasticdb.shard.base.ShardLocation?alt=com.microsoft.azure.elasticdb.shard.base.ShardLocation&text=ShardLocation" data-throw-if-not-resolved="False"/>
  - description: <p>Optional string to filter on the shard map name. Note that this method can cause unrecoverable data loss. Make sure you have taken backups or copies of your databases and only then proceed with great care. </p>
    name: shardMapName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Attaches a shard to the shard map manager. Earlier versions of mappings for the same shard map will automatically be updated if more recent versions are found on the shard to be attached. Shard location will be upgraded to latest version of local store as part of this operation. After attaching a shard, DetectMappingDifferences(ShardLocation, string) should be called to check for any inconsistencies that warrant manual conflict resolution.</p>

    <p></p>
  syntax: public void attachShard(ShardLocation location, String shardMapName)
  uid: com.microsoft.azure.elasticdb.shard.recovery.RecoveryManager.attachShard(ShardLocation,String)
- fullName: com.microsoft.azure.elasticdb.shard.recovery.RecoveryManager.detachShard(ShardLocation location)
  name: detachShard(ShardLocation location)
  nameWithType: RecoveryManager.detachShard(ShardLocation location)
  parameters:
  - description: <p>Location of the shard being detached. Note that this method can cause unrecoverable data loss. Make sure you have taken backups or copies of your databases and only then proceed with great care. </p>
    name: location
    type: <xref href="com.microsoft.azure.elasticdb.shard.base.ShardLocation?alt=com.microsoft.azure.elasticdb.shard.base.ShardLocation&text=ShardLocation" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Detaches the given shard from the shard map manager. Mappings pointing to the shard to be deleted will automatically be removed by this method.</p>

    <p></p>
  syntax: public void detachShard(ShardLocation location)
  uid: com.microsoft.azure.elasticdb.shard.recovery.RecoveryManager.detachShard(ShardLocation)
- fullName: com.microsoft.azure.elasticdb.shard.recovery.RecoveryManager.detachShard(ShardLocation location, String shardMapName)
  name: detachShard(ShardLocation location, String shardMapName)
  nameWithType: RecoveryManager.detachShard(ShardLocation location, String shardMapName)
  parameters:
  - description: <p>Location of the shard being detached. </p>
    name: location
    type: <xref href="com.microsoft.azure.elasticdb.shard.base.ShardLocation?alt=com.microsoft.azure.elasticdb.shard.base.ShardLocation&text=ShardLocation" data-throw-if-not-resolved="False"/>
  - description: <p>Optional string to filter on shard map name. Note that this method can cause unrecoverable data loss. Make sure you have taken backups or copies of your databases and only then proceed with great care. </p>
    name: shardMapName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Detaches the given shard from the shard map manager. Mappings pointing to the shard to be deleted will automatically be removed by this method.</p>

    <p></p>
  syntax: public void detachShard(ShardLocation location, String shardMapName)
  uid: com.microsoft.azure.elasticdb.shard.recovery.RecoveryManager.detachShard(ShardLocation,String)
- fullName: com.microsoft.azure.elasticdb.shard.recovery.RecoveryManager.detectMappingDifferences(ShardLocation location)
  name: detectMappingDifferences(ShardLocation location)
  nameWithType: RecoveryManager.detectMappingDifferences(ShardLocation location)
  parameters:
  - description: <p>Location of shard for which to detect inconsistencies. </p>
    name: location
    type: <xref href="com.microsoft.azure.elasticdb.shard.base.ShardLocation?alt=com.microsoft.azure.elasticdb.shard.base.ShardLocation&text=ShardLocation" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>Collection of tokens to be used for further resolution tasks (see ResolveMappingDifferences). </p>
    type: List&lt;<xref href="com.microsoft.azure.elasticdb.shard.recovery.RecoveryToken?alt=com.microsoft.azure.elasticdb.shard.recovery.RecoveryToken&text=RecoveryToken" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Enumerates differences in the mappings between the global shard map manager database and the local shard database in the specified shard location.</p>

    <p></p>
  syntax: public List<RecoveryToken> detectMappingDifferences(ShardLocation location)
  uid: com.microsoft.azure.elasticdb.shard.recovery.RecoveryManager.detectMappingDifferences(ShardLocation)
- fullName: com.microsoft.azure.elasticdb.shard.recovery.RecoveryManager.detectMappingDifferences(ShardLocation location, String shardMapName)
  name: detectMappingDifferences(ShardLocation location, String shardMapName)
  nameWithType: RecoveryManager.detectMappingDifferences(ShardLocation location, String shardMapName)
  parameters:
  - description: <p>Location of shard for which to detect inconsistencies. </p>
    name: location
    type: <xref href="com.microsoft.azure.elasticdb.shard.base.ShardLocation?alt=com.microsoft.azure.elasticdb.shard.base.ShardLocation&text=ShardLocation" data-throw-if-not-resolved="False"/>
  - description: <p>Optional parameter to specify a particular shard map. </p>
    name: shardMapName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>Collection of tokens to be used for further resolution tasks (see ResolveMappingDifferences). </p>
    type: List&lt;<xref href="com.microsoft.azure.elasticdb.shard.recovery.RecoveryToken?alt=com.microsoft.azure.elasticdb.shard.recovery.RecoveryToken&text=RecoveryToken" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Enumerates differences in the mappings between the global shard map manager database and the local shard database in the specified shard location.</p>

    <p></p>
  syntax: public List<RecoveryToken> detectMappingDifferences(ShardLocation location, String shardMapName)
  uid: com.microsoft.azure.elasticdb.shard.recovery.RecoveryManager.detectMappingDifferences(ShardLocation,String)
- fullName: com.microsoft.azure.elasticdb.shard.recovery.RecoveryManager.getMappingDifferences(RecoveryToken token)
  name: getMappingDifferences(RecoveryToken token)
  nameWithType: RecoveryManager.getMappingDifferences(RecoveryToken token)
  parameters:
  - description: <p>Recovery token returned from DetectMappingDifferences(ShardLocation, string). </p>
    name: token
    type: <xref href="com.microsoft.azure.elasticdb.shard.recovery.RecoveryToken?alt=com.microsoft.azure.elasticdb.shard.recovery.RecoveryToken&text=RecoveryToken" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>The set of ranges and their corresponding <xref uid="com.microsoft.azure.elasticdb.shard.recovery.MappingLocation" data-throw-if-not-resolved="false" data-raw-source="MappingLocation"></xref>. This method assumes a previous call to DetectMappingDifferences(ShardLocation, string) that provides the recovery token parameter. The result of this method is typically used in subsequent calls to resolve inconsistencies such as ResolveMappingDifferences or RebuildMappingsOnShard. </p>
    type: Map&lt;<xref href="com.microsoft.azure.elasticdb.shard.base.ShardRange?alt=com.microsoft.azure.elasticdb.shard.base.ShardRange&text=ShardRange" data-throw-if-not-resolved="False"/>, <xref href="com.microsoft.azure.elasticdb.shard.recovery.MappingLocation?alt=com.microsoft.azure.elasticdb.shard.recovery.MappingLocation&text=MappingLocation" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Returns a dictionary of range-to-location key-value pairs. The location returned is an enumerator stating whether a given range (or point) is present only in the local shard map, only in the global shard map, or both. Ranges not contained in either shard map cannot contain differences so those ranges are not shown.</p>

    <p></p>
  syntax: public Map<ShardRange, MappingLocation> getMappingDifferences(RecoveryToken token)
  uid: com.microsoft.azure.elasticdb.shard.recovery.RecoveryManager.getMappingDifferences(RecoveryToken)
- fullName: com.microsoft.azure.elasticdb.shard.recovery.RecoveryManager.getShardInfo(RecoveryToken token, ReferenceObjectHelper<ShardMapType> mapType, ReferenceObjectHelper<String> shardMapName)
  name: getShardInfo(RecoveryToken token, ReferenceObjectHelper<ShardMapType> mapType, ReferenceObjectHelper<String> shardMapName)
  nameWithType: RecoveryManager.getShardInfo(RecoveryToken token, ReferenceObjectHelper<ShardMapType> mapType, ReferenceObjectHelper<String> shardMapName)
  parameters:
  - description: <p>Recovery token returned from DetectMappingDifferences(ShardLocation, string). </p>
    name: token
    type: <xref href="com.microsoft.azure.elasticdb.shard.recovery.RecoveryToken?alt=com.microsoft.azure.elasticdb.shard.recovery.RecoveryToken&text=RecoveryToken" data-throw-if-not-resolved="False"/>
  - description: <p>Output ShardMap type (Range or List). </p>
    name: mapType
    type: ReferenceObjectHelper&lt;<xref href="com.microsoft.azure.elasticdb.shard.map.ShardMapType?alt=com.microsoft.azure.elasticdb.shard.map.ShardMapType&text=ShardMapType" data-throw-if-not-resolved="False"/>&gt;
  - description: <p>Output name of shard map. </p>
    name: shardMapName
    type: <xref href="ReferenceObjectHelper%3CString%3E?alt=ReferenceObjectHelper%3CString%3E&text=ReferenceObjectHelper%3CString%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Retrieves shard map type and name based on the token returned from DetectMappingDifferences(ShardLocation, string).</p>

    <p></p>
  syntax: public void getShardInfo(RecoveryToken token, ReferenceObjectHelper<ShardMapType> mapType, ReferenceObjectHelper<String> shardMapName)
  uid: com.microsoft.azure.elasticdb.shard.recovery.RecoveryManager.getShardInfo(RecoveryToken,ReferenceObjectHelper<ShardMapType>,ReferenceObjectHelper<String>)
- fullName: com.microsoft.azure.elasticdb.shard.recovery.RecoveryManager.getShardInfo(RecoveryToken token, ReferenceObjectHelper<ShardMapType> mapType, ReferenceObjectHelper<String> shardMapName, ReferenceObjectHelper<ShardLocation> shardLocation)
  name: getShardInfo(RecoveryToken token, ReferenceObjectHelper<ShardMapType> mapType, ReferenceObjectHelper<String> shardMapName, ReferenceObjectHelper<ShardLocation> shardLocation)
  nameWithType: RecoveryManager.getShardInfo(RecoveryToken token, ReferenceObjectHelper<ShardMapType> mapType, ReferenceObjectHelper<String> shardMapName, ReferenceObjectHelper<ShardLocation> shardLocation)
  parameters:
  - description: <p>Recovery token returned from DetectMappingDifferences(ShardLocation, string). </p>
    name: token
    type: <xref href="com.microsoft.azure.elasticdb.shard.recovery.RecoveryToken?alt=com.microsoft.azure.elasticdb.shard.recovery.RecoveryToken&text=RecoveryToken" data-throw-if-not-resolved="False"/>
  - description: <p>Outputs shard map type (Range or List). </p>
    name: mapType
    type: ReferenceObjectHelper&lt;<xref href="com.microsoft.azure.elasticdb.shard.map.ShardMapType?alt=com.microsoft.azure.elasticdb.shard.map.ShardMapType&text=ShardMapType" data-throw-if-not-resolved="False"/>&gt;
  - description: <p>Outputs shard map name. </p>
    name: shardMapName
    type: <xref href="ReferenceObjectHelper%3CString%3E?alt=ReferenceObjectHelper%3CString%3E&text=ReferenceObjectHelper%3CString%3E" data-throw-if-not-resolved="False"/>
  - description: <p>Outputs shard location </p>
    name: shardLocation
    type: ReferenceObjectHelper&lt;<xref href="com.microsoft.azure.elasticdb.shard.base.ShardLocation?alt=com.microsoft.azure.elasticdb.shard.base.ShardLocation&text=ShardLocation" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Retrieves shard map type, name and shard location based on the token returned from DetectMappingDifferences(ShardLocation, string).</p>

    <p></p>
  syntax: public void getShardInfo(RecoveryToken token, ReferenceObjectHelper<ShardMapType> mapType, ReferenceObjectHelper<String> shardMapName, ReferenceObjectHelper<ShardLocation> shardLocation)
  uid: com.microsoft.azure.elasticdb.shard.recovery.RecoveryManager.getShardInfo(RecoveryToken,ReferenceObjectHelper<ShardMapType>,ReferenceObjectHelper<String>,ReferenceObjectHelper<ShardLocation>)
- fullName: com.microsoft.azure.elasticdb.shard.recovery.RecoveryManager.getShardLocation(RecoveryToken token)
  name: getShardLocation(RecoveryToken token)
  nameWithType: RecoveryManager.getShardLocation(RecoveryToken token)
  parameters:
  - description: <p>Recovery token returned from DetectMappingDifferences(ShardLocation, string) </p>
    name: token
    type: <xref href="com.microsoft.azure.elasticdb.shard.recovery.RecoveryToken?alt=com.microsoft.azure.elasticdb.shard.recovery.RecoveryToken&text=RecoveryToken" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>Location of the shard corresponding to the set of mapping differences detected in DetectMappingDifferences(ShardLocation, string). </p>
    type: <xref href="com.microsoft.azure.elasticdb.shard.base.ShardLocation?alt=com.microsoft.azure.elasticdb.shard.base.ShardLocation&text=ShardLocation" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Returns the shard location of the local shard map processed by DetectMappingDifferences(ShardLocation, string).</p>

    <p></p>
  syntax: public ShardLocation getShardLocation(RecoveryToken token)
  uid: com.microsoft.azure.elasticdb.shard.recovery.RecoveryManager.getShardLocation(RecoveryToken)
- fullName: com.microsoft.azure.elasticdb.shard.recovery.RecoveryManager.getShardMapName(RecoveryToken token)
  name: getShardMapName(RecoveryToken token)
  nameWithType: RecoveryManager.getShardMapName(RecoveryToken token)
  parameters:
  - description: <p>Recovery token returned from DetectMappingDifferences(ShardLocation, string). </p>
    name: token
    type: <xref href="com.microsoft.azure.elasticdb.shard.recovery.RecoveryToken?alt=com.microsoft.azure.elasticdb.shard.recovery.RecoveryToken&text=RecoveryToken" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>The name of the shard map for the given recovery token. </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Returns the shard map name of the shard map processed by DetectMappingDifferences(ShardLocation, string).</p>

    <p></p>
  syntax: public String getShardMapName(RecoveryToken token)
  uid: com.microsoft.azure.elasticdb.shard.recovery.RecoveryManager.getShardMapName(RecoveryToken)
- fullName: com.microsoft.azure.elasticdb.shard.recovery.RecoveryManager.getShardMapType(RecoveryToken token)
  name: getShardMapType(RecoveryToken token)
  nameWithType: RecoveryManager.getShardMapType(RecoveryToken token)
  parameters:
  - description: <p>Recovery token returned from DetectMappingDifferences(ShardLocation, string). </p>
    name: token
    type: <xref href="com.microsoft.azure.elasticdb.shard.recovery.RecoveryToken?alt=com.microsoft.azure.elasticdb.shard.recovery.RecoveryToken&text=RecoveryToken" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>The type of shard map (list, range, etc...) corresponding to the recovery token. </p>
    type: <xref href="com.microsoft.azure.elasticdb.shard.map.ShardMapType?alt=com.microsoft.azure.elasticdb.shard.map.ShardMapType&text=ShardMapType" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Returns the shard map type of the shard map processed by DetectMappingDifferences(ShardLocation, string).</p>

    <p></p>
  syntax: public ShardMapType getShardMapType(RecoveryToken token)
  uid: com.microsoft.azure.elasticdb.shard.recovery.RecoveryManager.getShardMapType(RecoveryToken)
- fullName: com.microsoft.azure.elasticdb.shard.recovery.RecoveryManager.rebuildMappingsOnShard(RecoveryToken token, List<ShardRange> ranges)
  name: rebuildMappingsOnShard(RecoveryToken token, List<ShardRange> ranges)
  nameWithType: RecoveryManager.rebuildMappingsOnShard(RecoveryToken token, List<ShardRange> ranges)
  parameters:
  - description: <p>The recovery token from a previous call to DetectMappingDifferences </p>
    name: token
    type: <xref href="com.microsoft.azure.elasticdb.shard.recovery.RecoveryToken?alt=com.microsoft.azure.elasticdb.shard.recovery.RecoveryToken&text=RecoveryToken" data-throw-if-not-resolved="False"/>
  - description: <p>The set of ranges to keep on the local shard when rebuilding the local shard map. Note that this method can cause unrecoverable data loss. Make sure you have taken backups or copies of your databases and only then proceed with great care. Only shard ranges with inconsistencies can be rebuilt using this method. All ranges with no inconsistencies between the local shard and the global shard map will be kept intact on the local shard and are not affected by this call. Subsequent changes to the non-conflicting mappings can be made later using the regular interfaces in the shard map manager. It is not necessary to use the recovery manager to change non-conflicting mappings. </p>
    name: ranges
    type: List&lt;<xref href="com.microsoft.azure.elasticdb.shard.base.ShardRange?alt=com.microsoft.azure.elasticdb.shard.base.ShardRange&text=ShardRange" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Rebuilds a local range shard map from a list of inconsistent shard ranges detected by DetectMappingDifferences(ShardLocation, string) and then accessed by GetMappingDifferences. The resulting local range shard map will always still be inconsistent with the global shard map in the shard map manager database. A subsequent call to ResolveMappingDifferences is necessary to bring the system back to a healthy state.</p>

    <p></p>
  syntax: public void rebuildMappingsOnShard(RecoveryToken token, List<ShardRange> ranges)
  uid: com.microsoft.azure.elasticdb.shard.recovery.RecoveryManager.rebuildMappingsOnShard(RecoveryToken,List<ShardRange>)
- fullName: com.microsoft.azure.elasticdb.shard.recovery.RecoveryManager.rebuildMappingsOnShardMapManagerFromShards(List<ShardLocation> shardLocations)
  name: rebuildMappingsOnShardMapManagerFromShards(List<ShardLocation> shardLocations)
  nameWithType: RecoveryManager.rebuildMappingsOnShardMapManagerFromShards(List<ShardLocation> shardLocations)
  parameters:
  - description: <p>Collection of shard locations. Note that this method can cause unrecoverable data loss. Make sure you have taken backups or copies of your databases and only then proceed with great care. </p>
    name: shardLocations
    type: List&lt;<xref href="com.microsoft.azure.elasticdb.shard.base.ShardLocation?alt=com.microsoft.azure.elasticdb.shard.base.ShardLocation&text=ShardLocation" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Given a collection of shard locations, reconstructs the shard map manager based on mapping information stored in the individual shards. The specified shards need to be registered already in the global shard map. This method only rebuilds mappings. It does not rebuild shard membership within the global shard map. If the information in the individual shard maps is or becomes inconsistent, the behavior is undefined. No cross shard locks are taken, so if any shards become inconsistent during the execution of this method, the final state of the global shard map may be corrupt.</p>

    <p></p>
  syntax: public void rebuildMappingsOnShardMapManagerFromShards(List<ShardLocation> shardLocations)
  uid: com.microsoft.azure.elasticdb.shard.recovery.RecoveryManager.rebuildMappingsOnShardMapManagerFromShards(List<ShardLocation>)
- fullName: com.microsoft.azure.elasticdb.shard.recovery.RecoveryManager.rebuildMappingsOnShardMapManagerFromShards(List<ShardLocation> shardLocations, String shardMapName)
  name: rebuildMappingsOnShardMapManagerFromShards(List<ShardLocation> shardLocations, String shardMapName)
  nameWithType: RecoveryManager.rebuildMappingsOnShardMapManagerFromShards(List<ShardLocation> shardLocations, String shardMapName)
  parameters:
  - description: <p>Collection of shard locations. </p>
    name: shardLocations
    type: List&lt;<xref href="com.microsoft.azure.elasticdb.shard.base.ShardLocation?alt=com.microsoft.azure.elasticdb.shard.base.ShardLocation&text=ShardLocation" data-throw-if-not-resolved="False"/>&gt;
  - description: <p>Optional name of shard map. If omitted, will attempt to recover from all shard maps present on each shard. Note that this method can cause unrecoverable data loss. Make sure you have taken backups or copies of your databases and only then proceed with great care. </p>
    name: shardMapName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Given a collection of shard locations, reconstructs the shard map manager based on mapping information stored in the individual shards. The specified shards need to be registered already in the global shard map. This method only rebuilds mappings. It does not rebuild shard membership within the global shard map. If the information in the individual shard maps is or becomes inconsistent, the behavior is undefined. No cross shard locks are taken, so if any shards become inconsistent during the execution of this method, the final state of the global shard map may be corrupt.</p>

    <p></p>
  syntax: public void rebuildMappingsOnShardMapManagerFromShards(List<ShardLocation> shardLocations, String shardMapName)
  uid: com.microsoft.azure.elasticdb.shard.recovery.RecoveryManager.rebuildMappingsOnShardMapManagerFromShards(List<ShardLocation>,String)
- fullName: com.microsoft.azure.elasticdb.shard.recovery.RecoveryManager.rebuildMappingsOnShardsFromShardMapManager(List<ShardLocation> shardLocations)
  name: rebuildMappingsOnShardsFromShardMapManager(List<ShardLocation> shardLocations)
  nameWithType: RecoveryManager.rebuildMappingsOnShardsFromShardMapManager(List<ShardLocation> shardLocations)
  parameters:
  - description: <p>Collection of shard locations. Note that this method can cause unrecoverable data loss. Make sure you have taken backups or copies of your databases and only then proceed with great care. </p>
    name: shardLocations
    type: List&lt;<xref href="com.microsoft.azure.elasticdb.shard.base.ShardLocation?alt=com.microsoft.azure.elasticdb.shard.base.ShardLocation&text=ShardLocation" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Given a collection of shard locations, reconstructs local shard maps based on the mapping information stored in the global shard map. The specified shards need to be registered already in the global shard map. This method only rebuilds mappings. It does not rebuild shard membership within the global shard map.</p>

    <p></p>
  syntax: public void rebuildMappingsOnShardsFromShardMapManager(List<ShardLocation> shardLocations)
  uid: com.microsoft.azure.elasticdb.shard.recovery.RecoveryManager.rebuildMappingsOnShardsFromShardMapManager(List<ShardLocation>)
- fullName: com.microsoft.azure.elasticdb.shard.recovery.RecoveryManager.rebuildMappingsOnShardsFromShardMapManager(List<ShardLocation> shardLocations, String shardMapName)
  name: rebuildMappingsOnShardsFromShardMapManager(List<ShardLocation> shardLocations, String shardMapName)
  nameWithType: RecoveryManager.rebuildMappingsOnShardsFromShardMapManager(List<ShardLocation> shardLocations, String shardMapName)
  parameters:
  - description: <p>Collection of shard locations. </p>
    name: shardLocations
    type: List&lt;<xref href="com.microsoft.azure.elasticdb.shard.base.ShardLocation?alt=com.microsoft.azure.elasticdb.shard.base.ShardLocation&text=ShardLocation" data-throw-if-not-resolved="False"/>&gt;
  - description: <p>Optional parameter to filter by shard map name. If omitted, all shard maps will be rebuilt. Note that this method can cause unrecoverable data loss. Make sure you have taken backups or copies of your databases and only then proceed with great care. </p>
    name: shardMapName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Given a collection of shard locations, reconstructs local shard maps based on the mapping information stored in the global shard map. The specified shards need to be registered already in the global shard map. This method only rebuilds mappings. It does not rebuild shard membership within the global shard map.</p>

    <p></p>
  syntax: public void rebuildMappingsOnShardsFromShardMapManager(List<ShardLocation> shardLocations, String shardMapName)
  uid: com.microsoft.azure.elasticdb.shard.recovery.RecoveryManager.rebuildMappingsOnShardsFromShardMapManager(List<ShardLocation>,String)
- fullName: com.microsoft.azure.elasticdb.shard.recovery.RecoveryManager.resolveMappingDifferences(RecoveryToken token, MappingDifferenceResolution resolution)
  name: resolveMappingDifferences(RecoveryToken token, MappingDifferenceResolution resolution)
  nameWithType: RecoveryManager.resolveMappingDifferences(RecoveryToken token, MappingDifferenceResolution resolution)
  parameters:
  - description: <p>Recovery token returned from DetectMappingDifferences(ShardLocation, string). </p>
    name: token
    type: <xref href="com.microsoft.azure.elasticdb.shard.recovery.RecoveryToken?alt=com.microsoft.azure.elasticdb.shard.recovery.RecoveryToken&text=RecoveryToken" data-throw-if-not-resolved="False"/>
  - description: <p>The resolution strategy to be used for resolution. Note that this method can cause unrecoverable data loss. Make sure you have taken backups or copies of your databases and only then proceed with great care. </p>
    name: resolution
    type: <xref href="com.microsoft.azure.elasticdb.shard.recovery.MappingDifferenceResolution?alt=com.microsoft.azure.elasticdb.shard.recovery.MappingDifferenceResolution&text=MappingDifferenceResolution" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Selects one of the shard maps (either local or global) as a source of truth and brings mappings on both shard maps in sync.</p>

    <p></p>
  syntax: public void resolveMappingDifferences(RecoveryToken token, MappingDifferenceResolution resolution)
  uid: com.microsoft.azure.elasticdb.shard.recovery.RecoveryManager.resolveMappingDifferences(RecoveryToken,MappingDifferenceResolution)
nameWithType: RecoveryManager
syntax: public class RecoveryManager
type: class
uid: com.microsoft.azure.elasticdb.shard.recovery.RecoveryManager
fullName: com.microsoft.azure.elasticdb.shard.recovery.RecoveryManager
name: RecoveryManager
package: com.microsoft.azure.elasticdb.shard.recovery
summary: <p>Manages various recovery related tasks for a shard map manager. It helps resolving data corruption issues between shard map information stored locally on the shards and in the global shard map manager database. It also helps with certain 'oops' recovery scenarios where reconstruction of shard maps from database backups or database copies is necessary. Note that some of the recovery methods can cause unrecoverable data loss when not used properly. It is recommend to take backups or copies of all databases that participate in recovery operations. </p>
metadata: {}
