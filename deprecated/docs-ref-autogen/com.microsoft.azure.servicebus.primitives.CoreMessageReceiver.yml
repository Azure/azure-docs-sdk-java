### YamlMime:JavaType
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
- <xref href="com.microsoft.azure.servicebus.primitives.ClientEntity?alt=com.microsoft.azure.servicebus.primitives.ClientEntity&text=ClientEntity" data-throw-if-not-resolved="False"/>
inheritedMembers:
- com.microsoft.azure.servicebus.primitives.ClientEntity.ClientEntity(final String)
- com.microsoft.azure.servicebus.primitives.ClientEntity.close()
- com.microsoft.azure.servicebus.primitives.ClientEntity.closeAsync()
- com.microsoft.azure.servicebus.primitives.ClientEntity.finalize()
- com.microsoft.azure.servicebus.primitives.ClientEntity.getClientId()
- com.microsoft.azure.servicebus.primitives.ClientEntity.getIsClosed()
- com.microsoft.azure.servicebus.primitives.ClientEntity.getIsClosingOrClosed()
- com.microsoft.azure.servicebus.primitives.ClientEntity.setClosed()
- com.microsoft.azure.servicebus.primitives.ClientEntity.throwIfClosed(Throwable)
methods:
- fullName: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver.abandonMessageAsync(byte[] deliveryTag, Map<String, Object> propertiesToModify, TransactionContext transaction)
  name: abandonMessageAsync(byte[] deliveryTag, Map<String, Object> propertiesToModify, TransactionContext transaction)
  nameWithType: CoreMessageReceiver.abandonMessageAsync(byte[] deliveryTag, Map<String, Object> propertiesToModify, TransactionContext transaction)
  parameters:
  - name: deliveryTag
    type: <xref href="byte+%5B%5D?alt=byte+%5B%5D&text=byte+%5B%5D" data-throw-if-not-resolved="False"/>
  - name: propertiesToModify
    type: <xref href="Map%3CString%2C+Object%3E?alt=Map%3CString%2C+Object%3E&text=Map%3CString%2C+Object%3E" data-throw-if-not-resolved="False"/>
  - name: transaction
    type: <xref href="com.microsoft.azure.servicebus.TransactionContext?alt=com.microsoft.azure.servicebus.TransactionContext&text=TransactionContext" data-throw-if-not-resolved="False"/>
  returns:
    type: <xref href="CompletableFuture%3CVoid%3E?alt=CompletableFuture%3CVoid%3E&text=CompletableFuture%3CVoid%3E" data-throw-if-not-resolved="False"/>
  syntax: public CompletableFuture<Void> abandonMessageAsync(byte[] deliveryTag, Map<String, Object> propertiesToModify, TransactionContext transaction)
  uid: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver.abandonMessageAsync(byte [],Map<String, Object>,TransactionContext)
- fullName: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver.abandonMessageAsync(UUID lockToken, Map<String, Object> propertiesToModify, TransactionContext transaction)
  name: abandonMessageAsync(UUID lockToken, Map<String, Object> propertiesToModify, TransactionContext transaction)
  nameWithType: CoreMessageReceiver.abandonMessageAsync(UUID lockToken, Map<String, Object> propertiesToModify, TransactionContext transaction)
  parameters:
  - name: lockToken
    type: <xref href="UUID?alt=UUID&text=UUID" data-throw-if-not-resolved="False"/>
  - name: propertiesToModify
    type: <xref href="Map%3CString%2C+Object%3E?alt=Map%3CString%2C+Object%3E&text=Map%3CString%2C+Object%3E" data-throw-if-not-resolved="False"/>
  - name: transaction
    type: <xref href="com.microsoft.azure.servicebus.TransactionContext?alt=com.microsoft.azure.servicebus.TransactionContext&text=TransactionContext" data-throw-if-not-resolved="False"/>
  returns:
    type: <xref href="CompletableFuture%3CVoid%3E?alt=CompletableFuture%3CVoid%3E&text=CompletableFuture%3CVoid%3E" data-throw-if-not-resolved="False"/>
  syntax: public CompletableFuture<Void> abandonMessageAsync(UUID lockToken, Map<String, Object> propertiesToModify, TransactionContext transaction)
  uid: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver.abandonMessageAsync(UUID,Map<String, Object>,TransactionContext)
- fullName: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver.completeMessageAsync(byte[] deliveryTag, TransactionContext transaction)
  name: completeMessageAsync(byte[] deliveryTag, TransactionContext transaction)
  nameWithType: CoreMessageReceiver.completeMessageAsync(byte[] deliveryTag, TransactionContext transaction)
  parameters:
  - name: deliveryTag
    type: <xref href="byte+%5B%5D?alt=byte+%5B%5D&text=byte+%5B%5D" data-throw-if-not-resolved="False"/>
  - name: transaction
    type: <xref href="com.microsoft.azure.servicebus.TransactionContext?alt=com.microsoft.azure.servicebus.TransactionContext&text=TransactionContext" data-throw-if-not-resolved="False"/>
  returns:
    type: <xref href="CompletableFuture%3CVoid%3E?alt=CompletableFuture%3CVoid%3E&text=CompletableFuture%3CVoid%3E" data-throw-if-not-resolved="False"/>
  syntax: public CompletableFuture<Void> completeMessageAsync(byte[] deliveryTag, TransactionContext transaction)
  uid: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver.completeMessageAsync(byte [],TransactionContext)
- fullName: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver.completeMessageAsync(UUID lockToken, TransactionContext transaction)
  name: completeMessageAsync(UUID lockToken, TransactionContext transaction)
  nameWithType: CoreMessageReceiver.completeMessageAsync(UUID lockToken, TransactionContext transaction)
  parameters:
  - name: lockToken
    type: <xref href="UUID?alt=UUID&text=UUID" data-throw-if-not-resolved="False"/>
  - name: transaction
    type: <xref href="com.microsoft.azure.servicebus.TransactionContext?alt=com.microsoft.azure.servicebus.TransactionContext&text=TransactionContext" data-throw-if-not-resolved="False"/>
  returns:
    type: <xref href="CompletableFuture%3CVoid%3E?alt=CompletableFuture%3CVoid%3E&text=CompletableFuture%3CVoid%3E" data-throw-if-not-resolved="False"/>
  syntax: public CompletableFuture<Void> completeMessageAsync(UUID lockToken, TransactionContext transaction)
  uid: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver.completeMessageAsync(UUID,TransactionContext)
- fullName: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver.create(final MessagingFactory factory, final String name, final String recvPath, final int prefetchCount, final SettleModePair settleModePair)
  name: create(final MessagingFactory factory, final String name, final String recvPath, final int prefetchCount, final SettleModePair settleModePair)
  nameWithType: CoreMessageReceiver.create(final MessagingFactory factory, final String name, final String recvPath, final int prefetchCount, final SettleModePair settleModePair)
  parameters:
  - name: factory
    type: final <xref href="com.microsoft.azure.servicebus.primitives.MessagingFactory?alt=com.microsoft.azure.servicebus.primitives.MessagingFactory&text=MessagingFactory" data-throw-if-not-resolved="False"/>
  - name: name
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - name: recvPath
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - name: prefetchCount
    type: <xref href="final+int?alt=final+int&text=final+int" data-throw-if-not-resolved="False"/>
  - name: settleModePair
    type: final <xref href="com.microsoft.azure.servicebus.primitives.SettleModePair?alt=com.microsoft.azure.servicebus.primitives.SettleModePair&text=SettleModePair" data-throw-if-not-resolved="False"/>
  returns:
    type: CompletableFuture&lt;<xref href="com.microsoft.azure.servicebus.primitives.CoreMessageReceiver?alt=com.microsoft.azure.servicebus.primitives.CoreMessageReceiver&text=CoreMessageReceiver" data-throw-if-not-resolved="False"/>&gt;
  syntax: public static CompletableFuture<CoreMessageReceiver> create(final MessagingFactory factory, final String name, final String recvPath, final int prefetchCount, final SettleModePair settleModePair)
  uid: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver.create(final MessagingFactory,final String,final String,final int,final SettleModePair)
- fullName: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver.create(final MessagingFactory factory, final String name, final String recvPath, final int prefetchCount, final SettleModePair settleModePair, final MessagingEntityType entityType)
  name: create(final MessagingFactory factory, final String name, final String recvPath, final int prefetchCount, final SettleModePair settleModePair, final MessagingEntityType entityType)
  nameWithType: CoreMessageReceiver.create(final MessagingFactory factory, final String name, final String recvPath, final int prefetchCount, final SettleModePair settleModePair, final MessagingEntityType entityType)
  parameters:
  - name: factory
    type: final <xref href="com.microsoft.azure.servicebus.primitives.MessagingFactory?alt=com.microsoft.azure.servicebus.primitives.MessagingFactory&text=MessagingFactory" data-throw-if-not-resolved="False"/>
  - name: name
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - name: recvPath
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - name: prefetchCount
    type: <xref href="final+int?alt=final+int&text=final+int" data-throw-if-not-resolved="False"/>
  - name: settleModePair
    type: final <xref href="com.microsoft.azure.servicebus.primitives.SettleModePair?alt=com.microsoft.azure.servicebus.primitives.SettleModePair&text=SettleModePair" data-throw-if-not-resolved="False"/>
  - name: entityType
    type: final <xref href="com.microsoft.azure.servicebus.primitives.MessagingEntityType?alt=com.microsoft.azure.servicebus.primitives.MessagingEntityType&text=MessagingEntityType" data-throw-if-not-resolved="False"/>
  returns:
    type: CompletableFuture&lt;<xref href="com.microsoft.azure.servicebus.primitives.CoreMessageReceiver?alt=com.microsoft.azure.servicebus.primitives.CoreMessageReceiver&text=CoreMessageReceiver" data-throw-if-not-resolved="False"/>&gt;
  syntax: public static CompletableFuture<CoreMessageReceiver> create(final MessagingFactory factory, final String name, final String recvPath, final int prefetchCount, final SettleModePair settleModePair, final MessagingEntityType entityType)
  uid: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver.create(final MessagingFactory,final String,final String,final int,final SettleModePair,final MessagingEntityType)
- fullName: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver.create(final MessagingFactory factory, final String name, final String recvPath, final String sessionId, final boolean isBrowsableSession, final int prefetchCount, final SettleModePair settleModePair)
  name: create(final MessagingFactory factory, final String name, final String recvPath, final String sessionId, final boolean isBrowsableSession, final int prefetchCount, final SettleModePair settleModePair)
  nameWithType: CoreMessageReceiver.create(final MessagingFactory factory, final String name, final String recvPath, final String sessionId, final boolean isBrowsableSession, final int prefetchCount, final SettleModePair settleModePair)
  parameters:
  - name: factory
    type: final <xref href="com.microsoft.azure.servicebus.primitives.MessagingFactory?alt=com.microsoft.azure.servicebus.primitives.MessagingFactory&text=MessagingFactory" data-throw-if-not-resolved="False"/>
  - name: name
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - name: recvPath
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - name: sessionId
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - name: isBrowsableSession
    type: <xref href="final+boolean?alt=final+boolean&text=final+boolean" data-throw-if-not-resolved="False"/>
  - name: prefetchCount
    type: <xref href="final+int?alt=final+int&text=final+int" data-throw-if-not-resolved="False"/>
  - name: settleModePair
    type: final <xref href="com.microsoft.azure.servicebus.primitives.SettleModePair?alt=com.microsoft.azure.servicebus.primitives.SettleModePair&text=SettleModePair" data-throw-if-not-resolved="False"/>
  returns:
    type: CompletableFuture&lt;<xref href="com.microsoft.azure.servicebus.primitives.CoreMessageReceiver?alt=com.microsoft.azure.servicebus.primitives.CoreMessageReceiver&text=CoreMessageReceiver" data-throw-if-not-resolved="False"/>&gt;
  syntax: public static CompletableFuture<CoreMessageReceiver> create(final MessagingFactory factory, final String name, final String recvPath, final String sessionId, final boolean isBrowsableSession, final int prefetchCount, final SettleModePair settleModePair)
  uid: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver.create(final MessagingFactory,final String,final String,final String,final boolean,final int,final SettleModePair)
- fullName: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver.create(final MessagingFactory factory, final String name, final String recvPath, final String sessionId, final boolean isBrowsableSession, final int prefetchCount, final SettleModePair settleModePair, final MessagingEntityType entityType)
  name: create(final MessagingFactory factory, final String name, final String recvPath, final String sessionId, final boolean isBrowsableSession, final int prefetchCount, final SettleModePair settleModePair, final MessagingEntityType entityType)
  nameWithType: CoreMessageReceiver.create(final MessagingFactory factory, final String name, final String recvPath, final String sessionId, final boolean isBrowsableSession, final int prefetchCount, final SettleModePair settleModePair, final MessagingEntityType entityType)
  parameters:
  - name: factory
    type: final <xref href="com.microsoft.azure.servicebus.primitives.MessagingFactory?alt=com.microsoft.azure.servicebus.primitives.MessagingFactory&text=MessagingFactory" data-throw-if-not-resolved="False"/>
  - name: name
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - name: recvPath
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - name: sessionId
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - name: isBrowsableSession
    type: <xref href="final+boolean?alt=final+boolean&text=final+boolean" data-throw-if-not-resolved="False"/>
  - name: prefetchCount
    type: <xref href="final+int?alt=final+int&text=final+int" data-throw-if-not-resolved="False"/>
  - name: settleModePair
    type: final <xref href="com.microsoft.azure.servicebus.primitives.SettleModePair?alt=com.microsoft.azure.servicebus.primitives.SettleModePair&text=SettleModePair" data-throw-if-not-resolved="False"/>
  - name: entityType
    type: final <xref href="com.microsoft.azure.servicebus.primitives.MessagingEntityType?alt=com.microsoft.azure.servicebus.primitives.MessagingEntityType&text=MessagingEntityType" data-throw-if-not-resolved="False"/>
  returns:
    type: CompletableFuture&lt;<xref href="com.microsoft.azure.servicebus.primitives.CoreMessageReceiver?alt=com.microsoft.azure.servicebus.primitives.CoreMessageReceiver&text=CoreMessageReceiver" data-throw-if-not-resolved="False"/>&gt;
  syntax: public static CompletableFuture<CoreMessageReceiver> create(final MessagingFactory factory, final String name, final String recvPath, final String sessionId, final boolean isBrowsableSession, final int prefetchCount, final SettleModePair settleModePair, final MessagingEntityType entityType)
  uid: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver.create(final MessagingFactory,final String,final String,final String,final boolean,final int,final SettleModePair,final MessagingEntityType)
- fullName: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver.deadLetterMessageAsync(byte[] deliveryTag, String deadLetterReason, String deadLetterErrorDescription, Map<String, Object> propertiesToModify, TransactionContext transaction)
  name: deadLetterMessageAsync(byte[] deliveryTag, String deadLetterReason, String deadLetterErrorDescription, Map<String, Object> propertiesToModify, TransactionContext transaction)
  nameWithType: CoreMessageReceiver.deadLetterMessageAsync(byte[] deliveryTag, String deadLetterReason, String deadLetterErrorDescription, Map<String, Object> propertiesToModify, TransactionContext transaction)
  parameters:
  - name: deliveryTag
    type: <xref href="byte+%5B%5D?alt=byte+%5B%5D&text=byte+%5B%5D" data-throw-if-not-resolved="False"/>
  - name: deadLetterReason
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - name: deadLetterErrorDescription
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - name: propertiesToModify
    type: <xref href="Map%3CString%2C+Object%3E?alt=Map%3CString%2C+Object%3E&text=Map%3CString%2C+Object%3E" data-throw-if-not-resolved="False"/>
  - name: transaction
    type: <xref href="com.microsoft.azure.servicebus.TransactionContext?alt=com.microsoft.azure.servicebus.TransactionContext&text=TransactionContext" data-throw-if-not-resolved="False"/>
  returns:
    type: <xref href="CompletableFuture%3CVoid%3E?alt=CompletableFuture%3CVoid%3E&text=CompletableFuture%3CVoid%3E" data-throw-if-not-resolved="False"/>
  syntax: public CompletableFuture<Void> deadLetterMessageAsync(byte[] deliveryTag, String deadLetterReason, String deadLetterErrorDescription, Map<String, Object> propertiesToModify, TransactionContext transaction)
  uid: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver.deadLetterMessageAsync(byte [],String,String,Map<String, Object>,TransactionContext)
- fullName: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver.deadLetterMessageAsync(UUID lockToken, String deadLetterReason, String deadLetterErrorDescription, Map<String, Object> propertiesToModify, TransactionContext transaction)
  name: deadLetterMessageAsync(UUID lockToken, String deadLetterReason, String deadLetterErrorDescription, Map<String, Object> propertiesToModify, TransactionContext transaction)
  nameWithType: CoreMessageReceiver.deadLetterMessageAsync(UUID lockToken, String deadLetterReason, String deadLetterErrorDescription, Map<String, Object> propertiesToModify, TransactionContext transaction)
  parameters:
  - name: lockToken
    type: <xref href="UUID?alt=UUID&text=UUID" data-throw-if-not-resolved="False"/>
  - name: deadLetterReason
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - name: deadLetterErrorDescription
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - name: propertiesToModify
    type: <xref href="Map%3CString%2C+Object%3E?alt=Map%3CString%2C+Object%3E&text=Map%3CString%2C+Object%3E" data-throw-if-not-resolved="False"/>
  - name: transaction
    type: <xref href="com.microsoft.azure.servicebus.TransactionContext?alt=com.microsoft.azure.servicebus.TransactionContext&text=TransactionContext" data-throw-if-not-resolved="False"/>
  returns:
    type: <xref href="CompletableFuture%3CVoid%3E?alt=CompletableFuture%3CVoid%3E&text=CompletableFuture%3CVoid%3E" data-throw-if-not-resolved="False"/>
  syntax: public CompletableFuture<Void> deadLetterMessageAsync(UUID lockToken, String deadLetterReason, String deadLetterErrorDescription, Map<String, Object> propertiesToModify, TransactionContext transaction)
  uid: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver.deadLetterMessageAsync(UUID,String,String,Map<String, Object>,TransactionContext)
- fullName: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver.deferMessageAsync(byte[] deliveryTag, Map<String, Object> propertiesToModify, TransactionContext transaction)
  name: deferMessageAsync(byte[] deliveryTag, Map<String, Object> propertiesToModify, TransactionContext transaction)
  nameWithType: CoreMessageReceiver.deferMessageAsync(byte[] deliveryTag, Map<String, Object> propertiesToModify, TransactionContext transaction)
  parameters:
  - name: deliveryTag
    type: <xref href="byte+%5B%5D?alt=byte+%5B%5D&text=byte+%5B%5D" data-throw-if-not-resolved="False"/>
  - name: propertiesToModify
    type: <xref href="Map%3CString%2C+Object%3E?alt=Map%3CString%2C+Object%3E&text=Map%3CString%2C+Object%3E" data-throw-if-not-resolved="False"/>
  - name: transaction
    type: <xref href="com.microsoft.azure.servicebus.TransactionContext?alt=com.microsoft.azure.servicebus.TransactionContext&text=TransactionContext" data-throw-if-not-resolved="False"/>
  returns:
    type: <xref href="CompletableFuture%3CVoid%3E?alt=CompletableFuture%3CVoid%3E&text=CompletableFuture%3CVoid%3E" data-throw-if-not-resolved="False"/>
  syntax: public CompletableFuture<Void> deferMessageAsync(byte[] deliveryTag, Map<String, Object> propertiesToModify, TransactionContext transaction)
  uid: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver.deferMessageAsync(byte [],Map<String, Object>,TransactionContext)
- fullName: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver.deferMessageAsync(UUID lockToken, Map<String, Object> propertiesToModify, TransactionContext transaction)
  name: deferMessageAsync(UUID lockToken, Map<String, Object> propertiesToModify, TransactionContext transaction)
  nameWithType: CoreMessageReceiver.deferMessageAsync(UUID lockToken, Map<String, Object> propertiesToModify, TransactionContext transaction)
  parameters:
  - name: lockToken
    type: <xref href="UUID?alt=UUID&text=UUID" data-throw-if-not-resolved="False"/>
  - name: propertiesToModify
    type: <xref href="Map%3CString%2C+Object%3E?alt=Map%3CString%2C+Object%3E&text=Map%3CString%2C+Object%3E" data-throw-if-not-resolved="False"/>
  - name: transaction
    type: <xref href="com.microsoft.azure.servicebus.TransactionContext?alt=com.microsoft.azure.servicebus.TransactionContext&text=TransactionContext" data-throw-if-not-resolved="False"/>
  returns:
    type: <xref href="CompletableFuture%3CVoid%3E?alt=CompletableFuture%3CVoid%3E&text=CompletableFuture%3CVoid%3E" data-throw-if-not-resolved="False"/>
  syntax: public CompletableFuture<Void> deferMessageAsync(UUID lockToken, Map<String, Object> propertiesToModify, TransactionContext transaction)
  uid: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver.deferMessageAsync(UUID,Map<String, Object>,TransactionContext)
- fullName: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver.getContext()
  name: getContext()
  nameWithType: CoreMessageReceiver.getContext()
  returns:
    type: <xref href="ErrorContext?alt=ErrorContext&text=ErrorContext" data-throw-if-not-resolved="False"/>
  syntax: public ErrorContext getContext()
  uid: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver.getContext()
- fullName: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver.getPrefetchCount()
  name: getPrefetchCount()
  nameWithType: CoreMessageReceiver.getPrefetchCount()
  returns:
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  syntax: public int getPrefetchCount()
  uid: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver.getPrefetchCount()
- fullName: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver.getSessionId()
  name: getSessionId()
  nameWithType: CoreMessageReceiver.getSessionId()
  returns:
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  syntax: public String getSessionId()
  uid: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver.getSessionId()
- fullName: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver.getSessionLockedUntilUtc()
  name: getSessionLockedUntilUtc()
  nameWithType: CoreMessageReceiver.getSessionLockedUntilUtc()
  returns:
    type: <xref href="Instant?alt=Instant&text=Instant" data-throw-if-not-resolved="False"/>
  syntax: public Instant getSessionLockedUntilUtc()
  uid: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver.getSessionLockedUntilUtc()
- fullName: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver.getSessionStateAsync()
  name: getSessionStateAsync()
  nameWithType: CoreMessageReceiver.getSessionStateAsync()
  returns:
    type: <xref href="CompletableFuture%3Cbyte%5B%5D%3E?alt=CompletableFuture%3Cbyte%5B%5D%3E&text=CompletableFuture%3Cbyte%5B%5D%3E" data-throw-if-not-resolved="False"/>
  syntax: public CompletableFuture<byte[]> getSessionStateAsync()
  uid: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver.getSessionStateAsync()
- fullName: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver.onClose()
  name: onClose()
  nameWithType: CoreMessageReceiver.onClose()
  returns:
    type: <xref href="CompletableFuture%3CVoid%3E?alt=CompletableFuture%3CVoid%3E&text=CompletableFuture%3CVoid%3E" data-throw-if-not-resolved="False"/>
  syntax: protected CompletableFuture<Void> onClose()
  uid: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver.onClose()
- fullName: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver.onClose(ErrorCondition condition)
  name: onClose(ErrorCondition condition)
  nameWithType: CoreMessageReceiver.onClose(ErrorCondition condition)
  parameters:
  - name: condition
    type: <xref href="ErrorCondition?alt=ErrorCondition&text=ErrorCondition" data-throw-if-not-resolved="False"/>
  syntax: public void onClose(ErrorCondition condition)
  uid: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver.onClose(ErrorCondition)
- fullName: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver.onError(Exception exception)
  name: onError(Exception exception)
  nameWithType: CoreMessageReceiver.onError(Exception exception)
  parameters:
  - name: exception
    type: <xref href="Exception?alt=Exception&text=Exception" data-throw-if-not-resolved="False"/>
  syntax: public void onError(Exception exception)
  uid: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver.onError(Exception)
- fullName: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver.onOpenComplete(Exception exception)
  name: onOpenComplete(Exception exception)
  nameWithType: CoreMessageReceiver.onOpenComplete(Exception exception)
  parameters:
  - name: exception
    type: <xref href="Exception?alt=Exception&text=Exception" data-throw-if-not-resolved="False"/>
  syntax: public void onOpenComplete(Exception exception)
  uid: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver.onOpenComplete(Exception)
- fullName: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver.onReceiveComplete(Delivery delivery)
  name: onReceiveComplete(Delivery delivery)
  nameWithType: CoreMessageReceiver.onReceiveComplete(Delivery delivery)
  parameters:
  - name: delivery
    type: <xref href="Delivery?alt=Delivery&text=Delivery" data-throw-if-not-resolved="False"/>
  syntax: public void onReceiveComplete(Delivery delivery)
  uid: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver.onReceiveComplete(Delivery)
- fullName: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver.peekMessagesAsync(long fromSequenceNumber, int messageCount, String sessionId)
  name: peekMessagesAsync(long fromSequenceNumber, int messageCount, String sessionId)
  nameWithType: CoreMessageReceiver.peekMessagesAsync(long fromSequenceNumber, int messageCount, String sessionId)
  parameters:
  - name: fromSequenceNumber
    type: <xref href="long?alt=long&text=long" data-throw-if-not-resolved="False"/>
  - name: messageCount
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  - name: sessionId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    type: <xref href="CompletableFuture%3CCollection%3CMessage%3E%3E?alt=CompletableFuture%3CCollection%3CMessage%3E%3E&text=CompletableFuture%3CCollection%3CMessage%3E%3E" data-throw-if-not-resolved="False"/>
  syntax: public CompletableFuture<Collection<Message>> peekMessagesAsync(long fromSequenceNumber, int messageCount, String sessionId)
  uid: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver.peekMessagesAsync(long,int,String)
- fullName: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver.receiveAsync(final int maxMessageCount, Duration timeout)
  name: receiveAsync(final int maxMessageCount, Duration timeout)
  nameWithType: CoreMessageReceiver.receiveAsync(final int maxMessageCount, Duration timeout)
  parameters:
  - name: maxMessageCount
    type: <xref href="final+int?alt=final+int&text=final+int" data-throw-if-not-resolved="False"/>
  - name: timeout
    type: <xref href="Duration?alt=Duration&text=Duration" data-throw-if-not-resolved="False"/>
  returns:
    type: CompletableFuture&lt;Collection&lt;<xref href="com.microsoft.azure.servicebus.primitives.MessageWithDeliveryTag?alt=com.microsoft.azure.servicebus.primitives.MessageWithDeliveryTag&text=MessageWithDeliveryTag" data-throw-if-not-resolved="False"/>&gt;&gt;
  syntax: public CompletableFuture<Collection<MessageWithDeliveryTag>> receiveAsync(final int maxMessageCount, Duration timeout)
  uid: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver.receiveAsync(final int,Duration)
- fullName: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver.receiveDeferredMessageBatchAsync(Long[] sequenceNumbers)
  name: receiveDeferredMessageBatchAsync(Long[] sequenceNumbers)
  nameWithType: CoreMessageReceiver.receiveDeferredMessageBatchAsync(Long[] sequenceNumbers)
  parameters:
  - name: sequenceNumbers
    type: <xref href="Long+%5B%5D?alt=Long+%5B%5D&text=Long+%5B%5D" data-throw-if-not-resolved="False"/>
  returns:
    type: CompletableFuture&lt;Collection&lt;<xref href="com.microsoft.azure.servicebus.primitives.MessageWithLockToken?alt=com.microsoft.azure.servicebus.primitives.MessageWithLockToken&text=MessageWithLockToken" data-throw-if-not-resolved="False"/>&gt;&gt;
  syntax: public CompletableFuture<Collection<MessageWithLockToken>> receiveDeferredMessageBatchAsync(Long[] sequenceNumbers)
  uid: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver.receiveDeferredMessageBatchAsync(Long [])
- fullName: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver.renewMessageLocksAsync(UUID[] lockTokens)
  name: renewMessageLocksAsync(UUID[] lockTokens)
  nameWithType: CoreMessageReceiver.renewMessageLocksAsync(UUID[] lockTokens)
  parameters:
  - name: lockTokens
    type: <xref href="UUID+%5B%5D?alt=UUID+%5B%5D&text=UUID+%5B%5D" data-throw-if-not-resolved="False"/>
  returns:
    type: <xref href="CompletableFuture%3CCollection%3CInstant%3E%3E?alt=CompletableFuture%3CCollection%3CInstant%3E%3E&text=CompletableFuture%3CCollection%3CInstant%3E%3E" data-throw-if-not-resolved="False"/>
  syntax: public CompletableFuture<Collection<Instant>> renewMessageLocksAsync(UUID[] lockTokens)
  uid: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver.renewMessageLocksAsync(UUID [])
- fullName: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver.renewSessionLocksAsync()
  name: renewSessionLocksAsync()
  nameWithType: CoreMessageReceiver.renewSessionLocksAsync()
  returns:
    type: <xref href="CompletableFuture%3CVoid%3E?alt=CompletableFuture%3CVoid%3E&text=CompletableFuture%3CVoid%3E" data-throw-if-not-resolved="False"/>
  syntax: public CompletableFuture<Void> renewSessionLocksAsync()
  uid: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver.renewSessionLocksAsync()
- fullName: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver.setPrefetchCount(final int value)
  name: setPrefetchCount(final int value)
  nameWithType: CoreMessageReceiver.setPrefetchCount(final int value)
  parameters:
  - name: value
    type: <xref href="final+int?alt=final+int&text=final+int" data-throw-if-not-resolved="False"/>
  syntax: public void setPrefetchCount(final int value)
  uid: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver.setPrefetchCount(final int)
- fullName: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver.setSessionStateAsync(byte[] sessionState)
  name: setSessionStateAsync(byte[] sessionState)
  nameWithType: CoreMessageReceiver.setSessionStateAsync(byte[] sessionState)
  parameters:
  - name: sessionState
    type: <xref href="byte+%5B%5D?alt=byte+%5B%5D&text=byte+%5B%5D" data-throw-if-not-resolved="False"/>
  returns:
    type: <xref href="CompletableFuture%3CVoid%3E?alt=CompletableFuture%3CVoid%3E&text=CompletableFuture%3CVoid%3E" data-throw-if-not-resolved="False"/>
  syntax: public CompletableFuture<Void> setSessionStateAsync(byte[] sessionState)
  uid: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver.setSessionStateAsync(byte [])
- fullName: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver.updateDispositionAsync(UUID[] lockTokens, String dispositionStatus, String deadLetterReason, String deadLetterErrorDescription, Map<String, Object> propertiesToModify, TransactionContext transaction)
  name: updateDispositionAsync(UUID[] lockTokens, String dispositionStatus, String deadLetterReason, String deadLetterErrorDescription, Map<String, Object> propertiesToModify, TransactionContext transaction)
  nameWithType: CoreMessageReceiver.updateDispositionAsync(UUID[] lockTokens, String dispositionStatus, String deadLetterReason, String deadLetterErrorDescription, Map<String, Object> propertiesToModify, TransactionContext transaction)
  parameters:
  - name: lockTokens
    type: <xref href="UUID+%5B%5D?alt=UUID+%5B%5D&text=UUID+%5B%5D" data-throw-if-not-resolved="False"/>
  - name: dispositionStatus
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - name: deadLetterReason
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - name: deadLetterErrorDescription
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - name: propertiesToModify
    type: <xref href="Map%3CString%2C+Object%3E?alt=Map%3CString%2C+Object%3E&text=Map%3CString%2C+Object%3E" data-throw-if-not-resolved="False"/>
  - name: transaction
    type: <xref href="com.microsoft.azure.servicebus.TransactionContext?alt=com.microsoft.azure.servicebus.TransactionContext&text=TransactionContext" data-throw-if-not-resolved="False"/>
  returns:
    type: <xref href="CompletableFuture%3CVoid%3E?alt=CompletableFuture%3CVoid%3E&text=CompletableFuture%3CVoid%3E" data-throw-if-not-resolved="False"/>
  syntax: public CompletableFuture<Void> updateDispositionAsync(UUID[] lockTokens, String dispositionStatus, String deadLetterReason, String deadLetterErrorDescription, Map<String, Object> propertiesToModify, TransactionContext transaction)
  uid: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver.updateDispositionAsync(UUID [],String,String,String,Map<String, Object>,TransactionContext)
nameWithType: CoreMessageReceiver
syntax: public class CoreMessageReceiver extends ClientEntity
type: class
uid: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver
fullName: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver
name: CoreMessageReceiver
package: com.microsoft.azure.servicebus.primitives
metadata: {}
