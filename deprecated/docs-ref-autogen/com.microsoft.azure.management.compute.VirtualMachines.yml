### YamlMime:JavaType
inheritedMembers:
- com.microsoft.azure.management.resources.fluentcore.collection.SupportsBatchCreation.create(Creatable<ResourceT>...)
- com.microsoft.azure.management.resources.fluentcore.collection.SupportsBatchCreation.create(List<Creatable<ResourceT>>)
- com.microsoft.azure.management.resources.fluentcore.collection.SupportsBatchCreation.createAsync(Creatable<ResourceT>...)
- com.microsoft.azure.management.resources.fluentcore.collection.SupportsBatchCreation.createAsync(List<Creatable<ResourceT>>)
- com.microsoft.azure.management.resources.fluentcore.collection.SupportsBatchCreation.createAsync(ServiceCallback<CreatedResources<ResourceT>>,Creatable<ResourceT>...)
- com.microsoft.azure.management.resources.fluentcore.collection.SupportsBatchCreation.createAsync(final ServiceCallback<CreatedResources<ResourceT>>,List<Creatable<ResourceT>>)
- com.microsoft.azure.management.resources.fluentcore.collection.SupportsCreating.define(String)
- com.microsoft.azure.management.resources.fluentcore.collection.SupportsDeletingById.deleteById(String)
- com.microsoft.azure.management.resources.fluentcore.collection.SupportsDeletingById.deleteByIdAsync(String,ServiceCallback<Void>)
- com.microsoft.azure.management.resources.fluentcore.collection.SupportsDeletingById.deleteByIdAsync(String)
- com.microsoft.azure.management.resources.fluentcore.arm.collection.SupportsBatchDeletion.deleteByIds(Collection<String>)
- com.microsoft.azure.management.resources.fluentcore.arm.collection.SupportsBatchDeletion.deleteByIds(String...)
- com.microsoft.azure.management.resources.fluentcore.arm.collection.SupportsBatchDeletion.deleteByIdsAsync(Collection<String>)
- com.microsoft.azure.management.resources.fluentcore.arm.collection.SupportsBatchDeletion.deleteByIdsAsync(String...)
- com.microsoft.azure.management.resources.fluentcore.arm.collection.SupportsDeletingByResourceGroup.deleteByResourceGroup(String,String)
- com.microsoft.azure.management.resources.fluentcore.arm.collection.SupportsDeletingByResourceGroup.deleteByResourceGroupAsync(String,String,ServiceCallback<Void>)
- com.microsoft.azure.management.resources.fluentcore.arm.collection.SupportsDeletingByResourceGroup.deleteByResourceGroupAsync(String,String)
- com.microsoft.azure.management.resources.fluentcore.arm.collection.SupportsGettingById.getById(String)
- com.microsoft.azure.management.resources.fluentcore.arm.collection.SupportsGettingById.getByIdAsync(String)
- com.microsoft.azure.management.resources.fluentcore.arm.collection.SupportsGettingById.getByIdAsync(String,ServiceCallback<T>)
- com.microsoft.azure.management.resources.fluentcore.arm.collection.SupportsGettingByResourceGroup.getByResourceGroup(String,String)
- com.microsoft.azure.management.resources.fluentcore.arm.collection.SupportsGettingByResourceGroup.getByResourceGroupAsync(String,String)
- com.microsoft.azure.management.resources.fluentcore.arm.collection.SupportsGettingByResourceGroup.getByResourceGroupAsync(String,String,ServiceCallback<T>)
- com.microsoft.azure.management.resources.fluentcore.model.HasInner.inner()
- com.microsoft.azure.management.resources.fluentcore.collection.SupportsListing.list()
- com.microsoft.azure.management.resources.fluentcore.collection.SupportsListing.listAsync()
- com.microsoft.azure.management.resources.fluentcore.arm.collection.SupportsListingByResourceGroup.listByResourceGroup(String)
- com.microsoft.azure.management.resources.fluentcore.arm.collection.SupportsListingByResourceGroup.listByResourceGroupAsync(String)
- com.microsoft.azure.management.resources.fluentcore.arm.models.HasManager.manager()
methods:
- fullName: com.microsoft.azure.management.compute.VirtualMachines.capture(String groupName, String name, String containerName, String vhdPrefix, boolean overwriteVhd)
  name: capture(String groupName, String name, String containerName, String vhdPrefix, boolean overwriteVhd)
  nameWithType: VirtualMachines.capture(String groupName, String name, String containerName, String vhdPrefix, boolean overwriteVhd)
  parameters:
  - description: <p>the resource group name </p>
    name: groupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the virtual machine name </p>
    name: name
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>destination container name to store the captured VHD </p>
    name: containerName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the prefix for the VHD holding captured image </p>
    name: vhdPrefix
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>whether to overwrites destination VHD if it exists </p>
    name: overwriteVhd
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the template as JSON string </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Captures the virtual machine by copying virtual hard disks of the VM and returns template as a JSON string that can be used to create similar VMs.</p>

    <p></p>
  syntax: public String capture(String groupName, String name, String containerName, String vhdPrefix, boolean overwriteVhd)
  uid: com.microsoft.azure.management.compute.VirtualMachines.capture(String,String,String,String,boolean)
- fullName: com.microsoft.azure.management.compute.VirtualMachines.captureAsync(String groupName, String name, String containerName, String vhdPrefix, boolean overwriteVhd)
  name: captureAsync(String groupName, String name, String containerName, String vhdPrefix, boolean overwriteVhd)
  nameWithType: VirtualMachines.captureAsync(String groupName, String name, String containerName, String vhdPrefix, boolean overwriteVhd)
  parameters:
  - description: <p>the resource group name </p>
    name: groupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the virtual machine name </p>
    name: name
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>destination container name to store the captured VHD </p>
    name: containerName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the prefix for the VHD holding captured image </p>
    name: vhdPrefix
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>whether to overwrites destination VHD if it exists </p>
    name: overwriteVhd
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>a representation of the deferred computation of this call </p>
    type: <xref href="Observable%3CString%3E?alt=Observable%3CString%3E&text=Observable%3CString%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Captures the virtual machine by copying virtual hard disks of the VM asynchronously.</p>

    <p></p>
  syntax: public Observable<String> captureAsync(String groupName, String name, String containerName, String vhdPrefix, boolean overwriteVhd)
  uid: com.microsoft.azure.management.compute.VirtualMachines.captureAsync(String,String,String,String,boolean)
- fullName: com.microsoft.azure.management.compute.VirtualMachines.captureAsync(String groupName, String name, String containerName, String vhdPrefix, boolean overwriteVhd, ServiceCallback<String> callback)
  name: captureAsync(String groupName, String name, String containerName, String vhdPrefix, boolean overwriteVhd, ServiceCallback<String> callback)
  nameWithType: VirtualMachines.captureAsync(String groupName, String name, String containerName, String vhdPrefix, boolean overwriteVhd, ServiceCallback<String> callback)
  parameters:
  - description: <p>the resource group name </p>
    name: groupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the virtual machine name </p>
    name: name
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>destination container name to store the captured VHD </p>
    name: containerName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the prefix for the VHD holding captured image </p>
    name: vhdPrefix
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>whether to overwrites destination VHD if it exists </p>
    name: overwriteVhd
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False"/>
  - description: <p>the callback to call on success or failure </p>
    name: callback
    type: <xref href="ServiceCallback%3CString%3E?alt=ServiceCallback%3CString%3E&text=ServiceCallback%3CString%3E" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>a representation of the deferred computation of this call </p>
    type: <xref href="ServiceFuture%3CString%3E?alt=ServiceFuture%3CString%3E&text=ServiceFuture%3CString%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Captures the virtual machine by copying virtual hard disks of the VM asynchronously.</p>

    <p></p>
  syntax: public ServiceFuture<String> captureAsync(String groupName, String name, String containerName, String vhdPrefix, boolean overwriteVhd, ServiceCallback<String> callback)
  uid: com.microsoft.azure.management.compute.VirtualMachines.captureAsync(String,String,String,String,boolean,ServiceCallback<String>)
- fullName: com.microsoft.azure.management.compute.VirtualMachines.deallocate(String groupName, String name)
  name: deallocate(String groupName, String name)
  nameWithType: VirtualMachines.deallocate(String groupName, String name)
  parameters:
  - description: <p>the name of the resource group the virtual machine is in </p>
    name: groupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the virtual machine name </p>
    name: name
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Shuts down the virtual machine and releases the compute resources.</p>

    <p></p>
  syntax: public void deallocate(String groupName, String name)
  uid: com.microsoft.azure.management.compute.VirtualMachines.deallocate(String,String)
- fullName: com.microsoft.azure.management.compute.VirtualMachines.deallocateAsync(String groupName, String name)
  name: deallocateAsync(String groupName, String name)
  nameWithType: VirtualMachines.deallocateAsync(String groupName, String name)
  parameters:
  - description: <p>the name of the resource group the virtual machine is in </p>
    name: groupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the virtual machine name</p>
    name: name
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>a representation of the deferred computation of this call </p>
    type: <xref href="Completable?alt=Completable&text=Completable" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Shuts down the virtual machine and releases the compute resources asynchronously.</p>

    <p></p>
  syntax: public Completable deallocateAsync(String groupName, String name)
  uid: com.microsoft.azure.management.compute.VirtualMachines.deallocateAsync(String,String)
- fullName: com.microsoft.azure.management.compute.VirtualMachines.deallocateAsync(String groupName, String name, ServiceCallback<Void> callback)
  name: deallocateAsync(String groupName, String name, ServiceCallback<Void> callback)
  nameWithType: VirtualMachines.deallocateAsync(String groupName, String name, ServiceCallback<Void> callback)
  parameters:
  - description: <p>the name of the resource group the virtual machine is in </p>
    name: groupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the virtual machine name </p>
    name: name
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the callback to call on success or failure </p>
    name: callback
    type: <xref href="ServiceCallback%3CVoid%3E?alt=ServiceCallback%3CVoid%3E&text=ServiceCallback%3CVoid%3E" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>a handle to cancel the request </p>
    type: <xref href="ServiceFuture%3CVoid%3E?alt=ServiceFuture%3CVoid%3E&text=ServiceFuture%3CVoid%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Shuts down the virtual machine and releases the compute resources asynchronously.</p>

    <p></p>
  syntax: public ServiceFuture<Void> deallocateAsync(String groupName, String name, ServiceCallback<Void> callback)
  uid: com.microsoft.azure.management.compute.VirtualMachines.deallocateAsync(String,String,ServiceCallback<Void>)
- fullName: com.microsoft.azure.management.compute.VirtualMachines.generalize(String groupName, String name)
  name: generalize(String groupName, String name)
  nameWithType: VirtualMachines.generalize(String groupName, String name)
  parameters:
  - description: <p>the name of the resource group the virtual machine is in </p>
    name: groupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the virtual machine name </p>
    name: name
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Generalizes the virtual machine.</p>

    <p></p>
  syntax: public void generalize(String groupName, String name)
  uid: com.microsoft.azure.management.compute.VirtualMachines.generalize(String,String)
- fullName: com.microsoft.azure.management.compute.VirtualMachines.generalizeAsync(String groupName, String name)
  name: generalizeAsync(String groupName, String name)
  nameWithType: VirtualMachines.generalizeAsync(String groupName, String name)
  parameters:
  - description: <p>the name of the resource group the virtual machine is in </p>
    name: groupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the virtual machine name </p>
    name: name
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>a representation of the deferred computation of this call </p>
    type: <xref href="Completable?alt=Completable&text=Completable" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Generalizes the virtual machine asynchronously.</p>

    <p></p>
  syntax: public Completable generalizeAsync(String groupName, String name)
  uid: com.microsoft.azure.management.compute.VirtualMachines.generalizeAsync(String,String)
- fullName: com.microsoft.azure.management.compute.VirtualMachines.generalizeAsync(String groupName, String name, ServiceCallback<Void> callback)
  name: generalizeAsync(String groupName, String name, ServiceCallback<Void> callback)
  nameWithType: VirtualMachines.generalizeAsync(String groupName, String name, ServiceCallback<Void> callback)
  parameters:
  - description: <p>the name of the resource group the virtual machine is in </p>
    name: groupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the virtual machine name </p>
    name: name
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the callback to call on success or failure </p>
    name: callback
    type: <xref href="ServiceCallback%3CVoid%3E?alt=ServiceCallback%3CVoid%3E&text=ServiceCallback%3CVoid%3E" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>a handle to cancel the request </p>
    type: <xref href="ServiceFuture%3CVoid%3E?alt=ServiceFuture%3CVoid%3E&text=ServiceFuture%3CVoid%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Generalizes the virtual machine asynchronously.</p>

    <p></p>
  syntax: public ServiceFuture<Void> generalizeAsync(String groupName, String name, ServiceCallback<Void> callback)
  uid: com.microsoft.azure.management.compute.VirtualMachines.generalizeAsync(String,String,ServiceCallback<Void>)
- fullName: com.microsoft.azure.management.compute.VirtualMachines.migrateToManaged(String groupName, String name)
  name: migrateToManaged(String groupName, String name)
  nameWithType: VirtualMachines.migrateToManaged(String groupName, String name)
  parameters:
  - description: <p>the resource group name </p>
    name: groupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the virtual machine name </p>
    name: name
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Migrates the virtual machine with unmanaged disks to use managed disks.</p>

    <p></p>
  syntax: public void migrateToManaged(String groupName, String name)
  uid: com.microsoft.azure.management.compute.VirtualMachines.migrateToManaged(String,String)
- fullName: com.microsoft.azure.management.compute.VirtualMachines.migrateToManagedAsync(String groupName, String name)
  name: migrateToManagedAsync(String groupName, String name)
  nameWithType: VirtualMachines.migrateToManagedAsync(String groupName, String name)
  parameters:
  - description: <p>the resource group name </p>
    name: groupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the virtual machine name </p>
    name: name
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>a representation of the deferred computation of this call </p>
    type: <xref href="Completable?alt=Completable&text=Completable" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Converts (migrates) the virtual machine with un-managed disks to use managed disk asynchronously.</p>

    <p></p>
  syntax: public Completable migrateToManagedAsync(String groupName, String name)
  uid: com.microsoft.azure.management.compute.VirtualMachines.migrateToManagedAsync(String,String)
- fullName: com.microsoft.azure.management.compute.VirtualMachines.migrateToManagedAsync(String groupName, String name, ServiceCallback<Void> callback)
  name: migrateToManagedAsync(String groupName, String name, ServiceCallback<Void> callback)
  nameWithType: VirtualMachines.migrateToManagedAsync(String groupName, String name, ServiceCallback<Void> callback)
  parameters:
  - description: <p>the resource group name </p>
    name: groupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the virtual machine name </p>
    name: name
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the callback to call on success or failure </p>
    name: callback
    type: <xref href="ServiceCallback%3CVoid%3E?alt=ServiceCallback%3CVoid%3E&text=ServiceCallback%3CVoid%3E" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>a handle to cancel the request </p>
    type: <xref href="ServiceFuture%3CVoid%3E?alt=ServiceFuture%3CVoid%3E&text=ServiceFuture%3CVoid%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Converts (migrates) the virtual machine with un-managed disks to use managed disk asynchronously.</p>

    <p></p>
  syntax: public ServiceFuture<Void> migrateToManagedAsync(String groupName, String name, ServiceCallback<Void> callback)
  uid: com.microsoft.azure.management.compute.VirtualMachines.migrateToManagedAsync(String,String,ServiceCallback<Void>)
- fullName: com.microsoft.azure.management.compute.VirtualMachines.powerOff(String groupName, String name)
  name: powerOff(String groupName, String name)
  nameWithType: VirtualMachines.powerOff(String groupName, String name)
  parameters:
  - description: <p>the name of the resource group the virtual machine is in </p>
    name: groupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the virtual machine name </p>
    name: name
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Powers off (stops) a virtual machine.</p>

    <p></p>
  syntax: public void powerOff(String groupName, String name)
  uid: com.microsoft.azure.management.compute.VirtualMachines.powerOff(String,String)
- fullName: com.microsoft.azure.management.compute.VirtualMachines.powerOffAsync(String groupName, String name)
  name: powerOffAsync(String groupName, String name)
  nameWithType: VirtualMachines.powerOffAsync(String groupName, String name)
  parameters:
  - description: <p>the name of the resource group the virtual machine is in </p>
    name: groupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the virtual machine name</p>
    name: name
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>a representation of the deferred computation of this call </p>
    type: <xref href="Completable?alt=Completable&text=Completable" data-throw-if-not-resolved="False"/>
  summary: <p>Powers off (stops) the virtual machine asynchronously. </p>
  syntax: public Completable powerOffAsync(String groupName, String name)
  uid: com.microsoft.azure.management.compute.VirtualMachines.powerOffAsync(String,String)
- fullName: com.microsoft.azure.management.compute.VirtualMachines.powerOffAsync(String groupName, String name, ServiceCallback<Void> callback)
  name: powerOffAsync(String groupName, String name, ServiceCallback<Void> callback)
  nameWithType: VirtualMachines.powerOffAsync(String groupName, String name, ServiceCallback<Void> callback)
  parameters:
  - description: <p>the name of the resource group the virtual machine is in </p>
    name: groupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the virtual machine name </p>
    name: name
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the callback to call on success or failure </p>
    name: callback
    type: <xref href="ServiceCallback%3CVoid%3E?alt=ServiceCallback%3CVoid%3E&text=ServiceCallback%3CVoid%3E" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>a handle to cancel the request </p>
    type: <xref href="ServiceFuture%3CVoid%3E?alt=ServiceFuture%3CVoid%3E&text=ServiceFuture%3CVoid%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Powers off (stop) the virtual machine asynchronously.</p>

    <p></p>
  syntax: public ServiceFuture<Void> powerOffAsync(String groupName, String name, ServiceCallback<Void> callback)
  uid: com.microsoft.azure.management.compute.VirtualMachines.powerOffAsync(String,String,ServiceCallback<Void>)
- fullName: com.microsoft.azure.management.compute.VirtualMachines.redeploy(String groupName, String name)
  name: redeploy(String groupName, String name)
  nameWithType: VirtualMachines.redeploy(String groupName, String name)
  parameters:
  - description: <p>the name of the resource group the virtual machine is in </p>
    name: groupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the virtual machine name </p>
    name: name
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Redeploys a virtual machine.</p>

    <p></p>
  syntax: public void redeploy(String groupName, String name)
  uid: com.microsoft.azure.management.compute.VirtualMachines.redeploy(String,String)
- fullName: com.microsoft.azure.management.compute.VirtualMachines.redeployAsync(String groupName, String name)
  name: redeployAsync(String groupName, String name)
  nameWithType: VirtualMachines.redeployAsync(String groupName, String name)
  parameters:
  - description: <p>the name of the resource group the virtual machine is in </p>
    name: groupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the virtual machine name </p>
    name: name
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>a representation of the deferred computation of this call </p>
    type: <xref href="Completable?alt=Completable&text=Completable" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Redeploys the virtual machine asynchronously.</p>

    <p></p>
  syntax: public Completable redeployAsync(String groupName, String name)
  uid: com.microsoft.azure.management.compute.VirtualMachines.redeployAsync(String,String)
- fullName: com.microsoft.azure.management.compute.VirtualMachines.redeployAsync(String groupName, String name, ServiceCallback<Void> callback)
  name: redeployAsync(String groupName, String name, ServiceCallback<Void> callback)
  nameWithType: VirtualMachines.redeployAsync(String groupName, String name, ServiceCallback<Void> callback)
  parameters:
  - description: <p>the name of the resource group the virtual machine is in </p>
    name: groupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the virtual machine name </p>
    name: name
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the callback to call on success or failure </p>
    name: callback
    type: <xref href="ServiceCallback%3CVoid%3E?alt=ServiceCallback%3CVoid%3E&text=ServiceCallback%3CVoid%3E" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>a handle to cancel the request </p>
    type: <xref href="ServiceFuture%3CVoid%3E?alt=ServiceFuture%3CVoid%3E&text=ServiceFuture%3CVoid%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Redeploys the virtual machine asynchronously.</p>

    <p></p>
  syntax: public ServiceFuture<Void> redeployAsync(String groupName, String name, ServiceCallback<Void> callback)
  uid: com.microsoft.azure.management.compute.VirtualMachines.redeployAsync(String,String,ServiceCallback<Void>)
- fullName: com.microsoft.azure.management.compute.VirtualMachines.restart(String groupName, String name)
  name: restart(String groupName, String name)
  nameWithType: VirtualMachines.restart(String groupName, String name)
  parameters:
  - description: <p>the name of the resource group the virtual machine is in </p>
    name: groupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the virtual machine name </p>
    name: name
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Restarts a virtual machine.</p>

    <p></p>
  syntax: public void restart(String groupName, String name)
  uid: com.microsoft.azure.management.compute.VirtualMachines.restart(String,String)
- fullName: com.microsoft.azure.management.compute.VirtualMachines.restartAsync(String groupName, String name)
  name: restartAsync(String groupName, String name)
  nameWithType: VirtualMachines.restartAsync(String groupName, String name)
  parameters:
  - description: <p>the name of the resource group the virtual machine is in </p>
    name: groupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the virtual machine name </p>
    name: name
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>a representation of the deferred computation of this call </p>
    type: <xref href="Completable?alt=Completable&text=Completable" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Restarts the virtual machine asynchronously.</p>

    <p></p>
  syntax: public Completable restartAsync(String groupName, String name)
  uid: com.microsoft.azure.management.compute.VirtualMachines.restartAsync(String,String)
- fullName: com.microsoft.azure.management.compute.VirtualMachines.restartAsync(String groupName, String name, ServiceCallback<Void> callback)
  name: restartAsync(String groupName, String name, ServiceCallback<Void> callback)
  nameWithType: VirtualMachines.restartAsync(String groupName, String name, ServiceCallback<Void> callback)
  parameters:
  - description: <p>the name of the resource group the virtual machine is in </p>
    name: groupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the virtual machine name </p>
    name: name
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the callback to call on success or failure </p>
    name: callback
    type: <xref href="ServiceCallback%3CVoid%3E?alt=ServiceCallback%3CVoid%3E&text=ServiceCallback%3CVoid%3E" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>a handle to cancel the request </p>
    type: <xref href="ServiceFuture%3CVoid%3E?alt=ServiceFuture%3CVoid%3E&text=ServiceFuture%3CVoid%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Restarts the virtual machine asynchronously.</p>

    <p></p>
  syntax: public ServiceFuture<Void> restartAsync(String groupName, String name, ServiceCallback<Void> callback)
  uid: com.microsoft.azure.management.compute.VirtualMachines.restartAsync(String,String,ServiceCallback<Void>)
- fullName: com.microsoft.azure.management.compute.VirtualMachines.sizes()
  name: sizes()
  nameWithType: VirtualMachines.sizes()
  returns:
    description: <p>available virtual machine sizes </p>
    type: <xref href="com.microsoft.azure.management.compute.VirtualMachineSizes?alt=com.microsoft.azure.management.compute.VirtualMachineSizes&text=VirtualMachineSizes" data-throw-if-not-resolved="False"/>
  syntax: public VirtualMachineSizes sizes()
  uid: com.microsoft.azure.management.compute.VirtualMachines.sizes()
- fullName: com.microsoft.azure.management.compute.VirtualMachines.start(String groupName, String name)
  name: start(String groupName, String name)
  nameWithType: VirtualMachines.start(String groupName, String name)
  parameters:
  - description: <p>the name of the resource group the virtual machine is in </p>
    name: groupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the virtual machine name </p>
    name: name
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Starts a virtual machine.</p>

    <p></p>
  syntax: public void start(String groupName, String name)
  uid: com.microsoft.azure.management.compute.VirtualMachines.start(String,String)
- fullName: com.microsoft.azure.management.compute.VirtualMachines.startAsync(String groupName, String name)
  name: startAsync(String groupName, String name)
  nameWithType: VirtualMachines.startAsync(String groupName, String name)
  parameters:
  - description: <p>the name of the resource group the virtual machine is in </p>
    name: groupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the virtual machine name</p>
    name: name
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>a representation of the deferred computation of this call </p>
    type: <xref href="Completable?alt=Completable&text=Completable" data-throw-if-not-resolved="False"/>
  summary: <p>Starts the virtual machine asynchronously. </p>
  syntax: public Completable startAsync(String groupName, String name)
  uid: com.microsoft.azure.management.compute.VirtualMachines.startAsync(String,String)
- fullName: com.microsoft.azure.management.compute.VirtualMachines.startAsync(String groupName, String name, ServiceCallback<Void> callback)
  name: startAsync(String groupName, String name, ServiceCallback<Void> callback)
  nameWithType: VirtualMachines.startAsync(String groupName, String name, ServiceCallback<Void> callback)
  parameters:
  - description: <p>the name of the resource group the virtual machine is in </p>
    name: groupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the virtual machine name </p>
    name: name
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the callback to call on success or failure </p>
    name: callback
    type: <xref href="ServiceCallback%3CVoid%3E?alt=ServiceCallback%3CVoid%3E&text=ServiceCallback%3CVoid%3E" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>a handle to cancel the request </p>
    type: <xref href="ServiceFuture%3CVoid%3E?alt=ServiceFuture%3CVoid%3E&text=ServiceFuture%3CVoid%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Starts the virtual machine asynchronously.</p>

    <p></p>
  syntax: public ServiceFuture<Void> startAsync(String groupName, String name, ServiceCallback<Void> callback)
  uid: com.microsoft.azure.management.compute.VirtualMachines.startAsync(String,String,ServiceCallback<Void>)
nameWithType: VirtualMachines
syntax: public interface VirtualMachines extends SupportsListing<VirtualMachine>,SupportsListingByResourceGroup<VirtualMachine>,SupportsGettingByResourceGroup<VirtualMachine>,SupportsGettingById<VirtualMachine>,SupportsCreating<VirtualMachine.DefinitionStages.Blank>,SupportsDeletingById,SupportsDeletingByResourceGroup,SupportsBatchCreation<VirtualMachine>,SupportsBatchDeletion,HasManager<ComputeManager>,HasInner<VirtualMachinesInner>
type: interface
uid: com.microsoft.azure.management.compute.VirtualMachines
fullName: com.microsoft.azure.management.compute.VirtualMachines
name: VirtualMachines
package: com.microsoft.azure.management.compute
summary: <p>Entry point to virtual machine management API. </p>
metadata: {}
