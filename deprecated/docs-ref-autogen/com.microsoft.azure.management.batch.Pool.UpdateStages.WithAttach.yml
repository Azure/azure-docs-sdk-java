### YamlMime:JavaType
methods:
- fullName: com.microsoft.azure.management.batch.Pool.UpdateStages.WithAttach.withApplicationLicenses(List<String> applicationLicenses)
  name: withApplicationLicenses(List<String> applicationLicenses)
  nameWithType: Pool.UpdateStages.WithAttach.withApplicationLicenses(List<String> applicationLicenses)
  parameters:
  - description: <p>applicationLicenses value </p>
    name: applicationLicenses
    type: <xref href="List%3CString%3E?alt=List%3CString%3E&text=List%3CString%3E" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the next stage of the update </p>
    type: <xref href="com.microsoft.azure.management.batch.Pool.Update?alt=com.microsoft.azure.management.batch.Pool.Update&text=Pool.Update" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Specifies the list of application licenses.</p>

    <p></p>
  syntax: public Update withApplicationLicenses(List<String> applicationLicenses)
  uid: com.microsoft.azure.management.batch.Pool.UpdateStages.WithAttach.withApplicationLicenses(List<String>)
- fullName: com.microsoft.azure.management.batch.Pool.UpdateStages.WithAttach.withApplicationPackages(List<ApplicationPackageReference> applicationPackages)
  name: withApplicationPackages(List<ApplicationPackageReference> applicationPackages)
  nameWithType: Pool.UpdateStages.WithAttach.withApplicationPackages(List<ApplicationPackageReference> applicationPackages)
  parameters:
  - description: <p>applicationPackages value </p>
    name: applicationPackages
    type: List&lt;<xref href="com.microsoft.azure.management.batch.ApplicationPackageReference?alt=com.microsoft.azure.management.batch.ApplicationPackageReference&text=ApplicationPackageReference" data-throw-if-not-resolved="False"/>&gt;
  returns:
    description: <p>the next stage of the update </p>
    type: <xref href="com.microsoft.azure.management.batch.Pool.Update?alt=com.microsoft.azure.management.batch.Pool.Update&text=Pool.Update" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Specifies the application package references affect all new compute nodes joining the pool.</p>

    <p></p>
  syntax: public Update withApplicationPackages(List<ApplicationPackageReference> applicationPackages)
  uid: com.microsoft.azure.management.batch.Pool.UpdateStages.WithAttach.withApplicationPackages(List<ApplicationPackageReference>)
- fullName: com.microsoft.azure.management.batch.Pool.UpdateStages.WithAttach.withCertificates(List<CertificateReference> certificates)
  name: withCertificates(List<CertificateReference> certificates)
  nameWithType: Pool.UpdateStages.WithAttach.withCertificates(List<CertificateReference> certificates)
  parameters:
  - description: <p>certificates value </p>
    name: certificates
    type: List&lt;<xref href="com.microsoft.azure.management.batch.CertificateReference?alt=com.microsoft.azure.management.batch.CertificateReference&text=CertificateReference" data-throw-if-not-resolved="False"/>&gt;
  returns:
    description: <p>the next stage of the update </p>
    type: <xref href="com.microsoft.azure.management.batch.Pool.Update?alt=com.microsoft.azure.management.batch.Pool.Update&text=Pool.Update" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Specifies the certificates for compute nodes.</p>

    <p></p>
  syntax: public Update withCertificates(List<CertificateReference> certificates)
  uid: com.microsoft.azure.management.batch.Pool.UpdateStages.WithAttach.withCertificates(List<CertificateReference>)
- fullName: com.microsoft.azure.management.batch.Pool.UpdateStages.WithAttach.withDeploymentConfiguration(DeploymentConfiguration deploymentConfiguration)
  name: withDeploymentConfiguration(DeploymentConfiguration deploymentConfiguration)
  nameWithType: Pool.UpdateStages.WithAttach.withDeploymentConfiguration(DeploymentConfiguration deploymentConfiguration)
  parameters:
  - description: <p>deploymentConfiguration value </p>
    name: deploymentConfiguration
    type: <xref href="com.microsoft.azure.management.batch.DeploymentConfiguration?alt=com.microsoft.azure.management.batch.DeploymentConfiguration&text=DeploymentConfiguration" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the next stage of the update </p>
    type: <xref href="com.microsoft.azure.management.batch.Pool.Update?alt=com.microsoft.azure.management.batch.Pool.Update&text=Pool.Update" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Specifies the creation of nodes using CloudServiceConfiguration/VirtualMachineConfiguration.</p>

    <p></p>
  syntax: public Update withDeploymentConfiguration(DeploymentConfiguration deploymentConfiguration)
  uid: com.microsoft.azure.management.batch.Pool.UpdateStages.WithAttach.withDeploymentConfiguration(DeploymentConfiguration)
- fullName: com.microsoft.azure.management.batch.Pool.UpdateStages.WithAttach.withDisplayName(String displayName)
  name: withDisplayName(String displayName)
  nameWithType: Pool.UpdateStages.WithAttach.withDisplayName(String displayName)
  parameters:
  - description: <p>displayName value </p>
    name: displayName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the next stage of the update </p>
    type: <xref href="com.microsoft.azure.management.batch.Pool.Update?alt=com.microsoft.azure.management.batch.Pool.Update&text=Pool.Update" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Specifies the display name for the pool.</p>

    <p></p>
  syntax: public Update withDisplayName(String displayName)
  uid: com.microsoft.azure.management.batch.Pool.UpdateStages.WithAttach.withDisplayName(String)
- fullName: com.microsoft.azure.management.batch.Pool.UpdateStages.WithAttach.withInterNodeCommunication(InterNodeCommunicationState interNodeCommunication)
  name: withInterNodeCommunication(InterNodeCommunicationState interNodeCommunication)
  nameWithType: Pool.UpdateStages.WithAttach.withInterNodeCommunication(InterNodeCommunicationState interNodeCommunication)
  parameters:
  - description: <p>interNodeCommunication value </p>
    name: interNodeCommunication
    type: <xref href="com.microsoft.azure.management.batch.InterNodeCommunicationState?alt=com.microsoft.azure.management.batch.InterNodeCommunicationState&text=InterNodeCommunicationState" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the next stage of the update </p>
    type: <xref href="com.microsoft.azure.management.batch.Pool.Update?alt=com.microsoft.azure.management.batch.Pool.Update&text=Pool.Update" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Specifies the restrictions on which nodes can be assigned to the pool.</p>

    <p></p>
  syntax: public Update withInterNodeCommunication(InterNodeCommunicationState interNodeCommunication)
  uid: com.microsoft.azure.management.batch.Pool.UpdateStages.WithAttach.withInterNodeCommunication(InterNodeCommunicationState)
- fullName: com.microsoft.azure.management.batch.Pool.UpdateStages.WithAttach.withMaxTasksPerNode(Integer maxTasksPerNode)
  name: withMaxTasksPerNode(Integer maxTasksPerNode)
  nameWithType: Pool.UpdateStages.WithAttach.withMaxTasksPerNode(Integer maxTasksPerNode)
  parameters:
  - description: <p>maxTasksPerNode value </p>
    name: maxTasksPerNode
    type: <xref href="Integer?alt=Integer&text=Integer" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the next stage of the update </p>
    type: <xref href="com.microsoft.azure.management.batch.Pool.Update?alt=com.microsoft.azure.management.batch.Pool.Update&text=Pool.Update" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Specifies the maximum value of tasks to run on each node.</p>

    <p></p>
  syntax: public Update withMaxTasksPerNode(Integer maxTasksPerNode)
  uid: com.microsoft.azure.management.batch.Pool.UpdateStages.WithAttach.withMaxTasksPerNode(Integer)
- fullName: com.microsoft.azure.management.batch.Pool.UpdateStages.WithAttach.withMetadata(List<MetadataItem> metadata)
  name: withMetadata(List<MetadataItem> metadata)
  nameWithType: Pool.UpdateStages.WithAttach.withMetadata(List<MetadataItem> metadata)
  parameters:
  - description: <p>metadata value </p>
    name: metadata
    type: List&lt;<xref href="com.microsoft.azure.management.batch.MetadataItem?alt=com.microsoft.azure.management.batch.MetadataItem&text=MetadataItem" data-throw-if-not-resolved="False"/>&gt;
  returns:
    description: <p>the next stage of the update </p>
    type: <xref href="com.microsoft.azure.management.batch.Pool.Update?alt=com.microsoft.azure.management.batch.Pool.Update&text=Pool.Update" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Specifies the metadata for the use of user code.</p>

    <p></p>
  syntax: public Update withMetadata(List<MetadataItem> metadata)
  uid: com.microsoft.azure.management.batch.Pool.UpdateStages.WithAttach.withMetadata(List<MetadataItem>)
- fullName: com.microsoft.azure.management.batch.Pool.UpdateStages.WithAttach.withMountConfiguration(List<MountConfiguration> mountConfigurations)
  name: withMountConfiguration(List<MountConfiguration> mountConfigurations)
  nameWithType: Pool.UpdateStages.WithAttach.withMountConfiguration(List<MountConfiguration> mountConfigurations)
  parameters:
  - description: <p>mount configuration value </p>
    name: mountConfigurations
    type: List&lt;<xref href="com.microsoft.azure.management.batch.MountConfiguration?alt=com.microsoft.azure.management.batch.MountConfiguration&text=MountConfiguration" data-throw-if-not-resolved="False"/>&gt;
  returns:
    description: <p>the next stage of the update </p>
    type: <xref href="com.microsoft.azure.management.batch.Pool.Update?alt=com.microsoft.azure.management.batch.Pool.Update&text=Pool.Update" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Specifies the file system configuration for the pool to mount on each node.</p>

    <p></p>
  syntax: public Update withMountConfiguration(List<MountConfiguration> mountConfigurations)
  uid: com.microsoft.azure.management.batch.Pool.UpdateStages.WithAttach.withMountConfiguration(List<MountConfiguration>)
- fullName: com.microsoft.azure.management.batch.Pool.UpdateStages.WithAttach.withNetworkConfiguration(NetworkConfiguration networkConfiguration)
  name: withNetworkConfiguration(NetworkConfiguration networkConfiguration)
  nameWithType: Pool.UpdateStages.WithAttach.withNetworkConfiguration(NetworkConfiguration networkConfiguration)
  parameters:
  - description: <p>network configuration value </p>
    name: networkConfiguration
    type: <xref href="com.microsoft.azure.management.batch.NetworkConfiguration?alt=com.microsoft.azure.management.batch.NetworkConfiguration&text=NetworkConfiguration" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the next stage of the update </p>
    type: <xref href="com.microsoft.azure.management.batch.Pool.Update?alt=com.microsoft.azure.management.batch.Pool.Update&text=Pool.Update" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Specifies the network configuration for the pool.</p>

    <p></p>
  syntax: public Update withNetworkConfiguration(NetworkConfiguration networkConfiguration)
  uid: com.microsoft.azure.management.batch.Pool.UpdateStages.WithAttach.withNetworkConfiguration(NetworkConfiguration)
- fullName: com.microsoft.azure.management.batch.Pool.UpdateStages.WithAttach.withScaleSettings(ScaleSettings scaleSettings)
  name: withScaleSettings(ScaleSettings scaleSettings)
  nameWithType: Pool.UpdateStages.WithAttach.withScaleSettings(ScaleSettings scaleSettings)
  parameters:
  - description: <p>scale settings value </p>
    name: scaleSettings
    type: <xref href="com.microsoft.azure.management.batch.ScaleSettings?alt=com.microsoft.azure.management.batch.ScaleSettings&text=ScaleSettings" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the next stage of the update </p>
    type: <xref href="com.microsoft.azure.management.batch.Pool.Update?alt=com.microsoft.azure.management.batch.Pool.Update&text=Pool.Update" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Specifies the scale settings for the pool.</p>

    <p></p>
  syntax: public Update withScaleSettings(ScaleSettings scaleSettings)
  uid: com.microsoft.azure.management.batch.Pool.UpdateStages.WithAttach.withScaleSettings(ScaleSettings)
- fullName: com.microsoft.azure.management.batch.Pool.UpdateStages.WithAttach.withStartTask(StartTask startTask)
  name: withStartTask(StartTask startTask)
  nameWithType: Pool.UpdateStages.WithAttach.withStartTask(StartTask startTask)
  parameters:
  - description: <p>start task value </p>
    name: startTask
    type: <xref href="com.microsoft.azure.management.batch.StartTask?alt=com.microsoft.azure.management.batch.StartTask&text=StartTask" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the next stage of the update </p>
    type: <xref href="com.microsoft.azure.management.batch.Pool.Update?alt=com.microsoft.azure.management.batch.Pool.Update&text=Pool.Update" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Specifies the start task for the pool.</p>

    <p></p>
  syntax: public Update withStartTask(StartTask startTask)
  uid: com.microsoft.azure.management.batch.Pool.UpdateStages.WithAttach.withStartTask(StartTask)
- fullName: com.microsoft.azure.management.batch.Pool.UpdateStages.WithAttach.withTaskSchedulingPolicy(TaskSchedulingPolicy taskSchedulingPolicy)
  name: withTaskSchedulingPolicy(TaskSchedulingPolicy taskSchedulingPolicy)
  nameWithType: Pool.UpdateStages.WithAttach.withTaskSchedulingPolicy(TaskSchedulingPolicy taskSchedulingPolicy)
  parameters:
  - description: <p>taskSchedulingPolicy value </p>
    name: taskSchedulingPolicy
    type: <xref href="com.microsoft.azure.management.batch.TaskSchedulingPolicy?alt=com.microsoft.azure.management.batch.TaskSchedulingPolicy&text=TaskSchedulingPolicy" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the next stage of the update </p>
    type: <xref href="com.microsoft.azure.management.batch.Pool.Update?alt=com.microsoft.azure.management.batch.Pool.Update&text=Pool.Update" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Specifies the task scheduling policy.</p>

    <p></p>
  syntax: public Update withTaskSchedulingPolicy(TaskSchedulingPolicy taskSchedulingPolicy)
  uid: com.microsoft.azure.management.batch.Pool.UpdateStages.WithAttach.withTaskSchedulingPolicy(TaskSchedulingPolicy)
- fullName: com.microsoft.azure.management.batch.Pool.UpdateStages.WithAttach.withTaskSlotsPerNode(Integer taskSlotsPerNode)
  name: withTaskSlotsPerNode(Integer taskSlotsPerNode)
  nameWithType: Pool.UpdateStages.WithAttach.withTaskSlotsPerNode(Integer taskSlotsPerNode)
  parameters:
  - description: <p>the number of task slots </p>
    name: taskSlotsPerNode
    type: <xref href="Integer?alt=Integer&text=Integer" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the next stage of the update </p>
    type: <xref href="com.microsoft.azure.management.batch.Pool.Update?alt=com.microsoft.azure.management.batch.Pool.Update&text=Pool.Update" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Specifies the number of task slots that can be used to run concurrent tasks on a single compute node in the pool. The default value is 1. The maximum value is the smaller of 4 times the number of cores of the vmSize of the pool or 256.</p>

    <p></p>
  syntax: public Update withTaskSlotsPerNode(Integer taskSlotsPerNode)
  uid: com.microsoft.azure.management.batch.Pool.UpdateStages.WithAttach.withTaskSlotsPerNode(Integer)
- fullName: com.microsoft.azure.management.batch.Pool.UpdateStages.WithAttach.withUserAccounts(List<UserAccount> userAccounts)
  name: withUserAccounts(List<UserAccount> userAccounts)
  nameWithType: Pool.UpdateStages.WithAttach.withUserAccounts(List<UserAccount> userAccounts)
  parameters:
  - description: <p>userAccounts value </p>
    name: userAccounts
    type: List&lt;<xref href="com.microsoft.azure.management.batch.UserAccount?alt=com.microsoft.azure.management.batch.UserAccount&text=UserAccount" data-throw-if-not-resolved="False"/>&gt;
  returns:
    description: <p>the next stage of the update </p>
    type: <xref href="com.microsoft.azure.management.batch.Pool.Update?alt=com.microsoft.azure.management.batch.Pool.Update&text=Pool.Update" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Specifies the user accounts value.</p>

    <p></p>
  syntax: public Update withUserAccounts(List<UserAccount> userAccounts)
  uid: com.microsoft.azure.management.batch.Pool.UpdateStages.WithAttach.withUserAccounts(List<UserAccount>)
- fullName: com.microsoft.azure.management.batch.Pool.UpdateStages.WithAttach.withVmSize(String vmSize)
  name: withVmSize(String vmSize)
  nameWithType: Pool.UpdateStages.WithAttach.withVmSize(String vmSize)
  parameters:
  - description: <p>vmSize value </p>
    name: vmSize
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the next stage of the update </p>
    type: <xref href="com.microsoft.azure.management.batch.Pool.Update?alt=com.microsoft.azure.management.batch.Pool.Update&text=Pool.Update" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Specifies the available sizes of virtual machine for Cloud Services pools.</p>

    <p></p>
  syntax: public Update withVmSize(String vmSize)
  uid: com.microsoft.azure.management.batch.Pool.UpdateStages.WithAttach.withVmSize(String)
nameWithType: Pool.UpdateStages.WithAttach
syntax: public interface WithAttach
type: interface
uid: com.microsoft.azure.management.batch.Pool.UpdateStages.WithAttach
fullName: com.microsoft.azure.management.batch.Pool.UpdateStages.WithAttach
name: Pool.UpdateStages.WithAttach
package: com.microsoft.azure.management.batch
summary: <p>The stage of a Batch pool update allowing the creation of configurations. </p>
metadata: {}
