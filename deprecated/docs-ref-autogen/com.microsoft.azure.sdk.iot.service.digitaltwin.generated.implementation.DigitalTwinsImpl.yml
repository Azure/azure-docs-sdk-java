### YamlMime:JavaType
constructors:
- fullName: com.microsoft.azure.sdk.iot.service.digitaltwin.generated.implementation.DigitalTwinsImpl.DigitalTwinsImpl(Retrofit retrofit, IotHubGatewayServiceAPIsImpl client)
  name: DigitalTwinsImpl(Retrofit retrofit, IotHubGatewayServiceAPIsImpl client)
  nameWithType: DigitalTwinsImpl.DigitalTwinsImpl(Retrofit retrofit, IotHubGatewayServiceAPIsImpl client)
  parameters:
  - description: <p>the Retrofit instance built from a Retrofit Builder. </p>
    name: retrofit
    type: <xref href="Retrofit?alt=Retrofit&text=Retrofit" data-throw-if-not-resolved="False"/>
  - description: <p>the instance of the service client containing this operation class. </p>
    name: client
    type: <xref href="com.microsoft.azure.sdk.iot.service.digitaltwin.generated.implementation.IotHubGatewayServiceAPIsImpl?alt=com.microsoft.azure.sdk.iot.service.digitaltwin.generated.implementation.IotHubGatewayServiceAPIsImpl&text=IotHubGatewayServiceAPIsImpl" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Initializes an instance of DigitalTwins.</p>

    <p></p>
  syntax: public DigitalTwinsImpl(Retrofit retrofit, IotHubGatewayServiceAPIsImpl client)
  uid: com.microsoft.azure.sdk.iot.service.digitaltwin.generated.implementation.DigitalTwinsImpl.DigitalTwinsImpl(Retrofit,IotHubGatewayServiceAPIsImpl)
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
- <xref href="com.microsoft.azure.sdk.iot.service.digitaltwin.generated.DigitalTwins?alt=com.microsoft.azure.sdk.iot.service.digitaltwin.generated.DigitalTwins&text=DigitalTwins" data-throw-if-not-resolved="False"/>
methods:
- fullName: com.microsoft.azure.sdk.iot.service.digitaltwin.generated.implementation.DigitalTwinsImpl.getDigitalTwin(String id)
  name: getDigitalTwin(String id)
  nameWithType: DigitalTwinsImpl.getDigitalTwin(String id)
  overridden: com.microsoft.azure.sdk.iot.service.digitaltwin.generated.DigitalTwins.getDigitalTwin(String)
  parameters:
  - description: <p>Digital Twin ID. </p>
    name: id
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="RestException?alt=RestException&text=RestException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  returns:
    description: <p>the Object object if successful. </p>
    type: <xref href="Object?alt=Object&text=Object" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets a digital twin.</p>

    <p></p>
  syntax: public Object getDigitalTwin(String id)
  uid: com.microsoft.azure.sdk.iot.service.digitaltwin.generated.implementation.DigitalTwinsImpl.getDigitalTwin(String)
- fullName: com.microsoft.azure.sdk.iot.service.digitaltwin.generated.implementation.DigitalTwinsImpl.getDigitalTwinAsync(String id)
  name: getDigitalTwinAsync(String id)
  nameWithType: DigitalTwinsImpl.getDigitalTwinAsync(String id)
  overridden: com.microsoft.azure.sdk.iot.service.digitaltwin.generated.DigitalTwins.getDigitalTwinAsync(String)
  parameters:
  - description: <p>Digital Twin ID. </p>
    name: id
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the Object object </p>
    type: <xref href="Observable%3CObject%3E?alt=Observable%3CObject%3E&text=Observable%3CObject%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets a digital twin.</p>

    <p></p>
  syntax: public Observable<Object> getDigitalTwinAsync(String id)
  uid: com.microsoft.azure.sdk.iot.service.digitaltwin.generated.implementation.DigitalTwinsImpl.getDigitalTwinAsync(String)
- fullName: com.microsoft.azure.sdk.iot.service.digitaltwin.generated.implementation.DigitalTwinsImpl.getDigitalTwinAsync(String id, final ServiceCallback<Object> serviceCallback)
  name: getDigitalTwinAsync(String id, final ServiceCallback<Object> serviceCallback)
  nameWithType: DigitalTwinsImpl.getDigitalTwinAsync(String id, final ServiceCallback<Object> serviceCallback)
  overridden: com.microsoft.azure.sdk.iot.service.digitaltwin.generated.DigitalTwins.getDigitalTwinAsync(String,final ServiceCallback<Object>)
  parameters:
  - description: <p>Digital Twin ID. </p>
    name: id
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    name: serviceCallback
    type: <xref href="final+ServiceCallback%3CObject%3E?alt=final+ServiceCallback%3CObject%3E&text=final+ServiceCallback%3CObject%3E" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
    type: <xref href="ServiceFuture%3CObject%3E?alt=ServiceFuture%3CObject%3E&text=ServiceFuture%3CObject%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets a digital twin.</p>

    <p></p>
  syntax: public ServiceFuture<Object> getDigitalTwinAsync(String id, final ServiceCallback<Object> serviceCallback)
  uid: com.microsoft.azure.sdk.iot.service.digitaltwin.generated.implementation.DigitalTwinsImpl.getDigitalTwinAsync(String,final ServiceCallback<Object>)
- fullName: com.microsoft.azure.sdk.iot.service.digitaltwin.generated.implementation.DigitalTwinsImpl.getDigitalTwinWithServiceResponseAsync(String id)
  name: getDigitalTwinWithServiceResponseAsync(String id)
  nameWithType: DigitalTwinsImpl.getDigitalTwinWithServiceResponseAsync(String id)
  overridden: com.microsoft.azure.sdk.iot.service.digitaltwin.generated.DigitalTwins.getDigitalTwinWithServiceResponseAsync(String)
  parameters:
  - description: <p>Digital Twin ID. </p>
    name: id
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the Object object </p>
    type: Observable&lt;ServiceResponseWithHeaders&lt;Object, <xref href="com.microsoft.azure.sdk.iot.service.digitaltwin.generated.models.DigitalTwinGetDigitalTwinHeaders?alt=com.microsoft.azure.sdk.iot.service.digitaltwin.generated.models.DigitalTwinGetDigitalTwinHeaders&text=DigitalTwinGetDigitalTwinHeaders" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Gets a digital twin.</p>

    <p></p>
  syntax: public Observable<ServiceResponseWithHeaders<Object, DigitalTwinGetDigitalTwinHeaders>> getDigitalTwinWithServiceResponseAsync(String id)
  uid: com.microsoft.azure.sdk.iot.service.digitaltwin.generated.implementation.DigitalTwinsImpl.getDigitalTwinWithServiceResponseAsync(String)
- fullName: com.microsoft.azure.sdk.iot.service.digitaltwin.generated.implementation.DigitalTwinsImpl.invokeComponentCommand(String id, String componentPath, String commandName)
  name: invokeComponentCommand(String id, String componentPath, String commandName)
  nameWithType: DigitalTwinsImpl.invokeComponentCommand(String id, String componentPath, String commandName)
  overridden: com.microsoft.azure.sdk.iot.service.digitaltwin.generated.DigitalTwins.invokeComponentCommand(String,String,String)
  parameters:
  - description: <p>the String value </p>
    name: id
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the String value </p>
    name: componentPath
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the String value </p>
    name: commandName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="RestException?alt=RestException&text=RestException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  returns:
    description: <p>the Object object if successful. </p>
    type: <xref href="Object?alt=Object&text=Object" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Invoke a digital twin command. Invoke a digital twin command.</p>

    <p></p>
  syntax: public Object invokeComponentCommand(String id, String componentPath, String commandName)
  uid: com.microsoft.azure.sdk.iot.service.digitaltwin.generated.implementation.DigitalTwinsImpl.invokeComponentCommand(String,String,String)
- fullName: com.microsoft.azure.sdk.iot.service.digitaltwin.generated.implementation.DigitalTwinsImpl.invokeComponentCommand(String id, String componentPath, String commandName, Object payload, Integer connectTimeoutInSeconds, Integer responseTimeoutInSeconds)
  name: invokeComponentCommand(String id, String componentPath, String commandName, Object payload, Integer connectTimeoutInSeconds, Integer responseTimeoutInSeconds)
  nameWithType: DigitalTwinsImpl.invokeComponentCommand(String id, String componentPath, String commandName, Object payload, Integer connectTimeoutInSeconds, Integer responseTimeoutInSeconds)
  overridden: com.microsoft.azure.sdk.iot.service.digitaltwin.generated.DigitalTwins.invokeComponentCommand(String,String,String,Object,Integer,Integer)
  parameters:
  - description: <p>the String value </p>
    name: id
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the String value </p>
    name: componentPath
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the String value </p>
    name: commandName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the Object value </p>
    name: payload
    type: <xref href="Object?alt=Object&text=Object" data-throw-if-not-resolved="False"/>
  - description: <p>Maximum interval of time, in seconds, that the digital twin command will wait for the answer. </p>
    name: connectTimeoutInSeconds
    type: <xref href="Integer?alt=Integer&text=Integer" data-throw-if-not-resolved="False"/>
  - description: <p>Maximum interval of time, in seconds, that the digital twin command will wait for the answer. </p>
    name: responseTimeoutInSeconds
    type: <xref href="Integer?alt=Integer&text=Integer" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="RestException?alt=RestException&text=RestException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  returns:
    description: <p>the Object object if successful. </p>
    type: <xref href="Object?alt=Object&text=Object" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Invoke a digital twin command. Invoke a digital twin command.</p>

    <p></p>
  syntax: public Object invokeComponentCommand(String id, String componentPath, String commandName, Object payload, Integer connectTimeoutInSeconds, Integer responseTimeoutInSeconds)
  uid: com.microsoft.azure.sdk.iot.service.digitaltwin.generated.implementation.DigitalTwinsImpl.invokeComponentCommand(String,String,String,Object,Integer,Integer)
- fullName: com.microsoft.azure.sdk.iot.service.digitaltwin.generated.implementation.DigitalTwinsImpl.invokeComponentCommandAsync(String id, String componentPath, String commandName)
  name: invokeComponentCommandAsync(String id, String componentPath, String commandName)
  nameWithType: DigitalTwinsImpl.invokeComponentCommandAsync(String id, String componentPath, String commandName)
  overridden: com.microsoft.azure.sdk.iot.service.digitaltwin.generated.DigitalTwins.invokeComponentCommandAsync(String,String,String)
  parameters:
  - description: <p>the String value </p>
    name: id
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the String value </p>
    name: componentPath
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the String value </p>
    name: commandName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the Object object </p>
    type: <xref href="Observable%3CObject%3E?alt=Observable%3CObject%3E&text=Observable%3CObject%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Invoke a digital twin command. Invoke a digital twin command.</p>

    <p></p>
  syntax: public Observable<Object> invokeComponentCommandAsync(String id, String componentPath, String commandName)
  uid: com.microsoft.azure.sdk.iot.service.digitaltwin.generated.implementation.DigitalTwinsImpl.invokeComponentCommandAsync(String,String,String)
- fullName: com.microsoft.azure.sdk.iot.service.digitaltwin.generated.implementation.DigitalTwinsImpl.invokeComponentCommandAsync(String id, String componentPath, String commandName, final ServiceCallback<Object> serviceCallback)
  name: invokeComponentCommandAsync(String id, String componentPath, String commandName, final ServiceCallback<Object> serviceCallback)
  nameWithType: DigitalTwinsImpl.invokeComponentCommandAsync(String id, String componentPath, String commandName, final ServiceCallback<Object> serviceCallback)
  overridden: com.microsoft.azure.sdk.iot.service.digitaltwin.generated.DigitalTwins.invokeComponentCommandAsync(String,String,String,final ServiceCallback<Object>)
  parameters:
  - description: <p>the String value </p>
    name: id
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the String value </p>
    name: componentPath
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the String value </p>
    name: commandName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    name: serviceCallback
    type: <xref href="final+ServiceCallback%3CObject%3E?alt=final+ServiceCallback%3CObject%3E&text=final+ServiceCallback%3CObject%3E" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
    type: <xref href="ServiceFuture%3CObject%3E?alt=ServiceFuture%3CObject%3E&text=ServiceFuture%3CObject%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Invoke a digital twin command. Invoke a digital twin command.</p>

    <p></p>
  syntax: public ServiceFuture<Object> invokeComponentCommandAsync(String id, String componentPath, String commandName, final ServiceCallback<Object> serviceCallback)
  uid: com.microsoft.azure.sdk.iot.service.digitaltwin.generated.implementation.DigitalTwinsImpl.invokeComponentCommandAsync(String,String,String,final ServiceCallback<Object>)
- fullName: com.microsoft.azure.sdk.iot.service.digitaltwin.generated.implementation.DigitalTwinsImpl.invokeComponentCommandAsync(String id, String componentPath, String commandName, Object payload, Integer connectTimeoutInSeconds, Integer responseTimeoutInSeconds)
  name: invokeComponentCommandAsync(String id, String componentPath, String commandName, Object payload, Integer connectTimeoutInSeconds, Integer responseTimeoutInSeconds)
  nameWithType: DigitalTwinsImpl.invokeComponentCommandAsync(String id, String componentPath, String commandName, Object payload, Integer connectTimeoutInSeconds, Integer responseTimeoutInSeconds)
  overridden: com.microsoft.azure.sdk.iot.service.digitaltwin.generated.DigitalTwins.invokeComponentCommandAsync(String,String,String,Object,Integer,Integer)
  parameters:
  - description: <p>the String value </p>
    name: id
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the String value </p>
    name: componentPath
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the String value </p>
    name: commandName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the Object value </p>
    name: payload
    type: <xref href="Object?alt=Object&text=Object" data-throw-if-not-resolved="False"/>
  - description: <p>Maximum interval of time, in seconds, that the digital twin command will wait for the answer. </p>
    name: connectTimeoutInSeconds
    type: <xref href="Integer?alt=Integer&text=Integer" data-throw-if-not-resolved="False"/>
  - description: <p>Maximum interval of time, in seconds, that the digital twin command will wait for the answer. </p>
    name: responseTimeoutInSeconds
    type: <xref href="Integer?alt=Integer&text=Integer" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the Object object </p>
    type: <xref href="Observable%3CObject%3E?alt=Observable%3CObject%3E&text=Observable%3CObject%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Invoke a digital twin command. Invoke a digital twin command.</p>

    <p></p>
  syntax: public Observable<Object> invokeComponentCommandAsync(String id, String componentPath, String commandName, Object payload, Integer connectTimeoutInSeconds, Integer responseTimeoutInSeconds)
  uid: com.microsoft.azure.sdk.iot.service.digitaltwin.generated.implementation.DigitalTwinsImpl.invokeComponentCommandAsync(String,String,String,Object,Integer,Integer)
- fullName: com.microsoft.azure.sdk.iot.service.digitaltwin.generated.implementation.DigitalTwinsImpl.invokeComponentCommandAsync(String id, String componentPath, String commandName, Object payload, Integer connectTimeoutInSeconds, Integer responseTimeoutInSeconds, final ServiceCallback<Object> serviceCallback)
  name: invokeComponentCommandAsync(String id, String componentPath, String commandName, Object payload, Integer connectTimeoutInSeconds, Integer responseTimeoutInSeconds, final ServiceCallback<Object> serviceCallback)
  nameWithType: DigitalTwinsImpl.invokeComponentCommandAsync(String id, String componentPath, String commandName, Object payload, Integer connectTimeoutInSeconds, Integer responseTimeoutInSeconds, final ServiceCallback<Object> serviceCallback)
  overridden: com.microsoft.azure.sdk.iot.service.digitaltwin.generated.DigitalTwins.invokeComponentCommandAsync(String,String,String,Object,Integer,Integer,final ServiceCallback<Object>)
  parameters:
  - description: <p>the String value </p>
    name: id
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the String value </p>
    name: componentPath
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the String value </p>
    name: commandName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the Object value </p>
    name: payload
    type: <xref href="Object?alt=Object&text=Object" data-throw-if-not-resolved="False"/>
  - description: <p>Maximum interval of time, in seconds, that the digital twin command will wait for the answer. </p>
    name: connectTimeoutInSeconds
    type: <xref href="Integer?alt=Integer&text=Integer" data-throw-if-not-resolved="False"/>
  - description: <p>Maximum interval of time, in seconds, that the digital twin command will wait for the answer. </p>
    name: responseTimeoutInSeconds
    type: <xref href="Integer?alt=Integer&text=Integer" data-throw-if-not-resolved="False"/>
  - description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    name: serviceCallback
    type: <xref href="final+ServiceCallback%3CObject%3E?alt=final+ServiceCallback%3CObject%3E&text=final+ServiceCallback%3CObject%3E" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
    type: <xref href="ServiceFuture%3CObject%3E?alt=ServiceFuture%3CObject%3E&text=ServiceFuture%3CObject%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Invoke a digital twin command. Invoke a digital twin command.</p>

    <p></p>
  syntax: public ServiceFuture<Object> invokeComponentCommandAsync(String id, String componentPath, String commandName, Object payload, Integer connectTimeoutInSeconds, Integer responseTimeoutInSeconds, final ServiceCallback<Object> serviceCallback)
  uid: com.microsoft.azure.sdk.iot.service.digitaltwin.generated.implementation.DigitalTwinsImpl.invokeComponentCommandAsync(String,String,String,Object,Integer,Integer,final ServiceCallback<Object>)
- fullName: com.microsoft.azure.sdk.iot.service.digitaltwin.generated.implementation.DigitalTwinsImpl.invokeComponentCommandWithServiceResponseAsync(String id, String componentPath, String commandName)
  name: invokeComponentCommandWithServiceResponseAsync(String id, String componentPath, String commandName)
  nameWithType: DigitalTwinsImpl.invokeComponentCommandWithServiceResponseAsync(String id, String componentPath, String commandName)
  overridden: com.microsoft.azure.sdk.iot.service.digitaltwin.generated.DigitalTwins.invokeComponentCommandWithServiceResponseAsync(String,String,String)
  parameters:
  - description: <p>the String value </p>
    name: id
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the String value </p>
    name: componentPath
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the String value </p>
    name: commandName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the Object object </p>
    type: Observable&lt;ServiceResponseWithHeaders&lt;Object, <xref href="com.microsoft.azure.sdk.iot.service.digitaltwin.generated.models.DigitalTwinInvokeComponentCommandHeaders?alt=com.microsoft.azure.sdk.iot.service.digitaltwin.generated.models.DigitalTwinInvokeComponentCommandHeaders&text=DigitalTwinInvokeComponentCommandHeaders" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Invoke a digital twin command. Invoke a digital twin command.</p>

    <p></p>
  syntax: public Observable<ServiceResponseWithHeaders<Object, DigitalTwinInvokeComponentCommandHeaders>> invokeComponentCommandWithServiceResponseAsync(String id, String componentPath, String commandName)
  uid: com.microsoft.azure.sdk.iot.service.digitaltwin.generated.implementation.DigitalTwinsImpl.invokeComponentCommandWithServiceResponseAsync(String,String,String)
- fullName: com.microsoft.azure.sdk.iot.service.digitaltwin.generated.implementation.DigitalTwinsImpl.invokeComponentCommandWithServiceResponseAsync(String id, String componentPath, String commandName, Object payload, Integer connectTimeoutInSeconds, Integer responseTimeoutInSeconds)
  name: invokeComponentCommandWithServiceResponseAsync(String id, String componentPath, String commandName, Object payload, Integer connectTimeoutInSeconds, Integer responseTimeoutInSeconds)
  nameWithType: DigitalTwinsImpl.invokeComponentCommandWithServiceResponseAsync(String id, String componentPath, String commandName, Object payload, Integer connectTimeoutInSeconds, Integer responseTimeoutInSeconds)
  overridden: com.microsoft.azure.sdk.iot.service.digitaltwin.generated.DigitalTwins.invokeComponentCommandWithServiceResponseAsync(String,String,String,Object,Integer,Integer)
  parameters:
  - description: <p>the String value </p>
    name: id
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the String value </p>
    name: componentPath
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the String value </p>
    name: commandName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the Object value </p>
    name: payload
    type: <xref href="Object?alt=Object&text=Object" data-throw-if-not-resolved="False"/>
  - description: <p>Maximum interval of time, in seconds, that the digital twin command will wait for the answer. </p>
    name: connectTimeoutInSeconds
    type: <xref href="Integer?alt=Integer&text=Integer" data-throw-if-not-resolved="False"/>
  - description: <p>Maximum interval of time, in seconds, that the digital twin command will wait for the answer. </p>
    name: responseTimeoutInSeconds
    type: <xref href="Integer?alt=Integer&text=Integer" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the Object object </p>
    type: Observable&lt;ServiceResponseWithHeaders&lt;Object, <xref href="com.microsoft.azure.sdk.iot.service.digitaltwin.generated.models.DigitalTwinInvokeComponentCommandHeaders?alt=com.microsoft.azure.sdk.iot.service.digitaltwin.generated.models.DigitalTwinInvokeComponentCommandHeaders&text=DigitalTwinInvokeComponentCommandHeaders" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Invoke a digital twin command. Invoke a digital twin command.</p>

    <p></p>
  syntax: public Observable<ServiceResponseWithHeaders<Object, DigitalTwinInvokeComponentCommandHeaders>> invokeComponentCommandWithServiceResponseAsync(String id, String componentPath, String commandName, Object payload, Integer connectTimeoutInSeconds, Integer responseTimeoutInSeconds)
  uid: com.microsoft.azure.sdk.iot.service.digitaltwin.generated.implementation.DigitalTwinsImpl.invokeComponentCommandWithServiceResponseAsync(String,String,String,Object,Integer,Integer)
- fullName: com.microsoft.azure.sdk.iot.service.digitaltwin.generated.implementation.DigitalTwinsImpl.invokeRootLevelCommand(String id, String commandName)
  name: invokeRootLevelCommand(String id, String commandName)
  nameWithType: DigitalTwinsImpl.invokeRootLevelCommand(String id, String commandName)
  overridden: com.microsoft.azure.sdk.iot.service.digitaltwin.generated.DigitalTwins.invokeRootLevelCommand(String,String)
  parameters:
  - description: <p>the String value </p>
    name: id
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the String value </p>
    name: commandName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="RestException?alt=RestException&text=RestException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  returns:
    description: <p>the Object object if successful. </p>
    type: <xref href="Object?alt=Object&text=Object" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Invoke a digital twin root level command. Invoke a digital twin root level command.</p>

    <p></p>
  syntax: public Object invokeRootLevelCommand(String id, String commandName)
  uid: com.microsoft.azure.sdk.iot.service.digitaltwin.generated.implementation.DigitalTwinsImpl.invokeRootLevelCommand(String,String)
- fullName: com.microsoft.azure.sdk.iot.service.digitaltwin.generated.implementation.DigitalTwinsImpl.invokeRootLevelCommand(String id, String commandName, Object payload, Integer connectTimeoutInSeconds, Integer responseTimeoutInSeconds)
  name: invokeRootLevelCommand(String id, String commandName, Object payload, Integer connectTimeoutInSeconds, Integer responseTimeoutInSeconds)
  nameWithType: DigitalTwinsImpl.invokeRootLevelCommand(String id, String commandName, Object payload, Integer connectTimeoutInSeconds, Integer responseTimeoutInSeconds)
  overridden: com.microsoft.azure.sdk.iot.service.digitaltwin.generated.DigitalTwins.invokeRootLevelCommand(String,String,Object,Integer,Integer)
  parameters:
  - description: <p>the String value </p>
    name: id
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the String value </p>
    name: commandName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the Object value </p>
    name: payload
    type: <xref href="Object?alt=Object&text=Object" data-throw-if-not-resolved="False"/>
  - description: <p>Maximum interval of time, in seconds, that the digital twin command will wait for the answer. </p>
    name: connectTimeoutInSeconds
    type: <xref href="Integer?alt=Integer&text=Integer" data-throw-if-not-resolved="False"/>
  - description: <p>Maximum interval of time, in seconds, that the digital twin command will wait for the answer. </p>
    name: responseTimeoutInSeconds
    type: <xref href="Integer?alt=Integer&text=Integer" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="RestException?alt=RestException&text=RestException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  returns:
    description: <p>the Object object if successful. </p>
    type: <xref href="Object?alt=Object&text=Object" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Invoke a digital twin root level command. Invoke a digital twin root level command.</p>

    <p></p>
  syntax: public Object invokeRootLevelCommand(String id, String commandName, Object payload, Integer connectTimeoutInSeconds, Integer responseTimeoutInSeconds)
  uid: com.microsoft.azure.sdk.iot.service.digitaltwin.generated.implementation.DigitalTwinsImpl.invokeRootLevelCommand(String,String,Object,Integer,Integer)
- fullName: com.microsoft.azure.sdk.iot.service.digitaltwin.generated.implementation.DigitalTwinsImpl.invokeRootLevelCommandAsync(String id, String commandName)
  name: invokeRootLevelCommandAsync(String id, String commandName)
  nameWithType: DigitalTwinsImpl.invokeRootLevelCommandAsync(String id, String commandName)
  overridden: com.microsoft.azure.sdk.iot.service.digitaltwin.generated.DigitalTwins.invokeRootLevelCommandAsync(String,String)
  parameters:
  - description: <p>the String value </p>
    name: id
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the String value </p>
    name: commandName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the Object object </p>
    type: <xref href="Observable%3CObject%3E?alt=Observable%3CObject%3E&text=Observable%3CObject%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Invoke a digital twin root level command. Invoke a digital twin root level command.</p>

    <p></p>
  syntax: public Observable<Object> invokeRootLevelCommandAsync(String id, String commandName)
  uid: com.microsoft.azure.sdk.iot.service.digitaltwin.generated.implementation.DigitalTwinsImpl.invokeRootLevelCommandAsync(String,String)
- fullName: com.microsoft.azure.sdk.iot.service.digitaltwin.generated.implementation.DigitalTwinsImpl.invokeRootLevelCommandAsync(String id, String commandName, final ServiceCallback<Object> serviceCallback)
  name: invokeRootLevelCommandAsync(String id, String commandName, final ServiceCallback<Object> serviceCallback)
  nameWithType: DigitalTwinsImpl.invokeRootLevelCommandAsync(String id, String commandName, final ServiceCallback<Object> serviceCallback)
  overridden: com.microsoft.azure.sdk.iot.service.digitaltwin.generated.DigitalTwins.invokeRootLevelCommandAsync(String,String,final ServiceCallback<Object>)
  parameters:
  - description: <p>the String value </p>
    name: id
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the String value </p>
    name: commandName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    name: serviceCallback
    type: <xref href="final+ServiceCallback%3CObject%3E?alt=final+ServiceCallback%3CObject%3E&text=final+ServiceCallback%3CObject%3E" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
    type: <xref href="ServiceFuture%3CObject%3E?alt=ServiceFuture%3CObject%3E&text=ServiceFuture%3CObject%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Invoke a digital twin root level command. Invoke a digital twin root level command.</p>

    <p></p>
  syntax: public ServiceFuture<Object> invokeRootLevelCommandAsync(String id, String commandName, final ServiceCallback<Object> serviceCallback)
  uid: com.microsoft.azure.sdk.iot.service.digitaltwin.generated.implementation.DigitalTwinsImpl.invokeRootLevelCommandAsync(String,String,final ServiceCallback<Object>)
- fullName: com.microsoft.azure.sdk.iot.service.digitaltwin.generated.implementation.DigitalTwinsImpl.invokeRootLevelCommandAsync(String id, String commandName, Object payload, Integer connectTimeoutInSeconds, Integer responseTimeoutInSeconds)
  name: invokeRootLevelCommandAsync(String id, String commandName, Object payload, Integer connectTimeoutInSeconds, Integer responseTimeoutInSeconds)
  nameWithType: DigitalTwinsImpl.invokeRootLevelCommandAsync(String id, String commandName, Object payload, Integer connectTimeoutInSeconds, Integer responseTimeoutInSeconds)
  overridden: com.microsoft.azure.sdk.iot.service.digitaltwin.generated.DigitalTwins.invokeRootLevelCommandAsync(String,String,Object,Integer,Integer)
  parameters:
  - description: <p>the String value </p>
    name: id
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the String value </p>
    name: commandName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the Object value </p>
    name: payload
    type: <xref href="Object?alt=Object&text=Object" data-throw-if-not-resolved="False"/>
  - description: <p>Maximum interval of time, in seconds, that the digital twin command will wait for the answer. </p>
    name: connectTimeoutInSeconds
    type: <xref href="Integer?alt=Integer&text=Integer" data-throw-if-not-resolved="False"/>
  - description: <p>Maximum interval of time, in seconds, that the digital twin command will wait for the answer. </p>
    name: responseTimeoutInSeconds
    type: <xref href="Integer?alt=Integer&text=Integer" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the Object object </p>
    type: <xref href="Observable%3CObject%3E?alt=Observable%3CObject%3E&text=Observable%3CObject%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Invoke a digital twin root level command. Invoke a digital twin root level command.</p>

    <p></p>
  syntax: public Observable<Object> invokeRootLevelCommandAsync(String id, String commandName, Object payload, Integer connectTimeoutInSeconds, Integer responseTimeoutInSeconds)
  uid: com.microsoft.azure.sdk.iot.service.digitaltwin.generated.implementation.DigitalTwinsImpl.invokeRootLevelCommandAsync(String,String,Object,Integer,Integer)
- fullName: com.microsoft.azure.sdk.iot.service.digitaltwin.generated.implementation.DigitalTwinsImpl.invokeRootLevelCommandAsync(String id, String commandName, Object payload, Integer connectTimeoutInSeconds, Integer responseTimeoutInSeconds, final ServiceCallback<Object> serviceCallback)
  name: invokeRootLevelCommandAsync(String id, String commandName, Object payload, Integer connectTimeoutInSeconds, Integer responseTimeoutInSeconds, final ServiceCallback<Object> serviceCallback)
  nameWithType: DigitalTwinsImpl.invokeRootLevelCommandAsync(String id, String commandName, Object payload, Integer connectTimeoutInSeconds, Integer responseTimeoutInSeconds, final ServiceCallback<Object> serviceCallback)
  overridden: com.microsoft.azure.sdk.iot.service.digitaltwin.generated.DigitalTwins.invokeRootLevelCommandAsync(String,String,Object,Integer,Integer,final ServiceCallback<Object>)
  parameters:
  - description: <p>the String value </p>
    name: id
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the String value </p>
    name: commandName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the Object value </p>
    name: payload
    type: <xref href="Object?alt=Object&text=Object" data-throw-if-not-resolved="False"/>
  - description: <p>Maximum interval of time, in seconds, that the digital twin command will wait for the answer. </p>
    name: connectTimeoutInSeconds
    type: <xref href="Integer?alt=Integer&text=Integer" data-throw-if-not-resolved="False"/>
  - description: <p>Maximum interval of time, in seconds, that the digital twin command will wait for the answer. </p>
    name: responseTimeoutInSeconds
    type: <xref href="Integer?alt=Integer&text=Integer" data-throw-if-not-resolved="False"/>
  - description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    name: serviceCallback
    type: <xref href="final+ServiceCallback%3CObject%3E?alt=final+ServiceCallback%3CObject%3E&text=final+ServiceCallback%3CObject%3E" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
    type: <xref href="ServiceFuture%3CObject%3E?alt=ServiceFuture%3CObject%3E&text=ServiceFuture%3CObject%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Invoke a digital twin root level command. Invoke a digital twin root level command.</p>

    <p></p>
  syntax: public ServiceFuture<Object> invokeRootLevelCommandAsync(String id, String commandName, Object payload, Integer connectTimeoutInSeconds, Integer responseTimeoutInSeconds, final ServiceCallback<Object> serviceCallback)
  uid: com.microsoft.azure.sdk.iot.service.digitaltwin.generated.implementation.DigitalTwinsImpl.invokeRootLevelCommandAsync(String,String,Object,Integer,Integer,final ServiceCallback<Object>)
- fullName: com.microsoft.azure.sdk.iot.service.digitaltwin.generated.implementation.DigitalTwinsImpl.invokeRootLevelCommandWithServiceResponseAsync(String id, String commandName)
  name: invokeRootLevelCommandWithServiceResponseAsync(String id, String commandName)
  nameWithType: DigitalTwinsImpl.invokeRootLevelCommandWithServiceResponseAsync(String id, String commandName)
  overridden: com.microsoft.azure.sdk.iot.service.digitaltwin.generated.DigitalTwins.invokeRootLevelCommandWithServiceResponseAsync(String,String)
  parameters:
  - description: <p>the String value </p>
    name: id
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the String value </p>
    name: commandName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the Object object </p>
    type: Observable&lt;ServiceResponseWithHeaders&lt;Object, <xref href="com.microsoft.azure.sdk.iot.service.digitaltwin.generated.models.DigitalTwinInvokeRootLevelCommandHeaders?alt=com.microsoft.azure.sdk.iot.service.digitaltwin.generated.models.DigitalTwinInvokeRootLevelCommandHeaders&text=DigitalTwinInvokeRootLevelCommandHeaders" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Invoke a digital twin root level command. Invoke a digital twin root level command.</p>

    <p></p>
  syntax: public Observable<ServiceResponseWithHeaders<Object, DigitalTwinInvokeRootLevelCommandHeaders>> invokeRootLevelCommandWithServiceResponseAsync(String id, String commandName)
  uid: com.microsoft.azure.sdk.iot.service.digitaltwin.generated.implementation.DigitalTwinsImpl.invokeRootLevelCommandWithServiceResponseAsync(String,String)
- fullName: com.microsoft.azure.sdk.iot.service.digitaltwin.generated.implementation.DigitalTwinsImpl.invokeRootLevelCommandWithServiceResponseAsync(String id, String commandName, Object payload, Integer connectTimeoutInSeconds, Integer responseTimeoutInSeconds)
  name: invokeRootLevelCommandWithServiceResponseAsync(String id, String commandName, Object payload, Integer connectTimeoutInSeconds, Integer responseTimeoutInSeconds)
  nameWithType: DigitalTwinsImpl.invokeRootLevelCommandWithServiceResponseAsync(String id, String commandName, Object payload, Integer connectTimeoutInSeconds, Integer responseTimeoutInSeconds)
  overridden: com.microsoft.azure.sdk.iot.service.digitaltwin.generated.DigitalTwins.invokeRootLevelCommandWithServiceResponseAsync(String,String,Object,Integer,Integer)
  parameters:
  - description: <p>the String value </p>
    name: id
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the String value </p>
    name: commandName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the Object value </p>
    name: payload
    type: <xref href="Object?alt=Object&text=Object" data-throw-if-not-resolved="False"/>
  - description: <p>Maximum interval of time, in seconds, that the digital twin command will wait for the answer. </p>
    name: connectTimeoutInSeconds
    type: <xref href="Integer?alt=Integer&text=Integer" data-throw-if-not-resolved="False"/>
  - description: <p>Maximum interval of time, in seconds, that the digital twin command will wait for the answer. </p>
    name: responseTimeoutInSeconds
    type: <xref href="Integer?alt=Integer&text=Integer" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the Object object </p>
    type: Observable&lt;ServiceResponseWithHeaders&lt;Object, <xref href="com.microsoft.azure.sdk.iot.service.digitaltwin.generated.models.DigitalTwinInvokeRootLevelCommandHeaders?alt=com.microsoft.azure.sdk.iot.service.digitaltwin.generated.models.DigitalTwinInvokeRootLevelCommandHeaders&text=DigitalTwinInvokeRootLevelCommandHeaders" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Invoke a digital twin root level command. Invoke a digital twin root level command.</p>

    <p></p>
  syntax: public Observable<ServiceResponseWithHeaders<Object, DigitalTwinInvokeRootLevelCommandHeaders>> invokeRootLevelCommandWithServiceResponseAsync(String id, String commandName, Object payload, Integer connectTimeoutInSeconds, Integer responseTimeoutInSeconds)
  uid: com.microsoft.azure.sdk.iot.service.digitaltwin.generated.implementation.DigitalTwinsImpl.invokeRootLevelCommandWithServiceResponseAsync(String,String,Object,Integer,Integer)
- fullName: com.microsoft.azure.sdk.iot.service.digitaltwin.generated.implementation.DigitalTwinsImpl.updateDigitalTwin(String id, List<Object> digitalTwinPatch)
  name: updateDigitalTwin(String id, List<Object> digitalTwinPatch)
  nameWithType: DigitalTwinsImpl.updateDigitalTwin(String id, List<Object> digitalTwinPatch)
  overridden: com.microsoft.azure.sdk.iot.service.digitaltwin.generated.DigitalTwins.updateDigitalTwin(String,List<Object>)
  parameters:
  - description: <p>Digital Twin ID. </p>
    name: id
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>json-patch contents to update. </p>
    name: digitalTwinPatch
    type: <xref href="List%3CObject%3E?alt=List%3CObject%3E&text=List%3CObject%3E" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="RestException?alt=RestException&text=RestException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  summary: >-
    <p>Updates a digital twin.</p>

    <p></p>
  syntax: public void updateDigitalTwin(String id, List<Object> digitalTwinPatch)
  uid: com.microsoft.azure.sdk.iot.service.digitaltwin.generated.implementation.DigitalTwinsImpl.updateDigitalTwin(String,List<Object>)
- fullName: com.microsoft.azure.sdk.iot.service.digitaltwin.generated.implementation.DigitalTwinsImpl.updateDigitalTwin(String id, List<Object> digitalTwinPatch, String ifMatch)
  name: updateDigitalTwin(String id, List<Object> digitalTwinPatch, String ifMatch)
  nameWithType: DigitalTwinsImpl.updateDigitalTwin(String id, List<Object> digitalTwinPatch, String ifMatch)
  overridden: com.microsoft.azure.sdk.iot.service.digitaltwin.generated.DigitalTwins.updateDigitalTwin(String,List<Object>,String)
  parameters:
  - description: <p>Digital Twin ID. </p>
    name: id
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>json-patch contents to update. </p>
    name: digitalTwinPatch
    type: <xref href="List%3CObject%3E?alt=List%3CObject%3E&text=List%3CObject%3E" data-throw-if-not-resolved="False"/>
  - description: <p>the String value </p>
    name: ifMatch
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="RestException?alt=RestException&text=RestException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  summary: >-
    <p>Updates a digital twin.</p>

    <p></p>
  syntax: public void updateDigitalTwin(String id, List<Object> digitalTwinPatch, String ifMatch)
  uid: com.microsoft.azure.sdk.iot.service.digitaltwin.generated.implementation.DigitalTwinsImpl.updateDigitalTwin(String,List<Object>,String)
- fullName: com.microsoft.azure.sdk.iot.service.digitaltwin.generated.implementation.DigitalTwinsImpl.updateDigitalTwinAsync(String id, List<Object> digitalTwinPatch)
  name: updateDigitalTwinAsync(String id, List<Object> digitalTwinPatch)
  nameWithType: DigitalTwinsImpl.updateDigitalTwinAsync(String id, List<Object> digitalTwinPatch)
  overridden: com.microsoft.azure.sdk.iot.service.digitaltwin.generated.DigitalTwins.updateDigitalTwinAsync(String,List<Object>)
  parameters:
  - description: <p>Digital Twin ID. </p>
    name: id
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>json-patch contents to update. </p>
    name: digitalTwinPatch
    type: <xref href="List%3CObject%3E?alt=List%3CObject%3E&text=List%3CObject%3E" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceResponseWithHeaders"></xref> object if successful. </p>
    type: <xref href="Observable%3CVoid%3E?alt=Observable%3CVoid%3E&text=Observable%3CVoid%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Updates a digital twin.</p>

    <p></p>
  syntax: public Observable<Void> updateDigitalTwinAsync(String id, List<Object> digitalTwinPatch)
  uid: com.microsoft.azure.sdk.iot.service.digitaltwin.generated.implementation.DigitalTwinsImpl.updateDigitalTwinAsync(String,List<Object>)
- fullName: com.microsoft.azure.sdk.iot.service.digitaltwin.generated.implementation.DigitalTwinsImpl.updateDigitalTwinAsync(String id, List<Object> digitalTwinPatch, final ServiceCallback<Void> serviceCallback)
  name: updateDigitalTwinAsync(String id, List<Object> digitalTwinPatch, final ServiceCallback<Void> serviceCallback)
  nameWithType: DigitalTwinsImpl.updateDigitalTwinAsync(String id, List<Object> digitalTwinPatch, final ServiceCallback<Void> serviceCallback)
  overridden: com.microsoft.azure.sdk.iot.service.digitaltwin.generated.DigitalTwins.updateDigitalTwinAsync(String,List<Object>,final ServiceCallback<Void>)
  parameters:
  - description: <p>Digital Twin ID. </p>
    name: id
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>json-patch contents to update. </p>
    name: digitalTwinPatch
    type: <xref href="List%3CObject%3E?alt=List%3CObject%3E&text=List%3CObject%3E" data-throw-if-not-resolved="False"/>
  - description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    name: serviceCallback
    type: <xref href="final+ServiceCallback%3CVoid%3E?alt=final+ServiceCallback%3CVoid%3E&text=final+ServiceCallback%3CVoid%3E" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
    type: <xref href="ServiceFuture%3CVoid%3E?alt=ServiceFuture%3CVoid%3E&text=ServiceFuture%3CVoid%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Updates a digital twin.</p>

    <p></p>
  syntax: public ServiceFuture<Void> updateDigitalTwinAsync(String id, List<Object> digitalTwinPatch, final ServiceCallback<Void> serviceCallback)
  uid: com.microsoft.azure.sdk.iot.service.digitaltwin.generated.implementation.DigitalTwinsImpl.updateDigitalTwinAsync(String,List<Object>,final ServiceCallback<Void>)
- fullName: com.microsoft.azure.sdk.iot.service.digitaltwin.generated.implementation.DigitalTwinsImpl.updateDigitalTwinAsync(String id, List<Object> digitalTwinPatch, String ifMatch)
  name: updateDigitalTwinAsync(String id, List<Object> digitalTwinPatch, String ifMatch)
  nameWithType: DigitalTwinsImpl.updateDigitalTwinAsync(String id, List<Object> digitalTwinPatch, String ifMatch)
  overridden: com.microsoft.azure.sdk.iot.service.digitaltwin.generated.DigitalTwins.updateDigitalTwinAsync(String,List<Object>,String)
  parameters:
  - description: <p>Digital Twin ID. </p>
    name: id
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>json-patch contents to update. </p>
    name: digitalTwinPatch
    type: <xref href="List%3CObject%3E?alt=List%3CObject%3E&text=List%3CObject%3E" data-throw-if-not-resolved="False"/>
  - description: <p>the String value </p>
    name: ifMatch
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceResponseWithHeaders"></xref> object if successful. </p>
    type: <xref href="Observable%3CVoid%3E?alt=Observable%3CVoid%3E&text=Observable%3CVoid%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Updates a digital twin.</p>

    <p></p>
  syntax: public Observable<Void> updateDigitalTwinAsync(String id, List<Object> digitalTwinPatch, String ifMatch)
  uid: com.microsoft.azure.sdk.iot.service.digitaltwin.generated.implementation.DigitalTwinsImpl.updateDigitalTwinAsync(String,List<Object>,String)
- fullName: com.microsoft.azure.sdk.iot.service.digitaltwin.generated.implementation.DigitalTwinsImpl.updateDigitalTwinAsync(String id, List<Object> digitalTwinPatch, String ifMatch, final ServiceCallback<Void> serviceCallback)
  name: updateDigitalTwinAsync(String id, List<Object> digitalTwinPatch, String ifMatch, final ServiceCallback<Void> serviceCallback)
  nameWithType: DigitalTwinsImpl.updateDigitalTwinAsync(String id, List<Object> digitalTwinPatch, String ifMatch, final ServiceCallback<Void> serviceCallback)
  overridden: com.microsoft.azure.sdk.iot.service.digitaltwin.generated.DigitalTwins.updateDigitalTwinAsync(String,List<Object>,String,final ServiceCallback<Void>)
  parameters:
  - description: <p>Digital Twin ID. </p>
    name: id
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>json-patch contents to update. </p>
    name: digitalTwinPatch
    type: <xref href="List%3CObject%3E?alt=List%3CObject%3E&text=List%3CObject%3E" data-throw-if-not-resolved="False"/>
  - description: <p>the String value </p>
    name: ifMatch
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    name: serviceCallback
    type: <xref href="final+ServiceCallback%3CVoid%3E?alt=final+ServiceCallback%3CVoid%3E&text=final+ServiceCallback%3CVoid%3E" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
    type: <xref href="ServiceFuture%3CVoid%3E?alt=ServiceFuture%3CVoid%3E&text=ServiceFuture%3CVoid%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Updates a digital twin.</p>

    <p></p>
  syntax: public ServiceFuture<Void> updateDigitalTwinAsync(String id, List<Object> digitalTwinPatch, String ifMatch, final ServiceCallback<Void> serviceCallback)
  uid: com.microsoft.azure.sdk.iot.service.digitaltwin.generated.implementation.DigitalTwinsImpl.updateDigitalTwinAsync(String,List<Object>,String,final ServiceCallback<Void>)
- fullName: com.microsoft.azure.sdk.iot.service.digitaltwin.generated.implementation.DigitalTwinsImpl.updateDigitalTwinWithServiceResponseAsync(String id, List<Object> digitalTwinPatch)
  name: updateDigitalTwinWithServiceResponseAsync(String id, List<Object> digitalTwinPatch)
  nameWithType: DigitalTwinsImpl.updateDigitalTwinWithServiceResponseAsync(String id, List<Object> digitalTwinPatch)
  overridden: com.microsoft.azure.sdk.iot.service.digitaltwin.generated.DigitalTwins.updateDigitalTwinWithServiceResponseAsync(String,List<Object>)
  parameters:
  - description: <p>Digital Twin ID. </p>
    name: id
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>json-patch contents to update. </p>
    name: digitalTwinPatch
    type: <xref href="List%3CObject%3E?alt=List%3CObject%3E&text=List%3CObject%3E" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceResponseWithHeaders"></xref> object if successful. </p>
    type: Observable&lt;ServiceResponseWithHeaders&lt;Void, <xref href="com.microsoft.azure.sdk.iot.service.digitaltwin.generated.models.DigitalTwinUpdateDigitalTwinHeaders?alt=com.microsoft.azure.sdk.iot.service.digitaltwin.generated.models.DigitalTwinUpdateDigitalTwinHeaders&text=DigitalTwinUpdateDigitalTwinHeaders" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Updates a digital twin.</p>

    <p></p>
  syntax: public Observable<ServiceResponseWithHeaders<Void, DigitalTwinUpdateDigitalTwinHeaders>> updateDigitalTwinWithServiceResponseAsync(String id, List<Object> digitalTwinPatch)
  uid: com.microsoft.azure.sdk.iot.service.digitaltwin.generated.implementation.DigitalTwinsImpl.updateDigitalTwinWithServiceResponseAsync(String,List<Object>)
- fullName: com.microsoft.azure.sdk.iot.service.digitaltwin.generated.implementation.DigitalTwinsImpl.updateDigitalTwinWithServiceResponseAsync(String id, List<Object> digitalTwinPatch, String ifMatch)
  name: updateDigitalTwinWithServiceResponseAsync(String id, List<Object> digitalTwinPatch, String ifMatch)
  nameWithType: DigitalTwinsImpl.updateDigitalTwinWithServiceResponseAsync(String id, List<Object> digitalTwinPatch, String ifMatch)
  overridden: com.microsoft.azure.sdk.iot.service.digitaltwin.generated.DigitalTwins.updateDigitalTwinWithServiceResponseAsync(String,List<Object>,String)
  parameters:
  - description: <p>Digital Twin ID. </p>
    name: id
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>json-patch contents to update. </p>
    name: digitalTwinPatch
    type: <xref href="List%3CObject%3E?alt=List%3CObject%3E&text=List%3CObject%3E" data-throw-if-not-resolved="False"/>
  - description: <p>the String value </p>
    name: ifMatch
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceResponseWithHeaders"></xref> object if successful. </p>
    type: Observable&lt;ServiceResponseWithHeaders&lt;Void, <xref href="com.microsoft.azure.sdk.iot.service.digitaltwin.generated.models.DigitalTwinUpdateDigitalTwinHeaders?alt=com.microsoft.azure.sdk.iot.service.digitaltwin.generated.models.DigitalTwinUpdateDigitalTwinHeaders&text=DigitalTwinUpdateDigitalTwinHeaders" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Updates a digital twin.</p>

    <p></p>
  syntax: public Observable<ServiceResponseWithHeaders<Void, DigitalTwinUpdateDigitalTwinHeaders>> updateDigitalTwinWithServiceResponseAsync(String id, List<Object> digitalTwinPatch, String ifMatch)
  uid: com.microsoft.azure.sdk.iot.service.digitaltwin.generated.implementation.DigitalTwinsImpl.updateDigitalTwinWithServiceResponseAsync(String,List<Object>,String)
nameWithType: DigitalTwinsImpl
syntax: public class DigitalTwinsImpl implements DigitalTwins
type: class
uid: com.microsoft.azure.sdk.iot.service.digitaltwin.generated.implementation.DigitalTwinsImpl
fullName: com.microsoft.azure.sdk.iot.service.digitaltwin.generated.implementation.DigitalTwinsImpl
name: DigitalTwinsImpl
package: com.microsoft.azure.sdk.iot.service.digitaltwin.generated.implementation
summary: <p>An instance of this class provides access to all the operations defined in DigitalTwins. </p>
metadata: {}
