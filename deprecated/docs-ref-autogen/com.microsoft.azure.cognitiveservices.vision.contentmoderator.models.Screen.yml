### YamlMime:JavaType
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
methods:
- fullName: com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.Screen.autoCorrectedText()
  name: autoCorrectedText()
  nameWithType: Screen.autoCorrectedText()
  returns:
    description: <p>the autoCorrectedText value </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the autoCorrectedText value.</p>

    <p></p>
  syntax: public String autoCorrectedText()
  uid: com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.Screen.autoCorrectedText()
- fullName: com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.Screen.classification()
  name: classification()
  nameWithType: Screen.classification()
  returns:
    description: <p>the classification value </p>
    type: <xref href="com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.Classification?alt=com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.Classification&text=Classification" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the classification value.</p>

    <p></p>
  syntax: public Classification classification()
  uid: com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.Screen.classification()
- fullName: com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.Screen.language()
  name: language()
  nameWithType: Screen.language()
  returns:
    description: <p>the language value </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the language value.</p>

    <p></p>
  syntax: public String language()
  uid: com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.Screen.language()
- fullName: com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.Screen.misrepresentation()
  name: misrepresentation()
  nameWithType: Screen.misrepresentation()
  returns:
    description: <p>the misrepresentation value </p>
    type: <xref href="List%3CString%3E?alt=List%3CString%3E&text=List%3CString%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the misrepresentation value.</p>

    <p></p>
  syntax: public List<String> misrepresentation()
  uid: com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.Screen.misrepresentation()
- fullName: com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.Screen.normalizedText()
  name: normalizedText()
  nameWithType: Screen.normalizedText()
  returns:
    description: <p>the normalizedText value </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the normalizedText value.</p>

    <p></p>
  syntax: public String normalizedText()
  uid: com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.Screen.normalizedText()
- fullName: com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.Screen.originalText()
  name: originalText()
  nameWithType: Screen.originalText()
  returns:
    description: <p>the originalText value </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the originalText value.</p>

    <p></p>
  syntax: public String originalText()
  uid: com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.Screen.originalText()
- fullName: com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.Screen.pII()
  name: pII()
  nameWithType: Screen.pII()
  returns:
    description: <p>the pII value </p>
    type: <xref href="com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.PII?alt=com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.PII&text=PII" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the pII value.</p>

    <p></p>
  syntax: public PII pII()
  uid: com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.Screen.pII()
- fullName: com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.Screen.status()
  name: status()
  nameWithType: Screen.status()
  returns:
    description: <p>the status value </p>
    type: <xref href="com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.Status?alt=com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.Status&text=Status" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the status value.</p>

    <p></p>
  syntax: public Status status()
  uid: com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.Screen.status()
- fullName: com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.Screen.terms()
  name: terms()
  nameWithType: Screen.terms()
  returns:
    description: <p>the terms value </p>
    type: List&lt;<xref href="com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.DetectedTerms?alt=com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.DetectedTerms&text=DetectedTerms" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Get the terms value.</p>

    <p></p>
  syntax: public List<DetectedTerms> terms()
  uid: com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.Screen.terms()
- fullName: com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.Screen.trackingId()
  name: trackingId()
  nameWithType: Screen.trackingId()
  returns:
    description: <p>the trackingId value </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the trackingId value.</p>

    <p></p>
  syntax: public String trackingId()
  uid: com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.Screen.trackingId()
- fullName: com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.Screen.withAutoCorrectedText(String autoCorrectedText)
  name: withAutoCorrectedText(String autoCorrectedText)
  nameWithType: Screen.withAutoCorrectedText(String autoCorrectedText)
  parameters:
  - description: <p>the autoCorrectedText value to set </p>
    name: autoCorrectedText
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the Screen object itself. </p>
    type: <xref href="com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.Screen?alt=com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.Screen&text=Screen" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the autoCorrectedText value.</p>

    <p></p>
  syntax: public Screen withAutoCorrectedText(String autoCorrectedText)
  uid: com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.Screen.withAutoCorrectedText(String)
- fullName: com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.Screen.withClassification(Classification classification)
  name: withClassification(Classification classification)
  nameWithType: Screen.withClassification(Classification classification)
  parameters:
  - description: <p>the classification value to set </p>
    name: classification
    type: <xref href="com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.Classification?alt=com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.Classification&text=Classification" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the Screen object itself. </p>
    type: <xref href="com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.Screen?alt=com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.Screen&text=Screen" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the classification value.</p>

    <p></p>
  syntax: public Screen withClassification(Classification classification)
  uid: com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.Screen.withClassification(Classification)
- fullName: com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.Screen.withLanguage(String language)
  name: withLanguage(String language)
  nameWithType: Screen.withLanguage(String language)
  parameters:
  - description: <p>the language value to set </p>
    name: language
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the Screen object itself. </p>
    type: <xref href="com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.Screen?alt=com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.Screen&text=Screen" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the language value.</p>

    <p></p>
  syntax: public Screen withLanguage(String language)
  uid: com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.Screen.withLanguage(String)
- fullName: com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.Screen.withMisrepresentation(List<String> misrepresentation)
  name: withMisrepresentation(List<String> misrepresentation)
  nameWithType: Screen.withMisrepresentation(List<String> misrepresentation)
  parameters:
  - description: <p>the misrepresentation value to set </p>
    name: misrepresentation
    type: <xref href="List%3CString%3E?alt=List%3CString%3E&text=List%3CString%3E" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the Screen object itself. </p>
    type: <xref href="com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.Screen?alt=com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.Screen&text=Screen" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the misrepresentation value.</p>

    <p></p>
  syntax: public Screen withMisrepresentation(List<String> misrepresentation)
  uid: com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.Screen.withMisrepresentation(List<String>)
- fullName: com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.Screen.withNormalizedText(String normalizedText)
  name: withNormalizedText(String normalizedText)
  nameWithType: Screen.withNormalizedText(String normalizedText)
  parameters:
  - description: <p>the normalizedText value to set </p>
    name: normalizedText
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the Screen object itself. </p>
    type: <xref href="com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.Screen?alt=com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.Screen&text=Screen" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the normalizedText value.</p>

    <p></p>
  syntax: public Screen withNormalizedText(String normalizedText)
  uid: com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.Screen.withNormalizedText(String)
- fullName: com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.Screen.withOriginalText(String originalText)
  name: withOriginalText(String originalText)
  nameWithType: Screen.withOriginalText(String originalText)
  parameters:
  - description: <p>the originalText value to set </p>
    name: originalText
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the Screen object itself. </p>
    type: <xref href="com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.Screen?alt=com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.Screen&text=Screen" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the originalText value.</p>

    <p></p>
  syntax: public Screen withOriginalText(String originalText)
  uid: com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.Screen.withOriginalText(String)
- fullName: com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.Screen.withPII(PII pII)
  name: withPII(PII pII)
  nameWithType: Screen.withPII(PII pII)
  parameters:
  - description: <p>the pII value to set </p>
    name: pII
    type: <xref href="com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.PII?alt=com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.PII&text=PII" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the Screen object itself. </p>
    type: <xref href="com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.Screen?alt=com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.Screen&text=Screen" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the pII value.</p>

    <p></p>
  syntax: public Screen withPII(PII pII)
  uid: com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.Screen.withPII(PII)
- fullName: com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.Screen.withStatus(Status status)
  name: withStatus(Status status)
  nameWithType: Screen.withStatus(Status status)
  parameters:
  - description: <p>the status value to set </p>
    name: status
    type: <xref href="com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.Status?alt=com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.Status&text=Status" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the Screen object itself. </p>
    type: <xref href="com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.Screen?alt=com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.Screen&text=Screen" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the status value.</p>

    <p></p>
  syntax: public Screen withStatus(Status status)
  uid: com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.Screen.withStatus(Status)
- fullName: com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.Screen.withTerms(List<DetectedTerms> terms)
  name: withTerms(List<DetectedTerms> terms)
  nameWithType: Screen.withTerms(List<DetectedTerms> terms)
  parameters:
  - description: <p>the terms value to set </p>
    name: terms
    type: List&lt;<xref href="com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.DetectedTerms?alt=com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.DetectedTerms&text=DetectedTerms" data-throw-if-not-resolved="False"/>&gt;
  returns:
    description: <p>the Screen object itself. </p>
    type: <xref href="com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.Screen?alt=com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.Screen&text=Screen" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the terms value.</p>

    <p></p>
  syntax: public Screen withTerms(List<DetectedTerms> terms)
  uid: com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.Screen.withTerms(List<DetectedTerms>)
- fullName: com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.Screen.withTrackingId(String trackingId)
  name: withTrackingId(String trackingId)
  nameWithType: Screen.withTrackingId(String trackingId)
  parameters:
  - description: <p>the trackingId value to set </p>
    name: trackingId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the Screen object itself. </p>
    type: <xref href="com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.Screen?alt=com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.Screen&text=Screen" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the trackingId value.</p>

    <p></p>
  syntax: public Screen withTrackingId(String trackingId)
  uid: com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.Screen.withTrackingId(String)
nameWithType: Screen
syntax: public class Screen
type: class
uid: com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.Screen
fullName: com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.Screen
name: Screen
package: com.microsoft.azure.cognitiveservices.vision.contentmoderator.models
summary: <p>The response for a Screen text request. </p>
metadata: {}
