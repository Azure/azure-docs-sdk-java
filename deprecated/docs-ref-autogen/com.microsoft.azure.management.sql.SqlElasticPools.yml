### YamlMime:JavaType
inheritedMembers:
- com.microsoft.azure.management.resources.fluentcore.collection.SupportsBatchCreation.create(Creatable<ResourceT>...)
- com.microsoft.azure.management.resources.fluentcore.collection.SupportsBatchCreation.create(List<Creatable<ResourceT>>)
- com.microsoft.azure.management.resources.fluentcore.collection.SupportsBatchCreation.createAsync(Creatable<ResourceT>...)
- com.microsoft.azure.management.resources.fluentcore.collection.SupportsBatchCreation.createAsync(List<Creatable<ResourceT>>)
- com.microsoft.azure.management.resources.fluentcore.collection.SupportsBatchCreation.createAsync(ServiceCallback<CreatedResources<ResourceT>>,Creatable<ResourceT>...)
- com.microsoft.azure.management.resources.fluentcore.collection.SupportsBatchCreation.createAsync(final ServiceCallback<CreatedResources<ResourceT>>,List<Creatable<ResourceT>>)
- com.microsoft.azure.management.resources.fluentcore.collection.SupportsCreating.define(String)
- com.microsoft.azure.management.resources.fluentcore.collection.SupportsDeletingById.deleteById(String)
- com.microsoft.azure.management.resources.fluentcore.collection.SupportsDeletingById.deleteByIdAsync(String,ServiceCallback<Void>)
- com.microsoft.azure.management.resources.fluentcore.collection.SupportsDeletingById.deleteByIdAsync(String)
- com.microsoft.azure.management.resources.fluentcore.arm.collection.SupportsDeletingByParent.deleteByParent(String,String,String)
- com.microsoft.azure.management.resources.fluentcore.arm.collection.SupportsDeletingByParent.deleteByParentAsync(String,String,String,ServiceCallback<Void>)
- com.microsoft.azure.management.resources.fluentcore.arm.collection.SupportsDeletingByParent.deleteByParentAsync(String,String,String)
- com.microsoft.azure.management.resources.fluentcore.arm.collection.SupportsGettingById.getById(String)
- com.microsoft.azure.management.resources.fluentcore.arm.collection.SupportsGettingById.getByIdAsync(String)
- com.microsoft.azure.management.resources.fluentcore.arm.collection.SupportsGettingById.getByIdAsync(String,ServiceCallback<T>)
- com.microsoft.azure.management.resources.fluentcore.model.HasInner.inner()
- com.microsoft.azure.management.resources.fluentcore.arm.models.HasManager.manager()
methods:
- fullName: com.microsoft.azure.management.sql.SqlElasticPools.getBySqlServer(SqlServer sqlServer, String name)
  name: getBySqlServer(SqlServer sqlServer, String name)
  nameWithType: SqlElasticPools.getBySqlServer(SqlServer sqlServer, String name)
  parameters:
  - description: <p>the instance of SQLServer. </p>
    name: sqlServer
    type: <xref href="com.microsoft.azure.management.sql.SqlServer?alt=com.microsoft.azure.management.sql.SqlServer&text=SqlServer" data-throw-if-not-resolved="False"/>
  - description: <p>the name of SQLElasticPool </p>
    name: name
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>an immutable representation of the SQLElasticPool </p>
    type: <xref href="com.microsoft.azure.management.sql.SqlElasticPool?alt=com.microsoft.azure.management.sql.SqlElasticPool&text=SqlElasticPool" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the SQLElasticPool based on the SQLServer instance and SQLElasticPool name.</p>

    <p></p>
  syntax: public SqlElasticPool getBySqlServer(SqlServer sqlServer, String name)
  uid: com.microsoft.azure.management.sql.SqlElasticPools.getBySqlServer(SqlServer,String)
- fullName: com.microsoft.azure.management.sql.SqlElasticPools.getBySqlServer(String resourceGroup, String sqlServerName, String name)
  name: getBySqlServer(String resourceGroup, String sqlServerName, String name)
  nameWithType: SqlElasticPools.getBySqlServer(String resourceGroup, String sqlServerName, String name)
  parameters:
  - description: <p>the name of resource group. </p>
    name: resourceGroup
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the name of SQLServer. </p>
    name: sqlServerName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the name of SQLElasticPool. </p>
    name: name
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>an immutable representation of the SQLElasticPool </p>
    type: <xref href="com.microsoft.azure.management.sql.SqlElasticPool?alt=com.microsoft.azure.management.sql.SqlElasticPool&text=SqlElasticPool" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the SQLElasticPool based on the resource group name, SQLServer name and SQLElasticPool name.</p>

    <p></p>
  syntax: public SqlElasticPool getBySqlServer(String resourceGroup, String sqlServerName, String name)
  uid: com.microsoft.azure.management.sql.SqlElasticPools.getBySqlServer(String,String,String)
- fullName: com.microsoft.azure.management.sql.SqlElasticPools.listBySqlServer(SqlServer sqlServer)
  name: listBySqlServer(SqlServer sqlServer)
  nameWithType: SqlElasticPools.listBySqlServer(SqlServer sqlServer)
  parameters:
  - description: <p>the instance of SQLServer </p>
    name: sqlServer
    type: <xref href="com.microsoft.azure.management.sql.SqlServer?alt=com.microsoft.azure.management.sql.SqlServer&text=SqlServer" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the list of SQLElasticPools in a SQLServer </p>
    type: List&lt;<xref href="com.microsoft.azure.management.sql.SqlElasticPool?alt=com.microsoft.azure.management.sql.SqlElasticPool&text=SqlElasticPool" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Gets the SQLElasticPool based on the SQLServer.</p>

    <p></p>
  syntax: public List<SqlElasticPool> listBySqlServer(SqlServer sqlServer)
  uid: com.microsoft.azure.management.sql.SqlElasticPools.listBySqlServer(SqlServer)
- fullName: com.microsoft.azure.management.sql.SqlElasticPools.listBySqlServer(String resourceGroupName, String sqlServerName)
  name: listBySqlServer(String resourceGroupName, String sqlServerName)
  nameWithType: SqlElasticPools.listBySqlServer(String resourceGroupName, String sqlServerName)
  parameters:
  - description: <p>the name of the resource group to list the resources from </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the name of SQLServer </p>
    name: sqlServerName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the list of SQLElasticPools in a SQLServer </p>
    type: List&lt;<xref href="com.microsoft.azure.management.sql.SqlElasticPool?alt=com.microsoft.azure.management.sql.SqlElasticPool&text=SqlElasticPool" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Lists resources of the specified type in the specified resource group and SQLServer.</p>

    <p></p>
  syntax: public List<SqlElasticPool> listBySqlServer(String resourceGroupName, String sqlServerName)
  uid: com.microsoft.azure.management.sql.SqlElasticPools.listBySqlServer(String,String)
nameWithType: SqlElasticPools
syntax: public interface SqlElasticPools extends SupportsCreating<SqlElasticPool.DefinitionStages.Blank>,SupportsDeletingById,SupportsGettingById<SqlElasticPool>,SupportsBatchCreation<SqlElasticPool>,SupportsDeletingByParent,HasManager<SqlServerManager>,HasInner<ElasticPoolsInner>
type: interface
uid: com.microsoft.azure.management.sql.SqlElasticPools
fullName: com.microsoft.azure.management.sql.SqlElasticPools
name: SqlElasticPools
package: com.microsoft.azure.management.sql
summary: <p>Entry point to SQL Elastic Pool management API. </p>
metadata: {}
