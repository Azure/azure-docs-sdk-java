### YamlMime:JavaType
inheritedMembers:
- com.microsoft.azure.management.resources.fluentcore.arm.models.HasId.id()
- com.microsoft.azure.management.resources.fluentcore.model.HasInner.inner()
- com.microsoft.azure.management.resources.fluentcore.model.Indexable.key()
- com.microsoft.azure.management.resources.fluentcore.arm.models.HasManager.manager()
- com.microsoft.azure.management.resources.fluentcore.arm.models.HasName.name()
- com.microsoft.azure.management.resources.fluentcore.model.Refreshable.refresh()
- com.microsoft.azure.management.resources.fluentcore.model.Refreshable.refreshAsync()
- com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.region()
- com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.regionName()
- com.microsoft.azure.management.resources.fluentcore.arm.models.HasResourceGroup.resourceGroupName()
- com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.tags()
- com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.type()
- com.microsoft.azure.management.resources.fluentcore.model.Updatable.update()
methods:
- fullName: com.microsoft.azure.management.dns.DnsZone.aaaaRecordSets()
  name: aaaaRecordSets()
  nameWithType: DnsZone.aaaaRecordSets()
  returns:
    description: <p>entry point to manage record sets in this zone containing AAAA (IPv6 address) records </p>
    type: <xref href="com.microsoft.azure.management.dns.AaaaRecordSets?alt=com.microsoft.azure.management.dns.AaaaRecordSets&text=AaaaRecordSets" data-throw-if-not-resolved="False"/>
  syntax: public AaaaRecordSets aaaaRecordSets()
  uid: com.microsoft.azure.management.dns.DnsZone.aaaaRecordSets()
- fullName: com.microsoft.azure.management.dns.DnsZone.aRecordSets()
  name: aRecordSets()
  nameWithType: DnsZone.aRecordSets()
  returns:
    description: <p>entry point to manage record sets in this zone containing A (IPv4 address) records </p>
    type: <xref href="com.microsoft.azure.management.dns.ARecordSets?alt=com.microsoft.azure.management.dns.ARecordSets&text=ARecordSets" data-throw-if-not-resolved="False"/>
  syntax: public ARecordSets aRecordSets()
  uid: com.microsoft.azure.management.dns.DnsZone.aRecordSets()
- fullName: com.microsoft.azure.management.dns.DnsZone.cNameRecordSets()
  name: cNameRecordSets()
  nameWithType: DnsZone.cNameRecordSets()
  returns:
    description: <p>entry point to manage record sets in this zone containing CNAME (canonical name) records </p>
    type: <xref href="com.microsoft.azure.management.dns.CNameRecordSets?alt=com.microsoft.azure.management.dns.CNameRecordSets&text=CNameRecordSets" data-throw-if-not-resolved="False"/>
  syntax: public CNameRecordSets cNameRecordSets()
  uid: com.microsoft.azure.management.dns.DnsZone.cNameRecordSets()
- fullName: com.microsoft.azure.management.dns.DnsZone.eTag()
  name: eTag()
  nameWithType: DnsZone.eTag()
  returns:
    description: <p>the etag associated with this zone. </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  syntax: public String eTag()
  uid: com.microsoft.azure.management.dns.DnsZone.eTag()
- fullName: com.microsoft.azure.management.dns.DnsZone.getSoaRecordSet()
  name: getSoaRecordSet()
  nameWithType: DnsZone.getSoaRecordSet()
  returns:
    description: <p>the record set containing SOA (start of authority) record associated with this DNS zone </p>
    type: <xref href="com.microsoft.azure.management.dns.SoaRecordSet?alt=com.microsoft.azure.management.dns.SoaRecordSet&text=SoaRecordSet" data-throw-if-not-resolved="False"/>
  syntax: public SoaRecordSet getSoaRecordSet()
  uid: com.microsoft.azure.management.dns.DnsZone.getSoaRecordSet()
- fullName: com.microsoft.azure.management.dns.DnsZone.listRecordSets()
  name: listRecordSets()
  nameWithType: DnsZone.listRecordSets()
  returns:
    description: <p>the record sets in this zone. </p>
    type: PagedList&lt;<xref href="com.microsoft.azure.management.dns.DnsRecordSet?alt=com.microsoft.azure.management.dns.DnsRecordSet&text=DnsRecordSet" data-throw-if-not-resolved="False"/>&gt;
  syntax: public PagedList<DnsRecordSet> listRecordSets()
  uid: com.microsoft.azure.management.dns.DnsZone.listRecordSets()
- fullName: com.microsoft.azure.management.dns.DnsZone.listRecordSets(int pageSize)
  name: listRecordSets(int pageSize)
  nameWithType: DnsZone.listRecordSets(int pageSize)
  parameters:
  - description: <p>the maximum number of record sets in a page </p>
    name: pageSize
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the record sets </p>
    type: PagedList&lt;<xref href="com.microsoft.azure.management.dns.DnsRecordSet?alt=com.microsoft.azure.management.dns.DnsRecordSet&text=DnsRecordSet" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Lists all the record sets in this zone with each entries in each page limited to the given size.</p>

    <p></p>
  syntax: public PagedList<DnsRecordSet> listRecordSets(int pageSize)
  uid: com.microsoft.azure.management.dns.DnsZone.listRecordSets(int)
- fullName: com.microsoft.azure.management.dns.DnsZone.listRecordSets(String recordSetNameSuffix)
  name: listRecordSets(String recordSetNameSuffix)
  nameWithType: DnsZone.listRecordSets(String recordSetNameSuffix)
  parameters:
  - description: <p>the record set name suffix </p>
    name: recordSetNameSuffix
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the record sets </p>
    type: PagedList&lt;<xref href="com.microsoft.azure.management.dns.DnsRecordSet?alt=com.microsoft.azure.management.dns.DnsRecordSet&text=DnsRecordSet" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Lists all the record sets in this zone with the given suffix.</p>

    <p></p>
  syntax: public PagedList<DnsRecordSet> listRecordSets(String recordSetNameSuffix)
  uid: com.microsoft.azure.management.dns.DnsZone.listRecordSets(String)
- fullName: com.microsoft.azure.management.dns.DnsZone.listRecordSets(String recordSetNameSuffix, int pageSize)
  name: listRecordSets(String recordSetNameSuffix, int pageSize)
  nameWithType: DnsZone.listRecordSets(String recordSetNameSuffix, int pageSize)
  parameters:
  - description: <p>the record set name suffix </p>
    name: recordSetNameSuffix
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the maximum number of record sets in a page </p>
    name: pageSize
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the record sets </p>
    type: PagedList&lt;<xref href="com.microsoft.azure.management.dns.DnsRecordSet?alt=com.microsoft.azure.management.dns.DnsRecordSet&text=DnsRecordSet" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Lists all the record sets in this zone with the given suffix, also limits the number of entries per page to the given page size.</p>

    <p></p>
  syntax: public PagedList<DnsRecordSet> listRecordSets(String recordSetNameSuffix, int pageSize)
  uid: com.microsoft.azure.management.dns.DnsZone.listRecordSets(String,int)
- fullName: com.microsoft.azure.management.dns.DnsZone.maxNumberOfRecordSets()
  name: maxNumberOfRecordSets()
  nameWithType: DnsZone.maxNumberOfRecordSets()
  returns:
    description: <p>the maximum number of record sets that can be created in this zone. </p>
    type: <xref href="long?alt=long&text=long" data-throw-if-not-resolved="False"/>
  syntax: public long maxNumberOfRecordSets()
  uid: com.microsoft.azure.management.dns.DnsZone.maxNumberOfRecordSets()
- fullName: com.microsoft.azure.management.dns.DnsZone.mxRecordSets()
  name: mxRecordSets()
  nameWithType: DnsZone.mxRecordSets()
  returns:
    description: <p>entry point to manage record sets in this zone containing MX (mail exchange) records </p>
    type: <xref href="com.microsoft.azure.management.dns.MXRecordSets?alt=com.microsoft.azure.management.dns.MXRecordSets&text=MXRecordSets" data-throw-if-not-resolved="False"/>
  syntax: public MXRecordSets mxRecordSets()
  uid: com.microsoft.azure.management.dns.DnsZone.mxRecordSets()
- fullName: com.microsoft.azure.management.dns.DnsZone.nameServers()
  name: nameServers()
  nameWithType: DnsZone.nameServers()
  returns:
    description: <p>name servers assigned for this zone. </p>
    type: <xref href="List%3CString%3E?alt=List%3CString%3E&text=List%3CString%3E" data-throw-if-not-resolved="False"/>
  syntax: public List<String> nameServers()
  uid: com.microsoft.azure.management.dns.DnsZone.nameServers()
- fullName: com.microsoft.azure.management.dns.DnsZone.nsRecordSets()
  name: nsRecordSets()
  nameWithType: DnsZone.nsRecordSets()
  returns:
    description: <p>entry point to manage record sets in this zone containing NS (name server) records </p>
    type: <xref href="com.microsoft.azure.management.dns.NSRecordSets?alt=com.microsoft.azure.management.dns.NSRecordSets&text=NSRecordSets" data-throw-if-not-resolved="False"/>
  syntax: public NSRecordSets nsRecordSets()
  uid: com.microsoft.azure.management.dns.DnsZone.nsRecordSets()
- fullName: com.microsoft.azure.management.dns.DnsZone.numberOfRecordSets()
  name: numberOfRecordSets()
  nameWithType: DnsZone.numberOfRecordSets()
  returns:
    description: <p>the current number of record sets in this zone. </p>
    type: <xref href="long?alt=long&text=long" data-throw-if-not-resolved="False"/>
  syntax: public long numberOfRecordSets()
  uid: com.microsoft.azure.management.dns.DnsZone.numberOfRecordSets()
- fullName: com.microsoft.azure.management.dns.DnsZone.ptrRecordSets()
  name: ptrRecordSets()
  nameWithType: DnsZone.ptrRecordSets()
  returns:
    description: <p>entry point to manage record sets in this zone containing PTR (pointer) records </p>
    type: <xref href="com.microsoft.azure.management.dns.PtrRecordSets?alt=com.microsoft.azure.management.dns.PtrRecordSets&text=PtrRecordSets" data-throw-if-not-resolved="False"/>
  syntax: public PtrRecordSets ptrRecordSets()
  uid: com.microsoft.azure.management.dns.DnsZone.ptrRecordSets()
- fullName: com.microsoft.azure.management.dns.DnsZone.srvRecordSets()
  name: srvRecordSets()
  nameWithType: DnsZone.srvRecordSets()
  returns:
    description: <p>entry point to manage record sets in this zone containing SRV (service) records </p>
    type: <xref href="com.microsoft.azure.management.dns.SrvRecordSets?alt=com.microsoft.azure.management.dns.SrvRecordSets&text=SrvRecordSets" data-throw-if-not-resolved="False"/>
  syntax: public SrvRecordSets srvRecordSets()
  uid: com.microsoft.azure.management.dns.DnsZone.srvRecordSets()
- fullName: com.microsoft.azure.management.dns.DnsZone.txtRecordSets()
  name: txtRecordSets()
  nameWithType: DnsZone.txtRecordSets()
  returns:
    description: <p>entry point to manage record sets in this zone containing TXT (text) records </p>
    type: <xref href="com.microsoft.azure.management.dns.TxtRecordSets?alt=com.microsoft.azure.management.dns.TxtRecordSets&text=TxtRecordSets" data-throw-if-not-resolved="False"/>
  syntax: public TxtRecordSets txtRecordSets()
  uid: com.microsoft.azure.management.dns.DnsZone.txtRecordSets()
nameWithType: DnsZone
syntax: public interface DnsZone extends GroupableResource<DnsZoneManager, ZoneInner>,Refreshable<DnsZone>,Updatable<DnsZone.Update>
type: interface
uid: com.microsoft.azure.management.dns.DnsZone
fullName: com.microsoft.azure.management.dns.DnsZone
name: DnsZone
package: com.microsoft.azure.management.dns
summary: <p>An immutable client-side representation of an Azure DNS Zone. </p>
metadata: {}
