### YamlMime:JavaType
constructors:
- fullName: com.microsoft.azure.elasticdb.shard.mapper.BaseShardMapper.BaseShardMapper(ShardMapManager shardMapManager, ShardMap sm)
  name: BaseShardMapper(ShardMapManager shardMapManager, ShardMap sm)
  nameWithType: BaseShardMapper.BaseShardMapper(ShardMapManager shardMapManager, ShardMap sm)
  parameters:
  - description: <p>Reference to ShardMapManager. </p>
    name: shardMapManager
    type: <xref href="com.microsoft.azure.elasticdb.shard.mapmanager.ShardMapManager?alt=com.microsoft.azure.elasticdb.shard.mapmanager.ShardMapManager&text=ShardMapManager" data-throw-if-not-resolved="False"/>
  - description: <p>Containing shard map. </p>
    name: sm
    type: <xref href="com.microsoft.azure.elasticdb.shard.map.ShardMap?alt=com.microsoft.azure.elasticdb.shard.map.ShardMap&text=ShardMap" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Base shard mapper, which is just a holder of some fields.</p>

    <p></p>
  syntax: protected BaseShardMapper(ShardMapManager shardMapManager, ShardMap sm)
  uid: com.microsoft.azure.elasticdb.shard.mapper.BaseShardMapper.BaseShardMapper(ShardMapManager,ShardMap)
fields:
- field:
    type: <xref href="final+UUID?alt=final+UUID&text=final+UUID" data-throw-if-not-resolved="False"/>
  fullName: com.microsoft.azure.elasticdb.shard.mapper.BaseShardMapper.DEFAULT_OWNER
  name: DEFAULT_OWNER
  nameWithType: BaseShardMapper.DEFAULT_OWNER
  syntax: protected static final UUID DEFAULT_OWNER= UUID.randomUUID()
  uid: com.microsoft.azure.elasticdb.shard.mapper.BaseShardMapper.DEFAULT_OWNER
- field:
    type: <xref href="com.microsoft.azure.elasticdb.shard.map.ShardMap?alt=com.microsoft.azure.elasticdb.shard.map.ShardMap&text=ShardMap" data-throw-if-not-resolved="False"/>
  fullName: com.microsoft.azure.elasticdb.shard.mapper.BaseShardMapper.shardMap
  name: shardMap
  nameWithType: BaseShardMapper.shardMap
  summary: <p>Containing shard map. </p>
  syntax: protected ShardMap shardMap
  uid: com.microsoft.azure.elasticdb.shard.mapper.BaseShardMapper.shardMap
- field:
    type: <xref href="com.microsoft.azure.elasticdb.shard.mapmanager.ShardMapManager?alt=com.microsoft.azure.elasticdb.shard.mapmanager.ShardMapManager&text=ShardMapManager" data-throw-if-not-resolved="False"/>
  fullName: com.microsoft.azure.elasticdb.shard.mapper.BaseShardMapper.shardMapManager
  name: shardMapManager
  nameWithType: BaseShardMapper.shardMapManager
  summary: <p>Reference to ShardMapManager. </p>
  syntax: protected ShardMapManager shardMapManager
  uid: com.microsoft.azure.elasticdb.shard.mapper.BaseShardMapper.shardMapManager
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
methods:
- fullName: com.microsoft.azure.elasticdb.shard.mapper.BaseShardMapper.add(MappingT mapping, ActionGeneric3Param<ShardMapManager, ShardMap, StoreMapping, MappingT> constructMapping)
  name: add(MappingT mapping, ActionGeneric3Param<ShardMapManager, ShardMap, StoreMapping, MappingT> constructMapping)
  nameWithType: BaseShardMapper.add(MappingT mapping, ActionGeneric3Param<ShardMapManager, ShardMap, StoreMapping, MappingT> constructMapping)
  parameters:
  - description: <p>Mapping being added. </p>
    name: mapping
    type: <xref href="MappingT?alt=MappingT&text=MappingT" data-throw-if-not-resolved="False"/>
  - description: <p>Delegate to construct a mapping object. </p>
    name: constructMapping
    type: ActionGeneric3Param&lt;<xref href="com.microsoft.azure.elasticdb.shard.mapmanager.ShardMapManager?alt=com.microsoft.azure.elasticdb.shard.mapmanager.ShardMapManager&text=ShardMapManager" data-throw-if-not-resolved="False"/>, <xref href="com.microsoft.azure.elasticdb.shard.map.ShardMap?alt=com.microsoft.azure.elasticdb.shard.map.ShardMap&text=ShardMap" data-throw-if-not-resolved="False"/>, <xref href="com.microsoft.azure.elasticdb.shard.store.StoreMapping?alt=com.microsoft.azure.elasticdb.shard.store.StoreMapping&text=StoreMapping" data-throw-if-not-resolved="False"/>, MappingT&gt;
  returns:
    description: <p>The added mapping object. </p>
    type: final&lt;MappingT extends <xref href="com.microsoft.azure.elasticdb.shard.base.IShardProvider?alt=com.microsoft.azure.elasticdb.shard.base.IShardProvider&text=IShardProvider" data-throw-if-not-resolved="False"/> &<xref href="com.microsoft.azure.elasticdb.shard.base.IMappingInfoProvider?alt=com.microsoft.azure.elasticdb.shard.base.IMappingInfoProvider&text=IMappingInfoProvider" data-throw-if-not-resolved="False"/>&gt; MappingT
  summary: >-
    <p>Adds a mapping to shard map. </p>

    <p></p>
  syntax: protected final<MappingT extends IShardProvider &IMappingInfoProvider> MappingT add(MappingT mapping, ActionGeneric3Param<ShardMapManager, ShardMap, StoreMapping, MappingT> constructMapping)
  uid: com.microsoft.azure.elasticdb.shard.mapper.BaseShardMapper.add(MappingT,ActionGeneric3Param<ShardMapManager, ShardMap, StoreMapping, MappingT>)
- fullName: com.microsoft.azure.elasticdb.shard.mapper.BaseShardMapper.ensureMappingBelongsToShardMap(MappingT mapping, String operationName, String parameterName)
  name: ensureMappingBelongsToShardMap(MappingT mapping, String operationName, String parameterName)
  nameWithType: BaseShardMapper.ensureMappingBelongsToShardMap(MappingT mapping, String operationName, String parameterName)
  parameters:
  - description: <p>Mapping to be validated. </p>
    name: mapping
    type: <xref href="MappingT?alt=MappingT&text=MappingT" data-throw-if-not-resolved="False"/>
  - description: <p>Operation being performed. </p>
    name: operationName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>Parameter name for mapping parameter. </p>
    name: parameterName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    type: final&lt;MappingT extends <xref href="com.microsoft.azure.elasticdb.shard.base.IMappingInfoProvider?alt=com.microsoft.azure.elasticdb.shard.base.IMappingInfoProvider&text=IMappingInfoProvider" data-throw-if-not-resolved="False"/>&gt; void
  summary: >-
    <p>Validates the input parameters and ensures that the mapping parameter belong to this shard map.</p>

    <p></p>
  syntax: protected final<MappingT extends IMappingInfoProvider> void ensureMappingBelongsToShardMap(MappingT mapping, String operationName, String parameterName)
  uid: com.microsoft.azure.elasticdb.shard.mapper.BaseShardMapper.ensureMappingBelongsToShardMap(MappingT,String,String)
- fullName: com.microsoft.azure.elasticdb.shard.mapper.BaseShardMapper.getLockOwnerForMapping(MappingT mapping, ShardManagementErrorCategory errorCategory)
  name: getLockOwnerForMapping(MappingT mapping, ShardManagementErrorCategory errorCategory)
  nameWithType: BaseShardMapper.getLockOwnerForMapping(MappingT mapping, ShardManagementErrorCategory errorCategory)
  parameters:
  - description: <p>The mapping </p>
    name: mapping
    type: <xref href="MappingT?alt=MappingT&text=MappingT" data-throw-if-not-resolved="False"/>
  - description: <p>Error category to use for the store operation </p>
    name: errorCategory
    type: <xref href="com.microsoft.azure.elasticdb.shard.mapmanager.ShardManagementErrorCategory?alt=com.microsoft.azure.elasticdb.shard.mapmanager.ShardManagementErrorCategory&text=ShardManagementErrorCategory" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>Lock owner for the mapping. </p>
    type: final&lt;MappingT extends <xref href="com.microsoft.azure.elasticdb.shard.base.IShardProvider?alt=com.microsoft.azure.elasticdb.shard.base.IShardProvider&text=IShardProvider" data-throw-if-not-resolved="False"/> &<xref href="com.microsoft.azure.elasticdb.shard.base.IMappingInfoProvider?alt=com.microsoft.azure.elasticdb.shard.base.IMappingInfoProvider&text=IMappingInfoProvider" data-throw-if-not-resolved="False"/>&gt; UUID
  summary: >-
    <p>Gets the lock owner of a mapping.</p>

    <p></p>
  syntax: public final<MappingT extends IShardProvider &IMappingInfoProvider> UUID getLockOwnerForMapping(MappingT mapping, ShardManagementErrorCategory errorCategory)
  uid: com.microsoft.azure.elasticdb.shard.mapper.BaseShardMapper.getLockOwnerForMapping(MappingT,ShardManagementErrorCategory)
- fullName: com.microsoft.azure.elasticdb.shard.mapper.BaseShardMapper.getMappingsForRange(Range range, Shard shard, LookupOptions lookupOptions, ActionGeneric3Param<ShardMapManager, ShardMap, StoreMapping, MappingT> constructMapping, ShardManagementErrorCategory errorCategory, String mappingType)
  name: getMappingsForRange(Range range, Shard shard, LookupOptions lookupOptions, ActionGeneric3Param<ShardMapManager, ShardMap, StoreMapping, MappingT> constructMapping, ShardManagementErrorCategory errorCategory, String mappingType)
  nameWithType: BaseShardMapper.getMappingsForRange(Range range, Shard shard, LookupOptions lookupOptions, ActionGeneric3Param<ShardMapManager, ShardMap, StoreMapping, MappingT> constructMapping, ShardManagementErrorCategory errorCategory, String mappingType)
  parameters:
  - description: <p>Optional range value, if null, we cover everything. </p>
    name: range
    type: <xref href="com.microsoft.azure.elasticdb.shard.base.Range?alt=com.microsoft.azure.elasticdb.shard.base.Range&text=Range" data-throw-if-not-resolved="False"/>
  - description: <p>Optional shard parameter, if null, we cover all shards. </p>
    name: shard
    type: <xref href="com.microsoft.azure.elasticdb.shard.base.Shard?alt=com.microsoft.azure.elasticdb.shard.base.Shard&text=Shard" data-throw-if-not-resolved="False"/>
  - description: <p>Whether to use cache and/or storage for lookups. </p>
    name: lookupOptions
    type: <xref href="com.microsoft.azure.elasticdb.shard.base.LookupOptions?alt=com.microsoft.azure.elasticdb.shard.base.LookupOptions&text=LookupOptions" data-throw-if-not-resolved="False"/>
  - description: <p>Delegate to construct a mapping object. </p>
    name: constructMapping
    type: ActionGeneric3Param&lt;<xref href="com.microsoft.azure.elasticdb.shard.mapmanager.ShardMapManager?alt=com.microsoft.azure.elasticdb.shard.mapmanager.ShardMapManager&text=ShardMapManager" data-throw-if-not-resolved="False"/>, <xref href="com.microsoft.azure.elasticdb.shard.map.ShardMap?alt=com.microsoft.azure.elasticdb.shard.map.ShardMap&text=ShardMap" data-throw-if-not-resolved="False"/>, <xref href="com.microsoft.azure.elasticdb.shard.store.StoreMapping?alt=com.microsoft.azure.elasticdb.shard.store.StoreMapping&text=StoreMapping" data-throw-if-not-resolved="False"/>, MappingT&gt;
  - description: <p>Category under which errors will be posted. </p>
    name: errorCategory
    type: <xref href="com.microsoft.azure.elasticdb.shard.mapmanager.ShardManagementErrorCategory?alt=com.microsoft.azure.elasticdb.shard.mapmanager.ShardManagementErrorCategory&text=ShardManagementErrorCategory" data-throw-if-not-resolved="False"/>
  - description: <p>Name of mapping type. </p>
    name: mappingType
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>Read-only collection of mappings that overlap with given range. </p>
    type: <xref href="final%3CMappingT%3E+List%3CMappingT%3E?alt=final%3CMappingT%3E+List%3CMappingT%3E&text=final%3CMappingT%3E+List%3CMappingT%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets all the mappings that exist within given range.</p>

    <p></p>
  syntax: protected final<MappingT> List<MappingT> getMappingsForRange(Range range, Shard shard, LookupOptions lookupOptions, ActionGeneric3Param<ShardMapManager, ShardMap, StoreMapping, MappingT> constructMapping, ShardManagementErrorCategory errorCategory, String mappingType)
  uid: com.microsoft.azure.elasticdb.shard.mapper.BaseShardMapper.getMappingsForRange(Range,Shard,LookupOptions,ActionGeneric3Param<ShardMapManager, ShardMap, StoreMapping, MappingT>,ShardManagementErrorCategory,String)
- fullName: com.microsoft.azure.elasticdb.shard.mapper.BaseShardMapper.getShardMap()
  name: getShardMap()
  nameWithType: BaseShardMapper.getShardMap()
  returns:
    type: final <xref href="com.microsoft.azure.elasticdb.shard.map.ShardMap?alt=com.microsoft.azure.elasticdb.shard.map.ShardMap&text=ShardMap" data-throw-if-not-resolved="False"/>
  syntax: protected final ShardMap getShardMap()
  uid: com.microsoft.azure.elasticdb.shard.mapper.BaseShardMapper.getShardMap()
- fullName: com.microsoft.azure.elasticdb.shard.mapper.BaseShardMapper.getShardMapManager()
  name: getShardMapManager()
  nameWithType: BaseShardMapper.getShardMapManager()
  returns:
    type: final <xref href="com.microsoft.azure.elasticdb.shard.mapmanager.ShardMapManager?alt=com.microsoft.azure.elasticdb.shard.mapmanager.ShardMapManager&text=ShardMapManager" data-throw-if-not-resolved="False"/>
  syntax: protected final ShardMapManager getShardMapManager()
  uid: com.microsoft.azure.elasticdb.shard.mapper.BaseShardMapper.getShardMapManager()
- fullName: com.microsoft.azure.elasticdb.shard.mapper.BaseShardMapper.lockOrUnlockMappings(MappingT mapping, UUID lockOwnerId, LockOwnerIdOpType lockOwnerIdOpType, ShardManagementErrorCategory errorCategory)
  name: lockOrUnlockMappings(MappingT mapping, UUID lockOwnerId, LockOwnerIdOpType lockOwnerIdOpType, ShardManagementErrorCategory errorCategory)
  nameWithType: BaseShardMapper.lockOrUnlockMappings(MappingT mapping, UUID lockOwnerId, LockOwnerIdOpType lockOwnerIdOpType, ShardManagementErrorCategory errorCategory)
  parameters:
  - description: <p>Optional mapping </p>
    name: mapping
    type: <xref href="MappingT?alt=MappingT&text=MappingT" data-throw-if-not-resolved="False"/>
  - description: <p>The lock owner id </p>
    name: lockOwnerId
    type: <xref href="UUID?alt=UUID&text=UUID" data-throw-if-not-resolved="False"/>
  - description: <p>Operation to perform on this mapping with the given lockOwnerId </p>
    name: lockOwnerIdOpType
    type: <xref href="com.microsoft.azure.elasticdb.shard.base.LockOwnerIdOpType?alt=com.microsoft.azure.elasticdb.shard.base.LockOwnerIdOpType&text=LockOwnerIdOpType" data-throw-if-not-resolved="False"/>
  - description: <p>Error category to use for the store operation </p>
    name: errorCategory
    type: <xref href="com.microsoft.azure.elasticdb.shard.mapmanager.ShardManagementErrorCategory?alt=com.microsoft.azure.elasticdb.shard.mapmanager.ShardManagementErrorCategory&text=ShardManagementErrorCategory" data-throw-if-not-resolved="False"/>
  returns:
    type: final&lt;MappingT extends <xref href="com.microsoft.azure.elasticdb.shard.base.IShardProvider?alt=com.microsoft.azure.elasticdb.shard.base.IShardProvider&text=IShardProvider" data-throw-if-not-resolved="False"/> &<xref href="com.microsoft.azure.elasticdb.shard.base.IMappingInfoProvider?alt=com.microsoft.azure.elasticdb.shard.base.IMappingInfoProvider&text=IMappingInfoProvider" data-throw-if-not-resolved="False"/>&gt; void
  summary: >-
    <p>Locks or unlocks a given mapping or all mappings.</p>

    <p></p>
  syntax: public final<MappingT extends IShardProvider &IMappingInfoProvider> void lockOrUnlockMappings(MappingT mapping, UUID lockOwnerId, LockOwnerIdOpType lockOwnerIdOpType, ShardManagementErrorCategory errorCategory)
  uid: com.microsoft.azure.elasticdb.shard.mapper.BaseShardMapper.lockOrUnlockMappings(MappingT,UUID,LockOwnerIdOpType,ShardManagementErrorCategory)
- fullName: com.microsoft.azure.elasticdb.shard.mapper.BaseShardMapper.lookup(KeyT key, LookupOptions lookupOptions, ActionGeneric3Param<ShardMapManager, ShardMap, StoreMapping, MappingT> constructMapping, ShardManagementErrorCategory errorCategory)
  name: lookup(KeyT key, LookupOptions lookupOptions, ActionGeneric3Param<ShardMapManager, ShardMap, StoreMapping, MappingT> constructMapping, ShardManagementErrorCategory errorCategory)
  nameWithType: BaseShardMapper.lookup(KeyT key, LookupOptions lookupOptions, ActionGeneric3Param<ShardMapManager, ShardMap, StoreMapping, MappingT> constructMapping, ShardManagementErrorCategory errorCategory)
  parameters:
  - description: <p>Input key value. </p>
    name: key
    type: <xref href="KeyT?alt=KeyT&text=KeyT" data-throw-if-not-resolved="False"/>
  - description: <p>Whether to use cache and/or storage for lookups. </p>
    name: lookupOptions
    type: <xref href="com.microsoft.azure.elasticdb.shard.base.LookupOptions?alt=com.microsoft.azure.elasticdb.shard.base.LookupOptions&text=LookupOptions" data-throw-if-not-resolved="False"/>
  - description: <p>Delegate to construct a mapping object. </p>
    name: constructMapping
    type: ActionGeneric3Param&lt;<xref href="com.microsoft.azure.elasticdb.shard.mapmanager.ShardMapManager?alt=com.microsoft.azure.elasticdb.shard.mapmanager.ShardMapManager&text=ShardMapManager" data-throw-if-not-resolved="False"/>, <xref href="com.microsoft.azure.elasticdb.shard.map.ShardMap?alt=com.microsoft.azure.elasticdb.shard.map.ShardMap&text=ShardMap" data-throw-if-not-resolved="False"/>, <xref href="com.microsoft.azure.elasticdb.shard.store.StoreMapping?alt=com.microsoft.azure.elasticdb.shard.store.StoreMapping&text=StoreMapping" data-throw-if-not-resolved="False"/>, MappingT&gt;
  - description: <p>Category under which errors must be thrown. </p>
    name: errorCategory
    type: <xref href="com.microsoft.azure.elasticdb.shard.mapmanager.ShardManagementErrorCategory?alt=com.microsoft.azure.elasticdb.shard.mapmanager.ShardManagementErrorCategory&text=ShardManagementErrorCategory" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>Mapping that contains the key value. </p>
    type: final&lt;MappingT extends <xref href="com.microsoft.azure.elasticdb.shard.base.IShardProvider?alt=com.microsoft.azure.elasticdb.shard.base.IShardProvider&text=IShardProvider" data-throw-if-not-resolved="False"/>, KeyT&gt; MappingT
  summary: >-
    <p>Looks up the key value and returns the corresponding mapping. </p>

    <p></p>
  syntax: protected final<MappingT extends IShardProvider, KeyT> MappingT lookup(KeyT key, LookupOptions lookupOptions, ActionGeneric3Param<ShardMapManager, ShardMap, StoreMapping, MappingT> constructMapping, ShardManagementErrorCategory errorCategory)
  uid: com.microsoft.azure.elasticdb.shard.mapper.BaseShardMapper.lookup(KeyT,LookupOptions,ActionGeneric3Param<ShardMapManager, ShardMap, StoreMapping, MappingT>,ShardManagementErrorCategory)
- fullName: com.microsoft.azure.elasticdb.shard.mapper.BaseShardMapper.openConnectionForKey(KeyT key, ActionGeneric3Param<ShardMapManager, ShardMap, StoreMapping, MappingT> constructMapping, ShardManagementErrorCategory errorCategory, String connectionString)
  name: openConnectionForKey(KeyT key, ActionGeneric3Param<ShardMapManager, ShardMap, StoreMapping, MappingT> constructMapping, ShardManagementErrorCategory errorCategory, String connectionString)
  nameWithType: BaseShardMapper.openConnectionForKey(KeyT key, ActionGeneric3Param<ShardMapManager, ShardMap, StoreMapping, MappingT> constructMapping, ShardManagementErrorCategory errorCategory, String connectionString)
  parameters:
  - description: <p>Input key value. </p>
    name: key
    type: <xref href="KeyT?alt=KeyT&text=KeyT" data-throw-if-not-resolved="False"/>
  - description: <p>Delegate to construct a mapping object. </p>
    name: constructMapping
    type: ActionGeneric3Param&lt;<xref href="com.microsoft.azure.elasticdb.shard.mapmanager.ShardMapManager?alt=com.microsoft.azure.elasticdb.shard.mapmanager.ShardMapManager&text=ShardMapManager" data-throw-if-not-resolved="False"/>, <xref href="com.microsoft.azure.elasticdb.shard.map.ShardMap?alt=com.microsoft.azure.elasticdb.shard.map.ShardMap&text=ShardMap" data-throw-if-not-resolved="False"/>, <xref href="com.microsoft.azure.elasticdb.shard.store.StoreMapping?alt=com.microsoft.azure.elasticdb.shard.store.StoreMapping&text=StoreMapping" data-throw-if-not-resolved="False"/>, MappingT&gt;
  - description: <p>Error category. </p>
    name: errorCategory
    type: <xref href="com.microsoft.azure.elasticdb.shard.mapmanager.ShardManagementErrorCategory?alt=com.microsoft.azure.elasticdb.shard.mapmanager.ShardManagementErrorCategory&text=ShardManagementErrorCategory" data-throw-if-not-resolved="False"/>
  - description: <p>Connection string with credential information, the DataSource and Database are obtained from the results of the lookup operation for key. </p>
    name: connectionString
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>An opened SqlConnection. </p>
    type: final&lt;MappingT extends <xref href="com.microsoft.azure.elasticdb.shard.base.IShardProvider?alt=com.microsoft.azure.elasticdb.shard.base.IShardProvider&text=IShardProvider" data-throw-if-not-resolved="False"/>, KeyT&gt; Connection
  summary: >-
    <p>Given a key value, obtains a SqlConnection to the shard in the mapping that contains the key value. </p>

    <p></p>
  syntax: protected final<MappingT extends IShardProvider, KeyT> Connection openConnectionForKey(KeyT key, ActionGeneric3Param<ShardMapManager, ShardMap, StoreMapping, MappingT> constructMapping, ShardManagementErrorCategory errorCategory, String connectionString)
  uid: com.microsoft.azure.elasticdb.shard.mapper.BaseShardMapper.openConnectionForKey(KeyT,ActionGeneric3Param<ShardMapManager, ShardMap, StoreMapping, MappingT>,ShardManagementErrorCategory,String)
- fullName: com.microsoft.azure.elasticdb.shard.mapper.BaseShardMapper.openConnectionForKey(KeyT key, ActionGeneric3Param<ShardMapManager, ShardMap, StoreMapping, MappingT> constructMapping, ShardManagementErrorCategory errorCategory, String connectionString, ConnectionOptions options)
  name: openConnectionForKey(KeyT key, ActionGeneric3Param<ShardMapManager, ShardMap, StoreMapping, MappingT> constructMapping, ShardManagementErrorCategory errorCategory, String connectionString, ConnectionOptions options)
  nameWithType: BaseShardMapper.openConnectionForKey(KeyT key, ActionGeneric3Param<ShardMapManager, ShardMap, StoreMapping, MappingT> constructMapping, ShardManagementErrorCategory errorCategory, String connectionString, ConnectionOptions options)
  parameters:
  - description: <p>Input key value. </p>
    name: key
    type: <xref href="KeyT?alt=KeyT&text=KeyT" data-throw-if-not-resolved="False"/>
  - description: <p>Delegate to construct a mapping object. </p>
    name: constructMapping
    type: ActionGeneric3Param&lt;<xref href="com.microsoft.azure.elasticdb.shard.mapmanager.ShardMapManager?alt=com.microsoft.azure.elasticdb.shard.mapmanager.ShardMapManager&text=ShardMapManager" data-throw-if-not-resolved="False"/>, <xref href="com.microsoft.azure.elasticdb.shard.map.ShardMap?alt=com.microsoft.azure.elasticdb.shard.map.ShardMap&text=ShardMap" data-throw-if-not-resolved="False"/>, <xref href="com.microsoft.azure.elasticdb.shard.store.StoreMapping?alt=com.microsoft.azure.elasticdb.shard.store.StoreMapping&text=StoreMapping" data-throw-if-not-resolved="False"/>, MappingT&gt;
  - description: <p>Error category. </p>
    name: errorCategory
    type: <xref href="com.microsoft.azure.elasticdb.shard.mapmanager.ShardManagementErrorCategory?alt=com.microsoft.azure.elasticdb.shard.mapmanager.ShardManagementErrorCategory&text=ShardManagementErrorCategory" data-throw-if-not-resolved="False"/>
  - description: <p>Connection string with credential information, the DataSource and Database are obtained from the results of the lookup operation for key. </p>
    name: connectionString
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>Options for validation operations to perform on opened connection. </p>
    name: options
    type: <xref href="com.microsoft.azure.elasticdb.shard.mapper.ConnectionOptions?alt=com.microsoft.azure.elasticdb.shard.mapper.ConnectionOptions&text=ConnectionOptions" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>An opened SqlConnection. </p>
    type: final&lt;MappingT extends <xref href="com.microsoft.azure.elasticdb.shard.base.IShardProvider?alt=com.microsoft.azure.elasticdb.shard.base.IShardProvider&text=IShardProvider" data-throw-if-not-resolved="False"/>, KeyT&gt; Connection
  summary: >-
    <p>Given a key value, obtains a SqlConnection to the shard in the mapping that contains the key value. </p>

    <p></p>
  syntax: protected final<MappingT extends IShardProvider, KeyT> Connection openConnectionForKey(KeyT key, ActionGeneric3Param<ShardMapManager, ShardMap, StoreMapping, MappingT> constructMapping, ShardManagementErrorCategory errorCategory, String connectionString, ConnectionOptions options)
  uid: com.microsoft.azure.elasticdb.shard.mapper.BaseShardMapper.openConnectionForKey(KeyT,ActionGeneric3Param<ShardMapManager, ShardMap, StoreMapping, MappingT>,ShardManagementErrorCategory,String,ConnectionOptions)
- fullName: com.microsoft.azure.elasticdb.shard.mapper.BaseShardMapper.openConnectionForKeyAsync(KeyT key, ActionGeneric3Param<ShardMapManager, ShardMap, StoreMapping, MappingT> constructMapping, ShardManagementErrorCategory errorCategory, String connectionString)
  name: openConnectionForKeyAsync(KeyT key, ActionGeneric3Param<ShardMapManager, ShardMap, StoreMapping, MappingT> constructMapping, ShardManagementErrorCategory errorCategory, String connectionString)
  nameWithType: BaseShardMapper.openConnectionForKeyAsync(KeyT key, ActionGeneric3Param<ShardMapManager, ShardMap, StoreMapping, MappingT> constructMapping, ShardManagementErrorCategory errorCategory, String connectionString)
  parameters:
  - name: key
    type: <xref href="KeyT?alt=KeyT&text=KeyT" data-throw-if-not-resolved="False"/>
  - name: constructMapping
    type: ActionGeneric3Param&lt;<xref href="com.microsoft.azure.elasticdb.shard.mapmanager.ShardMapManager?alt=com.microsoft.azure.elasticdb.shard.mapmanager.ShardMapManager&text=ShardMapManager" data-throw-if-not-resolved="False"/>, <xref href="com.microsoft.azure.elasticdb.shard.map.ShardMap?alt=com.microsoft.azure.elasticdb.shard.map.ShardMap&text=ShardMap" data-throw-if-not-resolved="False"/>, <xref href="com.microsoft.azure.elasticdb.shard.store.StoreMapping?alt=com.microsoft.azure.elasticdb.shard.store.StoreMapping&text=StoreMapping" data-throw-if-not-resolved="False"/>, MappingT&gt;
  - name: errorCategory
    type: <xref href="com.microsoft.azure.elasticdb.shard.mapmanager.ShardManagementErrorCategory?alt=com.microsoft.azure.elasticdb.shard.mapmanager.ShardManagementErrorCategory&text=ShardManagementErrorCategory" data-throw-if-not-resolved="False"/>
  - name: connectionString
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    type: final&lt;MappingT extends <xref href="com.microsoft.azure.elasticdb.shard.base.IShardProvider?alt=com.microsoft.azure.elasticdb.shard.base.IShardProvider&text=IShardProvider" data-throw-if-not-resolved="False"/>, KeyT&gt; Callable&lt;Connection&gt;
  syntax: protected final<MappingT extends IShardProvider, KeyT> Callable<Connection> openConnectionForKeyAsync(KeyT key, ActionGeneric3Param<ShardMapManager, ShardMap, StoreMapping, MappingT> constructMapping, ShardManagementErrorCategory errorCategory, String connectionString)
  uid: com.microsoft.azure.elasticdb.shard.mapper.BaseShardMapper.openConnectionForKeyAsync(KeyT,ActionGeneric3Param<ShardMapManager, ShardMap, StoreMapping, MappingT>,ShardManagementErrorCategory,String)
- fullName: com.microsoft.azure.elasticdb.shard.mapper.BaseShardMapper.openConnectionForKeyAsync(KeyT key, ActionGeneric3Param<ShardMapManager, ShardMap, StoreMapping, MappingT> constructMapping, ShardManagementErrorCategory errorCategory, String connectionString, ConnectionOptions options)
  name: openConnectionForKeyAsync(KeyT key, ActionGeneric3Param<ShardMapManager, ShardMap, StoreMapping, MappingT> constructMapping, ShardManagementErrorCategory errorCategory, String connectionString, ConnectionOptions options)
  nameWithType: BaseShardMapper.openConnectionForKeyAsync(KeyT key, ActionGeneric3Param<ShardMapManager, ShardMap, StoreMapping, MappingT> constructMapping, ShardManagementErrorCategory errorCategory, String connectionString, ConnectionOptions options)
  parameters:
  - description: <p>Input key value. </p>
    name: key
    type: <xref href="KeyT?alt=KeyT&text=KeyT" data-throw-if-not-resolved="False"/>
  - description: <p>Delegate to construct a mapping object. </p>
    name: constructMapping
    type: ActionGeneric3Param&lt;<xref href="com.microsoft.azure.elasticdb.shard.mapmanager.ShardMapManager?alt=com.microsoft.azure.elasticdb.shard.mapmanager.ShardMapManager&text=ShardMapManager" data-throw-if-not-resolved="False"/>, <xref href="com.microsoft.azure.elasticdb.shard.map.ShardMap?alt=com.microsoft.azure.elasticdb.shard.map.ShardMap&text=ShardMap" data-throw-if-not-resolved="False"/>, <xref href="com.microsoft.azure.elasticdb.shard.store.StoreMapping?alt=com.microsoft.azure.elasticdb.shard.store.StoreMapping&text=StoreMapping" data-throw-if-not-resolved="False"/>, MappingT&gt;
  - description: <p>Error category. </p>
    name: errorCategory
    type: <xref href="com.microsoft.azure.elasticdb.shard.mapmanager.ShardManagementErrorCategory?alt=com.microsoft.azure.elasticdb.shard.mapmanager.ShardManagementErrorCategory&text=ShardManagementErrorCategory" data-throw-if-not-resolved="False"/>
  - description: <p>Connection string with credential information, the DataSource and Database are obtained from the results of the lookup operation for key. </p>
    name: connectionString
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>Options for validation operations to perform on opened connection. </p>
    name: options
    type: <xref href="com.microsoft.azure.elasticdb.shard.mapper.ConnectionOptions?alt=com.microsoft.azure.elasticdb.shard.mapper.ConnectionOptions&text=ConnectionOptions" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>A task encapsulating an opened SqlConnection as the result. </p>
    type: final&lt;MappingT extends <xref href="com.microsoft.azure.elasticdb.shard.base.IShardProvider?alt=com.microsoft.azure.elasticdb.shard.base.IShardProvider&text=IShardProvider" data-throw-if-not-resolved="False"/>, KeyT&gt; Callable&lt;Connection&gt;
  summary: >-
    <p>Given a key value, asynchronously obtains a SqlConnection to the shard in the mapping that contains the key value. </p>

    <p></p>
  syntax: protected final<MappingT extends IShardProvider, KeyT> Callable<Connection> openConnectionForKeyAsync(KeyT key, ActionGeneric3Param<ShardMapManager, ShardMap, StoreMapping, MappingT> constructMapping, ShardManagementErrorCategory errorCategory, String connectionString, ConnectionOptions options)
  uid: com.microsoft.azure.elasticdb.shard.mapper.BaseShardMapper.openConnectionForKeyAsync(KeyT,ActionGeneric3Param<ShardMapManager, ShardMap, StoreMapping, MappingT>,ShardManagementErrorCategory,String,ConnectionOptions)
- fullName: com.microsoft.azure.elasticdb.shard.mapper.BaseShardMapper.remove(MappingT mapping, ActionGeneric3Param<ShardMapManager, ShardMap, StoreMapping, MappingT> constructMapping, UUID lockOwnerId)
  name: remove(MappingT mapping, ActionGeneric3Param<ShardMapManager, ShardMap, StoreMapping, MappingT> constructMapping, UUID lockOwnerId)
  nameWithType: BaseShardMapper.remove(MappingT mapping, ActionGeneric3Param<ShardMapManager, ShardMap, StoreMapping, MappingT> constructMapping, UUID lockOwnerId)
  parameters:
  - description: <p>Mapping being removed. </p>
    name: mapping
    type: <xref href="MappingT?alt=MappingT&text=MappingT" data-throw-if-not-resolved="False"/>
  - description: <p>Delegate to construct a mapping object. </p>
    name: constructMapping
    type: ActionGeneric3Param&lt;<xref href="com.microsoft.azure.elasticdb.shard.mapmanager.ShardMapManager?alt=com.microsoft.azure.elasticdb.shard.mapmanager.ShardMapManager&text=ShardMapManager" data-throw-if-not-resolved="False"/>, <xref href="com.microsoft.azure.elasticdb.shard.map.ShardMap?alt=com.microsoft.azure.elasticdb.shard.map.ShardMap&text=ShardMap" data-throw-if-not-resolved="False"/>, <xref href="com.microsoft.azure.elasticdb.shard.store.StoreMapping?alt=com.microsoft.azure.elasticdb.shard.store.StoreMapping&text=StoreMapping" data-throw-if-not-resolved="False"/>, MappingT&gt;
  - description: <p>Lock owner id of this mapping </p>
    name: lockOwnerId
    type: <xref href="UUID?alt=UUID&text=UUID" data-throw-if-not-resolved="False"/>
  returns:
    type: final&lt;MappingT extends <xref href="com.microsoft.azure.elasticdb.shard.base.IShardProvider?alt=com.microsoft.azure.elasticdb.shard.base.IShardProvider&text=IShardProvider" data-throw-if-not-resolved="False"/> &<xref href="com.microsoft.azure.elasticdb.shard.base.IMappingInfoProvider?alt=com.microsoft.azure.elasticdb.shard.base.IMappingInfoProvider&text=IMappingInfoProvider" data-throw-if-not-resolved="False"/>&gt; void
  summary: >-
    <p>Removes a mapping from shard map. </p>

    <p></p>
  syntax: protected final<MappingT extends IShardProvider &IMappingInfoProvider> void remove(MappingT mapping, ActionGeneric3Param<ShardMapManager, ShardMap, StoreMapping, MappingT> constructMapping, UUID lockOwnerId)
  uid: com.microsoft.azure.elasticdb.shard.mapper.BaseShardMapper.remove(MappingT,ActionGeneric3Param<ShardMapManager, ShardMap, StoreMapping, MappingT>,UUID)
- fullName: com.microsoft.azure.elasticdb.shard.mapper.BaseShardMapper.setStatus(MappingT mapping, StatusT status, Function<StatusT, StatusT> getStatus, Function<StatusT, UpdateT> createUpdate, ActionGeneric3Param<MappingT, UpdateT, UUID, MappingT> runUpdate)
  name: setStatus(MappingT mapping, StatusT status, Function<StatusT, StatusT> getStatus, Function<StatusT, UpdateT> createUpdate, ActionGeneric3Param<MappingT, UpdateT, UUID, MappingT> runUpdate)
  nameWithType: BaseShardMapper.setStatus(MappingT mapping, StatusT status, Function<StatusT, StatusT> getStatus, Function<StatusT, UpdateT> createUpdate, ActionGeneric3Param<MappingT, UpdateT, UUID, MappingT> runUpdate)
  parameters:
  - description: <p>Mapping being added. </p>
    name: mapping
    type: <xref href="MappingT?alt=MappingT&text=MappingT" data-throw-if-not-resolved="False"/>
  - description: <p>Status of <em>mapping</em> mapping being added. </p>
    name: status
    type: <xref href="StatusT?alt=StatusT&text=StatusT" data-throw-if-not-resolved="False"/>
  - description: <p>Delegate to construct new status from <em>status</em> input status. </p>
    name: getStatus
    type: <xref href="Function%3CStatusT%2C+StatusT%3E?alt=Function%3CStatusT%2C+StatusT%3E&text=Function%3CStatusT%2C+StatusT%3E" data-throw-if-not-resolved="False"/>
  - description: <p>Delegate to construct new update from new status returned by <em>getStatus</em> getStatus. </p>
    name: createUpdate
    type: <xref href="Function%3CStatusT%2C+UpdateT%3E?alt=Function%3CStatusT%2C+UpdateT%3E&text=Function%3CStatusT%2C+UpdateT%3E" data-throw-if-not-resolved="False"/>
  - description: <p>Delegate to perform update from the <em>mapping</em> input mapping and the update object returned by <em>getStatus</em> createUpdate . </p>
    name: runUpdate
    type: <xref href="ActionGeneric3Param%3CMappingT%2C+UpdateT%2C+UUID%2C+MappingT%3E?alt=ActionGeneric3Param%3CMappingT%2C+UpdateT%2C+UUID%2C+MappingT%3E&text=ActionGeneric3Param%3CMappingT%2C+UpdateT%2C+UUID%2C+MappingT%3E" data-throw-if-not-resolved="False"/>
  returns:
    type: <xref href="static%3CMappingT%2C+UpdateT%2C+StatusT%3E+MappingT?alt=static%3CMappingT%2C+UpdateT%2C+StatusT%3E+MappingT&text=static%3CMappingT%2C+UpdateT%2C+StatusT%3E+MappingT" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Sets the status of a shard mapping </p>

    <p></p>
  syntax: protected static static<MappingT, UpdateT, StatusT> MappingT setStatus(MappingT mapping, StatusT status, Function<StatusT, StatusT> getStatus, Function<StatusT, UpdateT> createUpdate, ActionGeneric3Param<MappingT, UpdateT, UUID, MappingT> runUpdate)
  uid: com.microsoft.azure.elasticdb.shard.mapper.BaseShardMapper.setStatus(MappingT,StatusT,Function<StatusT, StatusT>,Function<StatusT, UpdateT>,ActionGeneric3Param<MappingT, UpdateT, UUID, MappingT>)
- fullName: com.microsoft.azure.elasticdb.shard.mapper.BaseShardMapper.setStatus(MappingT mapping, StatusT status, Function<StatusT, StatusT> getStatus, Function<StatusT, UpdateT> createUpdate, ActionGeneric3Param<MappingT, UpdateT, UUID, MappingT> runUpdate, UUID lockOwnerId)
  name: setStatus(MappingT mapping, StatusT status, Function<StatusT, StatusT> getStatus, Function<StatusT, UpdateT> createUpdate, ActionGeneric3Param<MappingT, UpdateT, UUID, MappingT> runUpdate, UUID lockOwnerId)
  nameWithType: BaseShardMapper.setStatus(MappingT mapping, StatusT status, Function<StatusT, StatusT> getStatus, Function<StatusT, UpdateT> createUpdate, ActionGeneric3Param<MappingT, UpdateT, UUID, MappingT> runUpdate, UUID lockOwnerId)
  parameters:
  - description: <p>Mapping being added. </p>
    name: mapping
    type: <xref href="MappingT?alt=MappingT&text=MappingT" data-throw-if-not-resolved="False"/>
  - description: <p>Status of <em>mapping</em> mapping being added. </p>
    name: status
    type: <xref href="StatusT?alt=StatusT&text=StatusT" data-throw-if-not-resolved="False"/>
  - description: <p>Delegate to construct new status from <em>status</em> input status. </p>
    name: getStatus
    type: <xref href="Function%3CStatusT%2C+StatusT%3E?alt=Function%3CStatusT%2C+StatusT%3E&text=Function%3CStatusT%2C+StatusT%3E" data-throw-if-not-resolved="False"/>
  - description: <p>Delegate to construct new update from new status returned by <em>getStatus</em> getStatus. </p>
    name: createUpdate
    type: <xref href="Function%3CStatusT%2C+UpdateT%3E?alt=Function%3CStatusT%2C+UpdateT%3E&text=Function%3CStatusT%2C+UpdateT%3E" data-throw-if-not-resolved="False"/>
  - description: <p>Delegate to perform update from the <em>mapping</em> input mapping and the update object returned by <em>getStatus</em> createUpdate . </p>
    name: runUpdate
    type: <xref href="ActionGeneric3Param%3CMappingT%2C+UpdateT%2C+UUID%2C+MappingT%3E?alt=ActionGeneric3Param%3CMappingT%2C+UpdateT%2C+UUID%2C+MappingT%3E&text=ActionGeneric3Param%3CMappingT%2C+UpdateT%2C+UUID%2C+MappingT%3E" data-throw-if-not-resolved="False"/>
  - description: <p>Lock owner id of this mapping </p>
    name: lockOwnerId
    type: <xref href="UUID?alt=UUID&text=UUID" data-throw-if-not-resolved="False"/>
  returns:
    type: <xref href="static%3CMappingT%2C+UpdateT%2C+StatusT%3E+MappingT?alt=static%3CMappingT%2C+UpdateT%2C+StatusT%3E+MappingT&text=static%3CMappingT%2C+UpdateT%2C+StatusT%3E+MappingT" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Sets the status of a shard mapping </p>

    <p></p>
  syntax: protected static static<MappingT, UpdateT, StatusT> MappingT setStatus(MappingT mapping, StatusT status, Function<StatusT, StatusT> getStatus, Function<StatusT, UpdateT> createUpdate, ActionGeneric3Param<MappingT, UpdateT, UUID, MappingT> runUpdate, UUID lockOwnerId)
  uid: com.microsoft.azure.elasticdb.shard.mapper.BaseShardMapper.setStatus(MappingT,StatusT,Function<StatusT, StatusT>,Function<StatusT, UpdateT>,ActionGeneric3Param<MappingT, UpdateT, UUID, MappingT>,UUID)
- fullName: com.microsoft.azure.elasticdb.shard.mapper.BaseShardMapper.update(MappingT currentMapping, UpdateT update, ActionGeneric3Param<ShardMapManager, ShardMap, StoreMapping, MappingT> constructMapping, Function<StatusT, Integer> statusAsInt, Function<Integer, StatusT> intAsStatus)
  name: update(MappingT currentMapping, UpdateT update, ActionGeneric3Param<ShardMapManager, ShardMap, StoreMapping, MappingT> constructMapping, Function<StatusT, Integer> statusAsInt, Function<Integer, StatusT> intAsStatus)
  nameWithType: BaseShardMapper.update(MappingT currentMapping, UpdateT update, ActionGeneric3Param<ShardMapManager, ShardMap, StoreMapping, MappingT> constructMapping, Function<StatusT, Integer> statusAsInt, Function<Integer, StatusT> intAsStatus)
  parameters:
  - description: <p>Mapping being updated. </p>
    name: currentMapping
    type: <xref href="MappingT?alt=MappingT&text=MappingT" data-throw-if-not-resolved="False"/>
  - description: <p>Updated properties of the Shard. </p>
    name: update
    type: <xref href="UpdateT?alt=UpdateT&text=UpdateT" data-throw-if-not-resolved="False"/>
  - description: <p>Delegate to construct a mapping object. </p>
    name: constructMapping
    type: ActionGeneric3Param&lt;<xref href="com.microsoft.azure.elasticdb.shard.mapmanager.ShardMapManager?alt=com.microsoft.azure.elasticdb.shard.mapmanager.ShardMapManager&text=ShardMapManager" data-throw-if-not-resolved="False"/>, <xref href="com.microsoft.azure.elasticdb.shard.map.ShardMap?alt=com.microsoft.azure.elasticdb.shard.map.ShardMap&text=ShardMap" data-throw-if-not-resolved="False"/>, <xref href="com.microsoft.azure.elasticdb.shard.store.StoreMapping?alt=com.microsoft.azure.elasticdb.shard.store.StoreMapping&text=StoreMapping" data-throw-if-not-resolved="False"/>, MappingT&gt;
  - description: <p>Delegate to get the mapping status as an integer value. </p>
    name: statusAsInt
    type: <xref href="Function%3CStatusT%2C+Integer%3E?alt=Function%3CStatusT%2C+Integer%3E&text=Function%3CStatusT%2C+Integer%3E" data-throw-if-not-resolved="False"/>
  - description: <p>Delegate to get the mapping status from an integer value. </p>
    name: intAsStatus
    type: <xref href="Function%3CInteger%2C+StatusT%3E?alt=Function%3CInteger%2C+StatusT%3E&text=Function%3CInteger%2C+StatusT%3E" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>New instance of mapping with updated information. </p>
    type: final&lt;MappingT extends <xref href="com.microsoft.azure.elasticdb.shard.base.IShardProvider?alt=com.microsoft.azure.elasticdb.shard.base.IShardProvider&text=IShardProvider" data-throw-if-not-resolved="False"/> &<xref href="com.microsoft.azure.elasticdb.shard.base.IMappingInfoProvider?alt=com.microsoft.azure.elasticdb.shard.base.IMappingInfoProvider&text=IMappingInfoProvider" data-throw-if-not-resolved="False"/>, UpdateT extends <xref href="com.microsoft.azure.elasticdb.shard.base.IMappingUpdate?alt=com.microsoft.azure.elasticdb.shard.base.IMappingUpdate&text=IMappingUpdate" data-throw-if-not-resolved="False"/>&lt;StatusT&gt;, StatusT&gt; MappingT
  summary: >-
    <p>Allows for update to a mapping with the updates provided in the <em>update</em>  parameter.</p>

    <p></p>
  syntax: protected final<MappingT extends IShardProvider &IMappingInfoProvider, UpdateT extends IMappingUpdate<StatusT>, StatusT> MappingT update(MappingT currentMapping, UpdateT update, ActionGeneric3Param<ShardMapManager, ShardMap, StoreMapping, MappingT> constructMapping, Function<StatusT, Integer> statusAsInt, Function<Integer, StatusT> intAsStatus)
  uid: com.microsoft.azure.elasticdb.shard.mapper.BaseShardMapper.update(MappingT,UpdateT,ActionGeneric3Param<ShardMapManager, ShardMap, StoreMapping, MappingT>,Function<StatusT, Integer>,Function<Integer, StatusT>)
- fullName: com.microsoft.azure.elasticdb.shard.mapper.BaseShardMapper.update(MappingT currentMapping, UpdateT update, ActionGeneric3Param<ShardMapManager, ShardMap, StoreMapping, MappingT> constructMapping, Function<StatusT, Integer> statusAsInt, Function<Integer, StatusT> intAsStatus, UUID lockOwnerId)
  name: update(MappingT currentMapping, UpdateT update, ActionGeneric3Param<ShardMapManager, ShardMap, StoreMapping, MappingT> constructMapping, Function<StatusT, Integer> statusAsInt, Function<Integer, StatusT> intAsStatus, UUID lockOwnerId)
  nameWithType: BaseShardMapper.update(MappingT currentMapping, UpdateT update, ActionGeneric3Param<ShardMapManager, ShardMap, StoreMapping, MappingT> constructMapping, Function<StatusT, Integer> statusAsInt, Function<Integer, StatusT> intAsStatus, UUID lockOwnerId)
  parameters:
  - description: <p>Mapping being updated. </p>
    name: currentMapping
    type: <xref href="MappingT?alt=MappingT&text=MappingT" data-throw-if-not-resolved="False"/>
  - description: <p>Updated properties of the Shard. </p>
    name: update
    type: <xref href="UpdateT?alt=UpdateT&text=UpdateT" data-throw-if-not-resolved="False"/>
  - description: <p>Delegate to construct a mapping object. </p>
    name: constructMapping
    type: ActionGeneric3Param&lt;<xref href="com.microsoft.azure.elasticdb.shard.mapmanager.ShardMapManager?alt=com.microsoft.azure.elasticdb.shard.mapmanager.ShardMapManager&text=ShardMapManager" data-throw-if-not-resolved="False"/>, <xref href="com.microsoft.azure.elasticdb.shard.map.ShardMap?alt=com.microsoft.azure.elasticdb.shard.map.ShardMap&text=ShardMap" data-throw-if-not-resolved="False"/>, <xref href="com.microsoft.azure.elasticdb.shard.store.StoreMapping?alt=com.microsoft.azure.elasticdb.shard.store.StoreMapping&text=StoreMapping" data-throw-if-not-resolved="False"/>, MappingT&gt;
  - description: <p>Delegate to get the mapping status as an integer value. </p>
    name: statusAsInt
    type: <xref href="Function%3CStatusT%2C+Integer%3E?alt=Function%3CStatusT%2C+Integer%3E&text=Function%3CStatusT%2C+Integer%3E" data-throw-if-not-resolved="False"/>
  - description: <p>Delegate to get the mapping status from an integer value. </p>
    name: intAsStatus
    type: <xref href="Function%3CInteger%2C+StatusT%3E?alt=Function%3CInteger%2C+StatusT%3E&text=Function%3CInteger%2C+StatusT%3E" data-throw-if-not-resolved="False"/>
  - description: <p>Lock owner id of this mapping </p>
    name: lockOwnerId
    type: <xref href="UUID?alt=UUID&text=UUID" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>New instance of mapping with updated information. </p>
    type: final&lt;MappingT extends <xref href="com.microsoft.azure.elasticdb.shard.base.IShardProvider?alt=com.microsoft.azure.elasticdb.shard.base.IShardProvider&text=IShardProvider" data-throw-if-not-resolved="False"/> &<xref href="com.microsoft.azure.elasticdb.shard.base.IMappingInfoProvider?alt=com.microsoft.azure.elasticdb.shard.base.IMappingInfoProvider&text=IMappingInfoProvider" data-throw-if-not-resolved="False"/>, UpdateT extends <xref href="com.microsoft.azure.elasticdb.shard.base.IMappingUpdate?alt=com.microsoft.azure.elasticdb.shard.base.IMappingUpdate&text=IMappingUpdate" data-throw-if-not-resolved="False"/>&lt;StatusT&gt;, StatusT&gt; MappingT
  summary: >-
    <p>Allows for update to a mapping with the updates provided in the <em>update</em>  parameter.</p>

    <p></p>
  syntax: protected final<MappingT extends IShardProvider &IMappingInfoProvider, UpdateT extends IMappingUpdate<StatusT>, StatusT> MappingT update(MappingT currentMapping, UpdateT update, ActionGeneric3Param<ShardMapManager, ShardMap, StoreMapping, MappingT> constructMapping, Function<StatusT, Integer> statusAsInt, Function<Integer, StatusT> intAsStatus, UUID lockOwnerId)
  uid: com.microsoft.azure.elasticdb.shard.mapper.BaseShardMapper.update(MappingT,UpdateT,ActionGeneric3Param<ShardMapManager, ShardMap, StoreMapping, MappingT>,Function<StatusT, Integer>,Function<Integer, StatusT>,UUID)
nameWithType: BaseShardMapper
syntax: public class BaseShardMapper
type: class
uid: com.microsoft.azure.elasticdb.shard.mapper.BaseShardMapper
fullName: com.microsoft.azure.elasticdb.shard.mapper.BaseShardMapper
name: BaseShardMapper
package: com.microsoft.azure.elasticdb.shard.mapper
summary: <p>Base class for keyed mappers. </p>
metadata: {}
