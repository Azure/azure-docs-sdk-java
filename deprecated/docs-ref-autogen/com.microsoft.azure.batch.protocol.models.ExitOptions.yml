### YamlMime:JavaType
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
methods:
- fullName: com.microsoft.azure.batch.protocol.models.ExitOptions.dependencyAction()
  name: dependencyAction()
  nameWithType: ExitOptions.dependencyAction()
  returns:
    description: <p>the dependencyAction value </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.DependencyAction?alt=com.microsoft.azure.batch.protocol.models.DependencyAction&text=DependencyAction" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the default is 'satisfy' for exit code 0, and 'block' for all other exit conditions. If the job's usesTaskDependencies property is set to false, then specifying the dependencyAction property returns an error and the add task request fails with an invalid property value error; if you are calling the REST API directly, the HTTP status code is 400 (Bad Request). Possible values include: 'satisfy', 'block'.</p>

    <p></p>
  syntax: public DependencyAction dependencyAction()
  uid: com.microsoft.azure.batch.protocol.models.ExitOptions.dependencyAction()
- fullName: com.microsoft.azure.batch.protocol.models.ExitOptions.jobAction()
  name: jobAction()
  nameWithType: ExitOptions.jobAction()
  returns:
    description: <p>the jobAction value </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.JobAction?alt=com.microsoft.azure.batch.protocol.models.JobAction&text=JobAction" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the default is none for exit code 0 and terminate for all other exit conditions. If the job's onTaskFailed property is noaction, then specifying this property returns an error and the add task request fails with an invalid property value error; if you are calling the REST API directly, the HTTP status code is 400 (Bad Request). Possible values include: 'none', 'disable', 'terminate'.</p>

    <p></p>
  syntax: public JobAction jobAction()
  uid: com.microsoft.azure.batch.protocol.models.ExitOptions.jobAction()
- fullName: com.microsoft.azure.batch.protocol.models.ExitOptions.withDependencyAction(DependencyAction dependencyAction)
  name: withDependencyAction(DependencyAction dependencyAction)
  nameWithType: ExitOptions.withDependencyAction(DependencyAction dependencyAction)
  parameters:
  - description: <p>the dependencyAction value to set </p>
    name: dependencyAction
    type: <xref href="com.microsoft.azure.batch.protocol.models.DependencyAction?alt=com.microsoft.azure.batch.protocol.models.DependencyAction&text=DependencyAction" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the ExitOptions object itself. </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.ExitOptions?alt=com.microsoft.azure.batch.protocol.models.ExitOptions&text=ExitOptions" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the default is 'satisfy' for exit code 0, and 'block' for all other exit conditions. If the job's usesTaskDependencies property is set to false, then specifying the dependencyAction property returns an error and the add task request fails with an invalid property value error; if you are calling the REST API directly, the HTTP status code is 400 (Bad Request). Possible values include: 'satisfy', 'block'.</p>

    <p></p>
  syntax: public ExitOptions withDependencyAction(DependencyAction dependencyAction)
  uid: com.microsoft.azure.batch.protocol.models.ExitOptions.withDependencyAction(DependencyAction)
- fullName: com.microsoft.azure.batch.protocol.models.ExitOptions.withJobAction(JobAction jobAction)
  name: withJobAction(JobAction jobAction)
  nameWithType: ExitOptions.withJobAction(JobAction jobAction)
  parameters:
  - description: <p>the jobAction value to set </p>
    name: jobAction
    type: <xref href="com.microsoft.azure.batch.protocol.models.JobAction?alt=com.microsoft.azure.batch.protocol.models.JobAction&text=JobAction" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the ExitOptions object itself. </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.ExitOptions?alt=com.microsoft.azure.batch.protocol.models.ExitOptions&text=ExitOptions" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the default is none for exit code 0 and terminate for all other exit conditions. If the job's onTaskFailed property is noaction, then specifying this property returns an error and the add task request fails with an invalid property value error; if you are calling the REST API directly, the HTTP status code is 400 (Bad Request). Possible values include: 'none', 'disable', 'terminate'.</p>

    <p></p>
  syntax: public ExitOptions withJobAction(JobAction jobAction)
  uid: com.microsoft.azure.batch.protocol.models.ExitOptions.withJobAction(JobAction)
nameWithType: ExitOptions
syntax: public class ExitOptions
type: class
uid: com.microsoft.azure.batch.protocol.models.ExitOptions
fullName: com.microsoft.azure.batch.protocol.models.ExitOptions
name: ExitOptions
package: com.microsoft.azure.batch.protocol.models
summary: <p>Specifies how the Batch service responds to a particular exit condition. </p>
metadata: {}
