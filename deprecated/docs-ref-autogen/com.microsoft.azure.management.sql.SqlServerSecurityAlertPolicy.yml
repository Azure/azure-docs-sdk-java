### YamlMime:JavaType
inheritedMembers:
- com.microsoft.azure.management.resources.fluentcore.arm.models.HasId.id()
- com.microsoft.azure.management.resources.fluentcore.model.HasInner.inner()
- com.microsoft.azure.management.resources.fluentcore.model.Indexable.key()
- com.microsoft.azure.management.resources.fluentcore.arm.models.HasName.name()
- com.microsoft.azure.management.resources.fluentcore.model.Refreshable.refresh()
- com.microsoft.azure.management.resources.fluentcore.model.Refreshable.refreshAsync()
- com.microsoft.azure.management.resources.fluentcore.arm.models.HasResourceGroup.resourceGroupName()
- com.microsoft.azure.management.resources.fluentcore.model.Updatable.update()
methods:
- fullName: com.microsoft.azure.management.sql.SqlServerSecurityAlertPolicy.disabledAlerts()
  name: disabledAlerts()
  nameWithType: SqlServerSecurityAlertPolicy.disabledAlerts()
  returns:
    description: <p>a list of alerts that are disabled </p>
    type: <xref href="List%3CString%3E?alt=List%3CString%3E&text=List%3CString%3E" data-throw-if-not-resolved="False"/>
  syntax: public List<String> disabledAlerts()
  uid: com.microsoft.azure.management.sql.SqlServerSecurityAlertPolicy.disabledAlerts()
- fullName: com.microsoft.azure.management.sql.SqlServerSecurityAlertPolicy.emailAccountAdmins()
  name: emailAccountAdmins()
  nameWithType: SqlServerSecurityAlertPolicy.emailAccountAdmins()
  returns:
    description: <p>true if an alert will be sent to the account administrators </p>
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False"/>
  syntax: public boolean emailAccountAdmins()
  uid: com.microsoft.azure.management.sql.SqlServerSecurityAlertPolicy.emailAccountAdmins()
- fullName: com.microsoft.azure.management.sql.SqlServerSecurityAlertPolicy.emailAddresses()
  name: emailAddresses()
  nameWithType: SqlServerSecurityAlertPolicy.emailAddresses()
  returns:
    description: <p>a list of e-mail addresses to which the alert is sent </p>
    type: <xref href="List%3CString%3E?alt=List%3CString%3E&text=List%3CString%3E" data-throw-if-not-resolved="False"/>
  syntax: public List<String> emailAddresses()
  uid: com.microsoft.azure.management.sql.SqlServerSecurityAlertPolicy.emailAddresses()
- fullName: com.microsoft.azure.management.sql.SqlServerSecurityAlertPolicy.parentId()
  name: parentId()
  nameWithType: SqlServerSecurityAlertPolicy.parentId()
  returns:
    description: <p>the parent SQL server ID </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  syntax: public String parentId()
  uid: com.microsoft.azure.management.sql.SqlServerSecurityAlertPolicy.parentId()
- fullName: com.microsoft.azure.management.sql.SqlServerSecurityAlertPolicy.retentionDays()
  name: retentionDays()
  nameWithType: SqlServerSecurityAlertPolicy.retentionDays()
  returns:
    description: <p>the number of days to keep in the Threat Detection audit logs </p>
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  syntax: public int retentionDays()
  uid: com.microsoft.azure.management.sql.SqlServerSecurityAlertPolicy.retentionDays()
- fullName: com.microsoft.azure.management.sql.SqlServerSecurityAlertPolicy.sqlServerName()
  name: sqlServerName()
  nameWithType: SqlServerSecurityAlertPolicy.sqlServerName()
  returns:
    description: <p>name of the SQL Server to which this DNS alias belongs </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  syntax: public String sqlServerName()
  uid: com.microsoft.azure.management.sql.SqlServerSecurityAlertPolicy.sqlServerName()
- fullName: com.microsoft.azure.management.sql.SqlServerSecurityAlertPolicy.state()
  name: state()
  nameWithType: SqlServerSecurityAlertPolicy.state()
  returns:
    description: <p>the state of the policy, whether it is enabled or disabled </p>
    type: <xref href="com.microsoft.azure.management.sql.SecurityAlertPolicyState?alt=com.microsoft.azure.management.sql.SecurityAlertPolicyState&text=SecurityAlertPolicyState" data-throw-if-not-resolved="False"/>
  syntax: public SecurityAlertPolicyState state()
  uid: com.microsoft.azure.management.sql.SqlServerSecurityAlertPolicy.state()
- fullName: com.microsoft.azure.management.sql.SqlServerSecurityAlertPolicy.storageAccountAccessKey()
  name: storageAccountAccessKey()
  nameWithType: SqlServerSecurityAlertPolicy.storageAccountAccessKey()
  returns:
    description: <p>the identifier key of the Threat Detection audit storage account </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  syntax: public String storageAccountAccessKey()
  uid: com.microsoft.azure.management.sql.SqlServerSecurityAlertPolicy.storageAccountAccessKey()
- fullName: com.microsoft.azure.management.sql.SqlServerSecurityAlertPolicy.storageEndpoint()
  name: storageEndpoint()
  nameWithType: SqlServerSecurityAlertPolicy.storageEndpoint()
  returns:
    description: <p>the blob storage endpoint (e.g. <a href="https://MyAccount.blob.core.windows.net">https://MyAccount.blob.core.windows.net</a>); this blob storage will hold all Threat Detection audit logs </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  syntax: public String storageEndpoint()
  uid: com.microsoft.azure.management.sql.SqlServerSecurityAlertPolicy.storageEndpoint()
nameWithType: SqlServerSecurityAlertPolicy
syntax: public interface SqlServerSecurityAlertPolicy extends HasId,HasInner<ServerSecurityAlertPolicyInner>,HasName,HasResourceGroup,Indexable,Refreshable<SqlServerSecurityAlertPolicy>,Updatable<SqlServerSecurityAlertPolicy.Update>
type: interface
uid: com.microsoft.azure.management.sql.SqlServerSecurityAlertPolicy
fullName: com.microsoft.azure.management.sql.SqlServerSecurityAlertPolicy
name: SqlServerSecurityAlertPolicy
package: com.microsoft.azure.management.sql
summary: <p>An immutable client-side representation of an Azure SQL Server Security Alert Policy. </p>
metadata: {}
