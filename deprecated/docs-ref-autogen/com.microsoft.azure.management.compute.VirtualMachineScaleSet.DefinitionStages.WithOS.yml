### YamlMime:JavaType
methods:
- fullName: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithOS.withLatestLinuxImage(String publisher, String offer, String sku)
  name: withLatestLinuxImage(String publisher, String offer, String sku)
  nameWithType: VirtualMachineScaleSet.DefinitionStages.WithOS.withLatestLinuxImage(String publisher, String offer, String sku)
  parameters:
  - description: <p>the publisher of the image </p>
    name: publisher
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the offer of the image </p>
    name: offer
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the SKU of the image </p>
    name: sku
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the next stage of the definition </p>
    type: <xref href="com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithLinuxRootUsernameManagedOrUnmanaged?alt=com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithLinuxRootUsernameManagedOrUnmanaged&text=VirtualMachineScaleSet.DefinitionStages.WithLinuxRootUsernameManagedOrUnmanaged" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Specifies that the latest version of a marketplace Linux image should be used.</p>

    <p></p>
  syntax: public WithLinuxRootUsernameManagedOrUnmanaged withLatestLinuxImage(String publisher, String offer, String sku)
  uid: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithOS.withLatestLinuxImage(String,String,String)
- fullName: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithOS.withLatestWindowsImage(String publisher, String offer, String sku)
  name: withLatestWindowsImage(String publisher, String offer, String sku)
  nameWithType: VirtualMachineScaleSet.DefinitionStages.WithOS.withLatestWindowsImage(String publisher, String offer, String sku)
  parameters:
  - description: <p>specifies the publisher of the image </p>
    name: publisher
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>specifies the offer of the image </p>
    name: offer
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>specifies the SKU of the image </p>
    name: sku
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the next stage of the definition </p>
    type: <xref href="com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithWindowsAdminUsernameManagedOrUnmanaged?alt=com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithWindowsAdminUsernameManagedOrUnmanaged&text=VirtualMachineScaleSet.DefinitionStages.WithWindowsAdminUsernameManagedOrUnmanaged" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Specifies that the latest version of the specified marketplace Windows image should be used.</p>

    <p></p>
  syntax: public WithWindowsAdminUsernameManagedOrUnmanaged withLatestWindowsImage(String publisher, String offer, String sku)
  uid: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithOS.withLatestWindowsImage(String,String,String)
- fullName: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithOS.withLinuxCustomImage(String customImageId)
  name: withLinuxCustomImage(String customImageId)
  nameWithType: VirtualMachineScaleSet.DefinitionStages.WithOS.withLinuxCustomImage(String customImageId)
  parameters:
  - description: <p>the resource ID of the custom image </p>
    name: customImageId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the next stage of the definition </p>
    type: <xref href="com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithLinuxRootUsernameManaged?alt=com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithLinuxRootUsernameManaged&text=VirtualMachineScaleSet.DefinitionStages.WithLinuxRootUsernameManaged" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Specifies the ID of a Linux custom image to be used.</p>

    <p></p>
  syntax: public WithLinuxRootUsernameManaged withLinuxCustomImage(String customImageId)
  uid: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithOS.withLinuxCustomImage(String)
- fullName: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithOS.withPopularLinuxImage(KnownLinuxVirtualMachineImage knownImage)
  name: withPopularLinuxImage(KnownLinuxVirtualMachineImage knownImage)
  nameWithType: VirtualMachineScaleSet.DefinitionStages.WithOS.withPopularLinuxImage(KnownLinuxVirtualMachineImage knownImage)
  parameters:
  - description: <p>a known market-place image </p>
    name: knownImage
    type: <xref href="com.microsoft.azure.management.compute.KnownLinuxVirtualMachineImage?alt=com.microsoft.azure.management.compute.KnownLinuxVirtualMachineImage&text=KnownLinuxVirtualMachineImage" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the next stage of the definition </p>
    type: <xref href="com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithLinuxRootUsernameManagedOrUnmanaged?alt=com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithLinuxRootUsernameManagedOrUnmanaged&text=VirtualMachineScaleSet.DefinitionStages.WithLinuxRootUsernameManagedOrUnmanaged" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Specifies a known marketplace Linux image used as the virtual machine's operating system.</p>

    <p></p>
  syntax: public WithLinuxRootUsernameManagedOrUnmanaged withPopularLinuxImage(KnownLinuxVirtualMachineImage knownImage)
  uid: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithOS.withPopularLinuxImage(KnownLinuxVirtualMachineImage)
- fullName: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithOS.withPopularWindowsImage(KnownWindowsVirtualMachineImage knownImage)
  name: withPopularWindowsImage(KnownWindowsVirtualMachineImage knownImage)
  nameWithType: VirtualMachineScaleSet.DefinitionStages.WithOS.withPopularWindowsImage(KnownWindowsVirtualMachineImage knownImage)
  parameters:
  - description: <p>a known market-place image </p>
    name: knownImage
    type: <xref href="com.microsoft.azure.management.compute.KnownWindowsVirtualMachineImage?alt=com.microsoft.azure.management.compute.KnownWindowsVirtualMachineImage&text=KnownWindowsVirtualMachineImage" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the next stage of the definition </p>
    type: <xref href="com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithWindowsAdminUsernameManagedOrUnmanaged?alt=com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithWindowsAdminUsernameManagedOrUnmanaged&text=VirtualMachineScaleSet.DefinitionStages.WithWindowsAdminUsernameManagedOrUnmanaged" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Specifies a known marketplace Windows image used as the operating system for the virtual machines in the scale set.</p>

    <p></p>
  syntax: public WithWindowsAdminUsernameManagedOrUnmanaged withPopularWindowsImage(KnownWindowsVirtualMachineImage knownImage)
  uid: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithOS.withPopularWindowsImage(KnownWindowsVirtualMachineImage)
- fullName: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithOS.withSpecificLinuxImageVersion(ImageReference imageReference)
  name: withSpecificLinuxImageVersion(ImageReference imageReference)
  nameWithType: VirtualMachineScaleSet.DefinitionStages.WithOS.withSpecificLinuxImageVersion(ImageReference imageReference)
  parameters:
  - description: <p>describes the publisher, offer, SKU and version of the market-place image </p>
    name: imageReference
    type: <xref href="com.microsoft.azure.management.compute.ImageReference?alt=com.microsoft.azure.management.compute.ImageReference&text=ImageReference" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the next stage of the definition </p>
    type: <xref href="com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithLinuxRootUsernameManagedOrUnmanaged?alt=com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithLinuxRootUsernameManagedOrUnmanaged&text=VirtualMachineScaleSet.DefinitionStages.WithLinuxRootUsernameManagedOrUnmanaged" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Specifies the specific version of a market-place Linux image that should be used.</p>

    <p></p>
  syntax: public WithLinuxRootUsernameManagedOrUnmanaged withSpecificLinuxImageVersion(ImageReference imageReference)
  uid: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithOS.withSpecificLinuxImageVersion(ImageReference)
- fullName: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithOS.withSpecificWindowsImageVersion(ImageReference imageReference)
  name: withSpecificWindowsImageVersion(ImageReference imageReference)
  nameWithType: VirtualMachineScaleSet.DefinitionStages.WithOS.withSpecificWindowsImageVersion(ImageReference imageReference)
  parameters:
  - description: <p>describes publisher, offer, SKU and version of the marketplace image </p>
    name: imageReference
    type: <xref href="com.microsoft.azure.management.compute.ImageReference?alt=com.microsoft.azure.management.compute.ImageReference&text=ImageReference" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the next stage of the definition </p>
    type: <xref href="com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithWindowsAdminUsernameManagedOrUnmanaged?alt=com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithWindowsAdminUsernameManagedOrUnmanaged&text=VirtualMachineScaleSet.DefinitionStages.WithWindowsAdminUsernameManagedOrUnmanaged" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Specifies the specific version of a marketplace Windows image needs to be used.</p>

    <p></p>
  syntax: public WithWindowsAdminUsernameManagedOrUnmanaged withSpecificWindowsImageVersion(ImageReference imageReference)
  uid: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithOS.withSpecificWindowsImageVersion(ImageReference)
- fullName: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithOS.withStoredLinuxImage(String imageUrl)
  name: withStoredLinuxImage(String imageUrl)
  nameWithType: VirtualMachineScaleSet.DefinitionStages.WithOS.withStoredLinuxImage(String imageUrl)
  parameters:
  - description: <p>the URL the the VHD </p>
    name: imageUrl
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the next stage of the definition </p>
    type: <xref href="com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithLinuxRootUsernameUnmanaged?alt=com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithLinuxRootUsernameUnmanaged&text=VirtualMachineScaleSet.DefinitionStages.WithLinuxRootUsernameUnmanaged" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Specifies the user (custom) Linux image used as the virtual machine's operating system.</p>

    <p></p>
  syntax: public WithLinuxRootUsernameUnmanaged withStoredLinuxImage(String imageUrl)
  uid: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithOS.withStoredLinuxImage(String)
- fullName: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithOS.withStoredWindowsImage(String imageUrl)
  name: withStoredWindowsImage(String imageUrl)
  nameWithType: VirtualMachineScaleSet.DefinitionStages.WithOS.withStoredWindowsImage(String imageUrl)
  parameters:
  - description: <p>the URL of the VHD </p>
    name: imageUrl
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the next stage of the definition </p>
    type: <xref href="com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithWindowsAdminUsernameUnmanaged?alt=com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithWindowsAdminUsernameUnmanaged&text=VirtualMachineScaleSet.DefinitionStages.WithWindowsAdminUsernameUnmanaged" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Specifies the user (custom) Windows image to be used as the operating system for the virtual machines in the scale set.</p>

    <p></p>
  syntax: public WithWindowsAdminUsernameUnmanaged withStoredWindowsImage(String imageUrl)
  uid: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithOS.withStoredWindowsImage(String)
- fullName: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithOS.withWindowsCustomImage(String customImageId)
  name: withWindowsCustomImage(String customImageId)
  nameWithType: VirtualMachineScaleSet.DefinitionStages.WithOS.withWindowsCustomImage(String customImageId)
  parameters:
  - description: <p>the resource ID of the custom image </p>
    name: customImageId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the next stage of the definition </p>
    type: <xref href="com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithWindowsAdminUsernameManaged?alt=com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithWindowsAdminUsernameManaged&text=VirtualMachineScaleSet.DefinitionStages.WithWindowsAdminUsernameManaged" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Specifies the ID of a Windows custom image to be used.</p>

    <p></p>
  syntax: public WithWindowsAdminUsernameManaged withWindowsCustomImage(String customImageId)
  uid: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithOS.withWindowsCustomImage(String)
nameWithType: VirtualMachineScaleSet.DefinitionStages.WithOS
syntax: public interface WithOS
type: interface
uid: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithOS
fullName: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithOS
name: VirtualMachineScaleSet.DefinitionStages.WithOS
package: com.microsoft.azure.management.compute
summary: <p>The stage of the virtual machine scale set definition allowing to specify the operating system image. </p>
metadata: {}
