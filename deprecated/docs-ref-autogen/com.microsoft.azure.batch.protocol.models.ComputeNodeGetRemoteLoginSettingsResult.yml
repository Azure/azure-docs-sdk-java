### YamlMime:JavaType
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
methods:
- fullName: com.microsoft.azure.batch.protocol.models.ComputeNodeGetRemoteLoginSettingsResult.remoteLoginIPAddress()
  name: remoteLoginIPAddress()
  nameWithType: ComputeNodeGetRemoteLoginSettingsResult.remoteLoginIPAddress()
  returns:
    description: <p>the remoteLoginIPAddress value </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the remoteLoginIPAddress value.</p>

    <p></p>
  syntax: public String remoteLoginIPAddress()
  uid: com.microsoft.azure.batch.protocol.models.ComputeNodeGetRemoteLoginSettingsResult.remoteLoginIPAddress()
- fullName: com.microsoft.azure.batch.protocol.models.ComputeNodeGetRemoteLoginSettingsResult.remoteLoginPort()
  name: remoteLoginPort()
  nameWithType: ComputeNodeGetRemoteLoginSettingsResult.remoteLoginPort()
  returns:
    description: <p>the remoteLoginPort value </p>
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the remoteLoginPort value.</p>

    <p></p>
  syntax: public int remoteLoginPort()
  uid: com.microsoft.azure.batch.protocol.models.ComputeNodeGetRemoteLoginSettingsResult.remoteLoginPort()
- fullName: com.microsoft.azure.batch.protocol.models.ComputeNodeGetRemoteLoginSettingsResult.withRemoteLoginIPAddress(String remoteLoginIPAddress)
  name: withRemoteLoginIPAddress(String remoteLoginIPAddress)
  nameWithType: ComputeNodeGetRemoteLoginSettingsResult.withRemoteLoginIPAddress(String remoteLoginIPAddress)
  parameters:
  - description: <p>the remoteLoginIPAddress value to set </p>
    name: remoteLoginIPAddress
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the ComputeNodeGetRemoteLoginSettingsResult object itself. </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.ComputeNodeGetRemoteLoginSettingsResult?alt=com.microsoft.azure.batch.protocol.models.ComputeNodeGetRemoteLoginSettingsResult&text=ComputeNodeGetRemoteLoginSettingsResult" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the remoteLoginIPAddress value.</p>

    <p></p>
  syntax: public ComputeNodeGetRemoteLoginSettingsResult withRemoteLoginIPAddress(String remoteLoginIPAddress)
  uid: com.microsoft.azure.batch.protocol.models.ComputeNodeGetRemoteLoginSettingsResult.withRemoteLoginIPAddress(String)
- fullName: com.microsoft.azure.batch.protocol.models.ComputeNodeGetRemoteLoginSettingsResult.withRemoteLoginPort(int remoteLoginPort)
  name: withRemoteLoginPort(int remoteLoginPort)
  nameWithType: ComputeNodeGetRemoteLoginSettingsResult.withRemoteLoginPort(int remoteLoginPort)
  parameters:
  - description: <p>the remoteLoginPort value to set </p>
    name: remoteLoginPort
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the ComputeNodeGetRemoteLoginSettingsResult object itself. </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.ComputeNodeGetRemoteLoginSettingsResult?alt=com.microsoft.azure.batch.protocol.models.ComputeNodeGetRemoteLoginSettingsResult&text=ComputeNodeGetRemoteLoginSettingsResult" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the remoteLoginPort value.</p>

    <p></p>
  syntax: public ComputeNodeGetRemoteLoginSettingsResult withRemoteLoginPort(int remoteLoginPort)
  uid: com.microsoft.azure.batch.protocol.models.ComputeNodeGetRemoteLoginSettingsResult.withRemoteLoginPort(int)
nameWithType: ComputeNodeGetRemoteLoginSettingsResult
syntax: public class ComputeNodeGetRemoteLoginSettingsResult
type: class
uid: com.microsoft.azure.batch.protocol.models.ComputeNodeGetRemoteLoginSettingsResult
fullName: com.microsoft.azure.batch.protocol.models.ComputeNodeGetRemoteLoginSettingsResult
name: ComputeNodeGetRemoteLoginSettingsResult
package: com.microsoft.azure.batch.protocol.models
summary: <p>The remote login settings for a compute node. </p>
metadata: {}
