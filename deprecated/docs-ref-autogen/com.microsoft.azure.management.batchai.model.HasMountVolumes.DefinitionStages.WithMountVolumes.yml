### YamlMime:JavaType
methods:
- fullName: com.microsoft.azure.management.batchai.model.HasMountVolumes.DefinitionStages.WithMountVolumes<ReturnT>.defineAzureBlobFileSystem()
  name: defineAzureBlobFileSystem()
  nameWithType: HasMountVolumes.DefinitionStages.WithMountVolumes<ReturnT>.defineAzureBlobFileSystem()
  returns:
    description: <p>the first stage of Azure blob file system reference definition </p>
    type: <xref href="AzureBlobFileSystem.DefinitionStages.Blank%3CReturnT%3E?alt=AzureBlobFileSystem.DefinitionStages.Blank%3CReturnT%3E&text=AzureBlobFileSystem.DefinitionStages.Blank%3CReturnT%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Begins the definition of Azure blob file system reference to be mounted on each cluster node.</p>

    <p></p>
  syntax: public AzureBlobFileSystem.DefinitionStages.Blank<ReturnT> defineAzureBlobFileSystem()
  uid: com.microsoft.azure.management.batchai.model.HasMountVolumes.DefinitionStages.WithMountVolumes.defineAzureBlobFileSystem()
- fullName: com.microsoft.azure.management.batchai.model.HasMountVolumes.DefinitionStages.WithMountVolumes<ReturnT>.defineAzureFileShare()
  name: defineAzureFileShare()
  nameWithType: HasMountVolumes.DefinitionStages.WithMountVolumes<ReturnT>.defineAzureFileShare()
  returns:
    description: <p>the first stage of file share reference definition </p>
    type: <xref href="AzureFileShare.DefinitionStages.Blank%3CReturnT%3E?alt=AzureFileShare.DefinitionStages.Blank%3CReturnT%3E&text=AzureFileShare.DefinitionStages.Blank%3CReturnT%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Begins the definition of Azure file share reference to be mounted on each cluster node.</p>

    <p></p>
  syntax: public AzureFileShare.DefinitionStages.Blank<ReturnT> defineAzureFileShare()
  uid: com.microsoft.azure.management.batchai.model.HasMountVolumes.DefinitionStages.WithMountVolumes.defineAzureFileShare()
- fullName: com.microsoft.azure.management.batchai.model.HasMountVolumes.DefinitionStages.WithMountVolumes<ReturnT>.defineFileServer()
  name: defineFileServer()
  nameWithType: HasMountVolumes.DefinitionStages.WithMountVolumes<ReturnT>.defineFileServer()
  returns:
    description: <p>the first stage of file server reference definition </p>
    type: <xref href="FileServer.DefinitionStages.Blank%3CReturnT%3E?alt=FileServer.DefinitionStages.Blank%3CReturnT%3E&text=FileServer.DefinitionStages.Blank%3CReturnT%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Begins the definition of Azure file server reference.</p>

    <p></p>
  syntax: public FileServer.DefinitionStages.Blank<ReturnT> defineFileServer()
  uid: com.microsoft.azure.management.batchai.model.HasMountVolumes.DefinitionStages.WithMountVolumes.defineFileServer()
- fullName: com.microsoft.azure.management.batchai.model.HasMountVolumes.DefinitionStages.WithMountVolumes<ReturnT>.withUnmanagedFileSystem(String mountCommand, String relativeMountPath)
  name: withUnmanagedFileSystem(String mountCommand, String relativeMountPath)
  nameWithType: HasMountVolumes.DefinitionStages.WithMountVolumes<ReturnT>.withUnmanagedFileSystem(String mountCommand, String relativeMountPath)
  parameters:
  - description: <p>command used to mount the unmanaged file system </p>
    name: mountCommand
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the relative path on the compute cluster node where the file system will be mounted. </p>
    name: relativeMountPath
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the next stage of Batch AI cluster definition </p>
    type: <xref href="ReturnT?alt=ReturnT&text=ReturnT" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Specifies the details of the file system to mount on the compute cluster nodes.</p>

    <p></p>
  syntax: public ReturnT withUnmanagedFileSystem(String mountCommand, String relativeMountPath)
  uid: com.microsoft.azure.management.batchai.model.HasMountVolumes.DefinitionStages.WithMountVolumes.withUnmanagedFileSystem(String,String)
nameWithType: HasMountVolumes.DefinitionStages.WithMountVolumes<ReturnT>
syntax: public interface WithMountVolumes<ReturnT>
type: interface
typeParameters:
- name: ReturnT
uid: com.microsoft.azure.management.batchai.model.HasMountVolumes.DefinitionStages.WithMountVolumes
fullName: com.microsoft.azure.management.batchai.model.HasMountVolumes.DefinitionStages.WithMountVolumes<ReturnT>
name: HasMountVolumes.DefinitionStages.WithMountVolumes<ReturnT>
package: com.microsoft.azure.management.batchai.model
summary: <p>Defines the volumes to mount on the cluster. </p>
metadata: {}
