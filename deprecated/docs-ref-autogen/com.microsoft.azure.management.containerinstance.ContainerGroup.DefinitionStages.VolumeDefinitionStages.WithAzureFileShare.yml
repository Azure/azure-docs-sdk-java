### YamlMime:JavaType
methods:
- fullName: com.microsoft.azure.management.containerinstance.ContainerGroup.DefinitionStages.VolumeDefinitionStages.WithAzureFileShare<ParentT>.withExistingReadOnlyAzureFileShare(String shareName)
  name: withExistingReadOnlyAzureFileShare(String shareName)
  nameWithType: ContainerGroup.DefinitionStages.VolumeDefinitionStages.WithAzureFileShare<ParentT>.withExistingReadOnlyAzureFileShare(String shareName)
  parameters:
  - description: <p>an existing Azure file share name </p>
    name: shareName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the next stage of the definition </p>
    type: <xref href="com.microsoft.azure.management.containerinstance.ContainerGroup.DefinitionStages.VolumeDefinitionStages.WithStorageAccountName?alt=com.microsoft.azure.management.containerinstance.ContainerGroup.DefinitionStages.VolumeDefinitionStages.WithStorageAccountName&text=ContainerGroup.DefinitionStages.VolumeDefinitionStages.WithStorageAccountName" data-throw-if-not-resolved="False"/>&lt;ParentT&gt;
  summary: >-
    <p>Specifies an existing Azure file share name.</p>

    <p></p>
  syntax: public WithStorageAccountName<ParentT> withExistingReadOnlyAzureFileShare(String shareName)
  uid: com.microsoft.azure.management.containerinstance.ContainerGroup.DefinitionStages.VolumeDefinitionStages.WithAzureFileShare.withExistingReadOnlyAzureFileShare(String)
- fullName: com.microsoft.azure.management.containerinstance.ContainerGroup.DefinitionStages.VolumeDefinitionStages.WithAzureFileShare<ParentT>.withExistingReadWriteAzureFileShare(String shareName)
  name: withExistingReadWriteAzureFileShare(String shareName)
  nameWithType: ContainerGroup.DefinitionStages.VolumeDefinitionStages.WithAzureFileShare<ParentT>.withExistingReadWriteAzureFileShare(String shareName)
  parameters:
  - description: <p>an existing Azure file share name </p>
    name: shareName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the next stage of the definition </p>
    type: <xref href="com.microsoft.azure.management.containerinstance.ContainerGroup.DefinitionStages.VolumeDefinitionStages.WithStorageAccountName?alt=com.microsoft.azure.management.containerinstance.ContainerGroup.DefinitionStages.VolumeDefinitionStages.WithStorageAccountName&text=ContainerGroup.DefinitionStages.VolumeDefinitionStages.WithStorageAccountName" data-throw-if-not-resolved="False"/>&lt;ParentT&gt;
  summary: >-
    <p>Specifies an existing Azure file share name.</p>

    <p></p>
  syntax: public WithStorageAccountName<ParentT> withExistingReadWriteAzureFileShare(String shareName)
  uid: com.microsoft.azure.management.containerinstance.ContainerGroup.DefinitionStages.VolumeDefinitionStages.WithAzureFileShare.withExistingReadWriteAzureFileShare(String)
nameWithType: ContainerGroup.DefinitionStages.VolumeDefinitionStages.WithAzureFileShare<ParentT>
syntax: public interface WithAzureFileShare<ParentT>
type: interface
typeParameters:
- description: <p>the stage of the parent definition to return to after attaching this definition </p>
  name: ParentT
uid: com.microsoft.azure.management.containerinstance.ContainerGroup.DefinitionStages.VolumeDefinitionStages.WithAzureFileShare
fullName: com.microsoft.azure.management.containerinstance.ContainerGroup.DefinitionStages.VolumeDefinitionStages.WithAzureFileShare<ParentT>
name: ContainerGroup.DefinitionStages.VolumeDefinitionStages.WithAzureFileShare<ParentT>
package: com.microsoft.azure.management.containerinstance
summary: <p>The stage of the volume definition allowing to specify a read only Azure File Share name. </p>
metadata: {}
