### YamlMime:JavaType
methods:
- fullName: com.microsoft.azure.servicebus.ICloseable.close()
  name: close()
  nameWithType: ICloseable.close()
  exceptions:
  - type: <xref href="ServiceBusException?alt=ServiceBusException&text=ServiceBusException" data-throw-if-not-resolved="False"/>
    description: <p>If this object cannot be properly closed. </p>
  summary: <p>Synchronously closes and disposes any resources associated with this object. Calling this method is equivalent of calling . This method blocks until this object is closed. </p>
  syntax: public void close()
  uid: com.microsoft.azure.servicebus.ICloseable.close()
- fullName: com.microsoft.azure.servicebus.ICloseable.closeAsync()
  name: closeAsync()
  nameWithType: ICloseable.closeAsync()
  returns:
    description: <p>a CompletableFuture representing the closing of this object. </p>
    type: <xref href="CompletableFuture%3CVoid%3E?alt=CompletableFuture%3CVoid%3E&text=CompletableFuture%3CVoid%3E" data-throw-if-not-resolved="False"/>
  summary: <p>Closes and disposes any resources associated with this object. An object cannot be used after it is closed. This is an asynchronous method that returns a CompletableFuture immediately. This object is completely closed when the returned CompletableFuture is completed. </p>
  syntax: public CompletableFuture<Void> closeAsync()
  uid: com.microsoft.azure.servicebus.ICloseable.closeAsync()
nameWithType: ICloseable
syntax: public interface ICloseable
type: interface
uid: com.microsoft.azure.servicebus.ICloseable
fullName: com.microsoft.azure.servicebus.ICloseable
name: ICloseable
package: com.microsoft.azure.servicebus
summary: <p>Defines a standard way of properly closing and disposing objects. </p>
metadata: {}
