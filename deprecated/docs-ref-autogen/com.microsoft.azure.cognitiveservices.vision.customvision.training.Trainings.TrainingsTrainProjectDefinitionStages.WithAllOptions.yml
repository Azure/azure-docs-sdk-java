### YamlMime:JavaType
methods:
- fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.TrainingsTrainProjectDefinitionStages.WithAllOptions.withForceTrain(Boolean forceTrain)
  name: withForceTrain(Boolean forceTrain)
  nameWithType: Trainings.TrainingsTrainProjectDefinitionStages.WithAllOptions.withForceTrain(Boolean forceTrain)
  parameters:
  - name: forceTrain
    type: <xref href="Boolean?alt=Boolean&text=Boolean" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>next definition stage </p>
    type: <xref href="TrainingsTrainProjectDefinitionStages.WithExecute?alt=TrainingsTrainProjectDefinitionStages.WithExecute&text=TrainingsTrainProjectDefinitionStages.WithExecute" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Whether to force train even if dataset and configuration does not change (default: false).</p>

    <p></p>
  syntax: public TrainingsTrainProjectDefinitionStages.WithExecute withForceTrain(Boolean forceTrain)
  uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.TrainingsTrainProjectDefinitionStages.WithAllOptions.withForceTrain(Boolean)
- fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.TrainingsTrainProjectDefinitionStages.WithAllOptions.withNotificationEmailAddress(String notificationEmailAddress)
  name: withNotificationEmailAddress(String notificationEmailAddress)
  nameWithType: Trainings.TrainingsTrainProjectDefinitionStages.WithAllOptions.withNotificationEmailAddress(String notificationEmailAddress)
  parameters:
  - name: notificationEmailAddress
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>next definition stage </p>
    type: <xref href="TrainingsTrainProjectDefinitionStages.WithExecute?alt=TrainingsTrainProjectDefinitionStages.WithExecute&text=TrainingsTrainProjectDefinitionStages.WithExecute" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>The email address to send notification to when training finishes (default: null).</p>

    <p></p>
  syntax: public TrainingsTrainProjectDefinitionStages.WithExecute withNotificationEmailAddress(String notificationEmailAddress)
  uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.TrainingsTrainProjectDefinitionStages.WithAllOptions.withNotificationEmailAddress(String)
- fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.TrainingsTrainProjectDefinitionStages.WithAllOptions.withReservedBudgetInHours(Integer reservedBudgetInHours)
  name: withReservedBudgetInHours(Integer reservedBudgetInHours)
  nameWithType: Trainings.TrainingsTrainProjectDefinitionStages.WithAllOptions.withReservedBudgetInHours(Integer reservedBudgetInHours)
  parameters:
  - name: reservedBudgetInHours
    type: <xref href="Integer?alt=Integer&text=Integer" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>next definition stage </p>
    type: <xref href="TrainingsTrainProjectDefinitionStages.WithExecute?alt=TrainingsTrainProjectDefinitionStages.WithExecute&text=TrainingsTrainProjectDefinitionStages.WithExecute" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>The number of hours reserved as budget for training (if applicable).</p>

    <p></p>
  syntax: public TrainingsTrainProjectDefinitionStages.WithExecute withReservedBudgetInHours(Integer reservedBudgetInHours)
  uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.TrainingsTrainProjectDefinitionStages.WithAllOptions.withReservedBudgetInHours(Integer)
- fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.TrainingsTrainProjectDefinitionStages.WithAllOptions.withTrainingType(String trainingType)
  name: withTrainingType(String trainingType)
  nameWithType: Trainings.TrainingsTrainProjectDefinitionStages.WithAllOptions.withTrainingType(String trainingType)
  parameters:
  - name: trainingType
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>next definition stage </p>
    type: <xref href="TrainingsTrainProjectDefinitionStages.WithExecute?alt=TrainingsTrainProjectDefinitionStages.WithExecute&text=TrainingsTrainProjectDefinitionStages.WithExecute" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>The type of training to use to train the project (default: Regular). Possible values include: 'Regular', 'Advanced'.</p>

    <p></p>
  syntax: public TrainingsTrainProjectDefinitionStages.WithExecute withTrainingType(String trainingType)
  uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.TrainingsTrainProjectDefinitionStages.WithAllOptions.withTrainingType(String)
nameWithType: Trainings.TrainingsTrainProjectDefinitionStages.WithAllOptions
syntax: public interface WithAllOptions
type: interface
uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.TrainingsTrainProjectDefinitionStages.WithAllOptions
fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.TrainingsTrainProjectDefinitionStages.WithAllOptions
name: Trainings.TrainingsTrainProjectDefinitionStages.WithAllOptions
package: com.microsoft.azure.cognitiveservices.vision.customvision.training
summary: <p>The stage of the definition which allows for any other optional settings to be specified. </p>
metadata: {}
