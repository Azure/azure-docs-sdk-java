### YamlMime:JavaType
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
methods:
- fullName: com.microsoft.azure.management.containerregistry.ImportImageParameters.mode()
  name: mode()
  nameWithType: ImportImageParameters.mode()
  returns:
    description: <p>the mode value </p>
    type: <xref href="com.microsoft.azure.management.containerregistry.ImportMode?alt=com.microsoft.azure.management.containerregistry.ImportMode&text=ImportMode" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get when Force, any existing target tags will be overwritten. When NoForce, any existing target tags will fail the operation before any copying begins. Possible values include: 'NoForce', 'Force'.</p>

    <p></p>
  syntax: public ImportMode mode()
  uid: com.microsoft.azure.management.containerregistry.ImportImageParameters.mode()
- fullName: com.microsoft.azure.management.containerregistry.ImportImageParameters.source()
  name: source()
  nameWithType: ImportImageParameters.source()
  returns:
    description: <p>the source value </p>
    type: <xref href="com.microsoft.azure.management.containerregistry.ImportSource?alt=com.microsoft.azure.management.containerregistry.ImportSource&text=ImportSource" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the source of the image.</p>

    <p></p>
  syntax: public ImportSource source()
  uid: com.microsoft.azure.management.containerregistry.ImportImageParameters.source()
- fullName: com.microsoft.azure.management.containerregistry.ImportImageParameters.targetTags()
  name: targetTags()
  nameWithType: ImportImageParameters.targetTags()
  returns:
    description: <p>the targetTags value </p>
    type: <xref href="List%3CString%3E?alt=List%3CString%3E&text=List%3CString%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get list of strings of the form repo[:tag]. When tag is omitted the source will be used (or 'latest' if source tag is also omitted).</p>

    <p></p>
  syntax: public List<String> targetTags()
  uid: com.microsoft.azure.management.containerregistry.ImportImageParameters.targetTags()
- fullName: com.microsoft.azure.management.containerregistry.ImportImageParameters.untaggedTargetRepositories()
  name: untaggedTargetRepositories()
  nameWithType: ImportImageParameters.untaggedTargetRepositories()
  returns:
    description: <p>the untaggedTargetRepositories value </p>
    type: <xref href="List%3CString%3E?alt=List%3CString%3E&text=List%3CString%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get list of strings of repository names to do a manifest only copy. No tag will be created.</p>

    <p></p>
  syntax: public List<String> untaggedTargetRepositories()
  uid: com.microsoft.azure.management.containerregistry.ImportImageParameters.untaggedTargetRepositories()
- fullName: com.microsoft.azure.management.containerregistry.ImportImageParameters.withMode(ImportMode mode)
  name: withMode(ImportMode mode)
  nameWithType: ImportImageParameters.withMode(ImportMode mode)
  parameters:
  - description: <p>the mode value to set </p>
    name: mode
    type: <xref href="com.microsoft.azure.management.containerregistry.ImportMode?alt=com.microsoft.azure.management.containerregistry.ImportMode&text=ImportMode" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the ImportImageParameters object itself. </p>
    type: <xref href="com.microsoft.azure.management.containerregistry.ImportImageParameters?alt=com.microsoft.azure.management.containerregistry.ImportImageParameters&text=ImportImageParameters" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set when Force, any existing target tags will be overwritten. When NoForce, any existing target tags will fail the operation before any copying begins. Possible values include: 'NoForce', 'Force'.</p>

    <p></p>
  syntax: public ImportImageParameters withMode(ImportMode mode)
  uid: com.microsoft.azure.management.containerregistry.ImportImageParameters.withMode(ImportMode)
- fullName: com.microsoft.azure.management.containerregistry.ImportImageParameters.withSource(ImportSource source)
  name: withSource(ImportSource source)
  nameWithType: ImportImageParameters.withSource(ImportSource source)
  parameters:
  - description: <p>the source value to set </p>
    name: source
    type: <xref href="com.microsoft.azure.management.containerregistry.ImportSource?alt=com.microsoft.azure.management.containerregistry.ImportSource&text=ImportSource" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the ImportImageParameters object itself. </p>
    type: <xref href="com.microsoft.azure.management.containerregistry.ImportImageParameters?alt=com.microsoft.azure.management.containerregistry.ImportImageParameters&text=ImportImageParameters" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the source of the image.</p>

    <p></p>
  syntax: public ImportImageParameters withSource(ImportSource source)
  uid: com.microsoft.azure.management.containerregistry.ImportImageParameters.withSource(ImportSource)
- fullName: com.microsoft.azure.management.containerregistry.ImportImageParameters.withTargetTags(List<String> targetTags)
  name: withTargetTags(List<String> targetTags)
  nameWithType: ImportImageParameters.withTargetTags(List<String> targetTags)
  parameters:
  - description: <p>the targetTags value to set </p>
    name: targetTags
    type: <xref href="List%3CString%3E?alt=List%3CString%3E&text=List%3CString%3E" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the ImportImageParameters object itself. </p>
    type: <xref href="com.microsoft.azure.management.containerregistry.ImportImageParameters?alt=com.microsoft.azure.management.containerregistry.ImportImageParameters&text=ImportImageParameters" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set list of strings of the form repo[:tag]. When tag is omitted the source will be used (or 'latest' if source tag is also omitted).</p>

    <p></p>
  syntax: public ImportImageParameters withTargetTags(List<String> targetTags)
  uid: com.microsoft.azure.management.containerregistry.ImportImageParameters.withTargetTags(List<String>)
- fullName: com.microsoft.azure.management.containerregistry.ImportImageParameters.withUntaggedTargetRepositories(List<String> untaggedTargetRepositories)
  name: withUntaggedTargetRepositories(List<String> untaggedTargetRepositories)
  nameWithType: ImportImageParameters.withUntaggedTargetRepositories(List<String> untaggedTargetRepositories)
  parameters:
  - description: <p>the untaggedTargetRepositories value to set </p>
    name: untaggedTargetRepositories
    type: <xref href="List%3CString%3E?alt=List%3CString%3E&text=List%3CString%3E" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the ImportImageParameters object itself. </p>
    type: <xref href="com.microsoft.azure.management.containerregistry.ImportImageParameters?alt=com.microsoft.azure.management.containerregistry.ImportImageParameters&text=ImportImageParameters" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set list of strings of repository names to do a manifest only copy. No tag will be created.</p>

    <p></p>
  syntax: public ImportImageParameters withUntaggedTargetRepositories(List<String> untaggedTargetRepositories)
  uid: com.microsoft.azure.management.containerregistry.ImportImageParameters.withUntaggedTargetRepositories(List<String>)
nameWithType: ImportImageParameters
syntax: public class ImportImageParameters
type: class
uid: com.microsoft.azure.management.containerregistry.ImportImageParameters
fullName: com.microsoft.azure.management.containerregistry.ImportImageParameters
name: ImportImageParameters
package: com.microsoft.azure.management.containerregistry
summary: <p>The ImportImageParameters model. </p>
metadata: {}
