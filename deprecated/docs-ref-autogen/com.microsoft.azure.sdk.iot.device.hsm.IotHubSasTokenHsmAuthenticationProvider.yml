### YamlMime:JavaType
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
- <xref href="com.microsoft.azure.sdk.iot.device.auth.IotHubAuthenticationProvider" data-throw-if-not-resolved="False"/>
- <xref href="com.microsoft.azure.sdk.iot.device.auth.IotHubSasTokenAuthenticationProvider" data-throw-if-not-resolved="False"/>
- <xref href="com.microsoft.azure.sdk.iot.device.auth.IotHubSasTokenWithRefreshAuthenticationProvider?alt=com.microsoft.azure.sdk.iot.device.auth.IotHubSasTokenWithRefreshAuthenticationProvider&text=IotHubSasTokenWithRefreshAuthenticationProvider" data-throw-if-not-resolved="False"/>
inheritedMembers:
- com.microsoft.azure.sdk.iot.device.auth.IotHubSasTokenWithRefreshAuthenticationProvider.buildAudience(String,String,String)
- com.microsoft.azure.sdk.iot.device.auth.IotHubAuthenticationProvider.deviceId
- com.microsoft.azure.sdk.iot.device.auth.IotHubAuthenticationProvider.gatewayHostname
- com.microsoft.azure.sdk.iot.device.auth.IotHubAuthenticationProvider.getDeviceId()
- com.microsoft.azure.sdk.iot.device.auth.IotHubAuthenticationProvider.getGatewayHostname()
- com.microsoft.azure.sdk.iot.device.auth.IotHubAuthenticationProvider.getHostname()
- com.microsoft.azure.sdk.iot.device.auth.IotHubSasTokenAuthenticationProvider.getMillisecondsBeforeProactiveRenewal()
- com.microsoft.azure.sdk.iot.device.auth.IotHubAuthenticationProvider.getModuleId()
- com.microsoft.azure.sdk.iot.device.auth.IotHubSasTokenWithRefreshAuthenticationProvider.getSasToken()
- com.microsoft.azure.sdk.iot.device.auth.IotHubAuthenticationProvider.getSSLContext()
- com.microsoft.azure.sdk.iot.device.auth.IotHubSasTokenAuthenticationProvider.getTokenValidSecs()
- com.microsoft.azure.sdk.iot.device.auth.IotHubAuthenticationProvider.hostname
- com.microsoft.azure.sdk.iot.device.auth.IotHubAuthenticationProvider.IotHubAuthenticationProvider(String,String,String,String)
- com.microsoft.azure.sdk.iot.device.auth.IotHubAuthenticationProvider.IotHubAuthenticationProvider(String,String,String,String,SSLContext)
- com.microsoft.azure.sdk.iot.device.auth.IotHubSasTokenAuthenticationProvider.IotHubSasTokenAuthenticationProvider(String,String,String,String)
- com.microsoft.azure.sdk.iot.device.auth.IotHubSasTokenAuthenticationProvider.IotHubSasTokenAuthenticationProvider(String,String,String,String,long,int)
- com.microsoft.azure.sdk.iot.device.auth.IotHubSasTokenWithRefreshAuthenticationProvider.IotHubSasTokenWithRefreshAuthenticationProvider(String,String,String,String,String,int,int)
- com.microsoft.azure.sdk.iot.device.auth.IotHubSasTokenWithRefreshAuthenticationProvider.IotHubSasTokenWithRefreshAuthenticationProvider(String,String,String,String,String,int,int,SSLContext)
- com.microsoft.azure.sdk.iot.device.auth.IotHubSasTokenWithRefreshAuthenticationProvider.isAuthenticationProviderRenewalNecessary()
- com.microsoft.azure.sdk.iot.device.auth.IotHubSasTokenAuthenticationProvider.isSasTokenExpired()
- com.microsoft.azure.sdk.iot.device.auth.IotHubAuthenticationProvider.moduleId
- com.microsoft.azure.sdk.iot.device.auth.IotHubSasTokenAuthenticationProvider.sasToken
- com.microsoft.azure.sdk.iot.device.auth.IotHubSasTokenAuthenticationProvider.setTokenValidSecs(long)
- com.microsoft.azure.sdk.iot.device.auth.IotHubSasTokenAuthenticationProvider.shouldRefreshToken(boolean)
- com.microsoft.azure.sdk.iot.device.auth.IotHubSasTokenAuthenticationProvider.tokenValidSecs
methods:
- fullName: com.microsoft.azure.sdk.iot.device.hsm.IotHubSasTokenHsmAuthenticationProvider.canRefreshToken()
  name: canRefreshToken()
  nameWithType: IotHubSasTokenHsmAuthenticationProvider.canRefreshToken()
  returns:
    description: <p>true </p>
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False"/>
  summary: <p>Returns true as the Hsm can always refresh the token </p>
  syntax: public boolean canRefreshToken()
  uid: com.microsoft.azure.sdk.iot.device.hsm.IotHubSasTokenHsmAuthenticationProvider.canRefreshToken()
- fullName: com.microsoft.azure.sdk.iot.device.hsm.IotHubSasTokenHsmAuthenticationProvider.create(SignatureProvider signatureProvider, String deviceId, String moduleId, String hostname, String gatewayHostname, String generationId, int suggestedTimeToLiveSeconds, int timeBufferPercentage)
  name: create(SignatureProvider signatureProvider, String deviceId, String moduleId, String hostname, String gatewayHostname, String generationId, int suggestedTimeToLiveSeconds, int timeBufferPercentage)
  nameWithType: IotHubSasTokenHsmAuthenticationProvider.create(SignatureProvider signatureProvider, String deviceId, String moduleId, String hostname, String gatewayHostname, String generationId, int suggestedTimeToLiveSeconds, int timeBufferPercentage)
  parameters:
  - description: <p>the signature provider to be used when generating sas tokens </p>
    name: signatureProvider
    type: <xref href="com.microsoft.azure.sdk.iot.device.auth.SignatureProvider?alt=com.microsoft.azure.sdk.iot.device.auth.SignatureProvider&text=SignatureProvider" data-throw-if-not-resolved="False"/>
  - description: <p>the id of the device the module belongs to </p>
    name: deviceId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the id of the module to be authenticated for </p>
    name: moduleId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the hostname of the iothub to be authenticated for. May be null if gatewayHostname is not </p>
    name: hostname
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the gatewayHostname of the edge hub to be authenticated for. May be null if hostname is not </p>
    name: gatewayHostname
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the generation id </p>
    name: generationId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the time for the generated sas tokens to live for </p>
    name: suggestedTimeToLiveSeconds
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  - description: <p>the percent of the life a sas token will live before attempting to be renewed. (100 means don't renew until end of life) </p>
    name: timeBufferPercentage
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
    description: <p>If the Hsm unit cannot be reached </p>
  - type: <xref href="TransportException?alt=TransportException&text=TransportException" data-throw-if-not-resolved="False"/>
    description: <p>If the Hsm unit cannot be reached </p>
  returns:
    description: <p>the created IotHubSasTokenHsmAuthenticationProvider instance </p>
    type: <xref href="com.microsoft.azure.sdk.iot.device.hsm.IotHubSasTokenHsmAuthenticationProvider?alt=com.microsoft.azure.sdk.iot.device.hsm.IotHubSasTokenHsmAuthenticationProvider&text=IotHubSasTokenHsmAuthenticationProvider" data-throw-if-not-resolved="False"/>
  summary: <p>Constructor for a IotHubSasTokenHsmAuthenticationProvider instance </p>
  syntax: public static IotHubSasTokenHsmAuthenticationProvider create(SignatureProvider signatureProvider, String deviceId, String moduleId, String hostname, String gatewayHostname, String generationId, int suggestedTimeToLiveSeconds, int timeBufferPercentage)
  uid: com.microsoft.azure.sdk.iot.device.hsm.IotHubSasTokenHsmAuthenticationProvider.create(SignatureProvider,String,String,String,String,String,int,int)
- fullName: com.microsoft.azure.sdk.iot.device.hsm.IotHubSasTokenHsmAuthenticationProvider.create(SignatureProvider signatureProvider, String deviceId, String moduleId, String hostname, String gatewayHostname, String generationId, int suggestedTimeToLiveSeconds, int timeBufferPercentage, SSLContext sslContext)
  name: create(SignatureProvider signatureProvider, String deviceId, String moduleId, String hostname, String gatewayHostname, String generationId, int suggestedTimeToLiveSeconds, int timeBufferPercentage, SSLContext sslContext)
  nameWithType: IotHubSasTokenHsmAuthenticationProvider.create(SignatureProvider signatureProvider, String deviceId, String moduleId, String hostname, String gatewayHostname, String generationId, int suggestedTimeToLiveSeconds, int timeBufferPercentage, SSLContext sslContext)
  parameters:
  - description: <p>the signature provider to be used when generating sas tokens </p>
    name: signatureProvider
    type: <xref href="com.microsoft.azure.sdk.iot.device.auth.SignatureProvider?alt=com.microsoft.azure.sdk.iot.device.auth.SignatureProvider&text=SignatureProvider" data-throw-if-not-resolved="False"/>
  - description: <p>the id of the device the module belongs to </p>
    name: deviceId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the id of the module to be authenticated for </p>
    name: moduleId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the hostname of the iothub to be authenticated for. May be null if gatewayHostname is not </p>
    name: hostname
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the gatewayHostname of the edge hub to be authenticated for. May be null if hostname is not </p>
    name: gatewayHostname
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the generation id </p>
    name: generationId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the time for the generated sas tokens to live for </p>
    name: suggestedTimeToLiveSeconds
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  - description: <p>the percent of the life a sas token will live before attempting to be renewed. (100 means don't renew until end of life) </p>
    name: timeBufferPercentage
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  - description: <p>the SSLContext to open connections with </p>
    name: sslContext
    type: <xref href="SSLContext?alt=SSLContext&text=SSLContext" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
    description: <p>If the Hsm unit cannot be reached </p>
  - type: <xref href="TransportException?alt=TransportException&text=TransportException" data-throw-if-not-resolved="False"/>
    description: <p>If the Hsm unit cannot be reached </p>
  returns:
    description: <p>the created IotHubSasTokenHsmAuthenticationProvider instance </p>
    type: <xref href="com.microsoft.azure.sdk.iot.device.hsm.IotHubSasTokenHsmAuthenticationProvider?alt=com.microsoft.azure.sdk.iot.device.hsm.IotHubSasTokenHsmAuthenticationProvider&text=IotHubSasTokenHsmAuthenticationProvider" data-throw-if-not-resolved="False"/>
  summary: <p>Constructor for a IotHubSasTokenHsmAuthenticationProvider instance </p>
  syntax: public static IotHubSasTokenHsmAuthenticationProvider create(SignatureProvider signatureProvider, String deviceId, String moduleId, String hostname, String gatewayHostname, String generationId, int suggestedTimeToLiveSeconds, int timeBufferPercentage, SSLContext sslContext)
  uid: com.microsoft.azure.sdk.iot.device.hsm.IotHubSasTokenHsmAuthenticationProvider.create(SignatureProvider,String,String,String,String,String,int,int,SSLContext)
- fullName: com.microsoft.azure.sdk.iot.device.hsm.IotHubSasTokenHsmAuthenticationProvider.refreshSasToken()
  name: refreshSasToken()
  nameWithType: IotHubSasTokenHsmAuthenticationProvider.refreshSasToken()
  exceptions:
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
    description: <p>If the Hsm unit cannot be reached </p>
  - type: <xref href="TransportException?alt=TransportException&text=TransportException" data-throw-if-not-resolved="False"/>
    description: <p>If the Hsm unit cannot be reached </p>
  summary: <p>Renew the saved sas token using the HSM unit </p>
  syntax: public void refreshSasToken()
  uid: com.microsoft.azure.sdk.iot.device.hsm.IotHubSasTokenHsmAuthenticationProvider.refreshSasToken()
nameWithType: IotHubSasTokenHsmAuthenticationProvider
syntax: public class IotHubSasTokenHsmAuthenticationProvider extends IotHubSasTokenWithRefreshAuthenticationProvider
type: class
uid: com.microsoft.azure.sdk.iot.device.hsm.IotHubSasTokenHsmAuthenticationProvider
fullName: com.microsoft.azure.sdk.iot.device.hsm.IotHubSasTokenHsmAuthenticationProvider
name: IotHubSasTokenHsmAuthenticationProvider
package: com.microsoft.azure.sdk.iot.device.hsm
summary: <p>Authentication method that uses HSM to get a SAS token. </p>
metadata: {}
