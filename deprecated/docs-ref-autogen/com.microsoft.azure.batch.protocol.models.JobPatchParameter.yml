### YamlMime:JavaType
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
methods:
- fullName: com.microsoft.azure.batch.protocol.models.JobPatchParameter.constraints()
  name: constraints()
  nameWithType: JobPatchParameter.constraints()
  returns:
    description: <p>the constraints value </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.JobConstraints?alt=com.microsoft.azure.batch.protocol.models.JobConstraints&text=JobConstraints" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get if omitted, the existing execution constraints are left unchanged.</p>

    <p></p>
  syntax: public JobConstraints constraints()
  uid: com.microsoft.azure.batch.protocol.models.JobPatchParameter.constraints()
- fullName: com.microsoft.azure.batch.protocol.models.JobPatchParameter.metadata()
  name: metadata()
  nameWithType: JobPatchParameter.metadata()
  returns:
    description: <p>the metadata value </p>
    type: List&lt;<xref href="com.microsoft.azure.batch.protocol.models.MetadataItem?alt=com.microsoft.azure.batch.protocol.models.MetadataItem&text=MetadataItem" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Get if omitted, the existing job metadata is left unchanged.</p>

    <p></p>
  syntax: public List<MetadataItem> metadata()
  uid: com.microsoft.azure.batch.protocol.models.JobPatchParameter.metadata()
- fullName: com.microsoft.azure.batch.protocol.models.JobPatchParameter.onAllTasksComplete()
  name: onAllTasksComplete()
  nameWithType: JobPatchParameter.onAllTasksComplete()
  returns:
    description: <p>the onAllTasksComplete value </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.OnAllTasksComplete?alt=com.microsoft.azure.batch.protocol.models.OnAllTasksComplete&text=OnAllTasksComplete" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get if omitted, the completion behavior is left unchanged. You may not change the value from terminatejob to noaction - that is, once you have engaged automatic job termination, you cannot turn it off again. If you try to do this, the request fails with an 'invalid property value' error response; if you are calling the REST API directly, the HTTP status code is 400 (Bad Request). Possible values include: 'noAction', 'terminateJob'.</p>

    <p></p>
  syntax: public OnAllTasksComplete onAllTasksComplete()
  uid: com.microsoft.azure.batch.protocol.models.JobPatchParameter.onAllTasksComplete()
- fullName: com.microsoft.azure.batch.protocol.models.JobPatchParameter.poolInfo()
  name: poolInfo()
  nameWithType: JobPatchParameter.poolInfo()
  returns:
    description: <p>the poolInfo value </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.PoolInformation?alt=com.microsoft.azure.batch.protocol.models.PoolInformation&text=PoolInformation" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get you may change the pool for a job only when the job is disabled. The Patch Job call will fail if you include the poolInfo element and the job is not disabled. If you specify an autoPoolSpecification specification in the poolInfo, only the keepAlive property can be updated, and then only if the auto pool has a poolLifetimeOption of job. If omitted, the job continues to run on its current pool.</p>

    <p></p>
  syntax: public PoolInformation poolInfo()
  uid: com.microsoft.azure.batch.protocol.models.JobPatchParameter.poolInfo()
- fullName: com.microsoft.azure.batch.protocol.models.JobPatchParameter.priority()
  name: priority()
  nameWithType: JobPatchParameter.priority()
  returns:
    description: <p>the priority value </p>
    type: <xref href="Integer?alt=Integer&text=Integer" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get priority values can range from -1000 to 1000, with -1000 being the lowest priority and 1000 being the highest priority. If omitted, the priority of the job is left unchanged.</p>

    <p></p>
  syntax: public Integer priority()
  uid: com.microsoft.azure.batch.protocol.models.JobPatchParameter.priority()
- fullName: com.microsoft.azure.batch.protocol.models.JobPatchParameter.withConstraints(JobConstraints constraints)
  name: withConstraints(JobConstraints constraints)
  nameWithType: JobPatchParameter.withConstraints(JobConstraints constraints)
  parameters:
  - description: <p>the constraints value to set </p>
    name: constraints
    type: <xref href="com.microsoft.azure.batch.protocol.models.JobConstraints?alt=com.microsoft.azure.batch.protocol.models.JobConstraints&text=JobConstraints" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the JobPatchParameter object itself. </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.JobPatchParameter?alt=com.microsoft.azure.batch.protocol.models.JobPatchParameter&text=JobPatchParameter" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set if omitted, the existing execution constraints are left unchanged.</p>

    <p></p>
  syntax: public JobPatchParameter withConstraints(JobConstraints constraints)
  uid: com.microsoft.azure.batch.protocol.models.JobPatchParameter.withConstraints(JobConstraints)
- fullName: com.microsoft.azure.batch.protocol.models.JobPatchParameter.withMetadata(List<MetadataItem> metadata)
  name: withMetadata(List<MetadataItem> metadata)
  nameWithType: JobPatchParameter.withMetadata(List<MetadataItem> metadata)
  parameters:
  - description: <p>the metadata value to set </p>
    name: metadata
    type: List&lt;<xref href="com.microsoft.azure.batch.protocol.models.MetadataItem?alt=com.microsoft.azure.batch.protocol.models.MetadataItem&text=MetadataItem" data-throw-if-not-resolved="False"/>&gt;
  returns:
    description: <p>the JobPatchParameter object itself. </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.JobPatchParameter?alt=com.microsoft.azure.batch.protocol.models.JobPatchParameter&text=JobPatchParameter" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set if omitted, the existing job metadata is left unchanged.</p>

    <p></p>
  syntax: public JobPatchParameter withMetadata(List<MetadataItem> metadata)
  uid: com.microsoft.azure.batch.protocol.models.JobPatchParameter.withMetadata(List<MetadataItem>)
- fullName: com.microsoft.azure.batch.protocol.models.JobPatchParameter.withOnAllTasksComplete(OnAllTasksComplete onAllTasksComplete)
  name: withOnAllTasksComplete(OnAllTasksComplete onAllTasksComplete)
  nameWithType: JobPatchParameter.withOnAllTasksComplete(OnAllTasksComplete onAllTasksComplete)
  parameters:
  - description: <p>the onAllTasksComplete value to set </p>
    name: onAllTasksComplete
    type: <xref href="com.microsoft.azure.batch.protocol.models.OnAllTasksComplete?alt=com.microsoft.azure.batch.protocol.models.OnAllTasksComplete&text=OnAllTasksComplete" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the JobPatchParameter object itself. </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.JobPatchParameter?alt=com.microsoft.azure.batch.protocol.models.JobPatchParameter&text=JobPatchParameter" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set if omitted, the completion behavior is left unchanged. You may not change the value from terminatejob to noaction - that is, once you have engaged automatic job termination, you cannot turn it off again. If you try to do this, the request fails with an 'invalid property value' error response; if you are calling the REST API directly, the HTTP status code is 400 (Bad Request). Possible values include: 'noAction', 'terminateJob'.</p>

    <p></p>
  syntax: public JobPatchParameter withOnAllTasksComplete(OnAllTasksComplete onAllTasksComplete)
  uid: com.microsoft.azure.batch.protocol.models.JobPatchParameter.withOnAllTasksComplete(OnAllTasksComplete)
- fullName: com.microsoft.azure.batch.protocol.models.JobPatchParameter.withPoolInfo(PoolInformation poolInfo)
  name: withPoolInfo(PoolInformation poolInfo)
  nameWithType: JobPatchParameter.withPoolInfo(PoolInformation poolInfo)
  parameters:
  - description: <p>the poolInfo value to set </p>
    name: poolInfo
    type: <xref href="com.microsoft.azure.batch.protocol.models.PoolInformation?alt=com.microsoft.azure.batch.protocol.models.PoolInformation&text=PoolInformation" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the JobPatchParameter object itself. </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.JobPatchParameter?alt=com.microsoft.azure.batch.protocol.models.JobPatchParameter&text=JobPatchParameter" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set you may change the pool for a job only when the job is disabled. The Patch Job call will fail if you include the poolInfo element and the job is not disabled. If you specify an autoPoolSpecification specification in the poolInfo, only the keepAlive property can be updated, and then only if the auto pool has a poolLifetimeOption of job. If omitted, the job continues to run on its current pool.</p>

    <p></p>
  syntax: public JobPatchParameter withPoolInfo(PoolInformation poolInfo)
  uid: com.microsoft.azure.batch.protocol.models.JobPatchParameter.withPoolInfo(PoolInformation)
- fullName: com.microsoft.azure.batch.protocol.models.JobPatchParameter.withPriority(Integer priority)
  name: withPriority(Integer priority)
  nameWithType: JobPatchParameter.withPriority(Integer priority)
  parameters:
  - description: <p>the priority value to set </p>
    name: priority
    type: <xref href="Integer?alt=Integer&text=Integer" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the JobPatchParameter object itself. </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.JobPatchParameter?alt=com.microsoft.azure.batch.protocol.models.JobPatchParameter&text=JobPatchParameter" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set priority values can range from -1000 to 1000, with -1000 being the lowest priority and 1000 being the highest priority. If omitted, the priority of the job is left unchanged.</p>

    <p></p>
  syntax: public JobPatchParameter withPriority(Integer priority)
  uid: com.microsoft.azure.batch.protocol.models.JobPatchParameter.withPriority(Integer)
nameWithType: JobPatchParameter
syntax: public class JobPatchParameter
type: class
uid: com.microsoft.azure.batch.protocol.models.JobPatchParameter
fullName: com.microsoft.azure.batch.protocol.models.JobPatchParameter
name: JobPatchParameter
package: com.microsoft.azure.batch.protocol.models
summary: <p>The set of changes to be made to a job. </p>
metadata: {}
