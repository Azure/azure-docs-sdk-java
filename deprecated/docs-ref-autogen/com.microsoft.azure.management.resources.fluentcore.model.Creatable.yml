### YamlMime:JavaType
inheritedMembers:
- com.microsoft.azure.management.resources.fluentcore.model.Indexable.key()
- com.microsoft.azure.management.resources.fluentcore.arm.models.HasName.name()
methods:
- fullName: com.microsoft.azure.management.resources.fluentcore.model.Creatable<T>.create()
  name: create()
  nameWithType: Creatable<T>.create()
  returns:
    description: <p>the create resource </p>
    type: <xref href="T?alt=T&text=T" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Execute the create request.</p>

    <p></p>
  syntax: public T create()
  uid: com.microsoft.azure.management.resources.fluentcore.model.Creatable.create()
- fullName: com.microsoft.azure.management.resources.fluentcore.model.Creatable<T>.createAsync()
  name: createAsync()
  nameWithType: Creatable<T>.createAsync()
  returns:
    description: <p>an observable of the request </p>
    type: Observable&lt;<xref href="com.microsoft.azure.management.resources.fluentcore.model.Indexable?alt=com.microsoft.azure.management.resources.fluentcore.model.Indexable&text=Indexable" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Puts the request into the queue and allow the HTTP client to execute it when system resources are available.</p>

    <p></p>
  syntax: public Observable<Indexable> createAsync()
  uid: com.microsoft.azure.management.resources.fluentcore.model.Creatable.createAsync()
- fullName: com.microsoft.azure.management.resources.fluentcore.model.Creatable<T>.createAsync(final ServiceCallback<T> callback)
  name: createAsync(final ServiceCallback<T> callback)
  nameWithType: Creatable<T>.createAsync(final ServiceCallback<T> callback)
  parameters:
  - description: <p>the callback to handle success and failure </p>
    name: callback
    type: <xref href="final+ServiceCallback%3CT%3E?alt=final+ServiceCallback%3CT%3E&text=final+ServiceCallback%3CT%3E" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>a handle to cancel the request </p>
    type: <xref href="ServiceFuture%3CT%3E?alt=ServiceFuture%3CT%3E&text=ServiceFuture%3CT%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Puts the request into the queue and allow the HTTP client to execute it when system resources are available.</p>

    <p></p>
  syntax: public ServiceFuture<T> createAsync(final ServiceCallback<T> callback)
  uid: com.microsoft.azure.management.resources.fluentcore.model.Creatable.createAsync(final ServiceCallback<T>)
nameWithType: Creatable<T>
syntax: public interface Creatable<T> extends Indexable,HasName
type: interface
typeParameters:
- description: <p>the fluent type of the resource to be created </p>
  name: T
uid: com.microsoft.azure.management.resources.fluentcore.model.Creatable
fullName: com.microsoft.azure.management.resources.fluentcore.model.Creatable<T>
name: Creatable<T>
package: com.microsoft.azure.management.resources.fluentcore.model
summary: >-
  <p>The final stage of the resource definition, at which it can be created using create().</p>

  <p></p>
metadata: {}
