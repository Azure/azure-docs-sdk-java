### YamlMime:JavaType
constructors:
- fullName: com.microsoft.azure.eventprocessorhost.PartitionManagerOptions.PartitionManagerOptions()
  name: PartitionManagerOptions()
  nameWithType: PartitionManagerOptions.PartitionManagerOptions()
  syntax: public PartitionManagerOptions()
  uid: com.microsoft.azure.eventprocessorhost.PartitionManagerOptions.PartitionManagerOptions()
fields:
- field:
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  fullName: com.microsoft.azure.eventprocessorhost.PartitionManagerOptions.checkpointTimeoutInSeconds
  name: checkpointTimeoutInSeconds
  nameWithType: PartitionManagerOptions.checkpointTimeoutInSeconds
  syntax: protected int checkpointTimeoutInSeconds= PartitionManagerOptions.DefaultCheckpointTimeoutInSeconds
  uid: com.microsoft.azure.eventprocessorhost.PartitionManagerOptions.checkpointTimeoutInSeconds
- field:
    type: <xref href="final+int?alt=final+int&text=final+int" data-throw-if-not-resolved="False"/>
  fullName: com.microsoft.azure.eventprocessorhost.PartitionManagerOptions.DefaultCheckpointTimeoutInSeconds
  name: DefaultCheckpointTimeoutInSeconds
  nameWithType: PartitionManagerOptions.DefaultCheckpointTimeoutInSeconds
  summary: <p>The default timeout for checkpoint operations. </p>
  syntax: public static final int DefaultCheckpointTimeoutInSeconds= 120
  uid: com.microsoft.azure.eventprocessorhost.PartitionManagerOptions.DefaultCheckpointTimeoutInSeconds
- field:
    type: <xref href="final+int?alt=final+int&text=final+int" data-throw-if-not-resolved="False"/>
  fullName: com.microsoft.azure.eventprocessorhost.PartitionManagerOptions.DefaultFastScanIntervalInSeconds
  name: DefaultFastScanIntervalInSeconds
  nameWithType: PartitionManagerOptions.DefaultFastScanIntervalInSeconds
  syntax: public static final int DefaultFastScanIntervalInSeconds= 3
  uid: com.microsoft.azure.eventprocessorhost.PartitionManagerOptions.DefaultFastScanIntervalInSeconds
- field:
    type: <xref href="final+int?alt=final+int&text=final+int" data-throw-if-not-resolved="False"/>
  fullName: com.microsoft.azure.eventprocessorhost.PartitionManagerOptions.DefaultLeaseDurationInSeconds
  name: DefaultLeaseDurationInSeconds
  nameWithType: PartitionManagerOptions.DefaultLeaseDurationInSeconds
  summary: <p>The default duration after which a partition lease will expire unless renewed. </p>
  syntax: public static final int DefaultLeaseDurationInSeconds= 30
  uid: com.microsoft.azure.eventprocessorhost.PartitionManagerOptions.DefaultLeaseDurationInSeconds
- field:
    type: <xref href="final+int?alt=final+int&text=final+int" data-throw-if-not-resolved="False"/>
  fullName: com.microsoft.azure.eventprocessorhost.PartitionManagerOptions.DefaultLeaseRenewIntervalInSeconds
  name: DefaultLeaseRenewIntervalInSeconds
  nameWithType: PartitionManagerOptions.DefaultLeaseRenewIntervalInSeconds
  summary: <p>The default duration between lease renewals. </p>
  syntax: public static final int DefaultLeaseRenewIntervalInSeconds= 10
  uid: com.microsoft.azure.eventprocessorhost.PartitionManagerOptions.DefaultLeaseRenewIntervalInSeconds
- field:
    type: <xref href="final+int?alt=final+int&text=final+int" data-throw-if-not-resolved="False"/>
  fullName: com.microsoft.azure.eventprocessorhost.PartitionManagerOptions.DefaultSlowScanIntervalInSeconds
  name: DefaultSlowScanIntervalInSeconds
  nameWithType: PartitionManagerOptions.DefaultSlowScanIntervalInSeconds
  syntax: public static final int DefaultSlowScanIntervalInSeconds= 5
  uid: com.microsoft.azure.eventprocessorhost.PartitionManagerOptions.DefaultSlowScanIntervalInSeconds
- field:
    type: <xref href="final+int?alt=final+int&text=final+int" data-throw-if-not-resolved="False"/>
  fullName: com.microsoft.azure.eventprocessorhost.PartitionManagerOptions.DefaultStartupScanDelayInSeconds
  name: DefaultStartupScanDelayInSeconds
  nameWithType: PartitionManagerOptions.DefaultStartupScanDelayInSeconds
  syntax: public static final int DefaultStartupScanDelayInSeconds= 30
  uid: com.microsoft.azure.eventprocessorhost.PartitionManagerOptions.DefaultStartupScanDelayInSeconds
- field:
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  fullName: com.microsoft.azure.eventprocessorhost.PartitionManagerOptions.fastScanIntervalInSeconds
  name: fastScanIntervalInSeconds
  nameWithType: PartitionManagerOptions.fastScanIntervalInSeconds
  syntax: protected int fastScanIntervalInSeconds= PartitionManagerOptions.DefaultFastScanIntervalInSeconds
  uid: com.microsoft.azure.eventprocessorhost.PartitionManagerOptions.fastScanIntervalInSeconds
- field:
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  fullName: com.microsoft.azure.eventprocessorhost.PartitionManagerOptions.leaseDurationInSeconds
  name: leaseDurationInSeconds
  nameWithType: PartitionManagerOptions.leaseDurationInSeconds
  syntax: protected int leaseDurationInSeconds= PartitionManagerOptions.DefaultLeaseDurationInSeconds
  uid: com.microsoft.azure.eventprocessorhost.PartitionManagerOptions.leaseDurationInSeconds
- field:
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  fullName: com.microsoft.azure.eventprocessorhost.PartitionManagerOptions.leaseRenewIntervalInSeconds
  name: leaseRenewIntervalInSeconds
  nameWithType: PartitionManagerOptions.leaseRenewIntervalInSeconds
  syntax: protected int leaseRenewIntervalInSeconds= PartitionManagerOptions.DefaultLeaseRenewIntervalInSeconds
  uid: com.microsoft.azure.eventprocessorhost.PartitionManagerOptions.leaseRenewIntervalInSeconds
- field:
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  fullName: com.microsoft.azure.eventprocessorhost.PartitionManagerOptions.slowScanIntervalInSeconds
  name: slowScanIntervalInSeconds
  nameWithType: PartitionManagerOptions.slowScanIntervalInSeconds
  syntax: protected int slowScanIntervalInSeconds= PartitionManagerOptions.DefaultSlowScanIntervalInSeconds
  uid: com.microsoft.azure.eventprocessorhost.PartitionManagerOptions.slowScanIntervalInSeconds
- field:
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  fullName: com.microsoft.azure.eventprocessorhost.PartitionManagerOptions.startupScanDelayInSeconds
  name: startupScanDelayInSeconds
  nameWithType: PartitionManagerOptions.startupScanDelayInSeconds
  syntax: protected int startupScanDelayInSeconds= PartitionManagerOptions.DefaultStartupScanDelayInSeconds
  uid: com.microsoft.azure.eventprocessorhost.PartitionManagerOptions.startupScanDelayInSeconds
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
methods:
- fullName: com.microsoft.azure.eventprocessorhost.PartitionManagerOptions.getCheckpointTimeoutInSeconds()
  name: getCheckpointTimeoutInSeconds()
  nameWithType: PartitionManagerOptions.getCheckpointTimeoutInSeconds()
  returns:
    description: <p>timeout for checkpoint operations </p>
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the timeout for checkpoint operations. Defaults to DefaultCheckpointTimeoutInSeconds.</p>

    <p></p>
  syntax: public int getCheckpointTimeoutInSeconds()
  uid: com.microsoft.azure.eventprocessorhost.PartitionManagerOptions.getCheckpointTimeoutInSeconds()
- fullName: com.microsoft.azure.eventprocessorhost.PartitionManagerOptions.getFastScanIntervalInSeconds()
  name: getFastScanIntervalInSeconds()
  nameWithType: PartitionManagerOptions.getFastScanIntervalInSeconds()
  returns:
    description: <p>interval time in seconds </p>
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>There are two possible interval times between scans for available partitions, fast and slow. The fast (short) interval is used after a scan in which lease stealing has occurred, to promote quicker rebalancing.</p>

    <p>Defaults to DefaultFastScanIntervalInSeconds.</p>

    <p></p>
  syntax: public int getFastScanIntervalInSeconds()
  uid: com.microsoft.azure.eventprocessorhost.PartitionManagerOptions.getFastScanIntervalInSeconds()
- fullName: com.microsoft.azure.eventprocessorhost.PartitionManagerOptions.getLeaseDurationInSeconds()
  name: getLeaseDurationInSeconds()
  nameWithType: PartitionManagerOptions.getLeaseDurationInSeconds()
  returns:
    description: <p>lease duration </p>
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the duration after which a partition lease will expire unless renewed. Defaults to DefaultLeaseDurationInSeconds.</p>

    <p></p>
  syntax: public int getLeaseDurationInSeconds()
  uid: com.microsoft.azure.eventprocessorhost.PartitionManagerOptions.getLeaseDurationInSeconds()
- fullName: com.microsoft.azure.eventprocessorhost.PartitionManagerOptions.getLeaseRenewIntervalInSeconds()
  name: getLeaseRenewIntervalInSeconds()
  nameWithType: PartitionManagerOptions.getLeaseRenewIntervalInSeconds()
  returns:
    description: <p>how often leases are renewed </p>
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the duration between lease renewals. Defaults to DefaultLeaseRenewIntervalInSeconds.</p>

    <p></p>
  syntax: public int getLeaseRenewIntervalInSeconds()
  uid: com.microsoft.azure.eventprocessorhost.PartitionManagerOptions.getLeaseRenewIntervalInSeconds()
- fullName: com.microsoft.azure.eventprocessorhost.PartitionManagerOptions.getSlowScanIntervalInSeconds()
  name: getSlowScanIntervalInSeconds()
  nameWithType: PartitionManagerOptions.getSlowScanIntervalInSeconds()
  returns:
    description: <p>interval time in seconds </p>
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>The slow (long) interval is used after a scan in which lease stealing did not occur, to reduce unnecessary scanning when the system is in steady state.</p>

    <p>Defaults to DefaultSlowScanIntervalInSeconds.</p>

    <p></p>
  syntax: public int getSlowScanIntervalInSeconds()
  uid: com.microsoft.azure.eventprocessorhost.PartitionManagerOptions.getSlowScanIntervalInSeconds()
- fullName: com.microsoft.azure.eventprocessorhost.PartitionManagerOptions.getStartupScanDelayInSeconds()
  name: getStartupScanDelayInSeconds()
  nameWithType: PartitionManagerOptions.getStartupScanDelayInSeconds()
  returns:
    description: <p>delay time in seconds </p>
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the delay time between the first scan for available partitions and the second. This is part of a startup optimization which allows individual hosts to become visible to other hosts, and thereby get a more accurate count of the number of hosts in the system, before they try to estimate how many partitions they should own.</p>

    <p>Defaults to DefaultStartupScanDelayInSeconds.</p>

    <p></p>
  syntax: public int getStartupScanDelayInSeconds()
  uid: com.microsoft.azure.eventprocessorhost.PartitionManagerOptions.getStartupScanDelayInSeconds()
- fullName: com.microsoft.azure.eventprocessorhost.PartitionManagerOptions.setCheckpointTimeoutInSeconds(int timeout)
  name: setCheckpointTimeoutInSeconds(int timeout)
  nameWithType: PartitionManagerOptions.setCheckpointTimeoutInSeconds(int timeout)
  parameters:
  - description: <p>new value for checkpoint timeout </p>
    name: timeout
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Sets the timeout for checkpoint operations. Must be greater than 0.</p>

    <p></p>
  syntax: public void setCheckpointTimeoutInSeconds(int timeout)
  uid: com.microsoft.azure.eventprocessorhost.PartitionManagerOptions.setCheckpointTimeoutInSeconds(int)
- fullName: com.microsoft.azure.eventprocessorhost.PartitionManagerOptions.setFastScanIntervalInSeconds(int interval)
  name: setFastScanIntervalInSeconds(int interval)
  nameWithType: PartitionManagerOptions.setFastScanIntervalInSeconds(int interval)
  parameters:
  - description: <p>new fast interval in seconds </p>
    name: interval
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Sets the time for fast interval.</p>

    <p></p>
  syntax: public void setFastScanIntervalInSeconds(int interval)
  uid: com.microsoft.azure.eventprocessorhost.PartitionManagerOptions.setFastScanIntervalInSeconds(int)
- fullName: com.microsoft.azure.eventprocessorhost.PartitionManagerOptions.setLeaseDurationInSeconds(int duration)
  name: setLeaseDurationInSeconds(int duration)
  nameWithType: PartitionManagerOptions.setLeaseDurationInSeconds(int duration)
  parameters:
  - description: <p>new value for lease duration </p>
    name: duration
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Sets the duration after which a partition lease will expire unless renewed. Must be greater than 0 and should not be less than the renew interval. When using the default, Azure Storage-based ILeaseManager, the duration cannot be greater than 60.</p>

    <p></p>
  syntax: public void setLeaseDurationInSeconds(int duration)
  uid: com.microsoft.azure.eventprocessorhost.PartitionManagerOptions.setLeaseDurationInSeconds(int)
- fullName: com.microsoft.azure.eventprocessorhost.PartitionManagerOptions.setLeaseRenewIntervalInSeconds(int interval)
  name: setLeaseRenewIntervalInSeconds(int interval)
  nameWithType: PartitionManagerOptions.setLeaseRenewIntervalInSeconds(int interval)
  parameters:
  - description: <p>new value for how often leases are renewed </p>
    name: interval
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Sets the duration between lease renewals. Must be greater than 0 and less than the current lease duration.</p>

    <p></p>
  syntax: public void setLeaseRenewIntervalInSeconds(int interval)
  uid: com.microsoft.azure.eventprocessorhost.PartitionManagerOptions.setLeaseRenewIntervalInSeconds(int)
- fullName: com.microsoft.azure.eventprocessorhost.PartitionManagerOptions.setSlowScanIntervalInSeconds(int interval)
  name: setSlowScanIntervalInSeconds(int interval)
  nameWithType: PartitionManagerOptions.setSlowScanIntervalInSeconds(int interval)
  parameters:
  - description: <p>new slow interval in seconds </p>
    name: interval
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Sets the time for slow interval.</p>

    <p></p>
  syntax: public void setSlowScanIntervalInSeconds(int interval)
  uid: com.microsoft.azure.eventprocessorhost.PartitionManagerOptions.setSlowScanIntervalInSeconds(int)
- fullName: com.microsoft.azure.eventprocessorhost.PartitionManagerOptions.setStartupScanDelayInSeconds(int delay)
  name: setStartupScanDelayInSeconds(int delay)
  nameWithType: PartitionManagerOptions.setStartupScanDelayInSeconds(int delay)
  parameters:
  - description: <p>new delay time in seconds </p>
    name: delay
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Sets the delay time in seconds between the first scan and the second.</p>

    <p></p>
  syntax: public void setStartupScanDelayInSeconds(int delay)
  uid: com.microsoft.azure.eventprocessorhost.PartitionManagerOptions.setStartupScanDelayInSeconds(int)
nameWithType: PartitionManagerOptions
syntax: public class PartitionManagerOptions
type: class
uid: com.microsoft.azure.eventprocessorhost.PartitionManagerOptions
fullName: com.microsoft.azure.eventprocessorhost.PartitionManagerOptions
name: PartitionManagerOptions
package: com.microsoft.azure.eventprocessorhost
metadata: {}
