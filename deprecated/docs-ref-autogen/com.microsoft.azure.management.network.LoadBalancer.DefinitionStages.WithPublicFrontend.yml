### YamlMime:JavaType
methods:
- fullName: com.microsoft.azure.management.network.LoadBalancer.DefinitionStages.WithPublicFrontend.definePublicFrontend(String name)
  name: definePublicFrontend(String name)
  nameWithType: LoadBalancer.DefinitionStages.WithPublicFrontend.definePublicFrontend(String name)
  parameters:
  - description: <p>the name for the frontend </p>
    name: name
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the first stage of a new frontend definition </p>
    type: LoadBalancerPublicFrontend.DefinitionStages.Blank&lt;<xref href="com.microsoft.azure.management.network.LoadBalancer.DefinitionStages.WithCreate?alt=com.microsoft.azure.management.network.LoadBalancer.DefinitionStages.WithCreate&text=LoadBalancer.DefinitionStages.WithCreate" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Begins an explicit definition of a new public (Internet-facing) load balancer frontend. </p>

    <p>(Note that frontends can also be created implicitly as part of a load balancing rule, inbound NAT rule or inbound NAT pool definition, by referencing an existing public IP address within those definitions.) </p>
  syntax: public LoadBalancerPublicFrontend.DefinitionStages.Blank<WithCreate> definePublicFrontend(String name)
  uid: com.microsoft.azure.management.network.LoadBalancer.DefinitionStages.WithPublicFrontend.definePublicFrontend(String)
nameWithType: LoadBalancer.DefinitionStages.WithPublicFrontend
syntax: public interface WithPublicFrontend
type: interface
uid: com.microsoft.azure.management.network.LoadBalancer.DefinitionStages.WithPublicFrontend
fullName: com.microsoft.azure.management.network.LoadBalancer.DefinitionStages.WithPublicFrontend
name: LoadBalancer.DefinitionStages.WithPublicFrontend
package: com.microsoft.azure.management.network
summary: <p>The stage of an Internet-facing load balancer definition allowing to define one or more public frontends. </p>
metadata: {}
