### YamlMime:ManagedReference
items:
- uid: "com.azure.messaging.eventhubs.implementation.EventHubAmqpConnection"
  id: "EventHubAmqpConnection"
  parent: "com.azure.messaging.eventhubs.implementation"
  children:
  - "com.azure.messaging.eventhubs.implementation.EventHubAmqpConnection.createReceiveLink(java.lang.String,java.lang.String,com.azure.messaging.eventhubs.models.EventPosition,com.azure.messaging.eventhubs.models.ReceiveOptions)"
  - "com.azure.messaging.eventhubs.implementation.EventHubAmqpConnection.createSendLink(java.lang.String,java.lang.String,com.azure.core.amqp.AmqpRetryOptions)"
  - "com.azure.messaging.eventhubs.implementation.EventHubAmqpConnection.getManagementNode()"
  langs:
  - "java"
  name: "EventHubAmqpConnection"
  nameWithType: "EventHubAmqpConnection"
  fullName: "com.azure.messaging.eventhubs.implementation.EventHubAmqpConnection"
  type: "Interface"
  package: "com.azure.messaging.eventhubs.implementation"
  summary: "A connection to a specific Event Hub resource in Azure Event Hubs."
  syntax:
    content: "public interface EventHubAmqpConnection extends AmqpConnection"
  implements:
  - "com.azure.core.amqp.AmqpConnection"
- uid: "com.azure.messaging.eventhubs.implementation.EventHubAmqpConnection.createReceiveLink(java.lang.String,java.lang.String,com.azure.messaging.eventhubs.models.EventPosition,com.azure.messaging.eventhubs.models.ReceiveOptions)"
  id: "createReceiveLink(java.lang.String,java.lang.String,com.azure.messaging.eventhubs.models.EventPosition,com.azure.messaging.eventhubs.models.ReceiveOptions)"
  parent: "com.azure.messaging.eventhubs.implementation.EventHubAmqpConnection"
  langs:
  - "java"
  name: "createReceiveLink(String linkName, String entityPath, EventPosition eventPosition, ReceiveOptions options)"
  nameWithType: "EventHubAmqpConnection.createReceiveLink(String linkName, String entityPath, EventPosition eventPosition, ReceiveOptions options)"
  fullName: "com.azure.messaging.eventhubs.implementation.EventHubAmqpConnection.createReceiveLink(String linkName, String entityPath, EventPosition eventPosition, ReceiveOptions options)"
  overload: "com.azure.messaging.eventhubs.implementation.EventHubAmqpConnection.createReceiveLink*"
  type: "Method"
  package: "com.azure.messaging.eventhubs.implementation"
  summary: "Creates or gets an existing receive link. The same link is returned if there is an existing receive link with the same `linkName`. Otherwise, a new link is created and returned."
  syntax:
    content: "public abstract Mono<AmqpReceiveLink> createReceiveLink(String linkName, String entityPath, EventPosition eventPosition, ReceiveOptions options)"
    parameters:
    - id: "linkName"
      type: "java.lang.String"
      description: "The name of the link."
    - id: "entityPath"
      type: "java.lang.String"
      description: "The remote address to connect to for the message broker."
    - id: "eventPosition"
      type: "com.azure.messaging.eventhubs.models.EventPosition"
      description: "Position to set the receive link to."
    - id: "options"
      type: "com.azure.messaging.eventhubs.models.ReceiveOptions"
      description: "Consumer options to use when creating the link."
    return:
      type: "reactor.core.publisher.Mono<com.azure.core.amqp.implementation.AmqpReceiveLink>"
      description: "A new or existing receive link that is connected to the given <code>entityPath</code>."
- uid: "com.azure.messaging.eventhubs.implementation.EventHubAmqpConnection.createSendLink(java.lang.String,java.lang.String,com.azure.core.amqp.AmqpRetryOptions)"
  id: "createSendLink(java.lang.String,java.lang.String,com.azure.core.amqp.AmqpRetryOptions)"
  parent: "com.azure.messaging.eventhubs.implementation.EventHubAmqpConnection"
  langs:
  - "java"
  name: "createSendLink(String linkName, String entityPath, AmqpRetryOptions retryOptions)"
  nameWithType: "EventHubAmqpConnection.createSendLink(String linkName, String entityPath, AmqpRetryOptions retryOptions)"
  fullName: "com.azure.messaging.eventhubs.implementation.EventHubAmqpConnection.createSendLink(String linkName, String entityPath, AmqpRetryOptions retryOptions)"
  overload: "com.azure.messaging.eventhubs.implementation.EventHubAmqpConnection.createSendLink*"
  type: "Method"
  package: "com.azure.messaging.eventhubs.implementation"
  summary: "Creates or gets a send link. The same link is returned if there is an existing send link with the same `linkName`. Otherwise, a new link is created and returned."
  syntax:
    content: "public abstract Mono<AmqpSendLink> createSendLink(String linkName, String entityPath, AmqpRetryOptions retryOptions)"
    parameters:
    - id: "linkName"
      type: "java.lang.String"
      description: "The name of the link."
    - id: "entityPath"
      type: "java.lang.String"
      description: "The remote address to connect to for the message broker."
    - id: "retryOptions"
      type: "com.azure.core.amqp.AmqpRetryOptions"
      description: "Options to use when creating the link."
    return:
      type: "reactor.core.publisher.Mono<com.azure.core.amqp.implementation.AmqpSendLink>"
      description: "A new or existing send link that is connected to the given <code>entityPath</code>."
- uid: "com.azure.messaging.eventhubs.implementation.EventHubAmqpConnection.getManagementNode()"
  id: "getManagementNode()"
  parent: "com.azure.messaging.eventhubs.implementation.EventHubAmqpConnection"
  langs:
  - "java"
  name: "getManagementNode()"
  nameWithType: "EventHubAmqpConnection.getManagementNode()"
  fullName: "com.azure.messaging.eventhubs.implementation.EventHubAmqpConnection.getManagementNode()"
  overload: "com.azure.messaging.eventhubs.implementation.EventHubAmqpConnection.getManagementNode*"
  type: "Method"
  package: "com.azure.messaging.eventhubs.implementation"
  summary: "Gets the management node for fetching metadata about the Event Hub and performing management operations."
  syntax:
    content: "public abstract Mono<EventHubManagementNode> getManagementNode()"
    return:
      type: "reactor.core.publisher.Mono<com.azure.messaging.eventhubs.implementation.EventHubManagementNode>"
      description: "A Mono that completes with a session to the Event Hub's management node."
references:
- uid: "reactor.core.publisher.Mono<com.azure.messaging.eventhubs.implementation.EventHubManagementNode>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.messaging.eventhubs.implementation.EventHubManagementNode"
    name: "EventHubManagementNode"
    fullName: "com.azure.messaging.eventhubs.implementation.EventHubManagementNode"
  - name: ">"
    fullName: ">"
- uid: "com.azure.messaging.eventhubs.implementation.EventHubAmqpConnection.getManagementNode*"
  name: "getManagementNode"
  nameWithType: "EventHubAmqpConnection.getManagementNode"
  fullName: "com.azure.messaging.eventhubs.implementation.EventHubAmqpConnection.getManagementNode"
  package: "com.azure.messaging.eventhubs.implementation"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "com.azure.core.amqp.AmqpRetryOptions"
  spec.java:
  - uid: "com.azure.core.amqp.AmqpRetryOptions"
    name: "AmqpRetryOptions"
    fullName: "com.azure.core.amqp.AmqpRetryOptions"
- uid: "reactor.core.publisher.Mono<com.azure.core.amqp.implementation.AmqpSendLink>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.core.amqp.implementation.AmqpSendLink"
    name: "AmqpSendLink"
    fullName: "com.azure.core.amqp.implementation.AmqpSendLink"
  - name: ">"
    fullName: ">"
- uid: "com.azure.messaging.eventhubs.implementation.EventHubAmqpConnection.createSendLink*"
  name: "createSendLink"
  nameWithType: "EventHubAmqpConnection.createSendLink"
  fullName: "com.azure.messaging.eventhubs.implementation.EventHubAmqpConnection.createSendLink"
  package: "com.azure.messaging.eventhubs.implementation"
- uid: "com.azure.messaging.eventhubs.models.EventPosition"
  name: "EventPosition"
  nameWithType: "EventPosition"
  fullName: "com.azure.messaging.eventhubs.models.EventPosition"
- uid: "com.azure.messaging.eventhubs.models.ReceiveOptions"
  name: "ReceiveOptions"
  nameWithType: "ReceiveOptions"
  fullName: "com.azure.messaging.eventhubs.models.ReceiveOptions"
- uid: "reactor.core.publisher.Mono<com.azure.core.amqp.implementation.AmqpReceiveLink>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.core.amqp.implementation.AmqpReceiveLink"
    name: "AmqpReceiveLink"
    fullName: "com.azure.core.amqp.implementation.AmqpReceiveLink"
  - name: ">"
    fullName: ">"
- uid: "com.azure.messaging.eventhubs.implementation.EventHubAmqpConnection.createReceiveLink*"
  name: "createReceiveLink"
  nameWithType: "EventHubAmqpConnection.createReceiveLink"
  fullName: "com.azure.messaging.eventhubs.implementation.EventHubAmqpConnection.createReceiveLink"
  package: "com.azure.messaging.eventhubs.implementation"
- uid: "com.azure.core.amqp.AmqpConnection"
  name: "AmqpConnection"
  nameWithType: "AmqpConnection"
  fullName: "com.azure.core.amqp.AmqpConnection"
- uid: "com.azure.messaging.eventhubs.implementation.EventHubManagementNode"
  name: "EventHubManagementNode"
  nameWithType: "EventHubManagementNode"
  fullName: "com.azure.messaging.eventhubs.implementation.EventHubManagementNode"
- uid: "reactor.core.publisher.Mono"
  name: "Mono"
  nameWithType: "Mono"
  fullName: "reactor.core.publisher.Mono"
- uid: "com.azure.core.amqp.implementation.AmqpSendLink"
  name: "AmqpSendLink"
  nameWithType: "AmqpSendLink"
  fullName: "com.azure.core.amqp.implementation.AmqpSendLink"
- uid: "com.azure.core.amqp.implementation.AmqpReceiveLink"
  name: "AmqpReceiveLink"
  nameWithType: "AmqpReceiveLink"
  fullName: "com.azure.core.amqp.implementation.AmqpReceiveLink"
