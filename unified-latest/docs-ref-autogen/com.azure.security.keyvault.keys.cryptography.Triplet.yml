### YamlMime:ManagedReference
items:
- uid: "com.azure.security.keyvault.keys.cryptography.Triplet"
  id: "Triplet"
  parent: "com.azure.security.keyvault.keys.cryptography"
  children:
  - "com.azure.security.keyvault.keys.cryptography.Triplet.Triplet(T,U,V)"
  - "com.azure.security.keyvault.keys.cryptography.Triplet.getLeft()"
  - "com.azure.security.keyvault.keys.cryptography.Triplet.getMiddle()"
  - "com.azure.security.keyvault.keys.cryptography.Triplet.getRight()"
  langs:
  - "java"
  name: "Triplet<T,U,V>"
  nameWithType: "Triplet<T,U,V>"
  fullName: "com.azure.security.keyvault.keys.cryptography.Triplet<T,U,V>"
  type: "Class"
  package: "com.azure.security.keyvault.keys.cryptography"
  syntax:
    content: " class Triplet<T,U,V>"
    typeParameters:
    - id: "T"
    - id: "U"
    - id: "V"
  inheritance:
  - "java.lang.Object"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.azure.security.keyvault.keys.cryptography.Triplet.Triplet(T,U,V)"
  id: "Triplet(T,U,V)"
  parent: "com.azure.security.keyvault.keys.cryptography.Triplet"
  langs:
  - "java"
  name: "Triplet(T left, U middle, V right)"
  nameWithType: "Triplet<T,U,V>.Triplet(T left, U middle, V right)"
  fullName: "com.azure.security.keyvault.keys.cryptography.Triplet<T,U,V>.Triplet(T left, U middle, V right)"
  overload: "com.azure.security.keyvault.keys.cryptography.Triplet.Triplet*"
  type: "Constructor"
  package: "com.azure.security.keyvault.keys.cryptography"
  syntax:
    content: " Triplet(T left, U middle, V right)"
    parameters:
    - id: "left"
      type: "T"
    - id: "middle"
      type: "U"
    - id: "right"
      type: "V"
- uid: "com.azure.security.keyvault.keys.cryptography.Triplet.getLeft()"
  id: "getLeft()"
  parent: "com.azure.security.keyvault.keys.cryptography.Triplet"
  langs:
  - "java"
  name: "getLeft()"
  nameWithType: "Triplet<T,U,V>.getLeft()"
  fullName: "com.azure.security.keyvault.keys.cryptography.Triplet<T,U,V>.getLeft()"
  overload: "com.azure.security.keyvault.keys.cryptography.Triplet.getLeft*"
  type: "Method"
  package: "com.azure.security.keyvault.keys.cryptography"
  syntax:
    content: "public T getLeft()"
    return:
      type: "T"
- uid: "com.azure.security.keyvault.keys.cryptography.Triplet.getMiddle()"
  id: "getMiddle()"
  parent: "com.azure.security.keyvault.keys.cryptography.Triplet"
  langs:
  - "java"
  name: "getMiddle()"
  nameWithType: "Triplet<T,U,V>.getMiddle()"
  fullName: "com.azure.security.keyvault.keys.cryptography.Triplet<T,U,V>.getMiddle()"
  overload: "com.azure.security.keyvault.keys.cryptography.Triplet.getMiddle*"
  type: "Method"
  package: "com.azure.security.keyvault.keys.cryptography"
  syntax:
    content: "public U getMiddle()"
    return:
      type: "U"
- uid: "com.azure.security.keyvault.keys.cryptography.Triplet.getRight()"
  id: "getRight()"
  parent: "com.azure.security.keyvault.keys.cryptography.Triplet"
  langs:
  - "java"
  name: "getRight()"
  nameWithType: "Triplet<T,U,V>.getRight()"
  fullName: "com.azure.security.keyvault.keys.cryptography.Triplet<T,U,V>.getRight()"
  overload: "com.azure.security.keyvault.keys.cryptography.Triplet.getRight*"
  type: "Method"
  package: "com.azure.security.keyvault.keys.cryptography"
  syntax:
    content: "public V getRight()"
    return:
      type: "V"
references:
- uid: "T"
  spec.java:
  - uid: "T"
    name: "T"
    fullName: "T"
- uid: "U"
  spec.java:
  - uid: "U"
    name: "U"
    fullName: "U"
- uid: "V"
  spec.java:
  - uid: "V"
    name: "V"
    fullName: "V"
- uid: "com.azure.security.keyvault.keys.cryptography.Triplet.Triplet*"
  name: "Triplet"
  nameWithType: "Triplet<T,U,V>.Triplet"
  fullName: "com.azure.security.keyvault.keys.cryptography.Triplet<T,U,V>.Triplet"
  package: "com.azure.security.keyvault.keys.cryptography"
- uid: "com.azure.security.keyvault.keys.cryptography.Triplet.getLeft*"
  name: "getLeft"
  nameWithType: "Triplet<T,U,V>.getLeft"
  fullName: "com.azure.security.keyvault.keys.cryptography.Triplet<T,U,V>.getLeft"
  package: "com.azure.security.keyvault.keys.cryptography"
- uid: "com.azure.security.keyvault.keys.cryptography.Triplet.getMiddle*"
  name: "getMiddle"
  nameWithType: "Triplet<T,U,V>.getMiddle"
  fullName: "com.azure.security.keyvault.keys.cryptography.Triplet<T,U,V>.getMiddle"
  package: "com.azure.security.keyvault.keys.cryptography"
- uid: "com.azure.security.keyvault.keys.cryptography.Triplet.getRight*"
  name: "getRight"
  nameWithType: "Triplet<T,U,V>.getRight"
  fullName: "com.azure.security.keyvault.keys.cryptography.Triplet<T,U,V>.getRight"
  package: "com.azure.security.keyvault.keys.cryptography"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
