### YamlMime:ManagedReference
items:
- uid: "com.azure.security.keyvault.keys.KeyClientBuilder"
  id: "KeyClientBuilder"
  parent: "com.azure.security.keyvault.keys"
  children:
  - "com.azure.security.keyvault.keys.KeyClientBuilder.KeyClientBuilder()"
  - "com.azure.security.keyvault.keys.KeyClientBuilder.addPolicy(com.azure.core.http.policy.HttpPipelinePolicy)"
  - "com.azure.security.keyvault.keys.KeyClientBuilder.buildAsyncClient()"
  - "com.azure.security.keyvault.keys.KeyClientBuilder.buildClient()"
  - "com.azure.security.keyvault.keys.KeyClientBuilder.configuration(com.azure.core.util.Configuration)"
  - "com.azure.security.keyvault.keys.KeyClientBuilder.credential(com.azure.core.credential.TokenCredential)"
  - "com.azure.security.keyvault.keys.KeyClientBuilder.httpClient(com.azure.core.http.HttpClient)"
  - "com.azure.security.keyvault.keys.KeyClientBuilder.httpLogOptions(com.azure.core.http.policy.HttpLogOptions)"
  - "com.azure.security.keyvault.keys.KeyClientBuilder.pipeline(com.azure.core.http.HttpPipeline)"
  - "com.azure.security.keyvault.keys.KeyClientBuilder.serviceVersion(com.azure.security.keyvault.keys.KeyServiceVersion)"
  - "com.azure.security.keyvault.keys.KeyClientBuilder.vaultUrl(java.lang.String)"
  langs:
  - "java"
  name: "KeyClientBuilder"
  nameWithType: "KeyClientBuilder"
  fullName: "com.azure.security.keyvault.keys.KeyClientBuilder"
  type: "Class"
  package: "com.azure.security.keyvault.keys"
  summary: "This class provides a fluent builder API to help aid the configuration and instantiation of the <xref uid=\"com.azure.security.keyvault.keys.KeyAsyncClient\" data-throw-if-not-resolved=\"false\">secret async client</xref> and <xref uid=\"com.azure.security.keyvault.keys.KeyClient\" data-throw-if-not-resolved=\"false\">secret sync client</xref>, by calling <xref uid=\"com.azure.security.keyvault.keys.KeyClientBuilder.buildAsyncClient()\" data-throw-if-not-resolved=\"false\">buildAsyncClient</xref> and <xref uid=\"com.azure.security.keyvault.keys.KeyClientBuilder.buildClient()\" data-throw-if-not-resolved=\"false\">buildClient</xref> respectively. It constructs an instance of the desired client.\n\nThe minimal configuration options required by <xref uid=\"com.azure.security.keyvault.keys.KeyClientBuilder\" data-throw-if-not-resolved=\"false\">KeyClientBuilder</xref> to build <xref uid=\"com.azure.security.keyvault.keys.KeyAsyncClient\" data-throw-if-not-resolved=\"false\">KeyAsyncClient</xref> are <xref uid=\"\" data-throw-if-not-resolved=\"false\">vaultUrl</xref> and <xref uid=\"\" data-throw-if-not-resolved=\"false\">credential</xref>.\n\n\\{@codesnippet com.azure.security.keyvault.keys.async.keyclient.instantiation\\}\n\nThe <xref uid=\"\" data-throw-if-not-resolved=\"false\">log detail level</xref>, multiple custom <xref uid=\"\" data-throw-if-not-resolved=\"false\">policies</xref> and custom <xref uid=\"\" data-throw-if-not-resolved=\"false\">http client</xref> can be optionally configured in the <xref uid=\"com.azure.security.keyvault.keys.KeyClientBuilder\" data-throw-if-not-resolved=\"false\">KeyClientBuilder</xref>.\n\n\\{@codesnippet com.azure.security.keyvault.keys.async.keyclient.withhttpclient.instantiation\\}\n\nAlternatively, custom <xref uid=\"\" data-throw-if-not-resolved=\"false\">http pipeline</xref> with custom <xref uid=\"com.azure.core.http.policy.HttpPipelinePolicy\" data-throw-if-not-resolved=\"false\">HttpPipelinePolicy</xref> policies and <xref uid=\"\" data-throw-if-not-resolved=\"false\">vaultUrl</xref> can be specified. It provides finer control over the construction of <xref uid=\"com.azure.security.keyvault.keys.KeyAsyncClient\" data-throw-if-not-resolved=\"false\">KeyAsyncClient</xref> and <xref uid=\"com.azure.security.keyvault.keys.KeyClient\" data-throw-if-not-resolved=\"false\">KeyClient</xref>\n\n\\{@codesnippet com.azure.security.keyvault.keys.async.keyclient.pipeline.instantiation\\}\n\nThe minimal configuration options required by <xref uid=\"com.azure.security.keyvault.keys.KeyClientBuilder\" data-throw-if-not-resolved=\"false\">secretClientBuilder</xref> to build <xref uid=\"com.azure.security.keyvault.keys.KeyClient\" data-throw-if-not-resolved=\"false\">KeyClient</xref> are <xref uid=\"\" data-throw-if-not-resolved=\"false\">vaultUrl</xref> and <xref uid=\"\" data-throw-if-not-resolved=\"false\">credential</xref>.\n\n\\{@codesnippet com.azure.security.keyvault.keys.keyclient.instantiation\\}"
  syntax:
    content: "public final class KeyClientBuilder"
  inheritance:
  - "java.lang.Object"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.azure.security.keyvault.keys.KeyClientBuilder.KeyClientBuilder()"
  id: "KeyClientBuilder()"
  parent: "com.azure.security.keyvault.keys.KeyClientBuilder"
  langs:
  - "java"
  name: "KeyClientBuilder()"
  nameWithType: "KeyClientBuilder.KeyClientBuilder()"
  fullName: "com.azure.security.keyvault.keys.KeyClientBuilder.KeyClientBuilder()"
  overload: "com.azure.security.keyvault.keys.KeyClientBuilder.KeyClientBuilder*"
  type: "Constructor"
  package: "com.azure.security.keyvault.keys"
  summary: "The constructor with defaults."
  syntax:
    content: "public KeyClientBuilder()"
- uid: "com.azure.security.keyvault.keys.KeyClientBuilder.addPolicy(com.azure.core.http.policy.HttpPipelinePolicy)"
  id: "addPolicy(com.azure.core.http.policy.HttpPipelinePolicy)"
  parent: "com.azure.security.keyvault.keys.KeyClientBuilder"
  langs:
  - "java"
  name: "addPolicy(HttpPipelinePolicy policy)"
  nameWithType: "KeyClientBuilder.addPolicy(HttpPipelinePolicy policy)"
  fullName: "com.azure.security.keyvault.keys.KeyClientBuilder.addPolicy(HttpPipelinePolicy policy)"
  overload: "com.azure.security.keyvault.keys.KeyClientBuilder.addPolicy*"
  type: "Method"
  package: "com.azure.security.keyvault.keys"
  summary: "Adds a policy to the set of existing policies that are executed after <xref uid=\"com.azure.security.keyvault.keys.KeyAsyncClient\" data-throw-if-not-resolved=\"false\">KeyAsyncClient</xref> and <xref uid=\"com.azure.security.keyvault.keys.KeyClient\" data-throw-if-not-resolved=\"false\">KeyClient</xref> required policies."
  syntax:
    content: "public KeyClientBuilder addPolicy(HttpPipelinePolicy policy)"
    parameters:
    - id: "policy"
      type: "com.azure.core.http.policy.HttpPipelinePolicy"
      description: "The <xref uid=\"com.azure.core.http.policy.HttpPipelinePolicy\" data-throw-if-not-resolved=\"false\">policy</xref> to be added."
    return:
      type: "com.azure.security.keyvault.keys.KeyClientBuilder"
      description: "the updated <xref uid=\"com.azure.security.keyvault.keys.KeyClientBuilder\" data-throw-if-not-resolved=\"false\">KeyClientBuilder</xref> object."
- uid: "com.azure.security.keyvault.keys.KeyClientBuilder.buildAsyncClient()"
  id: "buildAsyncClient()"
  parent: "com.azure.security.keyvault.keys.KeyClientBuilder"
  langs:
  - "java"
  name: "buildAsyncClient()"
  nameWithType: "KeyClientBuilder.buildAsyncClient()"
  fullName: "com.azure.security.keyvault.keys.KeyClientBuilder.buildAsyncClient()"
  overload: "com.azure.security.keyvault.keys.KeyClientBuilder.buildAsyncClient*"
  type: "Method"
  package: "com.azure.security.keyvault.keys"
  summary: "Creates a <xref uid=\"com.azure.security.keyvault.keys.KeyAsyncClient\" data-throw-if-not-resolved=\"false\">KeyAsyncClient</xref> based on options set in the builder. Every time `buildAsyncClient()` is called, a new instance of <xref uid=\"com.azure.security.keyvault.keys.KeyAsyncClient\" data-throw-if-not-resolved=\"false\">KeyAsyncClient</xref> is created.\n\nIf <xref uid=\"com.azure.security.keyvault.keys.KeyClientBuilder.pipeline(com.azure.core.http.HttpPipeline)\" data-throw-if-not-resolved=\"false\">pipeline</xref> is set, then the `pipeline` and <xref uid=\"com.azure.security.keyvault.keys.KeyClientBuilder.vaultUrl(java.lang.String)\" data-throw-if-not-resolved=\"false\">vaultUrl</xref> are used to create the <xref uid=\"com.azure.security.keyvault.keys.KeyClientBuilder\" data-throw-if-not-resolved=\"false\">client</xref>. All other builder settings are ignored. If `pipeline` is not set, then <xref uid=\"KeyClientBuilder#credential(TokenCredential)\" data-throw-if-not-resolved=\"false\">key vault credential and {@link KeyClientBuilder#vaultUrl(String)}\n key vault url are required to build the {@link KeyAsyncClient client}.</xref>"
  syntax:
    content: "public KeyAsyncClient buildAsyncClient()"
    return:
      type: "com.azure.security.keyvault.keys.KeyAsyncClient"
      description: "A <xref uid=\"com.azure.security.keyvault.keys.KeyAsyncClient\" data-throw-if-not-resolved=\"false\">KeyAsyncClient</xref> with the options set from the builder."
- uid: "com.azure.security.keyvault.keys.KeyClientBuilder.buildClient()"
  id: "buildClient()"
  parent: "com.azure.security.keyvault.keys.KeyClientBuilder"
  langs:
  - "java"
  name: "buildClient()"
  nameWithType: "KeyClientBuilder.buildClient()"
  fullName: "com.azure.security.keyvault.keys.KeyClientBuilder.buildClient()"
  overload: "com.azure.security.keyvault.keys.KeyClientBuilder.buildClient*"
  type: "Method"
  package: "com.azure.security.keyvault.keys"
  summary: "Creates a <xref uid=\"com.azure.security.keyvault.keys.KeyClient\" data-throw-if-not-resolved=\"false\">KeyClient</xref> based on options set in the builder. Every time `buildClient()` is called, a new instance of <xref uid=\"com.azure.security.keyvault.keys.KeyClient\" data-throw-if-not-resolved=\"false\">KeyClient</xref> is created.\n\nIf <xref uid=\"com.azure.security.keyvault.keys.KeyClientBuilder.pipeline(com.azure.core.http.HttpPipeline)\" data-throw-if-not-resolved=\"false\">pipeline</xref> is set, then the `pipeline` and <xref uid=\"com.azure.security.keyvault.keys.KeyClientBuilder.vaultUrl(java.lang.String)\" data-throw-if-not-resolved=\"false\">vaultUrl</xref> are used to create the <xref uid=\"com.azure.security.keyvault.keys.KeyClientBuilder\" data-throw-if-not-resolved=\"false\">client</xref>. All other builder settings are ignored. If `pipeline` is not set, then <xref uid=\"com.azure.security.keyvault.keys.KeyClientBuilder.credential(com.azure.core.credential.TokenCredential)\" data-throw-if-not-resolved=\"false\">key vault credential</xref> and <xref uid=\"com.azure.security.keyvault.keys.KeyClientBuilder.vaultUrl(java.lang.String)\" data-throw-if-not-resolved=\"false\">key vault url</xref> are required to build the <xref uid=\"com.azure.security.keyvault.keys.KeyClient\" data-throw-if-not-resolved=\"false\">client</xref>."
  syntax:
    content: "public KeyClient buildClient()"
    return:
      type: "com.azure.security.keyvault.keys.KeyClient"
      description: "A <xref uid=\"com.azure.security.keyvault.keys.KeyClient\" data-throw-if-not-resolved=\"false\">KeyClient</xref> with the options set from the builder."
- uid: "com.azure.security.keyvault.keys.KeyClientBuilder.configuration(com.azure.core.util.Configuration)"
  id: "configuration(com.azure.core.util.Configuration)"
  parent: "com.azure.security.keyvault.keys.KeyClientBuilder"
  langs:
  - "java"
  name: "configuration(Configuration configuration)"
  nameWithType: "KeyClientBuilder.configuration(Configuration configuration)"
  fullName: "com.azure.security.keyvault.keys.KeyClientBuilder.configuration(Configuration configuration)"
  overload: "com.azure.security.keyvault.keys.KeyClientBuilder.configuration*"
  type: "Method"
  package: "com.azure.security.keyvault.keys"
  summary: "Sets the configuration store that is used during construction of the service client. The default configuration store is a clone of the <xref uid=\"Configuration#getGlobalConfiguration()\" data-throw-if-not-resolved=\"false\">global\n configuration store</xref>, use <xref uid=\"\" data-throw-if-not-resolved=\"false\">Configuration#NONE</xref> to bypass using configuration settings during construction."
  syntax:
    content: "public KeyClientBuilder configuration(Configuration configuration)"
    parameters:
    - id: "configuration"
      type: "com.azure.core.util.Configuration"
      description: "The configuration store used to"
    return:
      type: "com.azure.security.keyvault.keys.KeyClientBuilder"
      description: "The updated KeyClientBuilder object."
- uid: "com.azure.security.keyvault.keys.KeyClientBuilder.credential(com.azure.core.credential.TokenCredential)"
  id: "credential(com.azure.core.credential.TokenCredential)"
  parent: "com.azure.security.keyvault.keys.KeyClientBuilder"
  langs:
  - "java"
  name: "credential(TokenCredential credential)"
  nameWithType: "KeyClientBuilder.credential(TokenCredential credential)"
  fullName: "com.azure.security.keyvault.keys.KeyClientBuilder.credential(TokenCredential credential)"
  overload: "com.azure.security.keyvault.keys.KeyClientBuilder.credential*"
  type: "Method"
  package: "com.azure.security.keyvault.keys"
  summary: "Sets the credential to use when authenticating HTTP requests."
  syntax:
    content: "public KeyClientBuilder credential(TokenCredential credential)"
    parameters:
    - id: "credential"
      type: "com.azure.core.credential.TokenCredential"
      description: "The credential to use for authenticating HTTP requests."
    return:
      type: "com.azure.security.keyvault.keys.KeyClientBuilder"
      description: "the updated <xref uid=\"com.azure.security.keyvault.keys.KeyClientBuilder\" data-throw-if-not-resolved=\"false\">KeyClientBuilder</xref> object."
- uid: "com.azure.security.keyvault.keys.KeyClientBuilder.httpClient(com.azure.core.http.HttpClient)"
  id: "httpClient(com.azure.core.http.HttpClient)"
  parent: "com.azure.security.keyvault.keys.KeyClientBuilder"
  langs:
  - "java"
  name: "httpClient(HttpClient client)"
  nameWithType: "KeyClientBuilder.httpClient(HttpClient client)"
  fullName: "com.azure.security.keyvault.keys.KeyClientBuilder.httpClient(HttpClient client)"
  overload: "com.azure.security.keyvault.keys.KeyClientBuilder.httpClient*"
  type: "Method"
  package: "com.azure.security.keyvault.keys"
  summary: "Sets the HTTP client to use for sending and receiving requests to and from the service."
  syntax:
    content: "public KeyClientBuilder httpClient(HttpClient client)"
    parameters:
    - id: "client"
      type: "com.azure.core.http.HttpClient"
      description: "The HTTP client to use for requests."
    return:
      type: "com.azure.security.keyvault.keys.KeyClientBuilder"
      description: "the updated <xref uid=\"com.azure.security.keyvault.keys.KeyClientBuilder\" data-throw-if-not-resolved=\"false\">KeyClientBuilder</xref> object."
- uid: "com.azure.security.keyvault.keys.KeyClientBuilder.httpLogOptions(com.azure.core.http.policy.HttpLogOptions)"
  id: "httpLogOptions(com.azure.core.http.policy.HttpLogOptions)"
  parent: "com.azure.security.keyvault.keys.KeyClientBuilder"
  langs:
  - "java"
  name: "httpLogOptions(HttpLogOptions logOptions)"
  nameWithType: "KeyClientBuilder.httpLogOptions(HttpLogOptions logOptions)"
  fullName: "com.azure.security.keyvault.keys.KeyClientBuilder.httpLogOptions(HttpLogOptions logOptions)"
  overload: "com.azure.security.keyvault.keys.KeyClientBuilder.httpLogOptions*"
  type: "Method"
  package: "com.azure.security.keyvault.keys"
  summary: "Sets the logging configuration for HTTP requests and responses.\n\nIf logLevel is not provided, default value of <xref uid=\"\" data-throw-if-not-resolved=\"false\">HttpLogDetailLevel#NONE</xref> is set."
  syntax:
    content: "public KeyClientBuilder httpLogOptions(HttpLogOptions logOptions)"
    parameters:
    - id: "logOptions"
      type: "com.azure.core.http.policy.HttpLogOptions"
      description: "The logging configuration to use when sending and receiving HTTP requests/responses."
    return:
      type: "com.azure.security.keyvault.keys.KeyClientBuilder"
      description: "the updated <xref uid=\"com.azure.security.keyvault.keys.KeyClientBuilder\" data-throw-if-not-resolved=\"false\">KeyClientBuilder</xref> object."
- uid: "com.azure.security.keyvault.keys.KeyClientBuilder.pipeline(com.azure.core.http.HttpPipeline)"
  id: "pipeline(com.azure.core.http.HttpPipeline)"
  parent: "com.azure.security.keyvault.keys.KeyClientBuilder"
  langs:
  - "java"
  name: "pipeline(HttpPipeline pipeline)"
  nameWithType: "KeyClientBuilder.pipeline(HttpPipeline pipeline)"
  fullName: "com.azure.security.keyvault.keys.KeyClientBuilder.pipeline(HttpPipeline pipeline)"
  overload: "com.azure.security.keyvault.keys.KeyClientBuilder.pipeline*"
  type: "Method"
  package: "com.azure.security.keyvault.keys"
  summary: "Sets the HTTP pipeline to use for the service client. If `pipeline` is set, all other settings are ignored, aside from <xref uid=\"com.azure.security.keyvault.keys.KeyClientBuilder.vaultUrl(java.lang.String)\" data-throw-if-not-resolved=\"false\">vaultUrl</xref> to build <xref uid=\"com.azure.security.keyvault.keys.KeyClient\" data-throw-if-not-resolved=\"false\">KeyClient</xref> or <xref uid=\"com.azure.security.keyvault.keys.KeyAsyncClient\" data-throw-if-not-resolved=\"false\">KeyAsyncClient</xref>."
  syntax:
    content: "public KeyClientBuilder pipeline(HttpPipeline pipeline)"
    parameters:
    - id: "pipeline"
      type: "com.azure.core.http.HttpPipeline"
      description: "The HTTP pipeline to use for sending service requests and receiving responses."
    return:
      type: "com.azure.security.keyvault.keys.KeyClientBuilder"
      description: "the updated <xref uid=\"com.azure.security.keyvault.keys.KeyClientBuilder\" data-throw-if-not-resolved=\"false\">KeyClientBuilder</xref> object."
- uid: "com.azure.security.keyvault.keys.KeyClientBuilder.serviceVersion(com.azure.security.keyvault.keys.KeyServiceVersion)"
  id: "serviceVersion(com.azure.security.keyvault.keys.KeyServiceVersion)"
  parent: "com.azure.security.keyvault.keys.KeyClientBuilder"
  langs:
  - "java"
  name: "serviceVersion(KeyServiceVersion version)"
  nameWithType: "KeyClientBuilder.serviceVersion(KeyServiceVersion version)"
  fullName: "com.azure.security.keyvault.keys.KeyClientBuilder.serviceVersion(KeyServiceVersion version)"
  overload: "com.azure.security.keyvault.keys.KeyClientBuilder.serviceVersion*"
  type: "Method"
  package: "com.azure.security.keyvault.keys"
  summary: "Sets the <xref uid=\"com.azure.security.keyvault.keys.KeyServiceVersion\" data-throw-if-not-resolved=\"false\">KeyServiceVersion</xref> that is used when making API requests.\n\nIf a service version is not provided, the service version that will be used will be the latest known service version based on the version of the client library being used. If no service version is specified, updating to a newer version the client library will have the result of potentially moving to a newer service version."
  syntax:
    content: "public KeyClientBuilder serviceVersion(KeyServiceVersion version)"
    parameters:
    - id: "version"
      type: "com.azure.security.keyvault.keys.KeyServiceVersion"
      description: "<xref uid=\"com.azure.security.keyvault.keys.KeyServiceVersion\" data-throw-if-not-resolved=\"false\">KeyServiceVersion</xref> of the service to be used when making requests."
    return:
      type: "com.azure.security.keyvault.keys.KeyClientBuilder"
      description: "The updated KeyClientBuilder object."
- uid: "com.azure.security.keyvault.keys.KeyClientBuilder.vaultUrl(java.lang.String)"
  id: "vaultUrl(java.lang.String)"
  parent: "com.azure.security.keyvault.keys.KeyClientBuilder"
  langs:
  - "java"
  name: "vaultUrl(String vaultUrl)"
  nameWithType: "KeyClientBuilder.vaultUrl(String vaultUrl)"
  fullName: "com.azure.security.keyvault.keys.KeyClientBuilder.vaultUrl(String vaultUrl)"
  overload: "com.azure.security.keyvault.keys.KeyClientBuilder.vaultUrl*"
  type: "Method"
  package: "com.azure.security.keyvault.keys"
  summary: "Sets the vault url to send HTTP requests to."
  syntax:
    content: "public KeyClientBuilder vaultUrl(String vaultUrl)"
    parameters:
    - id: "vaultUrl"
      type: "java.lang.String"
      description: "The vault url is used as destination on Azure to send requests to."
    return:
      type: "com.azure.security.keyvault.keys.KeyClientBuilder"
      description: "the updated ServiceClientBuilder object."
references:
- uid: "com.azure.security.keyvault.keys.KeyClientBuilder.KeyClientBuilder*"
  name: "KeyClientBuilder"
  nameWithType: "KeyClientBuilder.KeyClientBuilder"
  fullName: "com.azure.security.keyvault.keys.KeyClientBuilder.KeyClientBuilder"
  package: "com.azure.security.keyvault.keys"
- uid: "com.azure.security.keyvault.keys.KeyClient"
  name: "KeyClient"
  nameWithType: "KeyClient"
  fullName: "com.azure.security.keyvault.keys.KeyClient"
- uid: "com.azure.security.keyvault.keys.KeyClientBuilder.buildClient*"
  name: "buildClient"
  nameWithType: "KeyClientBuilder.buildClient"
  fullName: "com.azure.security.keyvault.keys.KeyClientBuilder.buildClient"
  package: "com.azure.security.keyvault.keys"
- uid: "com.azure.security.keyvault.keys.KeyAsyncClient"
  name: "KeyAsyncClient"
  nameWithType: "KeyAsyncClient"
  fullName: "com.azure.security.keyvault.keys.KeyAsyncClient"
- uid: "com.azure.security.keyvault.keys.KeyClientBuilder.buildAsyncClient*"
  name: "buildAsyncClient"
  nameWithType: "KeyClientBuilder.buildAsyncClient"
  fullName: "com.azure.security.keyvault.keys.KeyClientBuilder.buildAsyncClient"
  package: "com.azure.security.keyvault.keys"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "com.azure.security.keyvault.keys.KeyClientBuilder.vaultUrl*"
  name: "vaultUrl"
  nameWithType: "KeyClientBuilder.vaultUrl"
  fullName: "com.azure.security.keyvault.keys.KeyClientBuilder.vaultUrl"
  package: "com.azure.security.keyvault.keys"
- uid: "com.azure.core.credential.TokenCredential"
  spec.java:
  - uid: "com.azure.core.credential.TokenCredential"
    name: "TokenCredential"
    fullName: "com.azure.core.credential.TokenCredential"
- uid: "com.azure.security.keyvault.keys.KeyClientBuilder.credential*"
  name: "credential"
  nameWithType: "KeyClientBuilder.credential"
  fullName: "com.azure.security.keyvault.keys.KeyClientBuilder.credential"
  package: "com.azure.security.keyvault.keys"
- uid: "com.azure.core.http.policy.HttpLogOptions"
  spec.java:
  - uid: "com.azure.core.http.policy.HttpLogOptions"
    name: "HttpLogOptions"
    fullName: "com.azure.core.http.policy.HttpLogOptions"
- uid: "com.azure.security.keyvault.keys.KeyClientBuilder.httpLogOptions*"
  name: "httpLogOptions"
  nameWithType: "KeyClientBuilder.httpLogOptions"
  fullName: "com.azure.security.keyvault.keys.KeyClientBuilder.httpLogOptions"
  package: "com.azure.security.keyvault.keys"
- uid: "com.azure.core.http.policy.HttpPipelinePolicy"
  spec.java:
  - uid: "com.azure.core.http.policy.HttpPipelinePolicy"
    name: "HttpPipelinePolicy"
    fullName: "com.azure.core.http.policy.HttpPipelinePolicy"
- uid: "com.azure.security.keyvault.keys.KeyClientBuilder.addPolicy*"
  name: "addPolicy"
  nameWithType: "KeyClientBuilder.addPolicy"
  fullName: "com.azure.security.keyvault.keys.KeyClientBuilder.addPolicy"
  package: "com.azure.security.keyvault.keys"
- uid: "com.azure.core.http.HttpClient"
  spec.java:
  - uid: "com.azure.core.http.HttpClient"
    name: "HttpClient"
    fullName: "com.azure.core.http.HttpClient"
- uid: "com.azure.security.keyvault.keys.KeyClientBuilder.httpClient*"
  name: "httpClient"
  nameWithType: "KeyClientBuilder.httpClient"
  fullName: "com.azure.security.keyvault.keys.KeyClientBuilder.httpClient"
  package: "com.azure.security.keyvault.keys"
- uid: "com.azure.core.http.HttpPipeline"
  spec.java:
  - uid: "com.azure.core.http.HttpPipeline"
    name: "HttpPipeline"
    fullName: "com.azure.core.http.HttpPipeline"
- uid: "com.azure.security.keyvault.keys.KeyClientBuilder.pipeline*"
  name: "pipeline"
  nameWithType: "KeyClientBuilder.pipeline"
  fullName: "com.azure.security.keyvault.keys.KeyClientBuilder.pipeline"
  package: "com.azure.security.keyvault.keys"
- uid: "com.azure.security.keyvault.keys.KeyServiceVersion"
  name: "KeyServiceVersion"
  nameWithType: "KeyServiceVersion"
  fullName: "com.azure.security.keyvault.keys.KeyServiceVersion"
- uid: "com.azure.security.keyvault.keys.KeyClientBuilder.serviceVersion*"
  name: "serviceVersion"
  nameWithType: "KeyClientBuilder.serviceVersion"
  fullName: "com.azure.security.keyvault.keys.KeyClientBuilder.serviceVersion"
  package: "com.azure.security.keyvault.keys"
- uid: "com.azure.core.util.Configuration"
  spec.java:
  - uid: "com.azure.core.util.Configuration"
    name: "Configuration"
    fullName: "com.azure.core.util.Configuration"
- uid: "com.azure.security.keyvault.keys.KeyClientBuilder.configuration*"
  name: "configuration"
  nameWithType: "KeyClientBuilder.configuration"
  fullName: "com.azure.security.keyvault.keys.KeyClientBuilder.configuration"
  package: "com.azure.security.keyvault.keys"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
