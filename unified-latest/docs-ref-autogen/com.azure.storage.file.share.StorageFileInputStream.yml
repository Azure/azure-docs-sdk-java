### YamlMime:ManagedReference
items:
- uid: "com.azure.storage.file.share.StorageFileInputStream"
  id: "StorageFileInputStream"
  parent: "com.azure.storage.file.share"
  children:
  - "com.azure.storage.file.share.StorageFileInputStream.StorageFileInputStream(com.azure.storage.file.share.ShareFileAsyncClient)"
  - "com.azure.storage.file.share.StorageFileInputStream.StorageFileInputStream(com.azure.storage.file.share.ShareFileAsyncClient,long,java.lang.Long)"
  - "com.azure.storage.file.share.StorageFileInputStream.dispatchRead(int,long)"
  langs:
  - "java"
  name: "StorageFileInputStream"
  nameWithType: "StorageFileInputStream"
  fullName: "com.azure.storage.file.share.StorageFileInputStream"
  type: "Class"
  package: "com.azure.storage.file.share"
  summary: "Provides an input stream to read a given storage file resource."
  syntax:
    content: "public class StorageFileInputStream extends StorageInputStream"
  inheritance:
  - "java.lang.Object"
  - "java.io.InputStream"
  - "com.azure.storage.common.StorageInputStream"
  inheritedMembers:
  - "com.azure.storage.common.StorageInputStream.available()"
  - "com.azure.storage.common.StorageInputStream.close()"
  - "com.azure.storage.common.StorageInputStream.dispatchRead(int,long)"
  - "com.azure.storage.common.StorageInputStream.mark(int)"
  - "com.azure.storage.common.StorageInputStream.markSupported()"
  - "com.azure.storage.common.StorageInputStream.read()"
  - "com.azure.storage.common.StorageInputStream.read(byte[])"
  - "com.azure.storage.common.StorageInputStream.read(byte[],int,int)"
  - "com.azure.storage.common.StorageInputStream.reset()"
  - "com.azure.storage.common.StorageInputStream.skip(long)"
  - "java.io.InputStream.nullInputStream()"
  - "java.io.InputStream.readAllBytes()"
  - "java.io.InputStream.readNBytes(byte[],int,int)"
  - "java.io.InputStream.readNBytes(int)"
  - "java.io.InputStream.transferTo(java.io.OutputStream)"
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.azure.storage.file.share.StorageFileInputStream.StorageFileInputStream(com.azure.storage.file.share.ShareFileAsyncClient)"
  id: "StorageFileInputStream(com.azure.storage.file.share.ShareFileAsyncClient)"
  parent: "com.azure.storage.file.share.StorageFileInputStream"
  langs:
  - "java"
  name: "StorageFileInputStream(ShareFileAsyncClient shareFileAsyncClient)"
  nameWithType: "StorageFileInputStream.StorageFileInputStream(ShareFileAsyncClient shareFileAsyncClient)"
  fullName: "com.azure.storage.file.share.StorageFileInputStream.StorageFileInputStream(ShareFileAsyncClient shareFileAsyncClient)"
  overload: "com.azure.storage.file.share.StorageFileInputStream.StorageFileInputStream*"
  type: "Constructor"
  package: "com.azure.storage.file.share"
  summary: "Initializes a new instance of the StorageFileInputStream class."
  syntax:
    content: " StorageFileInputStream(ShareFileAsyncClient shareFileAsyncClient)"
    parameters:
    - id: "shareFileAsyncClient"
      type: "com.azure.storage.file.share.ShareFileAsyncClient"
      description: "A <xref uid=\"com.azure.storage.file.share.ShareFileClient\" data-throw-if-not-resolved=\"false\">ShareFileClient</xref> object which represents the blob that this stream is\n associated with."
- uid: "com.azure.storage.file.share.StorageFileInputStream.StorageFileInputStream(com.azure.storage.file.share.ShareFileAsyncClient,long,java.lang.Long)"
  id: "StorageFileInputStream(com.azure.storage.file.share.ShareFileAsyncClient,long,java.lang.Long)"
  parent: "com.azure.storage.file.share.StorageFileInputStream"
  langs:
  - "java"
  name: "StorageFileInputStream(ShareFileAsyncClient shareFileAsyncClient, long fileRangeOffset, Long fileRangeLength)"
  nameWithType: "StorageFileInputStream.StorageFileInputStream(ShareFileAsyncClient shareFileAsyncClient, long fileRangeOffset, Long fileRangeLength)"
  fullName: "com.azure.storage.file.share.StorageFileInputStream.StorageFileInputStream(ShareFileAsyncClient shareFileAsyncClient, long fileRangeOffset, Long fileRangeLength)"
  overload: "com.azure.storage.file.share.StorageFileInputStream.StorageFileInputStream*"
  type: "Constructor"
  package: "com.azure.storage.file.share"
  summary: "Initializes a new instance of the StorageFileInputStream class. Note that if `fileRangeOffset` is not `0` or `fileRangeLength` is not `null`, there will be no content MD5 verification."
  syntax:
    content: " StorageFileInputStream(ShareFileAsyncClient shareFileAsyncClient, long fileRangeOffset, Long fileRangeLength)"
    parameters:
    - id: "shareFileAsyncClient"
      type: "com.azure.storage.file.share.ShareFileAsyncClient"
      description: "A <xref uid=\"com.azure.storage.file.share.ShareFileAsyncClient\" data-throw-if-not-resolved=\"false\">ShareFileAsyncClient</xref> object which represents the blob that this stream is\n associated with."
    - id: "fileRangeOffset"
      type: "long"
      description: "The offset of file range data to begin stream."
    - id: "fileRangeLength"
      type: "java.lang.Long"
      description: "How much data the stream should return after fileRangeOffset."
- uid: "com.azure.storage.file.share.StorageFileInputStream.dispatchRead(int,long)"
  id: "dispatchRead(int,long)"
  parent: "com.azure.storage.file.share.StorageFileInputStream"
  langs:
  - "java"
  name: "dispatchRead(int readLength, long offset)"
  nameWithType: "StorageFileInputStream.dispatchRead(int readLength, long offset)"
  fullName: "com.azure.storage.file.share.StorageFileInputStream.dispatchRead(int readLength, long offset)"
  overload: "com.azure.storage.file.share.StorageFileInputStream.dispatchRead*"
  type: "Method"
  package: "com.azure.storage.file.share"
  summary: "Dispatches a read operation of N bytes."
  syntax:
    content: "protected synchronized ByteBuffer dispatchRead(int readLength, long offset)"
    parameters:
    - id: "readLength"
      type: "int"
      description: "An <code>int</code> which represents the number of bytes to read."
    - id: "offset"
      type: "long"
    return:
      type: "java.nio.ByteBuffer"
references:
- uid: "com.azure.storage.file.share.ShareFileAsyncClient"
  name: "ShareFileAsyncClient"
  nameWithType: "ShareFileAsyncClient"
  fullName: "com.azure.storage.file.share.ShareFileAsyncClient"
- uid: "com.azure.storage.file.share.StorageFileInputStream.StorageFileInputStream*"
  name: "StorageFileInputStream"
  nameWithType: "StorageFileInputStream.StorageFileInputStream"
  fullName: "com.azure.storage.file.share.StorageFileInputStream.StorageFileInputStream"
  package: "com.azure.storage.file.share"
- uid: "long"
  spec.java:
  - uid: "long"
    name: "long"
    fullName: "long"
- uid: "java.lang.Long"
  spec.java:
  - uid: "java.lang.Long"
    name: "Long"
    fullName: "java.lang.Long"
- uid: "int"
  spec.java:
  - uid: "int"
    name: "int"
    fullName: "int"
- uid: "java.nio.ByteBuffer"
  spec.java:
  - uid: "java.nio.ByteBuffer"
    name: "ByteBuffer"
    fullName: "java.nio.ByteBuffer"
- uid: "com.azure.storage.file.share.StorageFileInputStream.dispatchRead*"
  name: "dispatchRead"
  nameWithType: "StorageFileInputStream.dispatchRead"
  fullName: "com.azure.storage.file.share.StorageFileInputStream.dispatchRead"
  package: "com.azure.storage.file.share"
- uid: "com.azure.storage.common.StorageInputStream"
  name: "StorageInputStream"
  nameWithType: "StorageInputStream"
  fullName: "com.azure.storage.common.StorageInputStream"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "com.azure.storage.common.StorageInputStream.mark(int)"
  name: "StorageInputStream.mark(int)"
  nameWithType: "StorageInputStream.mark(int)"
  fullName: "com.azure.storage.common.StorageInputStream.mark(int)"
- uid: "com.azure.storage.common.StorageInputStream.read(byte[])"
  name: "StorageInputStream.read(byte[])"
  nameWithType: "StorageInputStream.read(byte[])"
  fullName: "com.azure.storage.common.StorageInputStream.read(byte[])"
- uid: "java.io.InputStream.readNBytes(int)"
  name: "InputStream.readNBytes(int)"
  nameWithType: "InputStream.readNBytes(int)"
  fullName: "java.io.InputStream.readNBytes(int)"
- uid: "com.azure.storage.common.StorageInputStream.reset()"
  name: "StorageInputStream.reset()"
  nameWithType: "StorageInputStream.reset()"
  fullName: "com.azure.storage.common.StorageInputStream.reset()"
- uid: "com.azure.storage.common.StorageInputStream.read()"
  name: "StorageInputStream.read()"
  nameWithType: "StorageInputStream.read()"
  fullName: "com.azure.storage.common.StorageInputStream.read()"
- uid: "com.azure.storage.common.StorageInputStream.skip(long)"
  name: "StorageInputStream.skip(long)"
  nameWithType: "StorageInputStream.skip(long)"
  fullName: "com.azure.storage.common.StorageInputStream.skip(long)"
- uid: "com.azure.storage.common.StorageInputStream.available()"
  name: "StorageInputStream.available()"
  nameWithType: "StorageInputStream.available()"
  fullName: "com.azure.storage.common.StorageInputStream.available()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "com.azure.storage.common.StorageInputStream.close()"
  name: "StorageInputStream.close()"
  nameWithType: "StorageInputStream.close()"
  fullName: "com.azure.storage.common.StorageInputStream.close()"
- uid: "java.io.InputStream.nullInputStream()"
  name: "InputStream.nullInputStream()"
  nameWithType: "InputStream.nullInputStream()"
  fullName: "java.io.InputStream.nullInputStream()"
- uid: "java.io.InputStream.transferTo(java.io.OutputStream)"
  name: "InputStream.transferTo(OutputStream)"
  nameWithType: "InputStream.transferTo(OutputStream)"
  fullName: "java.io.InputStream.transferTo(java.io.OutputStream)"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "com.azure.storage.common.StorageInputStream.markSupported()"
  name: "StorageInputStream.markSupported()"
  nameWithType: "StorageInputStream.markSupported()"
  fullName: "com.azure.storage.common.StorageInputStream.markSupported()"
- uid: "java.io.InputStream.readNBytes(byte[],int,int)"
  name: "InputStream.readNBytes(byte[],int,int)"
  nameWithType: "InputStream.readNBytes(byte[],int,int)"
  fullName: "java.io.InputStream.readNBytes(byte[],int,int)"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.io.InputStream.readAllBytes()"
  name: "InputStream.readAllBytes()"
  nameWithType: "InputStream.readAllBytes()"
  fullName: "java.io.InputStream.readAllBytes()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "com.azure.storage.common.StorageInputStream.dispatchRead(int,long)"
  name: "StorageInputStream.dispatchRead(int,long)"
  nameWithType: "StorageInputStream.dispatchRead(int,long)"
  fullName: "com.azure.storage.common.StorageInputStream.dispatchRead(int,long)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "com.azure.storage.common.StorageInputStream.read(byte[],int,int)"
  name: "StorageInputStream.read(byte[],int,int)"
  nameWithType: "StorageInputStream.read(byte[],int,int)"
  fullName: "com.azure.storage.common.StorageInputStream.read(byte[],int,int)"
