### YamlMime:ManagedReference
items:
- uid: "com.azure.core.util.tracing.Tracer"
  id: "Tracer"
  parent: "com.azure.core.util.tracing"
  children:
  - "com.azure.core.util.tracing.Tracer.DIAGNOSTIC_ID_KEY"
  - "com.azure.core.util.tracing.Tracer.ENTITY_PATH_KEY"
  - "com.azure.core.util.tracing.Tracer.HOST_NAME_KEY"
  - "com.azure.core.util.tracing.Tracer.PARENT_SPAN_KEY"
  - "com.azure.core.util.tracing.Tracer.SCOPE_KEY"
  - "com.azure.core.util.tracing.Tracer.SPAN_BUILDER_KEY"
  - "com.azure.core.util.tracing.Tracer.SPAN_CONTEXT_KEY"
  - "com.azure.core.util.tracing.Tracer.USER_SPAN_NAME_KEY"
  - "com.azure.core.util.tracing.Tracer.addLink(com.azure.core.util.Context)"
  - "com.azure.core.util.tracing.Tracer.end(int,java.lang.Throwable,com.azure.core.util.Context)"
  - "com.azure.core.util.tracing.Tracer.end(java.lang.String,java.lang.Throwable,com.azure.core.util.Context)"
  - "com.azure.core.util.tracing.Tracer.extractContext(java.lang.String,com.azure.core.util.Context)"
  - "com.azure.core.util.tracing.Tracer.getSharedSpanBuilder(java.lang.String,com.azure.core.util.Context)"
  - "com.azure.core.util.tracing.Tracer.setAttribute(java.lang.String,java.lang.String,com.azure.core.util.Context)"
  - "com.azure.core.util.tracing.Tracer.setSpanName(java.lang.String,com.azure.core.util.Context)"
  - "com.azure.core.util.tracing.Tracer.start(java.lang.String,com.azure.core.util.Context)"
  - "com.azure.core.util.tracing.Tracer.start(java.lang.String,com.azure.core.util.Context,com.azure.core.util.tracing.ProcessKind)"
  langs:
  - "java"
  name: "Tracer"
  nameWithType: "Tracer"
  fullName: "com.azure.core.util.tracing.Tracer"
  type: "Interface"
  package: "com.azure.core.util.tracing"
  summary: "Contract that all tracers must implement to be pluggable into the SDK."
  syntax:
    content: "public interface Tracer"
- uid: "com.azure.core.util.tracing.Tracer.DIAGNOSTIC_ID_KEY"
  id: "DIAGNOSTIC_ID_KEY"
  parent: "com.azure.core.util.tracing.Tracer"
  langs:
  - "java"
  name: "DIAGNOSTIC_ID_KEY"
  nameWithType: "Tracer.DIAGNOSTIC_ID_KEY"
  fullName: "com.azure.core.util.tracing.Tracer.DIAGNOSTIC_ID_KEY"
  type: "Field"
  package: "com.azure.core.util.tracing"
  summary: "Key for <xref uid=\"com.azure.core.util.Context\" data-throw-if-not-resolved=\"false\">Context</xref> which indicates that the context contains a \"Diagnostic Id\" for the service call."
  syntax:
    content: "public static final String DIAGNOSTIC_ID_KEY"
    return:
      type: "java.lang.String"
- uid: "com.azure.core.util.tracing.Tracer.ENTITY_PATH_KEY"
  id: "ENTITY_PATH_KEY"
  parent: "com.azure.core.util.tracing.Tracer"
  langs:
  - "java"
  name: "ENTITY_PATH_KEY"
  nameWithType: "Tracer.ENTITY_PATH_KEY"
  fullName: "com.azure.core.util.tracing.Tracer.ENTITY_PATH_KEY"
  type: "Field"
  package: "com.azure.core.util.tracing"
  summary: "Key for <xref uid=\"com.azure.core.util.Context\" data-throw-if-not-resolved=\"false\">Context</xref> which indicates that the context contains an entity path."
  syntax:
    content: "public static final String ENTITY_PATH_KEY"
    return:
      type: "java.lang.String"
- uid: "com.azure.core.util.tracing.Tracer.HOST_NAME_KEY"
  id: "HOST_NAME_KEY"
  parent: "com.azure.core.util.tracing.Tracer"
  langs:
  - "java"
  name: "HOST_NAME_KEY"
  nameWithType: "Tracer.HOST_NAME_KEY"
  fullName: "com.azure.core.util.tracing.Tracer.HOST_NAME_KEY"
  type: "Field"
  package: "com.azure.core.util.tracing"
  summary: "Key for <xref uid=\"com.azure.core.util.Context\" data-throw-if-not-resolved=\"false\">Context</xref> which indicates that the context contains the hostname."
  syntax:
    content: "public static final String HOST_NAME_KEY"
    return:
      type: "java.lang.String"
- uid: "com.azure.core.util.tracing.Tracer.PARENT_SPAN_KEY"
  id: "PARENT_SPAN_KEY"
  parent: "com.azure.core.util.tracing.Tracer"
  langs:
  - "java"
  name: "PARENT_SPAN_KEY"
  nameWithType: "Tracer.PARENT_SPAN_KEY"
  fullName: "com.azure.core.util.tracing.Tracer.PARENT_SPAN_KEY"
  type: "Field"
  package: "com.azure.core.util.tracing"
  summary: "Key for <xref uid=\"com.azure.core.util.Context\" data-throw-if-not-resolved=\"false\">Context</xref> which indicates that the context contains parent span data. This span will be used as the parent span for all spans the SDK creates.\n\nIf no span data is listed when the SDK creates its first span, this span key will be used as the parent span."
  syntax:
    content: "public static final String PARENT_SPAN_KEY"
    return:
      type: "java.lang.String"
- uid: "com.azure.core.util.tracing.Tracer.SCOPE_KEY"
  id: "SCOPE_KEY"
  parent: "com.azure.core.util.tracing.Tracer"
  langs:
  - "java"
  name: "SCOPE_KEY"
  nameWithType: "Tracer.SCOPE_KEY"
  fullName: "com.azure.core.util.tracing.Tracer.SCOPE_KEY"
  type: "Field"
  package: "com.azure.core.util.tracing"
  summary: "Key for <xref uid=\"com.azure.core.util.Context\" data-throw-if-not-resolved=\"false\">Context</xref> the scope of code where the given Span is in the current Context."
  syntax:
    content: "public static final String SCOPE_KEY"
    return:
      type: "java.lang.String"
- uid: "com.azure.core.util.tracing.Tracer.SPAN_BUILDER_KEY"
  id: "SPAN_BUILDER_KEY"
  parent: "com.azure.core.util.tracing.Tracer"
  langs:
  - "java"
  name: "SPAN_BUILDER_KEY"
  nameWithType: "Tracer.SPAN_BUILDER_KEY"
  fullName: "com.azure.core.util.tracing.Tracer.SPAN_BUILDER_KEY"
  type: "Field"
  package: "com.azure.core.util.tracing"
  summary: "Key for <xref uid=\"com.azure.core.util.Context\" data-throw-if-not-resolved=\"false\">Context</xref> which indicates the shared span builder that is in the current Context."
  syntax:
    content: "public static final String SPAN_BUILDER_KEY"
    return:
      type: "java.lang.String"
- uid: "com.azure.core.util.tracing.Tracer.SPAN_CONTEXT_KEY"
  id: "SPAN_CONTEXT_KEY"
  parent: "com.azure.core.util.tracing.Tracer"
  langs:
  - "java"
  name: "SPAN_CONTEXT_KEY"
  nameWithType: "Tracer.SPAN_CONTEXT_KEY"
  fullName: "com.azure.core.util.tracing.Tracer.SPAN_CONTEXT_KEY"
  type: "Field"
  package: "com.azure.core.util.tracing"
  summary: "Key for <xref uid=\"com.azure.core.util.Context\" data-throw-if-not-resolved=\"false\">Context</xref> which indicates that the context contains a message span context."
  syntax:
    content: "public static final String SPAN_CONTEXT_KEY"
    return:
      type: "java.lang.String"
- uid: "com.azure.core.util.tracing.Tracer.USER_SPAN_NAME_KEY"
  id: "USER_SPAN_NAME_KEY"
  parent: "com.azure.core.util.tracing.Tracer"
  langs:
  - "java"
  name: "USER_SPAN_NAME_KEY"
  nameWithType: "Tracer.USER_SPAN_NAME_KEY"
  fullName: "com.azure.core.util.tracing.Tracer.USER_SPAN_NAME_KEY"
  type: "Field"
  package: "com.azure.core.util.tracing"
  summary: "Key for <xref uid=\"com.azure.core.util.Context\" data-throw-if-not-resolved=\"false\">Context</xref> which indicates that the context contains the name for the user spans that are created.\n\nIf no span name is listed when the span is created it will default to using the calling method's name."
  syntax:
    content: "public static final String USER_SPAN_NAME_KEY"
    return:
      type: "java.lang.String"
- uid: "com.azure.core.util.tracing.Tracer.addLink(com.azure.core.util.Context)"
  id: "addLink(com.azure.core.util.Context)"
  parent: "com.azure.core.util.tracing.Tracer"
  langs:
  - "java"
  name: "addLink(Context context)"
  nameWithType: "Tracer.addLink(Context context)"
  fullName: "com.azure.core.util.tracing.Tracer.addLink(Context context)"
  overload: "com.azure.core.util.tracing.Tracer.addLink*"
  type: "Method"
  package: "com.azure.core.util.tracing"
  summary: "Provides a way to link multiple tracing spans. Used in batching operations to relate multiple requests under a single batch.\n\n**Code samples**\n\nLink multiple spans using their span context information\n\n\\{@codesnippet com.azure.core.util.tracing.addLink\\#context\\}"
  syntax:
    content: "public abstract void addLink(Context context)"
    parameters:
    - id: "context"
      type: "com.azure.core.util.Context"
      description: "Additional metadata that is passed through the call stack."
- uid: "com.azure.core.util.tracing.Tracer.end(int,java.lang.Throwable,com.azure.core.util.Context)"
  id: "end(int,java.lang.Throwable,com.azure.core.util.Context)"
  parent: "com.azure.core.util.tracing.Tracer"
  langs:
  - "java"
  name: "end(int responseCode, Throwable error, Context context)"
  nameWithType: "Tracer.end(int responseCode, Throwable error, Context context)"
  fullName: "com.azure.core.util.tracing.Tracer.end(int responseCode, Throwable error, Context context)"
  overload: "com.azure.core.util.tracing.Tracer.end*"
  type: "Method"
  package: "com.azure.core.util.tracing"
  summary: "Completes the current tracing span.\n\n**Code samples**\n\nCompletes the tracing span present in the context, with the corresponding OpenCensus status for the given response status code\n\n\\{@codesnippet com.azure.core.util.tracing.end\\#int-throwable-context\\}"
  syntax:
    content: "public abstract void end(int responseCode, Throwable error, Context context)"
    parameters:
    - id: "responseCode"
      type: "int"
      description: "Response status code if the span is in a HTTP call context."
    - id: "error"
      type: "java.lang.Throwable"
      description: "<xref uid=\"\" data-throw-if-not-resolved=\"false\">Throwable</xref> that happened during the span or <code>null</code> if no exception occurred."
    - id: "context"
      type: "com.azure.core.util.Context"
      description: "Additional metadata that is passed through the call stack."
- uid: "com.azure.core.util.tracing.Tracer.end(java.lang.String,java.lang.Throwable,com.azure.core.util.Context)"
  id: "end(java.lang.String,java.lang.Throwable,com.azure.core.util.Context)"
  parent: "com.azure.core.util.tracing.Tracer"
  langs:
  - "java"
  name: "end(String statusMessage, Throwable error, Context context)"
  nameWithType: "Tracer.end(String statusMessage, Throwable error, Context context)"
  fullName: "com.azure.core.util.tracing.Tracer.end(String statusMessage, Throwable error, Context context)"
  overload: "com.azure.core.util.tracing.Tracer.end*"
  type: "Method"
  package: "com.azure.core.util.tracing"
  summary: "Completes the current tracing span for AMQP calls.\n\n**Code samples**\n\nCompletes the tracing span with the corresponding OpenCensus status for the given status message\n\n\\{@codesnippet com.azure.core.util.tracing.end\\#string-throwable-context\\}"
  syntax:
    content: "public abstract void end(String statusMessage, Throwable error, Context context)"
    parameters:
    - id: "statusMessage"
      type: "java.lang.String"
      description: "The error or success message that occurred during the call, or <code>null</code> if no error\n occurred."
    - id: "error"
      type: "java.lang.Throwable"
      description: "<xref uid=\"\" data-throw-if-not-resolved=\"false\">Throwable</xref> that happened during the span or <code>null</code> if no exception occurred."
    - id: "context"
      type: "com.azure.core.util.Context"
      description: "Additional metadata that is passed through the call stack."
- uid: "com.azure.core.util.tracing.Tracer.extractContext(java.lang.String,com.azure.core.util.Context)"
  id: "extractContext(java.lang.String,com.azure.core.util.Context)"
  parent: "com.azure.core.util.tracing.Tracer"
  langs:
  - "java"
  name: "extractContext(String diagnosticId, Context context)"
  nameWithType: "Tracer.extractContext(String diagnosticId, Context context)"
  fullName: "com.azure.core.util.tracing.Tracer.extractContext(String diagnosticId, Context context)"
  overload: "com.azure.core.util.tracing.Tracer.extractContext*"
  type: "Method"
  package: "com.azure.core.util.tracing"
  summary: "Extracts the span's context as <xref uid=\"com.azure.core.util.Context\" data-throw-if-not-resolved=\"false\">Context</xref> from upstream.\n\n**Code samples**\n\nExtracts the corresponding span context information from a valid diagnostic id\n\n\\{@codesnippet com.azure.core.util.tracing.extractContext\\#string-context\\}"
  syntax:
    content: "public abstract Context extractContext(String diagnosticId, Context context)"
    parameters:
    - id: "diagnosticId"
      type: "java.lang.String"
      description: "Unique identifier for the trace information of the span."
    - id: "context"
      type: "com.azure.core.util.Context"
      description: "Additional metadata that is passed through the call stack."
    return:
      type: "com.azure.core.util.Context"
      description: "The updated <xref uid=\"com.azure.core.util.Context\" data-throw-if-not-resolved=\"false\">Context</xref> object containing the span context."
- uid: "com.azure.core.util.tracing.Tracer.getSharedSpanBuilder(java.lang.String,com.azure.core.util.Context)"
  id: "getSharedSpanBuilder(java.lang.String,com.azure.core.util.Context)"
  parent: "com.azure.core.util.tracing.Tracer"
  langs:
  - "java"
  name: "getSharedSpanBuilder(String spanName, Context context)"
  nameWithType: "Tracer.getSharedSpanBuilder(String spanName, Context context)"
  fullName: "com.azure.core.util.tracing.Tracer.getSharedSpanBuilder(String spanName, Context context)"
  overload: "com.azure.core.util.tracing.Tracer.getSharedSpanBuilder*"
  type: "Method"
  package: "com.azure.core.util.tracing"
  summary: "Returns a span builder with the provided name in <xref uid=\"com.azure.core.util.Context\" data-throw-if-not-resolved=\"false\">Context</xref>.\n\n**Code samples**\n\nReturns a builder with the provided span name.\n\n\\{@codesnippet com.azure.core.util.tracing.getSpanBuilder\\#string-context\\}"
  syntax:
    content: "public default Context getSharedSpanBuilder(String spanName, Context context)"
    parameters:
    - id: "spanName"
      type: "java.lang.String"
      description: "Name to give the span for the created builder."
    - id: "context"
      type: "com.azure.core.util.Context"
      description: "Additional metadata that is passed through the call stack."
    return:
      type: "com.azure.core.util.Context"
      description: "The updated <xref uid=\"com.azure.core.util.Context\" data-throw-if-not-resolved=\"false\">Context</xref> object containing the span builder."
- uid: "com.azure.core.util.tracing.Tracer.setAttribute(java.lang.String,java.lang.String,com.azure.core.util.Context)"
  id: "setAttribute(java.lang.String,java.lang.String,com.azure.core.util.Context)"
  parent: "com.azure.core.util.tracing.Tracer"
  langs:
  - "java"
  name: "setAttribute(String key, String value, Context context)"
  nameWithType: "Tracer.setAttribute(String key, String value, Context context)"
  fullName: "com.azure.core.util.tracing.Tracer.setAttribute(String key, String value, Context context)"
  overload: "com.azure.core.util.tracing.Tracer.setAttribute*"
  type: "Method"
  package: "com.azure.core.util.tracing"
  summary: "Adds metadata to the current span. If no span information is found in the context, then no metadata is added."
  syntax:
    content: "public abstract void setAttribute(String key, String value, Context context)"
    parameters:
    - id: "key"
      type: "java.lang.String"
      description: "Name of the metadata."
    - id: "value"
      type: "java.lang.String"
      description: "Value of the metadata."
    - id: "context"
      type: "com.azure.core.util.Context"
      description: "Additional metadata that is passed through the call stack."
- uid: "com.azure.core.util.tracing.Tracer.setSpanName(java.lang.String,com.azure.core.util.Context)"
  id: "setSpanName(java.lang.String,com.azure.core.util.Context)"
  parent: "com.azure.core.util.tracing.Tracer"
  langs:
  - "java"
  name: "setSpanName(String spanName, Context context)"
  nameWithType: "Tracer.setSpanName(String spanName, Context context)"
  fullName: "com.azure.core.util.tracing.Tracer.setSpanName(String spanName, Context context)"
  overload: "com.azure.core.util.tracing.Tracer.setSpanName*"
  type: "Method"
  package: "com.azure.core.util.tracing"
  summary: "Sets the name for spans that are created.\n\n**Code samples**\n\nRetrieve the span name of the returned span\n\n\\{@codesnippet com.azure.core.util.tracing.setSpanName\\#string-context\\}"
  syntax:
    content: "public abstract Context setSpanName(String spanName, Context context)"
    parameters:
    - id: "spanName"
      type: "java.lang.String"
      description: "Name to give the next span."
    - id: "context"
      type: "com.azure.core.util.Context"
      description: "Additional metadata that is passed through the call stack."
    return:
      type: "com.azure.core.util.Context"
      description: "The updated <xref uid=\"com.azure.core.util.Context\" data-throw-if-not-resolved=\"false\">Context</xref> object containing the name of the returned span."
- uid: "com.azure.core.util.tracing.Tracer.start(java.lang.String,com.azure.core.util.Context)"
  id: "start(java.lang.String,com.azure.core.util.Context)"
  parent: "com.azure.core.util.tracing.Tracer"
  langs:
  - "java"
  name: "start(String methodName, Context context)"
  nameWithType: "Tracer.start(String methodName, Context context)"
  fullName: "com.azure.core.util.tracing.Tracer.start(String methodName, Context context)"
  overload: "com.azure.core.util.tracing.Tracer.start*"
  type: "Method"
  package: "com.azure.core.util.tracing"
  summary: "Creates a new tracing span.\n\nThe `context` will be checked for information about a parent span. If a parent span is found, the new span will be added as a child. Otherwise, the parent span will be created and added to the `context` and any downstream `start()` calls will use the created span as the parent.\n\n**Code samples**\n\nStarts a tracing span with provided method name and explicit parent span\n\n\\{@codesnippet com.azure.core.util.tracing.start\\#string-context\\}"
  syntax:
    content: "public abstract Context start(String methodName, Context context)"
    parameters:
    - id: "methodName"
      type: "java.lang.String"
      description: "Name of the method triggering the span creation."
    - id: "context"
      type: "com.azure.core.util.Context"
      description: "Additional metadata that is passed through the call stack."
    return:
      type: "com.azure.core.util.Context"
      description: "The updated <xref uid=\"com.azure.core.util.Context\" data-throw-if-not-resolved=\"false\">Context</xref> object containing the returned span."
- uid: "com.azure.core.util.tracing.Tracer.start(java.lang.String,com.azure.core.util.Context,com.azure.core.util.tracing.ProcessKind)"
  id: "start(java.lang.String,com.azure.core.util.Context,com.azure.core.util.tracing.ProcessKind)"
  parent: "com.azure.core.util.tracing.Tracer"
  langs:
  - "java"
  name: "start(String methodName, Context context, ProcessKind processKind)"
  nameWithType: "Tracer.start(String methodName, Context context, ProcessKind processKind)"
  fullName: "com.azure.core.util.tracing.Tracer.start(String methodName, Context context, ProcessKind processKind)"
  overload: "com.azure.core.util.tracing.Tracer.start*"
  type: "Method"
  package: "com.azure.core.util.tracing"
  summary: "Creates a new tracing span for AMQP calls.\n\nThe `context` will be checked for information about a parent span. If a parent span is found, the new span will be added as a child. Otherwise, the parent span will be created and added to the `context` and any downstream `start()` calls will use the created span as the parent.\n\nSets additional request attributes on the created span when `processKind` is <xref uid=\"com.azure.core.util.tracing.ProcessKind.SEND\" data-throw-if-not-resolved=\"false\">ProcessKind.SEND</xref>.\n\nReturns the diagnostic Id and span context of the returned span when `processKind` is <xref uid=\"com.azure.core.util.tracing.ProcessKind.MESSAGE\" data-throw-if-not-resolved=\"false\">ProcessKind.MESSAGE</xref>.\n\nCreates a new tracing span with remote parent and returns that scope when the given when `processKind` is <xref uid=\"com.azure.core.util.tracing.ProcessKind.PROCESS\" data-throw-if-not-resolved=\"false\">ProcessKind.PROCESS</xref>.\n\n**Code samples**\n\nStarts a tracing span with provided method name and AMQP operation SEND\n\n\\{@codesnippet com.azure.core.util.tracing.start\\#string-context-processKind-SEND\\}\n\nStarts a tracing span with provided method name and AMQP operation MESSAGE\n\n\\{@codesnippet com.azure.core.util.tracing.start\\#string-context-processKind-MESSAGE\\}\n\nStarts a tracing span with provided method name and AMQP operation PROCESS\n\n\\{@codesnippet com.azure.core.util.tracing.start\\#string-context-processKind-PROCESS\\}"
  syntax:
    content: "public abstract Context start(String methodName, Context context, ProcessKind processKind)"
    parameters:
    - id: "methodName"
      type: "java.lang.String"
      description: "Name of the method triggering the span creation."
    - id: "context"
      type: "com.azure.core.util.Context"
      description: "Additional metadata that is passed through the call stack."
    - id: "processKind"
      type: "com.azure.core.util.tracing.ProcessKind"
      description: "AMQP operation kind."
    return:
      type: "com.azure.core.util.Context"
      description: "The updated <xref uid=\"com.azure.core.util.Context\" data-throw-if-not-resolved=\"false\">Context</xref> object containing the returned span."
references:
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "com.azure.core.util.Context"
  name: "Context"
  nameWithType: "Context"
  fullName: "com.azure.core.util.Context"
- uid: "com.azure.core.util.tracing.Tracer.start*"
  name: "start"
  nameWithType: "Tracer.start"
  fullName: "com.azure.core.util.tracing.Tracer.start"
  package: "com.azure.core.util.tracing"
- uid: "com.azure.core.util.tracing.ProcessKind"
  name: "ProcessKind"
  nameWithType: "ProcessKind"
  fullName: "com.azure.core.util.tracing.ProcessKind"
- uid: "int"
  spec.java:
  - uid: "int"
    name: "int"
    fullName: "int"
- uid: "java.lang.Throwable"
  spec.java:
  - uid: "java.lang.Throwable"
    name: "Throwable"
    fullName: "java.lang.Throwable"
- uid: "com.azure.core.util.tracing.Tracer.end*"
  name: "end"
  nameWithType: "Tracer.end"
  fullName: "com.azure.core.util.tracing.Tracer.end"
  package: "com.azure.core.util.tracing"
- uid: "com.azure.core.util.tracing.Tracer.setAttribute*"
  name: "setAttribute"
  nameWithType: "Tracer.setAttribute"
  fullName: "com.azure.core.util.tracing.Tracer.setAttribute"
  package: "com.azure.core.util.tracing"
- uid: "com.azure.core.util.tracing.Tracer.setSpanName*"
  name: "setSpanName"
  nameWithType: "Tracer.setSpanName"
  fullName: "com.azure.core.util.tracing.Tracer.setSpanName"
  package: "com.azure.core.util.tracing"
- uid: "com.azure.core.util.tracing.Tracer.addLink*"
  name: "addLink"
  nameWithType: "Tracer.addLink"
  fullName: "com.azure.core.util.tracing.Tracer.addLink"
  package: "com.azure.core.util.tracing"
- uid: "com.azure.core.util.tracing.Tracer.extractContext*"
  name: "extractContext"
  nameWithType: "Tracer.extractContext"
  fullName: "com.azure.core.util.tracing.Tracer.extractContext"
  package: "com.azure.core.util.tracing"
- uid: "com.azure.core.util.tracing.Tracer.getSharedSpanBuilder*"
  name: "getSharedSpanBuilder"
  nameWithType: "Tracer.getSharedSpanBuilder"
  fullName: "com.azure.core.util.tracing.Tracer.getSharedSpanBuilder"
  package: "com.azure.core.util.tracing"
