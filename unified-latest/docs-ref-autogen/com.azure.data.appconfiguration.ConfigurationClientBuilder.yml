### YamlMime:ManagedReference
items:
- uid: "com.azure.data.appconfiguration.ConfigurationClientBuilder"
  id: "ConfigurationClientBuilder"
  parent: "com.azure.data.appconfiguration"
  children:
  - "com.azure.data.appconfiguration.ConfigurationClientBuilder.ConfigurationClientBuilder()"
  - "com.azure.data.appconfiguration.ConfigurationClientBuilder.addPolicy(com.azure.core.http.policy.HttpPipelinePolicy)"
  - "com.azure.data.appconfiguration.ConfigurationClientBuilder.buildAsyncClient()"
  - "com.azure.data.appconfiguration.ConfigurationClientBuilder.buildClient()"
  - "com.azure.data.appconfiguration.ConfigurationClientBuilder.configuration(com.azure.core.util.Configuration)"
  - "com.azure.data.appconfiguration.ConfigurationClientBuilder.connectionString(java.lang.String)"
  - "com.azure.data.appconfiguration.ConfigurationClientBuilder.credential(com.azure.core.credential.TokenCredential)"
  - "com.azure.data.appconfiguration.ConfigurationClientBuilder.endpoint(java.lang.String)"
  - "com.azure.data.appconfiguration.ConfigurationClientBuilder.httpClient(com.azure.core.http.HttpClient)"
  - "com.azure.data.appconfiguration.ConfigurationClientBuilder.httpLogOptions(com.azure.core.http.policy.HttpLogOptions)"
  - "com.azure.data.appconfiguration.ConfigurationClientBuilder.pipeline(com.azure.core.http.HttpPipeline)"
  - "com.azure.data.appconfiguration.ConfigurationClientBuilder.retryPolicy(com.azure.core.http.policy.HttpPipelinePolicy)"
  - "com.azure.data.appconfiguration.ConfigurationClientBuilder.serviceVersion(com.azure.data.appconfiguration.ConfigurationServiceVersion)"
  langs:
  - "java"
  name: "ConfigurationClientBuilder"
  nameWithType: "ConfigurationClientBuilder"
  fullName: "com.azure.data.appconfiguration.ConfigurationClientBuilder"
  type: "Class"
  package: "com.azure.data.appconfiguration"
  summary: "This class provides a fluent builder API to help aid the configuration and instantiation of <xref uid=\"com.azure.data.appconfiguration.ConfigurationClient\" data-throw-if-not-resolved=\"false\">ConfigurationClients</xref> and <xref uid=\"com.azure.data.appconfiguration.ConfigurationAsyncClient\" data-throw-if-not-resolved=\"false\">ConfigurationAsyncClients</xref>, call <xref uid=\"com.azure.data.appconfiguration.ConfigurationClientBuilder.buildClient()\" data-throw-if-not-resolved=\"false\">buildClient</xref> and <xref uid=\"com.azure.data.appconfiguration.ConfigurationClientBuilder.buildAsyncClient()\" data-throw-if-not-resolved=\"false\">buildAsyncClient</xref> respectively to construct an instance of the desired client.\n\nThe client needs the service endpoint of the Azure App Configuration store and access credential. <xref uid=\"com.azure.data.appconfiguration.ConfigurationClientBuilder.connectionString(java.lang.String)\" data-throw-if-not-resolved=\"false\">connectionString(String)</xref> gives the builder the service endpoint and access credential.\n\n**Instantiating an asynchronous Configuration Client**\n\n\\{@codesnippet com.azure.data.applicationconfig.async.configurationclient.instantiation\\}\n\n**Instantiating a synchronous Configuration Client**\n\n\\{@codesnippet com.azure.data.applicationconfig.configurationclient.instantiation\\}\n\nAnother way to construct the client is using a <xref uid=\"\" data-throw-if-not-resolved=\"false\">HttpPipeline</xref>. The pipeline gives the client an authenticated way to communicate with the service but it doesn't contain the service endpoint. Set the pipeline with <xref uid=\"com.azure.data.appconfiguration.ConfigurationClientBuilder.pipeline(com.azure.core.http.HttpPipeline)\" data-throw-if-not-resolved=\"false\">this</xref> and set the service endpoint with <xref uid=\"com.azure.data.appconfiguration.ConfigurationClientBuilder.endpoint(java.lang.String)\" data-throw-if-not-resolved=\"false\">this</xref>. Using a pipeline requires additional setup but allows for finer control on how the <xref uid=\"com.azure.data.appconfiguration.ConfigurationClient\" data-throw-if-not-resolved=\"false\">ConfigurationClient</xref> and <xref uid=\"com.azure.data.appconfiguration.ConfigurationAsyncClient\" data-throw-if-not-resolved=\"false\">ConfigurationAsyncClient</xref> is built.\n\n\\{@codesnippet com.azure.data.applicationconfig.configurationclient.pipeline.instantiation\\}"
  syntax:
    content: "public final class ConfigurationClientBuilder"
  inheritance:
  - "java.lang.Object"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.azure.data.appconfiguration.ConfigurationClientBuilder.ConfigurationClientBuilder()"
  id: "ConfigurationClientBuilder()"
  parent: "com.azure.data.appconfiguration.ConfigurationClientBuilder"
  langs:
  - "java"
  name: "ConfigurationClientBuilder()"
  nameWithType: "ConfigurationClientBuilder.ConfigurationClientBuilder()"
  fullName: "com.azure.data.appconfiguration.ConfigurationClientBuilder.ConfigurationClientBuilder()"
  overload: "com.azure.data.appconfiguration.ConfigurationClientBuilder.ConfigurationClientBuilder*"
  type: "Constructor"
  package: "com.azure.data.appconfiguration"
  summary: "The constructor with defaults."
  syntax:
    content: "public ConfigurationClientBuilder()"
- uid: "com.azure.data.appconfiguration.ConfigurationClientBuilder.addPolicy(com.azure.core.http.policy.HttpPipelinePolicy)"
  id: "addPolicy(com.azure.core.http.policy.HttpPipelinePolicy)"
  parent: "com.azure.data.appconfiguration.ConfigurationClientBuilder"
  langs:
  - "java"
  name: "addPolicy(HttpPipelinePolicy policy)"
  nameWithType: "ConfigurationClientBuilder.addPolicy(HttpPipelinePolicy policy)"
  fullName: "com.azure.data.appconfiguration.ConfigurationClientBuilder.addPolicy(HttpPipelinePolicy policy)"
  overload: "com.azure.data.appconfiguration.ConfigurationClientBuilder.addPolicy*"
  type: "Method"
  package: "com.azure.data.appconfiguration"
  summary: "Adds a policy to the set of existing policies that are executed after required policies."
  syntax:
    content: "public ConfigurationClientBuilder addPolicy(HttpPipelinePolicy policy)"
    parameters:
    - id: "policy"
      type: "com.azure.core.http.policy.HttpPipelinePolicy"
      description: "The retry policy for service requests."
    return:
      type: "com.azure.data.appconfiguration.ConfigurationClientBuilder"
      description: "The updated ConfigurationClientBuilder object."
- uid: "com.azure.data.appconfiguration.ConfigurationClientBuilder.buildAsyncClient()"
  id: "buildAsyncClient()"
  parent: "com.azure.data.appconfiguration.ConfigurationClientBuilder"
  langs:
  - "java"
  name: "buildAsyncClient()"
  nameWithType: "ConfigurationClientBuilder.buildAsyncClient()"
  fullName: "com.azure.data.appconfiguration.ConfigurationClientBuilder.buildAsyncClient()"
  overload: "com.azure.data.appconfiguration.ConfigurationClientBuilder.buildAsyncClient*"
  type: "Method"
  package: "com.azure.data.appconfiguration"
  summary: "Creates a <xref uid=\"com.azure.data.appconfiguration.ConfigurationAsyncClient\" data-throw-if-not-resolved=\"false\">ConfigurationAsyncClient</xref> based on options set in the Builder. Every time `buildAsyncClient()` is called a new instance of <xref uid=\"com.azure.data.appconfiguration.ConfigurationAsyncClient\" data-throw-if-not-resolved=\"false\">ConfigurationAsyncClient</xref> is created.\n\nIf <xref uid=\"com.azure.data.appconfiguration.ConfigurationClientBuilder.pipeline(com.azure.core.http.HttpPipeline)\" data-throw-if-not-resolved=\"false\">pipeline</xref> is set, then the `pipeline` and <xref uid=\"com.azure.data.appconfiguration.ConfigurationClientBuilder.endpoint(java.lang.String)\" data-throw-if-not-resolved=\"false\">endpoint</xref> are used to create the <xref uid=\"com.azure.data.appconfiguration.ConfigurationAsyncClient\" data-throw-if-not-resolved=\"false\">client</xref>. All other builder settings are ignored."
  syntax:
    content: "public ConfigurationAsyncClient buildAsyncClient()"
    return:
      type: "com.azure.data.appconfiguration.ConfigurationAsyncClient"
      description: "A ConfigurationAsyncClient with the options set from the builder."
- uid: "com.azure.data.appconfiguration.ConfigurationClientBuilder.buildClient()"
  id: "buildClient()"
  parent: "com.azure.data.appconfiguration.ConfigurationClientBuilder"
  langs:
  - "java"
  name: "buildClient()"
  nameWithType: "ConfigurationClientBuilder.buildClient()"
  fullName: "com.azure.data.appconfiguration.ConfigurationClientBuilder.buildClient()"
  overload: "com.azure.data.appconfiguration.ConfigurationClientBuilder.buildClient*"
  type: "Method"
  package: "com.azure.data.appconfiguration"
  summary: "Creates a <xref uid=\"com.azure.data.appconfiguration.ConfigurationClient\" data-throw-if-not-resolved=\"false\">ConfigurationClient</xref> based on options set in the Builder. Every time `buildClient()` is called a new instance of <xref uid=\"com.azure.data.appconfiguration.ConfigurationClient\" data-throw-if-not-resolved=\"false\">ConfigurationClient</xref> is created.\n\nIf <xref uid=\"com.azure.data.appconfiguration.ConfigurationClientBuilder.pipeline(com.azure.core.http.HttpPipeline)\" data-throw-if-not-resolved=\"false\">pipeline</xref> is set, then the `pipeline` and <xref uid=\"com.azure.data.appconfiguration.ConfigurationClientBuilder.endpoint(java.lang.String)\" data-throw-if-not-resolved=\"false\">endpoint</xref> are used to create the <xref uid=\"com.azure.data.appconfiguration.ConfigurationClient\" data-throw-if-not-resolved=\"false\">client</xref>. All other builder settings are ignored."
  syntax:
    content: "public ConfigurationClient buildClient()"
    return:
      type: "com.azure.data.appconfiguration.ConfigurationClient"
      description: "A ConfigurationClient with the options set from the builder."
- uid: "com.azure.data.appconfiguration.ConfigurationClientBuilder.configuration(com.azure.core.util.Configuration)"
  id: "configuration(com.azure.core.util.Configuration)"
  parent: "com.azure.data.appconfiguration.ConfigurationClientBuilder"
  langs:
  - "java"
  name: "configuration(Configuration configuration)"
  nameWithType: "ConfigurationClientBuilder.configuration(Configuration configuration)"
  fullName: "com.azure.data.appconfiguration.ConfigurationClientBuilder.configuration(Configuration configuration)"
  overload: "com.azure.data.appconfiguration.ConfigurationClientBuilder.configuration*"
  type: "Method"
  package: "com.azure.data.appconfiguration"
  summary: "Sets the configuration store that is used during construction of the service client. The default configuration store is a clone of the <xref uid=\"Configuration#getGlobalConfiguration()\" data-throw-if-not-resolved=\"false\">global\n configuration store</xref>, use <xref uid=\"\" data-throw-if-not-resolved=\"false\">Configuration#NONE</xref> to bypass using configuration settings during construction."
  syntax:
    content: "public ConfigurationClientBuilder configuration(Configuration configuration)"
    parameters:
    - id: "configuration"
      type: "com.azure.core.util.Configuration"
      description: "The configuration store used to"
    return:
      type: "com.azure.data.appconfiguration.ConfigurationClientBuilder"
      description: "The updated ConfigurationClientBuilder object."
- uid: "com.azure.data.appconfiguration.ConfigurationClientBuilder.connectionString(java.lang.String)"
  id: "connectionString(java.lang.String)"
  parent: "com.azure.data.appconfiguration.ConfigurationClientBuilder"
  langs:
  - "java"
  name: "connectionString(String connectionString)"
  nameWithType: "ConfigurationClientBuilder.connectionString(String connectionString)"
  fullName: "com.azure.data.appconfiguration.ConfigurationClientBuilder.connectionString(String connectionString)"
  overload: "com.azure.data.appconfiguration.ConfigurationClientBuilder.connectionString*"
  type: "Method"
  package: "com.azure.data.appconfiguration"
  summary: "Sets the credential to use when authenticating HTTP requests. Also, sets the <xref uid=\"com.azure.data.appconfiguration.ConfigurationClientBuilder.endpoint(java.lang.String)\" data-throw-if-not-resolved=\"false\">endpoint</xref> for this ConfigurationClientBuilder."
  syntax:
    content: "public ConfigurationClientBuilder connectionString(String connectionString)"
    parameters:
    - id: "connectionString"
      type: "java.lang.String"
      description: "Connection string in the format \"endpoint={endpoint_value};id={id_value};\n secret={secret_value}\""
    return:
      type: "com.azure.data.appconfiguration.ConfigurationClientBuilder"
      description: "The updated ConfigurationClientBuilder object."
- uid: "com.azure.data.appconfiguration.ConfigurationClientBuilder.credential(com.azure.core.credential.TokenCredential)"
  id: "credential(com.azure.core.credential.TokenCredential)"
  parent: "com.azure.data.appconfiguration.ConfigurationClientBuilder"
  langs:
  - "java"
  name: "credential(TokenCredential tokenCredential)"
  nameWithType: "ConfigurationClientBuilder.credential(TokenCredential tokenCredential)"
  fullName: "com.azure.data.appconfiguration.ConfigurationClientBuilder.credential(TokenCredential tokenCredential)"
  overload: "com.azure.data.appconfiguration.ConfigurationClientBuilder.credential*"
  type: "Method"
  package: "com.azure.data.appconfiguration"
  summary: "Sets the <xref uid=\"\" data-throw-if-not-resolved=\"false\">TokenCredential</xref> used to authenticate HTTP requests."
  syntax:
    content: "public ConfigurationClientBuilder credential(TokenCredential tokenCredential)"
    parameters:
    - id: "tokenCredential"
      type: "com.azure.core.credential.TokenCredential"
      description: "TokenCredential used to authenticate HTTP requests."
    return:
      type: "com.azure.data.appconfiguration.ConfigurationClientBuilder"
      description: "The updated ConfigurationClientBuilder object."
- uid: "com.azure.data.appconfiguration.ConfigurationClientBuilder.endpoint(java.lang.String)"
  id: "endpoint(java.lang.String)"
  parent: "com.azure.data.appconfiguration.ConfigurationClientBuilder"
  langs:
  - "java"
  name: "endpoint(String endpoint)"
  nameWithType: "ConfigurationClientBuilder.endpoint(String endpoint)"
  fullName: "com.azure.data.appconfiguration.ConfigurationClientBuilder.endpoint(String endpoint)"
  overload: "com.azure.data.appconfiguration.ConfigurationClientBuilder.endpoint*"
  type: "Method"
  package: "com.azure.data.appconfiguration"
  summary: "Sets the service endpoint for the Azure App Configuration instance."
  syntax:
    content: "public ConfigurationClientBuilder endpoint(String endpoint)"
    parameters:
    - id: "endpoint"
      type: "java.lang.String"
      description: "The URL of the Azure App Configuration instance to send <xref uid=\"com.azure.data.appconfiguration.models.ConfigurationSetting\" data-throw-if-not-resolved=\"false\">ConfigurationSetting</xref>\n     service requests to and receive responses from."
    return:
      type: "com.azure.data.appconfiguration.ConfigurationClientBuilder"
      description: "The updated ConfigurationClientBuilder object."
- uid: "com.azure.data.appconfiguration.ConfigurationClientBuilder.httpClient(com.azure.core.http.HttpClient)"
  id: "httpClient(com.azure.core.http.HttpClient)"
  parent: "com.azure.data.appconfiguration.ConfigurationClientBuilder"
  langs:
  - "java"
  name: "httpClient(HttpClient client)"
  nameWithType: "ConfigurationClientBuilder.httpClient(HttpClient client)"
  fullName: "com.azure.data.appconfiguration.ConfigurationClientBuilder.httpClient(HttpClient client)"
  overload: "com.azure.data.appconfiguration.ConfigurationClientBuilder.httpClient*"
  type: "Method"
  package: "com.azure.data.appconfiguration"
  summary: "Sets the HTTP client to use for sending and receiving requests to and from the service."
  syntax:
    content: "public ConfigurationClientBuilder httpClient(HttpClient client)"
    parameters:
    - id: "client"
      type: "com.azure.core.http.HttpClient"
      description: "The HTTP client to use for requests."
    return:
      type: "com.azure.data.appconfiguration.ConfigurationClientBuilder"
      description: "The updated ConfigurationClientBuilder object."
- uid: "com.azure.data.appconfiguration.ConfigurationClientBuilder.httpLogOptions(com.azure.core.http.policy.HttpLogOptions)"
  id: "httpLogOptions(com.azure.core.http.policy.HttpLogOptions)"
  parent: "com.azure.data.appconfiguration.ConfigurationClientBuilder"
  langs:
  - "java"
  name: "httpLogOptions(HttpLogOptions logOptions)"
  nameWithType: "ConfigurationClientBuilder.httpLogOptions(HttpLogOptions logOptions)"
  fullName: "com.azure.data.appconfiguration.ConfigurationClientBuilder.httpLogOptions(HttpLogOptions logOptions)"
  overload: "com.azure.data.appconfiguration.ConfigurationClientBuilder.httpLogOptions*"
  type: "Method"
  package: "com.azure.data.appconfiguration"
  summary: "Sets the logging configuration for HTTP requests and responses.\n\nIf logLevel is not provided, default value of <xref uid=\"\" data-throw-if-not-resolved=\"false\">HttpLogDetailLevel#NONE</xref> is set."
  syntax:
    content: "public ConfigurationClientBuilder httpLogOptions(HttpLogOptions logOptions)"
    parameters:
    - id: "logOptions"
      type: "com.azure.core.http.policy.HttpLogOptions"
      description: "The logging configuration to use when sending and receiving HTTP requests/responses."
    return:
      type: "com.azure.data.appconfiguration.ConfigurationClientBuilder"
      description: "The updated ConfigurationClientBuilder object."
- uid: "com.azure.data.appconfiguration.ConfigurationClientBuilder.pipeline(com.azure.core.http.HttpPipeline)"
  id: "pipeline(com.azure.core.http.HttpPipeline)"
  parent: "com.azure.data.appconfiguration.ConfigurationClientBuilder"
  langs:
  - "java"
  name: "pipeline(HttpPipeline pipeline)"
  nameWithType: "ConfigurationClientBuilder.pipeline(HttpPipeline pipeline)"
  fullName: "com.azure.data.appconfiguration.ConfigurationClientBuilder.pipeline(HttpPipeline pipeline)"
  overload: "com.azure.data.appconfiguration.ConfigurationClientBuilder.pipeline*"
  type: "Method"
  package: "com.azure.data.appconfiguration"
  summary: "Sets the HTTP pipeline to use for the service client. If `pipeline` is set, all other settings are ignored, aside from <xref uid=\"com.azure.data.appconfiguration.ConfigurationClientBuilder.endpoint(java.lang.String)\" data-throw-if-not-resolved=\"false\">endpoint</xref> to build <xref uid=\"com.azure.data.appconfiguration.ConfigurationAsyncClient\" data-throw-if-not-resolved=\"false\">ConfigurationAsyncClient</xref> or <xref uid=\"com.azure.data.appconfiguration.ConfigurationClient\" data-throw-if-not-resolved=\"false\">ConfigurationClient</xref>."
  syntax:
    content: "public ConfigurationClientBuilder pipeline(HttpPipeline pipeline)"
    parameters:
    - id: "pipeline"
      type: "com.azure.core.http.HttpPipeline"
      description: "The HTTP pipeline to use for sending service requests and receiving responses."
    return:
      type: "com.azure.data.appconfiguration.ConfigurationClientBuilder"
      description: "The updated ConfigurationClientBuilder object."
- uid: "com.azure.data.appconfiguration.ConfigurationClientBuilder.retryPolicy(com.azure.core.http.policy.HttpPipelinePolicy)"
  id: "retryPolicy(com.azure.core.http.policy.HttpPipelinePolicy)"
  parent: "com.azure.data.appconfiguration.ConfigurationClientBuilder"
  langs:
  - "java"
  name: "retryPolicy(HttpPipelinePolicy retryPolicy)"
  nameWithType: "ConfigurationClientBuilder.retryPolicy(HttpPipelinePolicy retryPolicy)"
  fullName: "com.azure.data.appconfiguration.ConfigurationClientBuilder.retryPolicy(HttpPipelinePolicy retryPolicy)"
  overload: "com.azure.data.appconfiguration.ConfigurationClientBuilder.retryPolicy*"
  type: "Method"
  package: "com.azure.data.appconfiguration"
  summary: "Sets the <xref uid=\"com.azure.core.http.policy.HttpPipelinePolicy\" data-throw-if-not-resolved=\"false\">HttpPipelinePolicy</xref> that is used when each request is sent. The default retry policy will be used if not provided <xref uid=\"com.azure.data.appconfiguration.ConfigurationClientBuilder.buildAsyncClient()\" data-throw-if-not-resolved=\"false\">ConfigurationClientBuilder#buildAsyncClient()</xref> to build <xref uid=\"com.azure.data.appconfiguration.ConfigurationAsyncClient\" data-throw-if-not-resolved=\"false\">ConfigurationAsyncClient</xref> or <xref uid=\"com.azure.data.appconfiguration.ConfigurationClient\" data-throw-if-not-resolved=\"false\">ConfigurationClient</xref>."
  syntax:
    content: "public ConfigurationClientBuilder retryPolicy(HttpPipelinePolicy retryPolicy)"
    parameters:
    - id: "retryPolicy"
      type: "com.azure.core.http.policy.HttpPipelinePolicy"
      description: "user's retry policy applied to each request."
    return:
      type: "com.azure.data.appconfiguration.ConfigurationClientBuilder"
      description: "The updated ConfigurationClientBuilder object."
- uid: "com.azure.data.appconfiguration.ConfigurationClientBuilder.serviceVersion(com.azure.data.appconfiguration.ConfigurationServiceVersion)"
  id: "serviceVersion(com.azure.data.appconfiguration.ConfigurationServiceVersion)"
  parent: "com.azure.data.appconfiguration.ConfigurationClientBuilder"
  langs:
  - "java"
  name: "serviceVersion(ConfigurationServiceVersion version)"
  nameWithType: "ConfigurationClientBuilder.serviceVersion(ConfigurationServiceVersion version)"
  fullName: "com.azure.data.appconfiguration.ConfigurationClientBuilder.serviceVersion(ConfigurationServiceVersion version)"
  overload: "com.azure.data.appconfiguration.ConfigurationClientBuilder.serviceVersion*"
  type: "Method"
  package: "com.azure.data.appconfiguration"
  summary: "Sets the <xref uid=\"com.azure.data.appconfiguration.ConfigurationServiceVersion\" data-throw-if-not-resolved=\"false\">ConfigurationServiceVersion</xref> that is used when making API requests.\n\nIf a service version is not provided, the service version that will be used will be the latest known service version based on the version of the client library being used. If no service version is specified, updating to a newer version the client library will have the result of potentially moving to a newer service version."
  syntax:
    content: "public ConfigurationClientBuilder serviceVersion(ConfigurationServiceVersion version)"
    parameters:
    - id: "version"
      type: "com.azure.data.appconfiguration.ConfigurationServiceVersion"
      description: "<xref uid=\"com.azure.data.appconfiguration.ConfigurationServiceVersion\" data-throw-if-not-resolved=\"false\">ConfigurationServiceVersion</xref> of the service to be used when making requests."
    return:
      type: "com.azure.data.appconfiguration.ConfigurationClientBuilder"
      description: "The updated ConfigurationClientBuilder object."
references:
- uid: "com.azure.data.appconfiguration.ConfigurationClientBuilder.ConfigurationClientBuilder*"
  name: "ConfigurationClientBuilder"
  nameWithType: "ConfigurationClientBuilder.ConfigurationClientBuilder"
  fullName: "com.azure.data.appconfiguration.ConfigurationClientBuilder.ConfigurationClientBuilder"
  package: "com.azure.data.appconfiguration"
- uid: "com.azure.data.appconfiguration.ConfigurationClient"
  name: "ConfigurationClient"
  nameWithType: "ConfigurationClient"
  fullName: "com.azure.data.appconfiguration.ConfigurationClient"
- uid: "com.azure.data.appconfiguration.ConfigurationClientBuilder.buildClient*"
  name: "buildClient"
  nameWithType: "ConfigurationClientBuilder.buildClient"
  fullName: "com.azure.data.appconfiguration.ConfigurationClientBuilder.buildClient"
  package: "com.azure.data.appconfiguration"
- uid: "com.azure.data.appconfiguration.ConfigurationAsyncClient"
  name: "ConfigurationAsyncClient"
  nameWithType: "ConfigurationAsyncClient"
  fullName: "com.azure.data.appconfiguration.ConfigurationAsyncClient"
- uid: "com.azure.data.appconfiguration.ConfigurationClientBuilder.buildAsyncClient*"
  name: "buildAsyncClient"
  nameWithType: "ConfigurationClientBuilder.buildAsyncClient"
  fullName: "com.azure.data.appconfiguration.ConfigurationClientBuilder.buildAsyncClient"
  package: "com.azure.data.appconfiguration"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "com.azure.data.appconfiguration.ConfigurationClientBuilder.endpoint*"
  name: "endpoint"
  nameWithType: "ConfigurationClientBuilder.endpoint"
  fullName: "com.azure.data.appconfiguration.ConfigurationClientBuilder.endpoint"
  package: "com.azure.data.appconfiguration"
- uid: "com.azure.data.appconfiguration.ConfigurationClientBuilder.connectionString*"
  name: "connectionString"
  nameWithType: "ConfigurationClientBuilder.connectionString"
  fullName: "com.azure.data.appconfiguration.ConfigurationClientBuilder.connectionString"
  package: "com.azure.data.appconfiguration"
- uid: "com.azure.core.credential.TokenCredential"
  spec.java:
  - uid: "com.azure.core.credential.TokenCredential"
    name: "TokenCredential"
    fullName: "com.azure.core.credential.TokenCredential"
- uid: "com.azure.data.appconfiguration.ConfigurationClientBuilder.credential*"
  name: "credential"
  nameWithType: "ConfigurationClientBuilder.credential"
  fullName: "com.azure.data.appconfiguration.ConfigurationClientBuilder.credential"
  package: "com.azure.data.appconfiguration"
- uid: "com.azure.core.http.policy.HttpLogOptions"
  spec.java:
  - uid: "com.azure.core.http.policy.HttpLogOptions"
    name: "HttpLogOptions"
    fullName: "com.azure.core.http.policy.HttpLogOptions"
- uid: "com.azure.data.appconfiguration.ConfigurationClientBuilder.httpLogOptions*"
  name: "httpLogOptions"
  nameWithType: "ConfigurationClientBuilder.httpLogOptions"
  fullName: "com.azure.data.appconfiguration.ConfigurationClientBuilder.httpLogOptions"
  package: "com.azure.data.appconfiguration"
- uid: "com.azure.core.http.policy.HttpPipelinePolicy"
  spec.java:
  - uid: "com.azure.core.http.policy.HttpPipelinePolicy"
    name: "HttpPipelinePolicy"
    fullName: "com.azure.core.http.policy.HttpPipelinePolicy"
- uid: "com.azure.data.appconfiguration.ConfigurationClientBuilder.addPolicy*"
  name: "addPolicy"
  nameWithType: "ConfigurationClientBuilder.addPolicy"
  fullName: "com.azure.data.appconfiguration.ConfigurationClientBuilder.addPolicy"
  package: "com.azure.data.appconfiguration"
- uid: "com.azure.core.http.HttpClient"
  spec.java:
  - uid: "com.azure.core.http.HttpClient"
    name: "HttpClient"
    fullName: "com.azure.core.http.HttpClient"
- uid: "com.azure.data.appconfiguration.ConfigurationClientBuilder.httpClient*"
  name: "httpClient"
  nameWithType: "ConfigurationClientBuilder.httpClient"
  fullName: "com.azure.data.appconfiguration.ConfigurationClientBuilder.httpClient"
  package: "com.azure.data.appconfiguration"
- uid: "com.azure.core.http.HttpPipeline"
  spec.java:
  - uid: "com.azure.core.http.HttpPipeline"
    name: "HttpPipeline"
    fullName: "com.azure.core.http.HttpPipeline"
- uid: "com.azure.data.appconfiguration.ConfigurationClientBuilder.pipeline*"
  name: "pipeline"
  nameWithType: "ConfigurationClientBuilder.pipeline"
  fullName: "com.azure.data.appconfiguration.ConfigurationClientBuilder.pipeline"
  package: "com.azure.data.appconfiguration"
- uid: "com.azure.core.util.Configuration"
  spec.java:
  - uid: "com.azure.core.util.Configuration"
    name: "Configuration"
    fullName: "com.azure.core.util.Configuration"
- uid: "com.azure.data.appconfiguration.ConfigurationClientBuilder.configuration*"
  name: "configuration"
  nameWithType: "ConfigurationClientBuilder.configuration"
  fullName: "com.azure.data.appconfiguration.ConfigurationClientBuilder.configuration"
  package: "com.azure.data.appconfiguration"
- uid: "com.azure.data.appconfiguration.ConfigurationClientBuilder.retryPolicy*"
  name: "retryPolicy"
  nameWithType: "ConfigurationClientBuilder.retryPolicy"
  fullName: "com.azure.data.appconfiguration.ConfigurationClientBuilder.retryPolicy"
  package: "com.azure.data.appconfiguration"
- uid: "com.azure.data.appconfiguration.ConfigurationServiceVersion"
  name: "ConfigurationServiceVersion"
  nameWithType: "ConfigurationServiceVersion"
  fullName: "com.azure.data.appconfiguration.ConfigurationServiceVersion"
- uid: "com.azure.data.appconfiguration.ConfigurationClientBuilder.serviceVersion*"
  name: "serviceVersion"
  nameWithType: "ConfigurationClientBuilder.serviceVersion"
  fullName: "com.azure.data.appconfiguration.ConfigurationClientBuilder.serviceVersion"
  package: "com.azure.data.appconfiguration"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
