### YamlMime:ManagedReference
items:
- uid: "com.azure.identity.ChainedTokenCredential"
  id: "ChainedTokenCredential"
  parent: "com.azure.identity"
  children:
  - "com.azure.identity.ChainedTokenCredential.ChainedTokenCredential(java.util.Deque<com.azure.core.credential.TokenCredential>)"
  - "com.azure.identity.ChainedTokenCredential.getToken(com.azure.core.credential.TokenRequestContext)"
  langs:
  - "java"
  name: "ChainedTokenCredential"
  nameWithType: "ChainedTokenCredential"
  fullName: "com.azure.identity.ChainedTokenCredential"
  type: "Class"
  package: "com.azure.identity"
  summary: "A token credential provider that can provide a credential from a list of providers.\n\n**Sample: Construct a ChainedTokenCredential with silent username+password login tried first, then interactive browser login as needed (e.g. when 2FA is turned on in the directory).**\n\n\\{@codesnippet com.azure.identity.credential.chainedtokencredential.construct\\}"
  syntax:
    content: "public class ChainedTokenCredential implements TokenCredential"
  inheritance:
  - "java.lang.Object"
  implements:
  - "com.azure.core.credential.TokenCredential"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.azure.identity.ChainedTokenCredential.ChainedTokenCredential(java.util.Deque<com.azure.core.credential.TokenCredential>)"
  id: "ChainedTokenCredential(java.util.Deque<com.azure.core.credential.TokenCredential>)"
  parent: "com.azure.identity.ChainedTokenCredential"
  langs:
  - "java"
  name: "ChainedTokenCredential(Deque<TokenCredential> credentials)"
  nameWithType: "ChainedTokenCredential.ChainedTokenCredential(Deque<TokenCredential> credentials)"
  fullName: "com.azure.identity.ChainedTokenCredential.ChainedTokenCredential(Deque<TokenCredential> credentials)"
  overload: "com.azure.identity.ChainedTokenCredential.ChainedTokenCredential*"
  type: "Constructor"
  package: "com.azure.identity"
  summary: "Create an instance of chained token credential that aggregates a list of token credentials."
  syntax:
    content: " ChainedTokenCredential(Deque<TokenCredential> credentials)"
    parameters:
    - id: "credentials"
      type: "java.util.Deque<com.azure.core.credential.TokenCredential>"
- uid: "com.azure.identity.ChainedTokenCredential.getToken(com.azure.core.credential.TokenRequestContext)"
  id: "getToken(com.azure.core.credential.TokenRequestContext)"
  parent: "com.azure.identity.ChainedTokenCredential"
  langs:
  - "java"
  name: "getToken(TokenRequestContext request)"
  nameWithType: "ChainedTokenCredential.getToken(TokenRequestContext request)"
  fullName: "com.azure.identity.ChainedTokenCredential.getToken(TokenRequestContext request)"
  overload: "com.azure.identity.ChainedTokenCredential.getToken*"
  type: "Method"
  package: "com.azure.identity"
  syntax:
    content: "public Mono<AccessToken> getToken(TokenRequestContext request)"
    parameters:
    - id: "request"
      type: "com.azure.core.credential.TokenRequestContext"
    return:
      type: "reactor.core.publisher.Mono<com.azure.core.credential.AccessToken>"
references:
- uid: "java.util.Deque<com.azure.core.credential.TokenCredential>"
  spec.java:
  - uid: "java.util.Deque"
    name: "Deque"
    fullName: "java.util.Deque"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.core.credential.TokenCredential"
    name: "TokenCredential"
    fullName: "com.azure.core.credential.TokenCredential"
  - name: ">"
    fullName: ">"
- uid: "com.azure.identity.ChainedTokenCredential.ChainedTokenCredential*"
  name: "ChainedTokenCredential"
  nameWithType: "ChainedTokenCredential.ChainedTokenCredential"
  fullName: "com.azure.identity.ChainedTokenCredential.ChainedTokenCredential"
  package: "com.azure.identity"
- uid: "com.azure.core.credential.TokenRequestContext"
  spec.java:
  - uid: "com.azure.core.credential.TokenRequestContext"
    name: "TokenRequestContext"
    fullName: "com.azure.core.credential.TokenRequestContext"
- uid: "reactor.core.publisher.Mono<com.azure.core.credential.AccessToken>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.core.credential.AccessToken"
    name: "AccessToken"
    fullName: "com.azure.core.credential.AccessToken"
  - name: ">"
    fullName: ">"
- uid: "com.azure.identity.ChainedTokenCredential.getToken*"
  name: "getToken"
  nameWithType: "ChainedTokenCredential.getToken"
  fullName: "com.azure.identity.ChainedTokenCredential.getToken"
  package: "com.azure.identity"
- uid: "com.azure.core.credential.TokenCredential"
  name: "TokenCredential"
  nameWithType: "TokenCredential"
  fullName: "com.azure.core.credential.TokenCredential"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "java.util.Deque"
  name: "Deque"
  nameWithType: "Deque"
  fullName: "java.util.Deque"
- uid: "com.azure.core.credential.AccessToken"
  name: "AccessToken"
  nameWithType: "AccessToken"
  fullName: "com.azure.core.credential.AccessToken"
- uid: "reactor.core.publisher.Mono"
  name: "Mono"
  nameWithType: "Mono"
  fullName: "reactor.core.publisher.Mono"
