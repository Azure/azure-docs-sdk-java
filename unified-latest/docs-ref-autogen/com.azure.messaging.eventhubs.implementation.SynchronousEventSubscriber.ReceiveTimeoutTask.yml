### YamlMime:ManagedReference
items:
- uid: "com.azure.messaging.eventhubs.implementation.SynchronousEventSubscriber.ReceiveTimeoutTask"
  id: "ReceiveTimeoutTask"
  parent: "com.azure.messaging.eventhubs.implementation"
  children:
  - "com.azure.messaging.eventhubs.implementation.SynchronousEventSubscriber.ReceiveTimeoutTask.ReceiveTimeoutTask(long,java.lang.Runnable)"
  - "com.azure.messaging.eventhubs.implementation.SynchronousEventSubscriber.ReceiveTimeoutTask.run()"
  langs:
  - "java"
  name: "SynchronousEventSubscriber.ReceiveTimeoutTask"
  nameWithType: "SynchronousEventSubscriber.ReceiveTimeoutTask"
  fullName: "com.azure.messaging.eventhubs.implementation.SynchronousEventSubscriber.ReceiveTimeoutTask"
  type: "Class"
  package: "com.azure.messaging.eventhubs.implementation"
  syntax:
    content: "private static class SynchronousEventSubscriber.ReceiveTimeoutTask extends TimerTask"
  inheritance:
  - "java.lang.Object"
  - "java.util.TimerTask"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
  - "java.util.TimerTask.cancel()"
  - "java.util.TimerTask.run()"
  - "java.util.TimerTask.scheduledExecutionTime()"
- uid: "com.azure.messaging.eventhubs.implementation.SynchronousEventSubscriber.ReceiveTimeoutTask.ReceiveTimeoutTask(long,java.lang.Runnable)"
  id: "ReceiveTimeoutTask(long,java.lang.Runnable)"
  parent: "com.azure.messaging.eventhubs.implementation.SynchronousEventSubscriber.ReceiveTimeoutTask"
  langs:
  - "java"
  name: "ReceiveTimeoutTask(long workId, Runnable onDispose)"
  nameWithType: "SynchronousEventSubscriber.ReceiveTimeoutTask.ReceiveTimeoutTask(long workId, Runnable onDispose)"
  fullName: "com.azure.messaging.eventhubs.implementation.SynchronousEventSubscriber.ReceiveTimeoutTask.ReceiveTimeoutTask(long workId, Runnable onDispose)"
  overload: "com.azure.messaging.eventhubs.implementation.SynchronousEventSubscriber.ReceiveTimeoutTask.ReceiveTimeoutTask*"
  type: "Constructor"
  package: "com.azure.messaging.eventhubs.implementation"
  syntax:
    content: " ReceiveTimeoutTask(long workId, Runnable onDispose)"
    parameters:
    - id: "workId"
      type: "long"
    - id: "onDispose"
      type: "java.lang.Runnable"
- uid: "com.azure.messaging.eventhubs.implementation.SynchronousEventSubscriber.ReceiveTimeoutTask.run()"
  id: "run()"
  parent: "com.azure.messaging.eventhubs.implementation.SynchronousEventSubscriber.ReceiveTimeoutTask"
  langs:
  - "java"
  name: "run()"
  nameWithType: "SynchronousEventSubscriber.ReceiveTimeoutTask.run()"
  fullName: "com.azure.messaging.eventhubs.implementation.SynchronousEventSubscriber.ReceiveTimeoutTask.run()"
  overload: "com.azure.messaging.eventhubs.implementation.SynchronousEventSubscriber.ReceiveTimeoutTask.run*"
  type: "Method"
  package: "com.azure.messaging.eventhubs.implementation"
  syntax:
    content: "public void run()"
references:
- uid: "long"
  spec.java:
  - uid: "long"
    name: "long"
    fullName: "long"
- uid: "java.lang.Runnable"
  spec.java:
  - uid: "java.lang.Runnable"
    name: "Runnable"
    fullName: "java.lang.Runnable"
- uid: "com.azure.messaging.eventhubs.implementation.SynchronousEventSubscriber.ReceiveTimeoutTask.ReceiveTimeoutTask*"
  name: "ReceiveTimeoutTask"
  nameWithType: "SynchronousEventSubscriber.ReceiveTimeoutTask.ReceiveTimeoutTask"
  fullName: "com.azure.messaging.eventhubs.implementation.SynchronousEventSubscriber.ReceiveTimeoutTask.ReceiveTimeoutTask"
  package: "com.azure.messaging.eventhubs.implementation"
- uid: "com.azure.messaging.eventhubs.implementation.SynchronousEventSubscriber.ReceiveTimeoutTask.run*"
  name: "run"
  nameWithType: "SynchronousEventSubscriber.ReceiveTimeoutTask.run"
  fullName: "com.azure.messaging.eventhubs.implementation.SynchronousEventSubscriber.ReceiveTimeoutTask.run"
  package: "com.azure.messaging.eventhubs.implementation"
- uid: "java.util.TimerTask"
  name: "TimerTask"
  nameWithType: "TimerTask"
  fullName: "java.util.TimerTask"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.util.TimerTask.run()"
  name: "TimerTask.run()"
  nameWithType: "TimerTask.run()"
  fullName: "java.util.TimerTask.run()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.util.TimerTask.cancel()"
  name: "TimerTask.cancel()"
  nameWithType: "TimerTask.cancel()"
  fullName: "java.util.TimerTask.cancel()"
- uid: "java.util.TimerTask.scheduledExecutionTime()"
  name: "TimerTask.scheduledExecutionTime()"
  nameWithType: "TimerTask.scheduledExecutionTime()"
  fullName: "java.util.TimerTask.scheduledExecutionTime()"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
