### YamlMime:ManagedReference
items:
- uid: "com.azure.storage.blob.implementation.ServicesImpl.ServicesService"
  id: "ServicesService"
  parent: "com.azure.storage.blob.implementation"
  children:
  - "com.azure.storage.blob.implementation.ServicesImpl.ServicesService.getAccountInfo(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  - "com.azure.storage.blob.implementation.ServicesImpl.ServicesService.getProperties(java.lang.String,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  - "com.azure.storage.blob.implementation.ServicesImpl.ServicesService.getStatistics(java.lang.String,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  - "com.azure.storage.blob.implementation.ServicesImpl.ServicesService.getUserDelegationKey(java.lang.String,com.azure.storage.blob.models.KeyInfo,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  - "com.azure.storage.blob.implementation.ServicesImpl.ServicesService.listBlobContainersSegment(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,com.azure.storage.blob.models.ListBlobContainersIncludeType,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  - "com.azure.storage.blob.implementation.ServicesImpl.ServicesService.setProperties(java.lang.String,com.azure.storage.blob.models.BlobServiceProperties,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  - "com.azure.storage.blob.implementation.ServicesImpl.ServicesService.submitBatch(java.lang.String,reactor.core.publisher.Flux<java.nio.ByteBuffer>,long,java.lang.String,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  langs:
  - "java"
  name: "ServicesImpl.ServicesService"
  nameWithType: "ServicesImpl.ServicesService"
  fullName: "com.azure.storage.blob.implementation.ServicesImpl.ServicesService"
  type: "Interface"
  package: "com.azure.storage.blob.implementation"
  summary: "The interface defining all the services for AzureBlobStorageServices to be used by the proxy service to perform REST calls."
  syntax:
    content: "private static interface ServicesImpl.ServicesService"
- uid: "com.azure.storage.blob.implementation.ServicesImpl.ServicesService.getAccountInfo(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  id: "getAccountInfo(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  parent: "com.azure.storage.blob.implementation.ServicesImpl.ServicesService"
  langs:
  - "java"
  name: "getAccountInfo(String url, String version, String restype, String comp, Context context)"
  nameWithType: "ServicesImpl.ServicesService.getAccountInfo(String url, String version, String restype, String comp, Context context)"
  fullName: "com.azure.storage.blob.implementation.ServicesImpl.ServicesService.getAccountInfo(String url, String version, String restype, String comp, Context context)"
  overload: "com.azure.storage.blob.implementation.ServicesImpl.ServicesService.getAccountInfo*"
  type: "Method"
  package: "com.azure.storage.blob.implementation"
  syntax:
    content: "public abstract Mono<ServicesGetAccountInfoResponse> getAccountInfo(String url, String version, String restype, String comp, Context context)"
    parameters:
    - id: "url"
      type: "java.lang.String"
    - id: "version"
      type: "java.lang.String"
    - id: "restype"
      type: "java.lang.String"
    - id: "comp"
      type: "java.lang.String"
    - id: "context"
      type: "com.azure.core.util.Context"
    return:
      type: "reactor.core.publisher.Mono<com.azure.storage.blob.implementation.models.ServicesGetAccountInfoResponse>"
- uid: "com.azure.storage.blob.implementation.ServicesImpl.ServicesService.getProperties(java.lang.String,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  id: "getProperties(java.lang.String,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  parent: "com.azure.storage.blob.implementation.ServicesImpl.ServicesService"
  langs:
  - "java"
  name: "getProperties(String url, Integer timeout, String version, String requestId, String restype, String comp, Context context)"
  nameWithType: "ServicesImpl.ServicesService.getProperties(String url, Integer timeout, String version, String requestId, String restype, String comp, Context context)"
  fullName: "com.azure.storage.blob.implementation.ServicesImpl.ServicesService.getProperties(String url, Integer timeout, String version, String requestId, String restype, String comp, Context context)"
  overload: "com.azure.storage.blob.implementation.ServicesImpl.ServicesService.getProperties*"
  type: "Method"
  package: "com.azure.storage.blob.implementation"
  syntax:
    content: "public abstract Mono<ServicesGetPropertiesResponse> getProperties(String url, Integer timeout, String version, String requestId, String restype, String comp, Context context)"
    parameters:
    - id: "url"
      type: "java.lang.String"
    - id: "timeout"
      type: "java.lang.Integer"
    - id: "version"
      type: "java.lang.String"
    - id: "requestId"
      type: "java.lang.String"
    - id: "restype"
      type: "java.lang.String"
    - id: "comp"
      type: "java.lang.String"
    - id: "context"
      type: "com.azure.core.util.Context"
    return:
      type: "reactor.core.publisher.Mono<com.azure.storage.blob.implementation.models.ServicesGetPropertiesResponse>"
- uid: "com.azure.storage.blob.implementation.ServicesImpl.ServicesService.getStatistics(java.lang.String,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  id: "getStatistics(java.lang.String,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  parent: "com.azure.storage.blob.implementation.ServicesImpl.ServicesService"
  langs:
  - "java"
  name: "getStatistics(String url, Integer timeout, String version, String requestId, String restype, String comp, Context context)"
  nameWithType: "ServicesImpl.ServicesService.getStatistics(String url, Integer timeout, String version, String requestId, String restype, String comp, Context context)"
  fullName: "com.azure.storage.blob.implementation.ServicesImpl.ServicesService.getStatistics(String url, Integer timeout, String version, String requestId, String restype, String comp, Context context)"
  overload: "com.azure.storage.blob.implementation.ServicesImpl.ServicesService.getStatistics*"
  type: "Method"
  package: "com.azure.storage.blob.implementation"
  syntax:
    content: "public abstract Mono<ServicesGetStatisticsResponse> getStatistics(String url, Integer timeout, String version, String requestId, String restype, String comp, Context context)"
    parameters:
    - id: "url"
      type: "java.lang.String"
    - id: "timeout"
      type: "java.lang.Integer"
    - id: "version"
      type: "java.lang.String"
    - id: "requestId"
      type: "java.lang.String"
    - id: "restype"
      type: "java.lang.String"
    - id: "comp"
      type: "java.lang.String"
    - id: "context"
      type: "com.azure.core.util.Context"
    return:
      type: "reactor.core.publisher.Mono<com.azure.storage.blob.implementation.models.ServicesGetStatisticsResponse>"
- uid: "com.azure.storage.blob.implementation.ServicesImpl.ServicesService.getUserDelegationKey(java.lang.String,com.azure.storage.blob.models.KeyInfo,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  id: "getUserDelegationKey(java.lang.String,com.azure.storage.blob.models.KeyInfo,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  parent: "com.azure.storage.blob.implementation.ServicesImpl.ServicesService"
  langs:
  - "java"
  name: "getUserDelegationKey(String url, KeyInfo keyInfo, Integer timeout, String version, String requestId, String restype, String comp, Context context)"
  nameWithType: "ServicesImpl.ServicesService.getUserDelegationKey(String url, KeyInfo keyInfo, Integer timeout, String version, String requestId, String restype, String comp, Context context)"
  fullName: "com.azure.storage.blob.implementation.ServicesImpl.ServicesService.getUserDelegationKey(String url, KeyInfo keyInfo, Integer timeout, String version, String requestId, String restype, String comp, Context context)"
  overload: "com.azure.storage.blob.implementation.ServicesImpl.ServicesService.getUserDelegationKey*"
  type: "Method"
  package: "com.azure.storage.blob.implementation"
  syntax:
    content: "public abstract Mono<ServicesGetUserDelegationKeyResponse> getUserDelegationKey(String url, KeyInfo keyInfo, Integer timeout, String version, String requestId, String restype, String comp, Context context)"
    parameters:
    - id: "url"
      type: "java.lang.String"
    - id: "keyInfo"
      type: "com.azure.storage.blob.models.KeyInfo"
    - id: "timeout"
      type: "java.lang.Integer"
    - id: "version"
      type: "java.lang.String"
    - id: "requestId"
      type: "java.lang.String"
    - id: "restype"
      type: "java.lang.String"
    - id: "comp"
      type: "java.lang.String"
    - id: "context"
      type: "com.azure.core.util.Context"
    return:
      type: "reactor.core.publisher.Mono<com.azure.storage.blob.implementation.models.ServicesGetUserDelegationKeyResponse>"
- uid: "com.azure.storage.blob.implementation.ServicesImpl.ServicesService.listBlobContainersSegment(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,com.azure.storage.blob.models.ListBlobContainersIncludeType,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  id: "listBlobContainersSegment(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,com.azure.storage.blob.models.ListBlobContainersIncludeType,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  parent: "com.azure.storage.blob.implementation.ServicesImpl.ServicesService"
  langs:
  - "java"
  name: "listBlobContainersSegment(String url, String prefix, String marker1, Integer maxresults, ListBlobContainersIncludeType include, Integer timeout, String version, String requestId, String comp, Context context)"
  nameWithType: "ServicesImpl.ServicesService.listBlobContainersSegment(String url, String prefix, String marker1, Integer maxresults, ListBlobContainersIncludeType include, Integer timeout, String version, String requestId, String comp, Context context)"
  fullName: "com.azure.storage.blob.implementation.ServicesImpl.ServicesService.listBlobContainersSegment(String url, String prefix, String marker1, Integer maxresults, ListBlobContainersIncludeType include, Integer timeout, String version, String requestId, String comp, Context context)"
  overload: "com.azure.storage.blob.implementation.ServicesImpl.ServicesService.listBlobContainersSegment*"
  type: "Method"
  package: "com.azure.storage.blob.implementation"
  syntax:
    content: "public abstract Mono<ServicesListBlobContainersSegmentResponse> listBlobContainersSegment(String url, String prefix, String marker1, Integer maxresults, ListBlobContainersIncludeType include, Integer timeout, String version, String requestId, String comp, Context context)"
    parameters:
    - id: "url"
      type: "java.lang.String"
    - id: "prefix"
      type: "java.lang.String"
    - id: "marker1"
      type: "java.lang.String"
    - id: "maxresults"
      type: "java.lang.Integer"
    - id: "include"
      type: "com.azure.storage.blob.models.ListBlobContainersIncludeType"
    - id: "timeout"
      type: "java.lang.Integer"
    - id: "version"
      type: "java.lang.String"
    - id: "requestId"
      type: "java.lang.String"
    - id: "comp"
      type: "java.lang.String"
    - id: "context"
      type: "com.azure.core.util.Context"
    return:
      type: "reactor.core.publisher.Mono<com.azure.storage.blob.implementation.models.ServicesListBlobContainersSegmentResponse>"
- uid: "com.azure.storage.blob.implementation.ServicesImpl.ServicesService.setProperties(java.lang.String,com.azure.storage.blob.models.BlobServiceProperties,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  id: "setProperties(java.lang.String,com.azure.storage.blob.models.BlobServiceProperties,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  parent: "com.azure.storage.blob.implementation.ServicesImpl.ServicesService"
  langs:
  - "java"
  name: "setProperties(String url, BlobServiceProperties blobServiceProperties, Integer timeout, String version, String requestId, String restype, String comp, Context context)"
  nameWithType: "ServicesImpl.ServicesService.setProperties(String url, BlobServiceProperties blobServiceProperties, Integer timeout, String version, String requestId, String restype, String comp, Context context)"
  fullName: "com.azure.storage.blob.implementation.ServicesImpl.ServicesService.setProperties(String url, BlobServiceProperties blobServiceProperties, Integer timeout, String version, String requestId, String restype, String comp, Context context)"
  overload: "com.azure.storage.blob.implementation.ServicesImpl.ServicesService.setProperties*"
  type: "Method"
  package: "com.azure.storage.blob.implementation"
  syntax:
    content: "public abstract Mono<ServicesSetPropertiesResponse> setProperties(String url, BlobServiceProperties blobServiceProperties, Integer timeout, String version, String requestId, String restype, String comp, Context context)"
    parameters:
    - id: "url"
      type: "java.lang.String"
    - id: "blobServiceProperties"
      type: "com.azure.storage.blob.models.BlobServiceProperties"
    - id: "timeout"
      type: "java.lang.Integer"
    - id: "version"
      type: "java.lang.String"
    - id: "requestId"
      type: "java.lang.String"
    - id: "restype"
      type: "java.lang.String"
    - id: "comp"
      type: "java.lang.String"
    - id: "context"
      type: "com.azure.core.util.Context"
    return:
      type: "reactor.core.publisher.Mono<com.azure.storage.blob.implementation.models.ServicesSetPropertiesResponse>"
- uid: "com.azure.storage.blob.implementation.ServicesImpl.ServicesService.submitBatch(java.lang.String,reactor.core.publisher.Flux<java.nio.ByteBuffer>,long,java.lang.String,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  id: "submitBatch(java.lang.String,reactor.core.publisher.Flux<java.nio.ByteBuffer>,long,java.lang.String,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  parent: "com.azure.storage.blob.implementation.ServicesImpl.ServicesService"
  langs:
  - "java"
  name: "submitBatch(String url, Flux<ByteBuffer> body, long contentLength, String multipartContentType, Integer timeout, String version, String requestId, String comp, Context context)"
  nameWithType: "ServicesImpl.ServicesService.submitBatch(String url, Flux<ByteBuffer> body, long contentLength, String multipartContentType, Integer timeout, String version, String requestId, String comp, Context context)"
  fullName: "com.azure.storage.blob.implementation.ServicesImpl.ServicesService.submitBatch(String url, Flux<ByteBuffer> body, long contentLength, String multipartContentType, Integer timeout, String version, String requestId, String comp, Context context)"
  overload: "com.azure.storage.blob.implementation.ServicesImpl.ServicesService.submitBatch*"
  type: "Method"
  package: "com.azure.storage.blob.implementation"
  syntax:
    content: "public abstract Mono<ServicesSubmitBatchResponse> submitBatch(String url, Flux<ByteBuffer> body, long contentLength, String multipartContentType, Integer timeout, String version, String requestId, String comp, Context context)"
    parameters:
    - id: "url"
      type: "java.lang.String"
    - id: "body"
      type: "reactor.core.publisher.Flux<java.nio.ByteBuffer>"
    - id: "contentLength"
      type: "long"
    - id: "multipartContentType"
      type: "java.lang.String"
    - id: "timeout"
      type: "java.lang.Integer"
    - id: "version"
      type: "java.lang.String"
    - id: "requestId"
      type: "java.lang.String"
    - id: "comp"
      type: "java.lang.String"
    - id: "context"
      type: "com.azure.core.util.Context"
    return:
      type: "reactor.core.publisher.Mono<com.azure.storage.blob.implementation.models.ServicesSubmitBatchResponse>"
references:
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "com.azure.storage.blob.models.BlobServiceProperties"
  name: "BlobServiceProperties"
  nameWithType: "BlobServiceProperties"
  fullName: "com.azure.storage.blob.models.BlobServiceProperties"
- uid: "java.lang.Integer"
  spec.java:
  - uid: "java.lang.Integer"
    name: "Integer"
    fullName: "java.lang.Integer"
- uid: "com.azure.core.util.Context"
  spec.java:
  - uid: "com.azure.core.util.Context"
    name: "Context"
    fullName: "com.azure.core.util.Context"
- uid: "reactor.core.publisher.Mono<com.azure.storage.blob.implementation.models.ServicesSetPropertiesResponse>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.storage.blob.implementation.models.ServicesSetPropertiesResponse"
    name: "ServicesSetPropertiesResponse"
    fullName: "com.azure.storage.blob.implementation.models.ServicesSetPropertiesResponse"
  - name: ">"
    fullName: ">"
- uid: "com.azure.storage.blob.implementation.ServicesImpl.ServicesService.setProperties*"
  name: "setProperties"
  nameWithType: "ServicesImpl.ServicesService.setProperties"
  fullName: "com.azure.storage.blob.implementation.ServicesImpl.ServicesService.setProperties"
  package: "com.azure.storage.blob.implementation"
- uid: "reactor.core.publisher.Mono<com.azure.storage.blob.implementation.models.ServicesGetPropertiesResponse>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.storage.blob.implementation.models.ServicesGetPropertiesResponse"
    name: "ServicesGetPropertiesResponse"
    fullName: "com.azure.storage.blob.implementation.models.ServicesGetPropertiesResponse"
  - name: ">"
    fullName: ">"
- uid: "com.azure.storage.blob.implementation.ServicesImpl.ServicesService.getProperties*"
  name: "getProperties"
  nameWithType: "ServicesImpl.ServicesService.getProperties"
  fullName: "com.azure.storage.blob.implementation.ServicesImpl.ServicesService.getProperties"
  package: "com.azure.storage.blob.implementation"
- uid: "reactor.core.publisher.Mono<com.azure.storage.blob.implementation.models.ServicesGetStatisticsResponse>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.storage.blob.implementation.models.ServicesGetStatisticsResponse"
    name: "ServicesGetStatisticsResponse"
    fullName: "com.azure.storage.blob.implementation.models.ServicesGetStatisticsResponse"
  - name: ">"
    fullName: ">"
- uid: "com.azure.storage.blob.implementation.ServicesImpl.ServicesService.getStatistics*"
  name: "getStatistics"
  nameWithType: "ServicesImpl.ServicesService.getStatistics"
  fullName: "com.azure.storage.blob.implementation.ServicesImpl.ServicesService.getStatistics"
  package: "com.azure.storage.blob.implementation"
- uid: "com.azure.storage.blob.models.ListBlobContainersIncludeType"
  name: "ListBlobContainersIncludeType"
  nameWithType: "ListBlobContainersIncludeType"
  fullName: "com.azure.storage.blob.models.ListBlobContainersIncludeType"
- uid: "reactor.core.publisher.Mono<com.azure.storage.blob.implementation.models.ServicesListBlobContainersSegmentResponse>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.storage.blob.implementation.models.ServicesListBlobContainersSegmentResponse"
    name: "ServicesListBlobContainersSegmentResponse"
    fullName: "com.azure.storage.blob.implementation.models.ServicesListBlobContainersSegmentResponse"
  - name: ">"
    fullName: ">"
- uid: "com.azure.storage.blob.implementation.ServicesImpl.ServicesService.listBlobContainersSegment*"
  name: "listBlobContainersSegment"
  nameWithType: "ServicesImpl.ServicesService.listBlobContainersSegment"
  fullName: "com.azure.storage.blob.implementation.ServicesImpl.ServicesService.listBlobContainersSegment"
  package: "com.azure.storage.blob.implementation"
- uid: "com.azure.storage.blob.models.KeyInfo"
  name: "KeyInfo"
  nameWithType: "KeyInfo"
  fullName: "com.azure.storage.blob.models.KeyInfo"
- uid: "reactor.core.publisher.Mono<com.azure.storage.blob.implementation.models.ServicesGetUserDelegationKeyResponse>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.storage.blob.implementation.models.ServicesGetUserDelegationKeyResponse"
    name: "ServicesGetUserDelegationKeyResponse"
    fullName: "com.azure.storage.blob.implementation.models.ServicesGetUserDelegationKeyResponse"
  - name: ">"
    fullName: ">"
- uid: "com.azure.storage.blob.implementation.ServicesImpl.ServicesService.getUserDelegationKey*"
  name: "getUserDelegationKey"
  nameWithType: "ServicesImpl.ServicesService.getUserDelegationKey"
  fullName: "com.azure.storage.blob.implementation.ServicesImpl.ServicesService.getUserDelegationKey"
  package: "com.azure.storage.blob.implementation"
- uid: "reactor.core.publisher.Mono<com.azure.storage.blob.implementation.models.ServicesGetAccountInfoResponse>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.storage.blob.implementation.models.ServicesGetAccountInfoResponse"
    name: "ServicesGetAccountInfoResponse"
    fullName: "com.azure.storage.blob.implementation.models.ServicesGetAccountInfoResponse"
  - name: ">"
    fullName: ">"
- uid: "com.azure.storage.blob.implementation.ServicesImpl.ServicesService.getAccountInfo*"
  name: "getAccountInfo"
  nameWithType: "ServicesImpl.ServicesService.getAccountInfo"
  fullName: "com.azure.storage.blob.implementation.ServicesImpl.ServicesService.getAccountInfo"
  package: "com.azure.storage.blob.implementation"
- uid: "reactor.core.publisher.Flux<java.nio.ByteBuffer>"
  spec.java:
  - uid: "reactor.core.publisher.Flux"
    name: "Flux"
    fullName: "reactor.core.publisher.Flux"
  - name: "<"
    fullName: "<"
  - uid: "java.nio.ByteBuffer"
    name: "ByteBuffer"
    fullName: "java.nio.ByteBuffer"
  - name: ">"
    fullName: ">"
- uid: "long"
  spec.java:
  - uid: "long"
    name: "long"
    fullName: "long"
- uid: "reactor.core.publisher.Mono<com.azure.storage.blob.implementation.models.ServicesSubmitBatchResponse>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.storage.blob.implementation.models.ServicesSubmitBatchResponse"
    name: "ServicesSubmitBatchResponse"
    fullName: "com.azure.storage.blob.implementation.models.ServicesSubmitBatchResponse"
  - name: ">"
    fullName: ">"
- uid: "com.azure.storage.blob.implementation.ServicesImpl.ServicesService.submitBatch*"
  name: "submitBatch"
  nameWithType: "ServicesImpl.ServicesService.submitBatch"
  fullName: "com.azure.storage.blob.implementation.ServicesImpl.ServicesService.submitBatch"
  package: "com.azure.storage.blob.implementation"
- uid: "com.azure.storage.blob.implementation.models.ServicesSetPropertiesResponse"
  name: "ServicesSetPropertiesResponse"
  nameWithType: "ServicesSetPropertiesResponse"
  fullName: "com.azure.storage.blob.implementation.models.ServicesSetPropertiesResponse"
- uid: "reactor.core.publisher.Mono"
  name: "Mono"
  nameWithType: "Mono"
  fullName: "reactor.core.publisher.Mono"
- uid: "com.azure.storage.blob.implementation.models.ServicesGetPropertiesResponse"
  name: "ServicesGetPropertiesResponse"
  nameWithType: "ServicesGetPropertiesResponse"
  fullName: "com.azure.storage.blob.implementation.models.ServicesGetPropertiesResponse"
- uid: "com.azure.storage.blob.implementation.models.ServicesGetStatisticsResponse"
  name: "ServicesGetStatisticsResponse"
  nameWithType: "ServicesGetStatisticsResponse"
  fullName: "com.azure.storage.blob.implementation.models.ServicesGetStatisticsResponse"
- uid: "com.azure.storage.blob.implementation.models.ServicesListBlobContainersSegmentResponse"
  name: "ServicesListBlobContainersSegmentResponse"
  nameWithType: "ServicesListBlobContainersSegmentResponse"
  fullName: "com.azure.storage.blob.implementation.models.ServicesListBlobContainersSegmentResponse"
- uid: "com.azure.storage.blob.implementation.models.ServicesGetUserDelegationKeyResponse"
  name: "ServicesGetUserDelegationKeyResponse"
  nameWithType: "ServicesGetUserDelegationKeyResponse"
  fullName: "com.azure.storage.blob.implementation.models.ServicesGetUserDelegationKeyResponse"
- uid: "com.azure.storage.blob.implementation.models.ServicesGetAccountInfoResponse"
  name: "ServicesGetAccountInfoResponse"
  nameWithType: "ServicesGetAccountInfoResponse"
  fullName: "com.azure.storage.blob.implementation.models.ServicesGetAccountInfoResponse"
- uid: "reactor.core.publisher.Flux"
  name: "Flux"
  nameWithType: "Flux"
  fullName: "reactor.core.publisher.Flux"
- uid: "java.nio.ByteBuffer"
  name: "ByteBuffer"
  nameWithType: "ByteBuffer"
  fullName: "java.nio.ByteBuffer"
- uid: "com.azure.storage.blob.implementation.models.ServicesSubmitBatchResponse"
  name: "ServicesSubmitBatchResponse"
  nameWithType: "ServicesSubmitBatchResponse"
  fullName: "com.azure.storage.blob.implementation.models.ServicesSubmitBatchResponse"
