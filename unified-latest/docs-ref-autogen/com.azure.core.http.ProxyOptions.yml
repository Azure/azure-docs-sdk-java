### YamlMime:ManagedReference
items:
- uid: "com.azure.core.http.ProxyOptions"
  id: "ProxyOptions"
  parent: "com.azure.core.http"
  children:
  - "com.azure.core.http.ProxyOptions.ProxyOptions(com.azure.core.http.ProxyOptions.Type,java.net.InetSocketAddress)"
  - "com.azure.core.http.ProxyOptions.Type"
  - "com.azure.core.http.ProxyOptions.getAddress()"
  - "com.azure.core.http.ProxyOptions.getPassword()"
  - "com.azure.core.http.ProxyOptions.getType()"
  - "com.azure.core.http.ProxyOptions.getUsername()"
  - "com.azure.core.http.ProxyOptions.setCredentials(java.lang.String,java.lang.String)"
  langs:
  - "java"
  name: "ProxyOptions"
  nameWithType: "ProxyOptions"
  fullName: "com.azure.core.http.ProxyOptions"
  type: "Class"
  package: "com.azure.core.http"
  summary: "This represents proxy configuration to be used in http clients.."
  syntax:
    content: "public class ProxyOptions"
  inheritance:
  - "java.lang.Object"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.azure.core.http.ProxyOptions.ProxyOptions(com.azure.core.http.ProxyOptions.Type,java.net.InetSocketAddress)"
  id: "ProxyOptions(com.azure.core.http.ProxyOptions.Type,java.net.InetSocketAddress)"
  parent: "com.azure.core.http.ProxyOptions"
  langs:
  - "java"
  name: "ProxyOptions(ProxyOptions.Type type, InetSocketAddress address)"
  nameWithType: "ProxyOptions.ProxyOptions(ProxyOptions.Type type, InetSocketAddress address)"
  fullName: "com.azure.core.http.ProxyOptions.ProxyOptions(ProxyOptions.Type type, InetSocketAddress address)"
  overload: "com.azure.core.http.ProxyOptions.ProxyOptions*"
  type: "Constructor"
  package: "com.azure.core.http"
  summary: "Creates ProxyOptions."
  syntax:
    content: "public ProxyOptions(ProxyOptions.Type type, InetSocketAddress address)"
    parameters:
    - id: "type"
      type: "com.azure.core.http.ProxyOptions.Type"
      description: "the proxy type"
    - id: "address"
      type: "java.net.InetSocketAddress"
      description: "the proxy address (ip and port number)"
- uid: "com.azure.core.http.ProxyOptions.getAddress()"
  id: "getAddress()"
  parent: "com.azure.core.http.ProxyOptions"
  langs:
  - "java"
  name: "getAddress()"
  nameWithType: "ProxyOptions.getAddress()"
  fullName: "com.azure.core.http.ProxyOptions.getAddress()"
  overload: "com.azure.core.http.ProxyOptions.getAddress*"
  type: "Method"
  package: "com.azure.core.http"
  syntax:
    content: "public InetSocketAddress getAddress()"
    return:
      type: "java.net.InetSocketAddress"
      description: "the address of the proxy."
- uid: "com.azure.core.http.ProxyOptions.getPassword()"
  id: "getPassword()"
  parent: "com.azure.core.http.ProxyOptions"
  langs:
  - "java"
  name: "getPassword()"
  nameWithType: "ProxyOptions.getPassword()"
  fullName: "com.azure.core.http.ProxyOptions.getPassword()"
  overload: "com.azure.core.http.ProxyOptions.getPassword*"
  type: "Method"
  package: "com.azure.core.http"
  syntax:
    content: "public String getPassword()"
    return:
      type: "java.lang.String"
      description: "the proxy password."
- uid: "com.azure.core.http.ProxyOptions.getType()"
  id: "getType()"
  parent: "com.azure.core.http.ProxyOptions"
  langs:
  - "java"
  name: "getType()"
  nameWithType: "ProxyOptions.getType()"
  fullName: "com.azure.core.http.ProxyOptions.getType()"
  overload: "com.azure.core.http.ProxyOptions.getType*"
  type: "Method"
  package: "com.azure.core.http"
  syntax:
    content: "public ProxyOptions.Type getType()"
    return:
      type: "com.azure.core.http.ProxyOptions.Type"
      description: "the type of the proxy."
- uid: "com.azure.core.http.ProxyOptions.getUsername()"
  id: "getUsername()"
  parent: "com.azure.core.http.ProxyOptions"
  langs:
  - "java"
  name: "getUsername()"
  nameWithType: "ProxyOptions.getUsername()"
  fullName: "com.azure.core.http.ProxyOptions.getUsername()"
  overload: "com.azure.core.http.ProxyOptions.getUsername*"
  type: "Method"
  package: "com.azure.core.http"
  syntax:
    content: "public String getUsername()"
    return:
      type: "java.lang.String"
      description: "the proxy user name."
- uid: "com.azure.core.http.ProxyOptions.setCredentials(java.lang.String,java.lang.String)"
  id: "setCredentials(java.lang.String,java.lang.String)"
  parent: "com.azure.core.http.ProxyOptions"
  langs:
  - "java"
  name: "setCredentials(String username, String password)"
  nameWithType: "ProxyOptions.setCredentials(String username, String password)"
  fullName: "com.azure.core.http.ProxyOptions.setCredentials(String username, String password)"
  overload: "com.azure.core.http.ProxyOptions.setCredentials*"
  type: "Method"
  package: "com.azure.core.http"
  summary: "Set the proxy credentials."
  syntax:
    content: "public ProxyOptions setCredentials(String username, String password)"
    parameters:
    - id: "username"
      type: "java.lang.String"
      description: "proxy user name"
    - id: "password"
      type: "java.lang.String"
      description: "proxy password"
    return:
      type: "com.azure.core.http.ProxyOptions"
      description: "the updated ProxyOptions object"
references:
- uid: "com.azure.core.http.ProxyOptions.Type"
  name: "ProxyOptions.Type"
  nameWithType: "ProxyOptions.Type"
  fullName: "com.azure.core.http.ProxyOptions.Type"
- uid: "java.net.InetSocketAddress"
  spec.java:
  - uid: "java.net.InetSocketAddress"
    name: "InetSocketAddress"
    fullName: "java.net.InetSocketAddress"
- uid: "com.azure.core.http.ProxyOptions.ProxyOptions*"
  name: "ProxyOptions"
  nameWithType: "ProxyOptions.ProxyOptions"
  fullName: "com.azure.core.http.ProxyOptions.ProxyOptions"
  package: "com.azure.core.http"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "com.azure.core.http.ProxyOptions.setCredentials*"
  name: "setCredentials"
  nameWithType: "ProxyOptions.setCredentials"
  fullName: "com.azure.core.http.ProxyOptions.setCredentials"
  package: "com.azure.core.http"
- uid: "com.azure.core.http.ProxyOptions.getAddress*"
  name: "getAddress"
  nameWithType: "ProxyOptions.getAddress"
  fullName: "com.azure.core.http.ProxyOptions.getAddress"
  package: "com.azure.core.http"
- uid: "com.azure.core.http.ProxyOptions.getType*"
  name: "getType"
  nameWithType: "ProxyOptions.getType"
  fullName: "com.azure.core.http.ProxyOptions.getType"
  package: "com.azure.core.http"
- uid: "com.azure.core.http.ProxyOptions.getUsername*"
  name: "getUsername"
  nameWithType: "ProxyOptions.getUsername"
  fullName: "com.azure.core.http.ProxyOptions.getUsername"
  package: "com.azure.core.http"
- uid: "com.azure.core.http.ProxyOptions.getPassword*"
  name: "getPassword"
  nameWithType: "ProxyOptions.getPassword"
  fullName: "com.azure.core.http.ProxyOptions.getPassword"
  package: "com.azure.core.http"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
