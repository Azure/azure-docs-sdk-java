### YamlMime:ManagedReference
items:
- uid: "com.azure.security.keyvault.secrets.SecretService"
  id: "SecretService"
  parent: "com.azure.security.keyvault.secrets"
  children:
  - "com.azure.security.keyvault.secrets.SecretService.backupSecret(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  - "com.azure.security.keyvault.secrets.SecretService.deleteSecret(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  - "com.azure.security.keyvault.secrets.SecretService.getDeletedSecret(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  - "com.azure.security.keyvault.secrets.SecretService.getDeletedSecretPoller(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  - "com.azure.security.keyvault.secrets.SecretService.getDeletedSecrets(java.lang.String,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  - "com.azure.security.keyvault.secrets.SecretService.getDeletedSecrets(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  - "com.azure.security.keyvault.secrets.SecretService.getSecret(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  - "com.azure.security.keyvault.secrets.SecretService.getSecretPoller(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  - "com.azure.security.keyvault.secrets.SecretService.getSecretVersions(java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  - "com.azure.security.keyvault.secrets.SecretService.getSecrets(java.lang.String,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  - "com.azure.security.keyvault.secrets.SecretService.getSecrets(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  - "com.azure.security.keyvault.secrets.SecretService.purgeDeletedSecret(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  - "com.azure.security.keyvault.secrets.SecretService.recoverDeletedSecret(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  - "com.azure.security.keyvault.secrets.SecretService.restoreSecret(java.lang.String,java.lang.String,java.lang.String,com.azure.security.keyvault.secrets.SecretRestoreRequestParameters,java.lang.String,com.azure.core.util.Context)"
  - "com.azure.security.keyvault.secrets.SecretService.setSecret(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.security.keyvault.secrets.SecretRequestParameters,java.lang.String,com.azure.core.util.Context)"
  - "com.azure.security.keyvault.secrets.SecretService.updateSecret(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.security.keyvault.secrets.SecretRequestParameters,java.lang.String,com.azure.core.util.Context)"
  langs:
  - "java"
  name: "SecretService"
  nameWithType: "SecretService"
  fullName: "com.azure.security.keyvault.secrets.SecretService"
  type: "Interface"
  package: "com.azure.security.keyvault.secrets"
  summary: "The interface defining all the services for <xref uid=\"com.azure.security.keyvault.secrets.SecretAsyncClient\" data-throw-if-not-resolved=\"false\">SecretAsyncClient</xref> to be used by the proxy service to perform REST calls. This is package-private so that these REST calls are transparent to the user."
  syntax:
    content: " interface SecretService"
- uid: "com.azure.security.keyvault.secrets.SecretService.backupSecret(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  id: "backupSecret(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  parent: "com.azure.security.keyvault.secrets.SecretService"
  langs:
  - "java"
  name: "backupSecret(String url, String secretName, String apiVersion, String acceptLanguage, String type, Context context)"
  nameWithType: "SecretService.backupSecret(String url, String secretName, String apiVersion, String acceptLanguage, String type, Context context)"
  fullName: "com.azure.security.keyvault.secrets.SecretService.backupSecret(String url, String secretName, String apiVersion, String acceptLanguage, String type, Context context)"
  overload: "com.azure.security.keyvault.secrets.SecretService.backupSecret*"
  type: "Method"
  package: "com.azure.security.keyvault.secrets"
  syntax:
    content: "public abstract Mono<Response<SecretBackup>> backupSecret(String url, String secretName, String apiVersion, String acceptLanguage, String type, Context context)"
    parameters:
    - id: "url"
      type: "java.lang.String"
    - id: "secretName"
      type: "java.lang.String"
    - id: "apiVersion"
      type: "java.lang.String"
    - id: "acceptLanguage"
      type: "java.lang.String"
    - id: "type"
      type: "java.lang.String"
    - id: "context"
      type: "com.azure.core.util.Context"
    return:
      type: "reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.security.keyvault.secrets.SecretBackup>>"
- uid: "com.azure.security.keyvault.secrets.SecretService.deleteSecret(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  id: "deleteSecret(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  parent: "com.azure.security.keyvault.secrets.SecretService"
  langs:
  - "java"
  name: "deleteSecret(String url, String secretName, String apiVersion, String acceptLanguage, String type, Context context)"
  nameWithType: "SecretService.deleteSecret(String url, String secretName, String apiVersion, String acceptLanguage, String type, Context context)"
  fullName: "com.azure.security.keyvault.secrets.SecretService.deleteSecret(String url, String secretName, String apiVersion, String acceptLanguage, String type, Context context)"
  overload: "com.azure.security.keyvault.secrets.SecretService.deleteSecret*"
  type: "Method"
  package: "com.azure.security.keyvault.secrets"
  syntax:
    content: "public abstract Mono<Response<DeletedSecret>> deleteSecret(String url, String secretName, String apiVersion, String acceptLanguage, String type, Context context)"
    parameters:
    - id: "url"
      type: "java.lang.String"
    - id: "secretName"
      type: "java.lang.String"
    - id: "apiVersion"
      type: "java.lang.String"
    - id: "acceptLanguage"
      type: "java.lang.String"
    - id: "type"
      type: "java.lang.String"
    - id: "context"
      type: "com.azure.core.util.Context"
    return:
      type: "reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.security.keyvault.secrets.models.DeletedSecret>>"
- uid: "com.azure.security.keyvault.secrets.SecretService.getDeletedSecret(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  id: "getDeletedSecret(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  parent: "com.azure.security.keyvault.secrets.SecretService"
  langs:
  - "java"
  name: "getDeletedSecret(String url, String secretName, String apiVersion, String acceptLanguage, String type, Context context)"
  nameWithType: "SecretService.getDeletedSecret(String url, String secretName, String apiVersion, String acceptLanguage, String type, Context context)"
  fullName: "com.azure.security.keyvault.secrets.SecretService.getDeletedSecret(String url, String secretName, String apiVersion, String acceptLanguage, String type, Context context)"
  overload: "com.azure.security.keyvault.secrets.SecretService.getDeletedSecret*"
  type: "Method"
  package: "com.azure.security.keyvault.secrets"
  syntax:
    content: "public abstract Mono<Response<DeletedSecret>> getDeletedSecret(String url, String secretName, String apiVersion, String acceptLanguage, String type, Context context)"
    parameters:
    - id: "url"
      type: "java.lang.String"
    - id: "secretName"
      type: "java.lang.String"
    - id: "apiVersion"
      type: "java.lang.String"
    - id: "acceptLanguage"
      type: "java.lang.String"
    - id: "type"
      type: "java.lang.String"
    - id: "context"
      type: "com.azure.core.util.Context"
    return:
      type: "reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.security.keyvault.secrets.models.DeletedSecret>>"
- uid: "com.azure.security.keyvault.secrets.SecretService.getDeletedSecretPoller(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  id: "getDeletedSecretPoller(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  parent: "com.azure.security.keyvault.secrets.SecretService"
  langs:
  - "java"
  name: "getDeletedSecretPoller(String url, String secretName, String apiVersion, String acceptLanguage, String type, Context context)"
  nameWithType: "SecretService.getDeletedSecretPoller(String url, String secretName, String apiVersion, String acceptLanguage, String type, Context context)"
  fullName: "com.azure.security.keyvault.secrets.SecretService.getDeletedSecretPoller(String url, String secretName, String apiVersion, String acceptLanguage, String type, Context context)"
  overload: "com.azure.security.keyvault.secrets.SecretService.getDeletedSecretPoller*"
  type: "Method"
  package: "com.azure.security.keyvault.secrets"
  syntax:
    content: "public abstract Mono<Response<DeletedSecret>> getDeletedSecretPoller(String url, String secretName, String apiVersion, String acceptLanguage, String type, Context context)"
    parameters:
    - id: "url"
      type: "java.lang.String"
    - id: "secretName"
      type: "java.lang.String"
    - id: "apiVersion"
      type: "java.lang.String"
    - id: "acceptLanguage"
      type: "java.lang.String"
    - id: "type"
      type: "java.lang.String"
    - id: "context"
      type: "com.azure.core.util.Context"
    return:
      type: "reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.security.keyvault.secrets.models.DeletedSecret>>"
- uid: "com.azure.security.keyvault.secrets.SecretService.getDeletedSecrets(java.lang.String,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  id: "getDeletedSecrets(java.lang.String,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  parent: "com.azure.security.keyvault.secrets.SecretService"
  langs:
  - "java"
  name: "getDeletedSecrets(String url, Integer maxresults, String apiVersion, String acceptLanguage, String type, Context context)"
  nameWithType: "SecretService.getDeletedSecrets(String url, Integer maxresults, String apiVersion, String acceptLanguage, String type, Context context)"
  fullName: "com.azure.security.keyvault.secrets.SecretService.getDeletedSecrets(String url, Integer maxresults, String apiVersion, String acceptLanguage, String type, Context context)"
  overload: "com.azure.security.keyvault.secrets.SecretService.getDeletedSecrets*"
  type: "Method"
  package: "com.azure.security.keyvault.secrets"
  syntax:
    content: "public abstract Mono<PagedResponse<DeletedSecret>> getDeletedSecrets(String url, Integer maxresults, String apiVersion, String acceptLanguage, String type, Context context)"
    parameters:
    - id: "url"
      type: "java.lang.String"
    - id: "maxresults"
      type: "java.lang.Integer"
    - id: "apiVersion"
      type: "java.lang.String"
    - id: "acceptLanguage"
      type: "java.lang.String"
    - id: "type"
      type: "java.lang.String"
    - id: "context"
      type: "com.azure.core.util.Context"
    return:
      type: "reactor.core.publisher.Mono<com.azure.core.http.rest.PagedResponse<com.azure.security.keyvault.secrets.models.DeletedSecret>>"
- uid: "com.azure.security.keyvault.secrets.SecretService.getDeletedSecrets(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  id: "getDeletedSecrets(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  parent: "com.azure.security.keyvault.secrets.SecretService"
  langs:
  - "java"
  name: "getDeletedSecrets(String url, String nextUrl, String acceptLanguage, String type, Context context)"
  nameWithType: "SecretService.getDeletedSecrets(String url, String nextUrl, String acceptLanguage, String type, Context context)"
  fullName: "com.azure.security.keyvault.secrets.SecretService.getDeletedSecrets(String url, String nextUrl, String acceptLanguage, String type, Context context)"
  overload: "com.azure.security.keyvault.secrets.SecretService.getDeletedSecrets*"
  type: "Method"
  package: "com.azure.security.keyvault.secrets"
  syntax:
    content: "public abstract Mono<PagedResponse<DeletedSecret>> getDeletedSecrets(String url, String nextUrl, String acceptLanguage, String type, Context context)"
    parameters:
    - id: "url"
      type: "java.lang.String"
    - id: "nextUrl"
      type: "java.lang.String"
    - id: "acceptLanguage"
      type: "java.lang.String"
    - id: "type"
      type: "java.lang.String"
    - id: "context"
      type: "com.azure.core.util.Context"
    return:
      type: "reactor.core.publisher.Mono<com.azure.core.http.rest.PagedResponse<com.azure.security.keyvault.secrets.models.DeletedSecret>>"
- uid: "com.azure.security.keyvault.secrets.SecretService.getSecret(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  id: "getSecret(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  parent: "com.azure.security.keyvault.secrets.SecretService"
  langs:
  - "java"
  name: "getSecret(String url, String secretName, String secretVersion, String apiVersion, String acceptLanguage, String type, Context context)"
  nameWithType: "SecretService.getSecret(String url, String secretName, String secretVersion, String apiVersion, String acceptLanguage, String type, Context context)"
  fullName: "com.azure.security.keyvault.secrets.SecretService.getSecret(String url, String secretName, String secretVersion, String apiVersion, String acceptLanguage, String type, Context context)"
  overload: "com.azure.security.keyvault.secrets.SecretService.getSecret*"
  type: "Method"
  package: "com.azure.security.keyvault.secrets"
  syntax:
    content: "public abstract Mono<Response<KeyVaultSecret>> getSecret(String url, String secretName, String secretVersion, String apiVersion, String acceptLanguage, String type, Context context)"
    parameters:
    - id: "url"
      type: "java.lang.String"
    - id: "secretName"
      type: "java.lang.String"
    - id: "secretVersion"
      type: "java.lang.String"
    - id: "apiVersion"
      type: "java.lang.String"
    - id: "acceptLanguage"
      type: "java.lang.String"
    - id: "type"
      type: "java.lang.String"
    - id: "context"
      type: "com.azure.core.util.Context"
    return:
      type: "reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.security.keyvault.secrets.models.KeyVaultSecret>>"
- uid: "com.azure.security.keyvault.secrets.SecretService.getSecretPoller(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  id: "getSecretPoller(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  parent: "com.azure.security.keyvault.secrets.SecretService"
  langs:
  - "java"
  name: "getSecretPoller(String url, String secretName, String secretVersion, String apiVersion, String acceptLanguage, String type, Context context)"
  nameWithType: "SecretService.getSecretPoller(String url, String secretName, String secretVersion, String apiVersion, String acceptLanguage, String type, Context context)"
  fullName: "com.azure.security.keyvault.secrets.SecretService.getSecretPoller(String url, String secretName, String secretVersion, String apiVersion, String acceptLanguage, String type, Context context)"
  overload: "com.azure.security.keyvault.secrets.SecretService.getSecretPoller*"
  type: "Method"
  package: "com.azure.security.keyvault.secrets"
  syntax:
    content: "public abstract Mono<Response<KeyVaultSecret>> getSecretPoller(String url, String secretName, String secretVersion, String apiVersion, String acceptLanguage, String type, Context context)"
    parameters:
    - id: "url"
      type: "java.lang.String"
    - id: "secretName"
      type: "java.lang.String"
    - id: "secretVersion"
      type: "java.lang.String"
    - id: "apiVersion"
      type: "java.lang.String"
    - id: "acceptLanguage"
      type: "java.lang.String"
    - id: "type"
      type: "java.lang.String"
    - id: "context"
      type: "com.azure.core.util.Context"
    return:
      type: "reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.security.keyvault.secrets.models.KeyVaultSecret>>"
- uid: "com.azure.security.keyvault.secrets.SecretService.getSecretVersions(java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  id: "getSecretVersions(java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  parent: "com.azure.security.keyvault.secrets.SecretService"
  langs:
  - "java"
  name: "getSecretVersions(String url, String secretName, Integer maxresults, String apiVersion, String acceptLanguage, String type, Context context)"
  nameWithType: "SecretService.getSecretVersions(String url, String secretName, Integer maxresults, String apiVersion, String acceptLanguage, String type, Context context)"
  fullName: "com.azure.security.keyvault.secrets.SecretService.getSecretVersions(String url, String secretName, Integer maxresults, String apiVersion, String acceptLanguage, String type, Context context)"
  overload: "com.azure.security.keyvault.secrets.SecretService.getSecretVersions*"
  type: "Method"
  package: "com.azure.security.keyvault.secrets"
  syntax:
    content: "public abstract Mono<PagedResponse<SecretProperties>> getSecretVersions(String url, String secretName, Integer maxresults, String apiVersion, String acceptLanguage, String type, Context context)"
    parameters:
    - id: "url"
      type: "java.lang.String"
    - id: "secretName"
      type: "java.lang.String"
    - id: "maxresults"
      type: "java.lang.Integer"
    - id: "apiVersion"
      type: "java.lang.String"
    - id: "acceptLanguage"
      type: "java.lang.String"
    - id: "type"
      type: "java.lang.String"
    - id: "context"
      type: "com.azure.core.util.Context"
    return:
      type: "reactor.core.publisher.Mono<com.azure.core.http.rest.PagedResponse<com.azure.security.keyvault.secrets.models.SecretProperties>>"
- uid: "com.azure.security.keyvault.secrets.SecretService.getSecrets(java.lang.String,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  id: "getSecrets(java.lang.String,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  parent: "com.azure.security.keyvault.secrets.SecretService"
  langs:
  - "java"
  name: "getSecrets(String url, Integer maxresults, String apiVersion, String acceptLanguage, String type, Context context)"
  nameWithType: "SecretService.getSecrets(String url, Integer maxresults, String apiVersion, String acceptLanguage, String type, Context context)"
  fullName: "com.azure.security.keyvault.secrets.SecretService.getSecrets(String url, Integer maxresults, String apiVersion, String acceptLanguage, String type, Context context)"
  overload: "com.azure.security.keyvault.secrets.SecretService.getSecrets*"
  type: "Method"
  package: "com.azure.security.keyvault.secrets"
  syntax:
    content: "public abstract Mono<PagedResponse<SecretProperties>> getSecrets(String url, Integer maxresults, String apiVersion, String acceptLanguage, String type, Context context)"
    parameters:
    - id: "url"
      type: "java.lang.String"
    - id: "maxresults"
      type: "java.lang.Integer"
    - id: "apiVersion"
      type: "java.lang.String"
    - id: "acceptLanguage"
      type: "java.lang.String"
    - id: "type"
      type: "java.lang.String"
    - id: "context"
      type: "com.azure.core.util.Context"
    return:
      type: "reactor.core.publisher.Mono<com.azure.core.http.rest.PagedResponse<com.azure.security.keyvault.secrets.models.SecretProperties>>"
- uid: "com.azure.security.keyvault.secrets.SecretService.getSecrets(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  id: "getSecrets(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  parent: "com.azure.security.keyvault.secrets.SecretService"
  langs:
  - "java"
  name: "getSecrets(String url, String nextUrl, String acceptLanguage, String type, Context context)"
  nameWithType: "SecretService.getSecrets(String url, String nextUrl, String acceptLanguage, String type, Context context)"
  fullName: "com.azure.security.keyvault.secrets.SecretService.getSecrets(String url, String nextUrl, String acceptLanguage, String type, Context context)"
  overload: "com.azure.security.keyvault.secrets.SecretService.getSecrets*"
  type: "Method"
  package: "com.azure.security.keyvault.secrets"
  syntax:
    content: "public abstract Mono<PagedResponse<SecretProperties>> getSecrets(String url, String nextUrl, String acceptLanguage, String type, Context context)"
    parameters:
    - id: "url"
      type: "java.lang.String"
    - id: "nextUrl"
      type: "java.lang.String"
    - id: "acceptLanguage"
      type: "java.lang.String"
    - id: "type"
      type: "java.lang.String"
    - id: "context"
      type: "com.azure.core.util.Context"
    return:
      type: "reactor.core.publisher.Mono<com.azure.core.http.rest.PagedResponse<com.azure.security.keyvault.secrets.models.SecretProperties>>"
- uid: "com.azure.security.keyvault.secrets.SecretService.purgeDeletedSecret(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  id: "purgeDeletedSecret(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  parent: "com.azure.security.keyvault.secrets.SecretService"
  langs:
  - "java"
  name: "purgeDeletedSecret(String url, String secretName, String apiVersion, String acceptLanguage, String type, Context context)"
  nameWithType: "SecretService.purgeDeletedSecret(String url, String secretName, String apiVersion, String acceptLanguage, String type, Context context)"
  fullName: "com.azure.security.keyvault.secrets.SecretService.purgeDeletedSecret(String url, String secretName, String apiVersion, String acceptLanguage, String type, Context context)"
  overload: "com.azure.security.keyvault.secrets.SecretService.purgeDeletedSecret*"
  type: "Method"
  package: "com.azure.security.keyvault.secrets"
  syntax:
    content: "public abstract Mono<Response<Void>> purgeDeletedSecret(String url, String secretName, String apiVersion, String acceptLanguage, String type, Context context)"
    parameters:
    - id: "url"
      type: "java.lang.String"
    - id: "secretName"
      type: "java.lang.String"
    - id: "apiVersion"
      type: "java.lang.String"
    - id: "acceptLanguage"
      type: "java.lang.String"
    - id: "type"
      type: "java.lang.String"
    - id: "context"
      type: "com.azure.core.util.Context"
    return:
      type: "reactor.core.publisher.Mono<com.azure.core.http.rest.Response<java.lang.Void>>"
- uid: "com.azure.security.keyvault.secrets.SecretService.recoverDeletedSecret(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  id: "recoverDeletedSecret(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  parent: "com.azure.security.keyvault.secrets.SecretService"
  langs:
  - "java"
  name: "recoverDeletedSecret(String url, String secretName, String apiVersion, String acceptLanguage, String type, Context context)"
  nameWithType: "SecretService.recoverDeletedSecret(String url, String secretName, String apiVersion, String acceptLanguage, String type, Context context)"
  fullName: "com.azure.security.keyvault.secrets.SecretService.recoverDeletedSecret(String url, String secretName, String apiVersion, String acceptLanguage, String type, Context context)"
  overload: "com.azure.security.keyvault.secrets.SecretService.recoverDeletedSecret*"
  type: "Method"
  package: "com.azure.security.keyvault.secrets"
  syntax:
    content: "public abstract Mono<Response<KeyVaultSecret>> recoverDeletedSecret(String url, String secretName, String apiVersion, String acceptLanguage, String type, Context context)"
    parameters:
    - id: "url"
      type: "java.lang.String"
    - id: "secretName"
      type: "java.lang.String"
    - id: "apiVersion"
      type: "java.lang.String"
    - id: "acceptLanguage"
      type: "java.lang.String"
    - id: "type"
      type: "java.lang.String"
    - id: "context"
      type: "com.azure.core.util.Context"
    return:
      type: "reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.security.keyvault.secrets.models.KeyVaultSecret>>"
- uid: "com.azure.security.keyvault.secrets.SecretService.restoreSecret(java.lang.String,java.lang.String,java.lang.String,com.azure.security.keyvault.secrets.SecretRestoreRequestParameters,java.lang.String,com.azure.core.util.Context)"
  id: "restoreSecret(java.lang.String,java.lang.String,java.lang.String,com.azure.security.keyvault.secrets.SecretRestoreRequestParameters,java.lang.String,com.azure.core.util.Context)"
  parent: "com.azure.security.keyvault.secrets.SecretService"
  langs:
  - "java"
  name: "restoreSecret(String url, String apiVersion, String acceptLanguage, SecretRestoreRequestParameters parameters, String type, Context context)"
  nameWithType: "SecretService.restoreSecret(String url, String apiVersion, String acceptLanguage, SecretRestoreRequestParameters parameters, String type, Context context)"
  fullName: "com.azure.security.keyvault.secrets.SecretService.restoreSecret(String url, String apiVersion, String acceptLanguage, SecretRestoreRequestParameters parameters, String type, Context context)"
  overload: "com.azure.security.keyvault.secrets.SecretService.restoreSecret*"
  type: "Method"
  package: "com.azure.security.keyvault.secrets"
  syntax:
    content: "public abstract Mono<Response<KeyVaultSecret>> restoreSecret(String url, String apiVersion, String acceptLanguage, SecretRestoreRequestParameters parameters, String type, Context context)"
    parameters:
    - id: "url"
      type: "java.lang.String"
    - id: "apiVersion"
      type: "java.lang.String"
    - id: "acceptLanguage"
      type: "java.lang.String"
    - id: "parameters"
      type: "com.azure.security.keyvault.secrets.SecretRestoreRequestParameters"
    - id: "type"
      type: "java.lang.String"
    - id: "context"
      type: "com.azure.core.util.Context"
    return:
      type: "reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.security.keyvault.secrets.models.KeyVaultSecret>>"
- uid: "com.azure.security.keyvault.secrets.SecretService.setSecret(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.security.keyvault.secrets.SecretRequestParameters,java.lang.String,com.azure.core.util.Context)"
  id: "setSecret(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.security.keyvault.secrets.SecretRequestParameters,java.lang.String,com.azure.core.util.Context)"
  parent: "com.azure.security.keyvault.secrets.SecretService"
  langs:
  - "java"
  name: "setSecret(String url, String secretName, String apiVersion, String acceptLanguage, SecretRequestParameters parameters, String type, Context context)"
  nameWithType: "SecretService.setSecret(String url, String secretName, String apiVersion, String acceptLanguage, SecretRequestParameters parameters, String type, Context context)"
  fullName: "com.azure.security.keyvault.secrets.SecretService.setSecret(String url, String secretName, String apiVersion, String acceptLanguage, SecretRequestParameters parameters, String type, Context context)"
  overload: "com.azure.security.keyvault.secrets.SecretService.setSecret*"
  type: "Method"
  package: "com.azure.security.keyvault.secrets"
  syntax:
    content: "public abstract Mono<Response<KeyVaultSecret>> setSecret(String url, String secretName, String apiVersion, String acceptLanguage, SecretRequestParameters parameters, String type, Context context)"
    parameters:
    - id: "url"
      type: "java.lang.String"
    - id: "secretName"
      type: "java.lang.String"
    - id: "apiVersion"
      type: "java.lang.String"
    - id: "acceptLanguage"
      type: "java.lang.String"
    - id: "parameters"
      type: "com.azure.security.keyvault.secrets.SecretRequestParameters"
    - id: "type"
      type: "java.lang.String"
    - id: "context"
      type: "com.azure.core.util.Context"
    return:
      type: "reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.security.keyvault.secrets.models.KeyVaultSecret>>"
- uid: "com.azure.security.keyvault.secrets.SecretService.updateSecret(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.security.keyvault.secrets.SecretRequestParameters,java.lang.String,com.azure.core.util.Context)"
  id: "updateSecret(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.security.keyvault.secrets.SecretRequestParameters,java.lang.String,com.azure.core.util.Context)"
  parent: "com.azure.security.keyvault.secrets.SecretService"
  langs:
  - "java"
  name: "updateSecret(String url, String secretName, String secretVersion, String apiVersion, String acceptLanguage, SecretRequestParameters parameters, String type, Context context)"
  nameWithType: "SecretService.updateSecret(String url, String secretName, String secretVersion, String apiVersion, String acceptLanguage, SecretRequestParameters parameters, String type, Context context)"
  fullName: "com.azure.security.keyvault.secrets.SecretService.updateSecret(String url, String secretName, String secretVersion, String apiVersion, String acceptLanguage, SecretRequestParameters parameters, String type, Context context)"
  overload: "com.azure.security.keyvault.secrets.SecretService.updateSecret*"
  type: "Method"
  package: "com.azure.security.keyvault.secrets"
  syntax:
    content: "public abstract Mono<Response<SecretProperties>> updateSecret(String url, String secretName, String secretVersion, String apiVersion, String acceptLanguage, SecretRequestParameters parameters, String type, Context context)"
    parameters:
    - id: "url"
      type: "java.lang.String"
    - id: "secretName"
      type: "java.lang.String"
    - id: "secretVersion"
      type: "java.lang.String"
    - id: "apiVersion"
      type: "java.lang.String"
    - id: "acceptLanguage"
      type: "java.lang.String"
    - id: "parameters"
      type: "com.azure.security.keyvault.secrets.SecretRequestParameters"
    - id: "type"
      type: "java.lang.String"
    - id: "context"
      type: "com.azure.core.util.Context"
    return:
      type: "reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.security.keyvault.secrets.models.SecretProperties>>"
references:
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "com.azure.security.keyvault.secrets.SecretRequestParameters"
  name: "SecretRequestParameters"
  nameWithType: "SecretRequestParameters"
  fullName: "com.azure.security.keyvault.secrets.SecretRequestParameters"
- uid: "com.azure.core.util.Context"
  spec.java:
  - uid: "com.azure.core.util.Context"
    name: "Context"
    fullName: "com.azure.core.util.Context"
- uid: "reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.security.keyvault.secrets.models.KeyVaultSecret>>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.core.http.rest.Response"
    name: "Response"
    fullName: "com.azure.core.http.rest.Response"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.security.keyvault.secrets.models.KeyVaultSecret"
    name: "KeyVaultSecret"
    fullName: "com.azure.security.keyvault.secrets.models.KeyVaultSecret"
  - name: ">"
    fullName: ">"
  - name: ">"
    fullName: ">"
- uid: "com.azure.security.keyvault.secrets.SecretService.setSecret*"
  name: "setSecret"
  nameWithType: "SecretService.setSecret"
  fullName: "com.azure.security.keyvault.secrets.SecretService.setSecret"
  package: "com.azure.security.keyvault.secrets"
- uid: "com.azure.security.keyvault.secrets.SecretService.getSecret*"
  name: "getSecret"
  nameWithType: "SecretService.getSecret"
  fullName: "com.azure.security.keyvault.secrets.SecretService.getSecret"
  package: "com.azure.security.keyvault.secrets"
- uid: "com.azure.security.keyvault.secrets.SecretService.getSecretPoller*"
  name: "getSecretPoller"
  nameWithType: "SecretService.getSecretPoller"
  fullName: "com.azure.security.keyvault.secrets.SecretService.getSecretPoller"
  package: "com.azure.security.keyvault.secrets"
- uid: "reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.security.keyvault.secrets.models.SecretProperties>>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.core.http.rest.Response"
    name: "Response"
    fullName: "com.azure.core.http.rest.Response"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.security.keyvault.secrets.models.SecretProperties"
    name: "SecretProperties"
    fullName: "com.azure.security.keyvault.secrets.models.SecretProperties"
  - name: ">"
    fullName: ">"
  - name: ">"
    fullName: ">"
- uid: "com.azure.security.keyvault.secrets.SecretService.updateSecret*"
  name: "updateSecret"
  nameWithType: "SecretService.updateSecret"
  fullName: "com.azure.security.keyvault.secrets.SecretService.updateSecret"
  package: "com.azure.security.keyvault.secrets"
- uid: "reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.security.keyvault.secrets.models.DeletedSecret>>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.core.http.rest.Response"
    name: "Response"
    fullName: "com.azure.core.http.rest.Response"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.security.keyvault.secrets.models.DeletedSecret"
    name: "DeletedSecret"
    fullName: "com.azure.security.keyvault.secrets.models.DeletedSecret"
  - name: ">"
    fullName: ">"
  - name: ">"
    fullName: ">"
- uid: "com.azure.security.keyvault.secrets.SecretService.deleteSecret*"
  name: "deleteSecret"
  nameWithType: "SecretService.deleteSecret"
  fullName: "com.azure.security.keyvault.secrets.SecretService.deleteSecret"
  package: "com.azure.security.keyvault.secrets"
- uid: "com.azure.security.keyvault.secrets.SecretService.getDeletedSecret*"
  name: "getDeletedSecret"
  nameWithType: "SecretService.getDeletedSecret"
  fullName: "com.azure.security.keyvault.secrets.SecretService.getDeletedSecret"
  package: "com.azure.security.keyvault.secrets"
- uid: "com.azure.security.keyvault.secrets.SecretService.getDeletedSecretPoller*"
  name: "getDeletedSecretPoller"
  nameWithType: "SecretService.getDeletedSecretPoller"
  fullName: "com.azure.security.keyvault.secrets.SecretService.getDeletedSecretPoller"
  package: "com.azure.security.keyvault.secrets"
- uid: "reactor.core.publisher.Mono<com.azure.core.http.rest.Response<java.lang.Void>>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.core.http.rest.Response"
    name: "Response"
    fullName: "com.azure.core.http.rest.Response"
  - name: "<"
    fullName: "<"
  - uid: "java.lang.Void"
    name: "Void"
    fullName: "java.lang.Void"
  - name: ">"
    fullName: ">"
  - name: ">"
    fullName: ">"
- uid: "com.azure.security.keyvault.secrets.SecretService.purgeDeletedSecret*"
  name: "purgeDeletedSecret"
  nameWithType: "SecretService.purgeDeletedSecret"
  fullName: "com.azure.security.keyvault.secrets.SecretService.purgeDeletedSecret"
  package: "com.azure.security.keyvault.secrets"
- uid: "com.azure.security.keyvault.secrets.SecretService.recoverDeletedSecret*"
  name: "recoverDeletedSecret"
  nameWithType: "SecretService.recoverDeletedSecret"
  fullName: "com.azure.security.keyvault.secrets.SecretService.recoverDeletedSecret"
  package: "com.azure.security.keyvault.secrets"
- uid: "reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.security.keyvault.secrets.SecretBackup>>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.core.http.rest.Response"
    name: "Response"
    fullName: "com.azure.core.http.rest.Response"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.security.keyvault.secrets.SecretBackup"
    name: "SecretBackup"
    fullName: "com.azure.security.keyvault.secrets.SecretBackup"
  - name: ">"
    fullName: ">"
  - name: ">"
    fullName: ">"
- uid: "com.azure.security.keyvault.secrets.SecretService.backupSecret*"
  name: "backupSecret"
  nameWithType: "SecretService.backupSecret"
  fullName: "com.azure.security.keyvault.secrets.SecretService.backupSecret"
  package: "com.azure.security.keyvault.secrets"
- uid: "com.azure.security.keyvault.secrets.SecretRestoreRequestParameters"
  name: "SecretRestoreRequestParameters"
  nameWithType: "SecretRestoreRequestParameters"
  fullName: "com.azure.security.keyvault.secrets.SecretRestoreRequestParameters"
- uid: "com.azure.security.keyvault.secrets.SecretService.restoreSecret*"
  name: "restoreSecret"
  nameWithType: "SecretService.restoreSecret"
  fullName: "com.azure.security.keyvault.secrets.SecretService.restoreSecret"
  package: "com.azure.security.keyvault.secrets"
- uid: "java.lang.Integer"
  spec.java:
  - uid: "java.lang.Integer"
    name: "Integer"
    fullName: "java.lang.Integer"
- uid: "reactor.core.publisher.Mono<com.azure.core.http.rest.PagedResponse<com.azure.security.keyvault.secrets.models.SecretProperties>>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.core.http.rest.PagedResponse"
    name: "PagedResponse"
    fullName: "com.azure.core.http.rest.PagedResponse"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.security.keyvault.secrets.models.SecretProperties"
    name: "SecretProperties"
    fullName: "com.azure.security.keyvault.secrets.models.SecretProperties"
  - name: ">"
    fullName: ">"
  - name: ">"
    fullName: ">"
- uid: "com.azure.security.keyvault.secrets.SecretService.getSecrets*"
  name: "getSecrets"
  nameWithType: "SecretService.getSecrets"
  fullName: "com.azure.security.keyvault.secrets.SecretService.getSecrets"
  package: "com.azure.security.keyvault.secrets"
- uid: "com.azure.security.keyvault.secrets.SecretService.getSecretVersions*"
  name: "getSecretVersions"
  nameWithType: "SecretService.getSecretVersions"
  fullName: "com.azure.security.keyvault.secrets.SecretService.getSecretVersions"
  package: "com.azure.security.keyvault.secrets"
- uid: "reactor.core.publisher.Mono<com.azure.core.http.rest.PagedResponse<com.azure.security.keyvault.secrets.models.DeletedSecret>>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.core.http.rest.PagedResponse"
    name: "PagedResponse"
    fullName: "com.azure.core.http.rest.PagedResponse"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.security.keyvault.secrets.models.DeletedSecret"
    name: "DeletedSecret"
    fullName: "com.azure.security.keyvault.secrets.models.DeletedSecret"
  - name: ">"
    fullName: ">"
  - name: ">"
    fullName: ">"
- uid: "com.azure.security.keyvault.secrets.SecretService.getDeletedSecrets*"
  name: "getDeletedSecrets"
  nameWithType: "SecretService.getDeletedSecrets"
  fullName: "com.azure.security.keyvault.secrets.SecretService.getDeletedSecrets"
  package: "com.azure.security.keyvault.secrets"
- uid: "reactor.core.publisher.Mono"
  name: "Mono"
  nameWithType: "Mono"
  fullName: "reactor.core.publisher.Mono"
- uid: "com.azure.security.keyvault.secrets.models.KeyVaultSecret"
  name: "KeyVaultSecret"
  nameWithType: "KeyVaultSecret"
  fullName: "com.azure.security.keyvault.secrets.models.KeyVaultSecret"
- uid: "com.azure.core.http.rest.Response"
  name: "Response"
  nameWithType: "Response"
  fullName: "com.azure.core.http.rest.Response"
- uid: "com.azure.security.keyvault.secrets.models.SecretProperties"
  name: "SecretProperties"
  nameWithType: "SecretProperties"
  fullName: "com.azure.security.keyvault.secrets.models.SecretProperties"
- uid: "com.azure.security.keyvault.secrets.models.DeletedSecret"
  name: "DeletedSecret"
  nameWithType: "DeletedSecret"
  fullName: "com.azure.security.keyvault.secrets.models.DeletedSecret"
- uid: "java.lang.Void"
  name: "Void"
  nameWithType: "Void"
  fullName: "java.lang.Void"
- uid: "com.azure.security.keyvault.secrets.SecretBackup"
  name: "SecretBackup"
  nameWithType: "SecretBackup"
  fullName: "com.azure.security.keyvault.secrets.SecretBackup"
- uid: "com.azure.core.http.rest.PagedResponse"
  name: "PagedResponse"
  nameWithType: "PagedResponse"
  fullName: "com.azure.core.http.rest.PagedResponse"
