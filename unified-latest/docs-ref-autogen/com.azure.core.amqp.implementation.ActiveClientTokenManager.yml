### YamlMime:ManagedReference
items:
- uid: "com.azure.core.amqp.implementation.ActiveClientTokenManager"
  id: "ActiveClientTokenManager"
  parent: "com.azure.core.amqp.implementation"
  children:
  - "com.azure.core.amqp.implementation.ActiveClientTokenManager.ActiveClientTokenManager(reactor.core.publisher.Mono<com.azure.core.amqp.ClaimsBasedSecurityNode>,java.lang.String,java.lang.String)"
  - "com.azure.core.amqp.implementation.ActiveClientTokenManager.authorize()"
  - "com.azure.core.amqp.implementation.ActiveClientTokenManager.close()"
  - "com.azure.core.amqp.implementation.ActiveClientTokenManager.getAuthorizationResults()"
  langs:
  - "java"
  name: "ActiveClientTokenManager"
  nameWithType: "ActiveClientTokenManager"
  fullName: "com.azure.core.amqp.implementation.ActiveClientTokenManager"
  type: "Class"
  package: "com.azure.core.amqp.implementation"
  summary: "Manages the re-authorization of the client to the token audience against the CBS node."
  syntax:
    content: "public class ActiveClientTokenManager implements TokenManager"
  inheritance:
  - "java.lang.Object"
  implements:
  - "com.azure.core.amqp.implementation.TokenManager"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.azure.core.amqp.implementation.ActiveClientTokenManager.ActiveClientTokenManager(reactor.core.publisher.Mono<com.azure.core.amqp.ClaimsBasedSecurityNode>,java.lang.String,java.lang.String)"
  id: "ActiveClientTokenManager(reactor.core.publisher.Mono<com.azure.core.amqp.ClaimsBasedSecurityNode>,java.lang.String,java.lang.String)"
  parent: "com.azure.core.amqp.implementation.ActiveClientTokenManager"
  langs:
  - "java"
  name: "ActiveClientTokenManager(Mono<ClaimsBasedSecurityNode> cbsNode, String tokenAudience, String scopes)"
  nameWithType: "ActiveClientTokenManager.ActiveClientTokenManager(Mono<ClaimsBasedSecurityNode> cbsNode, String tokenAudience, String scopes)"
  fullName: "com.azure.core.amqp.implementation.ActiveClientTokenManager.ActiveClientTokenManager(Mono<ClaimsBasedSecurityNode> cbsNode, String tokenAudience, String scopes)"
  overload: "com.azure.core.amqp.implementation.ActiveClientTokenManager.ActiveClientTokenManager*"
  type: "Constructor"
  package: "com.azure.core.amqp.implementation"
  syntax:
    content: "public ActiveClientTokenManager(Mono<ClaimsBasedSecurityNode> cbsNode, String tokenAudience, String scopes)"
    parameters:
    - id: "cbsNode"
      type: "reactor.core.publisher.Mono<com.azure.core.amqp.ClaimsBasedSecurityNode>"
    - id: "tokenAudience"
      type: "java.lang.String"
    - id: "scopes"
      type: "java.lang.String"
- uid: "com.azure.core.amqp.implementation.ActiveClientTokenManager.authorize()"
  id: "authorize()"
  parent: "com.azure.core.amqp.implementation.ActiveClientTokenManager"
  langs:
  - "java"
  name: "authorize()"
  nameWithType: "ActiveClientTokenManager.authorize()"
  fullName: "com.azure.core.amqp.implementation.ActiveClientTokenManager.authorize()"
  overload: "com.azure.core.amqp.implementation.ActiveClientTokenManager.authorize*"
  type: "Method"
  package: "com.azure.core.amqp.implementation"
  summary: "Invokes an authorization call on the CBS node."
  syntax:
    content: "public Mono<Long> authorize()"
    return:
      type: "reactor.core.publisher.Mono<java.lang.Long>"
      description: "A Mono that completes with the milliseconds corresponding to when this token should be refreshed."
- uid: "com.azure.core.amqp.implementation.ActiveClientTokenManager.close()"
  id: "close()"
  parent: "com.azure.core.amqp.implementation.ActiveClientTokenManager"
  langs:
  - "java"
  name: "close()"
  nameWithType: "ActiveClientTokenManager.close()"
  fullName: "com.azure.core.amqp.implementation.ActiveClientTokenManager.close()"
  overload: "com.azure.core.amqp.implementation.ActiveClientTokenManager.close*"
  type: "Method"
  package: "com.azure.core.amqp.implementation"
  syntax:
    content: "public void close()"
- uid: "com.azure.core.amqp.implementation.ActiveClientTokenManager.getAuthorizationResults()"
  id: "getAuthorizationResults()"
  parent: "com.azure.core.amqp.implementation.ActiveClientTokenManager"
  langs:
  - "java"
  name: "getAuthorizationResults()"
  nameWithType: "ActiveClientTokenManager.getAuthorizationResults()"
  fullName: "com.azure.core.amqp.implementation.ActiveClientTokenManager.getAuthorizationResults()"
  overload: "com.azure.core.amqp.implementation.ActiveClientTokenManager.getAuthorizationResults*"
  type: "Method"
  package: "com.azure.core.amqp.implementation"
  summary: "Gets a flux of the periodic authorization results from the CBS node. Errors are returned on the Flux if authorization is unsuccessful."
  syntax:
    content: "public Flux<AmqpResponseCode> getAuthorizationResults()"
    return:
      type: "reactor.core.publisher.Flux<com.azure.core.amqp.exception.AmqpResponseCode>"
      description: "A Flux of authorization results from the CBS node."
references:
- uid: "reactor.core.publisher.Mono<com.azure.core.amqp.ClaimsBasedSecurityNode>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.core.amqp.ClaimsBasedSecurityNode"
    name: "ClaimsBasedSecurityNode"
    fullName: "com.azure.core.amqp.ClaimsBasedSecurityNode"
  - name: ">"
    fullName: ">"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "com.azure.core.amqp.implementation.ActiveClientTokenManager.ActiveClientTokenManager*"
  name: "ActiveClientTokenManager"
  nameWithType: "ActiveClientTokenManager.ActiveClientTokenManager"
  fullName: "com.azure.core.amqp.implementation.ActiveClientTokenManager.ActiveClientTokenManager"
  package: "com.azure.core.amqp.implementation"
- uid: "reactor.core.publisher.Flux<com.azure.core.amqp.exception.AmqpResponseCode>"
  spec.java:
  - uid: "reactor.core.publisher.Flux"
    name: "Flux"
    fullName: "reactor.core.publisher.Flux"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.core.amqp.exception.AmqpResponseCode"
    name: "AmqpResponseCode"
    fullName: "com.azure.core.amqp.exception.AmqpResponseCode"
  - name: ">"
    fullName: ">"
- uid: "com.azure.core.amqp.implementation.ActiveClientTokenManager.getAuthorizationResults*"
  name: "getAuthorizationResults"
  nameWithType: "ActiveClientTokenManager.getAuthorizationResults"
  fullName: "com.azure.core.amqp.implementation.ActiveClientTokenManager.getAuthorizationResults"
  package: "com.azure.core.amqp.implementation"
- uid: "reactor.core.publisher.Mono<java.lang.Long>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "java.lang.Long"
    name: "Long"
    fullName: "java.lang.Long"
  - name: ">"
    fullName: ">"
- uid: "com.azure.core.amqp.implementation.ActiveClientTokenManager.authorize*"
  name: "authorize"
  nameWithType: "ActiveClientTokenManager.authorize"
  fullName: "com.azure.core.amqp.implementation.ActiveClientTokenManager.authorize"
  package: "com.azure.core.amqp.implementation"
- uid: "com.azure.core.amqp.implementation.ActiveClientTokenManager.close*"
  name: "close"
  nameWithType: "ActiveClientTokenManager.close"
  fullName: "com.azure.core.amqp.implementation.ActiveClientTokenManager.close"
  package: "com.azure.core.amqp.implementation"
- uid: "com.azure.core.amqp.implementation.TokenManager"
  name: "TokenManager"
  nameWithType: "TokenManager"
  fullName: "com.azure.core.amqp.implementation.TokenManager"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "reactor.core.publisher.Mono"
  name: "Mono"
  nameWithType: "Mono"
  fullName: "reactor.core.publisher.Mono"
- uid: "com.azure.core.amqp.ClaimsBasedSecurityNode"
  name: "ClaimsBasedSecurityNode"
  nameWithType: "ClaimsBasedSecurityNode"
  fullName: "com.azure.core.amqp.ClaimsBasedSecurityNode"
- uid: "reactor.core.publisher.Flux"
  name: "Flux"
  nameWithType: "Flux"
  fullName: "reactor.core.publisher.Flux"
- uid: "com.azure.core.amqp.exception.AmqpResponseCode"
  name: "AmqpResponseCode"
  nameWithType: "AmqpResponseCode"
  fullName: "com.azure.core.amqp.exception.AmqpResponseCode"
- uid: "java.lang.Long"
  name: "Long"
  nameWithType: "Long"
  fullName: "java.lang.Long"
