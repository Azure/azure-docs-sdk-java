### YamlMime:ManagedReference
items:
- uid: "com.azure.identity.implementation.IdentityClient"
  id: "IdentityClient"
  parent: "com.azure.identity.implementation"
  children:
  - "com.azure.identity.implementation.IdentityClient.IdentityClient(java.lang.String,java.lang.String,com.azure.identity.implementation.IdentityClientOptions)"
  - "com.azure.identity.implementation.IdentityClient.authenticateToIMDSEndpoint(com.azure.core.credential.TokenRequestContext)"
  - "com.azure.identity.implementation.IdentityClient.authenticateToManagedIdentityEndpoint(java.lang.String,java.lang.String,com.azure.core.credential.TokenRequestContext)"
  - "com.azure.identity.implementation.IdentityClient.authenticateWithAuthorizationCode(com.azure.core.credential.TokenRequestContext,java.lang.String,java.net.URI)"
  - "com.azure.identity.implementation.IdentityClient.authenticateWithBrowserInteraction(com.azure.core.credential.TokenRequestContext,int)"
  - "com.azure.identity.implementation.IdentityClient.authenticateWithClientSecret(java.lang.String,com.azure.core.credential.TokenRequestContext)"
  - "com.azure.identity.implementation.IdentityClient.authenticateWithDeviceCode(com.azure.core.credential.TokenRequestContext,java.util.function.Consumer<com.azure.identity.DeviceCodeInfo>)"
  - "com.azure.identity.implementation.IdentityClient.authenticateWithPemCertificate(java.lang.String,com.azure.core.credential.TokenRequestContext)"
  - "com.azure.identity.implementation.IdentityClient.authenticateWithPfxCertificate(java.lang.String,java.lang.String,com.azure.core.credential.TokenRequestContext)"
  - "com.azure.identity.implementation.IdentityClient.authenticateWithUserRefreshToken(com.azure.core.credential.TokenRequestContext,com.azure.identity.implementation.MsalToken)"
  - "com.azure.identity.implementation.IdentityClient.authenticateWithUsernamePassword(com.azure.core.credential.TokenRequestContext,java.lang.String,java.lang.String)"
  langs:
  - "java"
  name: "IdentityClient"
  nameWithType: "IdentityClient"
  fullName: "com.azure.identity.implementation.IdentityClient"
  type: "Class"
  package: "com.azure.identity.implementation"
  summary: "The identity client that contains APIs to retrieve access tokens from various configurations."
  syntax:
    content: "public class IdentityClient"
  inheritance:
  - "java.lang.Object"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.azure.identity.implementation.IdentityClient.IdentityClient(java.lang.String,java.lang.String,com.azure.identity.implementation.IdentityClientOptions)"
  id: "IdentityClient(java.lang.String,java.lang.String,com.azure.identity.implementation.IdentityClientOptions)"
  parent: "com.azure.identity.implementation.IdentityClient"
  langs:
  - "java"
  name: "IdentityClient(String tenantId, String clientId, IdentityClientOptions options)"
  nameWithType: "IdentityClient.IdentityClient(String tenantId, String clientId, IdentityClientOptions options)"
  fullName: "com.azure.identity.implementation.IdentityClient.IdentityClient(String tenantId, String clientId, IdentityClientOptions options)"
  overload: "com.azure.identity.implementation.IdentityClient.IdentityClient*"
  type: "Constructor"
  package: "com.azure.identity.implementation"
  summary: "Creates an IdentityClient with the given options."
  syntax:
    content: " IdentityClient(String tenantId, String clientId, IdentityClientOptions options)"
    parameters:
    - id: "tenantId"
      type: "java.lang.String"
      description: "the tenant ID of the application."
    - id: "clientId"
      type: "java.lang.String"
      description: "the client ID of the application."
    - id: "options"
      type: "com.azure.identity.implementation.IdentityClientOptions"
      description: "the options configuring the client."
- uid: "com.azure.identity.implementation.IdentityClient.authenticateToIMDSEndpoint(com.azure.core.credential.TokenRequestContext)"
  id: "authenticateToIMDSEndpoint(com.azure.core.credential.TokenRequestContext)"
  parent: "com.azure.identity.implementation.IdentityClient"
  langs:
  - "java"
  name: "authenticateToIMDSEndpoint(TokenRequestContext request)"
  nameWithType: "IdentityClient.authenticateToIMDSEndpoint(TokenRequestContext request)"
  fullName: "com.azure.identity.implementation.IdentityClient.authenticateToIMDSEndpoint(TokenRequestContext request)"
  overload: "com.azure.identity.implementation.IdentityClient.authenticateToIMDSEndpoint*"
  type: "Method"
  package: "com.azure.identity.implementation"
  summary: "Asynchronously acquire a token from the Virtual Machine IMDS endpoint."
  syntax:
    content: "public Mono<AccessToken> authenticateToIMDSEndpoint(TokenRequestContext request)"
    parameters:
    - id: "request"
      type: "com.azure.core.credential.TokenRequestContext"
      description: "the details of the token request"
    return:
      type: "reactor.core.publisher.Mono<com.azure.core.credential.AccessToken>"
      description: "a Publisher that emits an AccessToken"
- uid: "com.azure.identity.implementation.IdentityClient.authenticateToManagedIdentityEndpoint(java.lang.String,java.lang.String,com.azure.core.credential.TokenRequestContext)"
  id: "authenticateToManagedIdentityEndpoint(java.lang.String,java.lang.String,com.azure.core.credential.TokenRequestContext)"
  parent: "com.azure.identity.implementation.IdentityClient"
  langs:
  - "java"
  name: "authenticateToManagedIdentityEndpoint(String msiEndpoint, String msiSecret, TokenRequestContext request)"
  nameWithType: "IdentityClient.authenticateToManagedIdentityEndpoint(String msiEndpoint, String msiSecret, TokenRequestContext request)"
  fullName: "com.azure.identity.implementation.IdentityClient.authenticateToManagedIdentityEndpoint(String msiEndpoint, String msiSecret, TokenRequestContext request)"
  overload: "com.azure.identity.implementation.IdentityClient.authenticateToManagedIdentityEndpoint*"
  type: "Method"
  package: "com.azure.identity.implementation"
  summary: "Asynchronously acquire a token from the App Service Managed Service Identity endpoint."
  syntax:
    content: "public Mono<AccessToken> authenticateToManagedIdentityEndpoint(String msiEndpoint, String msiSecret, TokenRequestContext request)"
    parameters:
    - id: "msiEndpoint"
      type: "java.lang.String"
      description: "the endpoint to acquire token from"
    - id: "msiSecret"
      type: "java.lang.String"
      description: "the secret to acquire token with"
    - id: "request"
      type: "com.azure.core.credential.TokenRequestContext"
      description: "the details of the token request"
    return:
      type: "reactor.core.publisher.Mono<com.azure.core.credential.AccessToken>"
      description: "a Publisher that emits an AccessToken"
- uid: "com.azure.identity.implementation.IdentityClient.authenticateWithAuthorizationCode(com.azure.core.credential.TokenRequestContext,java.lang.String,java.net.URI)"
  id: "authenticateWithAuthorizationCode(com.azure.core.credential.TokenRequestContext,java.lang.String,java.net.URI)"
  parent: "com.azure.identity.implementation.IdentityClient"
  langs:
  - "java"
  name: "authenticateWithAuthorizationCode(TokenRequestContext request, String authorizationCode, URI redirectUrl)"
  nameWithType: "IdentityClient.authenticateWithAuthorizationCode(TokenRequestContext request, String authorizationCode, URI redirectUrl)"
  fullName: "com.azure.identity.implementation.IdentityClient.authenticateWithAuthorizationCode(TokenRequestContext request, String authorizationCode, URI redirectUrl)"
  overload: "com.azure.identity.implementation.IdentityClient.authenticateWithAuthorizationCode*"
  type: "Method"
  package: "com.azure.identity.implementation"
  summary: "Asynchronously acquire a token from Active Directory with an authorization code from an oauth flow."
  syntax:
    content: "public Mono<MsalToken> authenticateWithAuthorizationCode(TokenRequestContext request, String authorizationCode, URI redirectUrl)"
    parameters:
    - id: "request"
      type: "com.azure.core.credential.TokenRequestContext"
      description: "the details of the token request"
    - id: "authorizationCode"
      type: "java.lang.String"
      description: "the oauth2 authorization code"
    - id: "redirectUrl"
      type: "java.net.URI"
      description: "the redirectUrl where the authorization code is sent to"
    return:
      type: "reactor.core.publisher.Mono<com.azure.identity.implementation.MsalToken>"
      description: "a Publisher that emits an AccessToken"
- uid: "com.azure.identity.implementation.IdentityClient.authenticateWithBrowserInteraction(com.azure.core.credential.TokenRequestContext,int)"
  id: "authenticateWithBrowserInteraction(com.azure.core.credential.TokenRequestContext,int)"
  parent: "com.azure.identity.implementation.IdentityClient"
  langs:
  - "java"
  name: "authenticateWithBrowserInteraction(TokenRequestContext request, int port)"
  nameWithType: "IdentityClient.authenticateWithBrowserInteraction(TokenRequestContext request, int port)"
  fullName: "com.azure.identity.implementation.IdentityClient.authenticateWithBrowserInteraction(TokenRequestContext request, int port)"
  overload: "com.azure.identity.implementation.IdentityClient.authenticateWithBrowserInteraction*"
  type: "Method"
  package: "com.azure.identity.implementation"
  summary: "Asynchronously acquire a token from Active Directory by opening a browser and wait for the user to login. The credential will run a minimal local HttpServer at the given port, so `http://localhost:{port}` must be listed as a valid reply URL for the application."
  syntax:
    content: "public Mono<MsalToken> authenticateWithBrowserInteraction(TokenRequestContext request, int port)"
    parameters:
    - id: "request"
      type: "com.azure.core.credential.TokenRequestContext"
      description: "the details of the token request"
    - id: "port"
      type: "int"
      description: "the port on which the HTTP server is listening"
    return:
      type: "reactor.core.publisher.Mono<com.azure.identity.implementation.MsalToken>"
      description: "a Publisher that emits an AccessToken"
- uid: "com.azure.identity.implementation.IdentityClient.authenticateWithClientSecret(java.lang.String,com.azure.core.credential.TokenRequestContext)"
  id: "authenticateWithClientSecret(java.lang.String,com.azure.core.credential.TokenRequestContext)"
  parent: "com.azure.identity.implementation.IdentityClient"
  langs:
  - "java"
  name: "authenticateWithClientSecret(String clientSecret, TokenRequestContext request)"
  nameWithType: "IdentityClient.authenticateWithClientSecret(String clientSecret, TokenRequestContext request)"
  fullName: "com.azure.identity.implementation.IdentityClient.authenticateWithClientSecret(String clientSecret, TokenRequestContext request)"
  overload: "com.azure.identity.implementation.IdentityClient.authenticateWithClientSecret*"
  type: "Method"
  package: "com.azure.identity.implementation"
  summary: "Asynchronously acquire a token from Active Directory with a client secret."
  syntax:
    content: "public Mono<AccessToken> authenticateWithClientSecret(String clientSecret, TokenRequestContext request)"
    parameters:
    - id: "clientSecret"
      type: "java.lang.String"
      description: "the client secret of the application"
    - id: "request"
      type: "com.azure.core.credential.TokenRequestContext"
      description: "the details of the token request"
    return:
      type: "reactor.core.publisher.Mono<com.azure.core.credential.AccessToken>"
      description: "a Publisher that emits an AccessToken"
- uid: "com.azure.identity.implementation.IdentityClient.authenticateWithDeviceCode(com.azure.core.credential.TokenRequestContext,java.util.function.Consumer<com.azure.identity.DeviceCodeInfo>)"
  id: "authenticateWithDeviceCode(com.azure.core.credential.TokenRequestContext,java.util.function.Consumer<com.azure.identity.DeviceCodeInfo>)"
  parent: "com.azure.identity.implementation.IdentityClient"
  langs:
  - "java"
  name: "authenticateWithDeviceCode(TokenRequestContext request, Consumer<DeviceCodeInfo> deviceCodeConsumer)"
  nameWithType: "IdentityClient.authenticateWithDeviceCode(TokenRequestContext request, Consumer<DeviceCodeInfo> deviceCodeConsumer)"
  fullName: "com.azure.identity.implementation.IdentityClient.authenticateWithDeviceCode(TokenRequestContext request, Consumer<DeviceCodeInfo> deviceCodeConsumer)"
  overload: "com.azure.identity.implementation.IdentityClient.authenticateWithDeviceCode*"
  type: "Method"
  package: "com.azure.identity.implementation"
  summary: "Asynchronously acquire a token from Active Directory with a device code challenge. Active Directory will provide a device code for login and the user must meet the challenge by authenticating in a browser on the current or a different device."
  syntax:
    content: "public Mono<MsalToken> authenticateWithDeviceCode(TokenRequestContext request, Consumer<DeviceCodeInfo> deviceCodeConsumer)"
    parameters:
    - id: "request"
      type: "com.azure.core.credential.TokenRequestContext"
      description: "the details of the token request"
    - id: "deviceCodeConsumer"
      type: "java.util.function.Consumer<com.azure.identity.DeviceCodeInfo>"
      description: "the user provided closure that will consume the device code challenge"
    return:
      type: "reactor.core.publisher.Mono<com.azure.identity.implementation.MsalToken>"
      description: "a Publisher that emits an AccessToken when the device challenge is met, or an exception if the device\n     code expires"
- uid: "com.azure.identity.implementation.IdentityClient.authenticateWithPemCertificate(java.lang.String,com.azure.core.credential.TokenRequestContext)"
  id: "authenticateWithPemCertificate(java.lang.String,com.azure.core.credential.TokenRequestContext)"
  parent: "com.azure.identity.implementation.IdentityClient"
  langs:
  - "java"
  name: "authenticateWithPemCertificate(String pemCertificatePath, TokenRequestContext request)"
  nameWithType: "IdentityClient.authenticateWithPemCertificate(String pemCertificatePath, TokenRequestContext request)"
  fullName: "com.azure.identity.implementation.IdentityClient.authenticateWithPemCertificate(String pemCertificatePath, TokenRequestContext request)"
  overload: "com.azure.identity.implementation.IdentityClient.authenticateWithPemCertificate*"
  type: "Method"
  package: "com.azure.identity.implementation"
  summary: "Asynchronously acquire a token from Active Directory with a PEM certificate."
  syntax:
    content: "public Mono<AccessToken> authenticateWithPemCertificate(String pemCertificatePath, TokenRequestContext request)"
    parameters:
    - id: "pemCertificatePath"
      type: "java.lang.String"
      description: "the path to the PEM certificate of the application"
    - id: "request"
      type: "com.azure.core.credential.TokenRequestContext"
      description: "the details of the token request"
    return:
      type: "reactor.core.publisher.Mono<com.azure.core.credential.AccessToken>"
      description: "a Publisher that emits an AccessToken"
- uid: "com.azure.identity.implementation.IdentityClient.authenticateWithPfxCertificate(java.lang.String,java.lang.String,com.azure.core.credential.TokenRequestContext)"
  id: "authenticateWithPfxCertificate(java.lang.String,java.lang.String,com.azure.core.credential.TokenRequestContext)"
  parent: "com.azure.identity.implementation.IdentityClient"
  langs:
  - "java"
  name: "authenticateWithPfxCertificate(String pfxCertificatePath, String pfxCertificatePassword, TokenRequestContext request)"
  nameWithType: "IdentityClient.authenticateWithPfxCertificate(String pfxCertificatePath, String pfxCertificatePassword, TokenRequestContext request)"
  fullName: "com.azure.identity.implementation.IdentityClient.authenticateWithPfxCertificate(String pfxCertificatePath, String pfxCertificatePassword, TokenRequestContext request)"
  overload: "com.azure.identity.implementation.IdentityClient.authenticateWithPfxCertificate*"
  type: "Method"
  package: "com.azure.identity.implementation"
  summary: "Asynchronously acquire a token from Active Directory with a PKCS12 certificate."
  syntax:
    content: "public Mono<AccessToken> authenticateWithPfxCertificate(String pfxCertificatePath, String pfxCertificatePassword, TokenRequestContext request)"
    parameters:
    - id: "pfxCertificatePath"
      type: "java.lang.String"
      description: "the path to the PKCS12 certificate of the application"
    - id: "pfxCertificatePassword"
      type: "java.lang.String"
      description: "the password protecting the PFX certificate"
    - id: "request"
      type: "com.azure.core.credential.TokenRequestContext"
      description: "the details of the token request"
    return:
      type: "reactor.core.publisher.Mono<com.azure.core.credential.AccessToken>"
      description: "a Publisher that emits an AccessToken"
- uid: "com.azure.identity.implementation.IdentityClient.authenticateWithUserRefreshToken(com.azure.core.credential.TokenRequestContext,com.azure.identity.implementation.MsalToken)"
  id: "authenticateWithUserRefreshToken(com.azure.core.credential.TokenRequestContext,com.azure.identity.implementation.MsalToken)"
  parent: "com.azure.identity.implementation.IdentityClient"
  langs:
  - "java"
  name: "authenticateWithUserRefreshToken(TokenRequestContext request, MsalToken msalToken)"
  nameWithType: "IdentityClient.authenticateWithUserRefreshToken(TokenRequestContext request, MsalToken msalToken)"
  fullName: "com.azure.identity.implementation.IdentityClient.authenticateWithUserRefreshToken(TokenRequestContext request, MsalToken msalToken)"
  overload: "com.azure.identity.implementation.IdentityClient.authenticateWithUserRefreshToken*"
  type: "Method"
  package: "com.azure.identity.implementation"
  summary: "Asynchronously acquire a token from the currently logged in client."
  syntax:
    content: "public Mono<MsalToken> authenticateWithUserRefreshToken(TokenRequestContext request, MsalToken msalToken)"
    parameters:
    - id: "request"
      type: "com.azure.core.credential.TokenRequestContext"
      description: "the details of the token request"
    - id: "msalToken"
      type: "com.azure.identity.implementation.MsalToken"
    return:
      type: "reactor.core.publisher.Mono<com.azure.identity.implementation.MsalToken>"
      description: "a Publisher that emits an AccessToken"
- uid: "com.azure.identity.implementation.IdentityClient.authenticateWithUsernamePassword(com.azure.core.credential.TokenRequestContext,java.lang.String,java.lang.String)"
  id: "authenticateWithUsernamePassword(com.azure.core.credential.TokenRequestContext,java.lang.String,java.lang.String)"
  parent: "com.azure.identity.implementation.IdentityClient"
  langs:
  - "java"
  name: "authenticateWithUsernamePassword(TokenRequestContext request, String username, String password)"
  nameWithType: "IdentityClient.authenticateWithUsernamePassword(TokenRequestContext request, String username, String password)"
  fullName: "com.azure.identity.implementation.IdentityClient.authenticateWithUsernamePassword(TokenRequestContext request, String username, String password)"
  overload: "com.azure.identity.implementation.IdentityClient.authenticateWithUsernamePassword*"
  type: "Method"
  package: "com.azure.identity.implementation"
  summary: "Asynchronously acquire a token from Active Directory with a username and a password."
  syntax:
    content: "public Mono<MsalToken> authenticateWithUsernamePassword(TokenRequestContext request, String username, String password)"
    parameters:
    - id: "request"
      type: "com.azure.core.credential.TokenRequestContext"
      description: "the details of the token request"
    - id: "username"
      type: "java.lang.String"
      description: "the username of the user"
    - id: "password"
      type: "java.lang.String"
      description: "the password of the user"
    return:
      type: "reactor.core.publisher.Mono<com.azure.identity.implementation.MsalToken>"
      description: "a Publisher that emits an AccessToken"
references:
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "com.azure.identity.implementation.IdentityClientOptions"
  name: "IdentityClientOptions"
  nameWithType: "IdentityClientOptions"
  fullName: "com.azure.identity.implementation.IdentityClientOptions"
- uid: "com.azure.identity.implementation.IdentityClient.IdentityClient*"
  name: "IdentityClient"
  nameWithType: "IdentityClient.IdentityClient"
  fullName: "com.azure.identity.implementation.IdentityClient.IdentityClient"
  package: "com.azure.identity.implementation"
- uid: "com.azure.core.credential.TokenRequestContext"
  spec.java:
  - uid: "com.azure.core.credential.TokenRequestContext"
    name: "TokenRequestContext"
    fullName: "com.azure.core.credential.TokenRequestContext"
- uid: "reactor.core.publisher.Mono<com.azure.core.credential.AccessToken>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.core.credential.AccessToken"
    name: "AccessToken"
    fullName: "com.azure.core.credential.AccessToken"
  - name: ">"
    fullName: ">"
- uid: "com.azure.identity.implementation.IdentityClient.authenticateWithClientSecret*"
  name: "authenticateWithClientSecret"
  nameWithType: "IdentityClient.authenticateWithClientSecret"
  fullName: "com.azure.identity.implementation.IdentityClient.authenticateWithClientSecret"
  package: "com.azure.identity.implementation"
- uid: "com.azure.identity.implementation.IdentityClient.authenticateWithPfxCertificate*"
  name: "authenticateWithPfxCertificate"
  nameWithType: "IdentityClient.authenticateWithPfxCertificate"
  fullName: "com.azure.identity.implementation.IdentityClient.authenticateWithPfxCertificate"
  package: "com.azure.identity.implementation"
- uid: "com.azure.identity.implementation.IdentityClient.authenticateWithPemCertificate*"
  name: "authenticateWithPemCertificate"
  nameWithType: "IdentityClient.authenticateWithPemCertificate"
  fullName: "com.azure.identity.implementation.IdentityClient.authenticateWithPemCertificate"
  package: "com.azure.identity.implementation"
- uid: "reactor.core.publisher.Mono<com.azure.identity.implementation.MsalToken>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.identity.implementation.MsalToken"
    name: "MsalToken"
    fullName: "com.azure.identity.implementation.MsalToken"
  - name: ">"
    fullName: ">"
- uid: "com.azure.identity.implementation.IdentityClient.authenticateWithUsernamePassword*"
  name: "authenticateWithUsernamePassword"
  nameWithType: "IdentityClient.authenticateWithUsernamePassword"
  fullName: "com.azure.identity.implementation.IdentityClient.authenticateWithUsernamePassword"
  package: "com.azure.identity.implementation"
- uid: "com.azure.identity.implementation.MsalToken"
  name: "MsalToken"
  nameWithType: "MsalToken"
  fullName: "com.azure.identity.implementation.MsalToken"
- uid: "com.azure.identity.implementation.IdentityClient.authenticateWithUserRefreshToken*"
  name: "authenticateWithUserRefreshToken"
  nameWithType: "IdentityClient.authenticateWithUserRefreshToken"
  fullName: "com.azure.identity.implementation.IdentityClient.authenticateWithUserRefreshToken"
  package: "com.azure.identity.implementation"
- uid: "java.util.function.Consumer<com.azure.identity.DeviceCodeInfo>"
  spec.java:
  - uid: "java.util.function.Consumer"
    name: "Consumer"
    fullName: "java.util.function.Consumer"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.identity.DeviceCodeInfo"
    name: "DeviceCodeInfo"
    fullName: "com.azure.identity.DeviceCodeInfo"
  - name: ">"
    fullName: ">"
- uid: "com.azure.identity.implementation.IdentityClient.authenticateWithDeviceCode*"
  name: "authenticateWithDeviceCode"
  nameWithType: "IdentityClient.authenticateWithDeviceCode"
  fullName: "com.azure.identity.implementation.IdentityClient.authenticateWithDeviceCode"
  package: "com.azure.identity.implementation"
- uid: "java.net.URI"
  spec.java:
  - uid: "java.net.URI"
    name: "URI"
    fullName: "java.net.URI"
- uid: "com.azure.identity.implementation.IdentityClient.authenticateWithAuthorizationCode*"
  name: "authenticateWithAuthorizationCode"
  nameWithType: "IdentityClient.authenticateWithAuthorizationCode"
  fullName: "com.azure.identity.implementation.IdentityClient.authenticateWithAuthorizationCode"
  package: "com.azure.identity.implementation"
- uid: "int"
  spec.java:
  - uid: "int"
    name: "int"
    fullName: "int"
- uid: "com.azure.identity.implementation.IdentityClient.authenticateWithBrowserInteraction*"
  name: "authenticateWithBrowserInteraction"
  nameWithType: "IdentityClient.authenticateWithBrowserInteraction"
  fullName: "com.azure.identity.implementation.IdentityClient.authenticateWithBrowserInteraction"
  package: "com.azure.identity.implementation"
- uid: "com.azure.identity.implementation.IdentityClient.authenticateToManagedIdentityEndpoint*"
  name: "authenticateToManagedIdentityEndpoint"
  nameWithType: "IdentityClient.authenticateToManagedIdentityEndpoint"
  fullName: "com.azure.identity.implementation.IdentityClient.authenticateToManagedIdentityEndpoint"
  package: "com.azure.identity.implementation"
- uid: "com.azure.identity.implementation.IdentityClient.authenticateToIMDSEndpoint*"
  name: "authenticateToIMDSEndpoint"
  nameWithType: "IdentityClient.authenticateToIMDSEndpoint"
  fullName: "com.azure.identity.implementation.IdentityClient.authenticateToIMDSEndpoint"
  package: "com.azure.identity.implementation"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "com.azure.core.credential.AccessToken"
  name: "AccessToken"
  nameWithType: "AccessToken"
  fullName: "com.azure.core.credential.AccessToken"
- uid: "reactor.core.publisher.Mono"
  name: "Mono"
  nameWithType: "Mono"
  fullName: "reactor.core.publisher.Mono"
- uid: "java.util.function.Consumer"
  name: "Consumer"
  nameWithType: "Consumer"
  fullName: "java.util.function.Consumer"
- uid: "com.azure.identity.DeviceCodeInfo"
  name: "DeviceCodeInfo"
  nameWithType: "DeviceCodeInfo"
  fullName: "com.azure.identity.DeviceCodeInfo"
