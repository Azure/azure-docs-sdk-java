### YamlMime:ManagedReference
items:
- uid: "com.azure.storage.blob.specialized.cryptography.EncryptionData"
  id: "EncryptionData"
  parent: "com.azure.storage.blob.specialized.cryptography"
  children:
  - "com.azure.storage.blob.specialized.cryptography.EncryptionData.EncryptionData()"
  - "com.azure.storage.blob.specialized.cryptography.EncryptionData.EncryptionData(java.lang.String,com.azure.storage.blob.specialized.cryptography.WrappedKey,com.azure.storage.blob.specialized.cryptography.EncryptionAgent,byte[],java.util.Map<java.lang.String,java.lang.String>)"
  - "com.azure.storage.blob.specialized.cryptography.EncryptionData.getContentEncryptionIV()"
  - "com.azure.storage.blob.specialized.cryptography.EncryptionData.getEncryptionAgent()"
  - "com.azure.storage.blob.specialized.cryptography.EncryptionData.getEncryptionMode()"
  - "com.azure.storage.blob.specialized.cryptography.EncryptionData.getKeyWrappingMetadata()"
  - "com.azure.storage.blob.specialized.cryptography.EncryptionData.getWrappedContentKey()"
  - "com.azure.storage.blob.specialized.cryptography.EncryptionData.setContentEncryptionIV(byte[])"
  - "com.azure.storage.blob.specialized.cryptography.EncryptionData.setEncryptionAgent(com.azure.storage.blob.specialized.cryptography.EncryptionAgent)"
  - "com.azure.storage.blob.specialized.cryptography.EncryptionData.setEncryptionMode(java.lang.String)"
  - "com.azure.storage.blob.specialized.cryptography.EncryptionData.setKeyWrappingMetadata(java.util.Map<java.lang.String,java.lang.String>)"
  - "com.azure.storage.blob.specialized.cryptography.EncryptionData.setWrappedContentKey(com.azure.storage.blob.specialized.cryptography.WrappedKey)"
  - "com.azure.storage.blob.specialized.cryptography.EncryptionData.toJsonString()"
  langs:
  - "java"
  name: "EncryptionData"
  nameWithType: "EncryptionData"
  fullName: "com.azure.storage.blob.specialized.cryptography.EncryptionData"
  type: "Class"
  package: "com.azure.storage.blob.specialized.cryptography"
  summary: "Represents the encryption data that is stored on the service."
  syntax:
    content: "final class EncryptionData"
  inheritance:
  - "java.lang.Object"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.azure.storage.blob.specialized.cryptography.EncryptionData.EncryptionData()"
  id: "EncryptionData()"
  parent: "com.azure.storage.blob.specialized.cryptography.EncryptionData"
  langs:
  - "java"
  name: "EncryptionData()"
  nameWithType: "EncryptionData.EncryptionData()"
  fullName: "com.azure.storage.blob.specialized.cryptography.EncryptionData.EncryptionData()"
  overload: "com.azure.storage.blob.specialized.cryptography.EncryptionData.EncryptionData*"
  type: "Constructor"
  package: "com.azure.storage.blob.specialized.cryptography"
  summary: "Initializes a new instance of the <xref uid=\"com.azure.storage.blob.specialized.cryptography.EncryptionData\" data-throw-if-not-resolved=\"false\">EncryptionData</xref> class."
  syntax:
    content: " EncryptionData()"
- uid: "com.azure.storage.blob.specialized.cryptography.EncryptionData.EncryptionData(java.lang.String,com.azure.storage.blob.specialized.cryptography.WrappedKey,com.azure.storage.blob.specialized.cryptography.EncryptionAgent,byte[],java.util.Map<java.lang.String,java.lang.String>)"
  id: "EncryptionData(java.lang.String,com.azure.storage.blob.specialized.cryptography.WrappedKey,com.azure.storage.blob.specialized.cryptography.EncryptionAgent,byte[],java.util.Map<java.lang.String,java.lang.String>)"
  parent: "com.azure.storage.blob.specialized.cryptography.EncryptionData"
  langs:
  - "java"
  name: "EncryptionData(String encryptionMode, WrappedKey wrappedContentKey, EncryptionAgent encryptionAgent, byte[] contentEncryptionIV, Map<String,String> keyWrappingMetadata)"
  nameWithType: "EncryptionData.EncryptionData(String encryptionMode, WrappedKey wrappedContentKey, EncryptionAgent encryptionAgent, byte[] contentEncryptionIV, Map<String,String> keyWrappingMetadata)"
  fullName: "com.azure.storage.blob.specialized.cryptography.EncryptionData.EncryptionData(String encryptionMode, WrappedKey wrappedContentKey, EncryptionAgent encryptionAgent, byte[] contentEncryptionIV, Map<String,String> keyWrappingMetadata)"
  overload: "com.azure.storage.blob.specialized.cryptography.EncryptionData.EncryptionData*"
  type: "Constructor"
  package: "com.azure.storage.blob.specialized.cryptography"
  summary: "Initializes a new instance of the <xref uid=\"com.azure.storage.blob.specialized.cryptography.EncryptionData\" data-throw-if-not-resolved=\"false\">EncryptionData</xref> class using the specified wrappedContentKey, encryptionAgent, contentEncryptionIV, and keyWrappingMetadata."
  syntax:
    content: " EncryptionData(String encryptionMode, WrappedKey wrappedContentKey, EncryptionAgent encryptionAgent, byte[] contentEncryptionIV, Map<String,String> keyWrappingMetadata)"
    parameters:
    - id: "encryptionMode"
      type: "java.lang.String"
      description: "The blob encryption mode."
    - id: "wrappedContentKey"
      type: "com.azure.storage.blob.specialized.cryptography.WrappedKey"
      description: "The <xref uid=\"com.azure.storage.blob.specialized.cryptography.WrappedKey\" data-throw-if-not-resolved=\"false\">WrappedKey</xref>."
    - id: "encryptionAgent"
      type: "com.azure.storage.blob.specialized.cryptography.EncryptionAgent"
      description: "The <xref uid=\"com.azure.storage.blob.specialized.cryptography.EncryptionAgent\" data-throw-if-not-resolved=\"false\">EncryptionAgent</xref>."
    - id: "contentEncryptionIV"
      type: "byte[]"
      description: "The content encryption IV."
    - id: "keyWrappingMetadata"
      type: "java.util.Map<java.lang.String,java.lang.String>"
      description: "Metadata for encryption."
- uid: "com.azure.storage.blob.specialized.cryptography.EncryptionData.getContentEncryptionIV()"
  id: "getContentEncryptionIV()"
  parent: "com.azure.storage.blob.specialized.cryptography.EncryptionData"
  langs:
  - "java"
  name: "getContentEncryptionIV()"
  nameWithType: "EncryptionData.getContentEncryptionIV()"
  fullName: "com.azure.storage.blob.specialized.cryptography.EncryptionData.getContentEncryptionIV()"
  overload: "com.azure.storage.blob.specialized.cryptography.EncryptionData.getContentEncryptionIV*"
  type: "Method"
  package: "com.azure.storage.blob.specialized.cryptography"
  summary: "Gets the content encryption IV."
  syntax:
    content: " byte[] getContentEncryptionIV()"
    return:
      type: "byte[]"
      description: "The content encryption IV."
- uid: "com.azure.storage.blob.specialized.cryptography.EncryptionData.getEncryptionAgent()"
  id: "getEncryptionAgent()"
  parent: "com.azure.storage.blob.specialized.cryptography.EncryptionData"
  langs:
  - "java"
  name: "getEncryptionAgent()"
  nameWithType: "EncryptionData.getEncryptionAgent()"
  fullName: "com.azure.storage.blob.specialized.cryptography.EncryptionData.getEncryptionAgent()"
  overload: "com.azure.storage.blob.specialized.cryptography.EncryptionData.getEncryptionAgent*"
  type: "Method"
  package: "com.azure.storage.blob.specialized.cryptography"
  summary: "Gets the encryption agent that is used to identify the encryption protocol version and encryption algorithm."
  syntax:
    content: " EncryptionAgent getEncryptionAgent()"
    return:
      type: "com.azure.storage.blob.specialized.cryptography.EncryptionAgent"
      description: "an {@Link EncryptionAgent}."
- uid: "com.azure.storage.blob.specialized.cryptography.EncryptionData.getEncryptionMode()"
  id: "getEncryptionMode()"
  parent: "com.azure.storage.blob.specialized.cryptography.EncryptionData"
  langs:
  - "java"
  name: "getEncryptionMode()"
  nameWithType: "EncryptionData.getEncryptionMode()"
  fullName: "com.azure.storage.blob.specialized.cryptography.EncryptionData.getEncryptionMode()"
  overload: "com.azure.storage.blob.specialized.cryptography.EncryptionData.getEncryptionMode*"
  type: "Method"
  package: "com.azure.storage.blob.specialized.cryptography"
  summary: "Gets the encryption mode"
  syntax:
    content: " String getEncryptionMode()"
    return:
      type: "java.lang.String"
      description: "encryption mode"
- uid: "com.azure.storage.blob.specialized.cryptography.EncryptionData.getKeyWrappingMetadata()"
  id: "getKeyWrappingMetadata()"
  parent: "com.azure.storage.blob.specialized.cryptography.EncryptionData"
  langs:
  - "java"
  name: "getKeyWrappingMetadata()"
  nameWithType: "EncryptionData.getKeyWrappingMetadata()"
  fullName: "com.azure.storage.blob.specialized.cryptography.EncryptionData.getKeyWrappingMetadata()"
  overload: "com.azure.storage.blob.specialized.cryptography.EncryptionData.getKeyWrappingMetadata*"
  type: "Method"
  package: "com.azure.storage.blob.specialized.cryptography"
  summary: "Gets the metadata for encryption."
  syntax:
    content: " Map<String,String> getKeyWrappingMetadata()"
    return:
      type: "java.util.Map<java.lang.String,java.lang.String>"
      description: "A HashMap containing the encryption metadata in a key-value format."
- uid: "com.azure.storage.blob.specialized.cryptography.EncryptionData.getWrappedContentKey()"
  id: "getWrappedContentKey()"
  parent: "com.azure.storage.blob.specialized.cryptography.EncryptionData"
  langs:
  - "java"
  name: "getWrappedContentKey()"
  nameWithType: "EncryptionData.getWrappedContentKey()"
  fullName: "com.azure.storage.blob.specialized.cryptography.EncryptionData.getWrappedContentKey()"
  overload: "com.azure.storage.blob.specialized.cryptography.EncryptionData.getWrappedContentKey*"
  type: "Method"
  package: "com.azure.storage.blob.specialized.cryptography"
  summary: "Gets the wrapped key that is used to store the wrapping algorithm, key identifier and the encrypted key bytes."
  syntax:
    content: " WrappedKey getWrappedContentKey()"
    return:
      type: "com.azure.storage.blob.specialized.cryptography.WrappedKey"
      description: "A <xref uid=\"com.azure.storage.blob.specialized.cryptography.WrappedKey\" data-throw-if-not-resolved=\"false\">WrappedKey</xref> object that stores the wrapping algorithm, key identifier and the encrypted\n         key bytes."
- uid: "com.azure.storage.blob.specialized.cryptography.EncryptionData.setContentEncryptionIV(byte[])"
  id: "setContentEncryptionIV(byte[])"
  parent: "com.azure.storage.blob.specialized.cryptography.EncryptionData"
  langs:
  - "java"
  name: "setContentEncryptionIV(byte[] contentEncryptionIV)"
  nameWithType: "EncryptionData.setContentEncryptionIV(byte[] contentEncryptionIV)"
  fullName: "com.azure.storage.blob.specialized.cryptography.EncryptionData.setContentEncryptionIV(byte[] contentEncryptionIV)"
  overload: "com.azure.storage.blob.specialized.cryptography.EncryptionData.setContentEncryptionIV*"
  type: "Method"
  package: "com.azure.storage.blob.specialized.cryptography"
  summary: "Sets the content encryption IV."
  syntax:
    content: " EncryptionData setContentEncryptionIV(byte[] contentEncryptionIV)"
    parameters:
    - id: "contentEncryptionIV"
      type: "byte[]"
      description: "The content encryption IV."
    return:
      type: "com.azure.storage.blob.specialized.cryptography.EncryptionData"
      description: "this"
- uid: "com.azure.storage.blob.specialized.cryptography.EncryptionData.setEncryptionAgent(com.azure.storage.blob.specialized.cryptography.EncryptionAgent)"
  id: "setEncryptionAgent(com.azure.storage.blob.specialized.cryptography.EncryptionAgent)"
  parent: "com.azure.storage.blob.specialized.cryptography.EncryptionData"
  langs:
  - "java"
  name: "setEncryptionAgent(EncryptionAgent encryptionAgent)"
  nameWithType: "EncryptionData.setEncryptionAgent(EncryptionAgent encryptionAgent)"
  fullName: "com.azure.storage.blob.specialized.cryptography.EncryptionData.setEncryptionAgent(EncryptionAgent encryptionAgent)"
  overload: "com.azure.storage.blob.specialized.cryptography.EncryptionData.setEncryptionAgent*"
  type: "Method"
  package: "com.azure.storage.blob.specialized.cryptography"
  summary: "Sets the encryption agent that is used to identify the encryption protocol version and encryption algorithm."
  syntax:
    content: " EncryptionData setEncryptionAgent(EncryptionAgent encryptionAgent)"
    parameters:
    - id: "encryptionAgent"
      type: "com.azure.storage.blob.specialized.cryptography.EncryptionAgent"
      description: "The <xref uid=\"com.azure.storage.blob.specialized.cryptography.EncryptionAgent\" data-throw-if-not-resolved=\"false\">EncryptionAgent</xref>."
    return:
      type: "com.azure.storage.blob.specialized.cryptography.EncryptionData"
      description: "this"
- uid: "com.azure.storage.blob.specialized.cryptography.EncryptionData.setEncryptionMode(java.lang.String)"
  id: "setEncryptionMode(java.lang.String)"
  parent: "com.azure.storage.blob.specialized.cryptography.EncryptionData"
  langs:
  - "java"
  name: "setEncryptionMode(String encryptionMode)"
  nameWithType: "EncryptionData.setEncryptionMode(String encryptionMode)"
  fullName: "com.azure.storage.blob.specialized.cryptography.EncryptionData.setEncryptionMode(String encryptionMode)"
  overload: "com.azure.storage.blob.specialized.cryptography.EncryptionData.setEncryptionMode*"
  type: "Method"
  package: "com.azure.storage.blob.specialized.cryptography"
  summary: "Sets the encryption mode"
  syntax:
    content: " EncryptionData setEncryptionMode(String encryptionMode)"
    parameters:
    - id: "encryptionMode"
      type: "java.lang.String"
      description: "The encryption mode"
    return:
      type: "com.azure.storage.blob.specialized.cryptography.EncryptionData"
      description: "this"
- uid: "com.azure.storage.blob.specialized.cryptography.EncryptionData.setKeyWrappingMetadata(java.util.Map<java.lang.String,java.lang.String>)"
  id: "setKeyWrappingMetadata(java.util.Map<java.lang.String,java.lang.String>)"
  parent: "com.azure.storage.blob.specialized.cryptography.EncryptionData"
  langs:
  - "java"
  name: "setKeyWrappingMetadata(Map<String,String> keyWrappingMetadata)"
  nameWithType: "EncryptionData.setKeyWrappingMetadata(Map<String,String> keyWrappingMetadata)"
  fullName: "com.azure.storage.blob.specialized.cryptography.EncryptionData.setKeyWrappingMetadata(Map<String,String> keyWrappingMetadata)"
  overload: "com.azure.storage.blob.specialized.cryptography.EncryptionData.setKeyWrappingMetadata*"
  type: "Method"
  package: "com.azure.storage.blob.specialized.cryptography"
  summary: "Sets the metadata for encryption."
  syntax:
    content: " EncryptionData setKeyWrappingMetadata(Map<String,String> keyWrappingMetadata)"
    parameters:
    - id: "keyWrappingMetadata"
      type: "java.util.Map<java.lang.String,java.lang.String>"
      description: "A HashMap containing the encryption metadata in a key-value format."
    return:
      type: "com.azure.storage.blob.specialized.cryptography.EncryptionData"
      description: "this"
- uid: "com.azure.storage.blob.specialized.cryptography.EncryptionData.setWrappedContentKey(com.azure.storage.blob.specialized.cryptography.WrappedKey)"
  id: "setWrappedContentKey(com.azure.storage.blob.specialized.cryptography.WrappedKey)"
  parent: "com.azure.storage.blob.specialized.cryptography.EncryptionData"
  langs:
  - "java"
  name: "setWrappedContentKey(WrappedKey wrappedContentKey)"
  nameWithType: "EncryptionData.setWrappedContentKey(WrappedKey wrappedContentKey)"
  fullName: "com.azure.storage.blob.specialized.cryptography.EncryptionData.setWrappedContentKey(WrappedKey wrappedContentKey)"
  overload: "com.azure.storage.blob.specialized.cryptography.EncryptionData.setWrappedContentKey*"
  type: "Method"
  package: "com.azure.storage.blob.specialized.cryptography"
  summary: "Sets the wrapped key that is used to store the wrapping algorithm, key identifier and the encrypted key bytes."
  syntax:
    content: " EncryptionData setWrappedContentKey(WrappedKey wrappedContentKey)"
    parameters:
    - id: "wrappedContentKey"
      type: "com.azure.storage.blob.specialized.cryptography.WrappedKey"
      description: "A <xref uid=\"com.azure.storage.blob.specialized.cryptography.WrappedKey\" data-throw-if-not-resolved=\"false\">WrappedKey</xref> object that stores the wrapping algorithm, key identifier and the\n         encrypted key bytes."
    return:
      type: "com.azure.storage.blob.specialized.cryptography.EncryptionData"
      description: "this"
- uid: "com.azure.storage.blob.specialized.cryptography.EncryptionData.toJsonString()"
  id: "toJsonString()"
  parent: "com.azure.storage.blob.specialized.cryptography.EncryptionData"
  langs:
  - "java"
  name: "toJsonString()"
  nameWithType: "EncryptionData.toJsonString()"
  fullName: "com.azure.storage.blob.specialized.cryptography.EncryptionData.toJsonString()"
  overload: "com.azure.storage.blob.specialized.cryptography.EncryptionData.toJsonString*"
  type: "Method"
  package: "com.azure.storage.blob.specialized.cryptography"
  syntax:
    content: " String toJsonString()"
    return:
      type: "java.lang.String"
  exceptions:
  - type: "com.fasterxml.jackson.core.JsonProcessingException"
references:
- uid: "com.azure.storage.blob.specialized.cryptography.EncryptionData.EncryptionData*"
  name: "EncryptionData"
  nameWithType: "EncryptionData.EncryptionData"
  fullName: "com.azure.storage.blob.specialized.cryptography.EncryptionData.EncryptionData"
  package: "com.azure.storage.blob.specialized.cryptography"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "com.azure.storage.blob.specialized.cryptography.WrappedKey"
  name: "WrappedKey"
  nameWithType: "WrappedKey"
  fullName: "com.azure.storage.blob.specialized.cryptography.WrappedKey"
- uid: "com.azure.storage.blob.specialized.cryptography.EncryptionAgent"
  name: "EncryptionAgent"
  nameWithType: "EncryptionAgent"
  fullName: "com.azure.storage.blob.specialized.cryptography.EncryptionAgent"
- uid: "byte[]"
  spec.java:
  - uid: "byte"
    name: "byte"
    fullName: "byte"
  - name: "[]"
    fullName: "[]"
- uid: "java.util.Map<java.lang.String,java.lang.String>"
  spec.java:
  - uid: "java.util.Map"
    name: "Map"
    fullName: "java.util.Map"
  - name: "<"
    fullName: "<"
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
  - name: ","
    fullName: ","
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
  - name: ">"
    fullName: ">"
- uid: "com.azure.storage.blob.specialized.cryptography.EncryptionData.getEncryptionMode*"
  name: "getEncryptionMode"
  nameWithType: "EncryptionData.getEncryptionMode"
  fullName: "com.azure.storage.blob.specialized.cryptography.EncryptionData.getEncryptionMode"
  package: "com.azure.storage.blob.specialized.cryptography"
- uid: "com.azure.storage.blob.specialized.cryptography.EncryptionData.getWrappedContentKey*"
  name: "getWrappedContentKey"
  nameWithType: "EncryptionData.getWrappedContentKey"
  fullName: "com.azure.storage.blob.specialized.cryptography.EncryptionData.getWrappedContentKey"
  package: "com.azure.storage.blob.specialized.cryptography"
- uid: "com.azure.storage.blob.specialized.cryptography.EncryptionData.getEncryptionAgent*"
  name: "getEncryptionAgent"
  nameWithType: "EncryptionData.getEncryptionAgent"
  fullName: "com.azure.storage.blob.specialized.cryptography.EncryptionData.getEncryptionAgent"
  package: "com.azure.storage.blob.specialized.cryptography"
- uid: "com.azure.storage.blob.specialized.cryptography.EncryptionData.getContentEncryptionIV*"
  name: "getContentEncryptionIV"
  nameWithType: "EncryptionData.getContentEncryptionIV"
  fullName: "com.azure.storage.blob.specialized.cryptography.EncryptionData.getContentEncryptionIV"
  package: "com.azure.storage.blob.specialized.cryptography"
- uid: "com.azure.storage.blob.specialized.cryptography.EncryptionData.getKeyWrappingMetadata*"
  name: "getKeyWrappingMetadata"
  nameWithType: "EncryptionData.getKeyWrappingMetadata"
  fullName: "com.azure.storage.blob.specialized.cryptography.EncryptionData.getKeyWrappingMetadata"
  package: "com.azure.storage.blob.specialized.cryptography"
- uid: "com.azure.storage.blob.specialized.cryptography.EncryptionData.setEncryptionMode*"
  name: "setEncryptionMode"
  nameWithType: "EncryptionData.setEncryptionMode"
  fullName: "com.azure.storage.blob.specialized.cryptography.EncryptionData.setEncryptionMode"
  package: "com.azure.storage.blob.specialized.cryptography"
- uid: "com.azure.storage.blob.specialized.cryptography.EncryptionData.setWrappedContentKey*"
  name: "setWrappedContentKey"
  nameWithType: "EncryptionData.setWrappedContentKey"
  fullName: "com.azure.storage.blob.specialized.cryptography.EncryptionData.setWrappedContentKey"
  package: "com.azure.storage.blob.specialized.cryptography"
- uid: "com.azure.storage.blob.specialized.cryptography.EncryptionData.setEncryptionAgent*"
  name: "setEncryptionAgent"
  nameWithType: "EncryptionData.setEncryptionAgent"
  fullName: "com.azure.storage.blob.specialized.cryptography.EncryptionData.setEncryptionAgent"
  package: "com.azure.storage.blob.specialized.cryptography"
- uid: "com.azure.storage.blob.specialized.cryptography.EncryptionData.setContentEncryptionIV*"
  name: "setContentEncryptionIV"
  nameWithType: "EncryptionData.setContentEncryptionIV"
  fullName: "com.azure.storage.blob.specialized.cryptography.EncryptionData.setContentEncryptionIV"
  package: "com.azure.storage.blob.specialized.cryptography"
- uid: "com.azure.storage.blob.specialized.cryptography.EncryptionData.setKeyWrappingMetadata*"
  name: "setKeyWrappingMetadata"
  nameWithType: "EncryptionData.setKeyWrappingMetadata"
  fullName: "com.azure.storage.blob.specialized.cryptography.EncryptionData.setKeyWrappingMetadata"
  package: "com.azure.storage.blob.specialized.cryptography"
- uid: "com.fasterxml.jackson.core.JsonProcessingException"
  spec.java:
  - uid: "com.fasterxml.jackson.core.JsonProcessingException"
    name: "JsonProcessingException"
    fullName: "com.fasterxml.jackson.core.JsonProcessingException"
- uid: "com.azure.storage.blob.specialized.cryptography.EncryptionData.toJsonString*"
  name: "toJsonString"
  nameWithType: "EncryptionData.toJsonString"
  fullName: "com.azure.storage.blob.specialized.cryptography.EncryptionData.toJsonString"
  package: "com.azure.storage.blob.specialized.cryptography"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "java.util.Map"
  name: "Map"
  nameWithType: "Map"
  fullName: "java.util.Map"
- uid: "java.lang.String,java.lang.String"
  name: "String,String"
  nameWithType: "String,String"
  fullName: "java.lang.String,java.lang.String"
