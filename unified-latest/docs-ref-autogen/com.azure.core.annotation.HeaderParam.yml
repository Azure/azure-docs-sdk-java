### YamlMime:ManagedReference
items:
- uid: "com.azure.core.annotation.HeaderParam"
  id: "HeaderParam"
  parent: "com.azure.core.annotation"
  children:
  - "com.azure.core.annotation.HeaderParam.value()"
  langs:
  - "java"
  name: "HeaderParam"
  nameWithType: "HeaderParam"
  fullName: "com.azure.core.annotation.HeaderParam"
  type: "Interface"
  package: "com.azure.core.annotation"
  summary: "Replaces the header with the value of its target. The value specified here replaces headers specified statically in the <xref uid=\"com.azure.core.annotation.Headers\" data-throw-if-not-resolved=\"false\">Headers</xref>. If the parameter this annotation is attached to is a Map type, then this will be treated as a header collection. In that case each of the entries in the argument's map will be individual header values that use the value of this annotation as a prefix to their key/header name.\n\n**Example 1:**\n\n```java\n@PUT(\"{functionId}\")\n Mono> createOrReplace(@PathParam(\"functionId\", encoded = true) String\n functionId, @BodyParam FunctionInner function, @HeaderParam(\"If-Match\") String ifMatch);\n```\n\n\"If-Match: user passed value\" will show up as one of the headers.\n\n**Example 2:**\n\n```java\n@GET(\"subscriptions/{subscriptionId}/providers/Microsoft.ServiceBus/namespaces\")\n Mono> list(@Path(\"subscriptionId\") String subscriptionId, @Header\n (\"accept-language\") String acceptLanguage, @Header(\"User-Agent\") String userAgent);\n```\n\n\"accept-language\" generated by the HTTP client will be overwritten by the user passed value.\n\n**Example 3:**\n\n```java\n@GET(\"subscriptions/{subscriptionId}/providers/Microsoft.ServiceBus/namespaces\")\n Mono> list(@Path(\"subscriptionId\") String subscriptionId, @Header\n (\"Authorization\") String token);\n```\n\nThe token parameter will replace the effect of any credentials in the HTTP pipeline.\n\n**Example 4:**\n\n```java\n@PUT(\"{containerName}/{blob}\")\n @ExpectedResponses({200})\n Mono> setMetadata(@HostParam(\"url\") String url, @QueryParam\n (\"timeout\") Integer timeout, @HeaderParam(\"x-ms-meta-\") Map metadata, @HeaderParam\n (\"x-ms-lease-id\") String leaseId, @HeaderParam(\"If-Modified-Since\") String ifModifiedSince, @HeaderParam\n (\"If-Unmodified-Since\") String ifUnmodifiedSince, @HeaderParam(\"If-Match\") String ifMatches, @HeaderParam\n (\"If-None-Match\") String ifNoneMatch, @HeaderParam(\"x-ms-version\") String version, @HeaderParam\n (\"x-ms-client-request-id\") String requestId, @QueryParam(\"comp\") String comp);\n```\n\nThe metadata parameter will be expanded out so that each entry becomes \"x-ms-meta-: \"."
  syntax:
    content: "public interface HeaderParam implements Annotation"
  implements:
  - "java.lang.annotation.Annotation"
- uid: "com.azure.core.annotation.HeaderParam.value()"
  id: "value()"
  parent: "com.azure.core.annotation.HeaderParam"
  langs:
  - "java"
  name: "value()"
  nameWithType: "HeaderParam.value()"
  fullName: "com.azure.core.annotation.HeaderParam.value()"
  overload: "com.azure.core.annotation.HeaderParam.value*"
  type: "Method"
  package: "com.azure.core.annotation"
  summary: "The name of the variable in the endpoint uri template which will be replaced with the value of the parameter annotated with this annotation."
  syntax:
    content: "public abstract String value()"
    return:
      type: "java.lang.String"
      description: "The name of the variable in the endpoint uri template which will be replaced with the\n     value of the parameter annotated with this annotation."
references:
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "com.azure.core.annotation.HeaderParam.value*"
  name: "value"
  nameWithType: "HeaderParam.value"
  fullName: "com.azure.core.annotation.HeaderParam.value"
  package: "com.azure.core.annotation"
- uid: "java.lang.annotation.Annotation"
  name: "Annotation"
  nameWithType: "Annotation"
  fullName: "java.lang.annotation.Annotation"
