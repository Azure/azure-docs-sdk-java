### YamlMime:ManagedReference
items:
- uid: "com.azure.core.http.HttpRequest"
  id: "HttpRequest"
  parent: "com.azure.core.http"
  children:
  - "com.azure.core.http.HttpRequest.HttpRequest(com.azure.core.http.HttpMethod,java.lang.String)"
  - "com.azure.core.http.HttpRequest.HttpRequest(com.azure.core.http.HttpMethod,java.net.URL)"
  - "com.azure.core.http.HttpRequest.HttpRequest(com.azure.core.http.HttpMethod,java.net.URL,com.azure.core.http.HttpHeaders,reactor.core.publisher.Flux<java.nio.ByteBuffer>)"
  - "com.azure.core.http.HttpRequest.copy()"
  - "com.azure.core.http.HttpRequest.getBody()"
  - "com.azure.core.http.HttpRequest.getHeaders()"
  - "com.azure.core.http.HttpRequest.getHttpMethod()"
  - "com.azure.core.http.HttpRequest.getUrl()"
  - "com.azure.core.http.HttpRequest.setBody(byte[])"
  - "com.azure.core.http.HttpRequest.setBody(java.lang.String)"
  - "com.azure.core.http.HttpRequest.setBody(reactor.core.publisher.Flux<java.nio.ByteBuffer>)"
  - "com.azure.core.http.HttpRequest.setHeader(java.lang.String,java.lang.String)"
  - "com.azure.core.http.HttpRequest.setHeaders(com.azure.core.http.HttpHeaders)"
  - "com.azure.core.http.HttpRequest.setHttpMethod(com.azure.core.http.HttpMethod)"
  - "com.azure.core.http.HttpRequest.setUrl(java.lang.String)"
  - "com.azure.core.http.HttpRequest.setUrl(java.net.URL)"
  langs:
  - "java"
  name: "HttpRequest"
  nameWithType: "HttpRequest"
  fullName: "com.azure.core.http.HttpRequest"
  type: "Class"
  package: "com.azure.core.http"
  summary: "The outgoing Http request. It provides ways to construct <xref uid=\"com.azure.core.http.HttpRequest\" data-throw-if-not-resolved=\"false\">HttpRequest</xref> with <xref uid=\"com.azure.core.http.HttpMethod\" data-throw-if-not-resolved=\"false\">HttpMethod</xref>, <xref uid=\"\" data-throw-if-not-resolved=\"false\">URL</xref>, <xref uid=\"com.azure.core.http.HttpHeader\" data-throw-if-not-resolved=\"false\">HttpHeader</xref> and request body."
  syntax:
    content: "public class HttpRequest"
  inheritance:
  - "java.lang.Object"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.azure.core.http.HttpRequest.HttpRequest(com.azure.core.http.HttpMethod,java.lang.String)"
  id: "HttpRequest(com.azure.core.http.HttpMethod,java.lang.String)"
  parent: "com.azure.core.http.HttpRequest"
  langs:
  - "java"
  name: "HttpRequest(HttpMethod httpMethod, String url)"
  nameWithType: "HttpRequest.HttpRequest(HttpMethod httpMethod, String url)"
  fullName: "com.azure.core.http.HttpRequest.HttpRequest(HttpMethod httpMethod, String url)"
  overload: "com.azure.core.http.HttpRequest.HttpRequest*"
  type: "Constructor"
  package: "com.azure.core.http"
  summary: "Create a new HttpRequest instance."
  syntax:
    content: "public HttpRequest(HttpMethod httpMethod, String url)"
    parameters:
    - id: "httpMethod"
      type: "com.azure.core.http.HttpMethod"
      description: "the HTTP request method"
    - id: "url"
      type: "java.lang.String"
      description: "the target address to send the request to"
- uid: "com.azure.core.http.HttpRequest.HttpRequest(com.azure.core.http.HttpMethod,java.net.URL)"
  id: "HttpRequest(com.azure.core.http.HttpMethod,java.net.URL)"
  parent: "com.azure.core.http.HttpRequest"
  langs:
  - "java"
  name: "HttpRequest(HttpMethod httpMethod, URL url)"
  nameWithType: "HttpRequest.HttpRequest(HttpMethod httpMethod, URL url)"
  fullName: "com.azure.core.http.HttpRequest.HttpRequest(HttpMethod httpMethod, URL url)"
  overload: "com.azure.core.http.HttpRequest.HttpRequest*"
  type: "Constructor"
  package: "com.azure.core.http"
  summary: "Create a new HttpRequest instance."
  syntax:
    content: "public HttpRequest(HttpMethod httpMethod, URL url)"
    parameters:
    - id: "httpMethod"
      type: "com.azure.core.http.HttpMethod"
      description: "the HTTP request method"
    - id: "url"
      type: "java.net.URL"
      description: "the target address to send the request to"
- uid: "com.azure.core.http.HttpRequest.HttpRequest(com.azure.core.http.HttpMethod,java.net.URL,com.azure.core.http.HttpHeaders,reactor.core.publisher.Flux<java.nio.ByteBuffer>)"
  id: "HttpRequest(com.azure.core.http.HttpMethod,java.net.URL,com.azure.core.http.HttpHeaders,reactor.core.publisher.Flux<java.nio.ByteBuffer>)"
  parent: "com.azure.core.http.HttpRequest"
  langs:
  - "java"
  name: "HttpRequest(HttpMethod httpMethod, URL url, HttpHeaders headers, Flux<ByteBuffer> body)"
  nameWithType: "HttpRequest.HttpRequest(HttpMethod httpMethod, URL url, HttpHeaders headers, Flux<ByteBuffer> body)"
  fullName: "com.azure.core.http.HttpRequest.HttpRequest(HttpMethod httpMethod, URL url, HttpHeaders headers, Flux<ByteBuffer> body)"
  overload: "com.azure.core.http.HttpRequest.HttpRequest*"
  type: "Constructor"
  package: "com.azure.core.http"
  summary: "Create a new HttpRequest instance."
  syntax:
    content: "public HttpRequest(HttpMethod httpMethod, URL url, HttpHeaders headers, Flux<ByteBuffer> body)"
    parameters:
    - id: "httpMethod"
      type: "com.azure.core.http.HttpMethod"
      description: "the HTTP request method"
    - id: "url"
      type: "java.net.URL"
      description: "the target address to send the request to"
    - id: "headers"
      type: "com.azure.core.http.HttpHeaders"
      description: "the HTTP headers to use with this request"
    - id: "body"
      type: "reactor.core.publisher.Flux<java.nio.ByteBuffer>"
      description: "the request content"
- uid: "com.azure.core.http.HttpRequest.copy()"
  id: "copy()"
  parent: "com.azure.core.http.HttpRequest"
  langs:
  - "java"
  name: "copy()"
  nameWithType: "HttpRequest.copy()"
  fullName: "com.azure.core.http.HttpRequest.copy()"
  overload: "com.azure.core.http.HttpRequest.copy*"
  type: "Method"
  package: "com.azure.core.http"
  summary: "Creates a copy of the request. The main purpose of this is so that this HttpRequest can be changed and the resulting HttpRequest can be a backup. This means that the cloned HttpHeaders and body must not be able to change from side effects of this HttpRequest."
  syntax:
    content: "public HttpRequest copy()"
    return:
      type: "com.azure.core.http.HttpRequest"
      description: "a new HTTP request instance with cloned instances of all mutable properties."
- uid: "com.azure.core.http.HttpRequest.getBody()"
  id: "getBody()"
  parent: "com.azure.core.http.HttpRequest"
  langs:
  - "java"
  name: "getBody()"
  nameWithType: "HttpRequest.getBody()"
  fullName: "com.azure.core.http.HttpRequest.getBody()"
  overload: "com.azure.core.http.HttpRequest.getBody*"
  type: "Method"
  package: "com.azure.core.http"
  summary: "Get the request content."
  syntax:
    content: "public Flux<ByteBuffer> getBody()"
    return:
      type: "reactor.core.publisher.Flux<java.nio.ByteBuffer>"
      description: "the content to be send"
- uid: "com.azure.core.http.HttpRequest.getHeaders()"
  id: "getHeaders()"
  parent: "com.azure.core.http.HttpRequest"
  langs:
  - "java"
  name: "getHeaders()"
  nameWithType: "HttpRequest.getHeaders()"
  fullName: "com.azure.core.http.HttpRequest.getHeaders()"
  overload: "com.azure.core.http.HttpRequest.getHeaders*"
  type: "Method"
  package: "com.azure.core.http"
  summary: "Get the request headers."
  syntax:
    content: "public HttpHeaders getHeaders()"
    return:
      type: "com.azure.core.http.HttpHeaders"
      description: "headers to be sent"
- uid: "com.azure.core.http.HttpRequest.getHttpMethod()"
  id: "getHttpMethod()"
  parent: "com.azure.core.http.HttpRequest"
  langs:
  - "java"
  name: "getHttpMethod()"
  nameWithType: "HttpRequest.getHttpMethod()"
  fullName: "com.azure.core.http.HttpRequest.getHttpMethod()"
  overload: "com.azure.core.http.HttpRequest.getHttpMethod*"
  type: "Method"
  package: "com.azure.core.http"
  summary: "Get the request method."
  syntax:
    content: "public HttpMethod getHttpMethod()"
    return:
      type: "com.azure.core.http.HttpMethod"
      description: "the request method"
- uid: "com.azure.core.http.HttpRequest.getUrl()"
  id: "getUrl()"
  parent: "com.azure.core.http.HttpRequest"
  langs:
  - "java"
  name: "getUrl()"
  nameWithType: "HttpRequest.getUrl()"
  fullName: "com.azure.core.http.HttpRequest.getUrl()"
  overload: "com.azure.core.http.HttpRequest.getUrl*"
  type: "Method"
  package: "com.azure.core.http"
  summary: "Get the target address."
  syntax:
    content: "public URL getUrl()"
    return:
      type: "java.net.URL"
      description: "the target address"
- uid: "com.azure.core.http.HttpRequest.setBody(byte[])"
  id: "setBody(byte[])"
  parent: "com.azure.core.http.HttpRequest"
  langs:
  - "java"
  name: "setBody(byte[] content)"
  nameWithType: "HttpRequest.setBody(byte[] content)"
  fullName: "com.azure.core.http.HttpRequest.setBody(byte[] content)"
  overload: "com.azure.core.http.HttpRequest.setBody*"
  type: "Method"
  package: "com.azure.core.http"
  summary: "Set the request content. The Content-Length header will be set based on the given content's length"
  syntax:
    content: "public HttpRequest setBody(byte[] content)"
    parameters:
    - id: "content"
      type: "byte[]"
      description: "the request content"
    return:
      type: "com.azure.core.http.HttpRequest"
      description: "this HttpRequest"
- uid: "com.azure.core.http.HttpRequest.setBody(java.lang.String)"
  id: "setBody(java.lang.String)"
  parent: "com.azure.core.http.HttpRequest"
  langs:
  - "java"
  name: "setBody(String content)"
  nameWithType: "HttpRequest.setBody(String content)"
  fullName: "com.azure.core.http.HttpRequest.setBody(String content)"
  overload: "com.azure.core.http.HttpRequest.setBody*"
  type: "Method"
  package: "com.azure.core.http"
  summary: "Set the request content."
  syntax:
    content: "public HttpRequest setBody(String content)"
    parameters:
    - id: "content"
      type: "java.lang.String"
      description: "the request content"
    return:
      type: "com.azure.core.http.HttpRequest"
      description: "this HttpRequest"
- uid: "com.azure.core.http.HttpRequest.setBody(reactor.core.publisher.Flux<java.nio.ByteBuffer>)"
  id: "setBody(reactor.core.publisher.Flux<java.nio.ByteBuffer>)"
  parent: "com.azure.core.http.HttpRequest"
  langs:
  - "java"
  name: "setBody(Flux<ByteBuffer> content)"
  nameWithType: "HttpRequest.setBody(Flux<ByteBuffer> content)"
  fullName: "com.azure.core.http.HttpRequest.setBody(Flux<ByteBuffer> content)"
  overload: "com.azure.core.http.HttpRequest.setBody*"
  type: "Method"
  package: "com.azure.core.http"
  summary: "Set request content. Caller must set the Content-Length header to indicate the length of the content, or use Transfer-Encoding: chunked."
  syntax:
    content: "public HttpRequest setBody(Flux<ByteBuffer> content)"
    parameters:
    - id: "content"
      type: "reactor.core.publisher.Flux<java.nio.ByteBuffer>"
      description: "the request content"
    return:
      type: "com.azure.core.http.HttpRequest"
      description: "this HttpRequest"
- uid: "com.azure.core.http.HttpRequest.setHeader(java.lang.String,java.lang.String)"
  id: "setHeader(java.lang.String,java.lang.String)"
  parent: "com.azure.core.http.HttpRequest"
  langs:
  - "java"
  name: "setHeader(String name, String value)"
  nameWithType: "HttpRequest.setHeader(String name, String value)"
  fullName: "com.azure.core.http.HttpRequest.setHeader(String name, String value)"
  overload: "com.azure.core.http.HttpRequest.setHeader*"
  type: "Method"
  package: "com.azure.core.http"
  summary: "Set a request header, replacing any existing value. A null for `value` will remove the header if one with matching name exists."
  syntax:
    content: "public HttpRequest setHeader(String name, String value)"
    parameters:
    - id: "name"
      type: "java.lang.String"
      description: "the header name"
    - id: "value"
      type: "java.lang.String"
      description: "the header value"
    return:
      type: "com.azure.core.http.HttpRequest"
      description: "this HttpRequest"
- uid: "com.azure.core.http.HttpRequest.setHeaders(com.azure.core.http.HttpHeaders)"
  id: "setHeaders(com.azure.core.http.HttpHeaders)"
  parent: "com.azure.core.http.HttpRequest"
  langs:
  - "java"
  name: "setHeaders(HttpHeaders headers)"
  nameWithType: "HttpRequest.setHeaders(HttpHeaders headers)"
  fullName: "com.azure.core.http.HttpRequest.setHeaders(HttpHeaders headers)"
  overload: "com.azure.core.http.HttpRequest.setHeaders*"
  type: "Method"
  package: "com.azure.core.http"
  summary: "Set the request headers."
  syntax:
    content: "public HttpRequest setHeaders(HttpHeaders headers)"
    parameters:
    - id: "headers"
      type: "com.azure.core.http.HttpHeaders"
      description: "the set of headers"
    return:
      type: "com.azure.core.http.HttpRequest"
      description: "this HttpRequest"
- uid: "com.azure.core.http.HttpRequest.setHttpMethod(com.azure.core.http.HttpMethod)"
  id: "setHttpMethod(com.azure.core.http.HttpMethod)"
  parent: "com.azure.core.http.HttpRequest"
  langs:
  - "java"
  name: "setHttpMethod(HttpMethod httpMethod)"
  nameWithType: "HttpRequest.setHttpMethod(HttpMethod httpMethod)"
  fullName: "com.azure.core.http.HttpRequest.setHttpMethod(HttpMethod httpMethod)"
  overload: "com.azure.core.http.HttpRequest.setHttpMethod*"
  type: "Method"
  package: "com.azure.core.http"
  summary: "Set the request method."
  syntax:
    content: "public HttpRequest setHttpMethod(HttpMethod httpMethod)"
    parameters:
    - id: "httpMethod"
      type: "com.azure.core.http.HttpMethod"
      description: "the request method"
    return:
      type: "com.azure.core.http.HttpRequest"
      description: "this HttpRequest"
- uid: "com.azure.core.http.HttpRequest.setUrl(java.lang.String)"
  id: "setUrl(java.lang.String)"
  parent: "com.azure.core.http.HttpRequest"
  langs:
  - "java"
  name: "setUrl(String url)"
  nameWithType: "HttpRequest.setUrl(String url)"
  fullName: "com.azure.core.http.HttpRequest.setUrl(String url)"
  overload: "com.azure.core.http.HttpRequest.setUrl*"
  type: "Method"
  package: "com.azure.core.http"
  summary: "Set the target address to send the request to."
  syntax:
    content: "public HttpRequest setUrl(String url)"
    parameters:
    - id: "url"
      type: "java.lang.String"
      description: "target address as a String"
    return:
      type: "com.azure.core.http.HttpRequest"
      description: "this HttpRequest"
- uid: "com.azure.core.http.HttpRequest.setUrl(java.net.URL)"
  id: "setUrl(java.net.URL)"
  parent: "com.azure.core.http.HttpRequest"
  langs:
  - "java"
  name: "setUrl(URL url)"
  nameWithType: "HttpRequest.setUrl(URL url)"
  fullName: "com.azure.core.http.HttpRequest.setUrl(URL url)"
  overload: "com.azure.core.http.HttpRequest.setUrl*"
  type: "Method"
  package: "com.azure.core.http"
  summary: "Set the target address to send the request to."
  syntax:
    content: "public HttpRequest setUrl(URL url)"
    parameters:
    - id: "url"
      type: "java.net.URL"
      description: "target address as <xref uid=\"\" data-throw-if-not-resolved=\"false\">URL</xref>"
    return:
      type: "com.azure.core.http.HttpRequest"
      description: "this HttpRequest"
references:
- uid: "com.azure.core.http.HttpMethod"
  name: "HttpMethod"
  nameWithType: "HttpMethod"
  fullName: "com.azure.core.http.HttpMethod"
- uid: "java.net.URL"
  spec.java:
  - uid: "java.net.URL"
    name: "URL"
    fullName: "java.net.URL"
- uid: "com.azure.core.http.HttpRequest.HttpRequest*"
  name: "HttpRequest"
  nameWithType: "HttpRequest.HttpRequest"
  fullName: "com.azure.core.http.HttpRequest.HttpRequest"
  package: "com.azure.core.http"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "com.azure.core.http.HttpHeaders"
  name: "HttpHeaders"
  nameWithType: "HttpHeaders"
  fullName: "com.azure.core.http.HttpHeaders"
- uid: "reactor.core.publisher.Flux<java.nio.ByteBuffer>"
  spec.java:
  - uid: "reactor.core.publisher.Flux"
    name: "Flux"
    fullName: "reactor.core.publisher.Flux"
  - name: "<"
    fullName: "<"
  - uid: "java.nio.ByteBuffer"
    name: "ByteBuffer"
    fullName: "java.nio.ByteBuffer"
  - name: ">"
    fullName: ">"
- uid: "com.azure.core.http.HttpRequest.getHttpMethod*"
  name: "getHttpMethod"
  nameWithType: "HttpRequest.getHttpMethod"
  fullName: "com.azure.core.http.HttpRequest.getHttpMethod"
  package: "com.azure.core.http"
- uid: "com.azure.core.http.HttpRequest.setHttpMethod*"
  name: "setHttpMethod"
  nameWithType: "HttpRequest.setHttpMethod"
  fullName: "com.azure.core.http.HttpRequest.setHttpMethod"
  package: "com.azure.core.http"
- uid: "com.azure.core.http.HttpRequest.getUrl*"
  name: "getUrl"
  nameWithType: "HttpRequest.getUrl"
  fullName: "com.azure.core.http.HttpRequest.getUrl"
  package: "com.azure.core.http"
- uid: "com.azure.core.http.HttpRequest.setUrl*"
  name: "setUrl"
  nameWithType: "HttpRequest.setUrl"
  fullName: "com.azure.core.http.HttpRequest.setUrl"
  package: "com.azure.core.http"
- uid: "com.azure.core.http.HttpRequest.getHeaders*"
  name: "getHeaders"
  nameWithType: "HttpRequest.getHeaders"
  fullName: "com.azure.core.http.HttpRequest.getHeaders"
  package: "com.azure.core.http"
- uid: "com.azure.core.http.HttpRequest.setHeaders*"
  name: "setHeaders"
  nameWithType: "HttpRequest.setHeaders"
  fullName: "com.azure.core.http.HttpRequest.setHeaders"
  package: "com.azure.core.http"
- uid: "com.azure.core.http.HttpRequest.setHeader*"
  name: "setHeader"
  nameWithType: "HttpRequest.setHeader"
  fullName: "com.azure.core.http.HttpRequest.setHeader"
  package: "com.azure.core.http"
- uid: "com.azure.core.http.HttpRequest.getBody*"
  name: "getBody"
  nameWithType: "HttpRequest.getBody"
  fullName: "com.azure.core.http.HttpRequest.getBody"
  package: "com.azure.core.http"
- uid: "com.azure.core.http.HttpRequest.setBody*"
  name: "setBody"
  nameWithType: "HttpRequest.setBody"
  fullName: "com.azure.core.http.HttpRequest.setBody"
  package: "com.azure.core.http"
- uid: "byte[]"
  spec.java:
  - uid: "byte"
    name: "byte"
    fullName: "byte"
  - name: "[]"
    fullName: "[]"
- uid: "com.azure.core.http.HttpRequest.copy*"
  name: "copy"
  nameWithType: "HttpRequest.copy"
  fullName: "com.azure.core.http.HttpRequest.copy"
  package: "com.azure.core.http"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "reactor.core.publisher.Flux"
  name: "Flux"
  nameWithType: "Flux"
  fullName: "reactor.core.publisher.Flux"
- uid: "java.nio.ByteBuffer"
  name: "ByteBuffer"
  nameWithType: "ByteBuffer"
  fullName: "java.nio.ByteBuffer"
