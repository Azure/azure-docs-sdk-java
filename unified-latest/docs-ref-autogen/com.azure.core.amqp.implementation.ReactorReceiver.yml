### YamlMime:ManagedReference
items:
- uid: "com.azure.core.amqp.implementation.ReactorReceiver"
  id: "ReactorReceiver"
  parent: "com.azure.core.amqp.implementation"
  children:
  - "com.azure.core.amqp.implementation.ReactorReceiver.ReactorReceiver(java.lang.String,org.apache.qpid.proton.engine.Receiver,com.azure.core.amqp.implementation.handler.ReceiveLinkHandler,com.azure.core.amqp.implementation.TokenManager,com.azure.core.amqp.implementation.ReactorDispatcher)"
  - "com.azure.core.amqp.implementation.ReactorReceiver.addCredits(int)"
  - "com.azure.core.amqp.implementation.ReactorReceiver.dispose()"
  - "com.azure.core.amqp.implementation.ReactorReceiver.getCredits()"
  - "com.azure.core.amqp.implementation.ReactorReceiver.getEndpointStates()"
  - "com.azure.core.amqp.implementation.ReactorReceiver.getEntityPath()"
  - "com.azure.core.amqp.implementation.ReactorReceiver.getHostname()"
  - "com.azure.core.amqp.implementation.ReactorReceiver.getLinkName()"
  - "com.azure.core.amqp.implementation.ReactorReceiver.isDisposed()"
  - "com.azure.core.amqp.implementation.ReactorReceiver.receive()"
  - "com.azure.core.amqp.implementation.ReactorReceiver.setEmptyCreditListener(java.util.function.Supplier<java.lang.Integer>)"
  langs:
  - "java"
  name: "ReactorReceiver"
  nameWithType: "ReactorReceiver"
  fullName: "com.azure.core.amqp.implementation.ReactorReceiver"
  type: "Class"
  package: "com.azure.core.amqp.implementation"
  summary: "Handles receiving events from Event Hubs service and translating them to proton-j messages."
  syntax:
    content: "public class ReactorReceiver implements AmqpReceiveLink"
  inheritance:
  - "java.lang.Object"
  implements:
  - "com.azure.core.amqp.implementation.AmqpReceiveLink"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.azure.core.amqp.implementation.ReactorReceiver.ReactorReceiver(java.lang.String,org.apache.qpid.proton.engine.Receiver,com.azure.core.amqp.implementation.handler.ReceiveLinkHandler,com.azure.core.amqp.implementation.TokenManager,com.azure.core.amqp.implementation.ReactorDispatcher)"
  id: "ReactorReceiver(java.lang.String,org.apache.qpid.proton.engine.Receiver,com.azure.core.amqp.implementation.handler.ReceiveLinkHandler,com.azure.core.amqp.implementation.TokenManager,com.azure.core.amqp.implementation.ReactorDispatcher)"
  parent: "com.azure.core.amqp.implementation.ReactorReceiver"
  langs:
  - "java"
  name: "ReactorReceiver(String entityPath, Receiver receiver, ReceiveLinkHandler handler, TokenManager tokenManager, ReactorDispatcher dispatcher)"
  nameWithType: "ReactorReceiver.ReactorReceiver(String entityPath, Receiver receiver, ReceiveLinkHandler handler, TokenManager tokenManager, ReactorDispatcher dispatcher)"
  fullName: "com.azure.core.amqp.implementation.ReactorReceiver.ReactorReceiver(String entityPath, Receiver receiver, ReceiveLinkHandler handler, TokenManager tokenManager, ReactorDispatcher dispatcher)"
  overload: "com.azure.core.amqp.implementation.ReactorReceiver.ReactorReceiver*"
  type: "Constructor"
  package: "com.azure.core.amqp.implementation"
  syntax:
    content: " ReactorReceiver(String entityPath, Receiver receiver, ReceiveLinkHandler handler, TokenManager tokenManager, ReactorDispatcher dispatcher)"
    parameters:
    - id: "entityPath"
      type: "java.lang.String"
    - id: "receiver"
      type: "org.apache.qpid.proton.engine.Receiver"
    - id: "handler"
      type: "com.azure.core.amqp.implementation.handler.ReceiveLinkHandler"
    - id: "tokenManager"
      type: "com.azure.core.amqp.implementation.TokenManager"
    - id: "dispatcher"
      type: "com.azure.core.amqp.implementation.ReactorDispatcher"
- uid: "com.azure.core.amqp.implementation.ReactorReceiver.addCredits(int)"
  id: "addCredits(int)"
  parent: "com.azure.core.amqp.implementation.ReactorReceiver"
  langs:
  - "java"
  name: "addCredits(int credits)"
  nameWithType: "ReactorReceiver.addCredits(int credits)"
  fullName: "com.azure.core.amqp.implementation.ReactorReceiver.addCredits(int credits)"
  overload: "com.azure.core.amqp.implementation.ReactorReceiver.addCredits*"
  type: "Method"
  package: "com.azure.core.amqp.implementation"
  syntax:
    content: "public void addCredits(int credits)"
    parameters:
    - id: "credits"
      type: "int"
- uid: "com.azure.core.amqp.implementation.ReactorReceiver.dispose()"
  id: "dispose()"
  parent: "com.azure.core.amqp.implementation.ReactorReceiver"
  langs:
  - "java"
  name: "dispose()"
  nameWithType: "ReactorReceiver.dispose()"
  fullName: "com.azure.core.amqp.implementation.ReactorReceiver.dispose()"
  overload: "com.azure.core.amqp.implementation.ReactorReceiver.dispose*"
  type: "Method"
  package: "com.azure.core.amqp.implementation"
  syntax:
    content: "public void dispose()"
- uid: "com.azure.core.amqp.implementation.ReactorReceiver.getCredits()"
  id: "getCredits()"
  parent: "com.azure.core.amqp.implementation.ReactorReceiver"
  langs:
  - "java"
  name: "getCredits()"
  nameWithType: "ReactorReceiver.getCredits()"
  fullName: "com.azure.core.amqp.implementation.ReactorReceiver.getCredits()"
  overload: "com.azure.core.amqp.implementation.ReactorReceiver.getCredits*"
  type: "Method"
  package: "com.azure.core.amqp.implementation"
  syntax:
    content: "public int getCredits()"
    return:
      type: "int"
- uid: "com.azure.core.amqp.implementation.ReactorReceiver.getEndpointStates()"
  id: "getEndpointStates()"
  parent: "com.azure.core.amqp.implementation.ReactorReceiver"
  langs:
  - "java"
  name: "getEndpointStates()"
  nameWithType: "ReactorReceiver.getEndpointStates()"
  fullName: "com.azure.core.amqp.implementation.ReactorReceiver.getEndpointStates()"
  overload: "com.azure.core.amqp.implementation.ReactorReceiver.getEndpointStates*"
  type: "Method"
  package: "com.azure.core.amqp.implementation"
  syntax:
    content: "public Flux<AmqpEndpointState> getEndpointStates()"
    return:
      type: "reactor.core.publisher.Flux<com.azure.core.amqp.AmqpEndpointState>"
- uid: "com.azure.core.amqp.implementation.ReactorReceiver.getEntityPath()"
  id: "getEntityPath()"
  parent: "com.azure.core.amqp.implementation.ReactorReceiver"
  langs:
  - "java"
  name: "getEntityPath()"
  nameWithType: "ReactorReceiver.getEntityPath()"
  fullName: "com.azure.core.amqp.implementation.ReactorReceiver.getEntityPath()"
  overload: "com.azure.core.amqp.implementation.ReactorReceiver.getEntityPath*"
  type: "Method"
  package: "com.azure.core.amqp.implementation"
  syntax:
    content: "public String getEntityPath()"
    return:
      type: "java.lang.String"
- uid: "com.azure.core.amqp.implementation.ReactorReceiver.getHostname()"
  id: "getHostname()"
  parent: "com.azure.core.amqp.implementation.ReactorReceiver"
  langs:
  - "java"
  name: "getHostname()"
  nameWithType: "ReactorReceiver.getHostname()"
  fullName: "com.azure.core.amqp.implementation.ReactorReceiver.getHostname()"
  overload: "com.azure.core.amqp.implementation.ReactorReceiver.getHostname*"
  type: "Method"
  package: "com.azure.core.amqp.implementation"
  syntax:
    content: "public String getHostname()"
    return:
      type: "java.lang.String"
- uid: "com.azure.core.amqp.implementation.ReactorReceiver.getLinkName()"
  id: "getLinkName()"
  parent: "com.azure.core.amqp.implementation.ReactorReceiver"
  langs:
  - "java"
  name: "getLinkName()"
  nameWithType: "ReactorReceiver.getLinkName()"
  fullName: "com.azure.core.amqp.implementation.ReactorReceiver.getLinkName()"
  overload: "com.azure.core.amqp.implementation.ReactorReceiver.getLinkName*"
  type: "Method"
  package: "com.azure.core.amqp.implementation"
  syntax:
    content: "public String getLinkName()"
    return:
      type: "java.lang.String"
- uid: "com.azure.core.amqp.implementation.ReactorReceiver.isDisposed()"
  id: "isDisposed()"
  parent: "com.azure.core.amqp.implementation.ReactorReceiver"
  langs:
  - "java"
  name: "isDisposed()"
  nameWithType: "ReactorReceiver.isDisposed()"
  fullName: "com.azure.core.amqp.implementation.ReactorReceiver.isDisposed()"
  overload: "com.azure.core.amqp.implementation.ReactorReceiver.isDisposed*"
  type: "Method"
  package: "com.azure.core.amqp.implementation"
  syntax:
    content: "public boolean isDisposed()"
    return:
      type: "boolean"
- uid: "com.azure.core.amqp.implementation.ReactorReceiver.receive()"
  id: "receive()"
  parent: "com.azure.core.amqp.implementation.ReactorReceiver"
  langs:
  - "java"
  name: "receive()"
  nameWithType: "ReactorReceiver.receive()"
  fullName: "com.azure.core.amqp.implementation.ReactorReceiver.receive()"
  overload: "com.azure.core.amqp.implementation.ReactorReceiver.receive*"
  type: "Method"
  package: "com.azure.core.amqp.implementation"
  syntax:
    content: "public Flux<Message> receive()"
    return:
      type: "reactor.core.publisher.Flux<org.apache.qpid.proton.message.Message>"
- uid: "com.azure.core.amqp.implementation.ReactorReceiver.setEmptyCreditListener(java.util.function.Supplier<java.lang.Integer>)"
  id: "setEmptyCreditListener(java.util.function.Supplier<java.lang.Integer>)"
  parent: "com.azure.core.amqp.implementation.ReactorReceiver"
  langs:
  - "java"
  name: "setEmptyCreditListener(Supplier<Integer> creditSupplier)"
  nameWithType: "ReactorReceiver.setEmptyCreditListener(Supplier<Integer> creditSupplier)"
  fullName: "com.azure.core.amqp.implementation.ReactorReceiver.setEmptyCreditListener(Supplier<Integer> creditSupplier)"
  overload: "com.azure.core.amqp.implementation.ReactorReceiver.setEmptyCreditListener*"
  type: "Method"
  package: "com.azure.core.amqp.implementation"
  syntax:
    content: "public void setEmptyCreditListener(Supplier<Integer> creditSupplier)"
    parameters:
    - id: "creditSupplier"
      type: "java.util.function.Supplier<java.lang.Integer>"
references:
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "org.apache.qpid.proton.engine.Receiver"
  spec.java:
  - uid: "org.apache.qpid.proton.engine.Receiver"
    name: "Receiver"
    fullName: "org.apache.qpid.proton.engine.Receiver"
- uid: "com.azure.core.amqp.implementation.handler.ReceiveLinkHandler"
  name: "ReceiveLinkHandler"
  nameWithType: "ReceiveLinkHandler"
  fullName: "com.azure.core.amqp.implementation.handler.ReceiveLinkHandler"
- uid: "com.azure.core.amqp.implementation.TokenManager"
  name: "TokenManager"
  nameWithType: "TokenManager"
  fullName: "com.azure.core.amqp.implementation.TokenManager"
- uid: "com.azure.core.amqp.implementation.ReactorDispatcher"
  name: "ReactorDispatcher"
  nameWithType: "ReactorDispatcher"
  fullName: "com.azure.core.amqp.implementation.ReactorDispatcher"
- uid: "com.azure.core.amqp.implementation.ReactorReceiver.ReactorReceiver*"
  name: "ReactorReceiver"
  nameWithType: "ReactorReceiver.ReactorReceiver"
  fullName: "com.azure.core.amqp.implementation.ReactorReceiver.ReactorReceiver"
  package: "com.azure.core.amqp.implementation"
- uid: "reactor.core.publisher.Flux<com.azure.core.amqp.AmqpEndpointState>"
  spec.java:
  - uid: "reactor.core.publisher.Flux"
    name: "Flux"
    fullName: "reactor.core.publisher.Flux"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.core.amqp.AmqpEndpointState"
    name: "AmqpEndpointState"
    fullName: "com.azure.core.amqp.AmqpEndpointState"
  - name: ">"
    fullName: ">"
- uid: "com.azure.core.amqp.implementation.ReactorReceiver.getEndpointStates*"
  name: "getEndpointStates"
  nameWithType: "ReactorReceiver.getEndpointStates"
  fullName: "com.azure.core.amqp.implementation.ReactorReceiver.getEndpointStates"
  package: "com.azure.core.amqp.implementation"
- uid: "reactor.core.publisher.Flux<org.apache.qpid.proton.message.Message>"
  spec.java:
  - uid: "reactor.core.publisher.Flux"
    name: "Flux"
    fullName: "reactor.core.publisher.Flux"
  - name: "<"
    fullName: "<"
  - uid: "org.apache.qpid.proton.message.Message"
    name: "Message"
    fullName: "org.apache.qpid.proton.message.Message"
  - name: ">"
    fullName: ">"
- uid: "com.azure.core.amqp.implementation.ReactorReceiver.receive*"
  name: "receive"
  nameWithType: "ReactorReceiver.receive"
  fullName: "com.azure.core.amqp.implementation.ReactorReceiver.receive"
  package: "com.azure.core.amqp.implementation"
- uid: "int"
  spec.java:
  - uid: "int"
    name: "int"
    fullName: "int"
- uid: "com.azure.core.amqp.implementation.ReactorReceiver.addCredits*"
  name: "addCredits"
  nameWithType: "ReactorReceiver.addCredits"
  fullName: "com.azure.core.amqp.implementation.ReactorReceiver.addCredits"
  package: "com.azure.core.amqp.implementation"
- uid: "com.azure.core.amqp.implementation.ReactorReceiver.getCredits*"
  name: "getCredits"
  nameWithType: "ReactorReceiver.getCredits"
  fullName: "com.azure.core.amqp.implementation.ReactorReceiver.getCredits"
  package: "com.azure.core.amqp.implementation"
- uid: "java.util.function.Supplier<java.lang.Integer>"
  spec.java:
  - uid: "java.util.function.Supplier"
    name: "Supplier"
    fullName: "java.util.function.Supplier"
  - name: "<"
    fullName: "<"
  - uid: "java.lang.Integer"
    name: "Integer"
    fullName: "java.lang.Integer"
  - name: ">"
    fullName: ">"
- uid: "com.azure.core.amqp.implementation.ReactorReceiver.setEmptyCreditListener*"
  name: "setEmptyCreditListener"
  nameWithType: "ReactorReceiver.setEmptyCreditListener"
  fullName: "com.azure.core.amqp.implementation.ReactorReceiver.setEmptyCreditListener"
  package: "com.azure.core.amqp.implementation"
- uid: "com.azure.core.amqp.implementation.ReactorReceiver.getLinkName*"
  name: "getLinkName"
  nameWithType: "ReactorReceiver.getLinkName"
  fullName: "com.azure.core.amqp.implementation.ReactorReceiver.getLinkName"
  package: "com.azure.core.amqp.implementation"
- uid: "com.azure.core.amqp.implementation.ReactorReceiver.getEntityPath*"
  name: "getEntityPath"
  nameWithType: "ReactorReceiver.getEntityPath"
  fullName: "com.azure.core.amqp.implementation.ReactorReceiver.getEntityPath"
  package: "com.azure.core.amqp.implementation"
- uid: "com.azure.core.amqp.implementation.ReactorReceiver.getHostname*"
  name: "getHostname"
  nameWithType: "ReactorReceiver.getHostname"
  fullName: "com.azure.core.amqp.implementation.ReactorReceiver.getHostname"
  package: "com.azure.core.amqp.implementation"
- uid: "boolean"
  spec.java:
  - uid: "boolean"
    name: "boolean"
    fullName: "boolean"
- uid: "com.azure.core.amqp.implementation.ReactorReceiver.isDisposed*"
  name: "isDisposed"
  nameWithType: "ReactorReceiver.isDisposed"
  fullName: "com.azure.core.amqp.implementation.ReactorReceiver.isDisposed"
  package: "com.azure.core.amqp.implementation"
- uid: "com.azure.core.amqp.implementation.ReactorReceiver.dispose*"
  name: "dispose"
  nameWithType: "ReactorReceiver.dispose"
  fullName: "com.azure.core.amqp.implementation.ReactorReceiver.dispose"
  package: "com.azure.core.amqp.implementation"
- uid: "com.azure.core.amqp.implementation.AmqpReceiveLink"
  name: "AmqpReceiveLink"
  nameWithType: "AmqpReceiveLink"
  fullName: "com.azure.core.amqp.implementation.AmqpReceiveLink"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "reactor.core.publisher.Flux"
  name: "Flux"
  nameWithType: "Flux"
  fullName: "reactor.core.publisher.Flux"
- uid: "com.azure.core.amqp.AmqpEndpointState"
  name: "AmqpEndpointState"
  nameWithType: "AmqpEndpointState"
  fullName: "com.azure.core.amqp.AmqpEndpointState"
- uid: "org.apache.qpid.proton.message.Message"
  name: "Message"
  nameWithType: "Message"
  fullName: "org.apache.qpid.proton.message.Message"
- uid: "java.util.function.Supplier"
  name: "Supplier"
  nameWithType: "Supplier"
  fullName: "java.util.function.Supplier"
- uid: "java.lang.Integer"
  name: "Integer"
  nameWithType: "Integer"
  fullName: "java.lang.Integer"
