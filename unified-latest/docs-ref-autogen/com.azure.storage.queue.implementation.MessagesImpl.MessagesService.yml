### YamlMime:ManagedReference
items:
- uid: "com.azure.storage.queue.implementation.MessagesImpl.MessagesService"
  id: "MessagesService"
  parent: "com.azure.storage.queue.implementation"
  children:
  - "com.azure.storage.queue.implementation.MessagesImpl.MessagesService.clear(java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  - "com.azure.storage.queue.implementation.MessagesImpl.MessagesService.dequeue(java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  - "com.azure.storage.queue.implementation.MessagesImpl.MessagesService.enqueue(java.lang.String,java.lang.String,com.azure.storage.queue.implementation.models.QueueMessage,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  - "com.azure.storage.queue.implementation.MessagesImpl.MessagesService.peek(java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  langs:
  - "java"
  name: "MessagesImpl.MessagesService"
  nameWithType: "MessagesImpl.MessagesService"
  fullName: "com.azure.storage.queue.implementation.MessagesImpl.MessagesService"
  type: "Interface"
  package: "com.azure.storage.queue.implementation"
  summary: "The interface defining all the services for AzureQueueStorageMessages to be used by the proxy service to perform REST calls."
  syntax:
    content: "private static interface MessagesImpl.MessagesService"
- uid: "com.azure.storage.queue.implementation.MessagesImpl.MessagesService.clear(java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  id: "clear(java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  parent: "com.azure.storage.queue.implementation.MessagesImpl.MessagesService"
  langs:
  - "java"
  name: "clear(String queueName, String url, Integer timeout, String version, String requestId, Context context)"
  nameWithType: "MessagesImpl.MessagesService.clear(String queueName, String url, Integer timeout, String version, String requestId, Context context)"
  fullName: "com.azure.storage.queue.implementation.MessagesImpl.MessagesService.clear(String queueName, String url, Integer timeout, String version, String requestId, Context context)"
  overload: "com.azure.storage.queue.implementation.MessagesImpl.MessagesService.clear*"
  type: "Method"
  package: "com.azure.storage.queue.implementation"
  syntax:
    content: "public abstract Mono<MessagesClearResponse> clear(String queueName, String url, Integer timeout, String version, String requestId, Context context)"
    parameters:
    - id: "queueName"
      type: "java.lang.String"
    - id: "url"
      type: "java.lang.String"
    - id: "timeout"
      type: "java.lang.Integer"
    - id: "version"
      type: "java.lang.String"
    - id: "requestId"
      type: "java.lang.String"
    - id: "context"
      type: "com.azure.core.util.Context"
    return:
      type: "reactor.core.publisher.Mono<com.azure.storage.queue.implementation.models.MessagesClearResponse>"
- uid: "com.azure.storage.queue.implementation.MessagesImpl.MessagesService.dequeue(java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  id: "dequeue(java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  parent: "com.azure.storage.queue.implementation.MessagesImpl.MessagesService"
  langs:
  - "java"
  name: "dequeue(String queueName, String url, Integer numberOfMessages, Integer visibilitytimeout, Integer timeout, String version, String requestId, Context context)"
  nameWithType: "MessagesImpl.MessagesService.dequeue(String queueName, String url, Integer numberOfMessages, Integer visibilitytimeout, Integer timeout, String version, String requestId, Context context)"
  fullName: "com.azure.storage.queue.implementation.MessagesImpl.MessagesService.dequeue(String queueName, String url, Integer numberOfMessages, Integer visibilitytimeout, Integer timeout, String version, String requestId, Context context)"
  overload: "com.azure.storage.queue.implementation.MessagesImpl.MessagesService.dequeue*"
  type: "Method"
  package: "com.azure.storage.queue.implementation"
  syntax:
    content: "public abstract Mono<MessagesDequeueResponse> dequeue(String queueName, String url, Integer numberOfMessages, Integer visibilitytimeout, Integer timeout, String version, String requestId, Context context)"
    parameters:
    - id: "queueName"
      type: "java.lang.String"
    - id: "url"
      type: "java.lang.String"
    - id: "numberOfMessages"
      type: "java.lang.Integer"
    - id: "visibilitytimeout"
      type: "java.lang.Integer"
    - id: "timeout"
      type: "java.lang.Integer"
    - id: "version"
      type: "java.lang.String"
    - id: "requestId"
      type: "java.lang.String"
    - id: "context"
      type: "com.azure.core.util.Context"
    return:
      type: "reactor.core.publisher.Mono<com.azure.storage.queue.implementation.models.MessagesDequeueResponse>"
- uid: "com.azure.storage.queue.implementation.MessagesImpl.MessagesService.enqueue(java.lang.String,java.lang.String,com.azure.storage.queue.implementation.models.QueueMessage,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  id: "enqueue(java.lang.String,java.lang.String,com.azure.storage.queue.implementation.models.QueueMessage,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  parent: "com.azure.storage.queue.implementation.MessagesImpl.MessagesService"
  langs:
  - "java"
  name: "enqueue(String queueName, String url, QueueMessage queueMessage, Integer visibilitytimeout, Integer messageTimeToLive, Integer timeout, String version, String requestId, Context context)"
  nameWithType: "MessagesImpl.MessagesService.enqueue(String queueName, String url, QueueMessage queueMessage, Integer visibilitytimeout, Integer messageTimeToLive, Integer timeout, String version, String requestId, Context context)"
  fullName: "com.azure.storage.queue.implementation.MessagesImpl.MessagesService.enqueue(String queueName, String url, QueueMessage queueMessage, Integer visibilitytimeout, Integer messageTimeToLive, Integer timeout, String version, String requestId, Context context)"
  overload: "com.azure.storage.queue.implementation.MessagesImpl.MessagesService.enqueue*"
  type: "Method"
  package: "com.azure.storage.queue.implementation"
  syntax:
    content: "public abstract Mono<MessagesEnqueueResponse> enqueue(String queueName, String url, QueueMessage queueMessage, Integer visibilitytimeout, Integer messageTimeToLive, Integer timeout, String version, String requestId, Context context)"
    parameters:
    - id: "queueName"
      type: "java.lang.String"
    - id: "url"
      type: "java.lang.String"
    - id: "queueMessage"
      type: "com.azure.storage.queue.implementation.models.QueueMessage"
    - id: "visibilitytimeout"
      type: "java.lang.Integer"
    - id: "messageTimeToLive"
      type: "java.lang.Integer"
    - id: "timeout"
      type: "java.lang.Integer"
    - id: "version"
      type: "java.lang.String"
    - id: "requestId"
      type: "java.lang.String"
    - id: "context"
      type: "com.azure.core.util.Context"
    return:
      type: "reactor.core.publisher.Mono<com.azure.storage.queue.implementation.models.MessagesEnqueueResponse>"
- uid: "com.azure.storage.queue.implementation.MessagesImpl.MessagesService.peek(java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  id: "peek(java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  parent: "com.azure.storage.queue.implementation.MessagesImpl.MessagesService"
  langs:
  - "java"
  name: "peek(String queueName, String url, Integer numberOfMessages, Integer timeout, String version, String requestId, String peekonly, Context context)"
  nameWithType: "MessagesImpl.MessagesService.peek(String queueName, String url, Integer numberOfMessages, Integer timeout, String version, String requestId, String peekonly, Context context)"
  fullName: "com.azure.storage.queue.implementation.MessagesImpl.MessagesService.peek(String queueName, String url, Integer numberOfMessages, Integer timeout, String version, String requestId, String peekonly, Context context)"
  overload: "com.azure.storage.queue.implementation.MessagesImpl.MessagesService.peek*"
  type: "Method"
  package: "com.azure.storage.queue.implementation"
  syntax:
    content: "public abstract Mono<MessagesPeekResponse> peek(String queueName, String url, Integer numberOfMessages, Integer timeout, String version, String requestId, String peekonly, Context context)"
    parameters:
    - id: "queueName"
      type: "java.lang.String"
    - id: "url"
      type: "java.lang.String"
    - id: "numberOfMessages"
      type: "java.lang.Integer"
    - id: "timeout"
      type: "java.lang.Integer"
    - id: "version"
      type: "java.lang.String"
    - id: "requestId"
      type: "java.lang.String"
    - id: "peekonly"
      type: "java.lang.String"
    - id: "context"
      type: "com.azure.core.util.Context"
    return:
      type: "reactor.core.publisher.Mono<com.azure.storage.queue.implementation.models.MessagesPeekResponse>"
references:
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "java.lang.Integer"
  spec.java:
  - uid: "java.lang.Integer"
    name: "Integer"
    fullName: "java.lang.Integer"
- uid: "com.azure.core.util.Context"
  spec.java:
  - uid: "com.azure.core.util.Context"
    name: "Context"
    fullName: "com.azure.core.util.Context"
- uid: "reactor.core.publisher.Mono<com.azure.storage.queue.implementation.models.MessagesDequeueResponse>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.storage.queue.implementation.models.MessagesDequeueResponse"
    name: "MessagesDequeueResponse"
    fullName: "com.azure.storage.queue.implementation.models.MessagesDequeueResponse"
  - name: ">"
    fullName: ">"
- uid: "com.azure.storage.queue.implementation.MessagesImpl.MessagesService.dequeue*"
  name: "dequeue"
  nameWithType: "MessagesImpl.MessagesService.dequeue"
  fullName: "com.azure.storage.queue.implementation.MessagesImpl.MessagesService.dequeue"
  package: "com.azure.storage.queue.implementation"
- uid: "reactor.core.publisher.Mono<com.azure.storage.queue.implementation.models.MessagesClearResponse>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.storage.queue.implementation.models.MessagesClearResponse"
    name: "MessagesClearResponse"
    fullName: "com.azure.storage.queue.implementation.models.MessagesClearResponse"
  - name: ">"
    fullName: ">"
- uid: "com.azure.storage.queue.implementation.MessagesImpl.MessagesService.clear*"
  name: "clear"
  nameWithType: "MessagesImpl.MessagesService.clear"
  fullName: "com.azure.storage.queue.implementation.MessagesImpl.MessagesService.clear"
  package: "com.azure.storage.queue.implementation"
- uid: "com.azure.storage.queue.implementation.models.QueueMessage"
  name: "QueueMessage"
  nameWithType: "QueueMessage"
  fullName: "com.azure.storage.queue.implementation.models.QueueMessage"
- uid: "reactor.core.publisher.Mono<com.azure.storage.queue.implementation.models.MessagesEnqueueResponse>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.storage.queue.implementation.models.MessagesEnqueueResponse"
    name: "MessagesEnqueueResponse"
    fullName: "com.azure.storage.queue.implementation.models.MessagesEnqueueResponse"
  - name: ">"
    fullName: ">"
- uid: "com.azure.storage.queue.implementation.MessagesImpl.MessagesService.enqueue*"
  name: "enqueue"
  nameWithType: "MessagesImpl.MessagesService.enqueue"
  fullName: "com.azure.storage.queue.implementation.MessagesImpl.MessagesService.enqueue"
  package: "com.azure.storage.queue.implementation"
- uid: "reactor.core.publisher.Mono<com.azure.storage.queue.implementation.models.MessagesPeekResponse>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.storage.queue.implementation.models.MessagesPeekResponse"
    name: "MessagesPeekResponse"
    fullName: "com.azure.storage.queue.implementation.models.MessagesPeekResponse"
  - name: ">"
    fullName: ">"
- uid: "com.azure.storage.queue.implementation.MessagesImpl.MessagesService.peek*"
  name: "peek"
  nameWithType: "MessagesImpl.MessagesService.peek"
  fullName: "com.azure.storage.queue.implementation.MessagesImpl.MessagesService.peek"
  package: "com.azure.storage.queue.implementation"
- uid: "reactor.core.publisher.Mono"
  name: "Mono"
  nameWithType: "Mono"
  fullName: "reactor.core.publisher.Mono"
- uid: "com.azure.storage.queue.implementation.models.MessagesDequeueResponse"
  name: "MessagesDequeueResponse"
  nameWithType: "MessagesDequeueResponse"
  fullName: "com.azure.storage.queue.implementation.models.MessagesDequeueResponse"
- uid: "com.azure.storage.queue.implementation.models.MessagesClearResponse"
  name: "MessagesClearResponse"
  nameWithType: "MessagesClearResponse"
  fullName: "com.azure.storage.queue.implementation.models.MessagesClearResponse"
- uid: "com.azure.storage.queue.implementation.models.MessagesEnqueueResponse"
  name: "MessagesEnqueueResponse"
  nameWithType: "MessagesEnqueueResponse"
  fullName: "com.azure.storage.queue.implementation.models.MessagesEnqueueResponse"
- uid: "com.azure.storage.queue.implementation.models.MessagesPeekResponse"
  name: "MessagesPeekResponse"
  nameWithType: "MessagesPeekResponse"
  fullName: "com.azure.storage.queue.implementation.models.MessagesPeekResponse"
