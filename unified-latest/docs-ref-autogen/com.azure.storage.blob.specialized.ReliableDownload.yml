### YamlMime:ManagedReference
items:
- uid: "com.azure.storage.blob.specialized.ReliableDownload"
  id: "ReliableDownload"
  parent: "com.azure.storage.blob.specialized"
  children:
  - "com.azure.storage.blob.specialized.ReliableDownload.ReliableDownload(com.azure.storage.blob.implementation.models.BlobsDownloadResponse,com.azure.storage.blob.models.DownloadRetryOptions,com.azure.storage.blob.HttpGetterInfo,java.util.function.Function<com.azure.storage.blob.HttpGetterInfo,reactor.core.publisher.Mono<com.azure.storage.blob.specialized.ReliableDownload>>)"
  - "com.azure.storage.blob.specialized.ReliableDownload.getDeserializedHeaders()"
  - "com.azure.storage.blob.specialized.ReliableDownload.getHeaders()"
  - "com.azure.storage.blob.specialized.ReliableDownload.getRequest()"
  - "com.azure.storage.blob.specialized.ReliableDownload.getStatusCode()"
  - "com.azure.storage.blob.specialized.ReliableDownload.getValue()"
  langs:
  - "java"
  name: "ReliableDownload"
  nameWithType: "ReliableDownload"
  fullName: "com.azure.storage.blob.specialized.ReliableDownload"
  type: "Class"
  package: "com.azure.storage.blob.specialized"
  summary: "This class automatically retries failed reads from a blob download stream.\n\nFailed downloads are automatically retried based on the <xref uid=\"com.azure.storage.blob.models.DownloadRetryOptions\" data-throw-if-not-resolved=\"false\">download options</xref>, the retry will be resumed from the point where the download failed. This allows for the download to be consumed as one continuous stream."
  syntax:
    content: "final class ReliableDownload"
  inheritance:
  - "java.lang.Object"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.azure.storage.blob.specialized.ReliableDownload.ReliableDownload(com.azure.storage.blob.implementation.models.BlobsDownloadResponse,com.azure.storage.blob.models.DownloadRetryOptions,com.azure.storage.blob.HttpGetterInfo,java.util.function.Function<com.azure.storage.blob.HttpGetterInfo,reactor.core.publisher.Mono<com.azure.storage.blob.specialized.ReliableDownload>>)"
  id: "ReliableDownload(com.azure.storage.blob.implementation.models.BlobsDownloadResponse,com.azure.storage.blob.models.DownloadRetryOptions,com.azure.storage.blob.HttpGetterInfo,java.util.function.Function<com.azure.storage.blob.HttpGetterInfo,reactor.core.publisher.Mono<com.azure.storage.blob.specialized.ReliableDownload>>)"
  parent: "com.azure.storage.blob.specialized.ReliableDownload"
  langs:
  - "java"
  name: "ReliableDownload(BlobsDownloadResponse rawResponse, DownloadRetryOptions options, HttpGetterInfo info, Function<HttpGetterInfo,Mono<ReliableDownload>> getter)"
  nameWithType: "ReliableDownload.ReliableDownload(BlobsDownloadResponse rawResponse, DownloadRetryOptions options, HttpGetterInfo info, Function<HttpGetterInfo,Mono<ReliableDownload>> getter)"
  fullName: "com.azure.storage.blob.specialized.ReliableDownload.ReliableDownload(BlobsDownloadResponse rawResponse, DownloadRetryOptions options, HttpGetterInfo info, Function<HttpGetterInfo,Mono<ReliableDownload>> getter)"
  overload: "com.azure.storage.blob.specialized.ReliableDownload.ReliableDownload*"
  type: "Constructor"
  package: "com.azure.storage.blob.specialized"
  syntax:
    content: " ReliableDownload(BlobsDownloadResponse rawResponse, DownloadRetryOptions options, HttpGetterInfo info, Function<HttpGetterInfo,Mono<ReliableDownload>> getter)"
    parameters:
    - id: "rawResponse"
      type: "com.azure.storage.blob.implementation.models.BlobsDownloadResponse"
    - id: "options"
      type: "com.azure.storage.blob.models.DownloadRetryOptions"
    - id: "info"
      type: "com.azure.storage.blob.HttpGetterInfo"
    - id: "getter"
      type: "java.util.function.Function<com.azure.storage.blob.HttpGetterInfo,reactor.core.publisher.Mono<com.azure.storage.blob.specialized.ReliableDownload>>"
- uid: "com.azure.storage.blob.specialized.ReliableDownload.getDeserializedHeaders()"
  id: "getDeserializedHeaders()"
  parent: "com.azure.storage.blob.specialized.ReliableDownload"
  langs:
  - "java"
  name: "getDeserializedHeaders()"
  nameWithType: "ReliableDownload.getDeserializedHeaders()"
  fullName: "com.azure.storage.blob.specialized.ReliableDownload.getDeserializedHeaders()"
  overload: "com.azure.storage.blob.specialized.ReliableDownload.getDeserializedHeaders*"
  type: "Method"
  package: "com.azure.storage.blob.specialized"
  syntax:
    content: " BlobDownloadHeaders getDeserializedHeaders()"
    return:
      type: "com.azure.storage.blob.models.BlobDownloadHeaders"
- uid: "com.azure.storage.blob.specialized.ReliableDownload.getHeaders()"
  id: "getHeaders()"
  parent: "com.azure.storage.blob.specialized.ReliableDownload"
  langs:
  - "java"
  name: "getHeaders()"
  nameWithType: "ReliableDownload.getHeaders()"
  fullName: "com.azure.storage.blob.specialized.ReliableDownload.getHeaders()"
  overload: "com.azure.storage.blob.specialized.ReliableDownload.getHeaders*"
  type: "Method"
  package: "com.azure.storage.blob.specialized"
  syntax:
    content: " HttpHeaders getHeaders()"
    return:
      type: "com.azure.core.http.HttpHeaders"
- uid: "com.azure.storage.blob.specialized.ReliableDownload.getRequest()"
  id: "getRequest()"
  parent: "com.azure.storage.blob.specialized.ReliableDownload"
  langs:
  - "java"
  name: "getRequest()"
  nameWithType: "ReliableDownload.getRequest()"
  fullName: "com.azure.storage.blob.specialized.ReliableDownload.getRequest()"
  overload: "com.azure.storage.blob.specialized.ReliableDownload.getRequest*"
  type: "Method"
  package: "com.azure.storage.blob.specialized"
  syntax:
    content: " HttpRequest getRequest()"
    return:
      type: "com.azure.core.http.HttpRequest"
- uid: "com.azure.storage.blob.specialized.ReliableDownload.getStatusCode()"
  id: "getStatusCode()"
  parent: "com.azure.storage.blob.specialized.ReliableDownload"
  langs:
  - "java"
  name: "getStatusCode()"
  nameWithType: "ReliableDownload.getStatusCode()"
  fullName: "com.azure.storage.blob.specialized.ReliableDownload.getStatusCode()"
  overload: "com.azure.storage.blob.specialized.ReliableDownload.getStatusCode*"
  type: "Method"
  package: "com.azure.storage.blob.specialized"
  syntax:
    content: " int getStatusCode()"
    return:
      type: "int"
- uid: "com.azure.storage.blob.specialized.ReliableDownload.getValue()"
  id: "getValue()"
  parent: "com.azure.storage.blob.specialized.ReliableDownload"
  langs:
  - "java"
  name: "getValue()"
  nameWithType: "ReliableDownload.getValue()"
  fullName: "com.azure.storage.blob.specialized.ReliableDownload.getValue()"
  overload: "com.azure.storage.blob.specialized.ReliableDownload.getValue*"
  type: "Method"
  package: "com.azure.storage.blob.specialized"
  syntax:
    content: " Flux<ByteBuffer> getValue()"
    return:
      type: "reactor.core.publisher.Flux<java.nio.ByteBuffer>"
references:
- uid: "com.azure.storage.blob.implementation.models.BlobsDownloadResponse"
  name: "BlobsDownloadResponse"
  nameWithType: "BlobsDownloadResponse"
  fullName: "com.azure.storage.blob.implementation.models.BlobsDownloadResponse"
- uid: "com.azure.storage.blob.models.DownloadRetryOptions"
  name: "DownloadRetryOptions"
  nameWithType: "DownloadRetryOptions"
  fullName: "com.azure.storage.blob.models.DownloadRetryOptions"
- uid: "com.azure.storage.blob.HttpGetterInfo"
  name: "HttpGetterInfo"
  nameWithType: "HttpGetterInfo"
  fullName: "com.azure.storage.blob.HttpGetterInfo"
- uid: "java.util.function.Function<com.azure.storage.blob.HttpGetterInfo,reactor.core.publisher.Mono<com.azure.storage.blob.specialized.ReliableDownload>>"
  spec.java:
  - uid: "java.util.function.Function"
    name: "Function"
    fullName: "java.util.function.Function"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.storage.blob.HttpGetterInfo"
    name: "HttpGetterInfo"
    fullName: "com.azure.storage.blob.HttpGetterInfo"
  - name: ","
    fullName: ","
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.storage.blob.specialized.ReliableDownload"
    name: "ReliableDownload"
    fullName: "com.azure.storage.blob.specialized.ReliableDownload"
  - name: ">"
    fullName: ">"
  - name: ">"
    fullName: ">"
- uid: "com.azure.storage.blob.specialized.ReliableDownload.ReliableDownload*"
  name: "ReliableDownload"
  nameWithType: "ReliableDownload.ReliableDownload"
  fullName: "com.azure.storage.blob.specialized.ReliableDownload.ReliableDownload"
  package: "com.azure.storage.blob.specialized"
- uid: "com.azure.core.http.HttpRequest"
  spec.java:
  - uid: "com.azure.core.http.HttpRequest"
    name: "HttpRequest"
    fullName: "com.azure.core.http.HttpRequest"
- uid: "com.azure.storage.blob.specialized.ReliableDownload.getRequest*"
  name: "getRequest"
  nameWithType: "ReliableDownload.getRequest"
  fullName: "com.azure.storage.blob.specialized.ReliableDownload.getRequest"
  package: "com.azure.storage.blob.specialized"
- uid: "int"
  spec.java:
  - uid: "int"
    name: "int"
    fullName: "int"
- uid: "com.azure.storage.blob.specialized.ReliableDownload.getStatusCode*"
  name: "getStatusCode"
  nameWithType: "ReliableDownload.getStatusCode"
  fullName: "com.azure.storage.blob.specialized.ReliableDownload.getStatusCode"
  package: "com.azure.storage.blob.specialized"
- uid: "com.azure.core.http.HttpHeaders"
  spec.java:
  - uid: "com.azure.core.http.HttpHeaders"
    name: "HttpHeaders"
    fullName: "com.azure.core.http.HttpHeaders"
- uid: "com.azure.storage.blob.specialized.ReliableDownload.getHeaders*"
  name: "getHeaders"
  nameWithType: "ReliableDownload.getHeaders"
  fullName: "com.azure.storage.blob.specialized.ReliableDownload.getHeaders"
  package: "com.azure.storage.blob.specialized"
- uid: "com.azure.storage.blob.models.BlobDownloadHeaders"
  name: "BlobDownloadHeaders"
  nameWithType: "BlobDownloadHeaders"
  fullName: "com.azure.storage.blob.models.BlobDownloadHeaders"
- uid: "com.azure.storage.blob.specialized.ReliableDownload.getDeserializedHeaders*"
  name: "getDeserializedHeaders"
  nameWithType: "ReliableDownload.getDeserializedHeaders"
  fullName: "com.azure.storage.blob.specialized.ReliableDownload.getDeserializedHeaders"
  package: "com.azure.storage.blob.specialized"
- uid: "reactor.core.publisher.Flux<java.nio.ByteBuffer>"
  spec.java:
  - uid: "reactor.core.publisher.Flux"
    name: "Flux"
    fullName: "reactor.core.publisher.Flux"
  - name: "<"
    fullName: "<"
  - uid: "java.nio.ByteBuffer"
    name: "ByteBuffer"
    fullName: "java.nio.ByteBuffer"
  - name: ">"
    fullName: ">"
- uid: "com.azure.storage.blob.specialized.ReliableDownload.getValue*"
  name: "getValue"
  nameWithType: "ReliableDownload.getValue"
  fullName: "com.azure.storage.blob.specialized.ReliableDownload.getValue"
  package: "com.azure.storage.blob.specialized"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "com.azure.storage.blob.HttpGetterInfo,reactor.core.publisher.Mono"
  name: "HttpGetterInfo,Mono"
  nameWithType: "HttpGetterInfo,Mono"
  fullName: "com.azure.storage.blob.HttpGetterInfo,reactor.core.publisher.Mono"
- uid: "java.util.function.Function"
  name: "Function"
  nameWithType: "Function"
  fullName: "java.util.function.Function"
- uid: "reactor.core.publisher.Flux"
  name: "Flux"
  nameWithType: "Flux"
  fullName: "reactor.core.publisher.Flux"
- uid: "java.nio.ByteBuffer"
  name: "ByteBuffer"
  nameWithType: "ByteBuffer"
  fullName: "java.nio.ByteBuffer"
