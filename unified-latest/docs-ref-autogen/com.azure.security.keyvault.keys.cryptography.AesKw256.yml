### YamlMime:ManagedReference
items:
- uid: "com.azure.security.keyvault.keys.cryptography.AesKw256"
  id: "AesKw256"
  parent: "com.azure.security.keyvault.keys.cryptography"
  children:
  - "com.azure.security.keyvault.keys.cryptography.AesKw256.ALGORITHM_NAME"
  - "com.azure.security.keyvault.keys.cryptography.AesKw256.AesKw256()"
  - "com.azure.security.keyvault.keys.cryptography.AesKw256.KEY_SIZE_IN_BYTES"
  - "com.azure.security.keyvault.keys.cryptography.AesKw256.createDecryptor(byte[],byte[],java.security.Provider)"
  - "com.azure.security.keyvault.keys.cryptography.AesKw256.createEncryptor(byte[],byte[],java.security.Provider)"
  langs:
  - "java"
  name: "AesKw256"
  nameWithType: "AesKw256"
  fullName: "com.azure.security.keyvault.keys.cryptography.AesKw256"
  type: "Class"
  package: "com.azure.security.keyvault.keys.cryptography"
  syntax:
    content: " class AesKw256 extends AesKw"
  inheritance:
  - "java.lang.Object"
  - "com.azure.security.keyvault.keys.cryptography.Algorithm"
  - "com.azure.security.keyvault.keys.cryptography.LocalKeyWrapAlgorithm"
  - "com.azure.security.keyvault.keys.cryptography.AesKw"
  inheritedMembers:
  - "com.azure.security.keyvault.keys.cryptography.AesKw.createDecryptor(byte[])"
  - "com.azure.security.keyvault.keys.cryptography.AesKw.createDecryptor(byte[],byte[])"
  - "com.azure.security.keyvault.keys.cryptography.AesKw.createDecryptor(byte[],byte[],java.security.Provider)"
  - "com.azure.security.keyvault.keys.cryptography.AesKw.createDecryptor(byte[],java.security.Provider)"
  - "com.azure.security.keyvault.keys.cryptography.AesKw.createEncryptor(byte[])"
  - "com.azure.security.keyvault.keys.cryptography.AesKw.createEncryptor(byte[],byte[])"
  - "com.azure.security.keyvault.keys.cryptography.AesKw.createEncryptor(byte[],byte[],java.security.Provider)"
  - "com.azure.security.keyvault.keys.cryptography.AesKw.createEncryptor(byte[],java.security.Provider)"
  - "com.azure.security.keyvault.keys.cryptography.Algorithm.getName()"
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.azure.security.keyvault.keys.cryptography.AesKw256.ALGORITHM_NAME"
  id: "ALGORITHM_NAME"
  parent: "com.azure.security.keyvault.keys.cryptography.AesKw256"
  langs:
  - "java"
  name: "ALGORITHM_NAME"
  nameWithType: "AesKw256.ALGORITHM_NAME"
  fullName: "com.azure.security.keyvault.keys.cryptography.AesKw256.ALGORITHM_NAME"
  type: "Field"
  package: "com.azure.security.keyvault.keys.cryptography"
  syntax:
    content: "public static final String ALGORITHM_NAME"
    return:
      type: "java.lang.String"
- uid: "com.azure.security.keyvault.keys.cryptography.AesKw256.AesKw256()"
  id: "AesKw256()"
  parent: "com.azure.security.keyvault.keys.cryptography.AesKw256"
  langs:
  - "java"
  name: "AesKw256()"
  nameWithType: "AesKw256.AesKw256()"
  fullName: "com.azure.security.keyvault.keys.cryptography.AesKw256.AesKw256()"
  overload: "com.azure.security.keyvault.keys.cryptography.AesKw256.AesKw256*"
  type: "Constructor"
  package: "com.azure.security.keyvault.keys.cryptography"
  syntax:
    content: " AesKw256()"
- uid: "com.azure.security.keyvault.keys.cryptography.AesKw256.KEY_SIZE_IN_BYTES"
  id: "KEY_SIZE_IN_BYTES"
  parent: "com.azure.security.keyvault.keys.cryptography.AesKw256"
  langs:
  - "java"
  name: "KEY_SIZE_IN_BYTES"
  nameWithType: "AesKw256.KEY_SIZE_IN_BYTES"
  fullName: "com.azure.security.keyvault.keys.cryptography.AesKw256.KEY_SIZE_IN_BYTES"
  type: "Field"
  package: "com.azure.security.keyvault.keys.cryptography"
  syntax:
    content: "static final int KEY_SIZE_IN_BYTES"
    return:
      type: "int"
- uid: "com.azure.security.keyvault.keys.cryptography.AesKw256.createDecryptor(byte[],byte[],java.security.Provider)"
  id: "createDecryptor(byte[],byte[],java.security.Provider)"
  parent: "com.azure.security.keyvault.keys.cryptography.AesKw256"
  langs:
  - "java"
  name: "createDecryptor(byte[] key, byte[] iv, Provider provider)"
  nameWithType: "AesKw256.createDecryptor(byte[] key, byte[] iv, Provider provider)"
  fullName: "com.azure.security.keyvault.keys.cryptography.AesKw256.createDecryptor(byte[] key, byte[] iv, Provider provider)"
  overload: "com.azure.security.keyvault.keys.cryptography.AesKw256.createDecryptor*"
  type: "Method"
  package: "com.azure.security.keyvault.keys.cryptography"
  syntax:
    content: "public ICryptoTransform createDecryptor(byte[] key, byte[] iv, Provider provider)"
    parameters:
    - id: "key"
      type: "byte[]"
    - id: "iv"
      type: "byte[]"
    - id: "provider"
      type: "java.security.Provider"
    return:
      type: "com.azure.security.keyvault.keys.cryptography.ICryptoTransform"
  exceptions:
  - type: "java.security.InvalidKeyException"
  - type: "java.security.NoSuchAlgorithmException"
  - type: "javax.crypto.NoSuchPaddingException"
  - type: "java.security.InvalidAlgorithmParameterException"
- uid: "com.azure.security.keyvault.keys.cryptography.AesKw256.createEncryptor(byte[],byte[],java.security.Provider)"
  id: "createEncryptor(byte[],byte[],java.security.Provider)"
  parent: "com.azure.security.keyvault.keys.cryptography.AesKw256"
  langs:
  - "java"
  name: "createEncryptor(byte[] key, byte[] iv, Provider provider)"
  nameWithType: "AesKw256.createEncryptor(byte[] key, byte[] iv, Provider provider)"
  fullName: "com.azure.security.keyvault.keys.cryptography.AesKw256.createEncryptor(byte[] key, byte[] iv, Provider provider)"
  overload: "com.azure.security.keyvault.keys.cryptography.AesKw256.createEncryptor*"
  type: "Method"
  package: "com.azure.security.keyvault.keys.cryptography"
  syntax:
    content: "public ICryptoTransform createEncryptor(byte[] key, byte[] iv, Provider provider)"
    parameters:
    - id: "key"
      type: "byte[]"
    - id: "iv"
      type: "byte[]"
    - id: "provider"
      type: "java.security.Provider"
    return:
      type: "com.azure.security.keyvault.keys.cryptography.ICryptoTransform"
  exceptions:
  - type: "java.security.InvalidKeyException"
  - type: "java.security.NoSuchAlgorithmException"
  - type: "javax.crypto.NoSuchPaddingException"
  - type: "java.security.InvalidAlgorithmParameterException"
references:
- uid: "com.azure.security.keyvault.keys.cryptography.AesKw256.AesKw256*"
  name: "AesKw256"
  nameWithType: "AesKw256.AesKw256"
  fullName: "com.azure.security.keyvault.keys.cryptography.AesKw256.AesKw256"
  package: "com.azure.security.keyvault.keys.cryptography"
- uid: "java.security.InvalidKeyException"
  spec.java:
  - uid: "java.security.InvalidKeyException"
    name: "InvalidKeyException"
    fullName: "java.security.InvalidKeyException"
- uid: "java.security.NoSuchAlgorithmException"
  spec.java:
  - uid: "java.security.NoSuchAlgorithmException"
    name: "NoSuchAlgorithmException"
    fullName: "java.security.NoSuchAlgorithmException"
- uid: "javax.crypto.NoSuchPaddingException"
  spec.java:
  - uid: "javax.crypto.NoSuchPaddingException"
    name: "NoSuchPaddingException"
    fullName: "javax.crypto.NoSuchPaddingException"
- uid: "java.security.InvalidAlgorithmParameterException"
  spec.java:
  - uid: "java.security.InvalidAlgorithmParameterException"
    name: "InvalidAlgorithmParameterException"
    fullName: "java.security.InvalidAlgorithmParameterException"
- uid: "byte[]"
  spec.java:
  - uid: "byte"
    name: "byte"
    fullName: "byte"
  - name: "[]"
    fullName: "[]"
- uid: "java.security.Provider"
  spec.java:
  - uid: "java.security.Provider"
    name: "Provider"
    fullName: "java.security.Provider"
- uid: "com.azure.security.keyvault.keys.cryptography.ICryptoTransform"
  name: "ICryptoTransform"
  nameWithType: "ICryptoTransform"
  fullName: "com.azure.security.keyvault.keys.cryptography.ICryptoTransform"
- uid: "com.azure.security.keyvault.keys.cryptography.AesKw256.createEncryptor*"
  name: "createEncryptor"
  nameWithType: "AesKw256.createEncryptor"
  fullName: "com.azure.security.keyvault.keys.cryptography.AesKw256.createEncryptor"
  package: "com.azure.security.keyvault.keys.cryptography"
- uid: "com.azure.security.keyvault.keys.cryptography.AesKw256.createDecryptor*"
  name: "createDecryptor"
  nameWithType: "AesKw256.createDecryptor"
  fullName: "com.azure.security.keyvault.keys.cryptography.AesKw256.createDecryptor"
  package: "com.azure.security.keyvault.keys.cryptography"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "int"
  spec.java:
  - uid: "int"
    name: "int"
    fullName: "int"
- uid: "com.azure.security.keyvault.keys.cryptography.AesKw"
  name: "AesKw"
  nameWithType: "AesKw"
  fullName: "com.azure.security.keyvault.keys.cryptography.AesKw"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "com.azure.security.keyvault.keys.cryptography.AesKw.createEncryptor(byte[],byte[])"
  name: "AesKw.createEncryptor(byte[],byte[])"
  nameWithType: "AesKw.createEncryptor(byte[],byte[])"
  fullName: "com.azure.security.keyvault.keys.cryptography.AesKw.createEncryptor(byte[],byte[])"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "com.azure.security.keyvault.keys.cryptography.AesKw.createDecryptor(byte[],java.security.Provider)"
  name: "AesKw.createDecryptor(byte[],Provider)"
  nameWithType: "AesKw.createDecryptor(byte[],Provider)"
  fullName: "com.azure.security.keyvault.keys.cryptography.AesKw.createDecryptor(byte[],java.security.Provider)"
- uid: "com.azure.security.keyvault.keys.cryptography.AesKw.createDecryptor(byte[],byte[])"
  name: "AesKw.createDecryptor(byte[],byte[])"
  nameWithType: "AesKw.createDecryptor(byte[],byte[])"
  fullName: "com.azure.security.keyvault.keys.cryptography.AesKw.createDecryptor(byte[],byte[])"
- uid: "com.azure.security.keyvault.keys.cryptography.AesKw.createEncryptor(byte[],byte[],java.security.Provider)"
  name: "AesKw.createEncryptor(byte[],byte[],Provider)"
  nameWithType: "AesKw.createEncryptor(byte[],byte[],Provider)"
  fullName: "com.azure.security.keyvault.keys.cryptography.AesKw.createEncryptor(byte[],byte[],java.security.Provider)"
- uid: "com.azure.security.keyvault.keys.cryptography.AesKw.createDecryptor(byte[],byte[],java.security.Provider)"
  name: "AesKw.createDecryptor(byte[],byte[],Provider)"
  nameWithType: "AesKw.createDecryptor(byte[],byte[],Provider)"
  fullName: "com.azure.security.keyvault.keys.cryptography.AesKw.createDecryptor(byte[],byte[],java.security.Provider)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "com.azure.security.keyvault.keys.cryptography.AesKw.createEncryptor(byte[])"
  name: "AesKw.createEncryptor(byte[])"
  nameWithType: "AesKw.createEncryptor(byte[])"
  fullName: "com.azure.security.keyvault.keys.cryptography.AesKw.createEncryptor(byte[])"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "com.azure.security.keyvault.keys.cryptography.AesKw.createDecryptor(byte[])"
  name: "AesKw.createDecryptor(byte[])"
  nameWithType: "AesKw.createDecryptor(byte[])"
  fullName: "com.azure.security.keyvault.keys.cryptography.AesKw.createDecryptor(byte[])"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "com.azure.security.keyvault.keys.cryptography.Algorithm.getName()"
  name: "Algorithm.getName()"
  nameWithType: "Algorithm.getName()"
  fullName: "com.azure.security.keyvault.keys.cryptography.Algorithm.getName()"
- uid: "com.azure.security.keyvault.keys.cryptography.AesKw.createEncryptor(byte[],java.security.Provider)"
  name: "AesKw.createEncryptor(byte[],Provider)"
  nameWithType: "AesKw.createEncryptor(byte[],Provider)"
  fullName: "com.azure.security.keyvault.keys.cryptography.AesKw.createEncryptor(byte[],java.security.Provider)"
