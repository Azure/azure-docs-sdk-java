### YamlMime:ManagedReference
items:
- uid: "com.azure.data.appconfiguration.implementation.ConfigurationCredentialsPolicy"
  id: "ConfigurationCredentialsPolicy"
  parent: "com.azure.data.appconfiguration.implementation"
  children:
  - "com.azure.data.appconfiguration.implementation.ConfigurationCredentialsPolicy.ConfigurationCredentialsPolicy(com.azure.data.appconfiguration.implementation.ConfigurationClientCredentials)"
  - "com.azure.data.appconfiguration.implementation.ConfigurationCredentialsPolicy.process(com.azure.core.http.HttpPipelineCallContext,com.azure.core.http.HttpPipelineNextPolicy)"
  langs:
  - "java"
  name: "ConfigurationCredentialsPolicy"
  nameWithType: "ConfigurationCredentialsPolicy"
  fullName: "com.azure.data.appconfiguration.implementation.ConfigurationCredentialsPolicy"
  type: "Class"
  package: "com.azure.data.appconfiguration.implementation"
  summary: "A policy that authenticates requests with Azure App Configuration service. The content added by this policy is leveraged in <xref uid=\"com.azure.data.appconfiguration.implementation.ConfigurationClientCredentials\" data-throw-if-not-resolved=\"false\">ConfigurationClientCredentials</xref> to generate the correct \"Authorization\" header value."
  syntax:
    content: "public final class ConfigurationCredentialsPolicy implements HttpPipelinePolicy"
  inheritance:
  - "java.lang.Object"
  implements:
  - "com.azure.core.http.policy.HttpPipelinePolicy"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.azure.data.appconfiguration.implementation.ConfigurationCredentialsPolicy.ConfigurationCredentialsPolicy(com.azure.data.appconfiguration.implementation.ConfigurationClientCredentials)"
  id: "ConfigurationCredentialsPolicy(com.azure.data.appconfiguration.implementation.ConfigurationClientCredentials)"
  parent: "com.azure.data.appconfiguration.implementation.ConfigurationCredentialsPolicy"
  langs:
  - "java"
  name: "ConfigurationCredentialsPolicy(ConfigurationClientCredentials credentials)"
  nameWithType: "ConfigurationCredentialsPolicy.ConfigurationCredentialsPolicy(ConfigurationClientCredentials credentials)"
  fullName: "com.azure.data.appconfiguration.implementation.ConfigurationCredentialsPolicy.ConfigurationCredentialsPolicy(ConfigurationClientCredentials credentials)"
  overload: "com.azure.data.appconfiguration.implementation.ConfigurationCredentialsPolicy.ConfigurationCredentialsPolicy*"
  type: "Constructor"
  package: "com.azure.data.appconfiguration.implementation"
  summary: "Creates an instance that is able to apply a <xref uid=\"com.azure.data.appconfiguration.implementation.ConfigurationClientCredentials\" data-throw-if-not-resolved=\"false\">ConfigurationClientCredentials</xref> credential to a request in the pipeline."
  syntax:
    content: "public ConfigurationCredentialsPolicy(ConfigurationClientCredentials credentials)"
    parameters:
    - id: "credentials"
      type: "com.azure.data.appconfiguration.implementation.ConfigurationClientCredentials"
      description: "the credential information to authenticate to Azure App Configuration service"
- uid: "com.azure.data.appconfiguration.implementation.ConfigurationCredentialsPolicy.process(com.azure.core.http.HttpPipelineCallContext,com.azure.core.http.HttpPipelineNextPolicy)"
  id: "process(com.azure.core.http.HttpPipelineCallContext,com.azure.core.http.HttpPipelineNextPolicy)"
  parent: "com.azure.data.appconfiguration.implementation.ConfigurationCredentialsPolicy"
  langs:
  - "java"
  name: "process(HttpPipelineCallContext context, HttpPipelineNextPolicy next)"
  nameWithType: "ConfigurationCredentialsPolicy.process(HttpPipelineCallContext context, HttpPipelineNextPolicy next)"
  fullName: "com.azure.data.appconfiguration.implementation.ConfigurationCredentialsPolicy.process(HttpPipelineCallContext context, HttpPipelineNextPolicy next)"
  overload: "com.azure.data.appconfiguration.implementation.ConfigurationCredentialsPolicy.process*"
  type: "Method"
  package: "com.azure.data.appconfiguration.implementation"
  summary: "Adds the required headers to authenticate a request to Azure App Configuration service."
  syntax:
    content: "public Mono<HttpResponse> process(HttpPipelineCallContext context, HttpPipelineNextPolicy next)"
    parameters:
    - id: "context"
      type: "com.azure.core.http.HttpPipelineCallContext"
      description: "The request context"
    - id: "next"
      type: "com.azure.core.http.HttpPipelineNextPolicy"
      description: "The next HTTP pipeline policy to process the <code>context's</code> request after this policy\n     completes."
    return:
      type: "reactor.core.publisher.Mono<com.azure.core.http.HttpResponse>"
      description: "A <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\">Mono</xref> representing the HTTP response that will arrive asynchronously."
references:
- uid: "com.azure.data.appconfiguration.implementation.ConfigurationClientCredentials"
  name: "ConfigurationClientCredentials"
  nameWithType: "ConfigurationClientCredentials"
  fullName: "com.azure.data.appconfiguration.implementation.ConfigurationClientCredentials"
- uid: "com.azure.data.appconfiguration.implementation.ConfigurationCredentialsPolicy.ConfigurationCredentialsPolicy*"
  name: "ConfigurationCredentialsPolicy"
  nameWithType: "ConfigurationCredentialsPolicy.ConfigurationCredentialsPolicy"
  fullName: "com.azure.data.appconfiguration.implementation.ConfigurationCredentialsPolicy.ConfigurationCredentialsPolicy"
  package: "com.azure.data.appconfiguration.implementation"
- uid: "com.azure.core.http.HttpPipelineCallContext"
  spec.java:
  - uid: "com.azure.core.http.HttpPipelineCallContext"
    name: "HttpPipelineCallContext"
    fullName: "com.azure.core.http.HttpPipelineCallContext"
- uid: "com.azure.core.http.HttpPipelineNextPolicy"
  spec.java:
  - uid: "com.azure.core.http.HttpPipelineNextPolicy"
    name: "HttpPipelineNextPolicy"
    fullName: "com.azure.core.http.HttpPipelineNextPolicy"
- uid: "reactor.core.publisher.Mono<com.azure.core.http.HttpResponse>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.core.http.HttpResponse"
    name: "HttpResponse"
    fullName: "com.azure.core.http.HttpResponse"
  - name: ">"
    fullName: ">"
- uid: "com.azure.data.appconfiguration.implementation.ConfigurationCredentialsPolicy.process*"
  name: "process"
  nameWithType: "ConfigurationCredentialsPolicy.process"
  fullName: "com.azure.data.appconfiguration.implementation.ConfigurationCredentialsPolicy.process"
  package: "com.azure.data.appconfiguration.implementation"
- uid: "com.azure.core.http.policy.HttpPipelinePolicy"
  name: "HttpPipelinePolicy"
  nameWithType: "HttpPipelinePolicy"
  fullName: "com.azure.core.http.policy.HttpPipelinePolicy"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "com.azure.core.http.HttpResponse"
  name: "HttpResponse"
  nameWithType: "HttpResponse"
  fullName: "com.azure.core.http.HttpResponse"
- uid: "reactor.core.publisher.Mono"
  name: "Mono"
  nameWithType: "Mono"
  fullName: "reactor.core.publisher.Mono"
