### YamlMime:ManagedReference
items:
- uid: "com.azure.core.implementation.serializer.HttpResponseDecoder.HttpDecodedResponse"
  id: "HttpDecodedResponse"
  parent: "com.azure.core.implementation.serializer"
  children:
  - "com.azure.core.implementation.serializer.HttpResponseDecoder.HttpDecodedResponse.HttpDecodedResponse(com.azure.core.http.HttpResponse,com.azure.core.util.serializer.SerializerAdapter,com.azure.core.implementation.serializer.HttpResponseDecodeData)"
  - "com.azure.core.implementation.serializer.HttpResponseDecoder.HttpDecodedResponse.close()"
  - "com.azure.core.implementation.serializer.HttpResponseDecoder.HttpDecodedResponse.getDecodedBody()"
  - "com.azure.core.implementation.serializer.HttpResponseDecoder.HttpDecodedResponse.getDecodedHeaders()"
  - "com.azure.core.implementation.serializer.HttpResponseDecoder.HttpDecodedResponse.getDecodedType()"
  - "com.azure.core.implementation.serializer.HttpResponseDecoder.HttpDecodedResponse.getSourceResponse()"
  - "com.azure.core.implementation.serializer.HttpResponseDecoder.HttpDecodedResponse.isErrorStatus()"
  langs:
  - "java"
  name: "HttpResponseDecoder.HttpDecodedResponse"
  nameWithType: "HttpResponseDecoder.HttpDecodedResponse"
  fullName: "com.azure.core.implementation.serializer.HttpResponseDecoder.HttpDecodedResponse"
  type: "Class"
  package: "com.azure.core.implementation.serializer"
  summary: "A decorated HTTP response which has subscribable body and headers that supports lazy decoding. Subscribing to body kickoff http content reading, it's decoding then emission of decoded object. Subscribing to header kickoff header decoding and emission of decoded object."
  syntax:
    content: "public static final class HttpResponseDecoder.HttpDecodedResponse implements Closeable"
  inheritance:
  - "java.lang.Object"
  implements:
  - "java.io.Closeable"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.azure.core.implementation.serializer.HttpResponseDecoder.HttpDecodedResponse.HttpDecodedResponse(com.azure.core.http.HttpResponse,com.azure.core.util.serializer.SerializerAdapter,com.azure.core.implementation.serializer.HttpResponseDecodeData)"
  id: "HttpDecodedResponse(com.azure.core.http.HttpResponse,com.azure.core.util.serializer.SerializerAdapter,com.azure.core.implementation.serializer.HttpResponseDecodeData)"
  parent: "com.azure.core.implementation.serializer.HttpResponseDecoder.HttpDecodedResponse"
  langs:
  - "java"
  name: "HttpDecodedResponse(HttpResponse response, SerializerAdapter serializer, HttpResponseDecodeData decodeData)"
  nameWithType: "HttpResponseDecoder.HttpDecodedResponse.HttpDecodedResponse(HttpResponse response, SerializerAdapter serializer, HttpResponseDecodeData decodeData)"
  fullName: "com.azure.core.implementation.serializer.HttpResponseDecoder.HttpDecodedResponse.HttpDecodedResponse(HttpResponse response, SerializerAdapter serializer, HttpResponseDecodeData decodeData)"
  overload: "com.azure.core.implementation.serializer.HttpResponseDecoder.HttpDecodedResponse.HttpDecodedResponse*"
  type: "Constructor"
  package: "com.azure.core.implementation.serializer"
  summary: "Creates HttpDecodedResponse. Package private Ctr."
  syntax:
    content: " HttpDecodedResponse(HttpResponse response, SerializerAdapter serializer, HttpResponseDecodeData decodeData)"
    parameters:
    - id: "response"
      type: "com.azure.core.http.HttpResponse"
      description: "the publisher that emits the raw response upon subscription which needs to be decoded"
    - id: "serializer"
      type: "com.azure.core.util.serializer.SerializerAdapter"
      description: "the decoder"
    - id: "decodeData"
      type: "com.azure.core.implementation.serializer.HttpResponseDecodeData"
      description: "the necessary data required to decode a Http response"
- uid: "com.azure.core.implementation.serializer.HttpResponseDecoder.HttpDecodedResponse.close()"
  id: "close()"
  parent: "com.azure.core.implementation.serializer.HttpResponseDecoder.HttpDecodedResponse"
  langs:
  - "java"
  name: "close()"
  nameWithType: "HttpResponseDecoder.HttpDecodedResponse.close()"
  fullName: "com.azure.core.implementation.serializer.HttpResponseDecoder.HttpDecodedResponse.close()"
  overload: "com.azure.core.implementation.serializer.HttpResponseDecoder.HttpDecodedResponse.close*"
  type: "Method"
  package: "com.azure.core.implementation.serializer"
  syntax:
    content: "public void close()"
- uid: "com.azure.core.implementation.serializer.HttpResponseDecoder.HttpDecodedResponse.getDecodedBody()"
  id: "getDecodedBody()"
  parent: "com.azure.core.implementation.serializer.HttpResponseDecoder.HttpDecodedResponse"
  langs:
  - "java"
  name: "getDecodedBody()"
  nameWithType: "HttpResponseDecoder.HttpDecodedResponse.getDecodedBody()"
  fullName: "com.azure.core.implementation.serializer.HttpResponseDecoder.HttpDecodedResponse.getDecodedBody()"
  overload: "com.azure.core.implementation.serializer.HttpResponseDecoder.HttpDecodedResponse.getDecodedBody*"
  type: "Method"
  package: "com.azure.core.implementation.serializer"
  summary: "Gets the publisher when subscribed the http content gets read, decoded and emitted. `Mono.empty()` gets emitted if the content is not decodable."
  syntax:
    content: "public Mono<Object> getDecodedBody()"
    return:
      type: "reactor.core.publisher.Mono<java.lang.Object>"
      description: "publisher that emits decoded http content"
- uid: "com.azure.core.implementation.serializer.HttpResponseDecoder.HttpDecodedResponse.getDecodedHeaders()"
  id: "getDecodedHeaders()"
  parent: "com.azure.core.implementation.serializer.HttpResponseDecoder.HttpDecodedResponse"
  langs:
  - "java"
  name: "getDecodedHeaders()"
  nameWithType: "HttpResponseDecoder.HttpDecodedResponse.getDecodedHeaders()"
  fullName: "com.azure.core.implementation.serializer.HttpResponseDecoder.HttpDecodedResponse.getDecodedHeaders()"
  overload: "com.azure.core.implementation.serializer.HttpResponseDecoder.HttpDecodedResponse.getDecodedHeaders*"
  type: "Method"
  package: "com.azure.core.implementation.serializer"
  summary: "Gets the publisher when subscribed the http header gets decoded and emitted. `Mono.empty()` gets emitted if the headers are not decodable."
  syntax:
    content: "public Mono<Object> getDecodedHeaders()"
    return:
      type: "reactor.core.publisher.Mono<java.lang.Object>"
      description: "publisher that emits entity instance representing decoded http headers"
- uid: "com.azure.core.implementation.serializer.HttpResponseDecoder.HttpDecodedResponse.getDecodedType()"
  id: "getDecodedType()"
  parent: "com.azure.core.implementation.serializer.HttpResponseDecoder.HttpDecodedResponse"
  langs:
  - "java"
  name: "getDecodedType()"
  nameWithType: "HttpResponseDecoder.HttpDecodedResponse.getDecodedType()"
  fullName: "com.azure.core.implementation.serializer.HttpResponseDecoder.HttpDecodedResponse.getDecodedType()"
  overload: "com.azure.core.implementation.serializer.HttpResponseDecoder.HttpDecodedResponse.getDecodedType*"
  type: "Method"
  package: "com.azure.core.implementation.serializer"
  syntax:
    content: "public Type getDecodedType()"
    return:
      type: "java.lang.reflect.Type"
      description: "the <code>java.lang.reflect.Type</code> used to decode the response body,\n     null if the body is not decodable"
- uid: "com.azure.core.implementation.serializer.HttpResponseDecoder.HttpDecodedResponse.getSourceResponse()"
  id: "getSourceResponse()"
  parent: "com.azure.core.implementation.serializer.HttpResponseDecoder.HttpDecodedResponse"
  langs:
  - "java"
  name: "getSourceResponse()"
  nameWithType: "HttpResponseDecoder.HttpDecodedResponse.getSourceResponse()"
  fullName: "com.azure.core.implementation.serializer.HttpResponseDecoder.HttpDecodedResponse.getSourceResponse()"
  overload: "com.azure.core.implementation.serializer.HttpResponseDecoder.HttpDecodedResponse.getSourceResponse*"
  type: "Method"
  package: "com.azure.core.implementation.serializer"
  syntax:
    content: "public HttpResponse getSourceResponse()"
    return:
      type: "com.azure.core.http.HttpResponse"
      description: "get the raw response that this decoded response based on"
- uid: "com.azure.core.implementation.serializer.HttpResponseDecoder.HttpDecodedResponse.isErrorStatus()"
  id: "isErrorStatus()"
  parent: "com.azure.core.implementation.serializer.HttpResponseDecoder.HttpDecodedResponse"
  langs:
  - "java"
  name: "isErrorStatus()"
  nameWithType: "HttpResponseDecoder.HttpDecodedResponse.isErrorStatus()"
  fullName: "com.azure.core.implementation.serializer.HttpResponseDecoder.HttpDecodedResponse.isErrorStatus()"
  overload: "com.azure.core.implementation.serializer.HttpResponseDecoder.HttpDecodedResponse.isErrorStatus*"
  type: "Method"
  package: "com.azure.core.implementation.serializer"
  syntax:
    content: "public boolean isErrorStatus()"
    return:
      type: "boolean"
      description: "true if the response status code is considered as error, false otherwise"
references:
- uid: "com.azure.core.http.HttpResponse"
  name: "HttpResponse"
  nameWithType: "HttpResponse"
  fullName: "com.azure.core.http.HttpResponse"
- uid: "com.azure.core.util.serializer.SerializerAdapter"
  name: "SerializerAdapter"
  nameWithType: "SerializerAdapter"
  fullName: "com.azure.core.util.serializer.SerializerAdapter"
- uid: "com.azure.core.implementation.serializer.HttpResponseDecodeData"
  name: "HttpResponseDecodeData"
  nameWithType: "HttpResponseDecodeData"
  fullName: "com.azure.core.implementation.serializer.HttpResponseDecodeData"
- uid: "com.azure.core.implementation.serializer.HttpResponseDecoder.HttpDecodedResponse.HttpDecodedResponse*"
  name: "HttpDecodedResponse"
  nameWithType: "HttpResponseDecoder.HttpDecodedResponse.HttpDecodedResponse"
  fullName: "com.azure.core.implementation.serializer.HttpResponseDecoder.HttpDecodedResponse.HttpDecodedResponse"
  package: "com.azure.core.implementation.serializer"
- uid: "com.azure.core.implementation.serializer.HttpResponseDecoder.HttpDecodedResponse.getSourceResponse*"
  name: "getSourceResponse"
  nameWithType: "HttpResponseDecoder.HttpDecodedResponse.getSourceResponse"
  fullName: "com.azure.core.implementation.serializer.HttpResponseDecoder.HttpDecodedResponse.getSourceResponse"
  package: "com.azure.core.implementation.serializer"
- uid: "reactor.core.publisher.Mono<java.lang.Object>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "java.lang.Object"
    name: "Object"
    fullName: "java.lang.Object"
  - name: ">"
    fullName: ">"
- uid: "com.azure.core.implementation.serializer.HttpResponseDecoder.HttpDecodedResponse.getDecodedBody*"
  name: "getDecodedBody"
  nameWithType: "HttpResponseDecoder.HttpDecodedResponse.getDecodedBody"
  fullName: "com.azure.core.implementation.serializer.HttpResponseDecoder.HttpDecodedResponse.getDecodedBody"
  package: "com.azure.core.implementation.serializer"
- uid: "com.azure.core.implementation.serializer.HttpResponseDecoder.HttpDecodedResponse.getDecodedHeaders*"
  name: "getDecodedHeaders"
  nameWithType: "HttpResponseDecoder.HttpDecodedResponse.getDecodedHeaders"
  fullName: "com.azure.core.implementation.serializer.HttpResponseDecoder.HttpDecodedResponse.getDecodedHeaders"
  package: "com.azure.core.implementation.serializer"
- uid: "java.lang.reflect.Type"
  spec.java:
  - uid: "java.lang.reflect.Type"
    name: "Type"
    fullName: "java.lang.reflect.Type"
- uid: "com.azure.core.implementation.serializer.HttpResponseDecoder.HttpDecodedResponse.getDecodedType*"
  name: "getDecodedType"
  nameWithType: "HttpResponseDecoder.HttpDecodedResponse.getDecodedType"
  fullName: "com.azure.core.implementation.serializer.HttpResponseDecoder.HttpDecodedResponse.getDecodedType"
  package: "com.azure.core.implementation.serializer"
- uid: "boolean"
  spec.java:
  - uid: "boolean"
    name: "boolean"
    fullName: "boolean"
- uid: "com.azure.core.implementation.serializer.HttpResponseDecoder.HttpDecodedResponse.isErrorStatus*"
  name: "isErrorStatus"
  nameWithType: "HttpResponseDecoder.HttpDecodedResponse.isErrorStatus"
  fullName: "com.azure.core.implementation.serializer.HttpResponseDecoder.HttpDecodedResponse.isErrorStatus"
  package: "com.azure.core.implementation.serializer"
- uid: "com.azure.core.implementation.serializer.HttpResponseDecoder.HttpDecodedResponse.close*"
  name: "close"
  nameWithType: "HttpResponseDecoder.HttpDecodedResponse.close"
  fullName: "com.azure.core.implementation.serializer.HttpResponseDecoder.HttpDecodedResponse.close"
  package: "com.azure.core.implementation.serializer"
- uid: "java.io.Closeable"
  name: "Closeable"
  nameWithType: "Closeable"
  fullName: "java.io.Closeable"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "reactor.core.publisher.Mono"
  name: "Mono"
  nameWithType: "Mono"
  fullName: "reactor.core.publisher.Mono"
- uid: "java.lang.Object"
  name: "Object"
  nameWithType: "Object"
  fullName: "java.lang.Object"
