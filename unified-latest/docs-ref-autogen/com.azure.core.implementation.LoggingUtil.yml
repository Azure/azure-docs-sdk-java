### YamlMime:ManagedReference
items:
- uid: "com.azure.core.implementation.LoggingUtil"
  id: "LoggingUtil"
  parent: "com.azure.core.implementation"
  children:
  - "com.azure.core.implementation.LoggingUtil.getEnvironmentLoggingLevel()"
  langs:
  - "java"
  name: "LoggingUtil"
  nameWithType: "LoggingUtil"
  fullName: "com.azure.core.implementation.LoggingUtil"
  type: "Class"
  package: "com.azure.core.implementation"
  summary: "This class contains utility methods useful for logging."
  syntax:
    content: "public final class LoggingUtil"
  inheritance:
  - "java.lang.Object"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.azure.core.implementation.LoggingUtil.LoggingUtil()"
  id: "LoggingUtil()"
  parent: "com.azure.core.implementation.LoggingUtil"
  langs:
  - "java"
  name: "LoggingUtil()"
  nameWithType: "LoggingUtil.LoggingUtil()"
  fullName: "com.azure.core.implementation.LoggingUtil.LoggingUtil()"
  overload: "com.azure.core.implementation.LoggingUtil.LoggingUtil*"
  type: "Constructor"
  package: "com.azure.core.implementation"
  syntax:
    content: "private LoggingUtil()"
- uid: "com.azure.core.implementation.LoggingUtil.getEnvironmentLoggingLevel()"
  id: "getEnvironmentLoggingLevel()"
  parent: "com.azure.core.implementation.LoggingUtil"
  langs:
  - "java"
  name: "getEnvironmentLoggingLevel()"
  nameWithType: "LoggingUtil.getEnvironmentLoggingLevel()"
  fullName: "com.azure.core.implementation.LoggingUtil.getEnvironmentLoggingLevel()"
  overload: "com.azure.core.implementation.LoggingUtil.getEnvironmentLoggingLevel*"
  type: "Method"
  package: "com.azure.core.implementation"
  summary: "Retrieve the environment logging level which is used to determine if and what we are allowed to log.\n\nThe value returned from this method should be used throughout a single logging event as it may change during the logging operation, this will help prevent difficult to debug timing issues."
  syntax:
    content: "public static LogLevel getEnvironmentLoggingLevel()"
    return:
      type: "com.azure.core.util.logging.LogLevel"
      description: "Environment logging level if set, otherwise <xref uid=\"com.azure.core.util.logging.LogLevel.NOT_SET\" data-throw-if-not-resolved=\"false\">LogLevel#NOT_SET</xref>."
references:
- uid: "com.azure.core.implementation.LoggingUtil.LoggingUtil*"
  name: "LoggingUtil"
  nameWithType: "LoggingUtil.LoggingUtil"
  fullName: "com.azure.core.implementation.LoggingUtil.LoggingUtil"
  package: "com.azure.core.implementation"
- uid: "com.azure.core.util.logging.LogLevel"
  name: "LogLevel"
  nameWithType: "LogLevel"
  fullName: "com.azure.core.util.logging.LogLevel"
- uid: "com.azure.core.implementation.LoggingUtil.getEnvironmentLoggingLevel*"
  name: "getEnvironmentLoggingLevel"
  nameWithType: "LoggingUtil.getEnvironmentLoggingLevel"
  fullName: "com.azure.core.implementation.LoggingUtil.getEnvironmentLoggingLevel"
  package: "com.azure.core.implementation"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
