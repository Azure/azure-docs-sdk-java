### YamlMime:ManagedReference
items:
- uid: "com.azure.storage.file.share.models.SourceModifiedAccessConditions"
  id: "SourceModifiedAccessConditions"
  parent: "com.azure.storage.file.share.models"
  children:
  - "com.azure.storage.file.share.models.SourceModifiedAccessConditions.SourceModifiedAccessConditions()"
  - "com.azure.storage.file.share.models.SourceModifiedAccessConditions.getSourceIfMatchCrc64()"
  - "com.azure.storage.file.share.models.SourceModifiedAccessConditions.getSourceIfNoneMatchCrc64()"
  - "com.azure.storage.file.share.models.SourceModifiedAccessConditions.setSourceIfMatchCrc64(byte[])"
  - "com.azure.storage.file.share.models.SourceModifiedAccessConditions.setSourceIfNoneMatchCrc64(byte[])"
  langs:
  - "java"
  name: "SourceModifiedAccessConditions"
  nameWithType: "SourceModifiedAccessConditions"
  fullName: "com.azure.storage.file.share.models.SourceModifiedAccessConditions"
  type: "Class"
  package: "com.azure.storage.file.share.models"
  summary: "Additional parameters for uploadRangeFromURL operation."
  syntax:
    content: "public final class SourceModifiedAccessConditions"
  inheritance:
  - "java.lang.Object"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.azure.storage.file.share.models.SourceModifiedAccessConditions.SourceModifiedAccessConditions()"
  id: "SourceModifiedAccessConditions()"
  parent: "com.azure.storage.file.share.models.SourceModifiedAccessConditions"
  langs:
  - "java"
  name: "SourceModifiedAccessConditions()"
  nameWithType: "SourceModifiedAccessConditions.SourceModifiedAccessConditions()"
  fullName: "com.azure.storage.file.share.models.SourceModifiedAccessConditions.SourceModifiedAccessConditions()"
  overload: "com.azure.storage.file.share.models.SourceModifiedAccessConditions.SourceModifiedAccessConditions*"
  type: "Constructor"
  package: "com.azure.storage.file.share.models"
  syntax:
    content: "public SourceModifiedAccessConditions()"
- uid: "com.azure.storage.file.share.models.SourceModifiedAccessConditions.getSourceIfMatchCrc64()"
  id: "getSourceIfMatchCrc64()"
  parent: "com.azure.storage.file.share.models.SourceModifiedAccessConditions"
  langs:
  - "java"
  name: "getSourceIfMatchCrc64()"
  nameWithType: "SourceModifiedAccessConditions.getSourceIfMatchCrc64()"
  fullName: "com.azure.storage.file.share.models.SourceModifiedAccessConditions.getSourceIfMatchCrc64()"
  overload: "com.azure.storage.file.share.models.SourceModifiedAccessConditions.getSourceIfMatchCrc64*"
  type: "Method"
  package: "com.azure.storage.file.share.models"
  summary: "Get the sourceIfMatchCrc64 property: Specify the crc64 value to operate only on range with a matching crc64 checksum."
  syntax:
    content: "public byte[] getSourceIfMatchCrc64()"
    return:
      type: "byte[]"
      description: "the sourceIfMatchCrc64 value."
- uid: "com.azure.storage.file.share.models.SourceModifiedAccessConditions.getSourceIfNoneMatchCrc64()"
  id: "getSourceIfNoneMatchCrc64()"
  parent: "com.azure.storage.file.share.models.SourceModifiedAccessConditions"
  langs:
  - "java"
  name: "getSourceIfNoneMatchCrc64()"
  nameWithType: "SourceModifiedAccessConditions.getSourceIfNoneMatchCrc64()"
  fullName: "com.azure.storage.file.share.models.SourceModifiedAccessConditions.getSourceIfNoneMatchCrc64()"
  overload: "com.azure.storage.file.share.models.SourceModifiedAccessConditions.getSourceIfNoneMatchCrc64*"
  type: "Method"
  package: "com.azure.storage.file.share.models"
  summary: "Get the sourceIfNoneMatchCrc64 property: Specify the crc64 value to operate only on range without a matching crc64 checksum."
  syntax:
    content: "public byte[] getSourceIfNoneMatchCrc64()"
    return:
      type: "byte[]"
      description: "the sourceIfNoneMatchCrc64 value."
- uid: "com.azure.storage.file.share.models.SourceModifiedAccessConditions.setSourceIfMatchCrc64(byte[])"
  id: "setSourceIfMatchCrc64(byte[])"
  parent: "com.azure.storage.file.share.models.SourceModifiedAccessConditions"
  langs:
  - "java"
  name: "setSourceIfMatchCrc64(byte[] sourceIfMatchCrc64)"
  nameWithType: "SourceModifiedAccessConditions.setSourceIfMatchCrc64(byte[] sourceIfMatchCrc64)"
  fullName: "com.azure.storage.file.share.models.SourceModifiedAccessConditions.setSourceIfMatchCrc64(byte[] sourceIfMatchCrc64)"
  overload: "com.azure.storage.file.share.models.SourceModifiedAccessConditions.setSourceIfMatchCrc64*"
  type: "Method"
  package: "com.azure.storage.file.share.models"
  summary: "Set the sourceIfMatchCrc64 property: Specify the crc64 value to operate only on range with a matching crc64 checksum."
  syntax:
    content: "public SourceModifiedAccessConditions setSourceIfMatchCrc64(byte[] sourceIfMatchCrc64)"
    parameters:
    - id: "sourceIfMatchCrc64"
      type: "byte[]"
      description: "the sourceIfMatchCrc64 value to set."
    return:
      type: "com.azure.storage.file.share.models.SourceModifiedAccessConditions"
      description: "the SourceModifiedAccessConditions object itself."
- uid: "com.azure.storage.file.share.models.SourceModifiedAccessConditions.setSourceIfNoneMatchCrc64(byte[])"
  id: "setSourceIfNoneMatchCrc64(byte[])"
  parent: "com.azure.storage.file.share.models.SourceModifiedAccessConditions"
  langs:
  - "java"
  name: "setSourceIfNoneMatchCrc64(byte[] sourceIfNoneMatchCrc64)"
  nameWithType: "SourceModifiedAccessConditions.setSourceIfNoneMatchCrc64(byte[] sourceIfNoneMatchCrc64)"
  fullName: "com.azure.storage.file.share.models.SourceModifiedAccessConditions.setSourceIfNoneMatchCrc64(byte[] sourceIfNoneMatchCrc64)"
  overload: "com.azure.storage.file.share.models.SourceModifiedAccessConditions.setSourceIfNoneMatchCrc64*"
  type: "Method"
  package: "com.azure.storage.file.share.models"
  summary: "Set the sourceIfNoneMatchCrc64 property: Specify the crc64 value to operate only on range without a matching crc64 checksum."
  syntax:
    content: "public SourceModifiedAccessConditions setSourceIfNoneMatchCrc64(byte[] sourceIfNoneMatchCrc64)"
    parameters:
    - id: "sourceIfNoneMatchCrc64"
      type: "byte[]"
      description: "the sourceIfNoneMatchCrc64 value to set."
    return:
      type: "com.azure.storage.file.share.models.SourceModifiedAccessConditions"
      description: "the SourceModifiedAccessConditions object itself."
references:
- uid: "com.azure.storage.file.share.models.SourceModifiedAccessConditions.SourceModifiedAccessConditions*"
  name: "SourceModifiedAccessConditions"
  nameWithType: "SourceModifiedAccessConditions.SourceModifiedAccessConditions"
  fullName: "com.azure.storage.file.share.models.SourceModifiedAccessConditions.SourceModifiedAccessConditions"
  package: "com.azure.storage.file.share.models"
- uid: "byte[]"
  spec.java:
  - uid: "byte"
    name: "byte"
    fullName: "byte"
  - name: "[]"
    fullName: "[]"
- uid: "com.azure.storage.file.share.models.SourceModifiedAccessConditions.getSourceIfMatchCrc64*"
  name: "getSourceIfMatchCrc64"
  nameWithType: "SourceModifiedAccessConditions.getSourceIfMatchCrc64"
  fullName: "com.azure.storage.file.share.models.SourceModifiedAccessConditions.getSourceIfMatchCrc64"
  package: "com.azure.storage.file.share.models"
- uid: "com.azure.storage.file.share.models.SourceModifiedAccessConditions.setSourceIfMatchCrc64*"
  name: "setSourceIfMatchCrc64"
  nameWithType: "SourceModifiedAccessConditions.setSourceIfMatchCrc64"
  fullName: "com.azure.storage.file.share.models.SourceModifiedAccessConditions.setSourceIfMatchCrc64"
  package: "com.azure.storage.file.share.models"
- uid: "com.azure.storage.file.share.models.SourceModifiedAccessConditions.getSourceIfNoneMatchCrc64*"
  name: "getSourceIfNoneMatchCrc64"
  nameWithType: "SourceModifiedAccessConditions.getSourceIfNoneMatchCrc64"
  fullName: "com.azure.storage.file.share.models.SourceModifiedAccessConditions.getSourceIfNoneMatchCrc64"
  package: "com.azure.storage.file.share.models"
- uid: "com.azure.storage.file.share.models.SourceModifiedAccessConditions.setSourceIfNoneMatchCrc64*"
  name: "setSourceIfNoneMatchCrc64"
  nameWithType: "SourceModifiedAccessConditions.setSourceIfNoneMatchCrc64"
  fullName: "com.azure.storage.file.share.models.SourceModifiedAccessConditions.setSourceIfNoneMatchCrc64"
  package: "com.azure.storage.file.share.models"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
