### YamlMime:ManagedReference
items:
- uid: "com.azure.cosmos.CosmosAsyncContainerResponse"
  id: "CosmosAsyncContainerResponse"
  parent: "com.azure.cosmos"
  children:
  - "com.azure.cosmos.CosmosAsyncContainerResponse.CosmosAsyncContainerResponse(com.azure.cosmos.implementation.ResourceResponse<com.azure.cosmos.implementation.DocumentCollection>,com.azure.cosmos.CosmosAsyncDatabase)"
  - "com.azure.cosmos.CosmosAsyncContainerResponse.getContainer()"
  - "com.azure.cosmos.CosmosAsyncContainerResponse.getIndexTransformationProgress()"
  - "com.azure.cosmos.CosmosAsyncContainerResponse.getLazyIndexingProgress()"
  - "com.azure.cosmos.CosmosAsyncContainerResponse.getProperties()"
  langs:
  - "java"
  name: "CosmosAsyncContainerResponse"
  nameWithType: "CosmosAsyncContainerResponse"
  fullName: "com.azure.cosmos.CosmosAsyncContainerResponse"
  type: "Class"
  package: "com.azure.cosmos"
  syntax:
    content: "public class CosmosAsyncContainerResponse extends CosmosResponse<CosmosContainerProperties>"
  inheritance:
  - "java.lang.Object"
  - "com.azure.cosmos.CosmosResponse"
  inheritedMembers:
  - "com.azure.cosmos.CosmosResponse.getActivityId()"
  - "com.azure.cosmos.CosmosResponse.getCosmosResponseDiagnostics()"
  - "com.azure.cosmos.CosmosResponse.getCurrentResourceQuotaUsage()"
  - "com.azure.cosmos.CosmosResponse.getMaxResourceQuota()"
  - "com.azure.cosmos.CosmosResponse.getProperties()"
  - "com.azure.cosmos.CosmosResponse.getRequestCharge()"
  - "com.azure.cosmos.CosmosResponse.getRequestLatency()"
  - "com.azure.cosmos.CosmosResponse.getResponseHeaders()"
  - "com.azure.cosmos.CosmosResponse.getSessionToken()"
  - "com.azure.cosmos.CosmosResponse.getStatusCode()"
  - "com.azure.cosmos.CosmosResponse.setProperties(T)"
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.azure.cosmos.CosmosAsyncContainerResponse.CosmosAsyncContainerResponse(com.azure.cosmos.implementation.ResourceResponse<com.azure.cosmos.implementation.DocumentCollection>,com.azure.cosmos.CosmosAsyncDatabase)"
  id: "CosmosAsyncContainerResponse(com.azure.cosmos.implementation.ResourceResponse<com.azure.cosmos.implementation.DocumentCollection>,com.azure.cosmos.CosmosAsyncDatabase)"
  parent: "com.azure.cosmos.CosmosAsyncContainerResponse"
  langs:
  - "java"
  name: "CosmosAsyncContainerResponse(ResourceResponse<DocumentCollection> response, CosmosAsyncDatabase database)"
  nameWithType: "CosmosAsyncContainerResponse.CosmosAsyncContainerResponse(ResourceResponse<DocumentCollection> response, CosmosAsyncDatabase database)"
  fullName: "com.azure.cosmos.CosmosAsyncContainerResponse.CosmosAsyncContainerResponse(ResourceResponse<DocumentCollection> response, CosmosAsyncDatabase database)"
  overload: "com.azure.cosmos.CosmosAsyncContainerResponse.CosmosAsyncContainerResponse*"
  type: "Constructor"
  package: "com.azure.cosmos"
  syntax:
    content: " CosmosAsyncContainerResponse(ResourceResponse<DocumentCollection> response, CosmosAsyncDatabase database)"
    parameters:
    - id: "response"
      type: "com.azure.cosmos.implementation.ResourceResponse<com.azure.cosmos.implementation.DocumentCollection>"
    - id: "database"
      type: "com.azure.cosmos.CosmosAsyncDatabase"
- uid: "com.azure.cosmos.CosmosAsyncContainerResponse.getContainer()"
  id: "getContainer()"
  parent: "com.azure.cosmos.CosmosAsyncContainerResponse"
  langs:
  - "java"
  name: "getContainer()"
  nameWithType: "CosmosAsyncContainerResponse.getContainer()"
  fullName: "com.azure.cosmos.CosmosAsyncContainerResponse.getContainer()"
  overload: "com.azure.cosmos.CosmosAsyncContainerResponse.getContainer*"
  type: "Method"
  package: "com.azure.cosmos"
  summary: "Gets the Container object"
  syntax:
    content: "public CosmosAsyncContainer getContainer()"
    return:
      type: "com.azure.cosmos.CosmosAsyncContainer"
      description: "the Cosmos container object"
- uid: "com.azure.cosmos.CosmosAsyncContainerResponse.getIndexTransformationProgress()"
  id: "getIndexTransformationProgress()"
  parent: "com.azure.cosmos.CosmosAsyncContainerResponse"
  langs:
  - "java"
  name: "getIndexTransformationProgress()"
  nameWithType: "CosmosAsyncContainerResponse.getIndexTransformationProgress()"
  fullName: "com.azure.cosmos.CosmosAsyncContainerResponse.getIndexTransformationProgress()"
  overload: "com.azure.cosmos.CosmosAsyncContainerResponse.getIndexTransformationProgress*"
  type: "Method"
  package: "com.azure.cosmos"
  summary: "Gets the progress of an index transformation, if one is underway."
  syntax:
    content: "public long getIndexTransformationProgress()"
    return:
      type: "long"
      description: "the progress of an index transformation."
- uid: "com.azure.cosmos.CosmosAsyncContainerResponse.getLazyIndexingProgress()"
  id: "getLazyIndexingProgress()"
  parent: "com.azure.cosmos.CosmosAsyncContainerResponse"
  langs:
  - "java"
  name: "getLazyIndexingProgress()"
  nameWithType: "CosmosAsyncContainerResponse.getLazyIndexingProgress()"
  fullName: "com.azure.cosmos.CosmosAsyncContainerResponse.getLazyIndexingProgress()"
  overload: "com.azure.cosmos.CosmosAsyncContainerResponse.getLazyIndexingProgress*"
  type: "Method"
  package: "com.azure.cosmos"
  summary: "Gets the progress of lazy indexing."
  syntax:
    content: " long getLazyIndexingProgress()"
    return:
      type: "long"
      description: "the progress of lazy indexing."
- uid: "com.azure.cosmos.CosmosAsyncContainerResponse.getProperties()"
  id: "getProperties()"
  parent: "com.azure.cosmos.CosmosAsyncContainerResponse"
  langs:
  - "java"
  name: "getProperties()"
  nameWithType: "CosmosAsyncContainerResponse.getProperties()"
  fullName: "com.azure.cosmos.CosmosAsyncContainerResponse.getProperties()"
  overload: "com.azure.cosmos.CosmosAsyncContainerResponse.getProperties*"
  type: "Method"
  package: "com.azure.cosmos"
  summary: "Gets the container properties"
  syntax:
    content: "public CosmosContainerProperties getProperties()"
    return:
      type: "com.azure.cosmos.CosmosContainerProperties"
      description: "the cosmos container properties"
references:
- uid: "com.azure.cosmos.implementation.ResourceResponse<com.azure.cosmos.implementation.DocumentCollection>"
  spec.java:
  - uid: "com.azure.cosmos.implementation.ResourceResponse"
    name: "ResourceResponse"
    fullName: "com.azure.cosmos.implementation.ResourceResponse"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.cosmos.implementation.DocumentCollection"
    name: "DocumentCollection"
    fullName: "com.azure.cosmos.implementation.DocumentCollection"
  - name: ">"
    fullName: ">"
- uid: "com.azure.cosmos.CosmosAsyncDatabase"
  name: "CosmosAsyncDatabase"
  nameWithType: "CosmosAsyncDatabase"
  fullName: "com.azure.cosmos.CosmosAsyncDatabase"
- uid: "com.azure.cosmos.CosmosAsyncContainerResponse.CosmosAsyncContainerResponse*"
  name: "CosmosAsyncContainerResponse"
  nameWithType: "CosmosAsyncContainerResponse.CosmosAsyncContainerResponse"
  fullName: "com.azure.cosmos.CosmosAsyncContainerResponse.CosmosAsyncContainerResponse"
  package: "com.azure.cosmos"
- uid: "long"
  spec.java:
  - uid: "long"
    name: "long"
    fullName: "long"
- uid: "com.azure.cosmos.CosmosAsyncContainerResponse.getIndexTransformationProgress*"
  name: "getIndexTransformationProgress"
  nameWithType: "CosmosAsyncContainerResponse.getIndexTransformationProgress"
  fullName: "com.azure.cosmos.CosmosAsyncContainerResponse.getIndexTransformationProgress"
  package: "com.azure.cosmos"
- uid: "com.azure.cosmos.CosmosAsyncContainerResponse.getLazyIndexingProgress*"
  name: "getLazyIndexingProgress"
  nameWithType: "CosmosAsyncContainerResponse.getLazyIndexingProgress"
  fullName: "com.azure.cosmos.CosmosAsyncContainerResponse.getLazyIndexingProgress"
  package: "com.azure.cosmos"
- uid: "com.azure.cosmos.CosmosContainerProperties"
  name: "CosmosContainerProperties"
  nameWithType: "CosmosContainerProperties"
  fullName: "com.azure.cosmos.CosmosContainerProperties"
- uid: "com.azure.cosmos.CosmosAsyncContainerResponse.getProperties*"
  name: "getProperties"
  nameWithType: "CosmosAsyncContainerResponse.getProperties"
  fullName: "com.azure.cosmos.CosmosAsyncContainerResponse.getProperties"
  package: "com.azure.cosmos"
- uid: "com.azure.cosmos.CosmosAsyncContainer"
  name: "CosmosAsyncContainer"
  nameWithType: "CosmosAsyncContainer"
  fullName: "com.azure.cosmos.CosmosAsyncContainer"
- uid: "com.azure.cosmos.CosmosAsyncContainerResponse.getContainer*"
  name: "getContainer"
  nameWithType: "CosmosAsyncContainerResponse.getContainer"
  fullName: "com.azure.cosmos.CosmosAsyncContainerResponse.getContainer"
  package: "com.azure.cosmos"
- uid: "com.azure.cosmos.CosmosResponse<com.azure.cosmos.CosmosContainerProperties>"
  name: "CosmosResponse<CosmosContainerProperties>"
  nameWithType: "CosmosResponse<CosmosContainerProperties>"
  fullName: "com.azure.cosmos.CosmosResponse<com.azure.cosmos.CosmosContainerProperties>"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "com.azure.cosmos.CosmosResponse.getProperties()"
  name: "CosmosResponse.getProperties()"
  nameWithType: "CosmosResponse.getProperties()"
  fullName: "com.azure.cosmos.CosmosResponse.getProperties()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "com.azure.cosmos.CosmosResponse.getCosmosResponseDiagnostics()"
  name: "CosmosResponse.getCosmosResponseDiagnostics()"
  nameWithType: "CosmosResponse.getCosmosResponseDiagnostics()"
  fullName: "com.azure.cosmos.CosmosResponse.getCosmosResponseDiagnostics()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "com.azure.cosmos.CosmosResponse.setProperties(T)"
  name: "CosmosResponse.setProperties(T)"
  nameWithType: "CosmosResponse.setProperties(T)"
  fullName: "com.azure.cosmos.CosmosResponse.setProperties(T)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "com.azure.cosmos.CosmosResponse.getResponseHeaders()"
  name: "CosmosResponse.getResponseHeaders()"
  nameWithType: "CosmosResponse.getResponseHeaders()"
  fullName: "com.azure.cosmos.CosmosResponse.getResponseHeaders()"
- uid: "com.azure.cosmos.CosmosResponse.getStatusCode()"
  name: "CosmosResponse.getStatusCode()"
  nameWithType: "CosmosResponse.getStatusCode()"
  fullName: "com.azure.cosmos.CosmosResponse.getStatusCode()"
- uid: "com.azure.cosmos.CosmosResponse.getSessionToken()"
  name: "CosmosResponse.getSessionToken()"
  nameWithType: "CosmosResponse.getSessionToken()"
  fullName: "com.azure.cosmos.CosmosResponse.getSessionToken()"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "com.azure.cosmos.CosmosResponse.getActivityId()"
  name: "CosmosResponse.getActivityId()"
  nameWithType: "CosmosResponse.getActivityId()"
  fullName: "com.azure.cosmos.CosmosResponse.getActivityId()"
- uid: "com.azure.cosmos.CosmosResponse.getCurrentResourceQuotaUsage()"
  name: "CosmosResponse.getCurrentResourceQuotaUsage()"
  nameWithType: "CosmosResponse.getCurrentResourceQuotaUsage()"
  fullName: "com.azure.cosmos.CosmosResponse.getCurrentResourceQuotaUsage()"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "com.azure.cosmos.CosmosResponse.getMaxResourceQuota()"
  name: "CosmosResponse.getMaxResourceQuota()"
  nameWithType: "CosmosResponse.getMaxResourceQuota()"
  fullName: "com.azure.cosmos.CosmosResponse.getMaxResourceQuota()"
- uid: "com.azure.cosmos.CosmosResponse.getRequestCharge()"
  name: "CosmosResponse.getRequestCharge()"
  nameWithType: "CosmosResponse.getRequestCharge()"
  fullName: "com.azure.cosmos.CosmosResponse.getRequestCharge()"
- uid: "com.azure.cosmos.CosmosResponse.getRequestLatency()"
  name: "CosmosResponse.getRequestLatency()"
  nameWithType: "CosmosResponse.getRequestLatency()"
  fullName: "com.azure.cosmos.CosmosResponse.getRequestLatency()"
- uid: "com.azure.cosmos.implementation.ResourceResponse"
  name: "ResourceResponse"
  nameWithType: "ResourceResponse"
  fullName: "com.azure.cosmos.implementation.ResourceResponse"
- uid: "com.azure.cosmos.implementation.DocumentCollection"
  name: "DocumentCollection"
  nameWithType: "DocumentCollection"
  fullName: "com.azure.cosmos.implementation.DocumentCollection"
- uid: "com.azure.cosmos.CosmosResponse"
  name: "CosmosResponse"
  nameWithType: "CosmosResponse"
  fullName: "com.azure.cosmos.CosmosResponse"
