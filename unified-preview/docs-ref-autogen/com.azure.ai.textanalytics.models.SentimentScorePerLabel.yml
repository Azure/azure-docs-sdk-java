### YamlMime:ManagedReference
items:
- uid: "com.azure.ai.textanalytics.models.SentimentScorePerLabel"
  id: "SentimentScorePerLabel"
  parent: "com.azure.ai.textanalytics.models"
  children:
  - "com.azure.ai.textanalytics.models.SentimentScorePerLabel.SentimentScorePerLabel(double,double,double)"
  - "com.azure.ai.textanalytics.models.SentimentScorePerLabel.getNegative()"
  - "com.azure.ai.textanalytics.models.SentimentScorePerLabel.getNeutral()"
  - "com.azure.ai.textanalytics.models.SentimentScorePerLabel.getPositive()"
  langs:
  - "java"
  name: "SentimentScorePerLabel"
  nameWithType: "SentimentScorePerLabel"
  fullName: "com.azure.ai.textanalytics.models.SentimentScorePerLabel"
  type: "Class"
  package: "com.azure.ai.textanalytics.models"
  summary: "The SentimentScorePerLabel model"
  syntax:
    content: "public final class SentimentScorePerLabel"
  inheritance:
  - "java.lang.Object"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.azure.ai.textanalytics.models.SentimentScorePerLabel.SentimentScorePerLabel(double,double,double)"
  id: "SentimentScorePerLabel(double,double,double)"
  parent: "com.azure.ai.textanalytics.models.SentimentScorePerLabel"
  langs:
  - "java"
  name: "SentimentScorePerLabel(double negativeScore, double neutralScore, double positiveScore)"
  nameWithType: "SentimentScorePerLabel.SentimentScorePerLabel(double negativeScore, double neutralScore, double positiveScore)"
  fullName: "com.azure.ai.textanalytics.models.SentimentScorePerLabel.SentimentScorePerLabel(double negativeScore, double neutralScore, double positiveScore)"
  overload: "com.azure.ai.textanalytics.models.SentimentScorePerLabel.SentimentScorePerLabel*"
  type: "Constructor"
  package: "com.azure.ai.textanalytics.models"
  summary: "Creates a `SentimentScorePerLabel` model that describes the sentiment score of the sentiment label."
  syntax:
    content: "public SentimentScorePerLabel(double negativeScore, double neutralScore, double positiveScore)"
    parameters:
    - id: "negativeScore"
      type: "double"
      description: "negative score value, range in between 0 and 1.0"
    - id: "neutralScore"
      type: "double"
      description: "neutral score value, range in between 0 and 1.0"
    - id: "positiveScore"
      type: "double"
      description: "positive score value, range in between 0 and 1.0"
- uid: "com.azure.ai.textanalytics.models.SentimentScorePerLabel.getNegative()"
  id: "getNegative()"
  parent: "com.azure.ai.textanalytics.models.SentimentScorePerLabel"
  langs:
  - "java"
  name: "getNegative()"
  nameWithType: "SentimentScorePerLabel.getNegative()"
  fullName: "com.azure.ai.textanalytics.models.SentimentScorePerLabel.getNegative()"
  overload: "com.azure.ai.textanalytics.models.SentimentScorePerLabel.getNegative*"
  type: "Method"
  package: "com.azure.ai.textanalytics.models"
  summary: "The negative score value, range in between 0 and 1.0."
  syntax:
    content: "public double getNegative()"
    return:
      type: "double"
      description: "negative score value"
- uid: "com.azure.ai.textanalytics.models.SentimentScorePerLabel.getNeutral()"
  id: "getNeutral()"
  parent: "com.azure.ai.textanalytics.models.SentimentScorePerLabel"
  langs:
  - "java"
  name: "getNeutral()"
  nameWithType: "SentimentScorePerLabel.getNeutral()"
  fullName: "com.azure.ai.textanalytics.models.SentimentScorePerLabel.getNeutral()"
  overload: "com.azure.ai.textanalytics.models.SentimentScorePerLabel.getNeutral*"
  type: "Method"
  package: "com.azure.ai.textanalytics.models"
  summary: "The neutral score value, range in between 0 and 1.0."
  syntax:
    content: "public double getNeutral()"
    return:
      type: "double"
      description: "neutral score value"
- uid: "com.azure.ai.textanalytics.models.SentimentScorePerLabel.getPositive()"
  id: "getPositive()"
  parent: "com.azure.ai.textanalytics.models.SentimentScorePerLabel"
  langs:
  - "java"
  name: "getPositive()"
  nameWithType: "SentimentScorePerLabel.getPositive()"
  fullName: "com.azure.ai.textanalytics.models.SentimentScorePerLabel.getPositive()"
  overload: "com.azure.ai.textanalytics.models.SentimentScorePerLabel.getPositive*"
  type: "Method"
  package: "com.azure.ai.textanalytics.models"
  summary: "The positive score value, range in between 0 and 1.0."
  syntax:
    content: "public double getPositive()"
    return:
      type: "double"
      description: "positive score value"
references:
- uid: "double"
  spec.java:
  - uid: "double"
    name: "double"
    fullName: "double"
- uid: "com.azure.ai.textanalytics.models.SentimentScorePerLabel.SentimentScorePerLabel*"
  name: "SentimentScorePerLabel"
  nameWithType: "SentimentScorePerLabel.SentimentScorePerLabel"
  fullName: "com.azure.ai.textanalytics.models.SentimentScorePerLabel.SentimentScorePerLabel"
  package: "com.azure.ai.textanalytics.models"
- uid: "com.azure.ai.textanalytics.models.SentimentScorePerLabel.getNegative*"
  name: "getNegative"
  nameWithType: "SentimentScorePerLabel.getNegative"
  fullName: "com.azure.ai.textanalytics.models.SentimentScorePerLabel.getNegative"
  package: "com.azure.ai.textanalytics.models"
- uid: "com.azure.ai.textanalytics.models.SentimentScorePerLabel.getNeutral*"
  name: "getNeutral"
  nameWithType: "SentimentScorePerLabel.getNeutral"
  fullName: "com.azure.ai.textanalytics.models.SentimentScorePerLabel.getNeutral"
  package: "com.azure.ai.textanalytics.models"
- uid: "com.azure.ai.textanalytics.models.SentimentScorePerLabel.getPositive*"
  name: "getPositive"
  nameWithType: "SentimentScorePerLabel.getPositive"
  fullName: "com.azure.ai.textanalytics.models.SentimentScorePerLabel.getPositive"
  package: "com.azure.ai.textanalytics.models"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
