### YamlMime:ManagedReference
items:
- uid: "com.azure.storage.file.datalake.sas.PathSasPermission"
  id: "PathSasPermission"
  parent: "com.azure.storage.file.datalake.sas"
  children:
  - "com.azure.storage.file.datalake.sas.PathSasPermission.PathSasPermission()"
  - "com.azure.storage.file.datalake.sas.PathSasPermission.hasAddPermission()"
  - "com.azure.storage.file.datalake.sas.PathSasPermission.hasCreatePermission()"
  - "com.azure.storage.file.datalake.sas.PathSasPermission.hasDeletePermission()"
  - "com.azure.storage.file.datalake.sas.PathSasPermission.hasReadPermission()"
  - "com.azure.storage.file.datalake.sas.PathSasPermission.hasWritePermission()"
  - "com.azure.storage.file.datalake.sas.PathSasPermission.parse(java.lang.String)"
  - "com.azure.storage.file.datalake.sas.PathSasPermission.setAddPermission(boolean)"
  - "com.azure.storage.file.datalake.sas.PathSasPermission.setCreatePermission(boolean)"
  - "com.azure.storage.file.datalake.sas.PathSasPermission.setDeletePermission(boolean)"
  - "com.azure.storage.file.datalake.sas.PathSasPermission.setReadPermission(boolean)"
  - "com.azure.storage.file.datalake.sas.PathSasPermission.setWritePermission(boolean)"
  - "com.azure.storage.file.datalake.sas.PathSasPermission.toString()"
  langs:
  - "java"
  name: "PathSasPermission"
  nameWithType: "PathSasPermission"
  fullName: "com.azure.storage.file.datalake.sas.PathSasPermission"
  type: "Class"
  package: "com.azure.storage.file.datalake.sas"
  summary: "This is a helper class to construct a string representing the permissions granted by a ServiceSAS to a path. Setting a value to true means that any SAS which uses these permissions will grant permissions for that operation. It is possible to construct the permissions string without this class, but the order of the permissions is particular and this class guarantees correctness."
  syntax:
    content: "public final class PathSasPermission"
  inheritance:
  - "java.lang.Object"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.azure.storage.file.datalake.sas.PathSasPermission.PathSasPermission()"
  id: "PathSasPermission()"
  parent: "com.azure.storage.file.datalake.sas.PathSasPermission"
  langs:
  - "java"
  name: "PathSasPermission()"
  nameWithType: "PathSasPermission.PathSasPermission()"
  fullName: "com.azure.storage.file.datalake.sas.PathSasPermission.PathSasPermission()"
  overload: "com.azure.storage.file.datalake.sas.PathSasPermission.PathSasPermission*"
  type: "Constructor"
  package: "com.azure.storage.file.datalake.sas"
  summary: "Initializes a `PathSasPermission` object with all fields set to false."
  syntax:
    content: "public PathSasPermission()"
- uid: "com.azure.storage.file.datalake.sas.PathSasPermission.hasAddPermission()"
  id: "hasAddPermission()"
  parent: "com.azure.storage.file.datalake.sas.PathSasPermission"
  langs:
  - "java"
  name: "hasAddPermission()"
  nameWithType: "PathSasPermission.hasAddPermission()"
  fullName: "com.azure.storage.file.datalake.sas.PathSasPermission.hasAddPermission()"
  overload: "com.azure.storage.file.datalake.sas.PathSasPermission.hasAddPermission*"
  type: "Method"
  package: "com.azure.storage.file.datalake.sas"
  syntax:
    content: "public boolean hasAddPermission()"
    return:
      type: "boolean"
      description: "the add permission status."
- uid: "com.azure.storage.file.datalake.sas.PathSasPermission.hasCreatePermission()"
  id: "hasCreatePermission()"
  parent: "com.azure.storage.file.datalake.sas.PathSasPermission"
  langs:
  - "java"
  name: "hasCreatePermission()"
  nameWithType: "PathSasPermission.hasCreatePermission()"
  fullName: "com.azure.storage.file.datalake.sas.PathSasPermission.hasCreatePermission()"
  overload: "com.azure.storage.file.datalake.sas.PathSasPermission.hasCreatePermission*"
  type: "Method"
  package: "com.azure.storage.file.datalake.sas"
  syntax:
    content: "public boolean hasCreatePermission()"
    return:
      type: "boolean"
      description: "the create permission status."
- uid: "com.azure.storage.file.datalake.sas.PathSasPermission.hasDeletePermission()"
  id: "hasDeletePermission()"
  parent: "com.azure.storage.file.datalake.sas.PathSasPermission"
  langs:
  - "java"
  name: "hasDeletePermission()"
  nameWithType: "PathSasPermission.hasDeletePermission()"
  fullName: "com.azure.storage.file.datalake.sas.PathSasPermission.hasDeletePermission()"
  overload: "com.azure.storage.file.datalake.sas.PathSasPermission.hasDeletePermission*"
  type: "Method"
  package: "com.azure.storage.file.datalake.sas"
  syntax:
    content: "public boolean hasDeletePermission()"
    return:
      type: "boolean"
      description: "the delete permission status."
- uid: "com.azure.storage.file.datalake.sas.PathSasPermission.hasReadPermission()"
  id: "hasReadPermission()"
  parent: "com.azure.storage.file.datalake.sas.PathSasPermission"
  langs:
  - "java"
  name: "hasReadPermission()"
  nameWithType: "PathSasPermission.hasReadPermission()"
  fullName: "com.azure.storage.file.datalake.sas.PathSasPermission.hasReadPermission()"
  overload: "com.azure.storage.file.datalake.sas.PathSasPermission.hasReadPermission*"
  type: "Method"
  package: "com.azure.storage.file.datalake.sas"
  syntax:
    content: "public boolean hasReadPermission()"
    return:
      type: "boolean"
      description: "the read permission status."
- uid: "com.azure.storage.file.datalake.sas.PathSasPermission.hasWritePermission()"
  id: "hasWritePermission()"
  parent: "com.azure.storage.file.datalake.sas.PathSasPermission"
  langs:
  - "java"
  name: "hasWritePermission()"
  nameWithType: "PathSasPermission.hasWritePermission()"
  fullName: "com.azure.storage.file.datalake.sas.PathSasPermission.hasWritePermission()"
  overload: "com.azure.storage.file.datalake.sas.PathSasPermission.hasWritePermission*"
  type: "Method"
  package: "com.azure.storage.file.datalake.sas"
  syntax:
    content: "public boolean hasWritePermission()"
    return:
      type: "boolean"
      description: "the write permission status."
- uid: "com.azure.storage.file.datalake.sas.PathSasPermission.parse(java.lang.String)"
  id: "parse(java.lang.String)"
  parent: "com.azure.storage.file.datalake.sas.PathSasPermission"
  langs:
  - "java"
  name: "parse(String permString)"
  nameWithType: "PathSasPermission.parse(String permString)"
  fullName: "com.azure.storage.file.datalake.sas.PathSasPermission.parse(String permString)"
  overload: "com.azure.storage.file.datalake.sas.PathSasPermission.parse*"
  type: "Method"
  package: "com.azure.storage.file.datalake.sas"
  summary: "Creates a `PathSasPermission` from the specified permissions string. This method will throw an `IllegalArgumentException` if it encounters a character that does not correspond to a valid permission."
  syntax:
    content: "public static PathSasPermission parse(String permString)"
    parameters:
    - id: "permString"
      type: "java.lang.String"
      description: "A <code>String</code> which represents the <code>PathSasPermission</code>."
    return:
      type: "com.azure.storage.file.datalake.sas.PathSasPermission"
      description: "A <code>PathSasPermission</code> generated from the given <code>String</code>."
- uid: "com.azure.storage.file.datalake.sas.PathSasPermission.setAddPermission(boolean)"
  id: "setAddPermission(boolean)"
  parent: "com.azure.storage.file.datalake.sas.PathSasPermission"
  langs:
  - "java"
  name: "setAddPermission(boolean hasAddPermission)"
  nameWithType: "PathSasPermission.setAddPermission(boolean hasAddPermission)"
  fullName: "com.azure.storage.file.datalake.sas.PathSasPermission.setAddPermission(boolean hasAddPermission)"
  overload: "com.azure.storage.file.datalake.sas.PathSasPermission.setAddPermission*"
  type: "Method"
  package: "com.azure.storage.file.datalake.sas"
  summary: "Sets the add permission status."
  syntax:
    content: "public PathSasPermission setAddPermission(boolean hasAddPermission)"
    parameters:
    - id: "hasAddPermission"
      type: "boolean"
      description: "Permission status to set"
    return:
      type: "com.azure.storage.file.datalake.sas.PathSasPermission"
      description: "the updated PathSasPermission object."
- uid: "com.azure.storage.file.datalake.sas.PathSasPermission.setCreatePermission(boolean)"
  id: "setCreatePermission(boolean)"
  parent: "com.azure.storage.file.datalake.sas.PathSasPermission"
  langs:
  - "java"
  name: "setCreatePermission(boolean hasCreatePermission)"
  nameWithType: "PathSasPermission.setCreatePermission(boolean hasCreatePermission)"
  fullName: "com.azure.storage.file.datalake.sas.PathSasPermission.setCreatePermission(boolean hasCreatePermission)"
  overload: "com.azure.storage.file.datalake.sas.PathSasPermission.setCreatePermission*"
  type: "Method"
  package: "com.azure.storage.file.datalake.sas"
  summary: "Sets the create permission status."
  syntax:
    content: "public PathSasPermission setCreatePermission(boolean hasCreatePermission)"
    parameters:
    - id: "hasCreatePermission"
      type: "boolean"
      description: "Permission status to set"
    return:
      type: "com.azure.storage.file.datalake.sas.PathSasPermission"
      description: "the updated PathSasPermission object."
- uid: "com.azure.storage.file.datalake.sas.PathSasPermission.setDeletePermission(boolean)"
  id: "setDeletePermission(boolean)"
  parent: "com.azure.storage.file.datalake.sas.PathSasPermission"
  langs:
  - "java"
  name: "setDeletePermission(boolean hasDeletePermission)"
  nameWithType: "PathSasPermission.setDeletePermission(boolean hasDeletePermission)"
  fullName: "com.azure.storage.file.datalake.sas.PathSasPermission.setDeletePermission(boolean hasDeletePermission)"
  overload: "com.azure.storage.file.datalake.sas.PathSasPermission.setDeletePermission*"
  type: "Method"
  package: "com.azure.storage.file.datalake.sas"
  summary: "Sets the delete permission status."
  syntax:
    content: "public PathSasPermission setDeletePermission(boolean hasDeletePermission)"
    parameters:
    - id: "hasDeletePermission"
      type: "boolean"
      description: "Permission status to set"
    return:
      type: "com.azure.storage.file.datalake.sas.PathSasPermission"
      description: "the updated PathSasPermission object."
- uid: "com.azure.storage.file.datalake.sas.PathSasPermission.setReadPermission(boolean)"
  id: "setReadPermission(boolean)"
  parent: "com.azure.storage.file.datalake.sas.PathSasPermission"
  langs:
  - "java"
  name: "setReadPermission(boolean hasReadPermission)"
  nameWithType: "PathSasPermission.setReadPermission(boolean hasReadPermission)"
  fullName: "com.azure.storage.file.datalake.sas.PathSasPermission.setReadPermission(boolean hasReadPermission)"
  overload: "com.azure.storage.file.datalake.sas.PathSasPermission.setReadPermission*"
  type: "Method"
  package: "com.azure.storage.file.datalake.sas"
  summary: "Sets the read permission status."
  syntax:
    content: "public PathSasPermission setReadPermission(boolean hasReadPermission)"
    parameters:
    - id: "hasReadPermission"
      type: "boolean"
      description: "Permission status to set"
    return:
      type: "com.azure.storage.file.datalake.sas.PathSasPermission"
      description: "the updated PathSasPermission object."
- uid: "com.azure.storage.file.datalake.sas.PathSasPermission.setWritePermission(boolean)"
  id: "setWritePermission(boolean)"
  parent: "com.azure.storage.file.datalake.sas.PathSasPermission"
  langs:
  - "java"
  name: "setWritePermission(boolean hasWritePermission)"
  nameWithType: "PathSasPermission.setWritePermission(boolean hasWritePermission)"
  fullName: "com.azure.storage.file.datalake.sas.PathSasPermission.setWritePermission(boolean hasWritePermission)"
  overload: "com.azure.storage.file.datalake.sas.PathSasPermission.setWritePermission*"
  type: "Method"
  package: "com.azure.storage.file.datalake.sas"
  summary: "Sets the write permission status."
  syntax:
    content: "public PathSasPermission setWritePermission(boolean hasWritePermission)"
    parameters:
    - id: "hasWritePermission"
      type: "boolean"
      description: "Permission status to set"
    return:
      type: "com.azure.storage.file.datalake.sas.PathSasPermission"
      description: "the updated PathSasPermission object."
- uid: "com.azure.storage.file.datalake.sas.PathSasPermission.toString()"
  id: "toString()"
  parent: "com.azure.storage.file.datalake.sas.PathSasPermission"
  langs:
  - "java"
  name: "toString()"
  nameWithType: "PathSasPermission.toString()"
  fullName: "com.azure.storage.file.datalake.sas.PathSasPermission.toString()"
  overload: "com.azure.storage.file.datalake.sas.PathSasPermission.toString*"
  type: "Method"
  package: "com.azure.storage.file.datalake.sas"
  summary: "Converts the given permissions to a `String`. Using this method will guarantee the permissions are in an order accepted by the service."
  syntax:
    content: "public String toString()"
    return:
      type: "java.lang.String"
      description: "A <code>String</code> which represents the <code>PathSasPermission</code>."
references:
- uid: "com.azure.storage.file.datalake.sas.PathSasPermission.PathSasPermission*"
  name: "PathSasPermission"
  nameWithType: "PathSasPermission.PathSasPermission"
  fullName: "com.azure.storage.file.datalake.sas.PathSasPermission.PathSasPermission"
  package: "com.azure.storage.file.datalake.sas"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "com.azure.storage.file.datalake.sas.PathSasPermission.parse*"
  name: "parse"
  nameWithType: "PathSasPermission.parse"
  fullName: "com.azure.storage.file.datalake.sas.PathSasPermission.parse"
  package: "com.azure.storage.file.datalake.sas"
- uid: "boolean"
  spec.java:
  - uid: "boolean"
    name: "boolean"
    fullName: "boolean"
- uid: "com.azure.storage.file.datalake.sas.PathSasPermission.hasReadPermission*"
  name: "hasReadPermission"
  nameWithType: "PathSasPermission.hasReadPermission"
  fullName: "com.azure.storage.file.datalake.sas.PathSasPermission.hasReadPermission"
  package: "com.azure.storage.file.datalake.sas"
- uid: "com.azure.storage.file.datalake.sas.PathSasPermission.setReadPermission*"
  name: "setReadPermission"
  nameWithType: "PathSasPermission.setReadPermission"
  fullName: "com.azure.storage.file.datalake.sas.PathSasPermission.setReadPermission"
  package: "com.azure.storage.file.datalake.sas"
- uid: "com.azure.storage.file.datalake.sas.PathSasPermission.hasAddPermission*"
  name: "hasAddPermission"
  nameWithType: "PathSasPermission.hasAddPermission"
  fullName: "com.azure.storage.file.datalake.sas.PathSasPermission.hasAddPermission"
  package: "com.azure.storage.file.datalake.sas"
- uid: "com.azure.storage.file.datalake.sas.PathSasPermission.setAddPermission*"
  name: "setAddPermission"
  nameWithType: "PathSasPermission.setAddPermission"
  fullName: "com.azure.storage.file.datalake.sas.PathSasPermission.setAddPermission"
  package: "com.azure.storage.file.datalake.sas"
- uid: "com.azure.storage.file.datalake.sas.PathSasPermission.hasCreatePermission*"
  name: "hasCreatePermission"
  nameWithType: "PathSasPermission.hasCreatePermission"
  fullName: "com.azure.storage.file.datalake.sas.PathSasPermission.hasCreatePermission"
  package: "com.azure.storage.file.datalake.sas"
- uid: "com.azure.storage.file.datalake.sas.PathSasPermission.setCreatePermission*"
  name: "setCreatePermission"
  nameWithType: "PathSasPermission.setCreatePermission"
  fullName: "com.azure.storage.file.datalake.sas.PathSasPermission.setCreatePermission"
  package: "com.azure.storage.file.datalake.sas"
- uid: "com.azure.storage.file.datalake.sas.PathSasPermission.hasWritePermission*"
  name: "hasWritePermission"
  nameWithType: "PathSasPermission.hasWritePermission"
  fullName: "com.azure.storage.file.datalake.sas.PathSasPermission.hasWritePermission"
  package: "com.azure.storage.file.datalake.sas"
- uid: "com.azure.storage.file.datalake.sas.PathSasPermission.setWritePermission*"
  name: "setWritePermission"
  nameWithType: "PathSasPermission.setWritePermission"
  fullName: "com.azure.storage.file.datalake.sas.PathSasPermission.setWritePermission"
  package: "com.azure.storage.file.datalake.sas"
- uid: "com.azure.storage.file.datalake.sas.PathSasPermission.hasDeletePermission*"
  name: "hasDeletePermission"
  nameWithType: "PathSasPermission.hasDeletePermission"
  fullName: "com.azure.storage.file.datalake.sas.PathSasPermission.hasDeletePermission"
  package: "com.azure.storage.file.datalake.sas"
- uid: "com.azure.storage.file.datalake.sas.PathSasPermission.setDeletePermission*"
  name: "setDeletePermission"
  nameWithType: "PathSasPermission.setDeletePermission"
  fullName: "com.azure.storage.file.datalake.sas.PathSasPermission.setDeletePermission"
  package: "com.azure.storage.file.datalake.sas"
- uid: "com.azure.storage.file.datalake.sas.PathSasPermission.toString*"
  name: "toString"
  nameWithType: "PathSasPermission.toString"
  fullName: "com.azure.storage.file.datalake.sas.PathSasPermission.toString"
  package: "com.azure.storage.file.datalake.sas"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
