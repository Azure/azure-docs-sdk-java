### YamlMime:ManagedReference
items:
- uid: "com.azure.cosmos.implementation.directconnectivity.GatewayServiceConfigurationReader"
  id: "GatewayServiceConfigurationReader"
  parent: "com.azure.cosmos.implementation.directconnectivity"
  children:
  - "com.azure.cosmos.implementation.directconnectivity.GatewayServiceConfigurationReader.GATEWAY_READER_NOT_INITIALIZED"
  - "com.azure.cosmos.implementation.directconnectivity.GatewayServiceConfigurationReader.GatewayServiceConfigurationReader(java.net.URI,boolean,java.lang.String,com.azure.cosmos.ConnectionPolicy,com.azure.cosmos.implementation.BaseAuthorizationTokenProvider,com.azure.cosmos.implementation.http.HttpClient)"
  - "com.azure.cosmos.implementation.directconnectivity.GatewayServiceConfigurationReader.enableAuthorization()"
  - "com.azure.cosmos.implementation.directconnectivity.GatewayServiceConfigurationReader.getDefaultConsistencyLevel()"
  - "com.azure.cosmos.implementation.directconnectivity.GatewayServiceConfigurationReader.getQueryEngineConfiguration()"
  - "com.azure.cosmos.implementation.directconnectivity.GatewayServiceConfigurationReader.getSystemReplicationPolicy()"
  - "com.azure.cosmos.implementation.directconnectivity.GatewayServiceConfigurationReader.getUserReplicationPolicy()"
  - "com.azure.cosmos.implementation.directconnectivity.GatewayServiceConfigurationReader.initializeReaderAsync()"
  - "com.azure.cosmos.implementation.directconnectivity.GatewayServiceConfigurationReader.setDefaultConsistencyLevel(com.azure.cosmos.ConsistencyLevel)"
  - "com.azure.cosmos.implementation.directconnectivity.GatewayServiceConfigurationReader.userReplicationPolicy"
  langs:
  - "java"
  name: "GatewayServiceConfigurationReader"
  nameWithType: "GatewayServiceConfigurationReader"
  fullName: "com.azure.cosmos.implementation.directconnectivity.GatewayServiceConfigurationReader"
  type: "Class"
  package: "com.azure.cosmos.implementation.directconnectivity"
  summary: "This class will read the service configuration from the gateway. As .Net does code sharing between the SDK and GW there are two implementation to IServiceConfigurationReader GatewayServiceConfigurationReader which is for SDK DatabaseAccountConfigurationReader which is for GW Some of the APIs are not relevant in SDK and due to that in .Net the SDK implementation one throws not-implemented. In java, as we don't do code sharing and we got rid of the interface which is not needed and only implemented the methods in GatewayServiceConfigurationReader"
  syntax:
    content: "public class GatewayServiceConfigurationReader"
  inheritance:
  - "java.lang.Object"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.azure.cosmos.implementation.directconnectivity.GatewayServiceConfigurationReader.GATEWAY_READER_NOT_INITIALIZED"
  id: "GATEWAY_READER_NOT_INITIALIZED"
  parent: "com.azure.cosmos.implementation.directconnectivity.GatewayServiceConfigurationReader"
  langs:
  - "java"
  name: "GATEWAY_READER_NOT_INITIALIZED"
  nameWithType: "GatewayServiceConfigurationReader.GATEWAY_READER_NOT_INITIALIZED"
  fullName: "com.azure.cosmos.implementation.directconnectivity.GatewayServiceConfigurationReader.GATEWAY_READER_NOT_INITIALIZED"
  type: "Field"
  package: "com.azure.cosmos.implementation.directconnectivity"
  syntax:
    content: "public static final String GATEWAY_READER_NOT_INITIALIZED"
    return:
      type: "java.lang.String"
- uid: "com.azure.cosmos.implementation.directconnectivity.GatewayServiceConfigurationReader.GatewayServiceConfigurationReader(java.net.URI,boolean,java.lang.String,com.azure.cosmos.ConnectionPolicy,com.azure.cosmos.implementation.BaseAuthorizationTokenProvider,com.azure.cosmos.implementation.http.HttpClient)"
  id: "GatewayServiceConfigurationReader(java.net.URI,boolean,java.lang.String,com.azure.cosmos.ConnectionPolicy,com.azure.cosmos.implementation.BaseAuthorizationTokenProvider,com.azure.cosmos.implementation.http.HttpClient)"
  parent: "com.azure.cosmos.implementation.directconnectivity.GatewayServiceConfigurationReader"
  langs:
  - "java"
  name: "GatewayServiceConfigurationReader(URI serviceEndpoint, boolean hasResourceToken, String resourceToken, ConnectionPolicy connectionPolicy, BaseAuthorizationTokenProvider baseAuthorizationTokenProvider, HttpClient httpClient)"
  nameWithType: "GatewayServiceConfigurationReader.GatewayServiceConfigurationReader(URI serviceEndpoint, boolean hasResourceToken, String resourceToken, ConnectionPolicy connectionPolicy, BaseAuthorizationTokenProvider baseAuthorizationTokenProvider, HttpClient httpClient)"
  fullName: "com.azure.cosmos.implementation.directconnectivity.GatewayServiceConfigurationReader.GatewayServiceConfigurationReader(URI serviceEndpoint, boolean hasResourceToken, String resourceToken, ConnectionPolicy connectionPolicy, BaseAuthorizationTokenProvider baseAuthorizationTokenProvider, HttpClient httpClient)"
  overload: "com.azure.cosmos.implementation.directconnectivity.GatewayServiceConfigurationReader.GatewayServiceConfigurationReader*"
  type: "Constructor"
  package: "com.azure.cosmos.implementation.directconnectivity"
  syntax:
    content: "public GatewayServiceConfigurationReader(URI serviceEndpoint, boolean hasResourceToken, String resourceToken, ConnectionPolicy connectionPolicy, BaseAuthorizationTokenProvider baseAuthorizationTokenProvider, HttpClient httpClient)"
    parameters:
    - id: "serviceEndpoint"
      type: "java.net.URI"
    - id: "hasResourceToken"
      type: "boolean"
    - id: "resourceToken"
      type: "java.lang.String"
    - id: "connectionPolicy"
      type: "com.azure.cosmos.ConnectionPolicy"
    - id: "baseAuthorizationTokenProvider"
      type: "com.azure.cosmos.implementation.BaseAuthorizationTokenProvider"
    - id: "httpClient"
      type: "com.azure.cosmos.implementation.http.HttpClient"
- uid: "com.azure.cosmos.implementation.directconnectivity.GatewayServiceConfigurationReader.enableAuthorization()"
  id: "enableAuthorization()"
  parent: "com.azure.cosmos.implementation.directconnectivity.GatewayServiceConfigurationReader"
  langs:
  - "java"
  name: "enableAuthorization()"
  nameWithType: "GatewayServiceConfigurationReader.enableAuthorization()"
  fullName: "com.azure.cosmos.implementation.directconnectivity.GatewayServiceConfigurationReader.enableAuthorization()"
  overload: "com.azure.cosmos.implementation.directconnectivity.GatewayServiceConfigurationReader.enableAuthorization*"
  type: "Method"
  package: "com.azure.cosmos.implementation.directconnectivity"
  syntax:
    content: "public boolean enableAuthorization()"
    return:
      type: "boolean"
- uid: "com.azure.cosmos.implementation.directconnectivity.GatewayServiceConfigurationReader.getDefaultConsistencyLevel()"
  id: "getDefaultConsistencyLevel()"
  parent: "com.azure.cosmos.implementation.directconnectivity.GatewayServiceConfigurationReader"
  langs:
  - "java"
  name: "getDefaultConsistencyLevel()"
  nameWithType: "GatewayServiceConfigurationReader.getDefaultConsistencyLevel()"
  fullName: "com.azure.cosmos.implementation.directconnectivity.GatewayServiceConfigurationReader.getDefaultConsistencyLevel()"
  overload: "com.azure.cosmos.implementation.directconnectivity.GatewayServiceConfigurationReader.getDefaultConsistencyLevel*"
  type: "Method"
  package: "com.azure.cosmos.implementation.directconnectivity"
  syntax:
    content: "public ConsistencyLevel getDefaultConsistencyLevel()"
    return:
      type: "com.azure.cosmos.ConsistencyLevel"
- uid: "com.azure.cosmos.implementation.directconnectivity.GatewayServiceConfigurationReader.getQueryEngineConfiguration()"
  id: "getQueryEngineConfiguration()"
  parent: "com.azure.cosmos.implementation.directconnectivity.GatewayServiceConfigurationReader"
  langs:
  - "java"
  name: "getQueryEngineConfiguration()"
  nameWithType: "GatewayServiceConfigurationReader.getQueryEngineConfiguration()"
  fullName: "com.azure.cosmos.implementation.directconnectivity.GatewayServiceConfigurationReader.getQueryEngineConfiguration()"
  overload: "com.azure.cosmos.implementation.directconnectivity.GatewayServiceConfigurationReader.getQueryEngineConfiguration*"
  type: "Method"
  package: "com.azure.cosmos.implementation.directconnectivity"
  syntax:
    content: "public Map<String,Object> getQueryEngineConfiguration()"
    return:
      type: "java.util.Map<java.lang.String,java.lang.Object>"
- uid: "com.azure.cosmos.implementation.directconnectivity.GatewayServiceConfigurationReader.getSystemReplicationPolicy()"
  id: "getSystemReplicationPolicy()"
  parent: "com.azure.cosmos.implementation.directconnectivity.GatewayServiceConfigurationReader"
  langs:
  - "java"
  name: "getSystemReplicationPolicy()"
  nameWithType: "GatewayServiceConfigurationReader.getSystemReplicationPolicy()"
  fullName: "com.azure.cosmos.implementation.directconnectivity.GatewayServiceConfigurationReader.getSystemReplicationPolicy()"
  overload: "com.azure.cosmos.implementation.directconnectivity.GatewayServiceConfigurationReader.getSystemReplicationPolicy*"
  type: "Method"
  package: "com.azure.cosmos.implementation.directconnectivity"
  syntax:
    content: "public ReplicationPolicy getSystemReplicationPolicy()"
    return:
      type: "com.azure.cosmos.implementation.ReplicationPolicy"
- uid: "com.azure.cosmos.implementation.directconnectivity.GatewayServiceConfigurationReader.getUserReplicationPolicy()"
  id: "getUserReplicationPolicy()"
  parent: "com.azure.cosmos.implementation.directconnectivity.GatewayServiceConfigurationReader"
  langs:
  - "java"
  name: "getUserReplicationPolicy()"
  nameWithType: "GatewayServiceConfigurationReader.getUserReplicationPolicy()"
  fullName: "com.azure.cosmos.implementation.directconnectivity.GatewayServiceConfigurationReader.getUserReplicationPolicy()"
  overload: "com.azure.cosmos.implementation.directconnectivity.GatewayServiceConfigurationReader.getUserReplicationPolicy*"
  type: "Method"
  package: "com.azure.cosmos.implementation.directconnectivity"
  syntax:
    content: "public ReplicationPolicy getUserReplicationPolicy()"
    return:
      type: "com.azure.cosmos.implementation.ReplicationPolicy"
- uid: "com.azure.cosmos.implementation.directconnectivity.GatewayServiceConfigurationReader.initializeReaderAsync()"
  id: "initializeReaderAsync()"
  parent: "com.azure.cosmos.implementation.directconnectivity.GatewayServiceConfigurationReader"
  langs:
  - "java"
  name: "initializeReaderAsync()"
  nameWithType: "GatewayServiceConfigurationReader.initializeReaderAsync()"
  fullName: "com.azure.cosmos.implementation.directconnectivity.GatewayServiceConfigurationReader.initializeReaderAsync()"
  overload: "com.azure.cosmos.implementation.directconnectivity.GatewayServiceConfigurationReader.initializeReaderAsync*"
  type: "Method"
  package: "com.azure.cosmos.implementation.directconnectivity"
  syntax:
    content: "public Mono<DatabaseAccount> initializeReaderAsync()"
    return:
      type: "reactor.core.publisher.Mono<com.azure.cosmos.DatabaseAccount>"
- uid: "com.azure.cosmos.implementation.directconnectivity.GatewayServiceConfigurationReader.setDefaultConsistencyLevel(com.azure.cosmos.ConsistencyLevel)"
  id: "setDefaultConsistencyLevel(com.azure.cosmos.ConsistencyLevel)"
  parent: "com.azure.cosmos.implementation.directconnectivity.GatewayServiceConfigurationReader"
  langs:
  - "java"
  name: "setDefaultConsistencyLevel(ConsistencyLevel value)"
  nameWithType: "GatewayServiceConfigurationReader.setDefaultConsistencyLevel(ConsistencyLevel value)"
  fullName: "com.azure.cosmos.implementation.directconnectivity.GatewayServiceConfigurationReader.setDefaultConsistencyLevel(ConsistencyLevel value)"
  overload: "com.azure.cosmos.implementation.directconnectivity.GatewayServiceConfigurationReader.setDefaultConsistencyLevel*"
  type: "Method"
  package: "com.azure.cosmos.implementation.directconnectivity"
  syntax:
    content: "public void setDefaultConsistencyLevel(ConsistencyLevel value)"
    parameters:
    - id: "value"
      type: "com.azure.cosmos.ConsistencyLevel"
- uid: "com.azure.cosmos.implementation.directconnectivity.GatewayServiceConfigurationReader.userReplicationPolicy"
  id: "userReplicationPolicy"
  parent: "com.azure.cosmos.implementation.directconnectivity.GatewayServiceConfigurationReader"
  langs:
  - "java"
  name: "userReplicationPolicy"
  nameWithType: "GatewayServiceConfigurationReader.userReplicationPolicy"
  fullName: "com.azure.cosmos.implementation.directconnectivity.GatewayServiceConfigurationReader.userReplicationPolicy"
  type: "Field"
  package: "com.azure.cosmos.implementation.directconnectivity"
  syntax:
    content: "public ReplicationPolicy userReplicationPolicy"
    return:
      type: "com.azure.cosmos.implementation.ReplicationPolicy"
references:
- uid: "java.net.URI"
  spec.java:
  - uid: "java.net.URI"
    name: "URI"
    fullName: "java.net.URI"
- uid: "boolean"
  spec.java:
  - uid: "boolean"
    name: "boolean"
    fullName: "boolean"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "com.azure.cosmos.ConnectionPolicy"
  name: "ConnectionPolicy"
  nameWithType: "ConnectionPolicy"
  fullName: "com.azure.cosmos.ConnectionPolicy"
- uid: "com.azure.cosmos.implementation.BaseAuthorizationTokenProvider"
  name: "BaseAuthorizationTokenProvider"
  nameWithType: "BaseAuthorizationTokenProvider"
  fullName: "com.azure.cosmos.implementation.BaseAuthorizationTokenProvider"
- uid: "com.azure.cosmos.implementation.http.HttpClient"
  name: "HttpClient"
  nameWithType: "HttpClient"
  fullName: "com.azure.cosmos.implementation.http.HttpClient"
- uid: "com.azure.cosmos.implementation.directconnectivity.GatewayServiceConfigurationReader.GatewayServiceConfigurationReader*"
  name: "GatewayServiceConfigurationReader"
  nameWithType: "GatewayServiceConfigurationReader.GatewayServiceConfigurationReader"
  fullName: "com.azure.cosmos.implementation.directconnectivity.GatewayServiceConfigurationReader.GatewayServiceConfigurationReader"
  package: "com.azure.cosmos.implementation.directconnectivity"
- uid: "com.azure.cosmos.implementation.ReplicationPolicy"
  name: "ReplicationPolicy"
  nameWithType: "ReplicationPolicy"
  fullName: "com.azure.cosmos.implementation.ReplicationPolicy"
- uid: "com.azure.cosmos.implementation.directconnectivity.GatewayServiceConfigurationReader.getUserReplicationPolicy*"
  name: "getUserReplicationPolicy"
  nameWithType: "GatewayServiceConfigurationReader.getUserReplicationPolicy"
  fullName: "com.azure.cosmos.implementation.directconnectivity.GatewayServiceConfigurationReader.getUserReplicationPolicy"
  package: "com.azure.cosmos.implementation.directconnectivity"
- uid: "com.azure.cosmos.implementation.directconnectivity.GatewayServiceConfigurationReader.getSystemReplicationPolicy*"
  name: "getSystemReplicationPolicy"
  nameWithType: "GatewayServiceConfigurationReader.getSystemReplicationPolicy"
  fullName: "com.azure.cosmos.implementation.directconnectivity.GatewayServiceConfigurationReader.getSystemReplicationPolicy"
  package: "com.azure.cosmos.implementation.directconnectivity"
- uid: "com.azure.cosmos.implementation.directconnectivity.GatewayServiceConfigurationReader.enableAuthorization*"
  name: "enableAuthorization"
  nameWithType: "GatewayServiceConfigurationReader.enableAuthorization"
  fullName: "com.azure.cosmos.implementation.directconnectivity.GatewayServiceConfigurationReader.enableAuthorization"
  package: "com.azure.cosmos.implementation.directconnectivity"
- uid: "com.azure.cosmos.ConsistencyLevel"
  name: "ConsistencyLevel"
  nameWithType: "ConsistencyLevel"
  fullName: "com.azure.cosmos.ConsistencyLevel"
- uid: "com.azure.cosmos.implementation.directconnectivity.GatewayServiceConfigurationReader.getDefaultConsistencyLevel*"
  name: "getDefaultConsistencyLevel"
  nameWithType: "GatewayServiceConfigurationReader.getDefaultConsistencyLevel"
  fullName: "com.azure.cosmos.implementation.directconnectivity.GatewayServiceConfigurationReader.getDefaultConsistencyLevel"
  package: "com.azure.cosmos.implementation.directconnectivity"
- uid: "com.azure.cosmos.implementation.directconnectivity.GatewayServiceConfigurationReader.setDefaultConsistencyLevel*"
  name: "setDefaultConsistencyLevel"
  nameWithType: "GatewayServiceConfigurationReader.setDefaultConsistencyLevel"
  fullName: "com.azure.cosmos.implementation.directconnectivity.GatewayServiceConfigurationReader.setDefaultConsistencyLevel"
  package: "com.azure.cosmos.implementation.directconnectivity"
- uid: "java.util.Map<java.lang.String,java.lang.Object>"
  spec.java:
  - uid: "java.util.Map"
    name: "Map"
    fullName: "java.util.Map"
  - name: "<"
    fullName: "<"
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
  - name: ","
    fullName: ","
  - uid: "java.lang.Object"
    name: "Object"
    fullName: "java.lang.Object"
  - name: ">"
    fullName: ">"
- uid: "com.azure.cosmos.implementation.directconnectivity.GatewayServiceConfigurationReader.getQueryEngineConfiguration*"
  name: "getQueryEngineConfiguration"
  nameWithType: "GatewayServiceConfigurationReader.getQueryEngineConfiguration"
  fullName: "com.azure.cosmos.implementation.directconnectivity.GatewayServiceConfigurationReader.getQueryEngineConfiguration"
  package: "com.azure.cosmos.implementation.directconnectivity"
- uid: "reactor.core.publisher.Mono<com.azure.cosmos.DatabaseAccount>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.cosmos.DatabaseAccount"
    name: "DatabaseAccount"
    fullName: "com.azure.cosmos.DatabaseAccount"
  - name: ">"
    fullName: ">"
- uid: "com.azure.cosmos.implementation.directconnectivity.GatewayServiceConfigurationReader.initializeReaderAsync*"
  name: "initializeReaderAsync"
  nameWithType: "GatewayServiceConfigurationReader.initializeReaderAsync"
  fullName: "com.azure.cosmos.implementation.directconnectivity.GatewayServiceConfigurationReader.initializeReaderAsync"
  package: "com.azure.cosmos.implementation.directconnectivity"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "java.lang.String,java.lang.Object"
  name: "String,Object"
  nameWithType: "String,Object"
  fullName: "java.lang.String,java.lang.Object"
- uid: "java.util.Map"
  name: "Map"
  nameWithType: "Map"
  fullName: "java.util.Map"
- uid: "com.azure.cosmos.DatabaseAccount"
  name: "DatabaseAccount"
  nameWithType: "DatabaseAccount"
  fullName: "com.azure.cosmos.DatabaseAccount"
- uid: "reactor.core.publisher.Mono"
  name: "Mono"
  nameWithType: "Mono"
  fullName: "reactor.core.publisher.Mono"
