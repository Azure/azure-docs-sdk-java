### YamlMime:ManagedReference
items:
- uid: "com.azure.ai.textanalytics.implementation.models.ErrorException"
  id: "ErrorException"
  parent: "com.azure.ai.textanalytics.implementation.models"
  children:
  - "com.azure.ai.textanalytics.implementation.models.ErrorException.ErrorException(java.lang.String,com.azure.core.http.HttpResponse)"
  - "com.azure.ai.textanalytics.implementation.models.ErrorException.ErrorException(java.lang.String,com.azure.core.http.HttpResponse,java.lang.Error)"
  - "com.azure.ai.textanalytics.implementation.models.ErrorException.getValue()"
  langs:
  - "java"
  name: "ErrorException"
  nameWithType: "ErrorException"
  fullName: "com.azure.ai.textanalytics.implementation.models.ErrorException"
  type: "Class"
  package: "com.azure.ai.textanalytics.implementation.models"
  summary: "Exception thrown for an invalid response with Error information."
  syntax:
    content: "public final class ErrorException extends HttpResponseException"
  inheritance:
  - "java.lang.Object"
  - "java.lang.Throwable"
  - "java.lang.Exception"
  - "java.lang.RuntimeException"
  - "com.azure.core.exception.AzureException"
  - "com.azure.core.exception.HttpResponseException"
  inheritedMembers:
  - "com.azure.core.exception.HttpResponseException.getResponse()"
  - "com.azure.core.exception.HttpResponseException.getValue()"
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
  - "java.lang.Throwable.addSuppressed(java.lang.Throwable)"
  - "java.lang.Throwable.fillInStackTrace()"
  - "java.lang.Throwable.getCause()"
  - "java.lang.Throwable.getLocalizedMessage()"
  - "java.lang.Throwable.getMessage()"
  - "java.lang.Throwable.getStackTrace()"
  - "java.lang.Throwable.getSuppressed()"
  - "java.lang.Throwable.initCause(java.lang.Throwable)"
  - "java.lang.Throwable.printStackTrace()"
  - "java.lang.Throwable.printStackTrace(java.io.PrintStream)"
  - "java.lang.Throwable.printStackTrace(java.io.PrintWriter)"
  - "java.lang.Throwable.setStackTrace(java.lang.StackTraceElement[])"
  - "java.lang.Throwable.toString()"
- uid: "com.azure.ai.textanalytics.implementation.models.ErrorException.ErrorException(java.lang.String,com.azure.core.http.HttpResponse)"
  id: "ErrorException(java.lang.String,com.azure.core.http.HttpResponse)"
  parent: "com.azure.ai.textanalytics.implementation.models.ErrorException"
  langs:
  - "java"
  name: "ErrorException(String message, HttpResponse response)"
  nameWithType: "ErrorException.ErrorException(String message, HttpResponse response)"
  fullName: "com.azure.ai.textanalytics.implementation.models.ErrorException.ErrorException(String message, HttpResponse response)"
  overload: "com.azure.ai.textanalytics.implementation.models.ErrorException.ErrorException*"
  type: "Constructor"
  package: "com.azure.ai.textanalytics.implementation.models"
  summary: "Initializes a new instance of the ErrorException class."
  syntax:
    content: "public ErrorException(String message, HttpResponse response)"
    parameters:
    - id: "message"
      type: "java.lang.String"
      description: "the exception message or the response content if a message is not available."
    - id: "response"
      type: "com.azure.core.http.HttpResponse"
      description: "the HTTP response."
- uid: "com.azure.ai.textanalytics.implementation.models.ErrorException.ErrorException(java.lang.String,com.azure.core.http.HttpResponse,java.lang.Error)"
  id: "ErrorException(java.lang.String,com.azure.core.http.HttpResponse,java.lang.Error)"
  parent: "com.azure.ai.textanalytics.implementation.models.ErrorException"
  langs:
  - "java"
  name: "ErrorException(String message, HttpResponse response, Error value)"
  nameWithType: "ErrorException.ErrorException(String message, HttpResponse response, Error value)"
  fullName: "com.azure.ai.textanalytics.implementation.models.ErrorException.ErrorException(String message, HttpResponse response, Error value)"
  overload: "com.azure.ai.textanalytics.implementation.models.ErrorException.ErrorException*"
  type: "Constructor"
  package: "com.azure.ai.textanalytics.implementation.models"
  summary: "Initializes a new instance of the ErrorException class."
  syntax:
    content: "public ErrorException(String message, HttpResponse response, Error value)"
    parameters:
    - id: "message"
      type: "java.lang.String"
      description: "the exception message or the response content if a message is not available."
    - id: "response"
      type: "com.azure.core.http.HttpResponse"
      description: "the HTTP response."
    - id: "value"
      type: "java.lang.Error"
      description: "the deserialized response value."
- uid: "com.azure.ai.textanalytics.implementation.models.ErrorException.getValue()"
  id: "getValue()"
  parent: "com.azure.ai.textanalytics.implementation.models.ErrorException"
  langs:
  - "java"
  name: "getValue()"
  nameWithType: "ErrorException.getValue()"
  fullName: "com.azure.ai.textanalytics.implementation.models.ErrorException.getValue()"
  overload: "com.azure.ai.textanalytics.implementation.models.ErrorException.getValue*"
  type: "Method"
  package: "com.azure.ai.textanalytics.implementation.models"
  syntax:
    content: "public Error getValue()"
    return:
      type: "java.lang.Error"
references:
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "com.azure.core.http.HttpResponse"
  spec.java:
  - uid: "com.azure.core.http.HttpResponse"
    name: "HttpResponse"
    fullName: "com.azure.core.http.HttpResponse"
- uid: "com.azure.ai.textanalytics.implementation.models.ErrorException.ErrorException*"
  name: "ErrorException"
  nameWithType: "ErrorException.ErrorException"
  fullName: "com.azure.ai.textanalytics.implementation.models.ErrorException.ErrorException"
  package: "com.azure.ai.textanalytics.implementation.models"
- uid: "java.lang.Error"
  spec.java:
  - uid: "java.lang.Error"
    name: "Error"
    fullName: "java.lang.Error"
- uid: "com.azure.ai.textanalytics.implementation.models.ErrorException.getValue*"
  name: "getValue"
  nameWithType: "ErrorException.getValue"
  fullName: "com.azure.ai.textanalytics.implementation.models.ErrorException.getValue"
  package: "com.azure.ai.textanalytics.implementation.models"
- uid: "com.azure.core.exception.HttpResponseException"
  name: "HttpResponseException"
  nameWithType: "HttpResponseException"
  fullName: "com.azure.core.exception.HttpResponseException"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Throwable.getCause()"
  name: "Throwable.getCause()"
  nameWithType: "Throwable.getCause()"
  fullName: "java.lang.Throwable.getCause()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Throwable.fillInStackTrace()"
  name: "Throwable.fillInStackTrace()"
  nameWithType: "Throwable.fillInStackTrace()"
  fullName: "java.lang.Throwable.fillInStackTrace()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Throwable.initCause(java.lang.Throwable)"
  name: "Throwable.initCause(Throwable)"
  nameWithType: "Throwable.initCause(Throwable)"
  fullName: "java.lang.Throwable.initCause(java.lang.Throwable)"
- uid: "java.lang.Throwable.setStackTrace(java.lang.StackTraceElement[])"
  name: "Throwable.setStackTrace(StackTraceElement[])"
  nameWithType: "Throwable.setStackTrace(StackTraceElement[])"
  fullName: "java.lang.Throwable.setStackTrace(java.lang.StackTraceElement[])"
- uid: "java.lang.Throwable.toString()"
  name: "Throwable.toString()"
  nameWithType: "Throwable.toString()"
  fullName: "java.lang.Throwable.toString()"
- uid: "java.lang.Throwable.getSuppressed()"
  name: "Throwable.getSuppressed()"
  nameWithType: "Throwable.getSuppressed()"
  fullName: "java.lang.Throwable.getSuppressed()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Throwable.getStackTrace()"
  name: "Throwable.getStackTrace()"
  nameWithType: "Throwable.getStackTrace()"
  fullName: "java.lang.Throwable.getStackTrace()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Throwable.getLocalizedMessage()"
  name: "Throwable.getLocalizedMessage()"
  nameWithType: "Throwable.getLocalizedMessage()"
  fullName: "java.lang.Throwable.getLocalizedMessage()"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Throwable.printStackTrace(java.io.PrintWriter)"
  name: "Throwable.printStackTrace(PrintWriter)"
  nameWithType: "Throwable.printStackTrace(PrintWriter)"
  fullName: "java.lang.Throwable.printStackTrace(java.io.PrintWriter)"
- uid: "java.lang.Throwable.addSuppressed(java.lang.Throwable)"
  name: "Throwable.addSuppressed(Throwable)"
  nameWithType: "Throwable.addSuppressed(Throwable)"
  fullName: "java.lang.Throwable.addSuppressed(java.lang.Throwable)"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "com.azure.core.exception.HttpResponseException.getValue()"
  name: "HttpResponseException.getValue()"
  nameWithType: "HttpResponseException.getValue()"
  fullName: "com.azure.core.exception.HttpResponseException.getValue()"
- uid: "com.azure.core.exception.HttpResponseException.getResponse()"
  name: "HttpResponseException.getResponse()"
  nameWithType: "HttpResponseException.getResponse()"
  fullName: "com.azure.core.exception.HttpResponseException.getResponse()"
- uid: "java.lang.Throwable.printStackTrace(java.io.PrintStream)"
  name: "Throwable.printStackTrace(PrintStream)"
  nameWithType: "Throwable.printStackTrace(PrintStream)"
  fullName: "java.lang.Throwable.printStackTrace(java.io.PrintStream)"
- uid: "java.lang.Throwable.getMessage()"
  name: "Throwable.getMessage()"
  nameWithType: "Throwable.getMessage()"
  fullName: "java.lang.Throwable.getMessage()"
- uid: "java.lang.Throwable.printStackTrace()"
  name: "Throwable.printStackTrace()"
  nameWithType: "Throwable.printStackTrace()"
  fullName: "java.lang.Throwable.printStackTrace()"
