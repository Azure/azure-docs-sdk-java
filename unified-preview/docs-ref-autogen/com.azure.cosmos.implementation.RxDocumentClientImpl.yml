### YamlMime:ManagedReference
items:
- uid: "com.azure.cosmos.implementation.RxDocumentClientImpl"
  id: "RxDocumentClientImpl"
  parent: "com.azure.cosmos.implementation"
  children:
  - "com.azure.cosmos.implementation.RxDocumentClientImpl.<T>readMany(java.util.List<org.apache.commons.lang3.tuple.Pair<java.lang.String,com.azure.cosmos.PartitionKey>>,java.lang.String,com.azure.cosmos.FeedOptions,java.lang.Class<T>)"
  - "com.azure.cosmos.implementation.RxDocumentClientImpl.RxDocumentClientImpl(java.net.URI,java.lang.String,com.azure.cosmos.ConnectionPolicy,com.azure.cosmos.ConsistencyLevel,com.azure.cosmos.implementation.Configs,com.azure.cosmos.CosmosKeyCredential,boolean)"
  - "com.azure.cosmos.implementation.RxDocumentClientImpl.RxDocumentClientImpl(java.net.URI,java.lang.String,java.util.List<com.azure.cosmos.implementation.Permission>,com.azure.cosmos.ConnectionPolicy,com.azure.cosmos.ConsistencyLevel,com.azure.cosmos.implementation.Configs,com.azure.cosmos.TokenResolver,com.azure.cosmos.CosmosKeyCredential,boolean)"
  - "com.azure.cosmos.implementation.RxDocumentClientImpl.asDatabaseAccountManagerInternal()"
  - "com.azure.cosmos.implementation.RxDocumentClientImpl.captureSessionToken(com.azure.cosmos.implementation.RxDocumentServiceRequest,com.azure.cosmos.implementation.RxDocumentServiceResponse)"
  - "com.azure.cosmos.implementation.RxDocumentClientImpl.close()"
  - "com.azure.cosmos.implementation.RxDocumentClientImpl.createCollection(java.lang.String,com.azure.cosmos.implementation.DocumentCollection,com.azure.cosmos.implementation.RequestOptions)"
  - "com.azure.cosmos.implementation.RxDocumentClientImpl.createDatabase(com.azure.cosmos.implementation.Database,com.azure.cosmos.implementation.RequestOptions)"
  - "com.azure.cosmos.implementation.RxDocumentClientImpl.createDocument(java.lang.String,java.lang.Object,com.azure.cosmos.implementation.RequestOptions,boolean)"
  - "com.azure.cosmos.implementation.RxDocumentClientImpl.createPermission(java.lang.String,com.azure.cosmos.implementation.Permission,com.azure.cosmos.implementation.RequestOptions)"
  - "com.azure.cosmos.implementation.RxDocumentClientImpl.createRxGatewayProxy(com.azure.cosmos.implementation.ISessionContainer,com.azure.cosmos.ConsistencyLevel,com.azure.cosmos.implementation.QueryCompatibilityMode,com.azure.cosmos.implementation.UserAgentContainer,com.azure.cosmos.implementation.GlobalEndpointManager,com.azure.cosmos.implementation.http.HttpClient)"
  - "com.azure.cosmos.implementation.RxDocumentClientImpl.createStoredProcedure(java.lang.String,com.azure.cosmos.implementation.StoredProcedure,com.azure.cosmos.implementation.RequestOptions)"
  - "com.azure.cosmos.implementation.RxDocumentClientImpl.createTrigger(java.lang.String,com.azure.cosmos.implementation.Trigger,com.azure.cosmos.implementation.RequestOptions)"
  - "com.azure.cosmos.implementation.RxDocumentClientImpl.createUser(java.lang.String,com.azure.cosmos.implementation.User,com.azure.cosmos.implementation.RequestOptions)"
  - "com.azure.cosmos.implementation.RxDocumentClientImpl.createUserDefinedFunction(java.lang.String,com.azure.cosmos.implementation.UserDefinedFunction,com.azure.cosmos.implementation.RequestOptions)"
  - "com.azure.cosmos.implementation.RxDocumentClientImpl.deleteCollection(java.lang.String,com.azure.cosmos.implementation.RequestOptions)"
  - "com.azure.cosmos.implementation.RxDocumentClientImpl.deleteConflict(java.lang.String,com.azure.cosmos.implementation.RequestOptions)"
  - "com.azure.cosmos.implementation.RxDocumentClientImpl.deleteDatabase(java.lang.String,com.azure.cosmos.implementation.RequestOptions)"
  - "com.azure.cosmos.implementation.RxDocumentClientImpl.deleteDocument(java.lang.String,com.azure.cosmos.implementation.RequestOptions)"
  - "com.azure.cosmos.implementation.RxDocumentClientImpl.deletePermission(java.lang.String,com.azure.cosmos.implementation.RequestOptions)"
  - "com.azure.cosmos.implementation.RxDocumentClientImpl.deleteStoredProcedure(java.lang.String,com.azure.cosmos.implementation.RequestOptions)"
  - "com.azure.cosmos.implementation.RxDocumentClientImpl.deleteTrigger(java.lang.String,com.azure.cosmos.implementation.RequestOptions)"
  - "com.azure.cosmos.implementation.RxDocumentClientImpl.deleteUser(java.lang.String,com.azure.cosmos.implementation.RequestOptions)"
  - "com.azure.cosmos.implementation.RxDocumentClientImpl.deleteUserDefinedFunction(java.lang.String,com.azure.cosmos.implementation.RequestOptions)"
  - "com.azure.cosmos.implementation.RxDocumentClientImpl.executeStoredProcedure(java.lang.String,com.azure.cosmos.implementation.RequestOptions,java.lang.Object[])"
  - "com.azure.cosmos.implementation.RxDocumentClientImpl.executeStoredProcedure(java.lang.String,java.lang.Object[])"
  - "com.azure.cosmos.implementation.RxDocumentClientImpl.getConnectionPolicy()"
  - "com.azure.cosmos.implementation.RxDocumentClientImpl.getDatabaseAccount()"
  - "com.azure.cosmos.implementation.RxDocumentClientImpl.getDatabaseAccountFromEndpoint(java.net.URI)"
  - "com.azure.cosmos.implementation.RxDocumentClientImpl.getPartitionKeyRangeCache()"
  - "com.azure.cosmos.implementation.RxDocumentClientImpl.getReadEndpoint()"
  - "com.azure.cosmos.implementation.RxDocumentClientImpl.getServiceEndpoint()"
  - "com.azure.cosmos.implementation.RxDocumentClientImpl.getSession()"
  - "com.azure.cosmos.implementation.RxDocumentClientImpl.getUserAuthorizationToken(java.lang.String,com.azure.cosmos.implementation.ResourceType,com.azure.cosmos.RequestVerb,java.util.Map<java.lang.String,java.lang.String>,com.azure.cosmos.implementation.AuthorizationTokenType,java.util.Map<java.lang.String,java.lang.Object>)"
  - "com.azure.cosmos.implementation.RxDocumentClientImpl.getWriteEndpoint()"
  - "com.azure.cosmos.implementation.RxDocumentClientImpl.init()"
  - "com.azure.cosmos.implementation.RxDocumentClientImpl.queryCollections(java.lang.String,com.azure.cosmos.SqlQuerySpec,com.azure.cosmos.FeedOptions)"
  - "com.azure.cosmos.implementation.RxDocumentClientImpl.queryCollections(java.lang.String,java.lang.String,com.azure.cosmos.FeedOptions)"
  - "com.azure.cosmos.implementation.RxDocumentClientImpl.queryConflicts(java.lang.String,com.azure.cosmos.SqlQuerySpec,com.azure.cosmos.FeedOptions)"
  - "com.azure.cosmos.implementation.RxDocumentClientImpl.queryConflicts(java.lang.String,java.lang.String,com.azure.cosmos.FeedOptions)"
  - "com.azure.cosmos.implementation.RxDocumentClientImpl.queryDatabases(com.azure.cosmos.SqlQuerySpec,com.azure.cosmos.FeedOptions)"
  - "com.azure.cosmos.implementation.RxDocumentClientImpl.queryDatabases(java.lang.String,com.azure.cosmos.FeedOptions)"
  - "com.azure.cosmos.implementation.RxDocumentClientImpl.queryDocumentChangeFeed(java.lang.String,com.azure.cosmos.ChangeFeedOptions)"
  - "com.azure.cosmos.implementation.RxDocumentClientImpl.queryDocuments(java.lang.String,com.azure.cosmos.SqlQuerySpec,com.azure.cosmos.FeedOptions)"
  - "com.azure.cosmos.implementation.RxDocumentClientImpl.queryDocuments(java.lang.String,java.lang.String,com.azure.cosmos.FeedOptions)"
  - "com.azure.cosmos.implementation.RxDocumentClientImpl.queryOffers(com.azure.cosmos.SqlQuerySpec,com.azure.cosmos.FeedOptions)"
  - "com.azure.cosmos.implementation.RxDocumentClientImpl.queryOffers(java.lang.String,com.azure.cosmos.FeedOptions)"
  - "com.azure.cosmos.implementation.RxDocumentClientImpl.queryPermissions(java.lang.String,com.azure.cosmos.SqlQuerySpec,com.azure.cosmos.FeedOptions)"
  - "com.azure.cosmos.implementation.RxDocumentClientImpl.queryPermissions(java.lang.String,java.lang.String,com.azure.cosmos.FeedOptions)"
  - "com.azure.cosmos.implementation.RxDocumentClientImpl.queryStoredProcedures(java.lang.String,com.azure.cosmos.SqlQuerySpec,com.azure.cosmos.FeedOptions)"
  - "com.azure.cosmos.implementation.RxDocumentClientImpl.queryStoredProcedures(java.lang.String,java.lang.String,com.azure.cosmos.FeedOptions)"
  - "com.azure.cosmos.implementation.RxDocumentClientImpl.queryTriggers(java.lang.String,com.azure.cosmos.SqlQuerySpec,com.azure.cosmos.FeedOptions)"
  - "com.azure.cosmos.implementation.RxDocumentClientImpl.queryTriggers(java.lang.String,java.lang.String,com.azure.cosmos.FeedOptions)"
  - "com.azure.cosmos.implementation.RxDocumentClientImpl.queryUserDefinedFunctions(java.lang.String,com.azure.cosmos.SqlQuerySpec,com.azure.cosmos.FeedOptions)"
  - "com.azure.cosmos.implementation.RxDocumentClientImpl.queryUserDefinedFunctions(java.lang.String,java.lang.String,com.azure.cosmos.FeedOptions)"
  - "com.azure.cosmos.implementation.RxDocumentClientImpl.queryUsers(java.lang.String,com.azure.cosmos.SqlQuerySpec,com.azure.cosmos.FeedOptions)"
  - "com.azure.cosmos.implementation.RxDocumentClientImpl.queryUsers(java.lang.String,java.lang.String,com.azure.cosmos.FeedOptions)"
  - "com.azure.cosmos.implementation.RxDocumentClientImpl.readCollection(java.lang.String,com.azure.cosmos.implementation.RequestOptions)"
  - "com.azure.cosmos.implementation.RxDocumentClientImpl.readCollections(java.lang.String,com.azure.cosmos.FeedOptions)"
  - "com.azure.cosmos.implementation.RxDocumentClientImpl.readConflict(java.lang.String,com.azure.cosmos.implementation.RequestOptions)"
  - "com.azure.cosmos.implementation.RxDocumentClientImpl.readConflicts(java.lang.String,com.azure.cosmos.FeedOptions)"
  - "com.azure.cosmos.implementation.RxDocumentClientImpl.readDatabase(java.lang.String,com.azure.cosmos.implementation.RequestOptions)"
  - "com.azure.cosmos.implementation.RxDocumentClientImpl.readDatabases(com.azure.cosmos.FeedOptions)"
  - "com.azure.cosmos.implementation.RxDocumentClientImpl.readDocument(java.lang.String,com.azure.cosmos.implementation.RequestOptions)"
  - "com.azure.cosmos.implementation.RxDocumentClientImpl.readDocuments(java.lang.String,com.azure.cosmos.FeedOptions)"
  - "com.azure.cosmos.implementation.RxDocumentClientImpl.readFeed(com.azure.cosmos.implementation.RxDocumentServiceRequest)"
  - "com.azure.cosmos.implementation.RxDocumentClientImpl.readOffer(java.lang.String)"
  - "com.azure.cosmos.implementation.RxDocumentClientImpl.readOffers(com.azure.cosmos.FeedOptions)"
  - "com.azure.cosmos.implementation.RxDocumentClientImpl.readPartitionKeyRanges(java.lang.String,com.azure.cosmos.FeedOptions)"
  - "com.azure.cosmos.implementation.RxDocumentClientImpl.readPermission(java.lang.String,com.azure.cosmos.implementation.RequestOptions)"
  - "com.azure.cosmos.implementation.RxDocumentClientImpl.readPermissions(java.lang.String,com.azure.cosmos.FeedOptions)"
  - "com.azure.cosmos.implementation.RxDocumentClientImpl.readStoredProcedure(java.lang.String,com.azure.cosmos.implementation.RequestOptions)"
  - "com.azure.cosmos.implementation.RxDocumentClientImpl.readStoredProcedures(java.lang.String,com.azure.cosmos.FeedOptions)"
  - "com.azure.cosmos.implementation.RxDocumentClientImpl.readTrigger(java.lang.String,com.azure.cosmos.implementation.RequestOptions)"
  - "com.azure.cosmos.implementation.RxDocumentClientImpl.readTriggers(java.lang.String,com.azure.cosmos.FeedOptions)"
  - "com.azure.cosmos.implementation.RxDocumentClientImpl.readUser(java.lang.String,com.azure.cosmos.implementation.RequestOptions)"
  - "com.azure.cosmos.implementation.RxDocumentClientImpl.readUserDefinedFunction(java.lang.String,com.azure.cosmos.implementation.RequestOptions)"
  - "com.azure.cosmos.implementation.RxDocumentClientImpl.readUserDefinedFunctions(java.lang.String,com.azure.cosmos.FeedOptions)"
  - "com.azure.cosmos.implementation.RxDocumentClientImpl.readUsers(java.lang.String,com.azure.cosmos.FeedOptions)"
  - "com.azure.cosmos.implementation.RxDocumentClientImpl.replaceCollection(com.azure.cosmos.implementation.DocumentCollection,com.azure.cosmos.implementation.RequestOptions)"
  - "com.azure.cosmos.implementation.RxDocumentClientImpl.replaceDocument(com.azure.cosmos.implementation.Document,com.azure.cosmos.implementation.RequestOptions)"
  - "com.azure.cosmos.implementation.RxDocumentClientImpl.replaceDocument(java.lang.String,java.lang.Object,com.azure.cosmos.implementation.RequestOptions)"
  - "com.azure.cosmos.implementation.RxDocumentClientImpl.replaceOffer(com.azure.cosmos.implementation.Offer)"
  - "com.azure.cosmos.implementation.RxDocumentClientImpl.replacePermission(com.azure.cosmos.implementation.Permission,com.azure.cosmos.implementation.RequestOptions)"
  - "com.azure.cosmos.implementation.RxDocumentClientImpl.replaceStoredProcedure(com.azure.cosmos.implementation.StoredProcedure,com.azure.cosmos.implementation.RequestOptions)"
  - "com.azure.cosmos.implementation.RxDocumentClientImpl.replaceTrigger(com.azure.cosmos.implementation.Trigger,com.azure.cosmos.implementation.RequestOptions)"
  - "com.azure.cosmos.implementation.RxDocumentClientImpl.replaceUser(com.azure.cosmos.implementation.User,com.azure.cosmos.implementation.RequestOptions)"
  - "com.azure.cosmos.implementation.RxDocumentClientImpl.replaceUserDefinedFunction(com.azure.cosmos.implementation.UserDefinedFunction,com.azure.cosmos.implementation.RequestOptions)"
  - "com.azure.cosmos.implementation.RxDocumentClientImpl.setSession(java.lang.Object)"
  - "com.azure.cosmos.implementation.RxDocumentClientImpl.upsertDocument(java.lang.String,java.lang.Object,com.azure.cosmos.implementation.RequestOptions,boolean)"
  - "com.azure.cosmos.implementation.RxDocumentClientImpl.upsertPermission(java.lang.String,com.azure.cosmos.implementation.Permission,com.azure.cosmos.implementation.RequestOptions)"
  - "com.azure.cosmos.implementation.RxDocumentClientImpl.upsertStoredProcedure(java.lang.String,com.azure.cosmos.implementation.StoredProcedure,com.azure.cosmos.implementation.RequestOptions)"
  - "com.azure.cosmos.implementation.RxDocumentClientImpl.upsertTrigger(java.lang.String,com.azure.cosmos.implementation.Trigger,com.azure.cosmos.implementation.RequestOptions)"
  - "com.azure.cosmos.implementation.RxDocumentClientImpl.upsertUser(java.lang.String,com.azure.cosmos.implementation.User,com.azure.cosmos.implementation.RequestOptions)"
  - "com.azure.cosmos.implementation.RxDocumentClientImpl.upsertUserDefinedFunction(java.lang.String,com.azure.cosmos.implementation.UserDefinedFunction,com.azure.cosmos.implementation.RequestOptions)"
  langs:
  - "java"
  name: "RxDocumentClientImpl"
  nameWithType: "RxDocumentClientImpl"
  fullName: "com.azure.cosmos.implementation.RxDocumentClientImpl"
  type: "Class"
  package: "com.azure.cosmos.implementation"
  summary: "While this class is public, but it is not part of our published public APIs. This is meant to be internally used only by our sdk."
  syntax:
    content: "public class RxDocumentClientImpl implements AsyncDocumentClient, IAuthorizationTokenProvider"
  inheritance:
  - "java.lang.Object"
  implements:
  - "com.azure.cosmos.implementation.AsyncDocumentClient"
  - "com.azure.cosmos.implementation.IAuthorizationTokenProvider"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.azure.cosmos.implementation.RxDocumentClientImpl.<T>readMany(java.util.List<org.apache.commons.lang3.tuple.Pair<java.lang.String,com.azure.cosmos.PartitionKey>>,java.lang.String,com.azure.cosmos.FeedOptions,java.lang.Class<T>)"
  id: "<T>readMany(java.util.List<org.apache.commons.lang3.tuple.Pair<java.lang.String,com.azure.cosmos.PartitionKey>>,java.lang.String,com.azure.cosmos.FeedOptions,java.lang.Class<T>)"
  parent: "com.azure.cosmos.implementation.RxDocumentClientImpl"
  langs:
  - "java"
  name: "<T>readMany(List<Pair<String,PartitionKey>> itemKeyList, String collectionLink, FeedOptions options, Class<T> klass)"
  nameWithType: "RxDocumentClientImpl.<T>readMany(List<Pair<String,PartitionKey>> itemKeyList, String collectionLink, FeedOptions options, Class<T> klass)"
  fullName: "com.azure.cosmos.implementation.RxDocumentClientImpl.<T>readMany(List<Pair<String,PartitionKey>> itemKeyList, String collectionLink, FeedOptions options, Class<T> klass)"
  overload: "com.azure.cosmos.implementation.RxDocumentClientImpl.readMany*"
  type: "Method"
  package: "com.azure.cosmos.implementation"
  syntax:
    content: "public Mono<FeedResponse<T>> <T>readMany(List<Pair<String,PartitionKey>> itemKeyList, String collectionLink, FeedOptions options, Class<T> klass)"
    parameters:
    - id: "itemKeyList"
      type: "java.util.List<org.apache.commons.lang3.tuple.Pair<java.lang.String,com.azure.cosmos.PartitionKey>>"
    - id: "collectionLink"
      type: "java.lang.String"
    - id: "options"
      type: "com.azure.cosmos.FeedOptions"
    - id: "klass"
      type: "java.lang.Class<T>"
    return:
      type: "reactor.core.publisher.Mono<com.azure.cosmos.FeedResponse<T>>"
- uid: "com.azure.cosmos.implementation.RxDocumentClientImpl.RxDocumentClientImpl(java.net.URI,java.lang.String,com.azure.cosmos.ConnectionPolicy,com.azure.cosmos.ConsistencyLevel,com.azure.cosmos.implementation.Configs,com.azure.cosmos.CosmosKeyCredential,boolean)"
  id: "RxDocumentClientImpl(java.net.URI,java.lang.String,com.azure.cosmos.ConnectionPolicy,com.azure.cosmos.ConsistencyLevel,com.azure.cosmos.implementation.Configs,com.azure.cosmos.CosmosKeyCredential,boolean)"
  parent: "com.azure.cosmos.implementation.RxDocumentClientImpl"
  langs:
  - "java"
  name: "RxDocumentClientImpl(URI serviceEndpoint, String masterKeyOrResourceToken, ConnectionPolicy connectionPolicy, ConsistencyLevel consistencyLevel, Configs configs, CosmosKeyCredential cosmosKeyCredential, boolean sessionCapturingOverrideEnabled)"
  nameWithType: "RxDocumentClientImpl.RxDocumentClientImpl(URI serviceEndpoint, String masterKeyOrResourceToken, ConnectionPolicy connectionPolicy, ConsistencyLevel consistencyLevel, Configs configs, CosmosKeyCredential cosmosKeyCredential, boolean sessionCapturingOverrideEnabled)"
  fullName: "com.azure.cosmos.implementation.RxDocumentClientImpl.RxDocumentClientImpl(URI serviceEndpoint, String masterKeyOrResourceToken, ConnectionPolicy connectionPolicy, ConsistencyLevel consistencyLevel, Configs configs, CosmosKeyCredential cosmosKeyCredential, boolean sessionCapturingOverrideEnabled)"
  overload: "com.azure.cosmos.implementation.RxDocumentClientImpl.RxDocumentClientImpl*"
  type: "Constructor"
  package: "com.azure.cosmos.implementation"
  syntax:
    content: " RxDocumentClientImpl(URI serviceEndpoint, String masterKeyOrResourceToken, ConnectionPolicy connectionPolicy, ConsistencyLevel consistencyLevel, Configs configs, CosmosKeyCredential cosmosKeyCredential, boolean sessionCapturingOverrideEnabled)"
    parameters:
    - id: "serviceEndpoint"
      type: "java.net.URI"
    - id: "masterKeyOrResourceToken"
      type: "java.lang.String"
    - id: "connectionPolicy"
      type: "com.azure.cosmos.ConnectionPolicy"
    - id: "consistencyLevel"
      type: "com.azure.cosmos.ConsistencyLevel"
    - id: "configs"
      type: "com.azure.cosmos.implementation.Configs"
    - id: "cosmosKeyCredential"
      type: "com.azure.cosmos.CosmosKeyCredential"
    - id: "sessionCapturingOverrideEnabled"
      type: "boolean"
- uid: "com.azure.cosmos.implementation.RxDocumentClientImpl.RxDocumentClientImpl(java.net.URI,java.lang.String,java.util.List<com.azure.cosmos.implementation.Permission>,com.azure.cosmos.ConnectionPolicy,com.azure.cosmos.ConsistencyLevel,com.azure.cosmos.implementation.Configs,com.azure.cosmos.CosmosKeyCredential,boolean)"
  id: "RxDocumentClientImpl(java.net.URI,java.lang.String,java.util.List<com.azure.cosmos.implementation.Permission>,com.azure.cosmos.ConnectionPolicy,com.azure.cosmos.ConsistencyLevel,com.azure.cosmos.implementation.Configs,com.azure.cosmos.CosmosKeyCredential,boolean)"
  parent: "com.azure.cosmos.implementation.RxDocumentClientImpl"
  langs:
  - "java"
  name: "RxDocumentClientImpl(URI serviceEndpoint, String masterKeyOrResourceToken, List<Permission> permissionFeed, ConnectionPolicy connectionPolicy, ConsistencyLevel consistencyLevel, Configs configs, CosmosKeyCredential cosmosKeyCredential, boolean sessionCapturingOverrideEnabled)"
  nameWithType: "RxDocumentClientImpl.RxDocumentClientImpl(URI serviceEndpoint, String masterKeyOrResourceToken, List<Permission> permissionFeed, ConnectionPolicy connectionPolicy, ConsistencyLevel consistencyLevel, Configs configs, CosmosKeyCredential cosmosKeyCredential, boolean sessionCapturingOverrideEnabled)"
  fullName: "com.azure.cosmos.implementation.RxDocumentClientImpl.RxDocumentClientImpl(URI serviceEndpoint, String masterKeyOrResourceToken, List<Permission> permissionFeed, ConnectionPolicy connectionPolicy, ConsistencyLevel consistencyLevel, Configs configs, CosmosKeyCredential cosmosKeyCredential, boolean sessionCapturingOverrideEnabled)"
  overload: "com.azure.cosmos.implementation.RxDocumentClientImpl.RxDocumentClientImpl*"
  type: "Constructor"
  package: "com.azure.cosmos.implementation"
  syntax:
    content: "private RxDocumentClientImpl(URI serviceEndpoint, String masterKeyOrResourceToken, List<Permission> permissionFeed, ConnectionPolicy connectionPolicy, ConsistencyLevel consistencyLevel, Configs configs, CosmosKeyCredential cosmosKeyCredential, boolean sessionCapturingOverrideEnabled)"
    parameters:
    - id: "serviceEndpoint"
      type: "java.net.URI"
    - id: "masterKeyOrResourceToken"
      type: "java.lang.String"
    - id: "permissionFeed"
      type: "java.util.List<com.azure.cosmos.implementation.Permission>"
    - id: "connectionPolicy"
      type: "com.azure.cosmos.ConnectionPolicy"
    - id: "consistencyLevel"
      type: "com.azure.cosmos.ConsistencyLevel"
    - id: "configs"
      type: "com.azure.cosmos.implementation.Configs"
    - id: "cosmosKeyCredential"
      type: "com.azure.cosmos.CosmosKeyCredential"
    - id: "sessionCapturingOverrideEnabled"
      type: "boolean"
- uid: "com.azure.cosmos.implementation.RxDocumentClientImpl.RxDocumentClientImpl(java.net.URI,java.lang.String,java.util.List<com.azure.cosmos.implementation.Permission>,com.azure.cosmos.ConnectionPolicy,com.azure.cosmos.ConsistencyLevel,com.azure.cosmos.implementation.Configs,com.azure.cosmos.TokenResolver,com.azure.cosmos.CosmosKeyCredential,boolean)"
  id: "RxDocumentClientImpl(java.net.URI,java.lang.String,java.util.List<com.azure.cosmos.implementation.Permission>,com.azure.cosmos.ConnectionPolicy,com.azure.cosmos.ConsistencyLevel,com.azure.cosmos.implementation.Configs,com.azure.cosmos.TokenResolver,com.azure.cosmos.CosmosKeyCredential,boolean)"
  parent: "com.azure.cosmos.implementation.RxDocumentClientImpl"
  langs:
  - "java"
  name: "RxDocumentClientImpl(URI serviceEndpoint, String masterKeyOrResourceToken, List<Permission> permissionFeed, ConnectionPolicy connectionPolicy, ConsistencyLevel consistencyLevel, Configs configs, TokenResolver tokenResolver, CosmosKeyCredential cosmosKeyCredential, boolean sessionCapturingOverride)"
  nameWithType: "RxDocumentClientImpl.RxDocumentClientImpl(URI serviceEndpoint, String masterKeyOrResourceToken, List<Permission> permissionFeed, ConnectionPolicy connectionPolicy, ConsistencyLevel consistencyLevel, Configs configs, TokenResolver tokenResolver, CosmosKeyCredential cosmosKeyCredential, boolean sessionCapturingOverride)"
  fullName: "com.azure.cosmos.implementation.RxDocumentClientImpl.RxDocumentClientImpl(URI serviceEndpoint, String masterKeyOrResourceToken, List<Permission> permissionFeed, ConnectionPolicy connectionPolicy, ConsistencyLevel consistencyLevel, Configs configs, TokenResolver tokenResolver, CosmosKeyCredential cosmosKeyCredential, boolean sessionCapturingOverride)"
  overload: "com.azure.cosmos.implementation.RxDocumentClientImpl.RxDocumentClientImpl*"
  type: "Constructor"
  package: "com.azure.cosmos.implementation"
  syntax:
    content: "public RxDocumentClientImpl(URI serviceEndpoint, String masterKeyOrResourceToken, List<Permission> permissionFeed, ConnectionPolicy connectionPolicy, ConsistencyLevel consistencyLevel, Configs configs, TokenResolver tokenResolver, CosmosKeyCredential cosmosKeyCredential, boolean sessionCapturingOverride)"
    parameters:
    - id: "serviceEndpoint"
      type: "java.net.URI"
    - id: "masterKeyOrResourceToken"
      type: "java.lang.String"
    - id: "permissionFeed"
      type: "java.util.List<com.azure.cosmos.implementation.Permission>"
    - id: "connectionPolicy"
      type: "com.azure.cosmos.ConnectionPolicy"
    - id: "consistencyLevel"
      type: "com.azure.cosmos.ConsistencyLevel"
    - id: "configs"
      type: "com.azure.cosmos.implementation.Configs"
    - id: "tokenResolver"
      type: "com.azure.cosmos.TokenResolver"
    - id: "cosmosKeyCredential"
      type: "com.azure.cosmos.CosmosKeyCredential"
    - id: "sessionCapturingOverride"
      type: "boolean"
- uid: "com.azure.cosmos.implementation.RxDocumentClientImpl.asDatabaseAccountManagerInternal()"
  id: "asDatabaseAccountManagerInternal()"
  parent: "com.azure.cosmos.implementation.RxDocumentClientImpl"
  langs:
  - "java"
  name: "asDatabaseAccountManagerInternal()"
  nameWithType: "RxDocumentClientImpl.asDatabaseAccountManagerInternal()"
  fullName: "com.azure.cosmos.implementation.RxDocumentClientImpl.asDatabaseAccountManagerInternal()"
  overload: "com.azure.cosmos.implementation.RxDocumentClientImpl.asDatabaseAccountManagerInternal*"
  type: "Method"
  package: "com.azure.cosmos.implementation"
  syntax:
    content: " DatabaseAccountManagerInternal asDatabaseAccountManagerInternal()"
    return:
      type: "com.azure.cosmos.implementation.DatabaseAccountManagerInternal"
- uid: "com.azure.cosmos.implementation.RxDocumentClientImpl.captureSessionToken(com.azure.cosmos.implementation.RxDocumentServiceRequest,com.azure.cosmos.implementation.RxDocumentServiceResponse)"
  id: "captureSessionToken(com.azure.cosmos.implementation.RxDocumentServiceRequest,com.azure.cosmos.implementation.RxDocumentServiceResponse)"
  parent: "com.azure.cosmos.implementation.RxDocumentClientImpl"
  langs:
  - "java"
  name: "captureSessionToken(RxDocumentServiceRequest request, RxDocumentServiceResponse response)"
  nameWithType: "RxDocumentClientImpl.captureSessionToken(RxDocumentServiceRequest request, RxDocumentServiceResponse response)"
  fullName: "com.azure.cosmos.implementation.RxDocumentClientImpl.captureSessionToken(RxDocumentServiceRequest request, RxDocumentServiceResponse response)"
  overload: "com.azure.cosmos.implementation.RxDocumentClientImpl.captureSessionToken*"
  type: "Method"
  package: "com.azure.cosmos.implementation"
  syntax:
    content: " void captureSessionToken(RxDocumentServiceRequest request, RxDocumentServiceResponse response)"
    parameters:
    - id: "request"
      type: "com.azure.cosmos.implementation.RxDocumentServiceRequest"
    - id: "response"
      type: "com.azure.cosmos.implementation.RxDocumentServiceResponse"
- uid: "com.azure.cosmos.implementation.RxDocumentClientImpl.close()"
  id: "close()"
  parent: "com.azure.cosmos.implementation.RxDocumentClientImpl"
  langs:
  - "java"
  name: "close()"
  nameWithType: "RxDocumentClientImpl.close()"
  fullName: "com.azure.cosmos.implementation.RxDocumentClientImpl.close()"
  overload: "com.azure.cosmos.implementation.RxDocumentClientImpl.close*"
  type: "Method"
  package: "com.azure.cosmos.implementation"
  syntax:
    content: "public void close()"
- uid: "com.azure.cosmos.implementation.RxDocumentClientImpl.createCollection(java.lang.String,com.azure.cosmos.implementation.DocumentCollection,com.azure.cosmos.implementation.RequestOptions)"
  id: "createCollection(java.lang.String,com.azure.cosmos.implementation.DocumentCollection,com.azure.cosmos.implementation.RequestOptions)"
  parent: "com.azure.cosmos.implementation.RxDocumentClientImpl"
  langs:
  - "java"
  name: "createCollection(String databaseLink, DocumentCollection collection, RequestOptions options)"
  nameWithType: "RxDocumentClientImpl.createCollection(String databaseLink, DocumentCollection collection, RequestOptions options)"
  fullName: "com.azure.cosmos.implementation.RxDocumentClientImpl.createCollection(String databaseLink, DocumentCollection collection, RequestOptions options)"
  overload: "com.azure.cosmos.implementation.RxDocumentClientImpl.createCollection*"
  type: "Method"
  package: "com.azure.cosmos.implementation"
  syntax:
    content: "public Mono<ResourceResponse<DocumentCollection>> createCollection(String databaseLink, DocumentCollection collection, RequestOptions options)"
    parameters:
    - id: "databaseLink"
      type: "java.lang.String"
    - id: "collection"
      type: "com.azure.cosmos.implementation.DocumentCollection"
    - id: "options"
      type: "com.azure.cosmos.implementation.RequestOptions"
    return:
      type: "reactor.core.publisher.Mono<com.azure.cosmos.implementation.ResourceResponse<com.azure.cosmos.implementation.DocumentCollection>>"
- uid: "com.azure.cosmos.implementation.RxDocumentClientImpl.createDatabase(com.azure.cosmos.implementation.Database,com.azure.cosmos.implementation.RequestOptions)"
  id: "createDatabase(com.azure.cosmos.implementation.Database,com.azure.cosmos.implementation.RequestOptions)"
  parent: "com.azure.cosmos.implementation.RxDocumentClientImpl"
  langs:
  - "java"
  name: "createDatabase(Database database, RequestOptions options)"
  nameWithType: "RxDocumentClientImpl.createDatabase(Database database, RequestOptions options)"
  fullName: "com.azure.cosmos.implementation.RxDocumentClientImpl.createDatabase(Database database, RequestOptions options)"
  overload: "com.azure.cosmos.implementation.RxDocumentClientImpl.createDatabase*"
  type: "Method"
  package: "com.azure.cosmos.implementation"
  syntax:
    content: "public Mono<ResourceResponse<Database>> createDatabase(Database database, RequestOptions options)"
    parameters:
    - id: "database"
      type: "com.azure.cosmos.implementation.Database"
    - id: "options"
      type: "com.azure.cosmos.implementation.RequestOptions"
    return:
      type: "reactor.core.publisher.Mono<com.azure.cosmos.implementation.ResourceResponse<com.azure.cosmos.implementation.Database>>"
- uid: "com.azure.cosmos.implementation.RxDocumentClientImpl.createDocument(java.lang.String,java.lang.Object,com.azure.cosmos.implementation.RequestOptions,boolean)"
  id: "createDocument(java.lang.String,java.lang.Object,com.azure.cosmos.implementation.RequestOptions,boolean)"
  parent: "com.azure.cosmos.implementation.RxDocumentClientImpl"
  langs:
  - "java"
  name: "createDocument(String collectionLink, Object document, RequestOptions options, boolean disableAutomaticIdGeneration)"
  nameWithType: "RxDocumentClientImpl.createDocument(String collectionLink, Object document, RequestOptions options, boolean disableAutomaticIdGeneration)"
  fullName: "com.azure.cosmos.implementation.RxDocumentClientImpl.createDocument(String collectionLink, Object document, RequestOptions options, boolean disableAutomaticIdGeneration)"
  overload: "com.azure.cosmos.implementation.RxDocumentClientImpl.createDocument*"
  type: "Method"
  package: "com.azure.cosmos.implementation"
  syntax:
    content: "public Mono<ResourceResponse<Document>> createDocument(String collectionLink, Object document, RequestOptions options, boolean disableAutomaticIdGeneration)"
    parameters:
    - id: "collectionLink"
      type: "java.lang.String"
    - id: "document"
      type: "java.lang.Object"
    - id: "options"
      type: "com.azure.cosmos.implementation.RequestOptions"
    - id: "disableAutomaticIdGeneration"
      type: "boolean"
    return:
      type: "reactor.core.publisher.Mono<com.azure.cosmos.implementation.ResourceResponse<com.azure.cosmos.implementation.Document>>"
- uid: "com.azure.cosmos.implementation.RxDocumentClientImpl.createPermission(java.lang.String,com.azure.cosmos.implementation.Permission,com.azure.cosmos.implementation.RequestOptions)"
  id: "createPermission(java.lang.String,com.azure.cosmos.implementation.Permission,com.azure.cosmos.implementation.RequestOptions)"
  parent: "com.azure.cosmos.implementation.RxDocumentClientImpl"
  langs:
  - "java"
  name: "createPermission(String userLink, Permission permission, RequestOptions options)"
  nameWithType: "RxDocumentClientImpl.createPermission(String userLink, Permission permission, RequestOptions options)"
  fullName: "com.azure.cosmos.implementation.RxDocumentClientImpl.createPermission(String userLink, Permission permission, RequestOptions options)"
  overload: "com.azure.cosmos.implementation.RxDocumentClientImpl.createPermission*"
  type: "Method"
  package: "com.azure.cosmos.implementation"
  syntax:
    content: "public Mono<ResourceResponse<Permission>> createPermission(String userLink, Permission permission, RequestOptions options)"
    parameters:
    - id: "userLink"
      type: "java.lang.String"
    - id: "permission"
      type: "com.azure.cosmos.implementation.Permission"
    - id: "options"
      type: "com.azure.cosmos.implementation.RequestOptions"
    return:
      type: "reactor.core.publisher.Mono<com.azure.cosmos.implementation.ResourceResponse<com.azure.cosmos.implementation.Permission>>"
- uid: "com.azure.cosmos.implementation.RxDocumentClientImpl.createRxGatewayProxy(com.azure.cosmos.implementation.ISessionContainer,com.azure.cosmos.ConsistencyLevel,com.azure.cosmos.implementation.QueryCompatibilityMode,com.azure.cosmos.implementation.UserAgentContainer,com.azure.cosmos.implementation.GlobalEndpointManager,com.azure.cosmos.implementation.http.HttpClient)"
  id: "createRxGatewayProxy(com.azure.cosmos.implementation.ISessionContainer,com.azure.cosmos.ConsistencyLevel,com.azure.cosmos.implementation.QueryCompatibilityMode,com.azure.cosmos.implementation.UserAgentContainer,com.azure.cosmos.implementation.GlobalEndpointManager,com.azure.cosmos.implementation.http.HttpClient)"
  parent: "com.azure.cosmos.implementation.RxDocumentClientImpl"
  langs:
  - "java"
  name: "createRxGatewayProxy(ISessionContainer sessionContainer, ConsistencyLevel consistencyLevel, QueryCompatibilityMode queryCompatibilityMode, UserAgentContainer userAgentContainer, GlobalEndpointManager globalEndpointManager, HttpClient httpClient)"
  nameWithType: "RxDocumentClientImpl.createRxGatewayProxy(ISessionContainer sessionContainer, ConsistencyLevel consistencyLevel, QueryCompatibilityMode queryCompatibilityMode, UserAgentContainer userAgentContainer, GlobalEndpointManager globalEndpointManager, HttpClient httpClient)"
  fullName: "com.azure.cosmos.implementation.RxDocumentClientImpl.createRxGatewayProxy(ISessionContainer sessionContainer, ConsistencyLevel consistencyLevel, QueryCompatibilityMode queryCompatibilityMode, UserAgentContainer userAgentContainer, GlobalEndpointManager globalEndpointManager, HttpClient httpClient)"
  overload: "com.azure.cosmos.implementation.RxDocumentClientImpl.createRxGatewayProxy*"
  type: "Method"
  package: "com.azure.cosmos.implementation"
  syntax:
    content: " RxGatewayStoreModel createRxGatewayProxy(ISessionContainer sessionContainer, ConsistencyLevel consistencyLevel, QueryCompatibilityMode queryCompatibilityMode, UserAgentContainer userAgentContainer, GlobalEndpointManager globalEndpointManager, HttpClient httpClient)"
    parameters:
    - id: "sessionContainer"
      type: "com.azure.cosmos.implementation.ISessionContainer"
    - id: "consistencyLevel"
      type: "com.azure.cosmos.ConsistencyLevel"
    - id: "queryCompatibilityMode"
      type: "com.azure.cosmos.implementation.QueryCompatibilityMode"
    - id: "userAgentContainer"
      type: "com.azure.cosmos.implementation.UserAgentContainer"
    - id: "globalEndpointManager"
      type: "com.azure.cosmos.implementation.GlobalEndpointManager"
    - id: "httpClient"
      type: "com.azure.cosmos.implementation.http.HttpClient"
    return:
      type: "com.azure.cosmos.implementation.RxGatewayStoreModel"
- uid: "com.azure.cosmos.implementation.RxDocumentClientImpl.createStoredProcedure(java.lang.String,com.azure.cosmos.implementation.StoredProcedure,com.azure.cosmos.implementation.RequestOptions)"
  id: "createStoredProcedure(java.lang.String,com.azure.cosmos.implementation.StoredProcedure,com.azure.cosmos.implementation.RequestOptions)"
  parent: "com.azure.cosmos.implementation.RxDocumentClientImpl"
  langs:
  - "java"
  name: "createStoredProcedure(String collectionLink, StoredProcedure storedProcedure, RequestOptions options)"
  nameWithType: "RxDocumentClientImpl.createStoredProcedure(String collectionLink, StoredProcedure storedProcedure, RequestOptions options)"
  fullName: "com.azure.cosmos.implementation.RxDocumentClientImpl.createStoredProcedure(String collectionLink, StoredProcedure storedProcedure, RequestOptions options)"
  overload: "com.azure.cosmos.implementation.RxDocumentClientImpl.createStoredProcedure*"
  type: "Method"
  package: "com.azure.cosmos.implementation"
  syntax:
    content: "public Mono<ResourceResponse<StoredProcedure>> createStoredProcedure(String collectionLink, StoredProcedure storedProcedure, RequestOptions options)"
    parameters:
    - id: "collectionLink"
      type: "java.lang.String"
    - id: "storedProcedure"
      type: "com.azure.cosmos.implementation.StoredProcedure"
    - id: "options"
      type: "com.azure.cosmos.implementation.RequestOptions"
    return:
      type: "reactor.core.publisher.Mono<com.azure.cosmos.implementation.ResourceResponse<com.azure.cosmos.implementation.StoredProcedure>>"
- uid: "com.azure.cosmos.implementation.RxDocumentClientImpl.createTrigger(java.lang.String,com.azure.cosmos.implementation.Trigger,com.azure.cosmos.implementation.RequestOptions)"
  id: "createTrigger(java.lang.String,com.azure.cosmos.implementation.Trigger,com.azure.cosmos.implementation.RequestOptions)"
  parent: "com.azure.cosmos.implementation.RxDocumentClientImpl"
  langs:
  - "java"
  name: "createTrigger(String collectionLink, Trigger trigger, RequestOptions options)"
  nameWithType: "RxDocumentClientImpl.createTrigger(String collectionLink, Trigger trigger, RequestOptions options)"
  fullName: "com.azure.cosmos.implementation.RxDocumentClientImpl.createTrigger(String collectionLink, Trigger trigger, RequestOptions options)"
  overload: "com.azure.cosmos.implementation.RxDocumentClientImpl.createTrigger*"
  type: "Method"
  package: "com.azure.cosmos.implementation"
  syntax:
    content: "public Mono<ResourceResponse<Trigger>> createTrigger(String collectionLink, Trigger trigger, RequestOptions options)"
    parameters:
    - id: "collectionLink"
      type: "java.lang.String"
    - id: "trigger"
      type: "com.azure.cosmos.implementation.Trigger"
    - id: "options"
      type: "com.azure.cosmos.implementation.RequestOptions"
    return:
      type: "reactor.core.publisher.Mono<com.azure.cosmos.implementation.ResourceResponse<com.azure.cosmos.implementation.Trigger>>"
- uid: "com.azure.cosmos.implementation.RxDocumentClientImpl.createUser(java.lang.String,com.azure.cosmos.implementation.User,com.azure.cosmos.implementation.RequestOptions)"
  id: "createUser(java.lang.String,com.azure.cosmos.implementation.User,com.azure.cosmos.implementation.RequestOptions)"
  parent: "com.azure.cosmos.implementation.RxDocumentClientImpl"
  langs:
  - "java"
  name: "createUser(String databaseLink, User user, RequestOptions options)"
  nameWithType: "RxDocumentClientImpl.createUser(String databaseLink, User user, RequestOptions options)"
  fullName: "com.azure.cosmos.implementation.RxDocumentClientImpl.createUser(String databaseLink, User user, RequestOptions options)"
  overload: "com.azure.cosmos.implementation.RxDocumentClientImpl.createUser*"
  type: "Method"
  package: "com.azure.cosmos.implementation"
  syntax:
    content: "public Mono<ResourceResponse<User>> createUser(String databaseLink, User user, RequestOptions options)"
    parameters:
    - id: "databaseLink"
      type: "java.lang.String"
    - id: "user"
      type: "com.azure.cosmos.implementation.User"
    - id: "options"
      type: "com.azure.cosmos.implementation.RequestOptions"
    return:
      type: "reactor.core.publisher.Mono<com.azure.cosmos.implementation.ResourceResponse<com.azure.cosmos.implementation.User>>"
- uid: "com.azure.cosmos.implementation.RxDocumentClientImpl.createUserDefinedFunction(java.lang.String,com.azure.cosmos.implementation.UserDefinedFunction,com.azure.cosmos.implementation.RequestOptions)"
  id: "createUserDefinedFunction(java.lang.String,com.azure.cosmos.implementation.UserDefinedFunction,com.azure.cosmos.implementation.RequestOptions)"
  parent: "com.azure.cosmos.implementation.RxDocumentClientImpl"
  langs:
  - "java"
  name: "createUserDefinedFunction(String collectionLink, UserDefinedFunction udf, RequestOptions options)"
  nameWithType: "RxDocumentClientImpl.createUserDefinedFunction(String collectionLink, UserDefinedFunction udf, RequestOptions options)"
  fullName: "com.azure.cosmos.implementation.RxDocumentClientImpl.createUserDefinedFunction(String collectionLink, UserDefinedFunction udf, RequestOptions options)"
  overload: "com.azure.cosmos.implementation.RxDocumentClientImpl.createUserDefinedFunction*"
  type: "Method"
  package: "com.azure.cosmos.implementation"
  syntax:
    content: "public Mono<ResourceResponse<UserDefinedFunction>> createUserDefinedFunction(String collectionLink, UserDefinedFunction udf, RequestOptions options)"
    parameters:
    - id: "collectionLink"
      type: "java.lang.String"
    - id: "udf"
      type: "com.azure.cosmos.implementation.UserDefinedFunction"
    - id: "options"
      type: "com.azure.cosmos.implementation.RequestOptions"
    return:
      type: "reactor.core.publisher.Mono<com.azure.cosmos.implementation.ResourceResponse<com.azure.cosmos.implementation.UserDefinedFunction>>"
- uid: "com.azure.cosmos.implementation.RxDocumentClientImpl.deleteCollection(java.lang.String,com.azure.cosmos.implementation.RequestOptions)"
  id: "deleteCollection(java.lang.String,com.azure.cosmos.implementation.RequestOptions)"
  parent: "com.azure.cosmos.implementation.RxDocumentClientImpl"
  langs:
  - "java"
  name: "deleteCollection(String collectionLink, RequestOptions options)"
  nameWithType: "RxDocumentClientImpl.deleteCollection(String collectionLink, RequestOptions options)"
  fullName: "com.azure.cosmos.implementation.RxDocumentClientImpl.deleteCollection(String collectionLink, RequestOptions options)"
  overload: "com.azure.cosmos.implementation.RxDocumentClientImpl.deleteCollection*"
  type: "Method"
  package: "com.azure.cosmos.implementation"
  syntax:
    content: "public Mono<ResourceResponse<DocumentCollection>> deleteCollection(String collectionLink, RequestOptions options)"
    parameters:
    - id: "collectionLink"
      type: "java.lang.String"
    - id: "options"
      type: "com.azure.cosmos.implementation.RequestOptions"
    return:
      type: "reactor.core.publisher.Mono<com.azure.cosmos.implementation.ResourceResponse<com.azure.cosmos.implementation.DocumentCollection>>"
- uid: "com.azure.cosmos.implementation.RxDocumentClientImpl.deleteConflict(java.lang.String,com.azure.cosmos.implementation.RequestOptions)"
  id: "deleteConflict(java.lang.String,com.azure.cosmos.implementation.RequestOptions)"
  parent: "com.azure.cosmos.implementation.RxDocumentClientImpl"
  langs:
  - "java"
  name: "deleteConflict(String conflictLink, RequestOptions options)"
  nameWithType: "RxDocumentClientImpl.deleteConflict(String conflictLink, RequestOptions options)"
  fullName: "com.azure.cosmos.implementation.RxDocumentClientImpl.deleteConflict(String conflictLink, RequestOptions options)"
  overload: "com.azure.cosmos.implementation.RxDocumentClientImpl.deleteConflict*"
  type: "Method"
  package: "com.azure.cosmos.implementation"
  syntax:
    content: "public Mono<ResourceResponse<Conflict>> deleteConflict(String conflictLink, RequestOptions options)"
    parameters:
    - id: "conflictLink"
      type: "java.lang.String"
    - id: "options"
      type: "com.azure.cosmos.implementation.RequestOptions"
    return:
      type: "reactor.core.publisher.Mono<com.azure.cosmos.implementation.ResourceResponse<com.azure.cosmos.implementation.Conflict>>"
- uid: "com.azure.cosmos.implementation.RxDocumentClientImpl.deleteDatabase(java.lang.String,com.azure.cosmos.implementation.RequestOptions)"
  id: "deleteDatabase(java.lang.String,com.azure.cosmos.implementation.RequestOptions)"
  parent: "com.azure.cosmos.implementation.RxDocumentClientImpl"
  langs:
  - "java"
  name: "deleteDatabase(String databaseLink, RequestOptions options)"
  nameWithType: "RxDocumentClientImpl.deleteDatabase(String databaseLink, RequestOptions options)"
  fullName: "com.azure.cosmos.implementation.RxDocumentClientImpl.deleteDatabase(String databaseLink, RequestOptions options)"
  overload: "com.azure.cosmos.implementation.RxDocumentClientImpl.deleteDatabase*"
  type: "Method"
  package: "com.azure.cosmos.implementation"
  syntax:
    content: "public Mono<ResourceResponse<Database>> deleteDatabase(String databaseLink, RequestOptions options)"
    parameters:
    - id: "databaseLink"
      type: "java.lang.String"
    - id: "options"
      type: "com.azure.cosmos.implementation.RequestOptions"
    return:
      type: "reactor.core.publisher.Mono<com.azure.cosmos.implementation.ResourceResponse<com.azure.cosmos.implementation.Database>>"
- uid: "com.azure.cosmos.implementation.RxDocumentClientImpl.deleteDocument(java.lang.String,com.azure.cosmos.implementation.RequestOptions)"
  id: "deleteDocument(java.lang.String,com.azure.cosmos.implementation.RequestOptions)"
  parent: "com.azure.cosmos.implementation.RxDocumentClientImpl"
  langs:
  - "java"
  name: "deleteDocument(String documentLink, RequestOptions options)"
  nameWithType: "RxDocumentClientImpl.deleteDocument(String documentLink, RequestOptions options)"
  fullName: "com.azure.cosmos.implementation.RxDocumentClientImpl.deleteDocument(String documentLink, RequestOptions options)"
  overload: "com.azure.cosmos.implementation.RxDocumentClientImpl.deleteDocument*"
  type: "Method"
  package: "com.azure.cosmos.implementation"
  syntax:
    content: "public Mono<ResourceResponse<Document>> deleteDocument(String documentLink, RequestOptions options)"
    parameters:
    - id: "documentLink"
      type: "java.lang.String"
    - id: "options"
      type: "com.azure.cosmos.implementation.RequestOptions"
    return:
      type: "reactor.core.publisher.Mono<com.azure.cosmos.implementation.ResourceResponse<com.azure.cosmos.implementation.Document>>"
- uid: "com.azure.cosmos.implementation.RxDocumentClientImpl.deletePermission(java.lang.String,com.azure.cosmos.implementation.RequestOptions)"
  id: "deletePermission(java.lang.String,com.azure.cosmos.implementation.RequestOptions)"
  parent: "com.azure.cosmos.implementation.RxDocumentClientImpl"
  langs:
  - "java"
  name: "deletePermission(String permissionLink, RequestOptions options)"
  nameWithType: "RxDocumentClientImpl.deletePermission(String permissionLink, RequestOptions options)"
  fullName: "com.azure.cosmos.implementation.RxDocumentClientImpl.deletePermission(String permissionLink, RequestOptions options)"
  overload: "com.azure.cosmos.implementation.RxDocumentClientImpl.deletePermission*"
  type: "Method"
  package: "com.azure.cosmos.implementation"
  syntax:
    content: "public Mono<ResourceResponse<Permission>> deletePermission(String permissionLink, RequestOptions options)"
    parameters:
    - id: "permissionLink"
      type: "java.lang.String"
    - id: "options"
      type: "com.azure.cosmos.implementation.RequestOptions"
    return:
      type: "reactor.core.publisher.Mono<com.azure.cosmos.implementation.ResourceResponse<com.azure.cosmos.implementation.Permission>>"
- uid: "com.azure.cosmos.implementation.RxDocumentClientImpl.deleteStoredProcedure(java.lang.String,com.azure.cosmos.implementation.RequestOptions)"
  id: "deleteStoredProcedure(java.lang.String,com.azure.cosmos.implementation.RequestOptions)"
  parent: "com.azure.cosmos.implementation.RxDocumentClientImpl"
  langs:
  - "java"
  name: "deleteStoredProcedure(String storedProcedureLink, RequestOptions options)"
  nameWithType: "RxDocumentClientImpl.deleteStoredProcedure(String storedProcedureLink, RequestOptions options)"
  fullName: "com.azure.cosmos.implementation.RxDocumentClientImpl.deleteStoredProcedure(String storedProcedureLink, RequestOptions options)"
  overload: "com.azure.cosmos.implementation.RxDocumentClientImpl.deleteStoredProcedure*"
  type: "Method"
  package: "com.azure.cosmos.implementation"
  syntax:
    content: "public Mono<ResourceResponse<StoredProcedure>> deleteStoredProcedure(String storedProcedureLink, RequestOptions options)"
    parameters:
    - id: "storedProcedureLink"
      type: "java.lang.String"
    - id: "options"
      type: "com.azure.cosmos.implementation.RequestOptions"
    return:
      type: "reactor.core.publisher.Mono<com.azure.cosmos.implementation.ResourceResponse<com.azure.cosmos.implementation.StoredProcedure>>"
- uid: "com.azure.cosmos.implementation.RxDocumentClientImpl.deleteTrigger(java.lang.String,com.azure.cosmos.implementation.RequestOptions)"
  id: "deleteTrigger(java.lang.String,com.azure.cosmos.implementation.RequestOptions)"
  parent: "com.azure.cosmos.implementation.RxDocumentClientImpl"
  langs:
  - "java"
  name: "deleteTrigger(String triggerLink, RequestOptions options)"
  nameWithType: "RxDocumentClientImpl.deleteTrigger(String triggerLink, RequestOptions options)"
  fullName: "com.azure.cosmos.implementation.RxDocumentClientImpl.deleteTrigger(String triggerLink, RequestOptions options)"
  overload: "com.azure.cosmos.implementation.RxDocumentClientImpl.deleteTrigger*"
  type: "Method"
  package: "com.azure.cosmos.implementation"
  syntax:
    content: "public Mono<ResourceResponse<Trigger>> deleteTrigger(String triggerLink, RequestOptions options)"
    parameters:
    - id: "triggerLink"
      type: "java.lang.String"
    - id: "options"
      type: "com.azure.cosmos.implementation.RequestOptions"
    return:
      type: "reactor.core.publisher.Mono<com.azure.cosmos.implementation.ResourceResponse<com.azure.cosmos.implementation.Trigger>>"
- uid: "com.azure.cosmos.implementation.RxDocumentClientImpl.deleteUser(java.lang.String,com.azure.cosmos.implementation.RequestOptions)"
  id: "deleteUser(java.lang.String,com.azure.cosmos.implementation.RequestOptions)"
  parent: "com.azure.cosmos.implementation.RxDocumentClientImpl"
  langs:
  - "java"
  name: "deleteUser(String userLink, RequestOptions options)"
  nameWithType: "RxDocumentClientImpl.deleteUser(String userLink, RequestOptions options)"
  fullName: "com.azure.cosmos.implementation.RxDocumentClientImpl.deleteUser(String userLink, RequestOptions options)"
  overload: "com.azure.cosmos.implementation.RxDocumentClientImpl.deleteUser*"
  type: "Method"
  package: "com.azure.cosmos.implementation"
  syntax:
    content: "public Mono<ResourceResponse<User>> deleteUser(String userLink, RequestOptions options)"
    parameters:
    - id: "userLink"
      type: "java.lang.String"
    - id: "options"
      type: "com.azure.cosmos.implementation.RequestOptions"
    return:
      type: "reactor.core.publisher.Mono<com.azure.cosmos.implementation.ResourceResponse<com.azure.cosmos.implementation.User>>"
- uid: "com.azure.cosmos.implementation.RxDocumentClientImpl.deleteUserDefinedFunction(java.lang.String,com.azure.cosmos.implementation.RequestOptions)"
  id: "deleteUserDefinedFunction(java.lang.String,com.azure.cosmos.implementation.RequestOptions)"
  parent: "com.azure.cosmos.implementation.RxDocumentClientImpl"
  langs:
  - "java"
  name: "deleteUserDefinedFunction(String udfLink, RequestOptions options)"
  nameWithType: "RxDocumentClientImpl.deleteUserDefinedFunction(String udfLink, RequestOptions options)"
  fullName: "com.azure.cosmos.implementation.RxDocumentClientImpl.deleteUserDefinedFunction(String udfLink, RequestOptions options)"
  overload: "com.azure.cosmos.implementation.RxDocumentClientImpl.deleteUserDefinedFunction*"
  type: "Method"
  package: "com.azure.cosmos.implementation"
  syntax:
    content: "public Mono<ResourceResponse<UserDefinedFunction>> deleteUserDefinedFunction(String udfLink, RequestOptions options)"
    parameters:
    - id: "udfLink"
      type: "java.lang.String"
    - id: "options"
      type: "com.azure.cosmos.implementation.RequestOptions"
    return:
      type: "reactor.core.publisher.Mono<com.azure.cosmos.implementation.ResourceResponse<com.azure.cosmos.implementation.UserDefinedFunction>>"
- uid: "com.azure.cosmos.implementation.RxDocumentClientImpl.executeStoredProcedure(java.lang.String,com.azure.cosmos.implementation.RequestOptions,java.lang.Object[])"
  id: "executeStoredProcedure(java.lang.String,com.azure.cosmos.implementation.RequestOptions,java.lang.Object[])"
  parent: "com.azure.cosmos.implementation.RxDocumentClientImpl"
  langs:
  - "java"
  name: "executeStoredProcedure(String storedProcedureLink, RequestOptions options, Object[] procedureParams)"
  nameWithType: "RxDocumentClientImpl.executeStoredProcedure(String storedProcedureLink, RequestOptions options, Object[] procedureParams)"
  fullName: "com.azure.cosmos.implementation.RxDocumentClientImpl.executeStoredProcedure(String storedProcedureLink, RequestOptions options, Object[] procedureParams)"
  overload: "com.azure.cosmos.implementation.RxDocumentClientImpl.executeStoredProcedure*"
  type: "Method"
  package: "com.azure.cosmos.implementation"
  syntax:
    content: "public Mono<StoredProcedureResponse> executeStoredProcedure(String storedProcedureLink, RequestOptions options, Object[] procedureParams)"
    parameters:
    - id: "storedProcedureLink"
      type: "java.lang.String"
    - id: "options"
      type: "com.azure.cosmos.implementation.RequestOptions"
    - id: "procedureParams"
      type: "java.lang.Object[]"
    return:
      type: "reactor.core.publisher.Mono<com.azure.cosmos.implementation.StoredProcedureResponse>"
- uid: "com.azure.cosmos.implementation.RxDocumentClientImpl.executeStoredProcedure(java.lang.String,java.lang.Object[])"
  id: "executeStoredProcedure(java.lang.String,java.lang.Object[])"
  parent: "com.azure.cosmos.implementation.RxDocumentClientImpl"
  langs:
  - "java"
  name: "executeStoredProcedure(String storedProcedureLink, Object[] procedureParams)"
  nameWithType: "RxDocumentClientImpl.executeStoredProcedure(String storedProcedureLink, Object[] procedureParams)"
  fullName: "com.azure.cosmos.implementation.RxDocumentClientImpl.executeStoredProcedure(String storedProcedureLink, Object[] procedureParams)"
  overload: "com.azure.cosmos.implementation.RxDocumentClientImpl.executeStoredProcedure*"
  type: "Method"
  package: "com.azure.cosmos.implementation"
  syntax:
    content: "public Mono<StoredProcedureResponse> executeStoredProcedure(String storedProcedureLink, Object[] procedureParams)"
    parameters:
    - id: "storedProcedureLink"
      type: "java.lang.String"
    - id: "procedureParams"
      type: "java.lang.Object[]"
    return:
      type: "reactor.core.publisher.Mono<com.azure.cosmos.implementation.StoredProcedureResponse>"
- uid: "com.azure.cosmos.implementation.RxDocumentClientImpl.getConnectionPolicy()"
  id: "getConnectionPolicy()"
  parent: "com.azure.cosmos.implementation.RxDocumentClientImpl"
  langs:
  - "java"
  name: "getConnectionPolicy()"
  nameWithType: "RxDocumentClientImpl.getConnectionPolicy()"
  fullName: "com.azure.cosmos.implementation.RxDocumentClientImpl.getConnectionPolicy()"
  overload: "com.azure.cosmos.implementation.RxDocumentClientImpl.getConnectionPolicy*"
  type: "Method"
  package: "com.azure.cosmos.implementation"
  syntax:
    content: "public ConnectionPolicy getConnectionPolicy()"
    return:
      type: "com.azure.cosmos.ConnectionPolicy"
- uid: "com.azure.cosmos.implementation.RxDocumentClientImpl.getDatabaseAccount()"
  id: "getDatabaseAccount()"
  parent: "com.azure.cosmos.implementation.RxDocumentClientImpl"
  langs:
  - "java"
  name: "getDatabaseAccount()"
  nameWithType: "RxDocumentClientImpl.getDatabaseAccount()"
  fullName: "com.azure.cosmos.implementation.RxDocumentClientImpl.getDatabaseAccount()"
  overload: "com.azure.cosmos.implementation.RxDocumentClientImpl.getDatabaseAccount*"
  type: "Method"
  package: "com.azure.cosmos.implementation"
  syntax:
    content: "public Mono<DatabaseAccount> getDatabaseAccount()"
    return:
      type: "reactor.core.publisher.Mono<com.azure.cosmos.DatabaseAccount>"
- uid: "com.azure.cosmos.implementation.RxDocumentClientImpl.getDatabaseAccountFromEndpoint(java.net.URI)"
  id: "getDatabaseAccountFromEndpoint(java.net.URI)"
  parent: "com.azure.cosmos.implementation.RxDocumentClientImpl"
  langs:
  - "java"
  name: "getDatabaseAccountFromEndpoint(URI endpoint)"
  nameWithType: "RxDocumentClientImpl.getDatabaseAccountFromEndpoint(URI endpoint)"
  fullName: "com.azure.cosmos.implementation.RxDocumentClientImpl.getDatabaseAccountFromEndpoint(URI endpoint)"
  overload: "com.azure.cosmos.implementation.RxDocumentClientImpl.getDatabaseAccountFromEndpoint*"
  type: "Method"
  package: "com.azure.cosmos.implementation"
  syntax:
    content: "public Flux<DatabaseAccount> getDatabaseAccountFromEndpoint(URI endpoint)"
    parameters:
    - id: "endpoint"
      type: "java.net.URI"
    return:
      type: "reactor.core.publisher.Flux<com.azure.cosmos.DatabaseAccount>"
- uid: "com.azure.cosmos.implementation.RxDocumentClientImpl.getPartitionKeyRangeCache()"
  id: "getPartitionKeyRangeCache()"
  parent: "com.azure.cosmos.implementation.RxDocumentClientImpl"
  langs:
  - "java"
  name: "getPartitionKeyRangeCache()"
  nameWithType: "RxDocumentClientImpl.getPartitionKeyRangeCache()"
  fullName: "com.azure.cosmos.implementation.RxDocumentClientImpl.getPartitionKeyRangeCache()"
  overload: "com.azure.cosmos.implementation.RxDocumentClientImpl.getPartitionKeyRangeCache*"
  type: "Method"
  package: "com.azure.cosmos.implementation"
  syntax:
    content: "public RxPartitionKeyRangeCache getPartitionKeyRangeCache()"
    return:
      type: "com.azure.cosmos.implementation.caches.RxPartitionKeyRangeCache"
- uid: "com.azure.cosmos.implementation.RxDocumentClientImpl.getReadEndpoint()"
  id: "getReadEndpoint()"
  parent: "com.azure.cosmos.implementation.RxDocumentClientImpl"
  langs:
  - "java"
  name: "getReadEndpoint()"
  nameWithType: "RxDocumentClientImpl.getReadEndpoint()"
  fullName: "com.azure.cosmos.implementation.RxDocumentClientImpl.getReadEndpoint()"
  overload: "com.azure.cosmos.implementation.RxDocumentClientImpl.getReadEndpoint*"
  type: "Method"
  package: "com.azure.cosmos.implementation"
  syntax:
    content: "public URI getReadEndpoint()"
    return:
      type: "java.net.URI"
- uid: "com.azure.cosmos.implementation.RxDocumentClientImpl.getServiceEndpoint()"
  id: "getServiceEndpoint()"
  parent: "com.azure.cosmos.implementation.RxDocumentClientImpl"
  langs:
  - "java"
  name: "getServiceEndpoint()"
  nameWithType: "RxDocumentClientImpl.getServiceEndpoint()"
  fullName: "com.azure.cosmos.implementation.RxDocumentClientImpl.getServiceEndpoint()"
  overload: "com.azure.cosmos.implementation.RxDocumentClientImpl.getServiceEndpoint*"
  type: "Method"
  package: "com.azure.cosmos.implementation"
  syntax:
    content: "public URI getServiceEndpoint()"
    return:
      type: "java.net.URI"
- uid: "com.azure.cosmos.implementation.RxDocumentClientImpl.getSession()"
  id: "getSession()"
  parent: "com.azure.cosmos.implementation.RxDocumentClientImpl"
  langs:
  - "java"
  name: "getSession()"
  nameWithType: "RxDocumentClientImpl.getSession()"
  fullName: "com.azure.cosmos.implementation.RxDocumentClientImpl.getSession()"
  overload: "com.azure.cosmos.implementation.RxDocumentClientImpl.getSession*"
  type: "Method"
  package: "com.azure.cosmos.implementation"
  syntax:
    content: "public Object getSession()"
    return:
      type: "java.lang.Object"
- uid: "com.azure.cosmos.implementation.RxDocumentClientImpl.getUserAuthorizationToken(java.lang.String,com.azure.cosmos.implementation.ResourceType,com.azure.cosmos.RequestVerb,java.util.Map<java.lang.String,java.lang.String>,com.azure.cosmos.implementation.AuthorizationTokenType,java.util.Map<java.lang.String,java.lang.Object>)"
  id: "getUserAuthorizationToken(java.lang.String,com.azure.cosmos.implementation.ResourceType,com.azure.cosmos.RequestVerb,java.util.Map<java.lang.String,java.lang.String>,com.azure.cosmos.implementation.AuthorizationTokenType,java.util.Map<java.lang.String,java.lang.Object>)"
  parent: "com.azure.cosmos.implementation.RxDocumentClientImpl"
  langs:
  - "java"
  name: "getUserAuthorizationToken(String resourceName, ResourceType resourceType, RequestVerb requestVerb, Map<String,String> headers, AuthorizationTokenType tokenType, Map<String,Object> properties)"
  nameWithType: "RxDocumentClientImpl.getUserAuthorizationToken(String resourceName, ResourceType resourceType, RequestVerb requestVerb, Map<String,String> headers, AuthorizationTokenType tokenType, Map<String,Object> properties)"
  fullName: "com.azure.cosmos.implementation.RxDocumentClientImpl.getUserAuthorizationToken(String resourceName, ResourceType resourceType, RequestVerb requestVerb, Map<String,String> headers, AuthorizationTokenType tokenType, Map<String,Object> properties)"
  overload: "com.azure.cosmos.implementation.RxDocumentClientImpl.getUserAuthorizationToken*"
  type: "Method"
  package: "com.azure.cosmos.implementation"
  syntax:
    content: "public String getUserAuthorizationToken(String resourceName, ResourceType resourceType, RequestVerb requestVerb, Map<String,String> headers, AuthorizationTokenType tokenType, Map<String,Object> properties)"
    parameters:
    - id: "resourceName"
      type: "java.lang.String"
    - id: "resourceType"
      type: "com.azure.cosmos.implementation.ResourceType"
    - id: "requestVerb"
      type: "com.azure.cosmos.RequestVerb"
    - id: "headers"
      type: "java.util.Map<java.lang.String,java.lang.String>"
    - id: "tokenType"
      type: "com.azure.cosmos.implementation.AuthorizationTokenType"
    - id: "properties"
      type: "java.util.Map<java.lang.String,java.lang.Object>"
    return:
      type: "java.lang.String"
- uid: "com.azure.cosmos.implementation.RxDocumentClientImpl.getWriteEndpoint()"
  id: "getWriteEndpoint()"
  parent: "com.azure.cosmos.implementation.RxDocumentClientImpl"
  langs:
  - "java"
  name: "getWriteEndpoint()"
  nameWithType: "RxDocumentClientImpl.getWriteEndpoint()"
  fullName: "com.azure.cosmos.implementation.RxDocumentClientImpl.getWriteEndpoint()"
  overload: "com.azure.cosmos.implementation.RxDocumentClientImpl.getWriteEndpoint*"
  type: "Method"
  package: "com.azure.cosmos.implementation"
  syntax:
    content: "public URI getWriteEndpoint()"
    return:
      type: "java.net.URI"
- uid: "com.azure.cosmos.implementation.RxDocumentClientImpl.init()"
  id: "init()"
  parent: "com.azure.cosmos.implementation.RxDocumentClientImpl"
  langs:
  - "java"
  name: "init()"
  nameWithType: "RxDocumentClientImpl.init()"
  fullName: "com.azure.cosmos.implementation.RxDocumentClientImpl.init()"
  overload: "com.azure.cosmos.implementation.RxDocumentClientImpl.init*"
  type: "Method"
  package: "com.azure.cosmos.implementation"
  syntax:
    content: "public void init()"
- uid: "com.azure.cosmos.implementation.RxDocumentClientImpl.queryCollections(java.lang.String,com.azure.cosmos.SqlQuerySpec,com.azure.cosmos.FeedOptions)"
  id: "queryCollections(java.lang.String,com.azure.cosmos.SqlQuerySpec,com.azure.cosmos.FeedOptions)"
  parent: "com.azure.cosmos.implementation.RxDocumentClientImpl"
  langs:
  - "java"
  name: "queryCollections(String databaseLink, SqlQuerySpec querySpec, FeedOptions options)"
  nameWithType: "RxDocumentClientImpl.queryCollections(String databaseLink, SqlQuerySpec querySpec, FeedOptions options)"
  fullName: "com.azure.cosmos.implementation.RxDocumentClientImpl.queryCollections(String databaseLink, SqlQuerySpec querySpec, FeedOptions options)"
  overload: "com.azure.cosmos.implementation.RxDocumentClientImpl.queryCollections*"
  type: "Method"
  package: "com.azure.cosmos.implementation"
  syntax:
    content: "public Flux<FeedResponse<DocumentCollection>> queryCollections(String databaseLink, SqlQuerySpec querySpec, FeedOptions options)"
    parameters:
    - id: "databaseLink"
      type: "java.lang.String"
    - id: "querySpec"
      type: "com.azure.cosmos.SqlQuerySpec"
    - id: "options"
      type: "com.azure.cosmos.FeedOptions"
    return:
      type: "reactor.core.publisher.Flux<com.azure.cosmos.FeedResponse<com.azure.cosmos.implementation.DocumentCollection>>"
- uid: "com.azure.cosmos.implementation.RxDocumentClientImpl.queryCollections(java.lang.String,java.lang.String,com.azure.cosmos.FeedOptions)"
  id: "queryCollections(java.lang.String,java.lang.String,com.azure.cosmos.FeedOptions)"
  parent: "com.azure.cosmos.implementation.RxDocumentClientImpl"
  langs:
  - "java"
  name: "queryCollections(String databaseLink, String query, FeedOptions options)"
  nameWithType: "RxDocumentClientImpl.queryCollections(String databaseLink, String query, FeedOptions options)"
  fullName: "com.azure.cosmos.implementation.RxDocumentClientImpl.queryCollections(String databaseLink, String query, FeedOptions options)"
  overload: "com.azure.cosmos.implementation.RxDocumentClientImpl.queryCollections*"
  type: "Method"
  package: "com.azure.cosmos.implementation"
  syntax:
    content: "public Flux<FeedResponse<DocumentCollection>> queryCollections(String databaseLink, String query, FeedOptions options)"
    parameters:
    - id: "databaseLink"
      type: "java.lang.String"
    - id: "query"
      type: "java.lang.String"
    - id: "options"
      type: "com.azure.cosmos.FeedOptions"
    return:
      type: "reactor.core.publisher.Flux<com.azure.cosmos.FeedResponse<com.azure.cosmos.implementation.DocumentCollection>>"
- uid: "com.azure.cosmos.implementation.RxDocumentClientImpl.queryConflicts(java.lang.String,com.azure.cosmos.SqlQuerySpec,com.azure.cosmos.FeedOptions)"
  id: "queryConflicts(java.lang.String,com.azure.cosmos.SqlQuerySpec,com.azure.cosmos.FeedOptions)"
  parent: "com.azure.cosmos.implementation.RxDocumentClientImpl"
  langs:
  - "java"
  name: "queryConflicts(String collectionLink, SqlQuerySpec querySpec, FeedOptions options)"
  nameWithType: "RxDocumentClientImpl.queryConflicts(String collectionLink, SqlQuerySpec querySpec, FeedOptions options)"
  fullName: "com.azure.cosmos.implementation.RxDocumentClientImpl.queryConflicts(String collectionLink, SqlQuerySpec querySpec, FeedOptions options)"
  overload: "com.azure.cosmos.implementation.RxDocumentClientImpl.queryConflicts*"
  type: "Method"
  package: "com.azure.cosmos.implementation"
  syntax:
    content: "public Flux<FeedResponse<Conflict>> queryConflicts(String collectionLink, SqlQuerySpec querySpec, FeedOptions options)"
    parameters:
    - id: "collectionLink"
      type: "java.lang.String"
    - id: "querySpec"
      type: "com.azure.cosmos.SqlQuerySpec"
    - id: "options"
      type: "com.azure.cosmos.FeedOptions"
    return:
      type: "reactor.core.publisher.Flux<com.azure.cosmos.FeedResponse<com.azure.cosmos.implementation.Conflict>>"
- uid: "com.azure.cosmos.implementation.RxDocumentClientImpl.queryConflicts(java.lang.String,java.lang.String,com.azure.cosmos.FeedOptions)"
  id: "queryConflicts(java.lang.String,java.lang.String,com.azure.cosmos.FeedOptions)"
  parent: "com.azure.cosmos.implementation.RxDocumentClientImpl"
  langs:
  - "java"
  name: "queryConflicts(String collectionLink, String query, FeedOptions options)"
  nameWithType: "RxDocumentClientImpl.queryConflicts(String collectionLink, String query, FeedOptions options)"
  fullName: "com.azure.cosmos.implementation.RxDocumentClientImpl.queryConflicts(String collectionLink, String query, FeedOptions options)"
  overload: "com.azure.cosmos.implementation.RxDocumentClientImpl.queryConflicts*"
  type: "Method"
  package: "com.azure.cosmos.implementation"
  syntax:
    content: "public Flux<FeedResponse<Conflict>> queryConflicts(String collectionLink, String query, FeedOptions options)"
    parameters:
    - id: "collectionLink"
      type: "java.lang.String"
    - id: "query"
      type: "java.lang.String"
    - id: "options"
      type: "com.azure.cosmos.FeedOptions"
    return:
      type: "reactor.core.publisher.Flux<com.azure.cosmos.FeedResponse<com.azure.cosmos.implementation.Conflict>>"
- uid: "com.azure.cosmos.implementation.RxDocumentClientImpl.queryDatabases(com.azure.cosmos.SqlQuerySpec,com.azure.cosmos.FeedOptions)"
  id: "queryDatabases(com.azure.cosmos.SqlQuerySpec,com.azure.cosmos.FeedOptions)"
  parent: "com.azure.cosmos.implementation.RxDocumentClientImpl"
  langs:
  - "java"
  name: "queryDatabases(SqlQuerySpec querySpec, FeedOptions options)"
  nameWithType: "RxDocumentClientImpl.queryDatabases(SqlQuerySpec querySpec, FeedOptions options)"
  fullName: "com.azure.cosmos.implementation.RxDocumentClientImpl.queryDatabases(SqlQuerySpec querySpec, FeedOptions options)"
  overload: "com.azure.cosmos.implementation.RxDocumentClientImpl.queryDatabases*"
  type: "Method"
  package: "com.azure.cosmos.implementation"
  syntax:
    content: "public Flux<FeedResponse<Database>> queryDatabases(SqlQuerySpec querySpec, FeedOptions options)"
    parameters:
    - id: "querySpec"
      type: "com.azure.cosmos.SqlQuerySpec"
    - id: "options"
      type: "com.azure.cosmos.FeedOptions"
    return:
      type: "reactor.core.publisher.Flux<com.azure.cosmos.FeedResponse<com.azure.cosmos.implementation.Database>>"
- uid: "com.azure.cosmos.implementation.RxDocumentClientImpl.queryDatabases(java.lang.String,com.azure.cosmos.FeedOptions)"
  id: "queryDatabases(java.lang.String,com.azure.cosmos.FeedOptions)"
  parent: "com.azure.cosmos.implementation.RxDocumentClientImpl"
  langs:
  - "java"
  name: "queryDatabases(String query, FeedOptions options)"
  nameWithType: "RxDocumentClientImpl.queryDatabases(String query, FeedOptions options)"
  fullName: "com.azure.cosmos.implementation.RxDocumentClientImpl.queryDatabases(String query, FeedOptions options)"
  overload: "com.azure.cosmos.implementation.RxDocumentClientImpl.queryDatabases*"
  type: "Method"
  package: "com.azure.cosmos.implementation"
  syntax:
    content: "public Flux<FeedResponse<Database>> queryDatabases(String query, FeedOptions options)"
    parameters:
    - id: "query"
      type: "java.lang.String"
    - id: "options"
      type: "com.azure.cosmos.FeedOptions"
    return:
      type: "reactor.core.publisher.Flux<com.azure.cosmos.FeedResponse<com.azure.cosmos.implementation.Database>>"
- uid: "com.azure.cosmos.implementation.RxDocumentClientImpl.queryDocumentChangeFeed(java.lang.String,com.azure.cosmos.ChangeFeedOptions)"
  id: "queryDocumentChangeFeed(java.lang.String,com.azure.cosmos.ChangeFeedOptions)"
  parent: "com.azure.cosmos.implementation.RxDocumentClientImpl"
  langs:
  - "java"
  name: "queryDocumentChangeFeed(String collectionLink, ChangeFeedOptions changeFeedOptions)"
  nameWithType: "RxDocumentClientImpl.queryDocumentChangeFeed(String collectionLink, ChangeFeedOptions changeFeedOptions)"
  fullName: "com.azure.cosmos.implementation.RxDocumentClientImpl.queryDocumentChangeFeed(String collectionLink, ChangeFeedOptions changeFeedOptions)"
  overload: "com.azure.cosmos.implementation.RxDocumentClientImpl.queryDocumentChangeFeed*"
  type: "Method"
  package: "com.azure.cosmos.implementation"
  syntax:
    content: "public Flux<FeedResponse<Document>> queryDocumentChangeFeed(String collectionLink, ChangeFeedOptions changeFeedOptions)"
    parameters:
    - id: "collectionLink"
      type: "java.lang.String"
    - id: "changeFeedOptions"
      type: "com.azure.cosmos.ChangeFeedOptions"
    return:
      type: "reactor.core.publisher.Flux<com.azure.cosmos.FeedResponse<com.azure.cosmos.implementation.Document>>"
- uid: "com.azure.cosmos.implementation.RxDocumentClientImpl.queryDocuments(java.lang.String,com.azure.cosmos.SqlQuerySpec,com.azure.cosmos.FeedOptions)"
  id: "queryDocuments(java.lang.String,com.azure.cosmos.SqlQuerySpec,com.azure.cosmos.FeedOptions)"
  parent: "com.azure.cosmos.implementation.RxDocumentClientImpl"
  langs:
  - "java"
  name: "queryDocuments(String collectionLink, SqlQuerySpec querySpec, FeedOptions options)"
  nameWithType: "RxDocumentClientImpl.queryDocuments(String collectionLink, SqlQuerySpec querySpec, FeedOptions options)"
  fullName: "com.azure.cosmos.implementation.RxDocumentClientImpl.queryDocuments(String collectionLink, SqlQuerySpec querySpec, FeedOptions options)"
  overload: "com.azure.cosmos.implementation.RxDocumentClientImpl.queryDocuments*"
  type: "Method"
  package: "com.azure.cosmos.implementation"
  syntax:
    content: "public Flux<FeedResponse<Document>> queryDocuments(String collectionLink, SqlQuerySpec querySpec, FeedOptions options)"
    parameters:
    - id: "collectionLink"
      type: "java.lang.String"
    - id: "querySpec"
      type: "com.azure.cosmos.SqlQuerySpec"
    - id: "options"
      type: "com.azure.cosmos.FeedOptions"
    return:
      type: "reactor.core.publisher.Flux<com.azure.cosmos.FeedResponse<com.azure.cosmos.implementation.Document>>"
- uid: "com.azure.cosmos.implementation.RxDocumentClientImpl.queryDocuments(java.lang.String,java.lang.String,com.azure.cosmos.FeedOptions)"
  id: "queryDocuments(java.lang.String,java.lang.String,com.azure.cosmos.FeedOptions)"
  parent: "com.azure.cosmos.implementation.RxDocumentClientImpl"
  langs:
  - "java"
  name: "queryDocuments(String collectionLink, String query, FeedOptions options)"
  nameWithType: "RxDocumentClientImpl.queryDocuments(String collectionLink, String query, FeedOptions options)"
  fullName: "com.azure.cosmos.implementation.RxDocumentClientImpl.queryDocuments(String collectionLink, String query, FeedOptions options)"
  overload: "com.azure.cosmos.implementation.RxDocumentClientImpl.queryDocuments*"
  type: "Method"
  package: "com.azure.cosmos.implementation"
  syntax:
    content: "public Flux<FeedResponse<Document>> queryDocuments(String collectionLink, String query, FeedOptions options)"
    parameters:
    - id: "collectionLink"
      type: "java.lang.String"
    - id: "query"
      type: "java.lang.String"
    - id: "options"
      type: "com.azure.cosmos.FeedOptions"
    return:
      type: "reactor.core.publisher.Flux<com.azure.cosmos.FeedResponse<com.azure.cosmos.implementation.Document>>"
- uid: "com.azure.cosmos.implementation.RxDocumentClientImpl.queryOffers(com.azure.cosmos.SqlQuerySpec,com.azure.cosmos.FeedOptions)"
  id: "queryOffers(com.azure.cosmos.SqlQuerySpec,com.azure.cosmos.FeedOptions)"
  parent: "com.azure.cosmos.implementation.RxDocumentClientImpl"
  langs:
  - "java"
  name: "queryOffers(SqlQuerySpec querySpec, FeedOptions options)"
  nameWithType: "RxDocumentClientImpl.queryOffers(SqlQuerySpec querySpec, FeedOptions options)"
  fullName: "com.azure.cosmos.implementation.RxDocumentClientImpl.queryOffers(SqlQuerySpec querySpec, FeedOptions options)"
  overload: "com.azure.cosmos.implementation.RxDocumentClientImpl.queryOffers*"
  type: "Method"
  package: "com.azure.cosmos.implementation"
  syntax:
    content: "public Flux<FeedResponse<Offer>> queryOffers(SqlQuerySpec querySpec, FeedOptions options)"
    parameters:
    - id: "querySpec"
      type: "com.azure.cosmos.SqlQuerySpec"
    - id: "options"
      type: "com.azure.cosmos.FeedOptions"
    return:
      type: "reactor.core.publisher.Flux<com.azure.cosmos.FeedResponse<com.azure.cosmos.implementation.Offer>>"
- uid: "com.azure.cosmos.implementation.RxDocumentClientImpl.queryOffers(java.lang.String,com.azure.cosmos.FeedOptions)"
  id: "queryOffers(java.lang.String,com.azure.cosmos.FeedOptions)"
  parent: "com.azure.cosmos.implementation.RxDocumentClientImpl"
  langs:
  - "java"
  name: "queryOffers(String query, FeedOptions options)"
  nameWithType: "RxDocumentClientImpl.queryOffers(String query, FeedOptions options)"
  fullName: "com.azure.cosmos.implementation.RxDocumentClientImpl.queryOffers(String query, FeedOptions options)"
  overload: "com.azure.cosmos.implementation.RxDocumentClientImpl.queryOffers*"
  type: "Method"
  package: "com.azure.cosmos.implementation"
  syntax:
    content: "public Flux<FeedResponse<Offer>> queryOffers(String query, FeedOptions options)"
    parameters:
    - id: "query"
      type: "java.lang.String"
    - id: "options"
      type: "com.azure.cosmos.FeedOptions"
    return:
      type: "reactor.core.publisher.Flux<com.azure.cosmos.FeedResponse<com.azure.cosmos.implementation.Offer>>"
- uid: "com.azure.cosmos.implementation.RxDocumentClientImpl.queryPermissions(java.lang.String,com.azure.cosmos.SqlQuerySpec,com.azure.cosmos.FeedOptions)"
  id: "queryPermissions(java.lang.String,com.azure.cosmos.SqlQuerySpec,com.azure.cosmos.FeedOptions)"
  parent: "com.azure.cosmos.implementation.RxDocumentClientImpl"
  langs:
  - "java"
  name: "queryPermissions(String userLink, SqlQuerySpec querySpec, FeedOptions options)"
  nameWithType: "RxDocumentClientImpl.queryPermissions(String userLink, SqlQuerySpec querySpec, FeedOptions options)"
  fullName: "com.azure.cosmos.implementation.RxDocumentClientImpl.queryPermissions(String userLink, SqlQuerySpec querySpec, FeedOptions options)"
  overload: "com.azure.cosmos.implementation.RxDocumentClientImpl.queryPermissions*"
  type: "Method"
  package: "com.azure.cosmos.implementation"
  syntax:
    content: "public Flux<FeedResponse<Permission>> queryPermissions(String userLink, SqlQuerySpec querySpec, FeedOptions options)"
    parameters:
    - id: "userLink"
      type: "java.lang.String"
    - id: "querySpec"
      type: "com.azure.cosmos.SqlQuerySpec"
    - id: "options"
      type: "com.azure.cosmos.FeedOptions"
    return:
      type: "reactor.core.publisher.Flux<com.azure.cosmos.FeedResponse<com.azure.cosmos.implementation.Permission>>"
- uid: "com.azure.cosmos.implementation.RxDocumentClientImpl.queryPermissions(java.lang.String,java.lang.String,com.azure.cosmos.FeedOptions)"
  id: "queryPermissions(java.lang.String,java.lang.String,com.azure.cosmos.FeedOptions)"
  parent: "com.azure.cosmos.implementation.RxDocumentClientImpl"
  langs:
  - "java"
  name: "queryPermissions(String userLink, String query, FeedOptions options)"
  nameWithType: "RxDocumentClientImpl.queryPermissions(String userLink, String query, FeedOptions options)"
  fullName: "com.azure.cosmos.implementation.RxDocumentClientImpl.queryPermissions(String userLink, String query, FeedOptions options)"
  overload: "com.azure.cosmos.implementation.RxDocumentClientImpl.queryPermissions*"
  type: "Method"
  package: "com.azure.cosmos.implementation"
  syntax:
    content: "public Flux<FeedResponse<Permission>> queryPermissions(String userLink, String query, FeedOptions options)"
    parameters:
    - id: "userLink"
      type: "java.lang.String"
    - id: "query"
      type: "java.lang.String"
    - id: "options"
      type: "com.azure.cosmos.FeedOptions"
    return:
      type: "reactor.core.publisher.Flux<com.azure.cosmos.FeedResponse<com.azure.cosmos.implementation.Permission>>"
- uid: "com.azure.cosmos.implementation.RxDocumentClientImpl.queryStoredProcedures(java.lang.String,com.azure.cosmos.SqlQuerySpec,com.azure.cosmos.FeedOptions)"
  id: "queryStoredProcedures(java.lang.String,com.azure.cosmos.SqlQuerySpec,com.azure.cosmos.FeedOptions)"
  parent: "com.azure.cosmos.implementation.RxDocumentClientImpl"
  langs:
  - "java"
  name: "queryStoredProcedures(String collectionLink, SqlQuerySpec querySpec, FeedOptions options)"
  nameWithType: "RxDocumentClientImpl.queryStoredProcedures(String collectionLink, SqlQuerySpec querySpec, FeedOptions options)"
  fullName: "com.azure.cosmos.implementation.RxDocumentClientImpl.queryStoredProcedures(String collectionLink, SqlQuerySpec querySpec, FeedOptions options)"
  overload: "com.azure.cosmos.implementation.RxDocumentClientImpl.queryStoredProcedures*"
  type: "Method"
  package: "com.azure.cosmos.implementation"
  syntax:
    content: "public Flux<FeedResponse<StoredProcedure>> queryStoredProcedures(String collectionLink, SqlQuerySpec querySpec, FeedOptions options)"
    parameters:
    - id: "collectionLink"
      type: "java.lang.String"
    - id: "querySpec"
      type: "com.azure.cosmos.SqlQuerySpec"
    - id: "options"
      type: "com.azure.cosmos.FeedOptions"
    return:
      type: "reactor.core.publisher.Flux<com.azure.cosmos.FeedResponse<com.azure.cosmos.implementation.StoredProcedure>>"
- uid: "com.azure.cosmos.implementation.RxDocumentClientImpl.queryStoredProcedures(java.lang.String,java.lang.String,com.azure.cosmos.FeedOptions)"
  id: "queryStoredProcedures(java.lang.String,java.lang.String,com.azure.cosmos.FeedOptions)"
  parent: "com.azure.cosmos.implementation.RxDocumentClientImpl"
  langs:
  - "java"
  name: "queryStoredProcedures(String collectionLink, String query, FeedOptions options)"
  nameWithType: "RxDocumentClientImpl.queryStoredProcedures(String collectionLink, String query, FeedOptions options)"
  fullName: "com.azure.cosmos.implementation.RxDocumentClientImpl.queryStoredProcedures(String collectionLink, String query, FeedOptions options)"
  overload: "com.azure.cosmos.implementation.RxDocumentClientImpl.queryStoredProcedures*"
  type: "Method"
  package: "com.azure.cosmos.implementation"
  syntax:
    content: "public Flux<FeedResponse<StoredProcedure>> queryStoredProcedures(String collectionLink, String query, FeedOptions options)"
    parameters:
    - id: "collectionLink"
      type: "java.lang.String"
    - id: "query"
      type: "java.lang.String"
    - id: "options"
      type: "com.azure.cosmos.FeedOptions"
    return:
      type: "reactor.core.publisher.Flux<com.azure.cosmos.FeedResponse<com.azure.cosmos.implementation.StoredProcedure>>"
- uid: "com.azure.cosmos.implementation.RxDocumentClientImpl.queryTriggers(java.lang.String,com.azure.cosmos.SqlQuerySpec,com.azure.cosmos.FeedOptions)"
  id: "queryTriggers(java.lang.String,com.azure.cosmos.SqlQuerySpec,com.azure.cosmos.FeedOptions)"
  parent: "com.azure.cosmos.implementation.RxDocumentClientImpl"
  langs:
  - "java"
  name: "queryTriggers(String collectionLink, SqlQuerySpec querySpec, FeedOptions options)"
  nameWithType: "RxDocumentClientImpl.queryTriggers(String collectionLink, SqlQuerySpec querySpec, FeedOptions options)"
  fullName: "com.azure.cosmos.implementation.RxDocumentClientImpl.queryTriggers(String collectionLink, SqlQuerySpec querySpec, FeedOptions options)"
  overload: "com.azure.cosmos.implementation.RxDocumentClientImpl.queryTriggers*"
  type: "Method"
  package: "com.azure.cosmos.implementation"
  syntax:
    content: "public Flux<FeedResponse<Trigger>> queryTriggers(String collectionLink, SqlQuerySpec querySpec, FeedOptions options)"
    parameters:
    - id: "collectionLink"
      type: "java.lang.String"
    - id: "querySpec"
      type: "com.azure.cosmos.SqlQuerySpec"
    - id: "options"
      type: "com.azure.cosmos.FeedOptions"
    return:
      type: "reactor.core.publisher.Flux<com.azure.cosmos.FeedResponse<com.azure.cosmos.implementation.Trigger>>"
- uid: "com.azure.cosmos.implementation.RxDocumentClientImpl.queryTriggers(java.lang.String,java.lang.String,com.azure.cosmos.FeedOptions)"
  id: "queryTriggers(java.lang.String,java.lang.String,com.azure.cosmos.FeedOptions)"
  parent: "com.azure.cosmos.implementation.RxDocumentClientImpl"
  langs:
  - "java"
  name: "queryTriggers(String collectionLink, String query, FeedOptions options)"
  nameWithType: "RxDocumentClientImpl.queryTriggers(String collectionLink, String query, FeedOptions options)"
  fullName: "com.azure.cosmos.implementation.RxDocumentClientImpl.queryTriggers(String collectionLink, String query, FeedOptions options)"
  overload: "com.azure.cosmos.implementation.RxDocumentClientImpl.queryTriggers*"
  type: "Method"
  package: "com.azure.cosmos.implementation"
  syntax:
    content: "public Flux<FeedResponse<Trigger>> queryTriggers(String collectionLink, String query, FeedOptions options)"
    parameters:
    - id: "collectionLink"
      type: "java.lang.String"
    - id: "query"
      type: "java.lang.String"
    - id: "options"
      type: "com.azure.cosmos.FeedOptions"
    return:
      type: "reactor.core.publisher.Flux<com.azure.cosmos.FeedResponse<com.azure.cosmos.implementation.Trigger>>"
- uid: "com.azure.cosmos.implementation.RxDocumentClientImpl.queryUserDefinedFunctions(java.lang.String,com.azure.cosmos.SqlQuerySpec,com.azure.cosmos.FeedOptions)"
  id: "queryUserDefinedFunctions(java.lang.String,com.azure.cosmos.SqlQuerySpec,com.azure.cosmos.FeedOptions)"
  parent: "com.azure.cosmos.implementation.RxDocumentClientImpl"
  langs:
  - "java"
  name: "queryUserDefinedFunctions(String collectionLink, SqlQuerySpec querySpec, FeedOptions options)"
  nameWithType: "RxDocumentClientImpl.queryUserDefinedFunctions(String collectionLink, SqlQuerySpec querySpec, FeedOptions options)"
  fullName: "com.azure.cosmos.implementation.RxDocumentClientImpl.queryUserDefinedFunctions(String collectionLink, SqlQuerySpec querySpec, FeedOptions options)"
  overload: "com.azure.cosmos.implementation.RxDocumentClientImpl.queryUserDefinedFunctions*"
  type: "Method"
  package: "com.azure.cosmos.implementation"
  syntax:
    content: "public Flux<FeedResponse<UserDefinedFunction>> queryUserDefinedFunctions(String collectionLink, SqlQuerySpec querySpec, FeedOptions options)"
    parameters:
    - id: "collectionLink"
      type: "java.lang.String"
    - id: "querySpec"
      type: "com.azure.cosmos.SqlQuerySpec"
    - id: "options"
      type: "com.azure.cosmos.FeedOptions"
    return:
      type: "reactor.core.publisher.Flux<com.azure.cosmos.FeedResponse<com.azure.cosmos.implementation.UserDefinedFunction>>"
- uid: "com.azure.cosmos.implementation.RxDocumentClientImpl.queryUserDefinedFunctions(java.lang.String,java.lang.String,com.azure.cosmos.FeedOptions)"
  id: "queryUserDefinedFunctions(java.lang.String,java.lang.String,com.azure.cosmos.FeedOptions)"
  parent: "com.azure.cosmos.implementation.RxDocumentClientImpl"
  langs:
  - "java"
  name: "queryUserDefinedFunctions(String collectionLink, String query, FeedOptions options)"
  nameWithType: "RxDocumentClientImpl.queryUserDefinedFunctions(String collectionLink, String query, FeedOptions options)"
  fullName: "com.azure.cosmos.implementation.RxDocumentClientImpl.queryUserDefinedFunctions(String collectionLink, String query, FeedOptions options)"
  overload: "com.azure.cosmos.implementation.RxDocumentClientImpl.queryUserDefinedFunctions*"
  type: "Method"
  package: "com.azure.cosmos.implementation"
  syntax:
    content: "public Flux<FeedResponse<UserDefinedFunction>> queryUserDefinedFunctions(String collectionLink, String query, FeedOptions options)"
    parameters:
    - id: "collectionLink"
      type: "java.lang.String"
    - id: "query"
      type: "java.lang.String"
    - id: "options"
      type: "com.azure.cosmos.FeedOptions"
    return:
      type: "reactor.core.publisher.Flux<com.azure.cosmos.FeedResponse<com.azure.cosmos.implementation.UserDefinedFunction>>"
- uid: "com.azure.cosmos.implementation.RxDocumentClientImpl.queryUsers(java.lang.String,com.azure.cosmos.SqlQuerySpec,com.azure.cosmos.FeedOptions)"
  id: "queryUsers(java.lang.String,com.azure.cosmos.SqlQuerySpec,com.azure.cosmos.FeedOptions)"
  parent: "com.azure.cosmos.implementation.RxDocumentClientImpl"
  langs:
  - "java"
  name: "queryUsers(String databaseLink, SqlQuerySpec querySpec, FeedOptions options)"
  nameWithType: "RxDocumentClientImpl.queryUsers(String databaseLink, SqlQuerySpec querySpec, FeedOptions options)"
  fullName: "com.azure.cosmos.implementation.RxDocumentClientImpl.queryUsers(String databaseLink, SqlQuerySpec querySpec, FeedOptions options)"
  overload: "com.azure.cosmos.implementation.RxDocumentClientImpl.queryUsers*"
  type: "Method"
  package: "com.azure.cosmos.implementation"
  syntax:
    content: "public Flux<FeedResponse<User>> queryUsers(String databaseLink, SqlQuerySpec querySpec, FeedOptions options)"
    parameters:
    - id: "databaseLink"
      type: "java.lang.String"
    - id: "querySpec"
      type: "com.azure.cosmos.SqlQuerySpec"
    - id: "options"
      type: "com.azure.cosmos.FeedOptions"
    return:
      type: "reactor.core.publisher.Flux<com.azure.cosmos.FeedResponse<com.azure.cosmos.implementation.User>>"
- uid: "com.azure.cosmos.implementation.RxDocumentClientImpl.queryUsers(java.lang.String,java.lang.String,com.azure.cosmos.FeedOptions)"
  id: "queryUsers(java.lang.String,java.lang.String,com.azure.cosmos.FeedOptions)"
  parent: "com.azure.cosmos.implementation.RxDocumentClientImpl"
  langs:
  - "java"
  name: "queryUsers(String databaseLink, String query, FeedOptions options)"
  nameWithType: "RxDocumentClientImpl.queryUsers(String databaseLink, String query, FeedOptions options)"
  fullName: "com.azure.cosmos.implementation.RxDocumentClientImpl.queryUsers(String databaseLink, String query, FeedOptions options)"
  overload: "com.azure.cosmos.implementation.RxDocumentClientImpl.queryUsers*"
  type: "Method"
  package: "com.azure.cosmos.implementation"
  syntax:
    content: "public Flux<FeedResponse<User>> queryUsers(String databaseLink, String query, FeedOptions options)"
    parameters:
    - id: "databaseLink"
      type: "java.lang.String"
    - id: "query"
      type: "java.lang.String"
    - id: "options"
      type: "com.azure.cosmos.FeedOptions"
    return:
      type: "reactor.core.publisher.Flux<com.azure.cosmos.FeedResponse<com.azure.cosmos.implementation.User>>"
- uid: "com.azure.cosmos.implementation.RxDocumentClientImpl.readCollection(java.lang.String,com.azure.cosmos.implementation.RequestOptions)"
  id: "readCollection(java.lang.String,com.azure.cosmos.implementation.RequestOptions)"
  parent: "com.azure.cosmos.implementation.RxDocumentClientImpl"
  langs:
  - "java"
  name: "readCollection(String collectionLink, RequestOptions options)"
  nameWithType: "RxDocumentClientImpl.readCollection(String collectionLink, RequestOptions options)"
  fullName: "com.azure.cosmos.implementation.RxDocumentClientImpl.readCollection(String collectionLink, RequestOptions options)"
  overload: "com.azure.cosmos.implementation.RxDocumentClientImpl.readCollection*"
  type: "Method"
  package: "com.azure.cosmos.implementation"
  syntax:
    content: "public Mono<ResourceResponse<DocumentCollection>> readCollection(String collectionLink, RequestOptions options)"
    parameters:
    - id: "collectionLink"
      type: "java.lang.String"
    - id: "options"
      type: "com.azure.cosmos.implementation.RequestOptions"
    return:
      type: "reactor.core.publisher.Mono<com.azure.cosmos.implementation.ResourceResponse<com.azure.cosmos.implementation.DocumentCollection>>"
- uid: "com.azure.cosmos.implementation.RxDocumentClientImpl.readCollections(java.lang.String,com.azure.cosmos.FeedOptions)"
  id: "readCollections(java.lang.String,com.azure.cosmos.FeedOptions)"
  parent: "com.azure.cosmos.implementation.RxDocumentClientImpl"
  langs:
  - "java"
  name: "readCollections(String databaseLink, FeedOptions options)"
  nameWithType: "RxDocumentClientImpl.readCollections(String databaseLink, FeedOptions options)"
  fullName: "com.azure.cosmos.implementation.RxDocumentClientImpl.readCollections(String databaseLink, FeedOptions options)"
  overload: "com.azure.cosmos.implementation.RxDocumentClientImpl.readCollections*"
  type: "Method"
  package: "com.azure.cosmos.implementation"
  syntax:
    content: "public Flux<FeedResponse<DocumentCollection>> readCollections(String databaseLink, FeedOptions options)"
    parameters:
    - id: "databaseLink"
      type: "java.lang.String"
    - id: "options"
      type: "com.azure.cosmos.FeedOptions"
    return:
      type: "reactor.core.publisher.Flux<com.azure.cosmos.FeedResponse<com.azure.cosmos.implementation.DocumentCollection>>"
- uid: "com.azure.cosmos.implementation.RxDocumentClientImpl.readConflict(java.lang.String,com.azure.cosmos.implementation.RequestOptions)"
  id: "readConflict(java.lang.String,com.azure.cosmos.implementation.RequestOptions)"
  parent: "com.azure.cosmos.implementation.RxDocumentClientImpl"
  langs:
  - "java"
  name: "readConflict(String conflictLink, RequestOptions options)"
  nameWithType: "RxDocumentClientImpl.readConflict(String conflictLink, RequestOptions options)"
  fullName: "com.azure.cosmos.implementation.RxDocumentClientImpl.readConflict(String conflictLink, RequestOptions options)"
  overload: "com.azure.cosmos.implementation.RxDocumentClientImpl.readConflict*"
  type: "Method"
  package: "com.azure.cosmos.implementation"
  syntax:
    content: "public Mono<ResourceResponse<Conflict>> readConflict(String conflictLink, RequestOptions options)"
    parameters:
    - id: "conflictLink"
      type: "java.lang.String"
    - id: "options"
      type: "com.azure.cosmos.implementation.RequestOptions"
    return:
      type: "reactor.core.publisher.Mono<com.azure.cosmos.implementation.ResourceResponse<com.azure.cosmos.implementation.Conflict>>"
- uid: "com.azure.cosmos.implementation.RxDocumentClientImpl.readConflicts(java.lang.String,com.azure.cosmos.FeedOptions)"
  id: "readConflicts(java.lang.String,com.azure.cosmos.FeedOptions)"
  parent: "com.azure.cosmos.implementation.RxDocumentClientImpl"
  langs:
  - "java"
  name: "readConflicts(String collectionLink, FeedOptions options)"
  nameWithType: "RxDocumentClientImpl.readConflicts(String collectionLink, FeedOptions options)"
  fullName: "com.azure.cosmos.implementation.RxDocumentClientImpl.readConflicts(String collectionLink, FeedOptions options)"
  overload: "com.azure.cosmos.implementation.RxDocumentClientImpl.readConflicts*"
  type: "Method"
  package: "com.azure.cosmos.implementation"
  syntax:
    content: "public Flux<FeedResponse<Conflict>> readConflicts(String collectionLink, FeedOptions options)"
    parameters:
    - id: "collectionLink"
      type: "java.lang.String"
    - id: "options"
      type: "com.azure.cosmos.FeedOptions"
    return:
      type: "reactor.core.publisher.Flux<com.azure.cosmos.FeedResponse<com.azure.cosmos.implementation.Conflict>>"
- uid: "com.azure.cosmos.implementation.RxDocumentClientImpl.readDatabase(java.lang.String,com.azure.cosmos.implementation.RequestOptions)"
  id: "readDatabase(java.lang.String,com.azure.cosmos.implementation.RequestOptions)"
  parent: "com.azure.cosmos.implementation.RxDocumentClientImpl"
  langs:
  - "java"
  name: "readDatabase(String databaseLink, RequestOptions options)"
  nameWithType: "RxDocumentClientImpl.readDatabase(String databaseLink, RequestOptions options)"
  fullName: "com.azure.cosmos.implementation.RxDocumentClientImpl.readDatabase(String databaseLink, RequestOptions options)"
  overload: "com.azure.cosmos.implementation.RxDocumentClientImpl.readDatabase*"
  type: "Method"
  package: "com.azure.cosmos.implementation"
  syntax:
    content: "public Mono<ResourceResponse<Database>> readDatabase(String databaseLink, RequestOptions options)"
    parameters:
    - id: "databaseLink"
      type: "java.lang.String"
    - id: "options"
      type: "com.azure.cosmos.implementation.RequestOptions"
    return:
      type: "reactor.core.publisher.Mono<com.azure.cosmos.implementation.ResourceResponse<com.azure.cosmos.implementation.Database>>"
- uid: "com.azure.cosmos.implementation.RxDocumentClientImpl.readDatabases(com.azure.cosmos.FeedOptions)"
  id: "readDatabases(com.azure.cosmos.FeedOptions)"
  parent: "com.azure.cosmos.implementation.RxDocumentClientImpl"
  langs:
  - "java"
  name: "readDatabases(FeedOptions options)"
  nameWithType: "RxDocumentClientImpl.readDatabases(FeedOptions options)"
  fullName: "com.azure.cosmos.implementation.RxDocumentClientImpl.readDatabases(FeedOptions options)"
  overload: "com.azure.cosmos.implementation.RxDocumentClientImpl.readDatabases*"
  type: "Method"
  package: "com.azure.cosmos.implementation"
  syntax:
    content: "public Flux<FeedResponse<Database>> readDatabases(FeedOptions options)"
    parameters:
    - id: "options"
      type: "com.azure.cosmos.FeedOptions"
    return:
      type: "reactor.core.publisher.Flux<com.azure.cosmos.FeedResponse<com.azure.cosmos.implementation.Database>>"
- uid: "com.azure.cosmos.implementation.RxDocumentClientImpl.readDocument(java.lang.String,com.azure.cosmos.implementation.RequestOptions)"
  id: "readDocument(java.lang.String,com.azure.cosmos.implementation.RequestOptions)"
  parent: "com.azure.cosmos.implementation.RxDocumentClientImpl"
  langs:
  - "java"
  name: "readDocument(String documentLink, RequestOptions options)"
  nameWithType: "RxDocumentClientImpl.readDocument(String documentLink, RequestOptions options)"
  fullName: "com.azure.cosmos.implementation.RxDocumentClientImpl.readDocument(String documentLink, RequestOptions options)"
  overload: "com.azure.cosmos.implementation.RxDocumentClientImpl.readDocument*"
  type: "Method"
  package: "com.azure.cosmos.implementation"
  syntax:
    content: "public Mono<ResourceResponse<Document>> readDocument(String documentLink, RequestOptions options)"
    parameters:
    - id: "documentLink"
      type: "java.lang.String"
    - id: "options"
      type: "com.azure.cosmos.implementation.RequestOptions"
    return:
      type: "reactor.core.publisher.Mono<com.azure.cosmos.implementation.ResourceResponse<com.azure.cosmos.implementation.Document>>"
- uid: "com.azure.cosmos.implementation.RxDocumentClientImpl.readDocuments(java.lang.String,com.azure.cosmos.FeedOptions)"
  id: "readDocuments(java.lang.String,com.azure.cosmos.FeedOptions)"
  parent: "com.azure.cosmos.implementation.RxDocumentClientImpl"
  langs:
  - "java"
  name: "readDocuments(String collectionLink, FeedOptions options)"
  nameWithType: "RxDocumentClientImpl.readDocuments(String collectionLink, FeedOptions options)"
  fullName: "com.azure.cosmos.implementation.RxDocumentClientImpl.readDocuments(String collectionLink, FeedOptions options)"
  overload: "com.azure.cosmos.implementation.RxDocumentClientImpl.readDocuments*"
  type: "Method"
  package: "com.azure.cosmos.implementation"
  syntax:
    content: "public Flux<FeedResponse<Document>> readDocuments(String collectionLink, FeedOptions options)"
    parameters:
    - id: "collectionLink"
      type: "java.lang.String"
    - id: "options"
      type: "com.azure.cosmos.FeedOptions"
    return:
      type: "reactor.core.publisher.Flux<com.azure.cosmos.FeedResponse<com.azure.cosmos.implementation.Document>>"
- uid: "com.azure.cosmos.implementation.RxDocumentClientImpl.readFeed(com.azure.cosmos.implementation.RxDocumentServiceRequest)"
  id: "readFeed(com.azure.cosmos.implementation.RxDocumentServiceRequest)"
  parent: "com.azure.cosmos.implementation.RxDocumentClientImpl"
  langs:
  - "java"
  name: "readFeed(RxDocumentServiceRequest request)"
  nameWithType: "RxDocumentClientImpl.readFeed(RxDocumentServiceRequest request)"
  fullName: "com.azure.cosmos.implementation.RxDocumentClientImpl.readFeed(RxDocumentServiceRequest request)"
  overload: "com.azure.cosmos.implementation.RxDocumentClientImpl.readFeed*"
  type: "Method"
  package: "com.azure.cosmos.implementation"
  syntax:
    content: " Mono<RxDocumentServiceResponse> readFeed(RxDocumentServiceRequest request)"
    parameters:
    - id: "request"
      type: "com.azure.cosmos.implementation.RxDocumentServiceRequest"
    return:
      type: "reactor.core.publisher.Mono<com.azure.cosmos.implementation.RxDocumentServiceResponse>"
- uid: "com.azure.cosmos.implementation.RxDocumentClientImpl.readOffer(java.lang.String)"
  id: "readOffer(java.lang.String)"
  parent: "com.azure.cosmos.implementation.RxDocumentClientImpl"
  langs:
  - "java"
  name: "readOffer(String offerLink)"
  nameWithType: "RxDocumentClientImpl.readOffer(String offerLink)"
  fullName: "com.azure.cosmos.implementation.RxDocumentClientImpl.readOffer(String offerLink)"
  overload: "com.azure.cosmos.implementation.RxDocumentClientImpl.readOffer*"
  type: "Method"
  package: "com.azure.cosmos.implementation"
  syntax:
    content: "public Mono<ResourceResponse<Offer>> readOffer(String offerLink)"
    parameters:
    - id: "offerLink"
      type: "java.lang.String"
    return:
      type: "reactor.core.publisher.Mono<com.azure.cosmos.implementation.ResourceResponse<com.azure.cosmos.implementation.Offer>>"
- uid: "com.azure.cosmos.implementation.RxDocumentClientImpl.readOffers(com.azure.cosmos.FeedOptions)"
  id: "readOffers(com.azure.cosmos.FeedOptions)"
  parent: "com.azure.cosmos.implementation.RxDocumentClientImpl"
  langs:
  - "java"
  name: "readOffers(FeedOptions options)"
  nameWithType: "RxDocumentClientImpl.readOffers(FeedOptions options)"
  fullName: "com.azure.cosmos.implementation.RxDocumentClientImpl.readOffers(FeedOptions options)"
  overload: "com.azure.cosmos.implementation.RxDocumentClientImpl.readOffers*"
  type: "Method"
  package: "com.azure.cosmos.implementation"
  syntax:
    content: "public Flux<FeedResponse<Offer>> readOffers(FeedOptions options)"
    parameters:
    - id: "options"
      type: "com.azure.cosmos.FeedOptions"
    return:
      type: "reactor.core.publisher.Flux<com.azure.cosmos.FeedResponse<com.azure.cosmos.implementation.Offer>>"
- uid: "com.azure.cosmos.implementation.RxDocumentClientImpl.readPartitionKeyRanges(java.lang.String,com.azure.cosmos.FeedOptions)"
  id: "readPartitionKeyRanges(java.lang.String,com.azure.cosmos.FeedOptions)"
  parent: "com.azure.cosmos.implementation.RxDocumentClientImpl"
  langs:
  - "java"
  name: "readPartitionKeyRanges(String collectionLink, FeedOptions options)"
  nameWithType: "RxDocumentClientImpl.readPartitionKeyRanges(String collectionLink, FeedOptions options)"
  fullName: "com.azure.cosmos.implementation.RxDocumentClientImpl.readPartitionKeyRanges(String collectionLink, FeedOptions options)"
  overload: "com.azure.cosmos.implementation.RxDocumentClientImpl.readPartitionKeyRanges*"
  type: "Method"
  package: "com.azure.cosmos.implementation"
  syntax:
    content: "public Flux<FeedResponse<PartitionKeyRange>> readPartitionKeyRanges(String collectionLink, FeedOptions options)"
    parameters:
    - id: "collectionLink"
      type: "java.lang.String"
    - id: "options"
      type: "com.azure.cosmos.FeedOptions"
    return:
      type: "reactor.core.publisher.Flux<com.azure.cosmos.FeedResponse<com.azure.cosmos.implementation.PartitionKeyRange>>"
- uid: "com.azure.cosmos.implementation.RxDocumentClientImpl.readPermission(java.lang.String,com.azure.cosmos.implementation.RequestOptions)"
  id: "readPermission(java.lang.String,com.azure.cosmos.implementation.RequestOptions)"
  parent: "com.azure.cosmos.implementation.RxDocumentClientImpl"
  langs:
  - "java"
  name: "readPermission(String permissionLink, RequestOptions options)"
  nameWithType: "RxDocumentClientImpl.readPermission(String permissionLink, RequestOptions options)"
  fullName: "com.azure.cosmos.implementation.RxDocumentClientImpl.readPermission(String permissionLink, RequestOptions options)"
  overload: "com.azure.cosmos.implementation.RxDocumentClientImpl.readPermission*"
  type: "Method"
  package: "com.azure.cosmos.implementation"
  syntax:
    content: "public Mono<ResourceResponse<Permission>> readPermission(String permissionLink, RequestOptions options)"
    parameters:
    - id: "permissionLink"
      type: "java.lang.String"
    - id: "options"
      type: "com.azure.cosmos.implementation.RequestOptions"
    return:
      type: "reactor.core.publisher.Mono<com.azure.cosmos.implementation.ResourceResponse<com.azure.cosmos.implementation.Permission>>"
- uid: "com.azure.cosmos.implementation.RxDocumentClientImpl.readPermissions(java.lang.String,com.azure.cosmos.FeedOptions)"
  id: "readPermissions(java.lang.String,com.azure.cosmos.FeedOptions)"
  parent: "com.azure.cosmos.implementation.RxDocumentClientImpl"
  langs:
  - "java"
  name: "readPermissions(String userLink, FeedOptions options)"
  nameWithType: "RxDocumentClientImpl.readPermissions(String userLink, FeedOptions options)"
  fullName: "com.azure.cosmos.implementation.RxDocumentClientImpl.readPermissions(String userLink, FeedOptions options)"
  overload: "com.azure.cosmos.implementation.RxDocumentClientImpl.readPermissions*"
  type: "Method"
  package: "com.azure.cosmos.implementation"
  syntax:
    content: "public Flux<FeedResponse<Permission>> readPermissions(String userLink, FeedOptions options)"
    parameters:
    - id: "userLink"
      type: "java.lang.String"
    - id: "options"
      type: "com.azure.cosmos.FeedOptions"
    return:
      type: "reactor.core.publisher.Flux<com.azure.cosmos.FeedResponse<com.azure.cosmos.implementation.Permission>>"
- uid: "com.azure.cosmos.implementation.RxDocumentClientImpl.readStoredProcedure(java.lang.String,com.azure.cosmos.implementation.RequestOptions)"
  id: "readStoredProcedure(java.lang.String,com.azure.cosmos.implementation.RequestOptions)"
  parent: "com.azure.cosmos.implementation.RxDocumentClientImpl"
  langs:
  - "java"
  name: "readStoredProcedure(String storedProcedureLink, RequestOptions options)"
  nameWithType: "RxDocumentClientImpl.readStoredProcedure(String storedProcedureLink, RequestOptions options)"
  fullName: "com.azure.cosmos.implementation.RxDocumentClientImpl.readStoredProcedure(String storedProcedureLink, RequestOptions options)"
  overload: "com.azure.cosmos.implementation.RxDocumentClientImpl.readStoredProcedure*"
  type: "Method"
  package: "com.azure.cosmos.implementation"
  syntax:
    content: "public Mono<ResourceResponse<StoredProcedure>> readStoredProcedure(String storedProcedureLink, RequestOptions options)"
    parameters:
    - id: "storedProcedureLink"
      type: "java.lang.String"
    - id: "options"
      type: "com.azure.cosmos.implementation.RequestOptions"
    return:
      type: "reactor.core.publisher.Mono<com.azure.cosmos.implementation.ResourceResponse<com.azure.cosmos.implementation.StoredProcedure>>"
- uid: "com.azure.cosmos.implementation.RxDocumentClientImpl.readStoredProcedures(java.lang.String,com.azure.cosmos.FeedOptions)"
  id: "readStoredProcedures(java.lang.String,com.azure.cosmos.FeedOptions)"
  parent: "com.azure.cosmos.implementation.RxDocumentClientImpl"
  langs:
  - "java"
  name: "readStoredProcedures(String collectionLink, FeedOptions options)"
  nameWithType: "RxDocumentClientImpl.readStoredProcedures(String collectionLink, FeedOptions options)"
  fullName: "com.azure.cosmos.implementation.RxDocumentClientImpl.readStoredProcedures(String collectionLink, FeedOptions options)"
  overload: "com.azure.cosmos.implementation.RxDocumentClientImpl.readStoredProcedures*"
  type: "Method"
  package: "com.azure.cosmos.implementation"
  syntax:
    content: "public Flux<FeedResponse<StoredProcedure>> readStoredProcedures(String collectionLink, FeedOptions options)"
    parameters:
    - id: "collectionLink"
      type: "java.lang.String"
    - id: "options"
      type: "com.azure.cosmos.FeedOptions"
    return:
      type: "reactor.core.publisher.Flux<com.azure.cosmos.FeedResponse<com.azure.cosmos.implementation.StoredProcedure>>"
- uid: "com.azure.cosmos.implementation.RxDocumentClientImpl.readTrigger(java.lang.String,com.azure.cosmos.implementation.RequestOptions)"
  id: "readTrigger(java.lang.String,com.azure.cosmos.implementation.RequestOptions)"
  parent: "com.azure.cosmos.implementation.RxDocumentClientImpl"
  langs:
  - "java"
  name: "readTrigger(String triggerLink, RequestOptions options)"
  nameWithType: "RxDocumentClientImpl.readTrigger(String triggerLink, RequestOptions options)"
  fullName: "com.azure.cosmos.implementation.RxDocumentClientImpl.readTrigger(String triggerLink, RequestOptions options)"
  overload: "com.azure.cosmos.implementation.RxDocumentClientImpl.readTrigger*"
  type: "Method"
  package: "com.azure.cosmos.implementation"
  syntax:
    content: "public Mono<ResourceResponse<Trigger>> readTrigger(String triggerLink, RequestOptions options)"
    parameters:
    - id: "triggerLink"
      type: "java.lang.String"
    - id: "options"
      type: "com.azure.cosmos.implementation.RequestOptions"
    return:
      type: "reactor.core.publisher.Mono<com.azure.cosmos.implementation.ResourceResponse<com.azure.cosmos.implementation.Trigger>>"
- uid: "com.azure.cosmos.implementation.RxDocumentClientImpl.readTriggers(java.lang.String,com.azure.cosmos.FeedOptions)"
  id: "readTriggers(java.lang.String,com.azure.cosmos.FeedOptions)"
  parent: "com.azure.cosmos.implementation.RxDocumentClientImpl"
  langs:
  - "java"
  name: "readTriggers(String collectionLink, FeedOptions options)"
  nameWithType: "RxDocumentClientImpl.readTriggers(String collectionLink, FeedOptions options)"
  fullName: "com.azure.cosmos.implementation.RxDocumentClientImpl.readTriggers(String collectionLink, FeedOptions options)"
  overload: "com.azure.cosmos.implementation.RxDocumentClientImpl.readTriggers*"
  type: "Method"
  package: "com.azure.cosmos.implementation"
  syntax:
    content: "public Flux<FeedResponse<Trigger>> readTriggers(String collectionLink, FeedOptions options)"
    parameters:
    - id: "collectionLink"
      type: "java.lang.String"
    - id: "options"
      type: "com.azure.cosmos.FeedOptions"
    return:
      type: "reactor.core.publisher.Flux<com.azure.cosmos.FeedResponse<com.azure.cosmos.implementation.Trigger>>"
- uid: "com.azure.cosmos.implementation.RxDocumentClientImpl.readUser(java.lang.String,com.azure.cosmos.implementation.RequestOptions)"
  id: "readUser(java.lang.String,com.azure.cosmos.implementation.RequestOptions)"
  parent: "com.azure.cosmos.implementation.RxDocumentClientImpl"
  langs:
  - "java"
  name: "readUser(String userLink, RequestOptions options)"
  nameWithType: "RxDocumentClientImpl.readUser(String userLink, RequestOptions options)"
  fullName: "com.azure.cosmos.implementation.RxDocumentClientImpl.readUser(String userLink, RequestOptions options)"
  overload: "com.azure.cosmos.implementation.RxDocumentClientImpl.readUser*"
  type: "Method"
  package: "com.azure.cosmos.implementation"
  syntax:
    content: "public Mono<ResourceResponse<User>> readUser(String userLink, RequestOptions options)"
    parameters:
    - id: "userLink"
      type: "java.lang.String"
    - id: "options"
      type: "com.azure.cosmos.implementation.RequestOptions"
    return:
      type: "reactor.core.publisher.Mono<com.azure.cosmos.implementation.ResourceResponse<com.azure.cosmos.implementation.User>>"
- uid: "com.azure.cosmos.implementation.RxDocumentClientImpl.readUserDefinedFunction(java.lang.String,com.azure.cosmos.implementation.RequestOptions)"
  id: "readUserDefinedFunction(java.lang.String,com.azure.cosmos.implementation.RequestOptions)"
  parent: "com.azure.cosmos.implementation.RxDocumentClientImpl"
  langs:
  - "java"
  name: "readUserDefinedFunction(String udfLink, RequestOptions options)"
  nameWithType: "RxDocumentClientImpl.readUserDefinedFunction(String udfLink, RequestOptions options)"
  fullName: "com.azure.cosmos.implementation.RxDocumentClientImpl.readUserDefinedFunction(String udfLink, RequestOptions options)"
  overload: "com.azure.cosmos.implementation.RxDocumentClientImpl.readUserDefinedFunction*"
  type: "Method"
  package: "com.azure.cosmos.implementation"
  syntax:
    content: "public Mono<ResourceResponse<UserDefinedFunction>> readUserDefinedFunction(String udfLink, RequestOptions options)"
    parameters:
    - id: "udfLink"
      type: "java.lang.String"
    - id: "options"
      type: "com.azure.cosmos.implementation.RequestOptions"
    return:
      type: "reactor.core.publisher.Mono<com.azure.cosmos.implementation.ResourceResponse<com.azure.cosmos.implementation.UserDefinedFunction>>"
- uid: "com.azure.cosmos.implementation.RxDocumentClientImpl.readUserDefinedFunctions(java.lang.String,com.azure.cosmos.FeedOptions)"
  id: "readUserDefinedFunctions(java.lang.String,com.azure.cosmos.FeedOptions)"
  parent: "com.azure.cosmos.implementation.RxDocumentClientImpl"
  langs:
  - "java"
  name: "readUserDefinedFunctions(String collectionLink, FeedOptions options)"
  nameWithType: "RxDocumentClientImpl.readUserDefinedFunctions(String collectionLink, FeedOptions options)"
  fullName: "com.azure.cosmos.implementation.RxDocumentClientImpl.readUserDefinedFunctions(String collectionLink, FeedOptions options)"
  overload: "com.azure.cosmos.implementation.RxDocumentClientImpl.readUserDefinedFunctions*"
  type: "Method"
  package: "com.azure.cosmos.implementation"
  syntax:
    content: "public Flux<FeedResponse<UserDefinedFunction>> readUserDefinedFunctions(String collectionLink, FeedOptions options)"
    parameters:
    - id: "collectionLink"
      type: "java.lang.String"
    - id: "options"
      type: "com.azure.cosmos.FeedOptions"
    return:
      type: "reactor.core.publisher.Flux<com.azure.cosmos.FeedResponse<com.azure.cosmos.implementation.UserDefinedFunction>>"
- uid: "com.azure.cosmos.implementation.RxDocumentClientImpl.readUsers(java.lang.String,com.azure.cosmos.FeedOptions)"
  id: "readUsers(java.lang.String,com.azure.cosmos.FeedOptions)"
  parent: "com.azure.cosmos.implementation.RxDocumentClientImpl"
  langs:
  - "java"
  name: "readUsers(String databaseLink, FeedOptions options)"
  nameWithType: "RxDocumentClientImpl.readUsers(String databaseLink, FeedOptions options)"
  fullName: "com.azure.cosmos.implementation.RxDocumentClientImpl.readUsers(String databaseLink, FeedOptions options)"
  overload: "com.azure.cosmos.implementation.RxDocumentClientImpl.readUsers*"
  type: "Method"
  package: "com.azure.cosmos.implementation"
  syntax:
    content: "public Flux<FeedResponse<User>> readUsers(String databaseLink, FeedOptions options)"
    parameters:
    - id: "databaseLink"
      type: "java.lang.String"
    - id: "options"
      type: "com.azure.cosmos.FeedOptions"
    return:
      type: "reactor.core.publisher.Flux<com.azure.cosmos.FeedResponse<com.azure.cosmos.implementation.User>>"
- uid: "com.azure.cosmos.implementation.RxDocumentClientImpl.replaceCollection(com.azure.cosmos.implementation.DocumentCollection,com.azure.cosmos.implementation.RequestOptions)"
  id: "replaceCollection(com.azure.cosmos.implementation.DocumentCollection,com.azure.cosmos.implementation.RequestOptions)"
  parent: "com.azure.cosmos.implementation.RxDocumentClientImpl"
  langs:
  - "java"
  name: "replaceCollection(DocumentCollection collection, RequestOptions options)"
  nameWithType: "RxDocumentClientImpl.replaceCollection(DocumentCollection collection, RequestOptions options)"
  fullName: "com.azure.cosmos.implementation.RxDocumentClientImpl.replaceCollection(DocumentCollection collection, RequestOptions options)"
  overload: "com.azure.cosmos.implementation.RxDocumentClientImpl.replaceCollection*"
  type: "Method"
  package: "com.azure.cosmos.implementation"
  syntax:
    content: "public Mono<ResourceResponse<DocumentCollection>> replaceCollection(DocumentCollection collection, RequestOptions options)"
    parameters:
    - id: "collection"
      type: "com.azure.cosmos.implementation.DocumentCollection"
    - id: "options"
      type: "com.azure.cosmos.implementation.RequestOptions"
    return:
      type: "reactor.core.publisher.Mono<com.azure.cosmos.implementation.ResourceResponse<com.azure.cosmos.implementation.DocumentCollection>>"
- uid: "com.azure.cosmos.implementation.RxDocumentClientImpl.replaceDocument(com.azure.cosmos.implementation.Document,com.azure.cosmos.implementation.RequestOptions)"
  id: "replaceDocument(com.azure.cosmos.implementation.Document,com.azure.cosmos.implementation.RequestOptions)"
  parent: "com.azure.cosmos.implementation.RxDocumentClientImpl"
  langs:
  - "java"
  name: "replaceDocument(Document document, RequestOptions options)"
  nameWithType: "RxDocumentClientImpl.replaceDocument(Document document, RequestOptions options)"
  fullName: "com.azure.cosmos.implementation.RxDocumentClientImpl.replaceDocument(Document document, RequestOptions options)"
  overload: "com.azure.cosmos.implementation.RxDocumentClientImpl.replaceDocument*"
  type: "Method"
  package: "com.azure.cosmos.implementation"
  syntax:
    content: "public Mono<ResourceResponse<Document>> replaceDocument(Document document, RequestOptions options)"
    parameters:
    - id: "document"
      type: "com.azure.cosmos.implementation.Document"
    - id: "options"
      type: "com.azure.cosmos.implementation.RequestOptions"
    return:
      type: "reactor.core.publisher.Mono<com.azure.cosmos.implementation.ResourceResponse<com.azure.cosmos.implementation.Document>>"
- uid: "com.azure.cosmos.implementation.RxDocumentClientImpl.replaceDocument(java.lang.String,java.lang.Object,com.azure.cosmos.implementation.RequestOptions)"
  id: "replaceDocument(java.lang.String,java.lang.Object,com.azure.cosmos.implementation.RequestOptions)"
  parent: "com.azure.cosmos.implementation.RxDocumentClientImpl"
  langs:
  - "java"
  name: "replaceDocument(String documentLink, Object document, RequestOptions options)"
  nameWithType: "RxDocumentClientImpl.replaceDocument(String documentLink, Object document, RequestOptions options)"
  fullName: "com.azure.cosmos.implementation.RxDocumentClientImpl.replaceDocument(String documentLink, Object document, RequestOptions options)"
  overload: "com.azure.cosmos.implementation.RxDocumentClientImpl.replaceDocument*"
  type: "Method"
  package: "com.azure.cosmos.implementation"
  syntax:
    content: "public Mono<ResourceResponse<Document>> replaceDocument(String documentLink, Object document, RequestOptions options)"
    parameters:
    - id: "documentLink"
      type: "java.lang.String"
    - id: "document"
      type: "java.lang.Object"
    - id: "options"
      type: "com.azure.cosmos.implementation.RequestOptions"
    return:
      type: "reactor.core.publisher.Mono<com.azure.cosmos.implementation.ResourceResponse<com.azure.cosmos.implementation.Document>>"
- uid: "com.azure.cosmos.implementation.RxDocumentClientImpl.replaceOffer(com.azure.cosmos.implementation.Offer)"
  id: "replaceOffer(com.azure.cosmos.implementation.Offer)"
  parent: "com.azure.cosmos.implementation.RxDocumentClientImpl"
  langs:
  - "java"
  name: "replaceOffer(Offer offer)"
  nameWithType: "RxDocumentClientImpl.replaceOffer(Offer offer)"
  fullName: "com.azure.cosmos.implementation.RxDocumentClientImpl.replaceOffer(Offer offer)"
  overload: "com.azure.cosmos.implementation.RxDocumentClientImpl.replaceOffer*"
  type: "Method"
  package: "com.azure.cosmos.implementation"
  syntax:
    content: "public Mono<ResourceResponse<Offer>> replaceOffer(Offer offer)"
    parameters:
    - id: "offer"
      type: "com.azure.cosmos.implementation.Offer"
    return:
      type: "reactor.core.publisher.Mono<com.azure.cosmos.implementation.ResourceResponse<com.azure.cosmos.implementation.Offer>>"
- uid: "com.azure.cosmos.implementation.RxDocumentClientImpl.replacePermission(com.azure.cosmos.implementation.Permission,com.azure.cosmos.implementation.RequestOptions)"
  id: "replacePermission(com.azure.cosmos.implementation.Permission,com.azure.cosmos.implementation.RequestOptions)"
  parent: "com.azure.cosmos.implementation.RxDocumentClientImpl"
  langs:
  - "java"
  name: "replacePermission(Permission permission, RequestOptions options)"
  nameWithType: "RxDocumentClientImpl.replacePermission(Permission permission, RequestOptions options)"
  fullName: "com.azure.cosmos.implementation.RxDocumentClientImpl.replacePermission(Permission permission, RequestOptions options)"
  overload: "com.azure.cosmos.implementation.RxDocumentClientImpl.replacePermission*"
  type: "Method"
  package: "com.azure.cosmos.implementation"
  syntax:
    content: "public Mono<ResourceResponse<Permission>> replacePermission(Permission permission, RequestOptions options)"
    parameters:
    - id: "permission"
      type: "com.azure.cosmos.implementation.Permission"
    - id: "options"
      type: "com.azure.cosmos.implementation.RequestOptions"
    return:
      type: "reactor.core.publisher.Mono<com.azure.cosmos.implementation.ResourceResponse<com.azure.cosmos.implementation.Permission>>"
- uid: "com.azure.cosmos.implementation.RxDocumentClientImpl.replaceStoredProcedure(com.azure.cosmos.implementation.StoredProcedure,com.azure.cosmos.implementation.RequestOptions)"
  id: "replaceStoredProcedure(com.azure.cosmos.implementation.StoredProcedure,com.azure.cosmos.implementation.RequestOptions)"
  parent: "com.azure.cosmos.implementation.RxDocumentClientImpl"
  langs:
  - "java"
  name: "replaceStoredProcedure(StoredProcedure storedProcedure, RequestOptions options)"
  nameWithType: "RxDocumentClientImpl.replaceStoredProcedure(StoredProcedure storedProcedure, RequestOptions options)"
  fullName: "com.azure.cosmos.implementation.RxDocumentClientImpl.replaceStoredProcedure(StoredProcedure storedProcedure, RequestOptions options)"
  overload: "com.azure.cosmos.implementation.RxDocumentClientImpl.replaceStoredProcedure*"
  type: "Method"
  package: "com.azure.cosmos.implementation"
  syntax:
    content: "public Mono<ResourceResponse<StoredProcedure>> replaceStoredProcedure(StoredProcedure storedProcedure, RequestOptions options)"
    parameters:
    - id: "storedProcedure"
      type: "com.azure.cosmos.implementation.StoredProcedure"
    - id: "options"
      type: "com.azure.cosmos.implementation.RequestOptions"
    return:
      type: "reactor.core.publisher.Mono<com.azure.cosmos.implementation.ResourceResponse<com.azure.cosmos.implementation.StoredProcedure>>"
- uid: "com.azure.cosmos.implementation.RxDocumentClientImpl.replaceTrigger(com.azure.cosmos.implementation.Trigger,com.azure.cosmos.implementation.RequestOptions)"
  id: "replaceTrigger(com.azure.cosmos.implementation.Trigger,com.azure.cosmos.implementation.RequestOptions)"
  parent: "com.azure.cosmos.implementation.RxDocumentClientImpl"
  langs:
  - "java"
  name: "replaceTrigger(Trigger trigger, RequestOptions options)"
  nameWithType: "RxDocumentClientImpl.replaceTrigger(Trigger trigger, RequestOptions options)"
  fullName: "com.azure.cosmos.implementation.RxDocumentClientImpl.replaceTrigger(Trigger trigger, RequestOptions options)"
  overload: "com.azure.cosmos.implementation.RxDocumentClientImpl.replaceTrigger*"
  type: "Method"
  package: "com.azure.cosmos.implementation"
  syntax:
    content: "public Mono<ResourceResponse<Trigger>> replaceTrigger(Trigger trigger, RequestOptions options)"
    parameters:
    - id: "trigger"
      type: "com.azure.cosmos.implementation.Trigger"
    - id: "options"
      type: "com.azure.cosmos.implementation.RequestOptions"
    return:
      type: "reactor.core.publisher.Mono<com.azure.cosmos.implementation.ResourceResponse<com.azure.cosmos.implementation.Trigger>>"
- uid: "com.azure.cosmos.implementation.RxDocumentClientImpl.replaceUser(com.azure.cosmos.implementation.User,com.azure.cosmos.implementation.RequestOptions)"
  id: "replaceUser(com.azure.cosmos.implementation.User,com.azure.cosmos.implementation.RequestOptions)"
  parent: "com.azure.cosmos.implementation.RxDocumentClientImpl"
  langs:
  - "java"
  name: "replaceUser(User user, RequestOptions options)"
  nameWithType: "RxDocumentClientImpl.replaceUser(User user, RequestOptions options)"
  fullName: "com.azure.cosmos.implementation.RxDocumentClientImpl.replaceUser(User user, RequestOptions options)"
  overload: "com.azure.cosmos.implementation.RxDocumentClientImpl.replaceUser*"
  type: "Method"
  package: "com.azure.cosmos.implementation"
  syntax:
    content: "public Mono<ResourceResponse<User>> replaceUser(User user, RequestOptions options)"
    parameters:
    - id: "user"
      type: "com.azure.cosmos.implementation.User"
    - id: "options"
      type: "com.azure.cosmos.implementation.RequestOptions"
    return:
      type: "reactor.core.publisher.Mono<com.azure.cosmos.implementation.ResourceResponse<com.azure.cosmos.implementation.User>>"
- uid: "com.azure.cosmos.implementation.RxDocumentClientImpl.replaceUserDefinedFunction(com.azure.cosmos.implementation.UserDefinedFunction,com.azure.cosmos.implementation.RequestOptions)"
  id: "replaceUserDefinedFunction(com.azure.cosmos.implementation.UserDefinedFunction,com.azure.cosmos.implementation.RequestOptions)"
  parent: "com.azure.cosmos.implementation.RxDocumentClientImpl"
  langs:
  - "java"
  name: "replaceUserDefinedFunction(UserDefinedFunction udf, RequestOptions options)"
  nameWithType: "RxDocumentClientImpl.replaceUserDefinedFunction(UserDefinedFunction udf, RequestOptions options)"
  fullName: "com.azure.cosmos.implementation.RxDocumentClientImpl.replaceUserDefinedFunction(UserDefinedFunction udf, RequestOptions options)"
  overload: "com.azure.cosmos.implementation.RxDocumentClientImpl.replaceUserDefinedFunction*"
  type: "Method"
  package: "com.azure.cosmos.implementation"
  syntax:
    content: "public Mono<ResourceResponse<UserDefinedFunction>> replaceUserDefinedFunction(UserDefinedFunction udf, RequestOptions options)"
    parameters:
    - id: "udf"
      type: "com.azure.cosmos.implementation.UserDefinedFunction"
    - id: "options"
      type: "com.azure.cosmos.implementation.RequestOptions"
    return:
      type: "reactor.core.publisher.Mono<com.azure.cosmos.implementation.ResourceResponse<com.azure.cosmos.implementation.UserDefinedFunction>>"
- uid: "com.azure.cosmos.implementation.RxDocumentClientImpl.setSession(java.lang.Object)"
  id: "setSession(java.lang.Object)"
  parent: "com.azure.cosmos.implementation.RxDocumentClientImpl"
  langs:
  - "java"
  name: "setSession(Object sessionContainer)"
  nameWithType: "RxDocumentClientImpl.setSession(Object sessionContainer)"
  fullName: "com.azure.cosmos.implementation.RxDocumentClientImpl.setSession(Object sessionContainer)"
  overload: "com.azure.cosmos.implementation.RxDocumentClientImpl.setSession*"
  type: "Method"
  package: "com.azure.cosmos.implementation"
  syntax:
    content: "public void setSession(Object sessionContainer)"
    parameters:
    - id: "sessionContainer"
      type: "java.lang.Object"
- uid: "com.azure.cosmos.implementation.RxDocumentClientImpl.upsertDocument(java.lang.String,java.lang.Object,com.azure.cosmos.implementation.RequestOptions,boolean)"
  id: "upsertDocument(java.lang.String,java.lang.Object,com.azure.cosmos.implementation.RequestOptions,boolean)"
  parent: "com.azure.cosmos.implementation.RxDocumentClientImpl"
  langs:
  - "java"
  name: "upsertDocument(String collectionLink, Object document, RequestOptions options, boolean disableAutomaticIdGeneration)"
  nameWithType: "RxDocumentClientImpl.upsertDocument(String collectionLink, Object document, RequestOptions options, boolean disableAutomaticIdGeneration)"
  fullName: "com.azure.cosmos.implementation.RxDocumentClientImpl.upsertDocument(String collectionLink, Object document, RequestOptions options, boolean disableAutomaticIdGeneration)"
  overload: "com.azure.cosmos.implementation.RxDocumentClientImpl.upsertDocument*"
  type: "Method"
  package: "com.azure.cosmos.implementation"
  syntax:
    content: "public Mono<ResourceResponse<Document>> upsertDocument(String collectionLink, Object document, RequestOptions options, boolean disableAutomaticIdGeneration)"
    parameters:
    - id: "collectionLink"
      type: "java.lang.String"
    - id: "document"
      type: "java.lang.Object"
    - id: "options"
      type: "com.azure.cosmos.implementation.RequestOptions"
    - id: "disableAutomaticIdGeneration"
      type: "boolean"
    return:
      type: "reactor.core.publisher.Mono<com.azure.cosmos.implementation.ResourceResponse<com.azure.cosmos.implementation.Document>>"
- uid: "com.azure.cosmos.implementation.RxDocumentClientImpl.upsertPermission(java.lang.String,com.azure.cosmos.implementation.Permission,com.azure.cosmos.implementation.RequestOptions)"
  id: "upsertPermission(java.lang.String,com.azure.cosmos.implementation.Permission,com.azure.cosmos.implementation.RequestOptions)"
  parent: "com.azure.cosmos.implementation.RxDocumentClientImpl"
  langs:
  - "java"
  name: "upsertPermission(String userLink, Permission permission, RequestOptions options)"
  nameWithType: "RxDocumentClientImpl.upsertPermission(String userLink, Permission permission, RequestOptions options)"
  fullName: "com.azure.cosmos.implementation.RxDocumentClientImpl.upsertPermission(String userLink, Permission permission, RequestOptions options)"
  overload: "com.azure.cosmos.implementation.RxDocumentClientImpl.upsertPermission*"
  type: "Method"
  package: "com.azure.cosmos.implementation"
  syntax:
    content: "public Mono<ResourceResponse<Permission>> upsertPermission(String userLink, Permission permission, RequestOptions options)"
    parameters:
    - id: "userLink"
      type: "java.lang.String"
    - id: "permission"
      type: "com.azure.cosmos.implementation.Permission"
    - id: "options"
      type: "com.azure.cosmos.implementation.RequestOptions"
    return:
      type: "reactor.core.publisher.Mono<com.azure.cosmos.implementation.ResourceResponse<com.azure.cosmos.implementation.Permission>>"
- uid: "com.azure.cosmos.implementation.RxDocumentClientImpl.upsertStoredProcedure(java.lang.String,com.azure.cosmos.implementation.StoredProcedure,com.azure.cosmos.implementation.RequestOptions)"
  id: "upsertStoredProcedure(java.lang.String,com.azure.cosmos.implementation.StoredProcedure,com.azure.cosmos.implementation.RequestOptions)"
  parent: "com.azure.cosmos.implementation.RxDocumentClientImpl"
  langs:
  - "java"
  name: "upsertStoredProcedure(String collectionLink, StoredProcedure storedProcedure, RequestOptions options)"
  nameWithType: "RxDocumentClientImpl.upsertStoredProcedure(String collectionLink, StoredProcedure storedProcedure, RequestOptions options)"
  fullName: "com.azure.cosmos.implementation.RxDocumentClientImpl.upsertStoredProcedure(String collectionLink, StoredProcedure storedProcedure, RequestOptions options)"
  overload: "com.azure.cosmos.implementation.RxDocumentClientImpl.upsertStoredProcedure*"
  type: "Method"
  package: "com.azure.cosmos.implementation"
  syntax:
    content: "public Mono<ResourceResponse<StoredProcedure>> upsertStoredProcedure(String collectionLink, StoredProcedure storedProcedure, RequestOptions options)"
    parameters:
    - id: "collectionLink"
      type: "java.lang.String"
    - id: "storedProcedure"
      type: "com.azure.cosmos.implementation.StoredProcedure"
    - id: "options"
      type: "com.azure.cosmos.implementation.RequestOptions"
    return:
      type: "reactor.core.publisher.Mono<com.azure.cosmos.implementation.ResourceResponse<com.azure.cosmos.implementation.StoredProcedure>>"
- uid: "com.azure.cosmos.implementation.RxDocumentClientImpl.upsertTrigger(java.lang.String,com.azure.cosmos.implementation.Trigger,com.azure.cosmos.implementation.RequestOptions)"
  id: "upsertTrigger(java.lang.String,com.azure.cosmos.implementation.Trigger,com.azure.cosmos.implementation.RequestOptions)"
  parent: "com.azure.cosmos.implementation.RxDocumentClientImpl"
  langs:
  - "java"
  name: "upsertTrigger(String collectionLink, Trigger trigger, RequestOptions options)"
  nameWithType: "RxDocumentClientImpl.upsertTrigger(String collectionLink, Trigger trigger, RequestOptions options)"
  fullName: "com.azure.cosmos.implementation.RxDocumentClientImpl.upsertTrigger(String collectionLink, Trigger trigger, RequestOptions options)"
  overload: "com.azure.cosmos.implementation.RxDocumentClientImpl.upsertTrigger*"
  type: "Method"
  package: "com.azure.cosmos.implementation"
  syntax:
    content: "public Mono<ResourceResponse<Trigger>> upsertTrigger(String collectionLink, Trigger trigger, RequestOptions options)"
    parameters:
    - id: "collectionLink"
      type: "java.lang.String"
    - id: "trigger"
      type: "com.azure.cosmos.implementation.Trigger"
    - id: "options"
      type: "com.azure.cosmos.implementation.RequestOptions"
    return:
      type: "reactor.core.publisher.Mono<com.azure.cosmos.implementation.ResourceResponse<com.azure.cosmos.implementation.Trigger>>"
- uid: "com.azure.cosmos.implementation.RxDocumentClientImpl.upsertUser(java.lang.String,com.azure.cosmos.implementation.User,com.azure.cosmos.implementation.RequestOptions)"
  id: "upsertUser(java.lang.String,com.azure.cosmos.implementation.User,com.azure.cosmos.implementation.RequestOptions)"
  parent: "com.azure.cosmos.implementation.RxDocumentClientImpl"
  langs:
  - "java"
  name: "upsertUser(String databaseLink, User user, RequestOptions options)"
  nameWithType: "RxDocumentClientImpl.upsertUser(String databaseLink, User user, RequestOptions options)"
  fullName: "com.azure.cosmos.implementation.RxDocumentClientImpl.upsertUser(String databaseLink, User user, RequestOptions options)"
  overload: "com.azure.cosmos.implementation.RxDocumentClientImpl.upsertUser*"
  type: "Method"
  package: "com.azure.cosmos.implementation"
  syntax:
    content: "public Mono<ResourceResponse<User>> upsertUser(String databaseLink, User user, RequestOptions options)"
    parameters:
    - id: "databaseLink"
      type: "java.lang.String"
    - id: "user"
      type: "com.azure.cosmos.implementation.User"
    - id: "options"
      type: "com.azure.cosmos.implementation.RequestOptions"
    return:
      type: "reactor.core.publisher.Mono<com.azure.cosmos.implementation.ResourceResponse<com.azure.cosmos.implementation.User>>"
- uid: "com.azure.cosmos.implementation.RxDocumentClientImpl.upsertUserDefinedFunction(java.lang.String,com.azure.cosmos.implementation.UserDefinedFunction,com.azure.cosmos.implementation.RequestOptions)"
  id: "upsertUserDefinedFunction(java.lang.String,com.azure.cosmos.implementation.UserDefinedFunction,com.azure.cosmos.implementation.RequestOptions)"
  parent: "com.azure.cosmos.implementation.RxDocumentClientImpl"
  langs:
  - "java"
  name: "upsertUserDefinedFunction(String collectionLink, UserDefinedFunction udf, RequestOptions options)"
  nameWithType: "RxDocumentClientImpl.upsertUserDefinedFunction(String collectionLink, UserDefinedFunction udf, RequestOptions options)"
  fullName: "com.azure.cosmos.implementation.RxDocumentClientImpl.upsertUserDefinedFunction(String collectionLink, UserDefinedFunction udf, RequestOptions options)"
  overload: "com.azure.cosmos.implementation.RxDocumentClientImpl.upsertUserDefinedFunction*"
  type: "Method"
  package: "com.azure.cosmos.implementation"
  syntax:
    content: "public Mono<ResourceResponse<UserDefinedFunction>> upsertUserDefinedFunction(String collectionLink, UserDefinedFunction udf, RequestOptions options)"
    parameters:
    - id: "collectionLink"
      type: "java.lang.String"
    - id: "udf"
      type: "com.azure.cosmos.implementation.UserDefinedFunction"
    - id: "options"
      type: "com.azure.cosmos.implementation.RequestOptions"
    return:
      type: "reactor.core.publisher.Mono<com.azure.cosmos.implementation.ResourceResponse<com.azure.cosmos.implementation.UserDefinedFunction>>"
references:
- uid: "java.net.URI"
  spec.java:
  - uid: "java.net.URI"
    name: "URI"
    fullName: "java.net.URI"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "java.util.List<com.azure.cosmos.implementation.Permission>"
  spec.java:
  - uid: "java.util.List"
    name: "List"
    fullName: "java.util.List"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.cosmos.implementation.Permission"
    name: "Permission"
    fullName: "com.azure.cosmos.implementation.Permission"
  - name: ">"
    fullName: ">"
- uid: "com.azure.cosmos.ConnectionPolicy"
  name: "ConnectionPolicy"
  nameWithType: "ConnectionPolicy"
  fullName: "com.azure.cosmos.ConnectionPolicy"
- uid: "com.azure.cosmos.ConsistencyLevel"
  name: "ConsistencyLevel"
  nameWithType: "ConsistencyLevel"
  fullName: "com.azure.cosmos.ConsistencyLevel"
- uid: "com.azure.cosmos.implementation.Configs"
  name: "Configs"
  nameWithType: "Configs"
  fullName: "com.azure.cosmos.implementation.Configs"
- uid: "com.azure.cosmos.TokenResolver"
  name: "TokenResolver"
  nameWithType: "TokenResolver"
  fullName: "com.azure.cosmos.TokenResolver"
- uid: "com.azure.cosmos.CosmosKeyCredential"
  name: "CosmosKeyCredential"
  nameWithType: "CosmosKeyCredential"
  fullName: "com.azure.cosmos.CosmosKeyCredential"
- uid: "boolean"
  spec.java:
  - uid: "boolean"
    name: "boolean"
    fullName: "boolean"
- uid: "com.azure.cosmos.implementation.RxDocumentClientImpl.RxDocumentClientImpl*"
  name: "RxDocumentClientImpl"
  nameWithType: "RxDocumentClientImpl.RxDocumentClientImpl"
  fullName: "com.azure.cosmos.implementation.RxDocumentClientImpl.RxDocumentClientImpl"
  package: "com.azure.cosmos.implementation"
- uid: "com.azure.cosmos.implementation.RxDocumentClientImpl.init*"
  name: "init"
  nameWithType: "RxDocumentClientImpl.init"
  fullName: "com.azure.cosmos.implementation.RxDocumentClientImpl.init"
  package: "com.azure.cosmos.implementation"
- uid: "com.azure.cosmos.implementation.DatabaseAccountManagerInternal"
  name: "DatabaseAccountManagerInternal"
  nameWithType: "DatabaseAccountManagerInternal"
  fullName: "com.azure.cosmos.implementation.DatabaseAccountManagerInternal"
- uid: "com.azure.cosmos.implementation.RxDocumentClientImpl.asDatabaseAccountManagerInternal*"
  name: "asDatabaseAccountManagerInternal"
  nameWithType: "RxDocumentClientImpl.asDatabaseAccountManagerInternal"
  fullName: "com.azure.cosmos.implementation.RxDocumentClientImpl.asDatabaseAccountManagerInternal"
  package: "com.azure.cosmos.implementation"
- uid: "com.azure.cosmos.implementation.ISessionContainer"
  name: "ISessionContainer"
  nameWithType: "ISessionContainer"
  fullName: "com.azure.cosmos.implementation.ISessionContainer"
- uid: "com.azure.cosmos.implementation.QueryCompatibilityMode"
  name: "QueryCompatibilityMode"
  nameWithType: "QueryCompatibilityMode"
  fullName: "com.azure.cosmos.implementation.QueryCompatibilityMode"
- uid: "com.azure.cosmos.implementation.UserAgentContainer"
  name: "UserAgentContainer"
  nameWithType: "UserAgentContainer"
  fullName: "com.azure.cosmos.implementation.UserAgentContainer"
- uid: "com.azure.cosmos.implementation.GlobalEndpointManager"
  name: "GlobalEndpointManager"
  nameWithType: "GlobalEndpointManager"
  fullName: "com.azure.cosmos.implementation.GlobalEndpointManager"
- uid: "com.azure.cosmos.implementation.http.HttpClient"
  name: "HttpClient"
  nameWithType: "HttpClient"
  fullName: "com.azure.cosmos.implementation.http.HttpClient"
- uid: "com.azure.cosmos.implementation.RxGatewayStoreModel"
  name: "RxGatewayStoreModel"
  nameWithType: "RxGatewayStoreModel"
  fullName: "com.azure.cosmos.implementation.RxGatewayStoreModel"
- uid: "com.azure.cosmos.implementation.RxDocumentClientImpl.createRxGatewayProxy*"
  name: "createRxGatewayProxy"
  nameWithType: "RxDocumentClientImpl.createRxGatewayProxy"
  fullName: "com.azure.cosmos.implementation.RxDocumentClientImpl.createRxGatewayProxy"
  package: "com.azure.cosmos.implementation"
- uid: "com.azure.cosmos.implementation.RxDocumentClientImpl.getServiceEndpoint*"
  name: "getServiceEndpoint"
  nameWithType: "RxDocumentClientImpl.getServiceEndpoint"
  fullName: "com.azure.cosmos.implementation.RxDocumentClientImpl.getServiceEndpoint"
  package: "com.azure.cosmos.implementation"
- uid: "com.azure.cosmos.implementation.RxDocumentClientImpl.getWriteEndpoint*"
  name: "getWriteEndpoint"
  nameWithType: "RxDocumentClientImpl.getWriteEndpoint"
  fullName: "com.azure.cosmos.implementation.RxDocumentClientImpl.getWriteEndpoint"
  package: "com.azure.cosmos.implementation"
- uid: "com.azure.cosmos.implementation.RxDocumentClientImpl.getReadEndpoint*"
  name: "getReadEndpoint"
  nameWithType: "RxDocumentClientImpl.getReadEndpoint"
  fullName: "com.azure.cosmos.implementation.RxDocumentClientImpl.getReadEndpoint"
  package: "com.azure.cosmos.implementation"
- uid: "com.azure.cosmos.implementation.RxDocumentClientImpl.getConnectionPolicy*"
  name: "getConnectionPolicy"
  nameWithType: "RxDocumentClientImpl.getConnectionPolicy"
  fullName: "com.azure.cosmos.implementation.RxDocumentClientImpl.getConnectionPolicy"
  package: "com.azure.cosmos.implementation"
- uid: "com.azure.cosmos.implementation.Database"
  name: "Database"
  nameWithType: "Database"
  fullName: "com.azure.cosmos.implementation.Database"
- uid: "com.azure.cosmos.implementation.RequestOptions"
  name: "RequestOptions"
  nameWithType: "RequestOptions"
  fullName: "com.azure.cosmos.implementation.RequestOptions"
- uid: "reactor.core.publisher.Mono<com.azure.cosmos.implementation.ResourceResponse<com.azure.cosmos.implementation.Database>>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.cosmos.implementation.ResourceResponse"
    name: "ResourceResponse"
    fullName: "com.azure.cosmos.implementation.ResourceResponse"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.cosmos.implementation.Database"
    name: "Database"
    fullName: "com.azure.cosmos.implementation.Database"
  - name: ">"
    fullName: ">"
  - name: ">"
    fullName: ">"
- uid: "com.azure.cosmos.implementation.RxDocumentClientImpl.createDatabase*"
  name: "createDatabase"
  nameWithType: "RxDocumentClientImpl.createDatabase"
  fullName: "com.azure.cosmos.implementation.RxDocumentClientImpl.createDatabase"
  package: "com.azure.cosmos.implementation"
- uid: "com.azure.cosmos.implementation.RxDocumentClientImpl.deleteDatabase*"
  name: "deleteDatabase"
  nameWithType: "RxDocumentClientImpl.deleteDatabase"
  fullName: "com.azure.cosmos.implementation.RxDocumentClientImpl.deleteDatabase"
  package: "com.azure.cosmos.implementation"
- uid: "com.azure.cosmos.implementation.RxDocumentClientImpl.readDatabase*"
  name: "readDatabase"
  nameWithType: "RxDocumentClientImpl.readDatabase"
  fullName: "com.azure.cosmos.implementation.RxDocumentClientImpl.readDatabase"
  package: "com.azure.cosmos.implementation"
- uid: "com.azure.cosmos.FeedOptions"
  name: "FeedOptions"
  nameWithType: "FeedOptions"
  fullName: "com.azure.cosmos.FeedOptions"
- uid: "reactor.core.publisher.Flux<com.azure.cosmos.FeedResponse<com.azure.cosmos.implementation.Database>>"
  spec.java:
  - uid: "reactor.core.publisher.Flux"
    name: "Flux"
    fullName: "reactor.core.publisher.Flux"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.cosmos.FeedResponse"
    name: "FeedResponse"
    fullName: "com.azure.cosmos.FeedResponse"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.cosmos.implementation.Database"
    name: "Database"
    fullName: "com.azure.cosmos.implementation.Database"
  - name: ">"
    fullName: ">"
  - name: ">"
    fullName: ">"
- uid: "com.azure.cosmos.implementation.RxDocumentClientImpl.readDatabases*"
  name: "readDatabases"
  nameWithType: "RxDocumentClientImpl.readDatabases"
  fullName: "com.azure.cosmos.implementation.RxDocumentClientImpl.readDatabases"
  package: "com.azure.cosmos.implementation"
- uid: "com.azure.cosmos.implementation.RxDocumentClientImpl.queryDatabases*"
  name: "queryDatabases"
  nameWithType: "RxDocumentClientImpl.queryDatabases"
  fullName: "com.azure.cosmos.implementation.RxDocumentClientImpl.queryDatabases"
  package: "com.azure.cosmos.implementation"
- uid: "com.azure.cosmos.SqlQuerySpec"
  name: "SqlQuerySpec"
  nameWithType: "SqlQuerySpec"
  fullName: "com.azure.cosmos.SqlQuerySpec"
- uid: "com.azure.cosmos.implementation.DocumentCollection"
  name: "DocumentCollection"
  nameWithType: "DocumentCollection"
  fullName: "com.azure.cosmos.implementation.DocumentCollection"
- uid: "reactor.core.publisher.Mono<com.azure.cosmos.implementation.ResourceResponse<com.azure.cosmos.implementation.DocumentCollection>>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.cosmos.implementation.ResourceResponse"
    name: "ResourceResponse"
    fullName: "com.azure.cosmos.implementation.ResourceResponse"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.cosmos.implementation.DocumentCollection"
    name: "DocumentCollection"
    fullName: "com.azure.cosmos.implementation.DocumentCollection"
  - name: ">"
    fullName: ">"
  - name: ">"
    fullName: ">"
- uid: "com.azure.cosmos.implementation.RxDocumentClientImpl.createCollection*"
  name: "createCollection"
  nameWithType: "RxDocumentClientImpl.createCollection"
  fullName: "com.azure.cosmos.implementation.RxDocumentClientImpl.createCollection"
  package: "com.azure.cosmos.implementation"
- uid: "com.azure.cosmos.implementation.RxDocumentClientImpl.replaceCollection*"
  name: "replaceCollection"
  nameWithType: "RxDocumentClientImpl.replaceCollection"
  fullName: "com.azure.cosmos.implementation.RxDocumentClientImpl.replaceCollection"
  package: "com.azure.cosmos.implementation"
- uid: "com.azure.cosmos.implementation.RxDocumentClientImpl.deleteCollection*"
  name: "deleteCollection"
  nameWithType: "RxDocumentClientImpl.deleteCollection"
  fullName: "com.azure.cosmos.implementation.RxDocumentClientImpl.deleteCollection"
  package: "com.azure.cosmos.implementation"
- uid: "com.azure.cosmos.implementation.RxDocumentServiceRequest"
  name: "RxDocumentServiceRequest"
  nameWithType: "RxDocumentServiceRequest"
  fullName: "com.azure.cosmos.implementation.RxDocumentServiceRequest"
- uid: "reactor.core.publisher.Mono<com.azure.cosmos.implementation.RxDocumentServiceResponse>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.cosmos.implementation.RxDocumentServiceResponse"
    name: "RxDocumentServiceResponse"
    fullName: "com.azure.cosmos.implementation.RxDocumentServiceResponse"
  - name: ">"
    fullName: ">"
- uid: "com.azure.cosmos.implementation.RxDocumentClientImpl.readFeed*"
  name: "readFeed"
  nameWithType: "RxDocumentClientImpl.readFeed"
  fullName: "com.azure.cosmos.implementation.RxDocumentClientImpl.readFeed"
  package: "com.azure.cosmos.implementation"
- uid: "com.azure.cosmos.implementation.RxDocumentClientImpl.readCollection*"
  name: "readCollection"
  nameWithType: "RxDocumentClientImpl.readCollection"
  fullName: "com.azure.cosmos.implementation.RxDocumentClientImpl.readCollection"
  package: "com.azure.cosmos.implementation"
- uid: "reactor.core.publisher.Flux<com.azure.cosmos.FeedResponse<com.azure.cosmos.implementation.DocumentCollection>>"
  spec.java:
  - uid: "reactor.core.publisher.Flux"
    name: "Flux"
    fullName: "reactor.core.publisher.Flux"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.cosmos.FeedResponse"
    name: "FeedResponse"
    fullName: "com.azure.cosmos.FeedResponse"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.cosmos.implementation.DocumentCollection"
    name: "DocumentCollection"
    fullName: "com.azure.cosmos.implementation.DocumentCollection"
  - name: ">"
    fullName: ">"
  - name: ">"
    fullName: ">"
- uid: "com.azure.cosmos.implementation.RxDocumentClientImpl.readCollections*"
  name: "readCollections"
  nameWithType: "RxDocumentClientImpl.readCollections"
  fullName: "com.azure.cosmos.implementation.RxDocumentClientImpl.readCollections"
  package: "com.azure.cosmos.implementation"
- uid: "com.azure.cosmos.implementation.RxDocumentClientImpl.queryCollections*"
  name: "queryCollections"
  nameWithType: "RxDocumentClientImpl.queryCollections"
  fullName: "com.azure.cosmos.implementation.RxDocumentClientImpl.queryCollections"
  package: "com.azure.cosmos.implementation"
- uid: "com.azure.cosmos.implementation.ResourceType"
  name: "ResourceType"
  nameWithType: "ResourceType"
  fullName: "com.azure.cosmos.implementation.ResourceType"
- uid: "com.azure.cosmos.RequestVerb"
  name: "RequestVerb"
  nameWithType: "RequestVerb"
  fullName: "com.azure.cosmos.RequestVerb"
- uid: "java.util.Map<java.lang.String,java.lang.String>"
  spec.java:
  - uid: "java.util.Map"
    name: "Map"
    fullName: "java.util.Map"
  - name: "<"
    fullName: "<"
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
  - name: ","
    fullName: ","
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
  - name: ">"
    fullName: ">"
- uid: "com.azure.cosmos.implementation.AuthorizationTokenType"
  name: "AuthorizationTokenType"
  nameWithType: "AuthorizationTokenType"
  fullName: "com.azure.cosmos.implementation.AuthorizationTokenType"
- uid: "java.util.Map<java.lang.String,java.lang.Object>"
  spec.java:
  - uid: "java.util.Map"
    name: "Map"
    fullName: "java.util.Map"
  - name: "<"
    fullName: "<"
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
  - name: ","
    fullName: ","
  - uid: "java.lang.Object"
    name: "Object"
    fullName: "java.lang.Object"
  - name: ">"
    fullName: ">"
- uid: "com.azure.cosmos.implementation.RxDocumentClientImpl.getUserAuthorizationToken*"
  name: "getUserAuthorizationToken"
  nameWithType: "RxDocumentClientImpl.getUserAuthorizationToken"
  fullName: "com.azure.cosmos.implementation.RxDocumentClientImpl.getUserAuthorizationToken"
  package: "com.azure.cosmos.implementation"
- uid: "com.azure.cosmos.implementation.RxDocumentServiceResponse"
  name: "RxDocumentServiceResponse"
  nameWithType: "RxDocumentServiceResponse"
  fullName: "com.azure.cosmos.implementation.RxDocumentServiceResponse"
- uid: "com.azure.cosmos.implementation.RxDocumentClientImpl.captureSessionToken*"
  name: "captureSessionToken"
  nameWithType: "RxDocumentClientImpl.captureSessionToken"
  fullName: "com.azure.cosmos.implementation.RxDocumentClientImpl.captureSessionToken"
  package: "com.azure.cosmos.implementation"
- uid: "java.lang.Object"
  spec.java:
  - uid: "java.lang.Object"
    name: "Object"
    fullName: "java.lang.Object"
- uid: "reactor.core.publisher.Mono<com.azure.cosmos.implementation.ResourceResponse<com.azure.cosmos.implementation.Document>>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.cosmos.implementation.ResourceResponse"
    name: "ResourceResponse"
    fullName: "com.azure.cosmos.implementation.ResourceResponse"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.cosmos.implementation.Document"
    name: "Document"
    fullName: "com.azure.cosmos.implementation.Document"
  - name: ">"
    fullName: ">"
  - name: ">"
    fullName: ">"
- uid: "com.azure.cosmos.implementation.RxDocumentClientImpl.createDocument*"
  name: "createDocument"
  nameWithType: "RxDocumentClientImpl.createDocument"
  fullName: "com.azure.cosmos.implementation.RxDocumentClientImpl.createDocument"
  package: "com.azure.cosmos.implementation"
- uid: "com.azure.cosmos.implementation.RxDocumentClientImpl.upsertDocument*"
  name: "upsertDocument"
  nameWithType: "RxDocumentClientImpl.upsertDocument"
  fullName: "com.azure.cosmos.implementation.RxDocumentClientImpl.upsertDocument"
  package: "com.azure.cosmos.implementation"
- uid: "com.azure.cosmos.implementation.RxDocumentClientImpl.replaceDocument*"
  name: "replaceDocument"
  nameWithType: "RxDocumentClientImpl.replaceDocument"
  fullName: "com.azure.cosmos.implementation.RxDocumentClientImpl.replaceDocument"
  package: "com.azure.cosmos.implementation"
- uid: "com.azure.cosmos.implementation.Document"
  name: "Document"
  nameWithType: "Document"
  fullName: "com.azure.cosmos.implementation.Document"
- uid: "com.azure.cosmos.implementation.RxDocumentClientImpl.deleteDocument*"
  name: "deleteDocument"
  nameWithType: "RxDocumentClientImpl.deleteDocument"
  fullName: "com.azure.cosmos.implementation.RxDocumentClientImpl.deleteDocument"
  package: "com.azure.cosmos.implementation"
- uid: "com.azure.cosmos.implementation.RxDocumentClientImpl.readDocument*"
  name: "readDocument"
  nameWithType: "RxDocumentClientImpl.readDocument"
  fullName: "com.azure.cosmos.implementation.RxDocumentClientImpl.readDocument"
  package: "com.azure.cosmos.implementation"
- uid: "reactor.core.publisher.Flux<com.azure.cosmos.FeedResponse<com.azure.cosmos.implementation.Document>>"
  spec.java:
  - uid: "reactor.core.publisher.Flux"
    name: "Flux"
    fullName: "reactor.core.publisher.Flux"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.cosmos.FeedResponse"
    name: "FeedResponse"
    fullName: "com.azure.cosmos.FeedResponse"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.cosmos.implementation.Document"
    name: "Document"
    fullName: "com.azure.cosmos.implementation.Document"
  - name: ">"
    fullName: ">"
  - name: ">"
    fullName: ">"
- uid: "com.azure.cosmos.implementation.RxDocumentClientImpl.readDocuments*"
  name: "readDocuments"
  nameWithType: "RxDocumentClientImpl.readDocuments"
  fullName: "com.azure.cosmos.implementation.RxDocumentClientImpl.readDocuments"
  package: "com.azure.cosmos.implementation"
- uid: "java.util.List<org.apache.commons.lang3.tuple.Pair<java.lang.String,com.azure.cosmos.PartitionKey>>"
  spec.java:
  - uid: "java.util.List"
    name: "List"
    fullName: "java.util.List"
  - name: "<"
    fullName: "<"
  - uid: "org.apache.commons.lang3.tuple.Pair"
    name: "Pair"
    fullName: "org.apache.commons.lang3.tuple.Pair"
  - name: "<"
    fullName: "<"
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
  - name: ","
    fullName: ","
  - uid: "com.azure.cosmos.PartitionKey"
    name: "PartitionKey"
    fullName: "com.azure.cosmos.PartitionKey"
  - name: ">"
    fullName: ">"
  - name: ">"
    fullName: ">"
- uid: "java.lang.Class<T>"
  spec.java:
  - uid: "java.lang.Class"
    name: "Class"
    fullName: "java.lang.Class"
  - name: "<"
    fullName: "<"
  - uid: "T"
    name: "T"
    fullName: "T"
  - name: ">"
    fullName: ">"
- uid: "reactor.core.publisher.Mono<com.azure.cosmos.FeedResponse<T>>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.cosmos.FeedResponse"
    name: "FeedResponse"
    fullName: "com.azure.cosmos.FeedResponse"
  - name: "<"
    fullName: "<"
  - uid: "T"
    name: "T"
    fullName: "T"
  - name: ">"
    fullName: ">"
  - name: ">"
    fullName: ">"
- uid: "com.azure.cosmos.implementation.RxDocumentClientImpl.readMany*"
  name: "<T>readMany"
  nameWithType: "RxDocumentClientImpl.<T>readMany"
  fullName: "com.azure.cosmos.implementation.RxDocumentClientImpl.<T>readMany"
  package: "com.azure.cosmos.implementation"
- uid: "com.azure.cosmos.implementation.RxDocumentClientImpl.queryDocuments*"
  name: "queryDocuments"
  nameWithType: "RxDocumentClientImpl.queryDocuments"
  fullName: "com.azure.cosmos.implementation.RxDocumentClientImpl.queryDocuments"
  package: "com.azure.cosmos.implementation"
- uid: "com.azure.cosmos.ChangeFeedOptions"
  name: "ChangeFeedOptions"
  nameWithType: "ChangeFeedOptions"
  fullName: "com.azure.cosmos.ChangeFeedOptions"
- uid: "com.azure.cosmos.implementation.RxDocumentClientImpl.queryDocumentChangeFeed*"
  name: "queryDocumentChangeFeed"
  nameWithType: "RxDocumentClientImpl.queryDocumentChangeFeed"
  fullName: "com.azure.cosmos.implementation.RxDocumentClientImpl.queryDocumentChangeFeed"
  package: "com.azure.cosmos.implementation"
- uid: "reactor.core.publisher.Flux<com.azure.cosmos.FeedResponse<com.azure.cosmos.implementation.PartitionKeyRange>>"
  spec.java:
  - uid: "reactor.core.publisher.Flux"
    name: "Flux"
    fullName: "reactor.core.publisher.Flux"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.cosmos.FeedResponse"
    name: "FeedResponse"
    fullName: "com.azure.cosmos.FeedResponse"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.cosmos.implementation.PartitionKeyRange"
    name: "PartitionKeyRange"
    fullName: "com.azure.cosmos.implementation.PartitionKeyRange"
  - name: ">"
    fullName: ">"
  - name: ">"
    fullName: ">"
- uid: "com.azure.cosmos.implementation.RxDocumentClientImpl.readPartitionKeyRanges*"
  name: "readPartitionKeyRanges"
  nameWithType: "RxDocumentClientImpl.readPartitionKeyRanges"
  fullName: "com.azure.cosmos.implementation.RxDocumentClientImpl.readPartitionKeyRanges"
  package: "com.azure.cosmos.implementation"
- uid: "com.azure.cosmos.implementation.StoredProcedure"
  name: "StoredProcedure"
  nameWithType: "StoredProcedure"
  fullName: "com.azure.cosmos.implementation.StoredProcedure"
- uid: "reactor.core.publisher.Mono<com.azure.cosmos.implementation.ResourceResponse<com.azure.cosmos.implementation.StoredProcedure>>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.cosmos.implementation.ResourceResponse"
    name: "ResourceResponse"
    fullName: "com.azure.cosmos.implementation.ResourceResponse"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.cosmos.implementation.StoredProcedure"
    name: "StoredProcedure"
    fullName: "com.azure.cosmos.implementation.StoredProcedure"
  - name: ">"
    fullName: ">"
  - name: ">"
    fullName: ">"
- uid: "com.azure.cosmos.implementation.RxDocumentClientImpl.createStoredProcedure*"
  name: "createStoredProcedure"
  nameWithType: "RxDocumentClientImpl.createStoredProcedure"
  fullName: "com.azure.cosmos.implementation.RxDocumentClientImpl.createStoredProcedure"
  package: "com.azure.cosmos.implementation"
- uid: "com.azure.cosmos.implementation.RxDocumentClientImpl.upsertStoredProcedure*"
  name: "upsertStoredProcedure"
  nameWithType: "RxDocumentClientImpl.upsertStoredProcedure"
  fullName: "com.azure.cosmos.implementation.RxDocumentClientImpl.upsertStoredProcedure"
  package: "com.azure.cosmos.implementation"
- uid: "com.azure.cosmos.implementation.RxDocumentClientImpl.replaceStoredProcedure*"
  name: "replaceStoredProcedure"
  nameWithType: "RxDocumentClientImpl.replaceStoredProcedure"
  fullName: "com.azure.cosmos.implementation.RxDocumentClientImpl.replaceStoredProcedure"
  package: "com.azure.cosmos.implementation"
- uid: "com.azure.cosmos.implementation.RxDocumentClientImpl.deleteStoredProcedure*"
  name: "deleteStoredProcedure"
  nameWithType: "RxDocumentClientImpl.deleteStoredProcedure"
  fullName: "com.azure.cosmos.implementation.RxDocumentClientImpl.deleteStoredProcedure"
  package: "com.azure.cosmos.implementation"
- uid: "com.azure.cosmos.implementation.RxDocumentClientImpl.readStoredProcedure*"
  name: "readStoredProcedure"
  nameWithType: "RxDocumentClientImpl.readStoredProcedure"
  fullName: "com.azure.cosmos.implementation.RxDocumentClientImpl.readStoredProcedure"
  package: "com.azure.cosmos.implementation"
- uid: "reactor.core.publisher.Flux<com.azure.cosmos.FeedResponse<com.azure.cosmos.implementation.StoredProcedure>>"
  spec.java:
  - uid: "reactor.core.publisher.Flux"
    name: "Flux"
    fullName: "reactor.core.publisher.Flux"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.cosmos.FeedResponse"
    name: "FeedResponse"
    fullName: "com.azure.cosmos.FeedResponse"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.cosmos.implementation.StoredProcedure"
    name: "StoredProcedure"
    fullName: "com.azure.cosmos.implementation.StoredProcedure"
  - name: ">"
    fullName: ">"
  - name: ">"
    fullName: ">"
- uid: "com.azure.cosmos.implementation.RxDocumentClientImpl.readStoredProcedures*"
  name: "readStoredProcedures"
  nameWithType: "RxDocumentClientImpl.readStoredProcedures"
  fullName: "com.azure.cosmos.implementation.RxDocumentClientImpl.readStoredProcedures"
  package: "com.azure.cosmos.implementation"
- uid: "com.azure.cosmos.implementation.RxDocumentClientImpl.queryStoredProcedures*"
  name: "queryStoredProcedures"
  nameWithType: "RxDocumentClientImpl.queryStoredProcedures"
  fullName: "com.azure.cosmos.implementation.RxDocumentClientImpl.queryStoredProcedures"
  package: "com.azure.cosmos.implementation"
- uid: "java.lang.Object[]"
  spec.java:
  - uid: "java.lang.Object"
    name: "Object"
    fullName: "java.lang.Object"
  - name: "[]"
    fullName: "[]"
- uid: "reactor.core.publisher.Mono<com.azure.cosmos.implementation.StoredProcedureResponse>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.cosmos.implementation.StoredProcedureResponse"
    name: "StoredProcedureResponse"
    fullName: "com.azure.cosmos.implementation.StoredProcedureResponse"
  - name: ">"
    fullName: ">"
- uid: "com.azure.cosmos.implementation.RxDocumentClientImpl.executeStoredProcedure*"
  name: "executeStoredProcedure"
  nameWithType: "RxDocumentClientImpl.executeStoredProcedure"
  fullName: "com.azure.cosmos.implementation.RxDocumentClientImpl.executeStoredProcedure"
  package: "com.azure.cosmos.implementation"
- uid: "com.azure.cosmos.implementation.Trigger"
  name: "Trigger"
  nameWithType: "Trigger"
  fullName: "com.azure.cosmos.implementation.Trigger"
- uid: "reactor.core.publisher.Mono<com.azure.cosmos.implementation.ResourceResponse<com.azure.cosmos.implementation.Trigger>>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.cosmos.implementation.ResourceResponse"
    name: "ResourceResponse"
    fullName: "com.azure.cosmos.implementation.ResourceResponse"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.cosmos.implementation.Trigger"
    name: "Trigger"
    fullName: "com.azure.cosmos.implementation.Trigger"
  - name: ">"
    fullName: ">"
  - name: ">"
    fullName: ">"
- uid: "com.azure.cosmos.implementation.RxDocumentClientImpl.createTrigger*"
  name: "createTrigger"
  nameWithType: "RxDocumentClientImpl.createTrigger"
  fullName: "com.azure.cosmos.implementation.RxDocumentClientImpl.createTrigger"
  package: "com.azure.cosmos.implementation"
- uid: "com.azure.cosmos.implementation.RxDocumentClientImpl.upsertTrigger*"
  name: "upsertTrigger"
  nameWithType: "RxDocumentClientImpl.upsertTrigger"
  fullName: "com.azure.cosmos.implementation.RxDocumentClientImpl.upsertTrigger"
  package: "com.azure.cosmos.implementation"
- uid: "com.azure.cosmos.implementation.RxDocumentClientImpl.replaceTrigger*"
  name: "replaceTrigger"
  nameWithType: "RxDocumentClientImpl.replaceTrigger"
  fullName: "com.azure.cosmos.implementation.RxDocumentClientImpl.replaceTrigger"
  package: "com.azure.cosmos.implementation"
- uid: "com.azure.cosmos.implementation.RxDocumentClientImpl.deleteTrigger*"
  name: "deleteTrigger"
  nameWithType: "RxDocumentClientImpl.deleteTrigger"
  fullName: "com.azure.cosmos.implementation.RxDocumentClientImpl.deleteTrigger"
  package: "com.azure.cosmos.implementation"
- uid: "com.azure.cosmos.implementation.RxDocumentClientImpl.readTrigger*"
  name: "readTrigger"
  nameWithType: "RxDocumentClientImpl.readTrigger"
  fullName: "com.azure.cosmos.implementation.RxDocumentClientImpl.readTrigger"
  package: "com.azure.cosmos.implementation"
- uid: "reactor.core.publisher.Flux<com.azure.cosmos.FeedResponse<com.azure.cosmos.implementation.Trigger>>"
  spec.java:
  - uid: "reactor.core.publisher.Flux"
    name: "Flux"
    fullName: "reactor.core.publisher.Flux"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.cosmos.FeedResponse"
    name: "FeedResponse"
    fullName: "com.azure.cosmos.FeedResponse"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.cosmos.implementation.Trigger"
    name: "Trigger"
    fullName: "com.azure.cosmos.implementation.Trigger"
  - name: ">"
    fullName: ">"
  - name: ">"
    fullName: ">"
- uid: "com.azure.cosmos.implementation.RxDocumentClientImpl.readTriggers*"
  name: "readTriggers"
  nameWithType: "RxDocumentClientImpl.readTriggers"
  fullName: "com.azure.cosmos.implementation.RxDocumentClientImpl.readTriggers"
  package: "com.azure.cosmos.implementation"
- uid: "com.azure.cosmos.implementation.RxDocumentClientImpl.queryTriggers*"
  name: "queryTriggers"
  nameWithType: "RxDocumentClientImpl.queryTriggers"
  fullName: "com.azure.cosmos.implementation.RxDocumentClientImpl.queryTriggers"
  package: "com.azure.cosmos.implementation"
- uid: "com.azure.cosmos.implementation.UserDefinedFunction"
  name: "UserDefinedFunction"
  nameWithType: "UserDefinedFunction"
  fullName: "com.azure.cosmos.implementation.UserDefinedFunction"
- uid: "reactor.core.publisher.Mono<com.azure.cosmos.implementation.ResourceResponse<com.azure.cosmos.implementation.UserDefinedFunction>>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.cosmos.implementation.ResourceResponse"
    name: "ResourceResponse"
    fullName: "com.azure.cosmos.implementation.ResourceResponse"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.cosmos.implementation.UserDefinedFunction"
    name: "UserDefinedFunction"
    fullName: "com.azure.cosmos.implementation.UserDefinedFunction"
  - name: ">"
    fullName: ">"
  - name: ">"
    fullName: ">"
- uid: "com.azure.cosmos.implementation.RxDocumentClientImpl.createUserDefinedFunction*"
  name: "createUserDefinedFunction"
  nameWithType: "RxDocumentClientImpl.createUserDefinedFunction"
  fullName: "com.azure.cosmos.implementation.RxDocumentClientImpl.createUserDefinedFunction"
  package: "com.azure.cosmos.implementation"
- uid: "com.azure.cosmos.implementation.RxDocumentClientImpl.upsertUserDefinedFunction*"
  name: "upsertUserDefinedFunction"
  nameWithType: "RxDocumentClientImpl.upsertUserDefinedFunction"
  fullName: "com.azure.cosmos.implementation.RxDocumentClientImpl.upsertUserDefinedFunction"
  package: "com.azure.cosmos.implementation"
- uid: "com.azure.cosmos.implementation.RxDocumentClientImpl.replaceUserDefinedFunction*"
  name: "replaceUserDefinedFunction"
  nameWithType: "RxDocumentClientImpl.replaceUserDefinedFunction"
  fullName: "com.azure.cosmos.implementation.RxDocumentClientImpl.replaceUserDefinedFunction"
  package: "com.azure.cosmos.implementation"
- uid: "com.azure.cosmos.implementation.RxDocumentClientImpl.deleteUserDefinedFunction*"
  name: "deleteUserDefinedFunction"
  nameWithType: "RxDocumentClientImpl.deleteUserDefinedFunction"
  fullName: "com.azure.cosmos.implementation.RxDocumentClientImpl.deleteUserDefinedFunction"
  package: "com.azure.cosmos.implementation"
- uid: "com.azure.cosmos.implementation.RxDocumentClientImpl.readUserDefinedFunction*"
  name: "readUserDefinedFunction"
  nameWithType: "RxDocumentClientImpl.readUserDefinedFunction"
  fullName: "com.azure.cosmos.implementation.RxDocumentClientImpl.readUserDefinedFunction"
  package: "com.azure.cosmos.implementation"
- uid: "reactor.core.publisher.Flux<com.azure.cosmos.FeedResponse<com.azure.cosmos.implementation.UserDefinedFunction>>"
  spec.java:
  - uid: "reactor.core.publisher.Flux"
    name: "Flux"
    fullName: "reactor.core.publisher.Flux"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.cosmos.FeedResponse"
    name: "FeedResponse"
    fullName: "com.azure.cosmos.FeedResponse"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.cosmos.implementation.UserDefinedFunction"
    name: "UserDefinedFunction"
    fullName: "com.azure.cosmos.implementation.UserDefinedFunction"
  - name: ">"
    fullName: ">"
  - name: ">"
    fullName: ">"
- uid: "com.azure.cosmos.implementation.RxDocumentClientImpl.readUserDefinedFunctions*"
  name: "readUserDefinedFunctions"
  nameWithType: "RxDocumentClientImpl.readUserDefinedFunctions"
  fullName: "com.azure.cosmos.implementation.RxDocumentClientImpl.readUserDefinedFunctions"
  package: "com.azure.cosmos.implementation"
- uid: "com.azure.cosmos.implementation.RxDocumentClientImpl.queryUserDefinedFunctions*"
  name: "queryUserDefinedFunctions"
  nameWithType: "RxDocumentClientImpl.queryUserDefinedFunctions"
  fullName: "com.azure.cosmos.implementation.RxDocumentClientImpl.queryUserDefinedFunctions"
  package: "com.azure.cosmos.implementation"
- uid: "reactor.core.publisher.Mono<com.azure.cosmos.implementation.ResourceResponse<com.azure.cosmos.implementation.Conflict>>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.cosmos.implementation.ResourceResponse"
    name: "ResourceResponse"
    fullName: "com.azure.cosmos.implementation.ResourceResponse"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.cosmos.implementation.Conflict"
    name: "Conflict"
    fullName: "com.azure.cosmos.implementation.Conflict"
  - name: ">"
    fullName: ">"
  - name: ">"
    fullName: ">"
- uid: "com.azure.cosmos.implementation.RxDocumentClientImpl.readConflict*"
  name: "readConflict"
  nameWithType: "RxDocumentClientImpl.readConflict"
  fullName: "com.azure.cosmos.implementation.RxDocumentClientImpl.readConflict"
  package: "com.azure.cosmos.implementation"
- uid: "reactor.core.publisher.Flux<com.azure.cosmos.FeedResponse<com.azure.cosmos.implementation.Conflict>>"
  spec.java:
  - uid: "reactor.core.publisher.Flux"
    name: "Flux"
    fullName: "reactor.core.publisher.Flux"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.cosmos.FeedResponse"
    name: "FeedResponse"
    fullName: "com.azure.cosmos.FeedResponse"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.cosmos.implementation.Conflict"
    name: "Conflict"
    fullName: "com.azure.cosmos.implementation.Conflict"
  - name: ">"
    fullName: ">"
  - name: ">"
    fullName: ">"
- uid: "com.azure.cosmos.implementation.RxDocumentClientImpl.readConflicts*"
  name: "readConflicts"
  nameWithType: "RxDocumentClientImpl.readConflicts"
  fullName: "com.azure.cosmos.implementation.RxDocumentClientImpl.readConflicts"
  package: "com.azure.cosmos.implementation"
- uid: "com.azure.cosmos.implementation.RxDocumentClientImpl.queryConflicts*"
  name: "queryConflicts"
  nameWithType: "RxDocumentClientImpl.queryConflicts"
  fullName: "com.azure.cosmos.implementation.RxDocumentClientImpl.queryConflicts"
  package: "com.azure.cosmos.implementation"
- uid: "com.azure.cosmos.implementation.RxDocumentClientImpl.deleteConflict*"
  name: "deleteConflict"
  nameWithType: "RxDocumentClientImpl.deleteConflict"
  fullName: "com.azure.cosmos.implementation.RxDocumentClientImpl.deleteConflict"
  package: "com.azure.cosmos.implementation"
- uid: "com.azure.cosmos.implementation.User"
  name: "User"
  nameWithType: "User"
  fullName: "com.azure.cosmos.implementation.User"
- uid: "reactor.core.publisher.Mono<com.azure.cosmos.implementation.ResourceResponse<com.azure.cosmos.implementation.User>>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.cosmos.implementation.ResourceResponse"
    name: "ResourceResponse"
    fullName: "com.azure.cosmos.implementation.ResourceResponse"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.cosmos.implementation.User"
    name: "User"
    fullName: "com.azure.cosmos.implementation.User"
  - name: ">"
    fullName: ">"
  - name: ">"
    fullName: ">"
- uid: "com.azure.cosmos.implementation.RxDocumentClientImpl.createUser*"
  name: "createUser"
  nameWithType: "RxDocumentClientImpl.createUser"
  fullName: "com.azure.cosmos.implementation.RxDocumentClientImpl.createUser"
  package: "com.azure.cosmos.implementation"
- uid: "com.azure.cosmos.implementation.RxDocumentClientImpl.upsertUser*"
  name: "upsertUser"
  nameWithType: "RxDocumentClientImpl.upsertUser"
  fullName: "com.azure.cosmos.implementation.RxDocumentClientImpl.upsertUser"
  package: "com.azure.cosmos.implementation"
- uid: "com.azure.cosmos.implementation.RxDocumentClientImpl.replaceUser*"
  name: "replaceUser"
  nameWithType: "RxDocumentClientImpl.replaceUser"
  fullName: "com.azure.cosmos.implementation.RxDocumentClientImpl.replaceUser"
  package: "com.azure.cosmos.implementation"
- uid: "com.azure.cosmos.implementation.RxDocumentClientImpl.deleteUser*"
  name: "deleteUser"
  nameWithType: "RxDocumentClientImpl.deleteUser"
  fullName: "com.azure.cosmos.implementation.RxDocumentClientImpl.deleteUser"
  package: "com.azure.cosmos.implementation"
- uid: "com.azure.cosmos.implementation.RxDocumentClientImpl.readUser*"
  name: "readUser"
  nameWithType: "RxDocumentClientImpl.readUser"
  fullName: "com.azure.cosmos.implementation.RxDocumentClientImpl.readUser"
  package: "com.azure.cosmos.implementation"
- uid: "reactor.core.publisher.Flux<com.azure.cosmos.FeedResponse<com.azure.cosmos.implementation.User>>"
  spec.java:
  - uid: "reactor.core.publisher.Flux"
    name: "Flux"
    fullName: "reactor.core.publisher.Flux"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.cosmos.FeedResponse"
    name: "FeedResponse"
    fullName: "com.azure.cosmos.FeedResponse"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.cosmos.implementation.User"
    name: "User"
    fullName: "com.azure.cosmos.implementation.User"
  - name: ">"
    fullName: ">"
  - name: ">"
    fullName: ">"
- uid: "com.azure.cosmos.implementation.RxDocumentClientImpl.readUsers*"
  name: "readUsers"
  nameWithType: "RxDocumentClientImpl.readUsers"
  fullName: "com.azure.cosmos.implementation.RxDocumentClientImpl.readUsers"
  package: "com.azure.cosmos.implementation"
- uid: "com.azure.cosmos.implementation.RxDocumentClientImpl.queryUsers*"
  name: "queryUsers"
  nameWithType: "RxDocumentClientImpl.queryUsers"
  fullName: "com.azure.cosmos.implementation.RxDocumentClientImpl.queryUsers"
  package: "com.azure.cosmos.implementation"
- uid: "com.azure.cosmos.implementation.Permission"
  name: "Permission"
  nameWithType: "Permission"
  fullName: "com.azure.cosmos.implementation.Permission"
- uid: "reactor.core.publisher.Mono<com.azure.cosmos.implementation.ResourceResponse<com.azure.cosmos.implementation.Permission>>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.cosmos.implementation.ResourceResponse"
    name: "ResourceResponse"
    fullName: "com.azure.cosmos.implementation.ResourceResponse"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.cosmos.implementation.Permission"
    name: "Permission"
    fullName: "com.azure.cosmos.implementation.Permission"
  - name: ">"
    fullName: ">"
  - name: ">"
    fullName: ">"
- uid: "com.azure.cosmos.implementation.RxDocumentClientImpl.createPermission*"
  name: "createPermission"
  nameWithType: "RxDocumentClientImpl.createPermission"
  fullName: "com.azure.cosmos.implementation.RxDocumentClientImpl.createPermission"
  package: "com.azure.cosmos.implementation"
- uid: "com.azure.cosmos.implementation.RxDocumentClientImpl.upsertPermission*"
  name: "upsertPermission"
  nameWithType: "RxDocumentClientImpl.upsertPermission"
  fullName: "com.azure.cosmos.implementation.RxDocumentClientImpl.upsertPermission"
  package: "com.azure.cosmos.implementation"
- uid: "com.azure.cosmos.implementation.RxDocumentClientImpl.replacePermission*"
  name: "replacePermission"
  nameWithType: "RxDocumentClientImpl.replacePermission"
  fullName: "com.azure.cosmos.implementation.RxDocumentClientImpl.replacePermission"
  package: "com.azure.cosmos.implementation"
- uid: "com.azure.cosmos.implementation.RxDocumentClientImpl.deletePermission*"
  name: "deletePermission"
  nameWithType: "RxDocumentClientImpl.deletePermission"
  fullName: "com.azure.cosmos.implementation.RxDocumentClientImpl.deletePermission"
  package: "com.azure.cosmos.implementation"
- uid: "com.azure.cosmos.implementation.RxDocumentClientImpl.readPermission*"
  name: "readPermission"
  nameWithType: "RxDocumentClientImpl.readPermission"
  fullName: "com.azure.cosmos.implementation.RxDocumentClientImpl.readPermission"
  package: "com.azure.cosmos.implementation"
- uid: "reactor.core.publisher.Flux<com.azure.cosmos.FeedResponse<com.azure.cosmos.implementation.Permission>>"
  spec.java:
  - uid: "reactor.core.publisher.Flux"
    name: "Flux"
    fullName: "reactor.core.publisher.Flux"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.cosmos.FeedResponse"
    name: "FeedResponse"
    fullName: "com.azure.cosmos.FeedResponse"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.cosmos.implementation.Permission"
    name: "Permission"
    fullName: "com.azure.cosmos.implementation.Permission"
  - name: ">"
    fullName: ">"
  - name: ">"
    fullName: ">"
- uid: "com.azure.cosmos.implementation.RxDocumentClientImpl.readPermissions*"
  name: "readPermissions"
  nameWithType: "RxDocumentClientImpl.readPermissions"
  fullName: "com.azure.cosmos.implementation.RxDocumentClientImpl.readPermissions"
  package: "com.azure.cosmos.implementation"
- uid: "com.azure.cosmos.implementation.RxDocumentClientImpl.queryPermissions*"
  name: "queryPermissions"
  nameWithType: "RxDocumentClientImpl.queryPermissions"
  fullName: "com.azure.cosmos.implementation.RxDocumentClientImpl.queryPermissions"
  package: "com.azure.cosmos.implementation"
- uid: "com.azure.cosmos.implementation.Offer"
  name: "Offer"
  nameWithType: "Offer"
  fullName: "com.azure.cosmos.implementation.Offer"
- uid: "reactor.core.publisher.Mono<com.azure.cosmos.implementation.ResourceResponse<com.azure.cosmos.implementation.Offer>>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.cosmos.implementation.ResourceResponse"
    name: "ResourceResponse"
    fullName: "com.azure.cosmos.implementation.ResourceResponse"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.cosmos.implementation.Offer"
    name: "Offer"
    fullName: "com.azure.cosmos.implementation.Offer"
  - name: ">"
    fullName: ">"
  - name: ">"
    fullName: ">"
- uid: "com.azure.cosmos.implementation.RxDocumentClientImpl.replaceOffer*"
  name: "replaceOffer"
  nameWithType: "RxDocumentClientImpl.replaceOffer"
  fullName: "com.azure.cosmos.implementation.RxDocumentClientImpl.replaceOffer"
  package: "com.azure.cosmos.implementation"
- uid: "com.azure.cosmos.implementation.RxDocumentClientImpl.readOffer*"
  name: "readOffer"
  nameWithType: "RxDocumentClientImpl.readOffer"
  fullName: "com.azure.cosmos.implementation.RxDocumentClientImpl.readOffer"
  package: "com.azure.cosmos.implementation"
- uid: "reactor.core.publisher.Flux<com.azure.cosmos.FeedResponse<com.azure.cosmos.implementation.Offer>>"
  spec.java:
  - uid: "reactor.core.publisher.Flux"
    name: "Flux"
    fullName: "reactor.core.publisher.Flux"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.cosmos.FeedResponse"
    name: "FeedResponse"
    fullName: "com.azure.cosmos.FeedResponse"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.cosmos.implementation.Offer"
    name: "Offer"
    fullName: "com.azure.cosmos.implementation.Offer"
  - name: ">"
    fullName: ">"
  - name: ">"
    fullName: ">"
- uid: "com.azure.cosmos.implementation.RxDocumentClientImpl.readOffers*"
  name: "readOffers"
  nameWithType: "RxDocumentClientImpl.readOffers"
  fullName: "com.azure.cosmos.implementation.RxDocumentClientImpl.readOffers"
  package: "com.azure.cosmos.implementation"
- uid: "com.azure.cosmos.implementation.RxDocumentClientImpl.queryOffers*"
  name: "queryOffers"
  nameWithType: "RxDocumentClientImpl.queryOffers"
  fullName: "com.azure.cosmos.implementation.RxDocumentClientImpl.queryOffers"
  package: "com.azure.cosmos.implementation"
- uid: "reactor.core.publisher.Mono<com.azure.cosmos.DatabaseAccount>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.cosmos.DatabaseAccount"
    name: "DatabaseAccount"
    fullName: "com.azure.cosmos.DatabaseAccount"
  - name: ">"
    fullName: ">"
- uid: "com.azure.cosmos.implementation.RxDocumentClientImpl.getDatabaseAccount*"
  name: "getDatabaseAccount"
  nameWithType: "RxDocumentClientImpl.getDatabaseAccount"
  fullName: "com.azure.cosmos.implementation.RxDocumentClientImpl.getDatabaseAccount"
  package: "com.azure.cosmos.implementation"
- uid: "com.azure.cosmos.implementation.RxDocumentClientImpl.getSession*"
  name: "getSession"
  nameWithType: "RxDocumentClientImpl.getSession"
  fullName: "com.azure.cosmos.implementation.RxDocumentClientImpl.getSession"
  package: "com.azure.cosmos.implementation"
- uid: "com.azure.cosmos.implementation.RxDocumentClientImpl.setSession*"
  name: "setSession"
  nameWithType: "RxDocumentClientImpl.setSession"
  fullName: "com.azure.cosmos.implementation.RxDocumentClientImpl.setSession"
  package: "com.azure.cosmos.implementation"
- uid: "com.azure.cosmos.implementation.caches.RxPartitionKeyRangeCache"
  name: "RxPartitionKeyRangeCache"
  nameWithType: "RxPartitionKeyRangeCache"
  fullName: "com.azure.cosmos.implementation.caches.RxPartitionKeyRangeCache"
- uid: "com.azure.cosmos.implementation.RxDocumentClientImpl.getPartitionKeyRangeCache*"
  name: "getPartitionKeyRangeCache"
  nameWithType: "RxDocumentClientImpl.getPartitionKeyRangeCache"
  fullName: "com.azure.cosmos.implementation.RxDocumentClientImpl.getPartitionKeyRangeCache"
  package: "com.azure.cosmos.implementation"
- uid: "reactor.core.publisher.Flux<com.azure.cosmos.DatabaseAccount>"
  spec.java:
  - uid: "reactor.core.publisher.Flux"
    name: "Flux"
    fullName: "reactor.core.publisher.Flux"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.cosmos.DatabaseAccount"
    name: "DatabaseAccount"
    fullName: "com.azure.cosmos.DatabaseAccount"
  - name: ">"
    fullName: ">"
- uid: "com.azure.cosmos.implementation.RxDocumentClientImpl.getDatabaseAccountFromEndpoint*"
  name: "getDatabaseAccountFromEndpoint"
  nameWithType: "RxDocumentClientImpl.getDatabaseAccountFromEndpoint"
  fullName: "com.azure.cosmos.implementation.RxDocumentClientImpl.getDatabaseAccountFromEndpoint"
  package: "com.azure.cosmos.implementation"
- uid: "com.azure.cosmos.implementation.RxDocumentClientImpl.close*"
  name: "close"
  nameWithType: "RxDocumentClientImpl.close"
  fullName: "com.azure.cosmos.implementation.RxDocumentClientImpl.close"
  package: "com.azure.cosmos.implementation"
- uid: "com.azure.cosmos.implementation.IAuthorizationTokenProvider"
  name: "IAuthorizationTokenProvider"
  nameWithType: "IAuthorizationTokenProvider"
  fullName: "com.azure.cosmos.implementation.IAuthorizationTokenProvider"
- uid: "com.azure.cosmos.implementation.AsyncDocumentClient"
  name: "AsyncDocumentClient"
  nameWithType: "AsyncDocumentClient"
  fullName: "com.azure.cosmos.implementation.AsyncDocumentClient"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "java.util.List"
  name: "List"
  nameWithType: "List"
  fullName: "java.util.List"
- uid: "reactor.core.publisher.Mono"
  name: "Mono"
  nameWithType: "Mono"
  fullName: "reactor.core.publisher.Mono"
- uid: "com.azure.cosmos.implementation.ResourceResponse"
  name: "ResourceResponse"
  nameWithType: "ResourceResponse"
  fullName: "com.azure.cosmos.implementation.ResourceResponse"
- uid: "reactor.core.publisher.Flux"
  name: "Flux"
  nameWithType: "Flux"
  fullName: "reactor.core.publisher.Flux"
- uid: "com.azure.cosmos.FeedResponse"
  name: "FeedResponse"
  nameWithType: "FeedResponse"
  fullName: "com.azure.cosmos.FeedResponse"
- uid: "java.util.Map"
  name: "Map"
  nameWithType: "Map"
  fullName: "java.util.Map"
- uid: "java.lang.String,java.lang.String"
  name: "String,String"
  nameWithType: "String,String"
  fullName: "java.lang.String,java.lang.String"
- uid: "java.lang.String,java.lang.Object"
  name: "String,Object"
  nameWithType: "String,Object"
  fullName: "java.lang.String,java.lang.Object"
- uid: "java.lang.String,com.azure.cosmos.PartitionKey"
  name: "String,PartitionKey"
  nameWithType: "String,PartitionKey"
  fullName: "java.lang.String,com.azure.cosmos.PartitionKey"
- uid: "org.apache.commons.lang3.tuple.Pair"
  name: "Pair"
  nameWithType: "Pair"
  fullName: "org.apache.commons.lang3.tuple.Pair"
- uid: "T"
  name: "T"
  nameWithType: "T"
  fullName: "T"
- uid: "java.lang.Class"
  name: "Class"
  nameWithType: "Class"
  fullName: "java.lang.Class"
- uid: "com.azure.cosmos.implementation.PartitionKeyRange"
  name: "PartitionKeyRange"
  nameWithType: "PartitionKeyRange"
  fullName: "com.azure.cosmos.implementation.PartitionKeyRange"
- uid: "com.azure.cosmos.implementation.StoredProcedureResponse"
  name: "StoredProcedureResponse"
  nameWithType: "StoredProcedureResponse"
  fullName: "com.azure.cosmos.implementation.StoredProcedureResponse"
- uid: "com.azure.cosmos.implementation.Conflict"
  name: "Conflict"
  nameWithType: "Conflict"
  fullName: "com.azure.cosmos.implementation.Conflict"
- uid: "com.azure.cosmos.DatabaseAccount"
  name: "DatabaseAccount"
  nameWithType: "DatabaseAccount"
  fullName: "com.azure.cosmos.DatabaseAccount"
