### YamlMime:ManagedReference
items:
- uid: "com.azure.core.util.UrlTokenizerState"
  id: "UrlTokenizerState"
  parent: "com.azure.core.util"
  children:
  - "com.azure.core.util.UrlTokenizerState.DONE"
  - "com.azure.core.util.UrlTokenizerState.HOST"
  - "com.azure.core.util.UrlTokenizerState.PATH"
  - "com.azure.core.util.UrlTokenizerState.PORT"
  - "com.azure.core.util.UrlTokenizerState.QUERY"
  - "com.azure.core.util.UrlTokenizerState.SCHEME"
  - "com.azure.core.util.UrlTokenizerState.SCHEME_OR_HOST"
  - "com.azure.core.util.UrlTokenizerState.valueOf(java.lang.String)"
  - "com.azure.core.util.UrlTokenizerState.values()"
  langs:
  - "java"
  name: "UrlTokenizerState"
  nameWithType: "UrlTokenizerState"
  fullName: "com.azure.core.util.UrlTokenizerState"
  type: "Enum"
  package: "com.azure.core.util"
  syntax:
    content: " enum UrlTokenizerState extends Enum<UrlTokenizerState>"
  inheritance:
  - "java.lang.Object"
  - "java.lang.Enum"
  inheritedMembers:
  - "java.lang.Enum.<T>valueOf(java.lang.Class<T>,java.lang.String)"
  - "java.lang.Enum.clone()"
  - "java.lang.Enum.compareTo(E)"
  - "java.lang.Enum.equals(java.lang.Object)"
  - "java.lang.Enum.finalize()"
  - "java.lang.Enum.getDeclaringClass()"
  - "java.lang.Enum.hashCode()"
  - "java.lang.Enum.name()"
  - "java.lang.Enum.ordinal()"
  - "java.lang.Enum.toString()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.azure.core.util.UrlTokenizerState.DONE"
  id: "DONE"
  parent: "com.azure.core.util.UrlTokenizerState"
  langs:
  - "java"
  name: "DONE"
  nameWithType: "UrlTokenizerState.DONE"
  fullName: "com.azure.core.util.UrlTokenizerState.DONE"
  type: "Field"
  package: "com.azure.core.util"
  syntax:
    content: "public static final UrlTokenizerState DONE"
    return:
      type: "com.azure.core.util.UrlTokenizerState"
- uid: "com.azure.core.util.UrlTokenizerState.HOST"
  id: "HOST"
  parent: "com.azure.core.util.UrlTokenizerState"
  langs:
  - "java"
  name: "HOST"
  nameWithType: "UrlTokenizerState.HOST"
  fullName: "com.azure.core.util.UrlTokenizerState.HOST"
  type: "Field"
  package: "com.azure.core.util"
  syntax:
    content: "public static final UrlTokenizerState HOST"
    return:
      type: "com.azure.core.util.UrlTokenizerState"
- uid: "com.azure.core.util.UrlTokenizerState.PATH"
  id: "PATH"
  parent: "com.azure.core.util.UrlTokenizerState"
  langs:
  - "java"
  name: "PATH"
  nameWithType: "UrlTokenizerState.PATH"
  fullName: "com.azure.core.util.UrlTokenizerState.PATH"
  type: "Field"
  package: "com.azure.core.util"
  syntax:
    content: "public static final UrlTokenizerState PATH"
    return:
      type: "com.azure.core.util.UrlTokenizerState"
- uid: "com.azure.core.util.UrlTokenizerState.PORT"
  id: "PORT"
  parent: "com.azure.core.util.UrlTokenizerState"
  langs:
  - "java"
  name: "PORT"
  nameWithType: "UrlTokenizerState.PORT"
  fullName: "com.azure.core.util.UrlTokenizerState.PORT"
  type: "Field"
  package: "com.azure.core.util"
  syntax:
    content: "public static final UrlTokenizerState PORT"
    return:
      type: "com.azure.core.util.UrlTokenizerState"
- uid: "com.azure.core.util.UrlTokenizerState.QUERY"
  id: "QUERY"
  parent: "com.azure.core.util.UrlTokenizerState"
  langs:
  - "java"
  name: "QUERY"
  nameWithType: "UrlTokenizerState.QUERY"
  fullName: "com.azure.core.util.UrlTokenizerState.QUERY"
  type: "Field"
  package: "com.azure.core.util"
  syntax:
    content: "public static final UrlTokenizerState QUERY"
    return:
      type: "com.azure.core.util.UrlTokenizerState"
- uid: "com.azure.core.util.UrlTokenizerState.SCHEME"
  id: "SCHEME"
  parent: "com.azure.core.util.UrlTokenizerState"
  langs:
  - "java"
  name: "SCHEME"
  nameWithType: "UrlTokenizerState.SCHEME"
  fullName: "com.azure.core.util.UrlTokenizerState.SCHEME"
  type: "Field"
  package: "com.azure.core.util"
  syntax:
    content: "public static final UrlTokenizerState SCHEME"
    return:
      type: "com.azure.core.util.UrlTokenizerState"
- uid: "com.azure.core.util.UrlTokenizerState.SCHEME_OR_HOST"
  id: "SCHEME_OR_HOST"
  parent: "com.azure.core.util.UrlTokenizerState"
  langs:
  - "java"
  name: "SCHEME_OR_HOST"
  nameWithType: "UrlTokenizerState.SCHEME_OR_HOST"
  fullName: "com.azure.core.util.UrlTokenizerState.SCHEME_OR_HOST"
  type: "Field"
  package: "com.azure.core.util"
  syntax:
    content: "public static final UrlTokenizerState SCHEME_OR_HOST"
    return:
      type: "com.azure.core.util.UrlTokenizerState"
- uid: "com.azure.core.util.UrlTokenizerState.UrlTokenizerState()"
  id: "UrlTokenizerState()"
  parent: "com.azure.core.util.UrlTokenizerState"
  langs:
  - "java"
  name: "UrlTokenizerState()"
  nameWithType: "UrlTokenizerState.UrlTokenizerState()"
  fullName: "com.azure.core.util.UrlTokenizerState.UrlTokenizerState()"
  overload: "com.azure.core.util.UrlTokenizerState.UrlTokenizerState*"
  type: "Constructor"
  package: "com.azure.core.util"
  syntax:
    content: "private UrlTokenizerState()"
- uid: "com.azure.core.util.UrlTokenizerState.valueOf(java.lang.String)"
  id: "valueOf(java.lang.String)"
  parent: "com.azure.core.util.UrlTokenizerState"
  langs:
  - "java"
  name: "valueOf(String name)"
  nameWithType: "UrlTokenizerState.valueOf(String name)"
  fullName: "com.azure.core.util.UrlTokenizerState.valueOf(String name)"
  overload: "com.azure.core.util.UrlTokenizerState.valueOf*"
  type: "Method"
  package: "com.azure.core.util"
  syntax:
    content: "public static UrlTokenizerState valueOf(String name)"
    parameters:
    - id: "name"
      type: "java.lang.String"
    return:
      type: "com.azure.core.util.UrlTokenizerState"
- uid: "com.azure.core.util.UrlTokenizerState.values()"
  id: "values()"
  parent: "com.azure.core.util.UrlTokenizerState"
  langs:
  - "java"
  name: "values()"
  nameWithType: "UrlTokenizerState.values()"
  fullName: "com.azure.core.util.UrlTokenizerState.values()"
  overload: "com.azure.core.util.UrlTokenizerState.values*"
  type: "Method"
  package: "com.azure.core.util"
  syntax:
    content: "public static UrlTokenizerState[] values()"
    return:
      type: "com.azure.core.util.UrlTokenizerState[]"
references:
- uid: "com.azure.core.util.UrlTokenizerState.UrlTokenizerState*"
  name: "UrlTokenizerState"
  nameWithType: "UrlTokenizerState.UrlTokenizerState"
  fullName: "com.azure.core.util.UrlTokenizerState.UrlTokenizerState"
  package: "com.azure.core.util"
- uid: "com.azure.core.util.UrlTokenizerState[]"
  spec.java:
  - uid: "com.azure.core.util.UrlTokenizerState"
    name: "UrlTokenizerState"
    fullName: "com.azure.core.util.UrlTokenizerState"
  - name: "[]"
    fullName: "[]"
- uid: "com.azure.core.util.UrlTokenizerState.values*"
  name: "values"
  nameWithType: "UrlTokenizerState.values"
  fullName: "com.azure.core.util.UrlTokenizerState.values"
  package: "com.azure.core.util"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "com.azure.core.util.UrlTokenizerState.valueOf*"
  name: "valueOf"
  nameWithType: "UrlTokenizerState.valueOf"
  fullName: "com.azure.core.util.UrlTokenizerState.valueOf"
  package: "com.azure.core.util"
- uid: "java.lang.Enum<com.azure.core.util.UrlTokenizerState>"
  name: "Enum<UrlTokenizerState>"
  nameWithType: "Enum<UrlTokenizerState>"
  fullName: "java.lang.Enum<com.azure.core.util.UrlTokenizerState>"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Enum.toString()"
  name: "Enum.toString()"
  nameWithType: "Enum.toString()"
  fullName: "java.lang.Enum.toString()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Enum.clone()"
  name: "Enum.clone()"
  nameWithType: "Enum.clone()"
  fullName: "java.lang.Enum.clone()"
- uid: "java.lang.Enum.finalize()"
  name: "Enum.finalize()"
  nameWithType: "Enum.finalize()"
  fullName: "java.lang.Enum.finalize()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Enum.compareTo(E)"
  name: "Enum.compareTo(E)"
  nameWithType: "Enum.compareTo(E)"
  fullName: "java.lang.Enum.compareTo(E)"
- uid: "java.lang.Enum.name()"
  name: "Enum.name()"
  nameWithType: "Enum.name()"
  fullName: "java.lang.Enum.name()"
- uid: "java.lang.Enum.<T>valueOf(java.lang.Class<T>,java.lang.String)"
  name: "Enum.<T>valueOf(Class<T>,String)"
  nameWithType: "Enum.<T>valueOf(Class<T>,String)"
  fullName: "java.lang.Enum.<T>valueOf(java.lang.Class<T>,java.lang.String)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Enum.getDeclaringClass()"
  name: "Enum.getDeclaringClass()"
  nameWithType: "Enum.getDeclaringClass()"
  fullName: "java.lang.Enum.getDeclaringClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Enum.ordinal()"
  name: "Enum.ordinal()"
  nameWithType: "Enum.ordinal()"
  fullName: "java.lang.Enum.ordinal()"
- uid: "java.lang.Enum.hashCode()"
  name: "Enum.hashCode()"
  nameWithType: "Enum.hashCode()"
  fullName: "java.lang.Enum.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Enum.equals(java.lang.Object)"
  name: "Enum.equals(Object)"
  nameWithType: "Enum.equals(Object)"
  fullName: "java.lang.Enum.equals(java.lang.Object)"
- uid: "java.lang.Enum"
  name: "Enum"
  nameWithType: "Enum"
  fullName: "java.lang.Enum"
- uid: "java.lang.Enum."
  name: "Enum."
  nameWithType: "Enum."
  fullName: "java.lang.Enum."
- uid: "T>,java.lang.String)"
  name: "T>,String)"
  nameWithType: "T>,String)"
  fullName: "T>,java.lang.String)"
- uid: "T>valueOf(java.lang.Class"
  name: "T>valueOf(Class"
  nameWithType: "T>valueOf(Class"
  fullName: "T>valueOf(java.lang.Class"
