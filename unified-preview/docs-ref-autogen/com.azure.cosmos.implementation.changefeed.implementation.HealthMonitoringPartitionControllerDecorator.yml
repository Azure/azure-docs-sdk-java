### YamlMime:ManagedReference
items:
- uid: "com.azure.cosmos.implementation.changefeed.implementation.HealthMonitoringPartitionControllerDecorator"
  id: "HealthMonitoringPartitionControllerDecorator"
  parent: "com.azure.cosmos.implementation.changefeed.implementation"
  children:
  - "com.azure.cosmos.implementation.changefeed.implementation.HealthMonitoringPartitionControllerDecorator.HealthMonitoringPartitionControllerDecorator(com.azure.cosmos.implementation.changefeed.PartitionController,com.azure.cosmos.implementation.changefeed.HealthMonitor)"
  - "com.azure.cosmos.implementation.changefeed.implementation.HealthMonitoringPartitionControllerDecorator.addOrUpdateLease(com.azure.cosmos.implementation.changefeed.Lease)"
  - "com.azure.cosmos.implementation.changefeed.implementation.HealthMonitoringPartitionControllerDecorator.initialize()"
  - "com.azure.cosmos.implementation.changefeed.implementation.HealthMonitoringPartitionControllerDecorator.shutdown()"
  langs:
  - "java"
  name: "HealthMonitoringPartitionControllerDecorator"
  nameWithType: "HealthMonitoringPartitionControllerDecorator"
  fullName: "com.azure.cosmos.implementation.changefeed.implementation.HealthMonitoringPartitionControllerDecorator"
  type: "Class"
  package: "com.azure.cosmos.implementation.changefeed.implementation"
  summary: "Monitors partition controller health."
  syntax:
    content: " class HealthMonitoringPartitionControllerDecorator implements PartitionController"
  inheritance:
  - "java.lang.Object"
  implements:
  - "com.azure.cosmos.implementation.changefeed.PartitionController"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.azure.cosmos.implementation.changefeed.implementation.HealthMonitoringPartitionControllerDecorator.HealthMonitoringPartitionControllerDecorator(com.azure.cosmos.implementation.changefeed.PartitionController,com.azure.cosmos.implementation.changefeed.HealthMonitor)"
  id: "HealthMonitoringPartitionControllerDecorator(com.azure.cosmos.implementation.changefeed.PartitionController,com.azure.cosmos.implementation.changefeed.HealthMonitor)"
  parent: "com.azure.cosmos.implementation.changefeed.implementation.HealthMonitoringPartitionControllerDecorator"
  langs:
  - "java"
  name: "HealthMonitoringPartitionControllerDecorator(PartitionController inner, HealthMonitor monitor)"
  nameWithType: "HealthMonitoringPartitionControllerDecorator.HealthMonitoringPartitionControllerDecorator(PartitionController inner, HealthMonitor monitor)"
  fullName: "com.azure.cosmos.implementation.changefeed.implementation.HealthMonitoringPartitionControllerDecorator.HealthMonitoringPartitionControllerDecorator(PartitionController inner, HealthMonitor monitor)"
  overload: "com.azure.cosmos.implementation.changefeed.implementation.HealthMonitoringPartitionControllerDecorator.HealthMonitoringPartitionControllerDecorator*"
  type: "Constructor"
  package: "com.azure.cosmos.implementation.changefeed.implementation"
  syntax:
    content: "public HealthMonitoringPartitionControllerDecorator(PartitionController inner, HealthMonitor monitor)"
    parameters:
    - id: "inner"
      type: "com.azure.cosmos.implementation.changefeed.PartitionController"
    - id: "monitor"
      type: "com.azure.cosmos.implementation.changefeed.HealthMonitor"
- uid: "com.azure.cosmos.implementation.changefeed.implementation.HealthMonitoringPartitionControllerDecorator.addOrUpdateLease(com.azure.cosmos.implementation.changefeed.Lease)"
  id: "addOrUpdateLease(com.azure.cosmos.implementation.changefeed.Lease)"
  parent: "com.azure.cosmos.implementation.changefeed.implementation.HealthMonitoringPartitionControllerDecorator"
  langs:
  - "java"
  name: "addOrUpdateLease(Lease lease)"
  nameWithType: "HealthMonitoringPartitionControllerDecorator.addOrUpdateLease(Lease lease)"
  fullName: "com.azure.cosmos.implementation.changefeed.implementation.HealthMonitoringPartitionControllerDecorator.addOrUpdateLease(Lease lease)"
  overload: "com.azure.cosmos.implementation.changefeed.implementation.HealthMonitoringPartitionControllerDecorator.addOrUpdateLease*"
  type: "Method"
  package: "com.azure.cosmos.implementation.changefeed.implementation"
  syntax:
    content: "public Mono<Lease> addOrUpdateLease(Lease lease)"
    parameters:
    - id: "lease"
      type: "com.azure.cosmos.implementation.changefeed.Lease"
    return:
      type: "reactor.core.publisher.Mono<com.azure.cosmos.implementation.changefeed.Lease>"
- uid: "com.azure.cosmos.implementation.changefeed.implementation.HealthMonitoringPartitionControllerDecorator.initialize()"
  id: "initialize()"
  parent: "com.azure.cosmos.implementation.changefeed.implementation.HealthMonitoringPartitionControllerDecorator"
  langs:
  - "java"
  name: "initialize()"
  nameWithType: "HealthMonitoringPartitionControllerDecorator.initialize()"
  fullName: "com.azure.cosmos.implementation.changefeed.implementation.HealthMonitoringPartitionControllerDecorator.initialize()"
  overload: "com.azure.cosmos.implementation.changefeed.implementation.HealthMonitoringPartitionControllerDecorator.initialize*"
  type: "Method"
  package: "com.azure.cosmos.implementation.changefeed.implementation"
  syntax:
    content: "public Mono<Void> initialize()"
    return:
      type: "reactor.core.publisher.Mono<java.lang.Void>"
- uid: "com.azure.cosmos.implementation.changefeed.implementation.HealthMonitoringPartitionControllerDecorator.shutdown()"
  id: "shutdown()"
  parent: "com.azure.cosmos.implementation.changefeed.implementation.HealthMonitoringPartitionControllerDecorator"
  langs:
  - "java"
  name: "shutdown()"
  nameWithType: "HealthMonitoringPartitionControllerDecorator.shutdown()"
  fullName: "com.azure.cosmos.implementation.changefeed.implementation.HealthMonitoringPartitionControllerDecorator.shutdown()"
  overload: "com.azure.cosmos.implementation.changefeed.implementation.HealthMonitoringPartitionControllerDecorator.shutdown*"
  type: "Method"
  package: "com.azure.cosmos.implementation.changefeed.implementation"
  syntax:
    content: "public Mono<Void> shutdown()"
    return:
      type: "reactor.core.publisher.Mono<java.lang.Void>"
references:
- uid: "com.azure.cosmos.implementation.changefeed.PartitionController"
  name: "PartitionController"
  nameWithType: "PartitionController"
  fullName: "com.azure.cosmos.implementation.changefeed.PartitionController"
- uid: "com.azure.cosmos.implementation.changefeed.HealthMonitor"
  name: "HealthMonitor"
  nameWithType: "HealthMonitor"
  fullName: "com.azure.cosmos.implementation.changefeed.HealthMonitor"
- uid: "com.azure.cosmos.implementation.changefeed.implementation.HealthMonitoringPartitionControllerDecorator.HealthMonitoringPartitionControllerDecorator*"
  name: "HealthMonitoringPartitionControllerDecorator"
  nameWithType: "HealthMonitoringPartitionControllerDecorator.HealthMonitoringPartitionControllerDecorator"
  fullName: "com.azure.cosmos.implementation.changefeed.implementation.HealthMonitoringPartitionControllerDecorator.HealthMonitoringPartitionControllerDecorator"
  package: "com.azure.cosmos.implementation.changefeed.implementation"
- uid: "com.azure.cosmos.implementation.changefeed.Lease"
  name: "Lease"
  nameWithType: "Lease"
  fullName: "com.azure.cosmos.implementation.changefeed.Lease"
- uid: "reactor.core.publisher.Mono<com.azure.cosmos.implementation.changefeed.Lease>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.cosmos.implementation.changefeed.Lease"
    name: "Lease"
    fullName: "com.azure.cosmos.implementation.changefeed.Lease"
  - name: ">"
    fullName: ">"
- uid: "com.azure.cosmos.implementation.changefeed.implementation.HealthMonitoringPartitionControllerDecorator.addOrUpdateLease*"
  name: "addOrUpdateLease"
  nameWithType: "HealthMonitoringPartitionControllerDecorator.addOrUpdateLease"
  fullName: "com.azure.cosmos.implementation.changefeed.implementation.HealthMonitoringPartitionControllerDecorator.addOrUpdateLease"
  package: "com.azure.cosmos.implementation.changefeed.implementation"
- uid: "reactor.core.publisher.Mono<java.lang.Void>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "java.lang.Void"
    name: "Void"
    fullName: "java.lang.Void"
  - name: ">"
    fullName: ">"
- uid: "com.azure.cosmos.implementation.changefeed.implementation.HealthMonitoringPartitionControllerDecorator.initialize*"
  name: "initialize"
  nameWithType: "HealthMonitoringPartitionControllerDecorator.initialize"
  fullName: "com.azure.cosmos.implementation.changefeed.implementation.HealthMonitoringPartitionControllerDecorator.initialize"
  package: "com.azure.cosmos.implementation.changefeed.implementation"
- uid: "com.azure.cosmos.implementation.changefeed.implementation.HealthMonitoringPartitionControllerDecorator.shutdown*"
  name: "shutdown"
  nameWithType: "HealthMonitoringPartitionControllerDecorator.shutdown"
  fullName: "com.azure.cosmos.implementation.changefeed.implementation.HealthMonitoringPartitionControllerDecorator.shutdown"
  package: "com.azure.cosmos.implementation.changefeed.implementation"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "reactor.core.publisher.Mono"
  name: "Mono"
  nameWithType: "Mono"
  fullName: "reactor.core.publisher.Mono"
- uid: "java.lang.Void"
  name: "Void"
  nameWithType: "Void"
  fullName: "java.lang.Void"
