### YamlMime:ManagedReference
items:
- uid: "com.azure.cosmos.implementation.http.ReactorNettyRequestRecord"
  id: "ReactorNettyRequestRecord"
  parent: "com.azure.cosmos.implementation.http"
  children:
  - "com.azure.cosmos.implementation.http.ReactorNettyRequestRecord.ReactorNettyRequestRecord()"
  - "com.azure.cosmos.implementation.http.ReactorNettyRequestRecord.setTimeCompleted(java.time.OffsetDateTime)"
  - "com.azure.cosmos.implementation.http.ReactorNettyRequestRecord.setTimeConfigured(java.time.OffsetDateTime)"
  - "com.azure.cosmos.implementation.http.ReactorNettyRequestRecord.setTimeConnected(java.time.OffsetDateTime)"
  - "com.azure.cosmos.implementation.http.ReactorNettyRequestRecord.setTimeCreated(java.time.OffsetDateTime)"
  - "com.azure.cosmos.implementation.http.ReactorNettyRequestRecord.setTimeReceived(java.time.OffsetDateTime)"
  - "com.azure.cosmos.implementation.http.ReactorNettyRequestRecord.setTimeSent(java.time.OffsetDateTime)"
  - "com.azure.cosmos.implementation.http.ReactorNettyRequestRecord.takeTimelineSnapshot()"
  - "com.azure.cosmos.implementation.http.ReactorNettyRequestRecord.timeCompleted()"
  - "com.azure.cosmos.implementation.http.ReactorNettyRequestRecord.timeConfigured()"
  - "com.azure.cosmos.implementation.http.ReactorNettyRequestRecord.timeConnected()"
  - "com.azure.cosmos.implementation.http.ReactorNettyRequestRecord.timeCreated()"
  - "com.azure.cosmos.implementation.http.ReactorNettyRequestRecord.timeReceived()"
  - "com.azure.cosmos.implementation.http.ReactorNettyRequestRecord.timeSent()"
  langs:
  - "java"
  name: "ReactorNettyRequestRecord"
  nameWithType: "ReactorNettyRequestRecord"
  fullName: "com.azure.cosmos.implementation.http.ReactorNettyRequestRecord"
  type: "Class"
  package: "com.azure.cosmos.implementation.http"
  summary: "Represents the timeline of various events in the lifetime of a reactor netty request response.\n\nA <xref uid=\"com.azure.cosmos.implementation.http.ReactorNettyRequestRecord\" data-throw-if-not-resolved=\"false\">ReactorNettyRequestRecord</xref> create a snapshot of <xref uid=\"com.azure.cosmos.implementation.RequestTimeline\" data-throw-if-not-resolved=\"false\">RequestTimeline</xref> based on various <xref uid=\"\" data-throw-if-not-resolved=\"false\">HttpClientState</xref>. Below are the states which are used to capture <xref uid=\"com.azure.cosmos.implementation.RequestTimeline\" data-throw-if-not-resolved=\"false\">RequestTimeline</xref> snapshot.\n\n *  <xref uid=\"\" data-throw-if-not-resolved=\"false\">HttpClientState#CONNECTED</xref>,\n *  <xref uid=\"\" data-throw-if-not-resolved=\"false\">HttpClientState#ACQUIRED</xref>,\n *  <xref uid=\"\" data-throw-if-not-resolved=\"false\">HttpClientState#CONFIGURED</xref>,\n *  <xref uid=\"\" data-throw-if-not-resolved=\"false\">HttpClientState#REQUEST_SENT</xref>,\n *  <xref uid=\"\" data-throw-if-not-resolved=\"false\">HttpClientState#RESPONSE_RECEIVED</xref>,"
  syntax:
    content: "public final class ReactorNettyRequestRecord"
  inheritance:
  - "java.lang.Object"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.azure.cosmos.implementation.http.ReactorNettyRequestRecord.ReactorNettyRequestRecord()"
  id: "ReactorNettyRequestRecord()"
  parent: "com.azure.cosmos.implementation.http.ReactorNettyRequestRecord"
  langs:
  - "java"
  name: "ReactorNettyRequestRecord()"
  nameWithType: "ReactorNettyRequestRecord.ReactorNettyRequestRecord()"
  fullName: "com.azure.cosmos.implementation.http.ReactorNettyRequestRecord.ReactorNettyRequestRecord()"
  overload: "com.azure.cosmos.implementation.http.ReactorNettyRequestRecord.ReactorNettyRequestRecord*"
  type: "Constructor"
  package: "com.azure.cosmos.implementation.http"
  syntax:
    content: "public ReactorNettyRequestRecord()"
- uid: "com.azure.cosmos.implementation.http.ReactorNettyRequestRecord.setTimeCompleted(java.time.OffsetDateTime)"
  id: "setTimeCompleted(java.time.OffsetDateTime)"
  parent: "com.azure.cosmos.implementation.http.ReactorNettyRequestRecord"
  langs:
  - "java"
  name: "setTimeCompleted(OffsetDateTime timeCompleted)"
  nameWithType: "ReactorNettyRequestRecord.setTimeCompleted(OffsetDateTime timeCompleted)"
  fullName: "com.azure.cosmos.implementation.http.ReactorNettyRequestRecord.setTimeCompleted(OffsetDateTime timeCompleted)"
  overload: "com.azure.cosmos.implementation.http.ReactorNettyRequestRecord.setTimeCompleted*"
  type: "Method"
  package: "com.azure.cosmos.implementation.http"
  summary: "Sets request completed offsetDateTime."
  syntax:
    content: "public void setTimeCompleted(OffsetDateTime timeCompleted)"
    parameters:
    - id: "timeCompleted"
      type: "java.time.OffsetDateTime"
- uid: "com.azure.cosmos.implementation.http.ReactorNettyRequestRecord.setTimeConfigured(java.time.OffsetDateTime)"
  id: "setTimeConfigured(java.time.OffsetDateTime)"
  parent: "com.azure.cosmos.implementation.http.ReactorNettyRequestRecord"
  langs:
  - "java"
  name: "setTimeConfigured(OffsetDateTime timeConfigured)"
  nameWithType: "ReactorNettyRequestRecord.setTimeConfigured(OffsetDateTime timeConfigured)"
  fullName: "com.azure.cosmos.implementation.http.ReactorNettyRequestRecord.setTimeConfigured(OffsetDateTime timeConfigured)"
  overload: "com.azure.cosmos.implementation.http.ReactorNettyRequestRecord.setTimeConfigured*"
  type: "Method"
  package: "com.azure.cosmos.implementation.http"
  summary: "Sets connection configured offsetDateTime."
  syntax:
    content: "public void setTimeConfigured(OffsetDateTime timeConfigured)"
    parameters:
    - id: "timeConfigured"
      type: "java.time.OffsetDateTime"
- uid: "com.azure.cosmos.implementation.http.ReactorNettyRequestRecord.setTimeConnected(java.time.OffsetDateTime)"
  id: "setTimeConnected(java.time.OffsetDateTime)"
  parent: "com.azure.cosmos.implementation.http.ReactorNettyRequestRecord"
  langs:
  - "java"
  name: "setTimeConnected(OffsetDateTime timeConnected)"
  nameWithType: "ReactorNettyRequestRecord.setTimeConnected(OffsetDateTime timeConnected)"
  fullName: "com.azure.cosmos.implementation.http.ReactorNettyRequestRecord.setTimeConnected(OffsetDateTime timeConnected)"
  overload: "com.azure.cosmos.implementation.http.ReactorNettyRequestRecord.setTimeConnected*"
  type: "Method"
  package: "com.azure.cosmos.implementation.http"
  summary: "Sets connection established offsetDateTime."
  syntax:
    content: "public void setTimeConnected(OffsetDateTime timeConnected)"
    parameters:
    - id: "timeConnected"
      type: "java.time.OffsetDateTime"
- uid: "com.azure.cosmos.implementation.http.ReactorNettyRequestRecord.setTimeCreated(java.time.OffsetDateTime)"
  id: "setTimeCreated(java.time.OffsetDateTime)"
  parent: "com.azure.cosmos.implementation.http.ReactorNettyRequestRecord"
  langs:
  - "java"
  name: "setTimeCreated(OffsetDateTime timeCreated)"
  nameWithType: "ReactorNettyRequestRecord.setTimeCreated(OffsetDateTime timeCreated)"
  fullName: "com.azure.cosmos.implementation.http.ReactorNettyRequestRecord.setTimeCreated(OffsetDateTime timeCreated)"
  overload: "com.azure.cosmos.implementation.http.ReactorNettyRequestRecord.setTimeCreated*"
  type: "Method"
  package: "com.azure.cosmos.implementation.http"
  summary: "Sets request created offsetDateTime."
  syntax:
    content: "public void setTimeCreated(OffsetDateTime timeCreated)"
    parameters:
    - id: "timeCreated"
      type: "java.time.OffsetDateTime"
- uid: "com.azure.cosmos.implementation.http.ReactorNettyRequestRecord.setTimeReceived(java.time.OffsetDateTime)"
  id: "setTimeReceived(java.time.OffsetDateTime)"
  parent: "com.azure.cosmos.implementation.http.ReactorNettyRequestRecord"
  langs:
  - "java"
  name: "setTimeReceived(OffsetDateTime timeReceived)"
  nameWithType: "ReactorNettyRequestRecord.setTimeReceived(OffsetDateTime timeReceived)"
  fullName: "com.azure.cosmos.implementation.http.ReactorNettyRequestRecord.setTimeReceived(OffsetDateTime timeReceived)"
  overload: "com.azure.cosmos.implementation.http.ReactorNettyRequestRecord.setTimeReceived*"
  type: "Method"
  package: "com.azure.cosmos.implementation.http"
  summary: "Sets response received offsetDateTime."
  syntax:
    content: "public void setTimeReceived(OffsetDateTime timeReceived)"
    parameters:
    - id: "timeReceived"
      type: "java.time.OffsetDateTime"
- uid: "com.azure.cosmos.implementation.http.ReactorNettyRequestRecord.setTimeSent(java.time.OffsetDateTime)"
  id: "setTimeSent(java.time.OffsetDateTime)"
  parent: "com.azure.cosmos.implementation.http.ReactorNettyRequestRecord"
  langs:
  - "java"
  name: "setTimeSent(OffsetDateTime timeSent)"
  nameWithType: "ReactorNettyRequestRecord.setTimeSent(OffsetDateTime timeSent)"
  fullName: "com.azure.cosmos.implementation.http.ReactorNettyRequestRecord.setTimeSent(OffsetDateTime timeSent)"
  overload: "com.azure.cosmos.implementation.http.ReactorNettyRequestRecord.setTimeSent*"
  type: "Method"
  package: "com.azure.cosmos.implementation.http"
  summary: "Sets request sent offsetDateTime."
  syntax:
    content: "public void setTimeSent(OffsetDateTime timeSent)"
    parameters:
    - id: "timeSent"
      type: "java.time.OffsetDateTime"
- uid: "com.azure.cosmos.implementation.http.ReactorNettyRequestRecord.takeTimelineSnapshot()"
  id: "takeTimelineSnapshot()"
  parent: "com.azure.cosmos.implementation.http.ReactorNettyRequestRecord"
  langs:
  - "java"
  name: "takeTimelineSnapshot()"
  nameWithType: "ReactorNettyRequestRecord.takeTimelineSnapshot()"
  fullName: "com.azure.cosmos.implementation.http.ReactorNettyRequestRecord.takeTimelineSnapshot()"
  overload: "com.azure.cosmos.implementation.http.ReactorNettyRequestRecord.takeTimelineSnapshot*"
  type: "Method"
  package: "com.azure.cosmos.implementation.http"
  summary: "Creates the RequestTimeline snapshot."
  syntax:
    content: "public RequestTimeline takeTimelineSnapshot()"
    return:
      type: "com.azure.cosmos.implementation.RequestTimeline"
      description: "requestTimeline"
- uid: "com.azure.cosmos.implementation.http.ReactorNettyRequestRecord.timeCompleted()"
  id: "timeCompleted()"
  parent: "com.azure.cosmos.implementation.http.ReactorNettyRequestRecord"
  langs:
  - "java"
  name: "timeCompleted()"
  nameWithType: "ReactorNettyRequestRecord.timeCompleted()"
  fullName: "com.azure.cosmos.implementation.http.ReactorNettyRequestRecord.timeCompleted()"
  overload: "com.azure.cosmos.implementation.http.ReactorNettyRequestRecord.timeCompleted*"
  type: "Method"
  package: "com.azure.cosmos.implementation.http"
  summary: "Gets request completed offsetDateTime."
  syntax:
    content: "public OffsetDateTime timeCompleted()"
    return:
      type: "java.time.OffsetDateTime"
      description: "timeCompleted"
- uid: "com.azure.cosmos.implementation.http.ReactorNettyRequestRecord.timeConfigured()"
  id: "timeConfigured()"
  parent: "com.azure.cosmos.implementation.http.ReactorNettyRequestRecord"
  langs:
  - "java"
  name: "timeConfigured()"
  nameWithType: "ReactorNettyRequestRecord.timeConfigured()"
  fullName: "com.azure.cosmos.implementation.http.ReactorNettyRequestRecord.timeConfigured()"
  overload: "com.azure.cosmos.implementation.http.ReactorNettyRequestRecord.timeConfigured*"
  type: "Method"
  package: "com.azure.cosmos.implementation.http"
  summary: "Get connection configured offsetDateTime."
  syntax:
    content: "public OffsetDateTime timeConfigured()"
    return:
      type: "java.time.OffsetDateTime"
      description: "timeConfigured"
- uid: "com.azure.cosmos.implementation.http.ReactorNettyRequestRecord.timeConnected()"
  id: "timeConnected()"
  parent: "com.azure.cosmos.implementation.http.ReactorNettyRequestRecord"
  langs:
  - "java"
  name: "timeConnected()"
  nameWithType: "ReactorNettyRequestRecord.timeConnected()"
  fullName: "com.azure.cosmos.implementation.http.ReactorNettyRequestRecord.timeConnected()"
  overload: "com.azure.cosmos.implementation.http.ReactorNettyRequestRecord.timeConnected*"
  type: "Method"
  package: "com.azure.cosmos.implementation.http"
  summary: "Get connection established offsetDateTime."
  syntax:
    content: "public OffsetDateTime timeConnected()"
    return:
      type: "java.time.OffsetDateTime"
      description: "timeConnected"
- uid: "com.azure.cosmos.implementation.http.ReactorNettyRequestRecord.timeCreated()"
  id: "timeCreated()"
  parent: "com.azure.cosmos.implementation.http.ReactorNettyRequestRecord"
  langs:
  - "java"
  name: "timeCreated()"
  nameWithType: "ReactorNettyRequestRecord.timeCreated()"
  fullName: "com.azure.cosmos.implementation.http.ReactorNettyRequestRecord.timeCreated()"
  overload: "com.azure.cosmos.implementation.http.ReactorNettyRequestRecord.timeCreated*"
  type: "Method"
  package: "com.azure.cosmos.implementation.http"
  summary: "Gets request created offsetDateTime."
  syntax:
    content: "public OffsetDateTime timeCreated()"
    return:
      type: "java.time.OffsetDateTime"
- uid: "com.azure.cosmos.implementation.http.ReactorNettyRequestRecord.timeReceived()"
  id: "timeReceived()"
  parent: "com.azure.cosmos.implementation.http.ReactorNettyRequestRecord"
  langs:
  - "java"
  name: "timeReceived()"
  nameWithType: "ReactorNettyRequestRecord.timeReceived()"
  fullName: "com.azure.cosmos.implementation.http.ReactorNettyRequestRecord.timeReceived()"
  overload: "com.azure.cosmos.implementation.http.ReactorNettyRequestRecord.timeReceived*"
  type: "Method"
  package: "com.azure.cosmos.implementation.http"
  summary: "Gets response received offsetDateTime."
  syntax:
    content: "public OffsetDateTime timeReceived()"
    return:
      type: "java.time.OffsetDateTime"
      description: "timeReceived"
- uid: "com.azure.cosmos.implementation.http.ReactorNettyRequestRecord.timeSent()"
  id: "timeSent()"
  parent: "com.azure.cosmos.implementation.http.ReactorNettyRequestRecord"
  langs:
  - "java"
  name: "timeSent()"
  nameWithType: "ReactorNettyRequestRecord.timeSent()"
  fullName: "com.azure.cosmos.implementation.http.ReactorNettyRequestRecord.timeSent()"
  overload: "com.azure.cosmos.implementation.http.ReactorNettyRequestRecord.timeSent*"
  type: "Method"
  package: "com.azure.cosmos.implementation.http"
  summary: "Gets request sent offsetDateTime."
  syntax:
    content: "public OffsetDateTime timeSent()"
    return:
      type: "java.time.OffsetDateTime"
      description: "timeSent"
references:
- uid: "com.azure.cosmos.implementation.http.ReactorNettyRequestRecord.ReactorNettyRequestRecord*"
  name: "ReactorNettyRequestRecord"
  nameWithType: "ReactorNettyRequestRecord.ReactorNettyRequestRecord"
  fullName: "com.azure.cosmos.implementation.http.ReactorNettyRequestRecord.ReactorNettyRequestRecord"
  package: "com.azure.cosmos.implementation.http"
- uid: "java.time.OffsetDateTime"
  spec.java:
  - uid: "java.time.OffsetDateTime"
    name: "OffsetDateTime"
    fullName: "java.time.OffsetDateTime"
- uid: "com.azure.cosmos.implementation.http.ReactorNettyRequestRecord.timeCreated*"
  name: "timeCreated"
  nameWithType: "ReactorNettyRequestRecord.timeCreated"
  fullName: "com.azure.cosmos.implementation.http.ReactorNettyRequestRecord.timeCreated"
  package: "com.azure.cosmos.implementation.http"
- uid: "com.azure.cosmos.implementation.http.ReactorNettyRequestRecord.timeConnected*"
  name: "timeConnected"
  nameWithType: "ReactorNettyRequestRecord.timeConnected"
  fullName: "com.azure.cosmos.implementation.http.ReactorNettyRequestRecord.timeConnected"
  package: "com.azure.cosmos.implementation.http"
- uid: "com.azure.cosmos.implementation.http.ReactorNettyRequestRecord.timeConfigured*"
  name: "timeConfigured"
  nameWithType: "ReactorNettyRequestRecord.timeConfigured"
  fullName: "com.azure.cosmos.implementation.http.ReactorNettyRequestRecord.timeConfigured"
  package: "com.azure.cosmos.implementation.http"
- uid: "com.azure.cosmos.implementation.http.ReactorNettyRequestRecord.timeSent*"
  name: "timeSent"
  nameWithType: "ReactorNettyRequestRecord.timeSent"
  fullName: "com.azure.cosmos.implementation.http.ReactorNettyRequestRecord.timeSent"
  package: "com.azure.cosmos.implementation.http"
- uid: "com.azure.cosmos.implementation.http.ReactorNettyRequestRecord.timeReceived*"
  name: "timeReceived"
  nameWithType: "ReactorNettyRequestRecord.timeReceived"
  fullName: "com.azure.cosmos.implementation.http.ReactorNettyRequestRecord.timeReceived"
  package: "com.azure.cosmos.implementation.http"
- uid: "com.azure.cosmos.implementation.http.ReactorNettyRequestRecord.timeCompleted*"
  name: "timeCompleted"
  nameWithType: "ReactorNettyRequestRecord.timeCompleted"
  fullName: "com.azure.cosmos.implementation.http.ReactorNettyRequestRecord.timeCompleted"
  package: "com.azure.cosmos.implementation.http"
- uid: "com.azure.cosmos.implementation.http.ReactorNettyRequestRecord.setTimeCreated*"
  name: "setTimeCreated"
  nameWithType: "ReactorNettyRequestRecord.setTimeCreated"
  fullName: "com.azure.cosmos.implementation.http.ReactorNettyRequestRecord.setTimeCreated"
  package: "com.azure.cosmos.implementation.http"
- uid: "com.azure.cosmos.implementation.http.ReactorNettyRequestRecord.setTimeConnected*"
  name: "setTimeConnected"
  nameWithType: "ReactorNettyRequestRecord.setTimeConnected"
  fullName: "com.azure.cosmos.implementation.http.ReactorNettyRequestRecord.setTimeConnected"
  package: "com.azure.cosmos.implementation.http"
- uid: "com.azure.cosmos.implementation.http.ReactorNettyRequestRecord.setTimeConfigured*"
  name: "setTimeConfigured"
  nameWithType: "ReactorNettyRequestRecord.setTimeConfigured"
  fullName: "com.azure.cosmos.implementation.http.ReactorNettyRequestRecord.setTimeConfigured"
  package: "com.azure.cosmos.implementation.http"
- uid: "com.azure.cosmos.implementation.http.ReactorNettyRequestRecord.setTimeSent*"
  name: "setTimeSent"
  nameWithType: "ReactorNettyRequestRecord.setTimeSent"
  fullName: "com.azure.cosmos.implementation.http.ReactorNettyRequestRecord.setTimeSent"
  package: "com.azure.cosmos.implementation.http"
- uid: "com.azure.cosmos.implementation.http.ReactorNettyRequestRecord.setTimeReceived*"
  name: "setTimeReceived"
  nameWithType: "ReactorNettyRequestRecord.setTimeReceived"
  fullName: "com.azure.cosmos.implementation.http.ReactorNettyRequestRecord.setTimeReceived"
  package: "com.azure.cosmos.implementation.http"
- uid: "com.azure.cosmos.implementation.http.ReactorNettyRequestRecord.setTimeCompleted*"
  name: "setTimeCompleted"
  nameWithType: "ReactorNettyRequestRecord.setTimeCompleted"
  fullName: "com.azure.cosmos.implementation.http.ReactorNettyRequestRecord.setTimeCompleted"
  package: "com.azure.cosmos.implementation.http"
- uid: "com.azure.cosmos.implementation.RequestTimeline"
  name: "RequestTimeline"
  nameWithType: "RequestTimeline"
  fullName: "com.azure.cosmos.implementation.RequestTimeline"
- uid: "com.azure.cosmos.implementation.http.ReactorNettyRequestRecord.takeTimelineSnapshot*"
  name: "takeTimelineSnapshot"
  nameWithType: "ReactorNettyRequestRecord.takeTimelineSnapshot"
  fullName: "com.azure.cosmos.implementation.http.ReactorNettyRequestRecord.takeTimelineSnapshot"
  package: "com.azure.cosmos.implementation.http"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
