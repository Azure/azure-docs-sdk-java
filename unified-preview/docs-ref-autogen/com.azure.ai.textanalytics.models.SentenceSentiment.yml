### YamlMime:ManagedReference
items:
- uid: "com.azure.ai.textanalytics.models.SentenceSentiment"
  id: "SentenceSentiment"
  parent: "com.azure.ai.textanalytics.models"
  children:
  - "com.azure.ai.textanalytics.models.SentenceSentiment.SentenceSentiment(com.azure.ai.textanalytics.models.SentimentLabel,com.azure.ai.textanalytics.models.SentimentScorePerLabel,int,int)"
  - "com.azure.ai.textanalytics.models.SentenceSentiment.getLength()"
  - "com.azure.ai.textanalytics.models.SentenceSentiment.getOffset()"
  - "com.azure.ai.textanalytics.models.SentenceSentiment.getSentiment()"
  - "com.azure.ai.textanalytics.models.SentenceSentiment.getSentimentScores()"
  langs:
  - "java"
  name: "SentenceSentiment"
  nameWithType: "SentenceSentiment"
  fullName: "com.azure.ai.textanalytics.models.SentenceSentiment"
  type: "Class"
  package: "com.azure.ai.textanalytics.models"
  summary: "The SentenceSentiment model."
  syntax:
    content: "public final class SentenceSentiment"
  inheritance:
  - "java.lang.Object"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.azure.ai.textanalytics.models.SentenceSentiment.SentenceSentiment(com.azure.ai.textanalytics.models.SentimentLabel,com.azure.ai.textanalytics.models.SentimentScorePerLabel,int,int)"
  id: "SentenceSentiment(com.azure.ai.textanalytics.models.SentimentLabel,com.azure.ai.textanalytics.models.SentimentScorePerLabel,int,int)"
  parent: "com.azure.ai.textanalytics.models.SentenceSentiment"
  langs:
  - "java"
  name: "SentenceSentiment(SentimentLabel sentiment, SentimentScorePerLabel sentimentScores, int length, int offset)"
  nameWithType: "SentenceSentiment.SentenceSentiment(SentimentLabel sentiment, SentimentScorePerLabel sentimentScores, int length, int offset)"
  fullName: "com.azure.ai.textanalytics.models.SentenceSentiment.SentenceSentiment(SentimentLabel sentiment, SentimentScorePerLabel sentimentScores, int length, int offset)"
  overload: "com.azure.ai.textanalytics.models.SentenceSentiment.SentenceSentiment*"
  type: "Constructor"
  package: "com.azure.ai.textanalytics.models"
  summary: "Creates a `SentenceSentiment` model that describes the sentiment analysis of sentence."
  syntax:
    content: "public SentenceSentiment(SentimentLabel sentiment, SentimentScorePerLabel sentimentScores, int length, int offset)"
    parameters:
    - id: "sentiment"
      type: "com.azure.ai.textanalytics.models.SentimentLabel"
      description: "sentiment label of the sentence"
    - id: "sentimentScores"
      type: "com.azure.ai.textanalytics.models.SentimentScorePerLabel"
      description: "the score of sentiment label of the sentence"
    - id: "length"
      type: "int"
      description: "length of the sentence"
    - id: "offset"
      type: "int"
      description: "the offset from the start of the sentence"
- uid: "com.azure.ai.textanalytics.models.SentenceSentiment.getLength()"
  id: "getLength()"
  parent: "com.azure.ai.textanalytics.models.SentenceSentiment"
  langs:
  - "java"
  name: "getLength()"
  nameWithType: "SentenceSentiment.getLength()"
  fullName: "com.azure.ai.textanalytics.models.SentenceSentiment.getLength()"
  overload: "com.azure.ai.textanalytics.models.SentenceSentiment.getLength*"
  type: "Method"
  package: "com.azure.ai.textanalytics.models"
  summary: "Get the length of the sentence by Unicode standard."
  syntax:
    content: "public int getLength()"
    return:
      type: "int"
      description: "the length of the sentence by Unicode standard"
- uid: "com.azure.ai.textanalytics.models.SentenceSentiment.getOffset()"
  id: "getOffset()"
  parent: "com.azure.ai.textanalytics.models.SentenceSentiment"
  langs:
  - "java"
  name: "getOffset()"
  nameWithType: "SentenceSentiment.getOffset()"
  fullName: "com.azure.ai.textanalytics.models.SentenceSentiment.getOffset()"
  overload: "com.azure.ai.textanalytics.models.SentenceSentiment.getOffset*"
  type: "Method"
  package: "com.azure.ai.textanalytics.models"
  summary: "Get the offset of the sentence sentiment."
  syntax:
    content: "public int getOffset()"
    return:
      type: "int"
      description: "the offset of sentence sentiment"
- uid: "com.azure.ai.textanalytics.models.SentenceSentiment.getSentiment()"
  id: "getSentiment()"
  parent: "com.azure.ai.textanalytics.models.SentenceSentiment"
  langs:
  - "java"
  name: "getSentiment()"
  nameWithType: "SentenceSentiment.getSentiment()"
  fullName: "com.azure.ai.textanalytics.models.SentenceSentiment.getSentiment()"
  overload: "com.azure.ai.textanalytics.models.SentenceSentiment.getSentiment*"
  type: "Method"
  package: "com.azure.ai.textanalytics.models"
  summary: "Get the text sentiment labels: POSITIVE, NEGATIVE, NEUTRAL, MIXED."
  syntax:
    content: "public SentimentLabel getSentiment()"
    return:
      type: "com.azure.ai.textanalytics.models.SentimentLabel"
      description: "the SentimentLabel"
- uid: "com.azure.ai.textanalytics.models.SentenceSentiment.getSentimentScores()"
  id: "getSentimentScores()"
  parent: "com.azure.ai.textanalytics.models.SentenceSentiment"
  langs:
  - "java"
  name: "getSentimentScores()"
  nameWithType: "SentenceSentiment.getSentimentScores()"
  fullName: "com.azure.ai.textanalytics.models.SentenceSentiment.getSentimentScores()"
  overload: "com.azure.ai.textanalytics.models.SentenceSentiment.getSentimentScores*"
  type: "Method"
  package: "com.azure.ai.textanalytics.models"
  summary: "Get the score of the sentiment label. All score values sum up to 1, higher the score value means higher confidence the sentiment label represents."
  syntax:
    content: "public SentimentScorePerLabel getSentimentScores()"
    return:
      type: "com.azure.ai.textanalytics.models.SentimentScorePerLabel"
      description: "the SentimentScorePerLabel"
references:
- uid: "com.azure.ai.textanalytics.models.SentimentLabel"
  name: "SentimentLabel"
  nameWithType: "SentimentLabel"
  fullName: "com.azure.ai.textanalytics.models.SentimentLabel"
- uid: "com.azure.ai.textanalytics.models.SentimentScorePerLabel"
  name: "SentimentScorePerLabel"
  nameWithType: "SentimentScorePerLabel"
  fullName: "com.azure.ai.textanalytics.models.SentimentScorePerLabel"
- uid: "int"
  spec.java:
  - uid: "int"
    name: "int"
    fullName: "int"
- uid: "com.azure.ai.textanalytics.models.SentenceSentiment.SentenceSentiment*"
  name: "SentenceSentiment"
  nameWithType: "SentenceSentiment.SentenceSentiment"
  fullName: "com.azure.ai.textanalytics.models.SentenceSentiment.SentenceSentiment"
  package: "com.azure.ai.textanalytics.models"
- uid: "com.azure.ai.textanalytics.models.SentenceSentiment.getLength*"
  name: "getLength"
  nameWithType: "SentenceSentiment.getLength"
  fullName: "com.azure.ai.textanalytics.models.SentenceSentiment.getLength"
  package: "com.azure.ai.textanalytics.models"
- uid: "com.azure.ai.textanalytics.models.SentenceSentiment.getOffset*"
  name: "getOffset"
  nameWithType: "SentenceSentiment.getOffset"
  fullName: "com.azure.ai.textanalytics.models.SentenceSentiment.getOffset"
  package: "com.azure.ai.textanalytics.models"
- uid: "com.azure.ai.textanalytics.models.SentenceSentiment.getSentiment*"
  name: "getSentiment"
  nameWithType: "SentenceSentiment.getSentiment"
  fullName: "com.azure.ai.textanalytics.models.SentenceSentiment.getSentiment"
  package: "com.azure.ai.textanalytics.models"
- uid: "com.azure.ai.textanalytics.models.SentenceSentiment.getSentimentScores*"
  name: "getSentimentScores"
  nameWithType: "SentenceSentiment.getSentimentScores"
  fullName: "com.azure.ai.textanalytics.models.SentenceSentiment.getSentimentScores"
  package: "com.azure.ai.textanalytics.models"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
