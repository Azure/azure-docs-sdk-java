### YamlMime:ManagedReference
items:
- uid: "com.azure.core.http.policy.UserAgentPolicy"
  id: "UserAgentPolicy"
  parent: "com.azure.core.http.policy"
  children:
  - "com.azure.core.http.policy.UserAgentPolicy.APPEND_USER_AGENT_CONTEXT_KEY"
  - "com.azure.core.http.policy.UserAgentPolicy.OVERRIDE_USER_AGENT_CONTEXT_KEY"
  - "com.azure.core.http.policy.UserAgentPolicy.UserAgentPolicy()"
  - "com.azure.core.http.policy.UserAgentPolicy.UserAgentPolicy(java.lang.String)"
  - "com.azure.core.http.policy.UserAgentPolicy.UserAgentPolicy(java.lang.String,java.lang.String,com.azure.core.util.Configuration,com.azure.core.util.ServiceVersion)"
  - "com.azure.core.http.policy.UserAgentPolicy.UserAgentPolicy(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Configuration)"
  - "com.azure.core.http.policy.UserAgentPolicy.process(com.azure.core.http.HttpPipelineCallContext,com.azure.core.http.HttpPipelineNextPolicy)"
  langs:
  - "java"
  name: "UserAgentPolicy"
  nameWithType: "UserAgentPolicy"
  fullName: "com.azure.core.http.policy.UserAgentPolicy"
  type: "Class"
  package: "com.azure.core.http.policy"
  summary: "Pipeline policy that adds \"User-Agent\" header to a request. The format for the \"User-Agent\" string is outlined in [Azure Core: Telemetry policy][Azure Core_ Telemetry policy].\n\n\n[Azure Core_ Telemetry policy]: https://azure.github.io/azure-sdk/general_azurecore.html#telemetry-policy"
  syntax:
    content: "public class UserAgentPolicy implements HttpPipelinePolicy"
  inheritance:
  - "java.lang.Object"
  implements:
  - "com.azure.core.http.policy.HttpPipelinePolicy"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.azure.core.http.policy.UserAgentPolicy.APPEND_USER_AGENT_CONTEXT_KEY"
  id: "APPEND_USER_AGENT_CONTEXT_KEY"
  parent: "com.azure.core.http.policy.UserAgentPolicy"
  langs:
  - "java"
  name: "APPEND_USER_AGENT_CONTEXT_KEY"
  nameWithType: "UserAgentPolicy.APPEND_USER_AGENT_CONTEXT_KEY"
  fullName: "com.azure.core.http.policy.UserAgentPolicy.APPEND_USER_AGENT_CONTEXT_KEY"
  type: "Field"
  package: "com.azure.core.http.policy"
  summary: "Key for <xref uid=\"com.azure.core.util.Context\" data-throw-if-not-resolved=\"false\">Context</xref> to add a value which will be appended to the User-Agent supplied in this policy in an ad-hoc manner."
  syntax:
    content: "public static final String APPEND_USER_AGENT_CONTEXT_KEY"
    return:
      type: "java.lang.String"
- uid: "com.azure.core.http.policy.UserAgentPolicy.OVERRIDE_USER_AGENT_CONTEXT_KEY"
  id: "OVERRIDE_USER_AGENT_CONTEXT_KEY"
  parent: "com.azure.core.http.policy.UserAgentPolicy"
  langs:
  - "java"
  name: "OVERRIDE_USER_AGENT_CONTEXT_KEY"
  nameWithType: "UserAgentPolicy.OVERRIDE_USER_AGENT_CONTEXT_KEY"
  fullName: "com.azure.core.http.policy.UserAgentPolicy.OVERRIDE_USER_AGENT_CONTEXT_KEY"
  type: "Field"
  package: "com.azure.core.http.policy"
  summary: "Key for <xref uid=\"com.azure.core.util.Context\" data-throw-if-not-resolved=\"false\">Context</xref> to add a value which will override the User-Agent supplied in this policy in an ad-hoc manner."
  syntax:
    content: "public static final String OVERRIDE_USER_AGENT_CONTEXT_KEY"
    return:
      type: "java.lang.String"
- uid: "com.azure.core.http.policy.UserAgentPolicy.UserAgentPolicy()"
  id: "UserAgentPolicy()"
  parent: "com.azure.core.http.policy.UserAgentPolicy"
  langs:
  - "java"
  name: "UserAgentPolicy()"
  nameWithType: "UserAgentPolicy.UserAgentPolicy()"
  fullName: "com.azure.core.http.policy.UserAgentPolicy.UserAgentPolicy()"
  overload: "com.azure.core.http.policy.UserAgentPolicy.UserAgentPolicy*"
  type: "Constructor"
  package: "com.azure.core.http.policy"
  summary: "Creates a <xref uid=\"com.azure.core.http.policy.UserAgentPolicy\" data-throw-if-not-resolved=\"false\">UserAgentPolicy</xref> with a default user agent string."
  syntax:
    content: "public UserAgentPolicy()"
- uid: "com.azure.core.http.policy.UserAgentPolicy.UserAgentPolicy(java.lang.String)"
  id: "UserAgentPolicy(java.lang.String)"
  parent: "com.azure.core.http.policy.UserAgentPolicy"
  langs:
  - "java"
  name: "UserAgentPolicy(String userAgent)"
  nameWithType: "UserAgentPolicy.UserAgentPolicy(String userAgent)"
  fullName: "com.azure.core.http.policy.UserAgentPolicy.UserAgentPolicy(String userAgent)"
  overload: "com.azure.core.http.policy.UserAgentPolicy.UserAgentPolicy*"
  type: "Constructor"
  package: "com.azure.core.http.policy"
  summary: "Creates a UserAgentPolicy with `userAgent` as the header value. If `userAgent` is `null`, then the default user agent value is used."
  syntax:
    content: "public UserAgentPolicy(String userAgent)"
    parameters:
    - id: "userAgent"
      type: "java.lang.String"
      description: "The user agent string to add to request headers."
- uid: "com.azure.core.http.policy.UserAgentPolicy.UserAgentPolicy(java.lang.String,java.lang.String,com.azure.core.util.Configuration,com.azure.core.util.ServiceVersion)"
  id: "UserAgentPolicy(java.lang.String,java.lang.String,com.azure.core.util.Configuration,com.azure.core.util.ServiceVersion)"
  parent: "com.azure.core.http.policy.UserAgentPolicy"
  langs:
  - "java"
  name: "UserAgentPolicy(String sdkName, String sdkVersion, Configuration configuration, ServiceVersion version)"
  nameWithType: "UserAgentPolicy.UserAgentPolicy(String sdkName, String sdkVersion, Configuration configuration, ServiceVersion version)"
  fullName: "com.azure.core.http.policy.UserAgentPolicy.UserAgentPolicy(String sdkName, String sdkVersion, Configuration configuration, ServiceVersion version)"
  overload: "com.azure.core.http.policy.UserAgentPolicy.UserAgentPolicy*"
  type: "Constructor"
  package: "com.azure.core.http.policy"
  summary: "Creates a UserAgentPolicy with the `sdkName` and `sdkVersion` in the User-Agent header value.\n\nIf the passed configuration contains true for AZURE\\_TELEMETRY\\_DISABLED the platform information won't be included in the user agent."
  syntax:
    content: "public UserAgentPolicy(String sdkName, String sdkVersion, Configuration configuration, ServiceVersion version)"
    parameters:
    - id: "sdkName"
      type: "java.lang.String"
      description: "Name of the client library."
    - id: "sdkVersion"
      type: "java.lang.String"
      description: "Version of the client library."
    - id: "configuration"
      type: "com.azure.core.util.Configuration"
      description: "Configuration store that will be checked for <xref uid=\"com.azure.core.util.Configuration.PROPERTY_AZURE_TELEMETRY_DISABLED\" data-throw-if-not-resolved=\"false\">Configuration#PROPERTY_AZURE_TELEMETRY_DISABLED</xref>. If <code>null</code> is passed the <xref uid=\"com.azure.core.util.Configuration.getGlobalConfiguration()\" data-throw-if-not-resolved=\"false\">global configuration</xref> will be checked."
    - id: "version"
      type: "com.azure.core.util.ServiceVersion"
      description: "<xref uid=\"com.azure.core.util.ServiceVersion\" data-throw-if-not-resolved=\"false\">ServiceVersion</xref> of the service to be used when making requests."
- uid: "com.azure.core.http.policy.UserAgentPolicy.UserAgentPolicy(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Configuration)"
  id: "UserAgentPolicy(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Configuration)"
  parent: "com.azure.core.http.policy.UserAgentPolicy"
  langs:
  - "java"
  name: "UserAgentPolicy(String applicationId, String sdkName, String sdkVersion, Configuration configuration)"
  nameWithType: "UserAgentPolicy.UserAgentPolicy(String applicationId, String sdkName, String sdkVersion, Configuration configuration)"
  fullName: "com.azure.core.http.policy.UserAgentPolicy.UserAgentPolicy(String applicationId, String sdkName, String sdkVersion, Configuration configuration)"
  overload: "com.azure.core.http.policy.UserAgentPolicy.UserAgentPolicy*"
  type: "Constructor"
  package: "com.azure.core.http.policy"
  summary: "Creates a UserAgentPolicy with the `sdkName` and `sdkVersion` in the User-Agent header value.\n\nIf the passed configuration contains true for AZURE\\_TELEMETRY\\_DISABLED the platform information won't be included in the user agent."
  syntax:
    content: "public UserAgentPolicy(String applicationId, String sdkName, String sdkVersion, Configuration configuration)"
    parameters:
    - id: "applicationId"
      type: "java.lang.String"
      description: "User specified application Id."
    - id: "sdkName"
      type: "java.lang.String"
      description: "Name of the client library."
    - id: "sdkVersion"
      type: "java.lang.String"
      description: "Version of the client library."
    - id: "configuration"
      type: "com.azure.core.util.Configuration"
      description: "Configuration store that will be checked for <xref uid=\"com.azure.core.util.Configuration.PROPERTY_AZURE_TELEMETRY_DISABLED\" data-throw-if-not-resolved=\"false\">Configuration#PROPERTY_AZURE_TELEMETRY_DISABLED</xref>. If <code>null</code> is passed the <xref uid=\"com.azure.core.util.Configuration.getGlobalConfiguration()\" data-throw-if-not-resolved=\"false\">global configuration</xref> will be checked."
- uid: "com.azure.core.http.policy.UserAgentPolicy.process(com.azure.core.http.HttpPipelineCallContext,com.azure.core.http.HttpPipelineNextPolicy)"
  id: "process(com.azure.core.http.HttpPipelineCallContext,com.azure.core.http.HttpPipelineNextPolicy)"
  parent: "com.azure.core.http.policy.UserAgentPolicy"
  langs:
  - "java"
  name: "process(HttpPipelineCallContext context, HttpPipelineNextPolicy next)"
  nameWithType: "UserAgentPolicy.process(HttpPipelineCallContext context, HttpPipelineNextPolicy next)"
  fullName: "com.azure.core.http.policy.UserAgentPolicy.process(HttpPipelineCallContext context, HttpPipelineNextPolicy next)"
  overload: "com.azure.core.http.policy.UserAgentPolicy.process*"
  type: "Method"
  package: "com.azure.core.http.policy"
  summary: "Updates the \"User-Agent\" header with the value supplied in the policy.\n\nThe `context` will be checked for `Override-User-Agent` and `Append-User-Agent`. `Override-User-Agent` will take precedence over the value supplied in the policy, `Append-User-Agent` will be appended to the value supplied in the policy."
  syntax:
    content: "public Mono<HttpResponse> process(HttpPipelineCallContext context, HttpPipelineNextPolicy next)"
    parameters:
    - id: "context"
      type: "com.azure.core.http.HttpPipelineCallContext"
      description: "request context"
    - id: "next"
      type: "com.azure.core.http.HttpPipelineNextPolicy"
      description: "The next policy to invoke."
    return:
      type: "reactor.core.publisher.Mono<com.azure.core.http.HttpResponse>"
      description: "A publisher that initiates the request upon subscription and emits a response on completion."
references:
- uid: "com.azure.core.http.policy.UserAgentPolicy.UserAgentPolicy*"
  name: "UserAgentPolicy"
  nameWithType: "UserAgentPolicy.UserAgentPolicy"
  fullName: "com.azure.core.http.policy.UserAgentPolicy.UserAgentPolicy"
  package: "com.azure.core.http.policy"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "com.azure.core.util.Configuration"
  name: "Configuration"
  nameWithType: "Configuration"
  fullName: "com.azure.core.util.Configuration"
- uid: "com.azure.core.util.ServiceVersion"
  name: "ServiceVersion"
  nameWithType: "ServiceVersion"
  fullName: "com.azure.core.util.ServiceVersion"
- uid: "com.azure.core.http.HttpPipelineCallContext"
  name: "HttpPipelineCallContext"
  nameWithType: "HttpPipelineCallContext"
  fullName: "com.azure.core.http.HttpPipelineCallContext"
- uid: "com.azure.core.http.HttpPipelineNextPolicy"
  name: "HttpPipelineNextPolicy"
  nameWithType: "HttpPipelineNextPolicy"
  fullName: "com.azure.core.http.HttpPipelineNextPolicy"
- uid: "reactor.core.publisher.Mono<com.azure.core.http.HttpResponse>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.core.http.HttpResponse"
    name: "HttpResponse"
    fullName: "com.azure.core.http.HttpResponse"
  - name: ">"
    fullName: ">"
- uid: "com.azure.core.http.policy.UserAgentPolicy.process*"
  name: "process"
  nameWithType: "UserAgentPolicy.process"
  fullName: "com.azure.core.http.policy.UserAgentPolicy.process"
  package: "com.azure.core.http.policy"
- uid: "com.azure.core.http.policy.HttpPipelinePolicy"
  name: "HttpPipelinePolicy"
  nameWithType: "HttpPipelinePolicy"
  fullName: "com.azure.core.http.policy.HttpPipelinePolicy"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "com.azure.core.http.HttpResponse"
  name: "HttpResponse"
  nameWithType: "HttpResponse"
  fullName: "com.azure.core.http.HttpResponse"
- uid: "reactor.core.publisher.Mono"
  name: "Mono"
  nameWithType: "Mono"
  fullName: "reactor.core.publisher.Mono"
