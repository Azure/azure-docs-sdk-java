### YamlMime:ManagedReference
items:
- uid: "com.azure.core.util.polling.DefaultSyncPoller"
  id: "DefaultSyncPoller"
  parent: "com.azure.core.util.polling"
  children:
  - "com.azure.core.util.polling.DefaultSyncPoller.DefaultSyncPoller(java.time.Duration,java.util.function.Function<com.azure.core.util.polling.PollingContext<T>,reactor.core.publisher.Mono<T>>,java.util.function.Function<com.azure.core.util.polling.PollingContext<T>,reactor.core.publisher.Mono<com.azure.core.util.polling.PollResponse<T>>>,java.util.function.BiFunction<com.azure.core.util.polling.PollingContext<T>,com.azure.core.util.polling.PollResponse<T>,reactor.core.publisher.Mono<T>>,java.util.function.Function<com.azure.core.util.polling.PollingContext<T>,reactor.core.publisher.Mono<U>>)"
  - "com.azure.core.util.polling.DefaultSyncPoller.cancelOperation()"
  - "com.azure.core.util.polling.DefaultSyncPoller.getFinalResult()"
  - "com.azure.core.util.polling.DefaultSyncPoller.poll()"
  - "com.azure.core.util.polling.DefaultSyncPoller.waitForCompletion()"
  - "com.azure.core.util.polling.DefaultSyncPoller.waitForCompletion(java.time.Duration)"
  - "com.azure.core.util.polling.DefaultSyncPoller.waitUntil(com.azure.core.util.polling.LongRunningOperationStatus)"
  - "com.azure.core.util.polling.DefaultSyncPoller.waitUntil(java.time.Duration,com.azure.core.util.polling.LongRunningOperationStatus)"
  langs:
  - "java"
  name: "DefaultSyncPoller<T,U>"
  nameWithType: "DefaultSyncPoller<T,U>"
  fullName: "com.azure.core.util.polling.DefaultSyncPoller<T,U>"
  type: "Class"
  package: "com.azure.core.util.polling"
  summary: "INTERNAL PACKAGE PRIVATE CLASS Default implementation of <xref uid=\"com.azure.core.util.polling.SyncPoller\" data-throw-if-not-resolved=\"false\">SyncPoller</xref> that uses blocking reactor call underneath. The DefaultSyncPoller is not thread safe but we make every attempt to be safe in cases it is possible to be so, e.g. by using volatile and copying context."
  syntax:
    content: "final class DefaultSyncPoller<T,U> implements SyncPoller<T,U>"
    typeParameters:
    - id: "T"
    - id: "U"
  inheritance:
  - "java.lang.Object"
  implements:
  - "com.azure.core.util.polling.SyncPoller<T,U>"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.azure.core.util.polling.DefaultSyncPoller.DefaultSyncPoller(java.time.Duration,java.util.function.Function<com.azure.core.util.polling.PollingContext<T>,reactor.core.publisher.Mono<T>>,java.util.function.Function<com.azure.core.util.polling.PollingContext<T>,reactor.core.publisher.Mono<com.azure.core.util.polling.PollResponse<T>>>,java.util.function.BiFunction<com.azure.core.util.polling.PollingContext<T>,com.azure.core.util.polling.PollResponse<T>,reactor.core.publisher.Mono<T>>,java.util.function.Function<com.azure.core.util.polling.PollingContext<T>,reactor.core.publisher.Mono<U>>)"
  id: "DefaultSyncPoller(java.time.Duration,java.util.function.Function<com.azure.core.util.polling.PollingContext<T>,reactor.core.publisher.Mono<T>>,java.util.function.Function<com.azure.core.util.polling.PollingContext<T>,reactor.core.publisher.Mono<com.azure.core.util.polling.PollResponse<T>>>,java.util.function.BiFunction<com.azure.core.util.polling.PollingContext<T>,com.azure.core.util.polling.PollResponse<T>,reactor.core.publisher.Mono<T>>,java.util.function.Function<com.azure.core.util.polling.PollingContext<T>,reactor.core.publisher.Mono<U>>)"
  parent: "com.azure.core.util.polling.DefaultSyncPoller"
  langs:
  - "java"
  name: "DefaultSyncPoller(Duration defaultPollInterval, Function<PollingContext<T>,Mono<T>> activationOperation, Function<PollingContext<T>,Mono<PollResponse<T>>> pollOperation, BiFunction<PollingContext<T>,PollResponse<T>,Mono<T>> cancelOperation, Function<PollingContext<T>,Mono<U>> fetchResultOperation)"
  nameWithType: "DefaultSyncPoller<T,U>.DefaultSyncPoller(Duration defaultPollInterval, Function<PollingContext<T>,Mono<T>> activationOperation, Function<PollingContext<T>,Mono<PollResponse<T>>> pollOperation, BiFunction<PollingContext<T>,PollResponse<T>,Mono<T>> cancelOperation, Function<PollingContext<T>,Mono<U>> fetchResultOperation)"
  fullName: "com.azure.core.util.polling.DefaultSyncPoller<T,U>.DefaultSyncPoller(Duration defaultPollInterval, Function<PollingContext<T>,Mono<T>> activationOperation, Function<PollingContext<T>,Mono<PollResponse<T>>> pollOperation, BiFunction<PollingContext<T>,PollResponse<T>,Mono<T>> cancelOperation, Function<PollingContext<T>,Mono<U>> fetchResultOperation)"
  overload: "com.azure.core.util.polling.DefaultSyncPoller.DefaultSyncPoller*"
  type: "Constructor"
  package: "com.azure.core.util.polling"
  summary: "Creates DefaultSyncPoller."
  syntax:
    content: " DefaultSyncPoller(Duration defaultPollInterval, Function<PollingContext<T>,Mono<T>> activationOperation, Function<PollingContext<T>,Mono<PollResponse<T>>> pollOperation, BiFunction<PollingContext<T>,PollResponse<T>,Mono<T>> cancelOperation, Function<PollingContext<T>,Mono<U>> fetchResultOperation)"
    parameters:
    - id: "defaultPollInterval"
      type: "java.time.Duration"
      description: "the default polling interval"
    - id: "activationOperation"
      type: "java.util.function.Function<com.azure.core.util.polling.PollingContext<T>,reactor.core.publisher.Mono<T>>"
      description: "the activation operation to be invoked at most once across all subscriptions,\n                            this parameter is required, if there is no specific activation work to be\n                            done then invocation should return Mono.empty(), this operation will be called\n                            with a new <xref uid=\"com.azure.core.util.polling.PollingContext\" data-throw-if-not-resolved=\"false\">PollingContext</xref>."
    - id: "pollOperation"
      type: "java.util.function.Function<com.azure.core.util.polling.PollingContext<T>,reactor.core.publisher.Mono<com.azure.core.util.polling.PollResponse<T>>>"
      description: "the operation to poll the current state of long running operation, this parameter\n                      is required and the operation will be called with current <xref uid=\"com.azure.core.util.polling.PollingContext\" data-throw-if-not-resolved=\"false\">PollingContext</xref>."
    - id: "cancelOperation"
      type: "java.util.function.BiFunction<com.azure.core.util.polling.PollingContext<T>,com.azure.core.util.polling.PollResponse<T>,reactor.core.publisher.Mono<T>>"
      description: "a <xref uid=\"java.util.function.Function\" data-throw-if-not-resolved=\"false\">Function</xref> that represents the operation to cancel the long-running operation\n                        if service supports cancellation, this parameter is required and if service does not\n                        support cancellation then the implementer should return Mono.error with an error message\n                        indicating absence of cancellation support, the operation will be called with current\n                        <xref uid=\"com.azure.core.util.polling.PollingContext\" data-throw-if-not-resolved=\"false\">PollingContext</xref>."
    - id: "fetchResultOperation"
      type: "java.util.function.Function<com.azure.core.util.polling.PollingContext<T>,reactor.core.publisher.Mono<U>>"
      description: "a <xref uid=\"java.util.function.Function\" data-throw-if-not-resolved=\"false\">Function</xref> that represents the  operation to retrieve final result of\n                             the long-running operation if service support it, this parameter is required and\n                             operation will be called current <xref uid=\"com.azure.core.util.polling.PollingContext\" data-throw-if-not-resolved=\"false\">PollingContext</xref>, if service does not have an\n                             api to fetch final result and if final result is same as final poll response value\n                             then implementer can choose to simply return value from provided final poll response."
- uid: "com.azure.core.util.polling.DefaultSyncPoller.cancelOperation()"
  id: "cancelOperation()"
  parent: "com.azure.core.util.polling.DefaultSyncPoller"
  langs:
  - "java"
  name: "cancelOperation()"
  nameWithType: "DefaultSyncPoller<T,U>.cancelOperation()"
  fullName: "com.azure.core.util.polling.DefaultSyncPoller<T,U>.cancelOperation()"
  overload: "com.azure.core.util.polling.DefaultSyncPoller.cancelOperation*"
  type: "Method"
  package: "com.azure.core.util.polling"
  syntax:
    content: "public void cancelOperation()"
- uid: "com.azure.core.util.polling.DefaultSyncPoller.getFinalResult()"
  id: "getFinalResult()"
  parent: "com.azure.core.util.polling.DefaultSyncPoller"
  langs:
  - "java"
  name: "getFinalResult()"
  nameWithType: "DefaultSyncPoller<T,U>.getFinalResult()"
  fullName: "com.azure.core.util.polling.DefaultSyncPoller<T,U>.getFinalResult()"
  overload: "com.azure.core.util.polling.DefaultSyncPoller.getFinalResult*"
  type: "Method"
  package: "com.azure.core.util.polling"
  syntax:
    content: "public U getFinalResult()"
    return:
      type: "U"
- uid: "com.azure.core.util.polling.DefaultSyncPoller.poll()"
  id: "poll()"
  parent: "com.azure.core.util.polling.DefaultSyncPoller"
  langs:
  - "java"
  name: "poll()"
  nameWithType: "DefaultSyncPoller<T,U>.poll()"
  fullName: "com.azure.core.util.polling.DefaultSyncPoller<T,U>.poll()"
  overload: "com.azure.core.util.polling.DefaultSyncPoller.poll*"
  type: "Method"
  package: "com.azure.core.util.polling"
  syntax:
    content: "public PollResponse<T> poll()"
    return:
      type: "com.azure.core.util.polling.PollResponse<T>"
- uid: "com.azure.core.util.polling.DefaultSyncPoller.waitForCompletion()"
  id: "waitForCompletion()"
  parent: "com.azure.core.util.polling.DefaultSyncPoller"
  langs:
  - "java"
  name: "waitForCompletion()"
  nameWithType: "DefaultSyncPoller<T,U>.waitForCompletion()"
  fullName: "com.azure.core.util.polling.DefaultSyncPoller<T,U>.waitForCompletion()"
  overload: "com.azure.core.util.polling.DefaultSyncPoller.waitForCompletion*"
  type: "Method"
  package: "com.azure.core.util.polling"
  syntax:
    content: "public PollResponse<T> waitForCompletion()"
    return:
      type: "com.azure.core.util.polling.PollResponse<T>"
- uid: "com.azure.core.util.polling.DefaultSyncPoller.waitForCompletion(java.time.Duration)"
  id: "waitForCompletion(java.time.Duration)"
  parent: "com.azure.core.util.polling.DefaultSyncPoller"
  langs:
  - "java"
  name: "waitForCompletion(Duration timeout)"
  nameWithType: "DefaultSyncPoller<T,U>.waitForCompletion(Duration timeout)"
  fullName: "com.azure.core.util.polling.DefaultSyncPoller<T,U>.waitForCompletion(Duration timeout)"
  overload: "com.azure.core.util.polling.DefaultSyncPoller.waitForCompletion*"
  type: "Method"
  package: "com.azure.core.util.polling"
  syntax:
    content: "public PollResponse<T> waitForCompletion(Duration timeout)"
    parameters:
    - id: "timeout"
      type: "java.time.Duration"
    return:
      type: "com.azure.core.util.polling.PollResponse<T>"
- uid: "com.azure.core.util.polling.DefaultSyncPoller.waitUntil(com.azure.core.util.polling.LongRunningOperationStatus)"
  id: "waitUntil(com.azure.core.util.polling.LongRunningOperationStatus)"
  parent: "com.azure.core.util.polling.DefaultSyncPoller"
  langs:
  - "java"
  name: "waitUntil(LongRunningOperationStatus statusToWaitFor)"
  nameWithType: "DefaultSyncPoller<T,U>.waitUntil(LongRunningOperationStatus statusToWaitFor)"
  fullName: "com.azure.core.util.polling.DefaultSyncPoller<T,U>.waitUntil(LongRunningOperationStatus statusToWaitFor)"
  overload: "com.azure.core.util.polling.DefaultSyncPoller.waitUntil*"
  type: "Method"
  package: "com.azure.core.util.polling"
  syntax:
    content: "public PollResponse<T> waitUntil(LongRunningOperationStatus statusToWaitFor)"
    parameters:
    - id: "statusToWaitFor"
      type: "com.azure.core.util.polling.LongRunningOperationStatus"
    return:
      type: "com.azure.core.util.polling.PollResponse<T>"
- uid: "com.azure.core.util.polling.DefaultSyncPoller.waitUntil(java.time.Duration,com.azure.core.util.polling.LongRunningOperationStatus)"
  id: "waitUntil(java.time.Duration,com.azure.core.util.polling.LongRunningOperationStatus)"
  parent: "com.azure.core.util.polling.DefaultSyncPoller"
  langs:
  - "java"
  name: "waitUntil(Duration timeout, LongRunningOperationStatus statusToWaitFor)"
  nameWithType: "DefaultSyncPoller<T,U>.waitUntil(Duration timeout, LongRunningOperationStatus statusToWaitFor)"
  fullName: "com.azure.core.util.polling.DefaultSyncPoller<T,U>.waitUntil(Duration timeout, LongRunningOperationStatus statusToWaitFor)"
  overload: "com.azure.core.util.polling.DefaultSyncPoller.waitUntil*"
  type: "Method"
  package: "com.azure.core.util.polling"
  syntax:
    content: "public PollResponse<T> waitUntil(Duration timeout, LongRunningOperationStatus statusToWaitFor)"
    parameters:
    - id: "timeout"
      type: "java.time.Duration"
    - id: "statusToWaitFor"
      type: "com.azure.core.util.polling.LongRunningOperationStatus"
    return:
      type: "com.azure.core.util.polling.PollResponse<T>"
references:
- uid: "java.time.Duration"
  spec.java:
  - uid: "java.time.Duration"
    name: "Duration"
    fullName: "java.time.Duration"
- uid: "java.util.function.Function<com.azure.core.util.polling.PollingContext<T>,reactor.core.publisher.Mono<T>>"
  spec.java:
  - uid: "java.util.function.Function"
    name: "Function"
    fullName: "java.util.function.Function"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.core.util.polling.PollingContext"
    name: "PollingContext"
    fullName: "com.azure.core.util.polling.PollingContext"
  - name: "<"
    fullName: "<"
  - uid: "T"
    name: "T"
    fullName: "T"
  - name: ">"
    fullName: ">"
  - name: ","
    fullName: ","
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "T"
    name: "T"
    fullName: "T"
  - name: ">"
    fullName: ">"
  - name: ">"
    fullName: ">"
- uid: "java.util.function.Function<com.azure.core.util.polling.PollingContext<T>,reactor.core.publisher.Mono<com.azure.core.util.polling.PollResponse<T>>>"
  spec.java:
  - uid: "java.util.function.Function"
    name: "Function"
    fullName: "java.util.function.Function"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.core.util.polling.PollingContext"
    name: "PollingContext"
    fullName: "com.azure.core.util.polling.PollingContext"
  - name: "<"
    fullName: "<"
  - uid: "T"
    name: "T"
    fullName: "T"
  - name: ">"
    fullName: ">"
  - name: ","
    fullName: ","
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.core.util.polling.PollResponse"
    name: "PollResponse"
    fullName: "com.azure.core.util.polling.PollResponse"
  - name: "<"
    fullName: "<"
  - uid: "T"
    name: "T"
    fullName: "T"
  - name: ">"
    fullName: ">"
  - name: ">"
    fullName: ">"
  - name: ">"
    fullName: ">"
- uid: "java.util.function.BiFunction<com.azure.core.util.polling.PollingContext<T>,com.azure.core.util.polling.PollResponse<T>,reactor.core.publisher.Mono<T>>"
  spec.java:
  - uid: "java.util.function.BiFunction"
    name: "BiFunction"
    fullName: "java.util.function.BiFunction"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.core.util.polling.PollingContext"
    name: "PollingContext"
    fullName: "com.azure.core.util.polling.PollingContext"
  - name: "<"
    fullName: "<"
  - uid: "T"
    name: "T"
    fullName: "T"
  - name: ">"
    fullName: ">"
  - name: ","
    fullName: ","
  - uid: "com.azure.core.util.polling.PollResponse"
    name: "PollResponse"
    fullName: "com.azure.core.util.polling.PollResponse"
  - name: "<"
    fullName: "<"
  - uid: "T"
    name: "T"
    fullName: "T"
  - name: ">"
    fullName: ">"
  - name: ","
    fullName: ","
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "T"
    name: "T"
    fullName: "T"
  - name: ">"
    fullName: ">"
  - name: ">"
    fullName: ">"
- uid: "java.util.function.Function<com.azure.core.util.polling.PollingContext<T>,reactor.core.publisher.Mono<U>>"
  spec.java:
  - uid: "java.util.function.Function"
    name: "Function"
    fullName: "java.util.function.Function"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.core.util.polling.PollingContext"
    name: "PollingContext"
    fullName: "com.azure.core.util.polling.PollingContext"
  - name: "<"
    fullName: "<"
  - uid: "T"
    name: "T"
    fullName: "T"
  - name: ">"
    fullName: ">"
  - name: ","
    fullName: ","
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "U"
    name: "U"
    fullName: "U"
  - name: ">"
    fullName: ">"
  - name: ">"
    fullName: ">"
- uid: "com.azure.core.util.polling.DefaultSyncPoller.DefaultSyncPoller*"
  name: "DefaultSyncPoller"
  nameWithType: "DefaultSyncPoller<T,U>.DefaultSyncPoller"
  fullName: "com.azure.core.util.polling.DefaultSyncPoller<T,U>.DefaultSyncPoller"
  package: "com.azure.core.util.polling"
- uid: "com.azure.core.util.polling.PollResponse<T>"
  spec.java:
  - uid: "com.azure.core.util.polling.PollResponse"
    name: "PollResponse"
    fullName: "com.azure.core.util.polling.PollResponse"
  - name: "<"
    fullName: "<"
  - uid: "T"
    name: "T"
    fullName: "T"
  - name: ">"
    fullName: ">"
- uid: "com.azure.core.util.polling.DefaultSyncPoller.poll*"
  name: "poll"
  nameWithType: "DefaultSyncPoller<T,U>.poll"
  fullName: "com.azure.core.util.polling.DefaultSyncPoller<T,U>.poll"
  package: "com.azure.core.util.polling"
- uid: "com.azure.core.util.polling.DefaultSyncPoller.waitForCompletion*"
  name: "waitForCompletion"
  nameWithType: "DefaultSyncPoller<T,U>.waitForCompletion"
  fullName: "com.azure.core.util.polling.DefaultSyncPoller<T,U>.waitForCompletion"
  package: "com.azure.core.util.polling"
- uid: "com.azure.core.util.polling.LongRunningOperationStatus"
  name: "LongRunningOperationStatus"
  nameWithType: "LongRunningOperationStatus"
  fullName: "com.azure.core.util.polling.LongRunningOperationStatus"
- uid: "com.azure.core.util.polling.DefaultSyncPoller.waitUntil*"
  name: "waitUntil"
  nameWithType: "DefaultSyncPoller<T,U>.waitUntil"
  fullName: "com.azure.core.util.polling.DefaultSyncPoller<T,U>.waitUntil"
  package: "com.azure.core.util.polling"
- uid: "U"
  spec.java:
  - uid: "U"
    name: "U"
    fullName: "U"
- uid: "com.azure.core.util.polling.DefaultSyncPoller.getFinalResult*"
  name: "getFinalResult"
  nameWithType: "DefaultSyncPoller<T,U>.getFinalResult"
  fullName: "com.azure.core.util.polling.DefaultSyncPoller<T,U>.getFinalResult"
  package: "com.azure.core.util.polling"
- uid: "com.azure.core.util.polling.DefaultSyncPoller.cancelOperation*"
  name: "cancelOperation"
  nameWithType: "DefaultSyncPoller<T,U>.cancelOperation"
  fullName: "com.azure.core.util.polling.DefaultSyncPoller<T,U>.cancelOperation"
  package: "com.azure.core.util.polling"
- uid: "T"
  name: "T"
  nameWithType: "T"
  fullName: "T"
- uid: "com.azure.core.util.polling.SyncPoller<T,U>"
  name: "SyncPoller<T,U>"
  nameWithType: "SyncPoller<T,U>"
  fullName: "com.azure.core.util.polling.SyncPoller<T,U>"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "com.azure.core.util.polling.PollingContext"
  name: "PollingContext"
  nameWithType: "PollingContext"
  fullName: "com.azure.core.util.polling.PollingContext"
- uid: "T>,reactor.core.publisher.Mono"
  name: "T>,Mono"
  nameWithType: "T>,Mono"
  fullName: "T>,reactor.core.publisher.Mono"
- uid: "java.util.function.Function"
  name: "Function"
  nameWithType: "Function"
  fullName: "java.util.function.Function"
- uid: "com.azure.core.util.polling.PollResponse"
  name: "PollResponse"
  nameWithType: "PollResponse"
  fullName: "com.azure.core.util.polling.PollResponse"
- uid: "java.util.function.BiFunction"
  name: "BiFunction"
  nameWithType: "BiFunction"
  fullName: "java.util.function.BiFunction"
- uid: "T>,com.azure.core.util.polling.PollResponse"
  name: "T>,PollResponse"
  nameWithType: "T>,PollResponse"
  fullName: "T>,com.azure.core.util.polling.PollResponse"
- uid: "com.azure.core.util.polling.SyncPoller"
  name: "SyncPoller"
  nameWithType: "SyncPoller"
  fullName: "com.azure.core.util.polling.SyncPoller"
- uid: "T,U"
  name: "T,U"
  nameWithType: "T,U"
  fullName: "T,U"
