### YamlMime:ManagedReference
items:
- uid: "com.azure.cosmos.FeedResponse"
  id: "FeedResponse"
  parent: "com.azure.cosmos"
  children:
  - "com.azure.cosmos.FeedResponse.FeedResponse(java.util.List<T>,java.util.Map<java.lang.String,java.lang.String>)"
  - "com.azure.cosmos.FeedResponse.FeedResponse(java.util.List<T>,java.util.Map<java.lang.String,java.lang.String>,boolean)"
  - "com.azure.cosmos.FeedResponse.FeedResponse(java.util.List<T>,java.util.Map<java.lang.String,java.lang.String>,java.util.concurrent.ConcurrentMap<java.lang.String,com.azure.cosmos.implementation.QueryMetrics>)"
  - "com.azure.cosmos.FeedResponse.getActivityId()"
  - "com.azure.cosmos.FeedResponse.getCollectionQuota()"
  - "com.azure.cosmos.FeedResponse.getCollectionSizeQuota()"
  - "com.azure.cosmos.FeedResponse.getCollectionSizeUsage()"
  - "com.azure.cosmos.FeedResponse.getCollectionUsage()"
  - "com.azure.cosmos.FeedResponse.getContinuationToken()"
  - "com.azure.cosmos.FeedResponse.getCurrentResourceQuotaUsage()"
  - "com.azure.cosmos.FeedResponse.getDatabaseQuota()"
  - "com.azure.cosmos.FeedResponse.getDatabaseUsage()"
  - "com.azure.cosmos.FeedResponse.getElements()"
  - "com.azure.cosmos.FeedResponse.getFeedResponseDiagnostics()"
  - "com.azure.cosmos.FeedResponse.getMaxResourceQuota()"
  - "com.azure.cosmos.FeedResponse.getPermissionQuota()"
  - "com.azure.cosmos.FeedResponse.getPermissionUsage()"
  - "com.azure.cosmos.FeedResponse.getRequestCharge()"
  - "com.azure.cosmos.FeedResponse.getResponseHeaders()"
  - "com.azure.cosmos.FeedResponse.getResults()"
  - "com.azure.cosmos.FeedResponse.getSessionToken()"
  - "com.azure.cosmos.FeedResponse.getStoredProceduresQuota()"
  - "com.azure.cosmos.FeedResponse.getStoredProceduresUsage()"
  - "com.azure.cosmos.FeedResponse.getTriggersQuota()"
  - "com.azure.cosmos.FeedResponse.getTriggersUsage()"
  - "com.azure.cosmos.FeedResponse.getUserDefinedFunctionsQuota()"
  - "com.azure.cosmos.FeedResponse.getUserDefinedFunctionsUsage()"
  - "com.azure.cosmos.FeedResponse.getUserQuota()"
  - "com.azure.cosmos.FeedResponse.getUserUsage()"
  - "com.azure.cosmos.FeedResponse.nochanges"
  - "com.azure.cosmos.FeedResponse.queryMetrics()"
  - "com.azure.cosmos.FeedResponse.queryMetricsMap()"
  langs:
  - "java"
  name: "FeedResponse<T>"
  nameWithType: "FeedResponse<T>"
  fullName: "com.azure.cosmos.FeedResponse<T>"
  type: "Class"
  package: "com.azure.cosmos"
  syntax:
    content: "public class FeedResponse<T> implements ContinuablePage<String,T>"
    typeParameters:
    - id: "T"
  inheritance:
  - "java.lang.Object"
  implements:
  - "com.azure.core.util.paging.ContinuablePage<java.lang.String,T>"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.azure.cosmos.FeedResponse.FeedResponse(java.util.List<T>,java.util.Map<java.lang.String,java.lang.String>)"
  id: "FeedResponse(java.util.List<T>,java.util.Map<java.lang.String,java.lang.String>)"
  parent: "com.azure.cosmos.FeedResponse"
  langs:
  - "java"
  name: "FeedResponse(List<T> results, Map<String,String> headers)"
  nameWithType: "FeedResponse<T>.FeedResponse(List<T> results, Map<String,String> headers)"
  fullName: "com.azure.cosmos.FeedResponse<T>.FeedResponse(List<T> results, Map<String,String> headers)"
  overload: "com.azure.cosmos.FeedResponse.FeedResponse*"
  type: "Constructor"
  package: "com.azure.cosmos"
  syntax:
    content: " FeedResponse(List<T> results, Map<String,String> headers)"
    parameters:
    - id: "results"
      type: "java.util.List<T>"
    - id: "headers"
      type: "java.util.Map<java.lang.String,java.lang.String>"
- uid: "com.azure.cosmos.FeedResponse.FeedResponse(java.util.List<T>,java.util.Map<java.lang.String,java.lang.String>,boolean)"
  id: "FeedResponse(java.util.List<T>,java.util.Map<java.lang.String,java.lang.String>,boolean)"
  parent: "com.azure.cosmos.FeedResponse"
  langs:
  - "java"
  name: "FeedResponse(List<T> results, Map<String,String> header, boolean nochanges)"
  nameWithType: "FeedResponse<T>.FeedResponse(List<T> results, Map<String,String> header, boolean nochanges)"
  fullName: "com.azure.cosmos.FeedResponse<T>.FeedResponse(List<T> results, Map<String,String> header, boolean nochanges)"
  overload: "com.azure.cosmos.FeedResponse.FeedResponse*"
  type: "Constructor"
  package: "com.azure.cosmos"
  syntax:
    content: " FeedResponse(List<T> results, Map<String,String> header, boolean nochanges)"
    parameters:
    - id: "results"
      type: "java.util.List<T>"
    - id: "header"
      type: "java.util.Map<java.lang.String,java.lang.String>"
    - id: "nochanges"
      type: "boolean"
- uid: "com.azure.cosmos.FeedResponse.FeedResponse(java.util.List<T>,java.util.Map<java.lang.String,java.lang.String>,boolean,boolean,java.util.concurrent.ConcurrentMap<java.lang.String,com.azure.cosmos.implementation.QueryMetrics>)"
  id: "FeedResponse(java.util.List<T>,java.util.Map<java.lang.String,java.lang.String>,boolean,boolean,java.util.concurrent.ConcurrentMap<java.lang.String,com.azure.cosmos.implementation.QueryMetrics>)"
  parent: "com.azure.cosmos.FeedResponse"
  langs:
  - "java"
  name: "FeedResponse(List<T> results, Map<String,String> header, boolean useEtagAsContinuation, boolean nochanges, ConcurrentMap<String,QueryMetrics> queryMetricsMap)"
  nameWithType: "FeedResponse<T>.FeedResponse(List<T> results, Map<String,String> header, boolean useEtagAsContinuation, boolean nochanges, ConcurrentMap<String,QueryMetrics> queryMetricsMap)"
  fullName: "com.azure.cosmos.FeedResponse<T>.FeedResponse(List<T> results, Map<String,String> header, boolean useEtagAsContinuation, boolean nochanges, ConcurrentMap<String,QueryMetrics> queryMetricsMap)"
  overload: "com.azure.cosmos.FeedResponse.FeedResponse*"
  type: "Constructor"
  package: "com.azure.cosmos"
  syntax:
    content: "private FeedResponse(List<T> results, Map<String,String> header, boolean useEtagAsContinuation, boolean nochanges, ConcurrentMap<String,QueryMetrics> queryMetricsMap)"
    parameters:
    - id: "results"
      type: "java.util.List<T>"
    - id: "header"
      type: "java.util.Map<java.lang.String,java.lang.String>"
    - id: "useEtagAsContinuation"
      type: "boolean"
    - id: "nochanges"
      type: "boolean"
    - id: "queryMetricsMap"
      type: "java.util.concurrent.ConcurrentMap<java.lang.String,com.azure.cosmos.implementation.QueryMetrics>"
- uid: "com.azure.cosmos.FeedResponse.FeedResponse(java.util.List<T>,java.util.Map<java.lang.String,java.lang.String>,java.util.concurrent.ConcurrentMap<java.lang.String,com.azure.cosmos.implementation.QueryMetrics>)"
  id: "FeedResponse(java.util.List<T>,java.util.Map<java.lang.String,java.lang.String>,java.util.concurrent.ConcurrentMap<java.lang.String,com.azure.cosmos.implementation.QueryMetrics>)"
  parent: "com.azure.cosmos.FeedResponse"
  langs:
  - "java"
  name: "FeedResponse(List<T> results, Map<String,String> headers, ConcurrentMap<String,QueryMetrics> queryMetricsMap)"
  nameWithType: "FeedResponse<T>.FeedResponse(List<T> results, Map<String,String> headers, ConcurrentMap<String,QueryMetrics> queryMetricsMap)"
  fullName: "com.azure.cosmos.FeedResponse<T>.FeedResponse(List<T> results, Map<String,String> headers, ConcurrentMap<String,QueryMetrics> queryMetricsMap)"
  overload: "com.azure.cosmos.FeedResponse.FeedResponse*"
  type: "Constructor"
  package: "com.azure.cosmos"
  syntax:
    content: " FeedResponse(List<T> results, Map<String,String> headers, ConcurrentMap<String,QueryMetrics> queryMetricsMap)"
    parameters:
    - id: "results"
      type: "java.util.List<T>"
    - id: "headers"
      type: "java.util.Map<java.lang.String,java.lang.String>"
    - id: "queryMetricsMap"
      type: "java.util.concurrent.ConcurrentMap<java.lang.String,com.azure.cosmos.implementation.QueryMetrics>"
- uid: "com.azure.cosmos.FeedResponse.getActivityId()"
  id: "getActivityId()"
  parent: "com.azure.cosmos.FeedResponse"
  langs:
  - "java"
  name: "getActivityId()"
  nameWithType: "FeedResponse<T>.getActivityId()"
  fullName: "com.azure.cosmos.FeedResponse<T>.getActivityId()"
  overload: "com.azure.cosmos.FeedResponse.getActivityId*"
  type: "Method"
  package: "com.azure.cosmos"
  summary: "Gets the activity ID for the request."
  syntax:
    content: "public String getActivityId()"
    return:
      type: "java.lang.String"
      description: "the activity id."
- uid: "com.azure.cosmos.FeedResponse.getCollectionQuota()"
  id: "getCollectionQuota()"
  parent: "com.azure.cosmos.FeedResponse"
  langs:
  - "java"
  name: "getCollectionQuota()"
  nameWithType: "FeedResponse<T>.getCollectionQuota()"
  fullName: "com.azure.cosmos.FeedResponse<T>.getCollectionQuota()"
  overload: "com.azure.cosmos.FeedResponse.getCollectionQuota*"
  type: "Method"
  package: "com.azure.cosmos"
  summary: "Gets the maximum quota for collection resources within an account from the Azure Cosmos DB service."
  syntax:
    content: "public long getCollectionQuota()"
    return:
      type: "long"
      description: "The maximum quota for the account."
- uid: "com.azure.cosmos.FeedResponse.getCollectionSizeQuota()"
  id: "getCollectionSizeQuota()"
  parent: "com.azure.cosmos.FeedResponse"
  langs:
  - "java"
  name: "getCollectionSizeQuota()"
  nameWithType: "FeedResponse<T>.getCollectionSizeQuota()"
  fullName: "com.azure.cosmos.FeedResponse<T>.getCollectionSizeQuota()"
  overload: "com.azure.cosmos.FeedResponse.getCollectionSizeQuota*"
  type: "Method"
  package: "com.azure.cosmos"
  summary: "Gets the maximum size of a collection in kilobytes from the Azure Cosmos DB service."
  syntax:
    content: "public long getCollectionSizeQuota()"
    return:
      type: "long"
      description: "The maximum quota in kilobytes."
- uid: "com.azure.cosmos.FeedResponse.getCollectionSizeUsage()"
  id: "getCollectionSizeUsage()"
  parent: "com.azure.cosmos.FeedResponse"
  langs:
  - "java"
  name: "getCollectionSizeUsage()"
  nameWithType: "FeedResponse<T>.getCollectionSizeUsage()"
  fullName: "com.azure.cosmos.FeedResponse<T>.getCollectionSizeUsage()"
  overload: "com.azure.cosmos.FeedResponse.getCollectionSizeUsage*"
  type: "Method"
  package: "com.azure.cosmos"
  summary: "Gets the current size of a collection in kilobytes from the Azure Cosmos DB service."
  syntax:
    content: "public long getCollectionSizeUsage()"
    return:
      type: "long"
      description: "The current size of a collection in kilobytes."
- uid: "com.azure.cosmos.FeedResponse.getCollectionUsage()"
  id: "getCollectionUsage()"
  parent: "com.azure.cosmos.FeedResponse"
  langs:
  - "java"
  name: "getCollectionUsage()"
  nameWithType: "FeedResponse<T>.getCollectionUsage()"
  fullName: "com.azure.cosmos.FeedResponse<T>.getCollectionUsage()"
  overload: "com.azure.cosmos.FeedResponse.getCollectionUsage*"
  type: "Method"
  package: "com.azure.cosmos"
  summary: "Gets the current number of collection resources within the account from the Azure Cosmos DB service."
  syntax:
    content: "public long getCollectionUsage()"
    return:
      type: "long"
      description: "The current number of collections."
- uid: "com.azure.cosmos.FeedResponse.getContinuationToken()"
  id: "getContinuationToken()"
  parent: "com.azure.cosmos.FeedResponse"
  langs:
  - "java"
  name: "getContinuationToken()"
  nameWithType: "FeedResponse<T>.getContinuationToken()"
  fullName: "com.azure.cosmos.FeedResponse<T>.getContinuationToken()"
  overload: "com.azure.cosmos.FeedResponse.getContinuationToken*"
  type: "Method"
  package: "com.azure.cosmos"
  summary: "Gets the continuation token to be used for continuing the enumeration."
  syntax:
    content: "public String getContinuationToken()"
    return:
      type: "java.lang.String"
      description: "the response continuation."
- uid: "com.azure.cosmos.FeedResponse.getCurrentResourceQuotaUsage()"
  id: "getCurrentResourceQuotaUsage()"
  parent: "com.azure.cosmos.FeedResponse"
  langs:
  - "java"
  name: "getCurrentResourceQuotaUsage()"
  nameWithType: "FeedResponse<T>.getCurrentResourceQuotaUsage()"
  fullName: "com.azure.cosmos.FeedResponse<T>.getCurrentResourceQuotaUsage()"
  overload: "com.azure.cosmos.FeedResponse.getCurrentResourceQuotaUsage*"
  type: "Method"
  package: "com.azure.cosmos"
  summary: "Gets the current size of this entity from the Azure Cosmos DB service."
  syntax:
    content: "public String getCurrentResourceQuotaUsage()"
    return:
      type: "java.lang.String"
      description: "the current size for this entity. Measured in kilobytes for document resources\n and in counts for other resources."
- uid: "com.azure.cosmos.FeedResponse.getDatabaseQuota()"
  id: "getDatabaseQuota()"
  parent: "com.azure.cosmos.FeedResponse"
  langs:
  - "java"
  name: "getDatabaseQuota()"
  nameWithType: "FeedResponse<T>.getDatabaseQuota()"
  fullName: "com.azure.cosmos.FeedResponse<T>.getDatabaseQuota()"
  overload: "com.azure.cosmos.FeedResponse.getDatabaseQuota*"
  type: "Method"
  package: "com.azure.cosmos"
  summary: "Gets the maximum quota for database resources within the account from the Azure Cosmos DB service."
  syntax:
    content: "public long getDatabaseQuota()"
    return:
      type: "long"
      description: "The maximum quota for the account."
- uid: "com.azure.cosmos.FeedResponse.getDatabaseUsage()"
  id: "getDatabaseUsage()"
  parent: "com.azure.cosmos.FeedResponse"
  langs:
  - "java"
  name: "getDatabaseUsage()"
  nameWithType: "FeedResponse<T>.getDatabaseUsage()"
  fullName: "com.azure.cosmos.FeedResponse<T>.getDatabaseUsage()"
  overload: "com.azure.cosmos.FeedResponse.getDatabaseUsage*"
  type: "Method"
  package: "com.azure.cosmos"
  summary: "Gets the current number of database resources within the account from the Azure Cosmos DB service."
  syntax:
    content: "public long getDatabaseUsage()"
    return:
      type: "long"
      description: "The current number of databases."
- uid: "com.azure.cosmos.FeedResponse.getElements()"
  id: "getElements()"
  parent: "com.azure.cosmos.FeedResponse"
  langs:
  - "java"
  name: "getElements()"
  nameWithType: "FeedResponse<T>.getElements()"
  fullName: "com.azure.cosmos.FeedResponse<T>.getElements()"
  overload: "com.azure.cosmos.FeedResponse.getElements*"
  type: "Method"
  package: "com.azure.cosmos"
  syntax:
    content: "public IterableStream<T> getElements()"
    return:
      type: "com.azure.core.util.IterableStream<T>"
- uid: "com.azure.cosmos.FeedResponse.getFeedResponseDiagnostics()"
  id: "getFeedResponseDiagnostics()"
  parent: "com.azure.cosmos.FeedResponse"
  langs:
  - "java"
  name: "getFeedResponseDiagnostics()"
  nameWithType: "FeedResponse<T>.getFeedResponseDiagnostics()"
  fullName: "com.azure.cosmos.FeedResponse<T>.getFeedResponseDiagnostics()"
  overload: "com.azure.cosmos.FeedResponse.getFeedResponseDiagnostics*"
  type: "Method"
  package: "com.azure.cosmos"
  summary: "Gets the feed response diagnostics"
  syntax:
    content: "public FeedResponseDiagnostics getFeedResponseDiagnostics()"
    return:
      type: "com.azure.cosmos.FeedResponseDiagnostics"
      description: "Feed response diagnostics"
- uid: "com.azure.cosmos.FeedResponse.getMaxResourceQuota()"
  id: "getMaxResourceQuota()"
  parent: "com.azure.cosmos.FeedResponse"
  langs:
  - "java"
  name: "getMaxResourceQuota()"
  nameWithType: "FeedResponse<T>.getMaxResourceQuota()"
  fullName: "com.azure.cosmos.FeedResponse<T>.getMaxResourceQuota()"
  overload: "com.azure.cosmos.FeedResponse.getMaxResourceQuota*"
  type: "Method"
  package: "com.azure.cosmos"
  summary: "Gets the maximum size limit for this entity from the Azure Cosmos DB service."
  syntax:
    content: "public String getMaxResourceQuota()"
    return:
      type: "java.lang.String"
      description: "the maximum size limit for this entity.\n Measured in kilobytes for document resources and in counts for other resources."
- uid: "com.azure.cosmos.FeedResponse.getPermissionQuota()"
  id: "getPermissionQuota()"
  parent: "com.azure.cosmos.FeedResponse"
  langs:
  - "java"
  name: "getPermissionQuota()"
  nameWithType: "FeedResponse<T>.getPermissionQuota()"
  fullName: "com.azure.cosmos.FeedResponse<T>.getPermissionQuota()"
  overload: "com.azure.cosmos.FeedResponse.getPermissionQuota*"
  type: "Method"
  package: "com.azure.cosmos"
  summary: "Gets the maximum quota for permission resources within an account from the Azure Cosmos DB service."
  syntax:
    content: "public long getPermissionQuota()"
    return:
      type: "long"
      description: "The maximum quota for the account."
- uid: "com.azure.cosmos.FeedResponse.getPermissionUsage()"
  id: "getPermissionUsage()"
  parent: "com.azure.cosmos.FeedResponse"
  langs:
  - "java"
  name: "getPermissionUsage()"
  nameWithType: "FeedResponse<T>.getPermissionUsage()"
  fullName: "com.azure.cosmos.FeedResponse<T>.getPermissionUsage()"
  overload: "com.azure.cosmos.FeedResponse.getPermissionUsage*"
  type: "Method"
  package: "com.azure.cosmos"
  summary: "Gets the current number of permission resources within the account from the Azure Cosmos DB service."
  syntax:
    content: "public long getPermissionUsage()"
    return:
      type: "long"
      description: "The current number of permissions."
- uid: "com.azure.cosmos.FeedResponse.getRequestCharge()"
  id: "getRequestCharge()"
  parent: "com.azure.cosmos.FeedResponse"
  langs:
  - "java"
  name: "getRequestCharge()"
  nameWithType: "FeedResponse<T>.getRequestCharge()"
  fullName: "com.azure.cosmos.FeedResponse<T>.getRequestCharge()"
  overload: "com.azure.cosmos.FeedResponse.getRequestCharge*"
  type: "Method"
  package: "com.azure.cosmos"
  summary: "Gets the number of index paths (terms) generated by the operation."
  syntax:
    content: "public double getRequestCharge()"
    return:
      type: "double"
      description: "the request charge."
- uid: "com.azure.cosmos.FeedResponse.getResponseHeaders()"
  id: "getResponseHeaders()"
  parent: "com.azure.cosmos.FeedResponse"
  langs:
  - "java"
  name: "getResponseHeaders()"
  nameWithType: "FeedResponse<T>.getResponseHeaders()"
  fullName: "com.azure.cosmos.FeedResponse<T>.getResponseHeaders()"
  overload: "com.azure.cosmos.FeedResponse.getResponseHeaders*"
  type: "Method"
  package: "com.azure.cosmos"
  summary: "Gets the response headers."
  syntax:
    content: "public Map<String,String> getResponseHeaders()"
    return:
      type: "java.util.Map<java.lang.String,java.lang.String>"
      description: "the response headers."
- uid: "com.azure.cosmos.FeedResponse.getResults()"
  id: "getResults()"
  parent: "com.azure.cosmos.FeedResponse"
  langs:
  - "java"
  name: "getResults()"
  nameWithType: "FeedResponse<T>.getResults()"
  fullName: "com.azure.cosmos.FeedResponse<T>.getResults()"
  overload: "com.azure.cosmos.FeedResponse.getResults*"
  type: "Method"
  package: "com.azure.cosmos"
  summary: "Results."
  syntax:
    content: "public List<T> getResults()"
    return:
      type: "java.util.List<T>"
      description: "the list of results."
- uid: "com.azure.cosmos.FeedResponse.getSessionToken()"
  id: "getSessionToken()"
  parent: "com.azure.cosmos.FeedResponse"
  langs:
  - "java"
  name: "getSessionToken()"
  nameWithType: "FeedResponse<T>.getSessionToken()"
  fullName: "com.azure.cosmos.FeedResponse<T>.getSessionToken()"
  overload: "com.azure.cosmos.FeedResponse.getSessionToken*"
  type: "Method"
  package: "com.azure.cosmos"
  summary: "Gets the session token for use in session consistency."
  syntax:
    content: "public String getSessionToken()"
    return:
      type: "java.lang.String"
      description: "the session token."
- uid: "com.azure.cosmos.FeedResponse.getStoredProceduresQuota()"
  id: "getStoredProceduresQuota()"
  parent: "com.azure.cosmos.FeedResponse"
  langs:
  - "java"
  name: "getStoredProceduresQuota()"
  nameWithType: "FeedResponse<T>.getStoredProceduresQuota()"
  fullName: "com.azure.cosmos.FeedResponse<T>.getStoredProceduresQuota()"
  overload: "com.azure.cosmos.FeedResponse.getStoredProceduresQuota*"
  type: "Method"
  package: "com.azure.cosmos"
  summary: "Gets the maximum quota of stored procedures for a collection from the Azure Cosmos DB service."
  syntax:
    content: "public long getStoredProceduresQuota()"
    return:
      type: "long"
      description: "The maximum stored procedure quota."
- uid: "com.azure.cosmos.FeedResponse.getStoredProceduresUsage()"
  id: "getStoredProceduresUsage()"
  parent: "com.azure.cosmos.FeedResponse"
  langs:
  - "java"
  name: "getStoredProceduresUsage()"
  nameWithType: "FeedResponse<T>.getStoredProceduresUsage()"
  fullName: "com.azure.cosmos.FeedResponse<T>.getStoredProceduresUsage()"
  overload: "com.azure.cosmos.FeedResponse.getStoredProceduresUsage*"
  type: "Method"
  package: "com.azure.cosmos"
  summary: "Gets the current number of stored procedures for a collection from the Azure Cosmos DB service."
  syntax:
    content: "public long getStoredProceduresUsage()"
    return:
      type: "long"
      description: "The current number of stored procedures."
- uid: "com.azure.cosmos.FeedResponse.getTriggersQuota()"
  id: "getTriggersQuota()"
  parent: "com.azure.cosmos.FeedResponse"
  langs:
  - "java"
  name: "getTriggersQuota()"
  nameWithType: "FeedResponse<T>.getTriggersQuota()"
  fullName: "com.azure.cosmos.FeedResponse<T>.getTriggersQuota()"
  overload: "com.azure.cosmos.FeedResponse.getTriggersQuota*"
  type: "Method"
  package: "com.azure.cosmos"
  summary: "Gets the maximum quota of triggers for a collection from the Azure Cosmos DB service."
  syntax:
    content: "public long getTriggersQuota()"
    return:
      type: "long"
      description: "The maximum triggers quota."
- uid: "com.azure.cosmos.FeedResponse.getTriggersUsage()"
  id: "getTriggersUsage()"
  parent: "com.azure.cosmos.FeedResponse"
  langs:
  - "java"
  name: "getTriggersUsage()"
  nameWithType: "FeedResponse<T>.getTriggersUsage()"
  fullName: "com.azure.cosmos.FeedResponse<T>.getTriggersUsage()"
  overload: "com.azure.cosmos.FeedResponse.getTriggersUsage*"
  type: "Method"
  package: "com.azure.cosmos"
  summary: "Get the current number of triggers for a collection from the Azure Cosmos DB service."
  syntax:
    content: "public long getTriggersUsage()"
    return:
      type: "long"
      description: "The current number of triggers."
- uid: "com.azure.cosmos.FeedResponse.getUserDefinedFunctionsQuota()"
  id: "getUserDefinedFunctionsQuota()"
  parent: "com.azure.cosmos.FeedResponse"
  langs:
  - "java"
  name: "getUserDefinedFunctionsQuota()"
  nameWithType: "FeedResponse<T>.getUserDefinedFunctionsQuota()"
  fullName: "com.azure.cosmos.FeedResponse<T>.getUserDefinedFunctionsQuota()"
  overload: "com.azure.cosmos.FeedResponse.getUserDefinedFunctionsQuota*"
  type: "Method"
  package: "com.azure.cosmos"
  summary: "Gets the maximum quota of user defined functions for a collection from the Azure Cosmos DB service."
  syntax:
    content: "public long getUserDefinedFunctionsQuota()"
    return:
      type: "long"
      description: "The maximum user defined functions quota."
- uid: "com.azure.cosmos.FeedResponse.getUserDefinedFunctionsUsage()"
  id: "getUserDefinedFunctionsUsage()"
  parent: "com.azure.cosmos.FeedResponse"
  langs:
  - "java"
  name: "getUserDefinedFunctionsUsage()"
  nameWithType: "FeedResponse<T>.getUserDefinedFunctionsUsage()"
  fullName: "com.azure.cosmos.FeedResponse<T>.getUserDefinedFunctionsUsage()"
  overload: "com.azure.cosmos.FeedResponse.getUserDefinedFunctionsUsage*"
  type: "Method"
  package: "com.azure.cosmos"
  summary: "Gets the current number of user defined functions for a collection from the Azure Cosmos DB service."
  syntax:
    content: "public long getUserDefinedFunctionsUsage()"
    return:
      type: "long"
      description: "the current number of user defined functions."
- uid: "com.azure.cosmos.FeedResponse.getUserQuota()"
  id: "getUserQuota()"
  parent: "com.azure.cosmos.FeedResponse"
  langs:
  - "java"
  name: "getUserQuota()"
  nameWithType: "FeedResponse<T>.getUserQuota()"
  fullName: "com.azure.cosmos.FeedResponse<T>.getUserQuota()"
  overload: "com.azure.cosmos.FeedResponse.getUserQuota*"
  type: "Method"
  package: "com.azure.cosmos"
  summary: "Gets the maximum quota for user resources within an account from the Azure Cosmos DB service."
  syntax:
    content: "public long getUserQuota()"
    return:
      type: "long"
      description: "The maximum quota for the account."
- uid: "com.azure.cosmos.FeedResponse.getUserUsage()"
  id: "getUserUsage()"
  parent: "com.azure.cosmos.FeedResponse"
  langs:
  - "java"
  name: "getUserUsage()"
  nameWithType: "FeedResponse<T>.getUserUsage()"
  fullName: "com.azure.cosmos.FeedResponse<T>.getUserUsage()"
  overload: "com.azure.cosmos.FeedResponse.getUserUsage*"
  type: "Method"
  package: "com.azure.cosmos"
  summary: "Gets the current number of user resources within the account from the Azure Cosmos DB service."
  syntax:
    content: "public long getUserUsage()"
    return:
      type: "long"
      description: "The current number of users."
- uid: "com.azure.cosmos.FeedResponse.nochanges"
  id: "nochanges"
  parent: "com.azure.cosmos.FeedResponse"
  langs:
  - "java"
  name: "nochanges"
  nameWithType: "FeedResponse<T>.nochanges"
  fullName: "com.azure.cosmos.FeedResponse<T>.nochanges"
  type: "Field"
  package: "com.azure.cosmos"
  syntax:
    content: "final boolean nochanges"
    return:
      type: "boolean"
- uid: "com.azure.cosmos.FeedResponse.queryMetrics()"
  id: "queryMetrics()"
  parent: "com.azure.cosmos.FeedResponse"
  langs:
  - "java"
  name: "queryMetrics()"
  nameWithType: "FeedResponse<T>.queryMetrics()"
  fullName: "com.azure.cosmos.FeedResponse<T>.queryMetrics()"
  overload: "com.azure.cosmos.FeedResponse.queryMetrics*"
  type: "Method"
  package: "com.azure.cosmos"
  syntax:
    content: " ConcurrentMap<String,QueryMetrics> queryMetrics()"
    return:
      type: "java.util.concurrent.ConcurrentMap<java.lang.String,com.azure.cosmos.implementation.QueryMetrics>"
- uid: "com.azure.cosmos.FeedResponse.queryMetricsMap()"
  id: "queryMetricsMap()"
  parent: "com.azure.cosmos.FeedResponse"
  langs:
  - "java"
  name: "queryMetricsMap()"
  nameWithType: "FeedResponse<T>.queryMetricsMap()"
  fullName: "com.azure.cosmos.FeedResponse<T>.queryMetricsMap()"
  overload: "com.azure.cosmos.FeedResponse.queryMetricsMap*"
  type: "Method"
  package: "com.azure.cosmos"
  syntax:
    content: " ConcurrentMap<String,QueryMetrics> queryMetricsMap()"
    return:
      type: "java.util.concurrent.ConcurrentMap<java.lang.String,com.azure.cosmos.implementation.QueryMetrics>"
references:
- uid: "java.util.List<T>"
  spec.java:
  - uid: "java.util.List"
    name: "List"
    fullName: "java.util.List"
  - name: "<"
    fullName: "<"
  - uid: "T"
    name: "T"
    fullName: "T"
  - name: ">"
    fullName: ">"
- uid: "java.util.Map<java.lang.String,java.lang.String>"
  spec.java:
  - uid: "java.util.Map"
    name: "Map"
    fullName: "java.util.Map"
  - name: "<"
    fullName: "<"
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
  - name: ","
    fullName: ","
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
  - name: ">"
    fullName: ">"
- uid: "com.azure.cosmos.FeedResponse.FeedResponse*"
  name: "FeedResponse"
  nameWithType: "FeedResponse<T>.FeedResponse"
  fullName: "com.azure.cosmos.FeedResponse<T>.FeedResponse"
  package: "com.azure.cosmos"
- uid: "java.util.concurrent.ConcurrentMap<java.lang.String,com.azure.cosmos.implementation.QueryMetrics>"
  spec.java:
  - uid: "java.util.concurrent.ConcurrentMap"
    name: "ConcurrentMap"
    fullName: "java.util.concurrent.ConcurrentMap"
  - name: "<"
    fullName: "<"
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
  - name: ","
    fullName: ","
  - uid: "com.azure.cosmos.implementation.QueryMetrics"
    name: "QueryMetrics"
    fullName: "com.azure.cosmos.implementation.QueryMetrics"
  - name: ">"
    fullName: ">"
- uid: "boolean"
  spec.java:
  - uid: "boolean"
    name: "boolean"
    fullName: "boolean"
- uid: "com.azure.cosmos.FeedResponse.getResults*"
  name: "getResults"
  nameWithType: "FeedResponse<T>.getResults"
  fullName: "com.azure.cosmos.FeedResponse<T>.getResults"
  package: "com.azure.cosmos"
- uid: "long"
  spec.java:
  - uid: "long"
    name: "long"
    fullName: "long"
- uid: "com.azure.cosmos.FeedResponse.getDatabaseQuota*"
  name: "getDatabaseQuota"
  nameWithType: "FeedResponse<T>.getDatabaseQuota"
  fullName: "com.azure.cosmos.FeedResponse<T>.getDatabaseQuota"
  package: "com.azure.cosmos"
- uid: "com.azure.cosmos.FeedResponse.getDatabaseUsage*"
  name: "getDatabaseUsage"
  nameWithType: "FeedResponse<T>.getDatabaseUsage"
  fullName: "com.azure.cosmos.FeedResponse<T>.getDatabaseUsage"
  package: "com.azure.cosmos"
- uid: "com.azure.cosmos.FeedResponse.getCollectionQuota*"
  name: "getCollectionQuota"
  nameWithType: "FeedResponse<T>.getCollectionQuota"
  fullName: "com.azure.cosmos.FeedResponse<T>.getCollectionQuota"
  package: "com.azure.cosmos"
- uid: "com.azure.cosmos.FeedResponse.getCollectionUsage*"
  name: "getCollectionUsage"
  nameWithType: "FeedResponse<T>.getCollectionUsage"
  fullName: "com.azure.cosmos.FeedResponse<T>.getCollectionUsage"
  package: "com.azure.cosmos"
- uid: "com.azure.cosmos.FeedResponse.getUserQuota*"
  name: "getUserQuota"
  nameWithType: "FeedResponse<T>.getUserQuota"
  fullName: "com.azure.cosmos.FeedResponse<T>.getUserQuota"
  package: "com.azure.cosmos"
- uid: "com.azure.cosmos.FeedResponse.getUserUsage*"
  name: "getUserUsage"
  nameWithType: "FeedResponse<T>.getUserUsage"
  fullName: "com.azure.cosmos.FeedResponse<T>.getUserUsage"
  package: "com.azure.cosmos"
- uid: "com.azure.cosmos.FeedResponse.getPermissionQuota*"
  name: "getPermissionQuota"
  nameWithType: "FeedResponse<T>.getPermissionQuota"
  fullName: "com.azure.cosmos.FeedResponse<T>.getPermissionQuota"
  package: "com.azure.cosmos"
- uid: "com.azure.cosmos.FeedResponse.getPermissionUsage*"
  name: "getPermissionUsage"
  nameWithType: "FeedResponse<T>.getPermissionUsage"
  fullName: "com.azure.cosmos.FeedResponse<T>.getPermissionUsage"
  package: "com.azure.cosmos"
- uid: "com.azure.cosmos.FeedResponse.getCollectionSizeQuota*"
  name: "getCollectionSizeQuota"
  nameWithType: "FeedResponse<T>.getCollectionSizeQuota"
  fullName: "com.azure.cosmos.FeedResponse<T>.getCollectionSizeQuota"
  package: "com.azure.cosmos"
- uid: "com.azure.cosmos.FeedResponse.getCollectionSizeUsage*"
  name: "getCollectionSizeUsage"
  nameWithType: "FeedResponse<T>.getCollectionSizeUsage"
  fullName: "com.azure.cosmos.FeedResponse<T>.getCollectionSizeUsage"
  package: "com.azure.cosmos"
- uid: "com.azure.cosmos.FeedResponse.getStoredProceduresQuota*"
  name: "getStoredProceduresQuota"
  nameWithType: "FeedResponse<T>.getStoredProceduresQuota"
  fullName: "com.azure.cosmos.FeedResponse<T>.getStoredProceduresQuota"
  package: "com.azure.cosmos"
- uid: "com.azure.cosmos.FeedResponse.getStoredProceduresUsage*"
  name: "getStoredProceduresUsage"
  nameWithType: "FeedResponse<T>.getStoredProceduresUsage"
  fullName: "com.azure.cosmos.FeedResponse<T>.getStoredProceduresUsage"
  package: "com.azure.cosmos"
- uid: "com.azure.cosmos.FeedResponse.getTriggersQuota*"
  name: "getTriggersQuota"
  nameWithType: "FeedResponse<T>.getTriggersQuota"
  fullName: "com.azure.cosmos.FeedResponse<T>.getTriggersQuota"
  package: "com.azure.cosmos"
- uid: "com.azure.cosmos.FeedResponse.getTriggersUsage*"
  name: "getTriggersUsage"
  nameWithType: "FeedResponse<T>.getTriggersUsage"
  fullName: "com.azure.cosmos.FeedResponse<T>.getTriggersUsage"
  package: "com.azure.cosmos"
- uid: "com.azure.cosmos.FeedResponse.getUserDefinedFunctionsQuota*"
  name: "getUserDefinedFunctionsQuota"
  nameWithType: "FeedResponse<T>.getUserDefinedFunctionsQuota"
  fullName: "com.azure.cosmos.FeedResponse<T>.getUserDefinedFunctionsQuota"
  package: "com.azure.cosmos"
- uid: "com.azure.cosmos.FeedResponse.getUserDefinedFunctionsUsage*"
  name: "getUserDefinedFunctionsUsage"
  nameWithType: "FeedResponse<T>.getUserDefinedFunctionsUsage"
  fullName: "com.azure.cosmos.FeedResponse<T>.getUserDefinedFunctionsUsage"
  package: "com.azure.cosmos"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "com.azure.cosmos.FeedResponse.getMaxResourceQuota*"
  name: "getMaxResourceQuota"
  nameWithType: "FeedResponse<T>.getMaxResourceQuota"
  fullName: "com.azure.cosmos.FeedResponse<T>.getMaxResourceQuota"
  package: "com.azure.cosmos"
- uid: "com.azure.cosmos.FeedResponse.getCurrentResourceQuotaUsage*"
  name: "getCurrentResourceQuotaUsage"
  nameWithType: "FeedResponse<T>.getCurrentResourceQuotaUsage"
  fullName: "com.azure.cosmos.FeedResponse<T>.getCurrentResourceQuotaUsage"
  package: "com.azure.cosmos"
- uid: "double"
  spec.java:
  - uid: "double"
    name: "double"
    fullName: "double"
- uid: "com.azure.cosmos.FeedResponse.getRequestCharge*"
  name: "getRequestCharge"
  nameWithType: "FeedResponse<T>.getRequestCharge"
  fullName: "com.azure.cosmos.FeedResponse<T>.getRequestCharge"
  package: "com.azure.cosmos"
- uid: "com.azure.cosmos.FeedResponse.getActivityId*"
  name: "getActivityId"
  nameWithType: "FeedResponse<T>.getActivityId"
  fullName: "com.azure.cosmos.FeedResponse<T>.getActivityId"
  package: "com.azure.cosmos"
- uid: "com.azure.core.util.IterableStream<T>"
  spec.java:
  - uid: "com.azure.core.util.IterableStream"
    name: "IterableStream"
    fullName: "com.azure.core.util.IterableStream"
  - name: "<"
    fullName: "<"
  - uid: "T"
    name: "T"
    fullName: "T"
  - name: ">"
    fullName: ">"
- uid: "com.azure.cosmos.FeedResponse.getElements*"
  name: "getElements"
  nameWithType: "FeedResponse<T>.getElements"
  fullName: "com.azure.cosmos.FeedResponse<T>.getElements"
  package: "com.azure.cosmos"
- uid: "com.azure.cosmos.FeedResponse.getContinuationToken*"
  name: "getContinuationToken"
  nameWithType: "FeedResponse<T>.getContinuationToken"
  fullName: "com.azure.cosmos.FeedResponse<T>.getContinuationToken"
  package: "com.azure.cosmos"
- uid: "com.azure.cosmos.FeedResponse.getSessionToken*"
  name: "getSessionToken"
  nameWithType: "FeedResponse<T>.getSessionToken"
  fullName: "com.azure.cosmos.FeedResponse<T>.getSessionToken"
  package: "com.azure.cosmos"
- uid: "com.azure.cosmos.FeedResponse.getResponseHeaders*"
  name: "getResponseHeaders"
  nameWithType: "FeedResponse<T>.getResponseHeaders"
  fullName: "com.azure.cosmos.FeedResponse<T>.getResponseHeaders"
  package: "com.azure.cosmos"
- uid: "com.azure.cosmos.FeedResponseDiagnostics"
  name: "FeedResponseDiagnostics"
  nameWithType: "FeedResponseDiagnostics"
  fullName: "com.azure.cosmos.FeedResponseDiagnostics"
- uid: "com.azure.cosmos.FeedResponse.getFeedResponseDiagnostics*"
  name: "getFeedResponseDiagnostics"
  nameWithType: "FeedResponse<T>.getFeedResponseDiagnostics"
  fullName: "com.azure.cosmos.FeedResponse<T>.getFeedResponseDiagnostics"
  package: "com.azure.cosmos"
- uid: "com.azure.cosmos.FeedResponse.queryMetrics*"
  name: "queryMetrics"
  nameWithType: "FeedResponse<T>.queryMetrics"
  fullName: "com.azure.cosmos.FeedResponse<T>.queryMetrics"
  package: "com.azure.cosmos"
- uid: "com.azure.cosmos.FeedResponse.queryMetricsMap*"
  name: "queryMetricsMap"
  nameWithType: "FeedResponse<T>.queryMetricsMap"
  fullName: "com.azure.cosmos.FeedResponse<T>.queryMetricsMap"
  package: "com.azure.cosmos"
- uid: "T"
  name: "T"
  nameWithType: "T"
  fullName: "T"
- uid: "com.azure.core.util.paging.ContinuablePage<java.lang.String,T>"
  name: "ContinuablePage<String,T>"
  nameWithType: "ContinuablePage<String,T>"
  fullName: "com.azure.core.util.paging.ContinuablePage<java.lang.String,T>"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "java.util.List"
  name: "List"
  nameWithType: "List"
  fullName: "java.util.List"
- uid: "java.util.Map"
  name: "Map"
  nameWithType: "Map"
  fullName: "java.util.Map"
- uid: "java.lang.String,java.lang.String"
  name: "String,String"
  nameWithType: "String,String"
  fullName: "java.lang.String,java.lang.String"
- uid: "java.lang.String,com.azure.cosmos.implementation.QueryMetrics"
  name: "String,QueryMetrics"
  nameWithType: "String,QueryMetrics"
  fullName: "java.lang.String,com.azure.cosmos.implementation.QueryMetrics"
- uid: "java.util.concurrent.ConcurrentMap"
  name: "ConcurrentMap"
  nameWithType: "ConcurrentMap"
  fullName: "java.util.concurrent.ConcurrentMap"
- uid: "com.azure.core.util.IterableStream"
  name: "IterableStream"
  nameWithType: "IterableStream"
  fullName: "com.azure.core.util.IterableStream"
- uid: "java.lang.String,T"
  name: "String,T"
  nameWithType: "String,T"
  fullName: "java.lang.String,T"
- uid: "com.azure.core.util.paging.ContinuablePage"
  name: "ContinuablePage"
  nameWithType: "ContinuablePage"
  fullName: "com.azure.core.util.paging.ContinuablePage"
