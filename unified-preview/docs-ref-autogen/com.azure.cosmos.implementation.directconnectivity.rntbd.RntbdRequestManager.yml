### YamlMime:ManagedReference
items:
- uid: "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdRequestManager"
  id: "RntbdRequestManager"
  parent: "com.azure.cosmos.implementation.directconnectivity.rntbd"
  children:
  - "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdRequestManager.RntbdRequestManager(io.netty.channel.pool.ChannelHealthChecker,int)"
  - "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdRequestManager.bind(io.netty.channel.ChannelHandlerContext,java.net.SocketAddress,io.netty.channel.ChannelPromise)"
  - "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdRequestManager.channelActive(io.netty.channel.ChannelHandlerContext)"
  - "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdRequestManager.channelInactive(io.netty.channel.ChannelHandlerContext)"
  - "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdRequestManager.channelRead(io.netty.channel.ChannelHandlerContext,java.lang.Object)"
  - "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdRequestManager.channelReadComplete(io.netty.channel.ChannelHandlerContext)"
  - "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdRequestManager.channelRegistered(io.netty.channel.ChannelHandlerContext)"
  - "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdRequestManager.channelUnregistered(io.netty.channel.ChannelHandlerContext)"
  - "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdRequestManager.channelWritabilityChanged(io.netty.channel.ChannelHandlerContext)"
  - "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdRequestManager.close(io.netty.channel.ChannelHandlerContext,io.netty.channel.ChannelPromise)"
  - "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdRequestManager.connect(io.netty.channel.ChannelHandlerContext,java.net.SocketAddress,java.net.SocketAddress,io.netty.channel.ChannelPromise)"
  - "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdRequestManager.deregister(io.netty.channel.ChannelHandlerContext,io.netty.channel.ChannelPromise)"
  - "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdRequestManager.disconnect(io.netty.channel.ChannelHandlerContext,io.netty.channel.ChannelPromise)"
  - "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdRequestManager.exceptionCaught(io.netty.channel.ChannelHandlerContext,java.lang.Throwable)"
  - "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdRequestManager.flush(io.netty.channel.ChannelHandlerContext)"
  - "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdRequestManager.handlerAdded(io.netty.channel.ChannelHandlerContext)"
  - "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdRequestManager.handlerRemoved(io.netty.channel.ChannelHandlerContext)"
  - "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdRequestManager.hasRequestedRntbdContext()"
  - "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdRequestManager.hasRntbdContext()"
  - "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdRequestManager.isServiceable(int)"
  - "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdRequestManager.pendWrite(io.netty.buffer.ByteBuf,io.netty.channel.ChannelPromise)"
  - "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdRequestManager.pendingRequestCount()"
  - "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdRequestManager.read(io.netty.channel.ChannelHandlerContext)"
  - "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdRequestManager.rntbdContext()"
  - "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdRequestManager.rntbdContextRequestFuture()"
  - "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdRequestManager.snapshotTimestamps()"
  - "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdRequestManager.userEventTriggered(io.netty.channel.ChannelHandlerContext,java.lang.Object)"
  - "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdRequestManager.write(io.netty.channel.ChannelHandlerContext,java.lang.Object,io.netty.channel.ChannelPromise)"
  langs:
  - "java"
  name: "RntbdRequestManager"
  nameWithType: "RntbdRequestManager"
  fullName: "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdRequestManager"
  type: "Class"
  package: "com.azure.cosmos.implementation.directconnectivity.rntbd"
  syntax:
    content: "public final class RntbdRequestManager implements ChannelHandler, ChannelInboundHandler, ChannelOutboundHandler"
  inheritance:
  - "java.lang.Object"
  implements:
  - "io.netty.channel.ChannelHandler"
  - "io.netty.channel.ChannelInboundHandler"
  - "io.netty.channel.ChannelOutboundHandler"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdRequestManager.RntbdRequestManager(io.netty.channel.pool.ChannelHealthChecker,int)"
  id: "RntbdRequestManager(io.netty.channel.pool.ChannelHealthChecker,int)"
  parent: "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdRequestManager"
  langs:
  - "java"
  name: "RntbdRequestManager(ChannelHealthChecker healthChecker, int pendingRequestLimit)"
  nameWithType: "RntbdRequestManager.RntbdRequestManager(ChannelHealthChecker healthChecker, int pendingRequestLimit)"
  fullName: "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdRequestManager.RntbdRequestManager(ChannelHealthChecker healthChecker, int pendingRequestLimit)"
  overload: "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdRequestManager.RntbdRequestManager*"
  type: "Constructor"
  package: "com.azure.cosmos.implementation.directconnectivity.rntbd"
  syntax:
    content: "public RntbdRequestManager(ChannelHealthChecker healthChecker, int pendingRequestLimit)"
    parameters:
    - id: "healthChecker"
      type: "io.netty.channel.pool.ChannelHealthChecker"
    - id: "pendingRequestLimit"
      type: "int"
- uid: "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdRequestManager.bind(io.netty.channel.ChannelHandlerContext,java.net.SocketAddress,io.netty.channel.ChannelPromise)"
  id: "bind(io.netty.channel.ChannelHandlerContext,java.net.SocketAddress,io.netty.channel.ChannelPromise)"
  parent: "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdRequestManager"
  langs:
  - "java"
  name: "bind(ChannelHandlerContext context, SocketAddress localAddress, ChannelPromise promise)"
  nameWithType: "RntbdRequestManager.bind(ChannelHandlerContext context, SocketAddress localAddress, ChannelPromise promise)"
  fullName: "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdRequestManager.bind(ChannelHandlerContext context, SocketAddress localAddress, ChannelPromise promise)"
  overload: "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdRequestManager.bind*"
  type: "Method"
  package: "com.azure.cosmos.implementation.directconnectivity.rntbd"
  summary: "Called once a bind operation is made."
  syntax:
    content: "public void bind(ChannelHandlerContext context, SocketAddress localAddress, ChannelPromise promise)"
    parameters:
    - id: "context"
      type: "io.netty.channel.ChannelHandlerContext"
      description: "the <xref uid=\"\" data-throw-if-not-resolved=\"false\">ChannelHandlerContext</xref> for which the bind operation is made"
    - id: "localAddress"
      type: "java.net.SocketAddress"
      description: "the <xref uid=\"\" data-throw-if-not-resolved=\"false\">SocketAddress</xref> to which it should bound"
    - id: "promise"
      type: "io.netty.channel.ChannelPromise"
      description: "the <xref uid=\"\" data-throw-if-not-resolved=\"false\">ChannelPromise</xref> to notify once the operation completes"
- uid: "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdRequestManager.channelActive(io.netty.channel.ChannelHandlerContext)"
  id: "channelActive(io.netty.channel.ChannelHandlerContext)"
  parent: "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdRequestManager"
  langs:
  - "java"
  name: "channelActive(ChannelHandlerContext context)"
  nameWithType: "RntbdRequestManager.channelActive(ChannelHandlerContext context)"
  fullName: "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdRequestManager.channelActive(ChannelHandlerContext context)"
  overload: "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdRequestManager.channelActive*"
  type: "Method"
  package: "com.azure.cosmos.implementation.directconnectivity.rntbd"
  summary: "The <xref uid=\"io.netty.channel.Channel\" data-throw-if-not-resolved=\"false\">Channel</xref> of the <xref uid=\"\" data-throw-if-not-resolved=\"false\">ChannelHandlerContext</xref> is now active"
  syntax:
    content: "public void channelActive(ChannelHandlerContext context)"
    parameters:
    - id: "context"
      type: "io.netty.channel.ChannelHandlerContext"
      description: "<xref uid=\"\" data-throw-if-not-resolved=\"false\">ChannelHandlerContext</xref> to which this <xref uid=\"com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdRequestManager\" data-throw-if-not-resolved=\"false\">RntbdRequestManager</xref> belongs"
- uid: "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdRequestManager.channelInactive(io.netty.channel.ChannelHandlerContext)"
  id: "channelInactive(io.netty.channel.ChannelHandlerContext)"
  parent: "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdRequestManager"
  langs:
  - "java"
  name: "channelInactive(ChannelHandlerContext context)"
  nameWithType: "RntbdRequestManager.channelInactive(ChannelHandlerContext context)"
  fullName: "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdRequestManager.channelInactive(ChannelHandlerContext context)"
  overload: "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdRequestManager.channelInactive*"
  type: "Method"
  package: "com.azure.cosmos.implementation.directconnectivity.rntbd"
  summary: "The <xref uid=\"io.netty.channel.Channel\" data-throw-if-not-resolved=\"false\">Channel</xref> of the <xref uid=\"\" data-throw-if-not-resolved=\"false\">ChannelHandlerContext</xref> was registered and has reached the end of its lifetime\n\nThis method will only be called after the channel is closed."
  syntax:
    content: "public void channelInactive(ChannelHandlerContext context)"
    parameters:
    - id: "context"
      type: "io.netty.channel.ChannelHandlerContext"
      description: "<xref uid=\"\" data-throw-if-not-resolved=\"false\">ChannelHandlerContext</xref> to which this <xref uid=\"com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdRequestManager\" data-throw-if-not-resolved=\"false\">RntbdRequestManager</xref> belongs"
- uid: "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdRequestManager.channelRead(io.netty.channel.ChannelHandlerContext,java.lang.Object)"
  id: "channelRead(io.netty.channel.ChannelHandlerContext,java.lang.Object)"
  parent: "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdRequestManager"
  langs:
  - "java"
  name: "channelRead(ChannelHandlerContext context, Object message)"
  nameWithType: "RntbdRequestManager.channelRead(ChannelHandlerContext context, Object message)"
  fullName: "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdRequestManager.channelRead(ChannelHandlerContext context, Object message)"
  overload: "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdRequestManager.channelRead*"
  type: "Method"
  package: "com.azure.cosmos.implementation.directconnectivity.rntbd"
  summary: "The <xref uid=\"io.netty.channel.Channel\" data-throw-if-not-resolved=\"false\">Channel</xref> of the <xref uid=\"\" data-throw-if-not-resolved=\"false\">ChannelHandlerContext</xref> has read a message from its peer."
  syntax:
    content: "public void channelRead(ChannelHandlerContext context, Object message)"
    parameters:
    - id: "context"
      type: "io.netty.channel.ChannelHandlerContext"
      description: "<xref uid=\"\" data-throw-if-not-resolved=\"false\">ChannelHandlerContext</xref> to which this <xref uid=\"com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdRequestManager\" data-throw-if-not-resolved=\"false\">RntbdRequestManager</xref> belongs."
    - id: "message"
      type: "java.lang.Object"
      description: "The message read."
- uid: "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdRequestManager.channelReadComplete(io.netty.channel.ChannelHandlerContext)"
  id: "channelReadComplete(io.netty.channel.ChannelHandlerContext)"
  parent: "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdRequestManager"
  langs:
  - "java"
  name: "channelReadComplete(ChannelHandlerContext context)"
  nameWithType: "RntbdRequestManager.channelReadComplete(ChannelHandlerContext context)"
  fullName: "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdRequestManager.channelReadComplete(ChannelHandlerContext context)"
  overload: "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdRequestManager.channelReadComplete*"
  type: "Method"
  package: "com.azure.cosmos.implementation.directconnectivity.rntbd"
  summary: "The <xref uid=\"io.netty.channel.Channel\" data-throw-if-not-resolved=\"false\">Channel</xref> of the <xref uid=\"\" data-throw-if-not-resolved=\"false\">ChannelHandlerContext</xref> has fully consumed the most-recent message read.\n\nIf <xref uid=\"\" data-throw-if-not-resolved=\"false\">ChannelOption#AUTO_READ</xref> is off, no further attempt to read inbound data from the current <xref uid=\"io.netty.channel.Channel\" data-throw-if-not-resolved=\"false\">Channel</xref> will be made until <xref uid=\"\" data-throw-if-not-resolved=\"false\">ChannelHandlerContext#read</xref> is called. This leaves time for outbound messages to be written."
  syntax:
    content: "public void channelReadComplete(ChannelHandlerContext context)"
    parameters:
    - id: "context"
      type: "io.netty.channel.ChannelHandlerContext"
      description: "<xref uid=\"\" data-throw-if-not-resolved=\"false\">ChannelHandlerContext</xref> to which this <xref uid=\"com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdRequestManager\" data-throw-if-not-resolved=\"false\">RntbdRequestManager</xref> belongs"
- uid: "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdRequestManager.channelRegistered(io.netty.channel.ChannelHandlerContext)"
  id: "channelRegistered(io.netty.channel.ChannelHandlerContext)"
  parent: "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdRequestManager"
  langs:
  - "java"
  name: "channelRegistered(ChannelHandlerContext context)"
  nameWithType: "RntbdRequestManager.channelRegistered(ChannelHandlerContext context)"
  fullName: "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdRequestManager.channelRegistered(ChannelHandlerContext context)"
  overload: "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdRequestManager.channelRegistered*"
  type: "Method"
  package: "com.azure.cosmos.implementation.directconnectivity.rntbd"
  summary: "Constructs a <xref uid=\"\" data-throw-if-not-resolved=\"false\">CoalescingBufferQueue</xref> for buffering encoded requests until we have an <xref uid=\"com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdRequest\" data-throw-if-not-resolved=\"false\">RntbdRequest</xref>\n\nThis method then calls <xref uid=\"\" data-throw-if-not-resolved=\"false\">ChannelHandlerContext#fireChannelRegistered()</xref> to forward to the next <xref uid=\"io.netty.channel.ChannelInboundHandler\" data-throw-if-not-resolved=\"false\">ChannelInboundHandler</xref> in the <xref uid=\"\" data-throw-if-not-resolved=\"false\">ChannelPipeline</xref>.\n\nSub-classes may override this method to change behavior."
  syntax:
    content: "public void channelRegistered(ChannelHandlerContext context)"
    parameters:
    - id: "context"
      type: "io.netty.channel.ChannelHandlerContext"
      description: "the <xref uid=\"\" data-throw-if-not-resolved=\"false\">ChannelHandlerContext</xref> for which the bind operation is made"
- uid: "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdRequestManager.channelUnregistered(io.netty.channel.ChannelHandlerContext)"
  id: "channelUnregistered(io.netty.channel.ChannelHandlerContext)"
  parent: "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdRequestManager"
  langs:
  - "java"
  name: "channelUnregistered(ChannelHandlerContext context)"
  nameWithType: "RntbdRequestManager.channelUnregistered(ChannelHandlerContext context)"
  fullName: "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdRequestManager.channelUnregistered(ChannelHandlerContext context)"
  overload: "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdRequestManager.channelUnregistered*"
  type: "Method"
  package: "com.azure.cosmos.implementation.directconnectivity.rntbd"
  summary: "The <xref uid=\"io.netty.channel.Channel\" data-throw-if-not-resolved=\"false\">Channel</xref> of the <xref uid=\"\" data-throw-if-not-resolved=\"false\">ChannelHandlerContext</xref> was unregistered from its <xref uid=\"\" data-throw-if-not-resolved=\"false\">EventLoop</xref>"
  syntax:
    content: "public void channelUnregistered(ChannelHandlerContext context)"
    parameters:
    - id: "context"
      type: "io.netty.channel.ChannelHandlerContext"
      description: "<xref uid=\"\" data-throw-if-not-resolved=\"false\">ChannelHandlerContext</xref> to which this <xref uid=\"com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdRequestManager\" data-throw-if-not-resolved=\"false\">RntbdRequestManager</xref> belongs"
- uid: "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdRequestManager.channelWritabilityChanged(io.netty.channel.ChannelHandlerContext)"
  id: "channelWritabilityChanged(io.netty.channel.ChannelHandlerContext)"
  parent: "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdRequestManager"
  langs:
  - "java"
  name: "channelWritabilityChanged(ChannelHandlerContext context)"
  nameWithType: "RntbdRequestManager.channelWritabilityChanged(ChannelHandlerContext context)"
  fullName: "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdRequestManager.channelWritabilityChanged(ChannelHandlerContext context)"
  overload: "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdRequestManager.channelWritabilityChanged*"
  type: "Method"
  package: "com.azure.cosmos.implementation.directconnectivity.rntbd"
  summary: "Gets called once the writable state of a <xref uid=\"io.netty.channel.Channel\" data-throw-if-not-resolved=\"false\">Channel</xref> changed. You can check the state with <xref uid=\"\" data-throw-if-not-resolved=\"false\">Channel#isWritable()</xref>."
  syntax:
    content: "public void channelWritabilityChanged(ChannelHandlerContext context)"
    parameters:
    - id: "context"
      type: "io.netty.channel.ChannelHandlerContext"
      description: "<xref uid=\"\" data-throw-if-not-resolved=\"false\">ChannelHandlerContext</xref> to which this <xref uid=\"com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdRequestManager\" data-throw-if-not-resolved=\"false\">RntbdRequestManager</xref> belongs"
- uid: "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdRequestManager.close(io.netty.channel.ChannelHandlerContext,io.netty.channel.ChannelPromise)"
  id: "close(io.netty.channel.ChannelHandlerContext,io.netty.channel.ChannelPromise)"
  parent: "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdRequestManager"
  langs:
  - "java"
  name: "close(ChannelHandlerContext context, ChannelPromise promise)"
  nameWithType: "RntbdRequestManager.close(ChannelHandlerContext context, ChannelPromise promise)"
  fullName: "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdRequestManager.close(ChannelHandlerContext context, ChannelPromise promise)"
  overload: "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdRequestManager.close*"
  type: "Method"
  package: "com.azure.cosmos.implementation.directconnectivity.rntbd"
  summary: "Called once a close operation is made."
  syntax:
    content: "public void close(ChannelHandlerContext context, ChannelPromise promise)"
    parameters:
    - id: "context"
      type: "io.netty.channel.ChannelHandlerContext"
      description: "the <xref uid=\"\" data-throw-if-not-resolved=\"false\">ChannelHandlerContext</xref> for which the close operation is made"
    - id: "promise"
      type: "io.netty.channel.ChannelPromise"
      description: "the <xref uid=\"\" data-throw-if-not-resolved=\"false\">ChannelPromise</xref> to notify once the operation completes"
- uid: "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdRequestManager.connect(io.netty.channel.ChannelHandlerContext,java.net.SocketAddress,java.net.SocketAddress,io.netty.channel.ChannelPromise)"
  id: "connect(io.netty.channel.ChannelHandlerContext,java.net.SocketAddress,java.net.SocketAddress,io.netty.channel.ChannelPromise)"
  parent: "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdRequestManager"
  langs:
  - "java"
  name: "connect(ChannelHandlerContext context, SocketAddress remoteAddress, SocketAddress localAddress, ChannelPromise promise)"
  nameWithType: "RntbdRequestManager.connect(ChannelHandlerContext context, SocketAddress remoteAddress, SocketAddress localAddress, ChannelPromise promise)"
  fullName: "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdRequestManager.connect(ChannelHandlerContext context, SocketAddress remoteAddress, SocketAddress localAddress, ChannelPromise promise)"
  overload: "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdRequestManager.connect*"
  type: "Method"
  package: "com.azure.cosmos.implementation.directconnectivity.rntbd"
  summary: "Called once a connect operation is made."
  syntax:
    content: "public void connect(ChannelHandlerContext context, SocketAddress remoteAddress, SocketAddress localAddress, ChannelPromise promise)"
    parameters:
    - id: "context"
      type: "io.netty.channel.ChannelHandlerContext"
      description: "the <xref uid=\"\" data-throw-if-not-resolved=\"false\">ChannelHandlerContext</xref> for which the connect operation is made"
    - id: "remoteAddress"
      type: "java.net.SocketAddress"
      description: "the <xref uid=\"\" data-throw-if-not-resolved=\"false\">SocketAddress</xref> to which it should connect"
    - id: "localAddress"
      type: "java.net.SocketAddress"
      description: "the <xref uid=\"\" data-throw-if-not-resolved=\"false\">SocketAddress</xref> which is used as source on connect"
    - id: "promise"
      type: "io.netty.channel.ChannelPromise"
      description: "the <xref uid=\"\" data-throw-if-not-resolved=\"false\">ChannelPromise</xref> to notify once the operation completes"
- uid: "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdRequestManager.deregister(io.netty.channel.ChannelHandlerContext,io.netty.channel.ChannelPromise)"
  id: "deregister(io.netty.channel.ChannelHandlerContext,io.netty.channel.ChannelPromise)"
  parent: "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdRequestManager"
  langs:
  - "java"
  name: "deregister(ChannelHandlerContext context, ChannelPromise promise)"
  nameWithType: "RntbdRequestManager.deregister(ChannelHandlerContext context, ChannelPromise promise)"
  fullName: "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdRequestManager.deregister(ChannelHandlerContext context, ChannelPromise promise)"
  overload: "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdRequestManager.deregister*"
  type: "Method"
  package: "com.azure.cosmos.implementation.directconnectivity.rntbd"
  summary: "Called once a deregister operation is made from the current registered <xref uid=\"\" data-throw-if-not-resolved=\"false\">EventLoop</xref>."
  syntax:
    content: "public void deregister(ChannelHandlerContext context, ChannelPromise promise)"
    parameters:
    - id: "context"
      type: "io.netty.channel.ChannelHandlerContext"
      description: "the <xref uid=\"\" data-throw-if-not-resolved=\"false\">ChannelHandlerContext</xref> for which the deregister operation is made"
    - id: "promise"
      type: "io.netty.channel.ChannelPromise"
      description: "the <xref uid=\"\" data-throw-if-not-resolved=\"false\">ChannelPromise</xref> to notify once the operation completes"
- uid: "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdRequestManager.disconnect(io.netty.channel.ChannelHandlerContext,io.netty.channel.ChannelPromise)"
  id: "disconnect(io.netty.channel.ChannelHandlerContext,io.netty.channel.ChannelPromise)"
  parent: "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdRequestManager"
  langs:
  - "java"
  name: "disconnect(ChannelHandlerContext context, ChannelPromise promise)"
  nameWithType: "RntbdRequestManager.disconnect(ChannelHandlerContext context, ChannelPromise promise)"
  fullName: "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdRequestManager.disconnect(ChannelHandlerContext context, ChannelPromise promise)"
  overload: "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdRequestManager.disconnect*"
  type: "Method"
  package: "com.azure.cosmos.implementation.directconnectivity.rntbd"
  summary: "Called once a disconnect operation is made."
  syntax:
    content: "public void disconnect(ChannelHandlerContext context, ChannelPromise promise)"
    parameters:
    - id: "context"
      type: "io.netty.channel.ChannelHandlerContext"
      description: "the <xref uid=\"\" data-throw-if-not-resolved=\"false\">ChannelHandlerContext</xref> for which the disconnect operation is made"
    - id: "promise"
      type: "io.netty.channel.ChannelPromise"
      description: "the <xref uid=\"\" data-throw-if-not-resolved=\"false\">ChannelPromise</xref> to notify once the operation completes"
- uid: "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdRequestManager.exceptionCaught(io.netty.channel.ChannelHandlerContext,java.lang.Throwable)"
  id: "exceptionCaught(io.netty.channel.ChannelHandlerContext,java.lang.Throwable)"
  parent: "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdRequestManager"
  langs:
  - "java"
  name: "exceptionCaught(ChannelHandlerContext context, Throwable cause)"
  nameWithType: "RntbdRequestManager.exceptionCaught(ChannelHandlerContext context, Throwable cause)"
  fullName: "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdRequestManager.exceptionCaught(ChannelHandlerContext context, Throwable cause)"
  overload: "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdRequestManager.exceptionCaught*"
  type: "Method"
  package: "com.azure.cosmos.implementation.directconnectivity.rntbd"
  summary: "Processes <xref uid=\"\" data-throw-if-not-resolved=\"false\">ChannelHandlerContext#fireExceptionCaught(Throwable)</xref> in the <xref uid=\"\" data-throw-if-not-resolved=\"false\">ChannelPipeline</xref>"
  syntax:
    content: "public void exceptionCaught(ChannelHandlerContext context, Throwable cause)"
    parameters:
    - id: "context"
      type: "io.netty.channel.ChannelHandlerContext"
      description: "<xref uid=\"\" data-throw-if-not-resolved=\"false\">ChannelHandlerContext</xref> to which this <xref uid=\"com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdRequestManager\" data-throw-if-not-resolved=\"false\">RntbdRequestManager</xref> belongs"
    - id: "cause"
      type: "java.lang.Throwable"
      description: "Exception caught"
- uid: "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdRequestManager.flush(io.netty.channel.ChannelHandlerContext)"
  id: "flush(io.netty.channel.ChannelHandlerContext)"
  parent: "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdRequestManager"
  langs:
  - "java"
  name: "flush(ChannelHandlerContext context)"
  nameWithType: "RntbdRequestManager.flush(ChannelHandlerContext context)"
  fullName: "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdRequestManager.flush(ChannelHandlerContext context)"
  overload: "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdRequestManager.flush*"
  type: "Method"
  package: "com.azure.cosmos.implementation.directconnectivity.rntbd"
  summary: "Called once a flush operation is made\n\nThe flush operation will try to flush out all previous written messages that are pending."
  syntax:
    content: "public void flush(ChannelHandlerContext context)"
    parameters:
    - id: "context"
      type: "io.netty.channel.ChannelHandlerContext"
      description: "the <xref uid=\"\" data-throw-if-not-resolved=\"false\">ChannelHandlerContext</xref> for which the flush operation is made"
- uid: "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdRequestManager.handlerAdded(io.netty.channel.ChannelHandlerContext)"
  id: "handlerAdded(io.netty.channel.ChannelHandlerContext)"
  parent: "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdRequestManager"
  langs:
  - "java"
  name: "handlerAdded(ChannelHandlerContext context)"
  nameWithType: "RntbdRequestManager.handlerAdded(ChannelHandlerContext context)"
  fullName: "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdRequestManager.handlerAdded(ChannelHandlerContext context)"
  overload: "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdRequestManager.handlerAdded*"
  type: "Method"
  package: "com.azure.cosmos.implementation.directconnectivity.rntbd"
  summary: "Gets called after the <xref uid=\"io.netty.channel.ChannelHandler\" data-throw-if-not-resolved=\"false\">ChannelHandler</xref> was added to the actual context and it's ready to handle events."
  syntax:
    content: "public void handlerAdded(ChannelHandlerContext context)"
    parameters:
    - id: "context"
      type: "io.netty.channel.ChannelHandlerContext"
      description: "<xref uid=\"\" data-throw-if-not-resolved=\"false\">ChannelHandlerContext</xref> to which this <xref uid=\"com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdRequestManager\" data-throw-if-not-resolved=\"false\">RntbdRequestManager</xref> belongs"
- uid: "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdRequestManager.handlerRemoved(io.netty.channel.ChannelHandlerContext)"
  id: "handlerRemoved(io.netty.channel.ChannelHandlerContext)"
  parent: "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdRequestManager"
  langs:
  - "java"
  name: "handlerRemoved(ChannelHandlerContext context)"
  nameWithType: "RntbdRequestManager.handlerRemoved(ChannelHandlerContext context)"
  fullName: "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdRequestManager.handlerRemoved(ChannelHandlerContext context)"
  overload: "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdRequestManager.handlerRemoved*"
  type: "Method"
  package: "com.azure.cosmos.implementation.directconnectivity.rntbd"
  summary: "Gets called after the <xref uid=\"io.netty.channel.ChannelHandler\" data-throw-if-not-resolved=\"false\">ChannelHandler</xref> was removed from the actual context and it doesn't handle events anymore."
  syntax:
    content: "public void handlerRemoved(ChannelHandlerContext context)"
    parameters:
    - id: "context"
      type: "io.netty.channel.ChannelHandlerContext"
      description: "<xref uid=\"\" data-throw-if-not-resolved=\"false\">ChannelHandlerContext</xref> to which this <xref uid=\"com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdRequestManager\" data-throw-if-not-resolved=\"false\">RntbdRequestManager</xref> belongs"
- uid: "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdRequestManager.hasRequestedRntbdContext()"
  id: "hasRequestedRntbdContext()"
  parent: "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdRequestManager"
  langs:
  - "java"
  name: "hasRequestedRntbdContext()"
  nameWithType: "RntbdRequestManager.hasRequestedRntbdContext()"
  fullName: "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdRequestManager.hasRequestedRntbdContext()"
  overload: "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdRequestManager.hasRequestedRntbdContext*"
  type: "Method"
  package: "com.azure.cosmos.implementation.directconnectivity.rntbd"
  syntax:
    content: " boolean hasRequestedRntbdContext()"
    return:
      type: "boolean"
- uid: "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdRequestManager.hasRntbdContext()"
  id: "hasRntbdContext()"
  parent: "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdRequestManager"
  langs:
  - "java"
  name: "hasRntbdContext()"
  nameWithType: "RntbdRequestManager.hasRntbdContext()"
  fullName: "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdRequestManager.hasRntbdContext()"
  overload: "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdRequestManager.hasRntbdContext*"
  type: "Method"
  package: "com.azure.cosmos.implementation.directconnectivity.rntbd"
  syntax:
    content: " boolean hasRntbdContext()"
    return:
      type: "boolean"
- uid: "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdRequestManager.isServiceable(int)"
  id: "isServiceable(int)"
  parent: "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdRequestManager"
  langs:
  - "java"
  name: "isServiceable(int demand)"
  nameWithType: "RntbdRequestManager.isServiceable(int demand)"
  fullName: "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdRequestManager.isServiceable(int demand)"
  overload: "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdRequestManager.isServiceable*"
  type: "Method"
  package: "com.azure.cosmos.implementation.directconnectivity.rntbd"
  syntax:
    content: " boolean isServiceable(int demand)"
    parameters:
    - id: "demand"
      type: "int"
    return:
      type: "boolean"
- uid: "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdRequestManager.pendWrite(io.netty.buffer.ByteBuf,io.netty.channel.ChannelPromise)"
  id: "pendWrite(io.netty.buffer.ByteBuf,io.netty.channel.ChannelPromise)"
  parent: "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdRequestManager"
  langs:
  - "java"
  name: "pendWrite(ByteBuf out, ChannelPromise promise)"
  nameWithType: "RntbdRequestManager.pendWrite(ByteBuf out, ChannelPromise promise)"
  fullName: "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdRequestManager.pendWrite(ByteBuf out, ChannelPromise promise)"
  overload: "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdRequestManager.pendWrite*"
  type: "Method"
  package: "com.azure.cosmos.implementation.directconnectivity.rntbd"
  syntax:
    content: " void pendWrite(ByteBuf out, ChannelPromise promise)"
    parameters:
    - id: "out"
      type: "io.netty.buffer.ByteBuf"
    - id: "promise"
      type: "io.netty.channel.ChannelPromise"
- uid: "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdRequestManager.pendingRequestCount()"
  id: "pendingRequestCount()"
  parent: "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdRequestManager"
  langs:
  - "java"
  name: "pendingRequestCount()"
  nameWithType: "RntbdRequestManager.pendingRequestCount()"
  fullName: "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdRequestManager.pendingRequestCount()"
  overload: "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdRequestManager.pendingRequestCount*"
  type: "Method"
  package: "com.azure.cosmos.implementation.directconnectivity.rntbd"
  syntax:
    content: " int pendingRequestCount()"
    return:
      type: "int"
- uid: "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdRequestManager.read(io.netty.channel.ChannelHandlerContext)"
  id: "read(io.netty.channel.ChannelHandlerContext)"
  parent: "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdRequestManager"
  langs:
  - "java"
  name: "read(ChannelHandlerContext context)"
  nameWithType: "RntbdRequestManager.read(ChannelHandlerContext context)"
  fullName: "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdRequestManager.read(ChannelHandlerContext context)"
  overload: "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdRequestManager.read*"
  type: "Method"
  package: "com.azure.cosmos.implementation.directconnectivity.rntbd"
  summary: "Intercepts <xref uid=\"\" data-throw-if-not-resolved=\"false\">ChannelHandlerContext#read</xref>"
  syntax:
    content: "public void read(ChannelHandlerContext context)"
    parameters:
    - id: "context"
      type: "io.netty.channel.ChannelHandlerContext"
      description: "the <xref uid=\"\" data-throw-if-not-resolved=\"false\">ChannelHandlerContext</xref> for which the read operation is made"
- uid: "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdRequestManager.rntbdContext()"
  id: "rntbdContext()"
  parent: "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdRequestManager"
  langs:
  - "java"
  name: "rntbdContext()"
  nameWithType: "RntbdRequestManager.rntbdContext()"
  fullName: "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdRequestManager.rntbdContext()"
  overload: "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdRequestManager.rntbdContext*"
  type: "Method"
  package: "com.azure.cosmos.implementation.directconnectivity.rntbd"
  syntax:
    content: " Optional<RntbdContext> rntbdContext()"
    return:
      type: "java.util.Optional<com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdContext>"
- uid: "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdRequestManager.rntbdContextRequestFuture()"
  id: "rntbdContextRequestFuture()"
  parent: "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdRequestManager"
  langs:
  - "java"
  name: "rntbdContextRequestFuture()"
  nameWithType: "RntbdRequestManager.rntbdContextRequestFuture()"
  fullName: "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdRequestManager.rntbdContextRequestFuture()"
  overload: "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdRequestManager.rntbdContextRequestFuture*"
  type: "Method"
  package: "com.azure.cosmos.implementation.directconnectivity.rntbd"
  syntax:
    content: " CompletableFuture<RntbdContextRequest> rntbdContextRequestFuture()"
    return:
      type: "java.util.concurrent.CompletableFuture<com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdContextRequest>"
- uid: "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdRequestManager.snapshotTimestamps()"
  id: "snapshotTimestamps()"
  parent: "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdRequestManager"
  langs:
  - "java"
  name: "snapshotTimestamps()"
  nameWithType: "RntbdRequestManager.snapshotTimestamps()"
  fullName: "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdRequestManager.snapshotTimestamps()"
  overload: "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdRequestManager.snapshotTimestamps*"
  type: "Method"
  package: "com.azure.cosmos.implementation.directconnectivity.rntbd"
  syntax:
    content: " RntbdClientChannelHealthChecker.Timestamps snapshotTimestamps()"
    return:
      type: "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdClientChannelHealthChecker.Timestamps"
- uid: "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdRequestManager.userEventTriggered(io.netty.channel.ChannelHandlerContext,java.lang.Object)"
  id: "userEventTriggered(io.netty.channel.ChannelHandlerContext,java.lang.Object)"
  parent: "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdRequestManager"
  langs:
  - "java"
  name: "userEventTriggered(ChannelHandlerContext context, Object event)"
  nameWithType: "RntbdRequestManager.userEventTriggered(ChannelHandlerContext context, Object event)"
  fullName: "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdRequestManager.userEventTriggered(ChannelHandlerContext context, Object event)"
  overload: "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdRequestManager.userEventTriggered*"
  type: "Method"
  package: "com.azure.cosmos.implementation.directconnectivity.rntbd"
  summary: "Processes inbound events triggered by channel handlers in the <xref uid=\"com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdClientChannelHandler\" data-throw-if-not-resolved=\"false\">RntbdClientChannelHandler</xref> pipeline\n\nAll but inbound request management events are ignored."
  syntax:
    content: "public void userEventTriggered(ChannelHandlerContext context, Object event)"
    parameters:
    - id: "context"
      type: "io.netty.channel.ChannelHandlerContext"
      description: "<xref uid=\"\" data-throw-if-not-resolved=\"false\">ChannelHandlerContext</xref> to which this <xref uid=\"com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdRequestManager\" data-throw-if-not-resolved=\"false\">RntbdRequestManager</xref> belongs"
    - id: "event"
      type: "java.lang.Object"
      description: "An object representing a user event"
- uid: "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdRequestManager.write(io.netty.channel.ChannelHandlerContext,java.lang.Object,io.netty.channel.ChannelPromise)"
  id: "write(io.netty.channel.ChannelHandlerContext,java.lang.Object,io.netty.channel.ChannelPromise)"
  parent: "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdRequestManager"
  langs:
  - "java"
  name: "write(ChannelHandlerContext context, Object message, ChannelPromise promise)"
  nameWithType: "RntbdRequestManager.write(ChannelHandlerContext context, Object message, ChannelPromise promise)"
  fullName: "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdRequestManager.write(ChannelHandlerContext context, Object message, ChannelPromise promise)"
  overload: "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdRequestManager.write*"
  type: "Method"
  package: "com.azure.cosmos.implementation.directconnectivity.rntbd"
  summary: "Called once a write operation is made\n\nThe write operation will send messages through the <xref uid=\"\" data-throw-if-not-resolved=\"false\">ChannelPipeline</xref> which are then ready to be flushed to the actual <xref uid=\"io.netty.channel.Channel\" data-throw-if-not-resolved=\"false\">Channel</xref>. This will occur when <xref uid=\"\" data-throw-if-not-resolved=\"false\">Channel#flush</xref> is called."
  syntax:
    content: "public void write(ChannelHandlerContext context, Object message, ChannelPromise promise)"
    parameters:
    - id: "context"
      type: "io.netty.channel.ChannelHandlerContext"
      description: "the <xref uid=\"\" data-throw-if-not-resolved=\"false\">ChannelHandlerContext</xref> for which the write operation is made"
    - id: "message"
      type: "java.lang.Object"
      description: "the message to write"
    - id: "promise"
      type: "io.netty.channel.ChannelPromise"
      description: "the <xref uid=\"\" data-throw-if-not-resolved=\"false\">ChannelPromise</xref> to notify once the operation completes"
references:
- uid: "io.netty.channel.pool.ChannelHealthChecker"
  spec.java:
  - uid: "io.netty.channel.pool.ChannelHealthChecker"
    name: "ChannelHealthChecker"
    fullName: "io.netty.channel.pool.ChannelHealthChecker"
- uid: "int"
  spec.java:
  - uid: "int"
    name: "int"
    fullName: "int"
- uid: "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdRequestManager.RntbdRequestManager*"
  name: "RntbdRequestManager"
  nameWithType: "RntbdRequestManager.RntbdRequestManager"
  fullName: "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdRequestManager.RntbdRequestManager"
  package: "com.azure.cosmos.implementation.directconnectivity.rntbd"
- uid: "io.netty.channel.ChannelHandlerContext"
  spec.java:
  - uid: "io.netty.channel.ChannelHandlerContext"
    name: "ChannelHandlerContext"
    fullName: "io.netty.channel.ChannelHandlerContext"
- uid: "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdRequestManager.handlerAdded*"
  name: "handlerAdded"
  nameWithType: "RntbdRequestManager.handlerAdded"
  fullName: "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdRequestManager.handlerAdded"
  package: "com.azure.cosmos.implementation.directconnectivity.rntbd"
- uid: "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdRequestManager.handlerRemoved*"
  name: "handlerRemoved"
  nameWithType: "RntbdRequestManager.handlerRemoved"
  fullName: "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdRequestManager.handlerRemoved"
  package: "com.azure.cosmos.implementation.directconnectivity.rntbd"
- uid: "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdRequestManager.channelActive*"
  name: "channelActive"
  nameWithType: "RntbdRequestManager.channelActive"
  fullName: "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdRequestManager.channelActive"
  package: "com.azure.cosmos.implementation.directconnectivity.rntbd"
- uid: "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdRequestManager.channelInactive*"
  name: "channelInactive"
  nameWithType: "RntbdRequestManager.channelInactive"
  fullName: "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdRequestManager.channelInactive"
  package: "com.azure.cosmos.implementation.directconnectivity.rntbd"
- uid: "java.lang.Object"
  spec.java:
  - uid: "java.lang.Object"
    name: "Object"
    fullName: "java.lang.Object"
- uid: "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdRequestManager.channelRead*"
  name: "channelRead"
  nameWithType: "RntbdRequestManager.channelRead"
  fullName: "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdRequestManager.channelRead"
  package: "com.azure.cosmos.implementation.directconnectivity.rntbd"
- uid: "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdRequestManager.channelReadComplete*"
  name: "channelReadComplete"
  nameWithType: "RntbdRequestManager.channelReadComplete"
  fullName: "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdRequestManager.channelReadComplete"
  package: "com.azure.cosmos.implementation.directconnectivity.rntbd"
- uid: "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdRequestManager.channelRegistered*"
  name: "channelRegistered"
  nameWithType: "RntbdRequestManager.channelRegistered"
  fullName: "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdRequestManager.channelRegistered"
  package: "com.azure.cosmos.implementation.directconnectivity.rntbd"
- uid: "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdRequestManager.channelUnregistered*"
  name: "channelUnregistered"
  nameWithType: "RntbdRequestManager.channelUnregistered"
  fullName: "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdRequestManager.channelUnregistered"
  package: "com.azure.cosmos.implementation.directconnectivity.rntbd"
- uid: "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdRequestManager.channelWritabilityChanged*"
  name: "channelWritabilityChanged"
  nameWithType: "RntbdRequestManager.channelWritabilityChanged"
  fullName: "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdRequestManager.channelWritabilityChanged"
  package: "com.azure.cosmos.implementation.directconnectivity.rntbd"
- uid: "java.lang.Throwable"
  spec.java:
  - uid: "java.lang.Throwable"
    name: "Throwable"
    fullName: "java.lang.Throwable"
- uid: "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdRequestManager.exceptionCaught*"
  name: "exceptionCaught"
  nameWithType: "RntbdRequestManager.exceptionCaught"
  fullName: "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdRequestManager.exceptionCaught"
  package: "com.azure.cosmos.implementation.directconnectivity.rntbd"
- uid: "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdRequestManager.userEventTriggered*"
  name: "userEventTriggered"
  nameWithType: "RntbdRequestManager.userEventTriggered"
  fullName: "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdRequestManager.userEventTriggered"
  package: "com.azure.cosmos.implementation.directconnectivity.rntbd"
- uid: "java.net.SocketAddress"
  spec.java:
  - uid: "java.net.SocketAddress"
    name: "SocketAddress"
    fullName: "java.net.SocketAddress"
- uid: "io.netty.channel.ChannelPromise"
  spec.java:
  - uid: "io.netty.channel.ChannelPromise"
    name: "ChannelPromise"
    fullName: "io.netty.channel.ChannelPromise"
- uid: "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdRequestManager.bind*"
  name: "bind"
  nameWithType: "RntbdRequestManager.bind"
  fullName: "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdRequestManager.bind"
  package: "com.azure.cosmos.implementation.directconnectivity.rntbd"
- uid: "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdRequestManager.close*"
  name: "close"
  nameWithType: "RntbdRequestManager.close"
  fullName: "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdRequestManager.close"
  package: "com.azure.cosmos.implementation.directconnectivity.rntbd"
- uid: "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdRequestManager.connect*"
  name: "connect"
  nameWithType: "RntbdRequestManager.connect"
  fullName: "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdRequestManager.connect"
  package: "com.azure.cosmos.implementation.directconnectivity.rntbd"
- uid: "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdRequestManager.deregister*"
  name: "deregister"
  nameWithType: "RntbdRequestManager.deregister"
  fullName: "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdRequestManager.deregister"
  package: "com.azure.cosmos.implementation.directconnectivity.rntbd"
- uid: "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdRequestManager.disconnect*"
  name: "disconnect"
  nameWithType: "RntbdRequestManager.disconnect"
  fullName: "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdRequestManager.disconnect"
  package: "com.azure.cosmos.implementation.directconnectivity.rntbd"
- uid: "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdRequestManager.flush*"
  name: "flush"
  nameWithType: "RntbdRequestManager.flush"
  fullName: "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdRequestManager.flush"
  package: "com.azure.cosmos.implementation.directconnectivity.rntbd"
- uid: "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdRequestManager.read*"
  name: "read"
  nameWithType: "RntbdRequestManager.read"
  fullName: "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdRequestManager.read"
  package: "com.azure.cosmos.implementation.directconnectivity.rntbd"
- uid: "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdRequestManager.write*"
  name: "write"
  nameWithType: "RntbdRequestManager.write"
  fullName: "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdRequestManager.write"
  package: "com.azure.cosmos.implementation.directconnectivity.rntbd"
- uid: "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdRequestManager.pendingRequestCount*"
  name: "pendingRequestCount"
  nameWithType: "RntbdRequestManager.pendingRequestCount"
  fullName: "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdRequestManager.pendingRequestCount"
  package: "com.azure.cosmos.implementation.directconnectivity.rntbd"
- uid: "java.util.Optional<com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdContext>"
  spec.java:
  - uid: "java.util.Optional"
    name: "Optional"
    fullName: "java.util.Optional"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdContext"
    name: "RntbdContext"
    fullName: "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdContext"
  - name: ">"
    fullName: ">"
- uid: "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdRequestManager.rntbdContext*"
  name: "rntbdContext"
  nameWithType: "RntbdRequestManager.rntbdContext"
  fullName: "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdRequestManager.rntbdContext"
  package: "com.azure.cosmos.implementation.directconnectivity.rntbd"
- uid: "java.util.concurrent.CompletableFuture<com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdContextRequest>"
  spec.java:
  - uid: "java.util.concurrent.CompletableFuture"
    name: "CompletableFuture"
    fullName: "java.util.concurrent.CompletableFuture"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdContextRequest"
    name: "RntbdContextRequest"
    fullName: "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdContextRequest"
  - name: ">"
    fullName: ">"
- uid: "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdRequestManager.rntbdContextRequestFuture*"
  name: "rntbdContextRequestFuture"
  nameWithType: "RntbdRequestManager.rntbdContextRequestFuture"
  fullName: "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdRequestManager.rntbdContextRequestFuture"
  package: "com.azure.cosmos.implementation.directconnectivity.rntbd"
- uid: "boolean"
  spec.java:
  - uid: "boolean"
    name: "boolean"
    fullName: "boolean"
- uid: "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdRequestManager.hasRequestedRntbdContext*"
  name: "hasRequestedRntbdContext"
  nameWithType: "RntbdRequestManager.hasRequestedRntbdContext"
  fullName: "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdRequestManager.hasRequestedRntbdContext"
  package: "com.azure.cosmos.implementation.directconnectivity.rntbd"
- uid: "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdRequestManager.hasRntbdContext*"
  name: "hasRntbdContext"
  nameWithType: "RntbdRequestManager.hasRntbdContext"
  fullName: "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdRequestManager.hasRntbdContext"
  package: "com.azure.cosmos.implementation.directconnectivity.rntbd"
- uid: "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdRequestManager.isServiceable*"
  name: "isServiceable"
  nameWithType: "RntbdRequestManager.isServiceable"
  fullName: "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdRequestManager.isServiceable"
  package: "com.azure.cosmos.implementation.directconnectivity.rntbd"
- uid: "io.netty.buffer.ByteBuf"
  spec.java:
  - uid: "io.netty.buffer.ByteBuf"
    name: "ByteBuf"
    fullName: "io.netty.buffer.ByteBuf"
- uid: "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdRequestManager.pendWrite*"
  name: "pendWrite"
  nameWithType: "RntbdRequestManager.pendWrite"
  fullName: "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdRequestManager.pendWrite"
  package: "com.azure.cosmos.implementation.directconnectivity.rntbd"
- uid: "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdClientChannelHealthChecker.Timestamps"
  name: "RntbdClientChannelHealthChecker.Timestamps"
  nameWithType: "RntbdClientChannelHealthChecker.Timestamps"
  fullName: "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdClientChannelHealthChecker.Timestamps"
- uid: "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdRequestManager.snapshotTimestamps*"
  name: "snapshotTimestamps"
  nameWithType: "RntbdRequestManager.snapshotTimestamps"
  fullName: "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdRequestManager.snapshotTimestamps"
  package: "com.azure.cosmos.implementation.directconnectivity.rntbd"
- uid: "io.netty.channel.ChannelOutboundHandler"
  name: "ChannelOutboundHandler"
  nameWithType: "ChannelOutboundHandler"
  fullName: "io.netty.channel.ChannelOutboundHandler"
- uid: "io.netty.channel.ChannelInboundHandler"
  name: "ChannelInboundHandler"
  nameWithType: "ChannelInboundHandler"
  fullName: "io.netty.channel.ChannelInboundHandler"
- uid: "io.netty.channel.ChannelHandler"
  name: "ChannelHandler"
  nameWithType: "ChannelHandler"
  fullName: "io.netty.channel.ChannelHandler"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdRequestManager.UnhealthyChannelException"
  name: "RntbdRequestManager.UnhealthyChannelException"
  nameWithType: "RntbdRequestManager.UnhealthyChannelException"
  fullName: "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdRequestManager.UnhealthyChannelException"
- uid: "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdContext"
  name: "RntbdContext"
  nameWithType: "RntbdContext"
  fullName: "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdContext"
- uid: "java.util.Optional"
  name: "Optional"
  nameWithType: "Optional"
  fullName: "java.util.Optional"
- uid: "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdContextRequest"
  name: "RntbdContextRequest"
  nameWithType: "RntbdContextRequest"
  fullName: "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdContextRequest"
- uid: "java.util.concurrent.CompletableFuture"
  name: "CompletableFuture"
  nameWithType: "CompletableFuture"
  fullName: "java.util.concurrent.CompletableFuture"
