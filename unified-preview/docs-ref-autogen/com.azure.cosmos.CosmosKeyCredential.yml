### YamlMime:ManagedReference
items:
- uid: "com.azure.cosmos.CosmosKeyCredential"
  id: "CosmosKeyCredential"
  parent: "com.azure.cosmos"
  children:
  - "com.azure.cosmos.CosmosKeyCredential.CosmosKeyCredential(java.lang.String)"
  - "com.azure.cosmos.CosmosKeyCredential.getKey()"
  - "com.azure.cosmos.CosmosKeyCredential.getKeyHashCode()"
  - "com.azure.cosmos.CosmosKeyCredential.setKey(java.lang.String)"
  langs:
  - "java"
  name: "CosmosKeyCredential"
  nameWithType: "CosmosKeyCredential"
  fullName: "com.azure.cosmos.CosmosKeyCredential"
  type: "Class"
  package: "com.azure.cosmos"
  summary: "Cosmos Key Credential is used to store key credentials, in order to support dynamic key rotation. Singleton instance should be used to support multiple keys. Azure client library for Cosmos ensures to use the updated key provided in the same singleton instance which was used when building <xref uid=\"com.azure.cosmos.CosmosAsyncClient\" data-throw-if-not-resolved=\"false\">CosmosAsyncClient</xref>"
  syntax:
    content: "public class CosmosKeyCredential"
  inheritance:
  - "java.lang.Object"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.azure.cosmos.CosmosKeyCredential.CosmosKeyCredential(java.lang.String)"
  id: "CosmosKeyCredential(java.lang.String)"
  parent: "com.azure.cosmos.CosmosKeyCredential"
  langs:
  - "java"
  name: "CosmosKeyCredential(String key)"
  nameWithType: "CosmosKeyCredential.CosmosKeyCredential(String key)"
  fullName: "com.azure.cosmos.CosmosKeyCredential.CosmosKeyCredential(String key)"
  overload: "com.azure.cosmos.CosmosKeyCredential.CosmosKeyCredential*"
  type: "Constructor"
  package: "com.azure.cosmos"
  syntax:
    content: "public CosmosKeyCredential(String key)"
    parameters:
    - id: "key"
      type: "java.lang.String"
- uid: "com.azure.cosmos.CosmosKeyCredential.getKey()"
  id: "getKey()"
  parent: "com.azure.cosmos.CosmosKeyCredential"
  langs:
  - "java"
  name: "getKey()"
  nameWithType: "CosmosKeyCredential.getKey()"
  fullName: "com.azure.cosmos.CosmosKeyCredential.getKey()"
  overload: "com.azure.cosmos.CosmosKeyCredential.getKey*"
  type: "Method"
  package: "com.azure.cosmos"
  summary: "Returns the key stored in Cosmos Key Credential"
  syntax:
    content: "public String getKey()"
    return:
      type: "java.lang.String"
      description: "key"
- uid: "com.azure.cosmos.CosmosKeyCredential.getKeyHashCode()"
  id: "getKeyHashCode()"
  parent: "com.azure.cosmos.CosmosKeyCredential"
  langs:
  - "java"
  name: "getKeyHashCode()"
  nameWithType: "CosmosKeyCredential.getKeyHashCode()"
  fullName: "com.azure.cosmos.CosmosKeyCredential.getKeyHashCode()"
  overload: "com.azure.cosmos.CosmosKeyCredential.getKeyHashCode*"
  type: "Method"
  package: "com.azure.cosmos"
  summary: "CosmosKeyCredential stores the computed hashcode of the key for performance improvements."
  syntax:
    content: "public int getKeyHashCode()"
    return:
      type: "int"
      description: "hashcode of the key"
- uid: "com.azure.cosmos.CosmosKeyCredential.setKey(java.lang.String)"
  id: "setKey(java.lang.String)"
  parent: "com.azure.cosmos.CosmosKeyCredential"
  langs:
  - "java"
  name: "setKey(String key)"
  nameWithType: "CosmosKeyCredential.setKey(String key)"
  fullName: "com.azure.cosmos.CosmosKeyCredential.setKey(String key)"
  overload: "com.azure.cosmos.CosmosKeyCredential.setKey*"
  type: "Method"
  package: "com.azure.cosmos"
  summary: "Sets the key to be used in CosmosKeyCredential"
  syntax:
    content: "public CosmosKeyCredential setKey(String key)"
    parameters:
    - id: "key"
      type: "java.lang.String"
      description: "key to be used in CosmosKeyCredential"
    return:
      type: "com.azure.cosmos.CosmosKeyCredential"
      description: "current CosmosKeyCredential"
references:
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "com.azure.cosmos.CosmosKeyCredential.CosmosKeyCredential*"
  name: "CosmosKeyCredential"
  nameWithType: "CosmosKeyCredential.CosmosKeyCredential"
  fullName: "com.azure.cosmos.CosmosKeyCredential.CosmosKeyCredential"
  package: "com.azure.cosmos"
- uid: "com.azure.cosmos.CosmosKeyCredential.getKey*"
  name: "getKey"
  nameWithType: "CosmosKeyCredential.getKey"
  fullName: "com.azure.cosmos.CosmosKeyCredential.getKey"
  package: "com.azure.cosmos"
- uid: "com.azure.cosmos.CosmosKeyCredential.setKey*"
  name: "setKey"
  nameWithType: "CosmosKeyCredential.setKey"
  fullName: "com.azure.cosmos.CosmosKeyCredential.setKey"
  package: "com.azure.cosmos"
- uid: "int"
  spec.java:
  - uid: "int"
    name: "int"
    fullName: "int"
- uid: "com.azure.cosmos.CosmosKeyCredential.getKeyHashCode*"
  name: "getKeyHashCode"
  nameWithType: "CosmosKeyCredential.getKeyHashCode"
  fullName: "com.azure.cosmos.CosmosKeyCredential.getKeyHashCode"
  package: "com.azure.cosmos"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
