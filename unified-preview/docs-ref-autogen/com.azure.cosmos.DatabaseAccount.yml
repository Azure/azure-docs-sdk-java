### YamlMime:ManagedReference
items:
- uid: "com.azure.cosmos.DatabaseAccount"
  id: "DatabaseAccount"
  parent: "com.azure.cosmos"
  children:
  - "com.azure.cosmos.DatabaseAccount.DatabaseAccount()"
  - "com.azure.cosmos.DatabaseAccount.DatabaseAccount(java.lang.String)"
  - "com.azure.cosmos.DatabaseAccount.getAddressesLink()"
  - "com.azure.cosmos.DatabaseAccount.getConsistencyPolicy()"
  - "com.azure.cosmos.DatabaseAccount.getDatabasesLink()"
  - "com.azure.cosmos.DatabaseAccount.getEnableMultipleWriteLocations()"
  - "com.azure.cosmos.DatabaseAccount.getMaxMediaStorageUsageInMB()"
  - "com.azure.cosmos.DatabaseAccount.getMediaLink()"
  - "com.azure.cosmos.DatabaseAccount.getMediaStorageUsageInMB()"
  - "com.azure.cosmos.DatabaseAccount.getQueryEngineConfiguration()"
  - "com.azure.cosmos.DatabaseAccount.getReadableLocations()"
  - "com.azure.cosmos.DatabaseAccount.getReplicationPolicy()"
  - "com.azure.cosmos.DatabaseAccount.getSystemReplicationPolicy()"
  - "com.azure.cosmos.DatabaseAccount.getWritableLocations()"
  - "com.azure.cosmos.DatabaseAccount.populatePropertyBag()"
  - "com.azure.cosmos.DatabaseAccount.setAddressesLink(java.lang.String)"
  - "com.azure.cosmos.DatabaseAccount.setDatabasesLink(java.lang.String)"
  - "com.azure.cosmos.DatabaseAccount.setEnableMultipleWriteLocations(boolean)"
  - "com.azure.cosmos.DatabaseAccount.setMaxMediaStorageUsageInMB(long)"
  - "com.azure.cosmos.DatabaseAccount.setMediaLink(java.lang.String)"
  - "com.azure.cosmos.DatabaseAccount.setMediaStorageUsageInMB(long)"
  - "com.azure.cosmos.DatabaseAccount.setReadableLocations(java.lang.Iterable<com.azure.cosmos.DatabaseAccountLocation>)"
  - "com.azure.cosmos.DatabaseAccount.setWritableLocations(java.lang.Iterable<com.azure.cosmos.DatabaseAccountLocation>)"
  - "com.azure.cosmos.DatabaseAccount.toJson()"
  langs:
  - "java"
  name: "DatabaseAccount"
  nameWithType: "DatabaseAccount"
  fullName: "com.azure.cosmos.DatabaseAccount"
  type: "Class"
  package: "com.azure.cosmos"
  summary: "Represents a database account in the Azure Cosmos DB database service."
  syntax:
    content: "public class DatabaseAccount extends Resource"
  inheritance:
  - "java.lang.Object"
  - "com.azure.cosmos.JsonSerializable"
  - "com.azure.cosmos.Resource"
  inheritedMembers:
  - "com.azure.cosmos.JsonSerializable.<T>getCollection(java.lang.String,java.lang.Class<T>,boolean...)"
  - "com.azure.cosmos.JsonSerializable.<T>getList(java.lang.String,java.lang.Class<T>,boolean...)"
  - "com.azure.cosmos.JsonSerializable.<T>getObject(java.lang.String,java.lang.Class<T>,boolean...)"
  - "com.azure.cosmos.JsonSerializable.<T>set(java.lang.String,T)"
  - "com.azure.cosmos.JsonSerializable.<T>toObject(java.lang.Class<T>)"
  - "com.azure.cosmos.JsonSerializable.get(java.lang.String)"
  - "com.azure.cosmos.JsonSerializable.getBoolean(java.lang.String)"
  - "com.azure.cosmos.JsonSerializable.getCollection(java.lang.String)"
  - "com.azure.cosmos.JsonSerializable.getDouble(java.lang.String)"
  - "com.azure.cosmos.JsonSerializable.getInt(java.lang.String)"
  - "com.azure.cosmos.JsonSerializable.getLogger()"
  - "com.azure.cosmos.JsonSerializable.getLong(java.lang.String)"
  - "com.azure.cosmos.JsonSerializable.getMap()"
  - "com.azure.cosmos.JsonSerializable.getObject(java.lang.String)"
  - "com.azure.cosmos.JsonSerializable.getObjectByPath(java.util.List<java.lang.String>)"
  - "com.azure.cosmos.JsonSerializable.getString(java.lang.String)"
  - "com.azure.cosmos.JsonSerializable.getValue(com.fasterxml.jackson.databind.JsonNode)"
  - "com.azure.cosmos.JsonSerializable.has(java.lang.String)"
  - "com.azure.cosmos.JsonSerializable.populatePropertyBag()"
  - "com.azure.cosmos.JsonSerializable.remove(java.lang.String)"
  - "com.azure.cosmos.JsonSerializable.setMapper(com.fasterxml.jackson.databind.ObjectMapper)"
  - "com.azure.cosmos.JsonSerializable.toJson()"
  - "com.azure.cosmos.JsonSerializable.toJson(com.azure.cosmos.SerializationFormattingPolicy)"
  - "com.azure.cosmos.JsonSerializable.toString()"
  - "com.azure.cosmos.Resource.getAltLink()"
  - "com.azure.cosmos.Resource.getETag()"
  - "com.azure.cosmos.Resource.getId()"
  - "com.azure.cosmos.Resource.getResourceId()"
  - "com.azure.cosmos.Resource.getSelfLink()"
  - "com.azure.cosmos.Resource.getTimestamp()"
  - "com.azure.cosmos.Resource.setAltLink(java.lang.String)"
  - "com.azure.cosmos.Resource.setETag(java.lang.String)"
  - "com.azure.cosmos.Resource.setId(java.lang.String)"
  - "com.azure.cosmos.Resource.setResourceId(java.lang.String)"
  - "com.azure.cosmos.Resource.setSelfLink(java.lang.String)"
  - "com.azure.cosmos.Resource.setTimestamp(java.time.OffsetDateTime)"
  - "com.azure.cosmos.Resource.validateResource(com.azure.cosmos.Resource)"
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.azure.cosmos.DatabaseAccount.DatabaseAccount()"
  id: "DatabaseAccount()"
  parent: "com.azure.cosmos.DatabaseAccount"
  langs:
  - "java"
  name: "DatabaseAccount()"
  nameWithType: "DatabaseAccount.DatabaseAccount()"
  fullName: "com.azure.cosmos.DatabaseAccount.DatabaseAccount()"
  overload: "com.azure.cosmos.DatabaseAccount.DatabaseAccount*"
  type: "Constructor"
  package: "com.azure.cosmos"
  summary: "Constructor."
  syntax:
    content: "public DatabaseAccount()"
- uid: "com.azure.cosmos.DatabaseAccount.DatabaseAccount(java.lang.String)"
  id: "DatabaseAccount(java.lang.String)"
  parent: "com.azure.cosmos.DatabaseAccount"
  langs:
  - "java"
  name: "DatabaseAccount(String jsonString)"
  nameWithType: "DatabaseAccount.DatabaseAccount(String jsonString)"
  fullName: "com.azure.cosmos.DatabaseAccount.DatabaseAccount(String jsonString)"
  overload: "com.azure.cosmos.DatabaseAccount.DatabaseAccount*"
  type: "Constructor"
  package: "com.azure.cosmos"
  summary: "Initialize a database account object from json string."
  syntax:
    content: "public DatabaseAccount(String jsonString)"
    parameters:
    - id: "jsonString"
      type: "java.lang.String"
      description: "the json string that represents the database account."
- uid: "com.azure.cosmos.DatabaseAccount.getAddressesLink()"
  id: "getAddressesLink()"
  parent: "com.azure.cosmos.DatabaseAccount"
  langs:
  - "java"
  name: "getAddressesLink()"
  nameWithType: "DatabaseAccount.getAddressesLink()"
  fullName: "com.azure.cosmos.DatabaseAccount.getAddressesLink()"
  overload: "com.azure.cosmos.DatabaseAccount.getAddressesLink*"
  type: "Method"
  package: "com.azure.cosmos"
  summary: "Get the addresseslink of the databaseAccount."
  syntax:
    content: " String getAddressesLink()"
    return:
      type: "java.lang.String"
      description: "the addresses link."
- uid: "com.azure.cosmos.DatabaseAccount.getConsistencyPolicy()"
  id: "getConsistencyPolicy()"
  parent: "com.azure.cosmos.DatabaseAccount"
  langs:
  - "java"
  name: "getConsistencyPolicy()"
  nameWithType: "DatabaseAccount.getConsistencyPolicy()"
  fullName: "com.azure.cosmos.DatabaseAccount.getConsistencyPolicy()"
  overload: "com.azure.cosmos.DatabaseAccount.getConsistencyPolicy*"
  type: "Method"
  package: "com.azure.cosmos"
  summary: "Gets the ConsistencyPolicy properties."
  syntax:
    content: " ConsistencyPolicy getConsistencyPolicy()"
    return:
      type: "com.azure.cosmos.ConsistencyPolicy"
      description: "the consistency policy."
- uid: "com.azure.cosmos.DatabaseAccount.getDatabasesLink()"
  id: "getDatabasesLink()"
  parent: "com.azure.cosmos.DatabaseAccount"
  langs:
  - "java"
  name: "getDatabasesLink()"
  nameWithType: "DatabaseAccount.getDatabasesLink()"
  fullName: "com.azure.cosmos.DatabaseAccount.getDatabasesLink()"
  overload: "com.azure.cosmos.DatabaseAccount.getDatabasesLink*"
  type: "Method"
  package: "com.azure.cosmos"
  summary: "Get the databases link of the databaseAccount."
  syntax:
    content: " String getDatabasesLink()"
    return:
      type: "java.lang.String"
      description: "the databases link."
- uid: "com.azure.cosmos.DatabaseAccount.getEnableMultipleWriteLocations()"
  id: "getEnableMultipleWriteLocations()"
  parent: "com.azure.cosmos.DatabaseAccount"
  langs:
  - "java"
  name: "getEnableMultipleWriteLocations()"
  nameWithType: "DatabaseAccount.getEnableMultipleWriteLocations()"
  fullName: "com.azure.cosmos.DatabaseAccount.getEnableMultipleWriteLocations()"
  overload: "com.azure.cosmos.DatabaseAccount.getEnableMultipleWriteLocations*"
  type: "Method"
  package: "com.azure.cosmos"
  syntax:
    content: "public boolean getEnableMultipleWriteLocations()"
    return:
      type: "boolean"
- uid: "com.azure.cosmos.DatabaseAccount.getMaxMediaStorageUsageInMB()"
  id: "getMaxMediaStorageUsageInMB()"
  parent: "com.azure.cosmos.DatabaseAccount"
  langs:
  - "java"
  name: "getMaxMediaStorageUsageInMB()"
  nameWithType: "DatabaseAccount.getMaxMediaStorageUsageInMB()"
  fullName: "com.azure.cosmos.DatabaseAccount.getMaxMediaStorageUsageInMB()"
  overload: "com.azure.cosmos.DatabaseAccount.getMaxMediaStorageUsageInMB*"
  type: "Method"
  package: "com.azure.cosmos"
  summary: "Attachment content (media) storage quota in MBs Retrieved from gateway."
  syntax:
    content: " long getMaxMediaStorageUsageInMB()"
    return:
      type: "long"
      description: "the max media storage usage in MB."
- uid: "com.azure.cosmos.DatabaseAccount.getMediaLink()"
  id: "getMediaLink()"
  parent: "com.azure.cosmos.DatabaseAccount"
  langs:
  - "java"
  name: "getMediaLink()"
  nameWithType: "DatabaseAccount.getMediaLink()"
  fullName: "com.azure.cosmos.DatabaseAccount.getMediaLink()"
  overload: "com.azure.cosmos.DatabaseAccount.getMediaLink*"
  type: "Method"
  package: "com.azure.cosmos"
  summary: "Get the medialink of the databaseAccount."
  syntax:
    content: " String getMediaLink()"
    return:
      type: "java.lang.String"
      description: "the media link."
- uid: "com.azure.cosmos.DatabaseAccount.getMediaStorageUsageInMB()"
  id: "getMediaStorageUsageInMB()"
  parent: "com.azure.cosmos.DatabaseAccount"
  langs:
  - "java"
  name: "getMediaStorageUsageInMB()"
  nameWithType: "DatabaseAccount.getMediaStorageUsageInMB()"
  fullName: "com.azure.cosmos.DatabaseAccount.getMediaStorageUsageInMB()"
  overload: "com.azure.cosmos.DatabaseAccount.getMediaStorageUsageInMB*"
  type: "Method"
  package: "com.azure.cosmos"
  summary: "Current attachment content (media) usage in MBs.\n\nRetrieved from gateway. Value is returned from cached information updated periodically and is not guaranteed to be real time."
  syntax:
    content: " long getMediaStorageUsageInMB()"
    return:
      type: "long"
      description: "the media storage usage in MB."
- uid: "com.azure.cosmos.DatabaseAccount.getQueryEngineConfiguration()"
  id: "getQueryEngineConfiguration()"
  parent: "com.azure.cosmos.DatabaseAccount"
  langs:
  - "java"
  name: "getQueryEngineConfiguration()"
  nameWithType: "DatabaseAccount.getQueryEngineConfiguration()"
  fullName: "com.azure.cosmos.DatabaseAccount.getQueryEngineConfiguration()"
  overload: "com.azure.cosmos.DatabaseAccount.getQueryEngineConfiguration*"
  type: "Method"
  package: "com.azure.cosmos"
  summary: "Gets the QueryEngineConfiuration properties."
  syntax:
    content: " Map<String,Object> getQueryEngineConfiguration()"
    return:
      type: "java.util.Map<java.lang.String,java.lang.Object>"
      description: "the query engine configuration."
- uid: "com.azure.cosmos.DatabaseAccount.getReadableLocations()"
  id: "getReadableLocations()"
  parent: "com.azure.cosmos.DatabaseAccount"
  langs:
  - "java"
  name: "getReadableLocations()"
  nameWithType: "DatabaseAccount.getReadableLocations()"
  fullName: "com.azure.cosmos.DatabaseAccount.getReadableLocations()"
  overload: "com.azure.cosmos.DatabaseAccount.getReadableLocations*"
  type: "Method"
  package: "com.azure.cosmos"
  summary: "Gets the list of readable locations for this database account."
  syntax:
    content: "public Iterable<DatabaseAccountLocation> getReadableLocations()"
    return:
      type: "java.lang.Iterable<com.azure.cosmos.DatabaseAccountLocation>"
      description: "the list of readable locations."
- uid: "com.azure.cosmos.DatabaseAccount.getReplicationPolicy()"
  id: "getReplicationPolicy()"
  parent: "com.azure.cosmos.DatabaseAccount"
  langs:
  - "java"
  name: "getReplicationPolicy()"
  nameWithType: "DatabaseAccount.getReplicationPolicy()"
  fullName: "com.azure.cosmos.DatabaseAccount.getReplicationPolicy()"
  overload: "com.azure.cosmos.DatabaseAccount.getReplicationPolicy*"
  type: "Method"
  package: "com.azure.cosmos"
  summary: "Gets the ReplicationPolicy properties."
  syntax:
    content: " ReplicationPolicy getReplicationPolicy()"
    return:
      type: "com.azure.cosmos.implementation.ReplicationPolicy"
      description: "the replication policy."
- uid: "com.azure.cosmos.DatabaseAccount.getSystemReplicationPolicy()"
  id: "getSystemReplicationPolicy()"
  parent: "com.azure.cosmos.DatabaseAccount"
  langs:
  - "java"
  name: "getSystemReplicationPolicy()"
  nameWithType: "DatabaseAccount.getSystemReplicationPolicy()"
  fullName: "com.azure.cosmos.DatabaseAccount.getSystemReplicationPolicy()"
  overload: "com.azure.cosmos.DatabaseAccount.getSystemReplicationPolicy*"
  type: "Method"
  package: "com.azure.cosmos"
  summary: "Gets the SystemReplicationPolicy properties."
  syntax:
    content: " ReplicationPolicy getSystemReplicationPolicy()"
    return:
      type: "com.azure.cosmos.implementation.ReplicationPolicy"
      description: "the system replication policy."
- uid: "com.azure.cosmos.DatabaseAccount.getWritableLocations()"
  id: "getWritableLocations()"
  parent: "com.azure.cosmos.DatabaseAccount"
  langs:
  - "java"
  name: "getWritableLocations()"
  nameWithType: "DatabaseAccount.getWritableLocations()"
  fullName: "com.azure.cosmos.DatabaseAccount.getWritableLocations()"
  overload: "com.azure.cosmos.DatabaseAccount.getWritableLocations*"
  type: "Method"
  package: "com.azure.cosmos"
  summary: "Gets the list of writable locations for this database account."
  syntax:
    content: "public Iterable<DatabaseAccountLocation> getWritableLocations()"
    return:
      type: "java.lang.Iterable<com.azure.cosmos.DatabaseAccountLocation>"
      description: "the list of writable locations."
- uid: "com.azure.cosmos.DatabaseAccount.populatePropertyBag()"
  id: "populatePropertyBag()"
  parent: "com.azure.cosmos.DatabaseAccount"
  langs:
  - "java"
  name: "populatePropertyBag()"
  nameWithType: "DatabaseAccount.populatePropertyBag()"
  fullName: "com.azure.cosmos.DatabaseAccount.populatePropertyBag()"
  overload: "com.azure.cosmos.DatabaseAccount.populatePropertyBag*"
  type: "Method"
  package: "com.azure.cosmos"
  syntax:
    content: " void populatePropertyBag()"
- uid: "com.azure.cosmos.DatabaseAccount.setAddressesLink(java.lang.String)"
  id: "setAddressesLink(java.lang.String)"
  parent: "com.azure.cosmos.DatabaseAccount"
  langs:
  - "java"
  name: "setAddressesLink(String addresseslink)"
  nameWithType: "DatabaseAccount.setAddressesLink(String addresseslink)"
  fullName: "com.azure.cosmos.DatabaseAccount.setAddressesLink(String addresseslink)"
  overload: "com.azure.cosmos.DatabaseAccount.setAddressesLink*"
  type: "Method"
  package: "com.azure.cosmos"
  summary: "Set the addresseslink of the databaseAccount."
  syntax:
    content: " void setAddressesLink(String addresseslink)"
    parameters:
    - id: "addresseslink"
      type: "java.lang.String"
      description: "the addresses link."
- uid: "com.azure.cosmos.DatabaseAccount.setDatabasesLink(java.lang.String)"
  id: "setDatabasesLink(java.lang.String)"
  parent: "com.azure.cosmos.DatabaseAccount"
  langs:
  - "java"
  name: "setDatabasesLink(String databasesLink)"
  nameWithType: "DatabaseAccount.setDatabasesLink(String databasesLink)"
  fullName: "com.azure.cosmos.DatabaseAccount.setDatabasesLink(String databasesLink)"
  overload: "com.azure.cosmos.DatabaseAccount.setDatabasesLink*"
  type: "Method"
  package: "com.azure.cosmos"
  summary: "Set the databases of the databaseAccount."
  syntax:
    content: " void setDatabasesLink(String databasesLink)"
    parameters:
    - id: "databasesLink"
      type: "java.lang.String"
      description: "the databases link."
- uid: "com.azure.cosmos.DatabaseAccount.setEnableMultipleWriteLocations(boolean)"
  id: "setEnableMultipleWriteLocations(boolean)"
  parent: "com.azure.cosmos.DatabaseAccount"
  langs:
  - "java"
  name: "setEnableMultipleWriteLocations(boolean value)"
  nameWithType: "DatabaseAccount.setEnableMultipleWriteLocations(boolean value)"
  fullName: "com.azure.cosmos.DatabaseAccount.setEnableMultipleWriteLocations(boolean value)"
  overload: "com.azure.cosmos.DatabaseAccount.setEnableMultipleWriteLocations*"
  type: "Method"
  package: "com.azure.cosmos"
  syntax:
    content: " void setEnableMultipleWriteLocations(boolean value)"
    parameters:
    - id: "value"
      type: "boolean"
- uid: "com.azure.cosmos.DatabaseAccount.setMaxMediaStorageUsageInMB(long)"
  id: "setMaxMediaStorageUsageInMB(long)"
  parent: "com.azure.cosmos.DatabaseAccount"
  langs:
  - "java"
  name: "setMaxMediaStorageUsageInMB(long value)"
  nameWithType: "DatabaseAccount.setMaxMediaStorageUsageInMB(long value)"
  fullName: "com.azure.cosmos.DatabaseAccount.setMaxMediaStorageUsageInMB(long value)"
  overload: "com.azure.cosmos.DatabaseAccount.setMaxMediaStorageUsageInMB*"
  type: "Method"
  package: "com.azure.cosmos"
  syntax:
    content: " void setMaxMediaStorageUsageInMB(long value)"
    parameters:
    - id: "value"
      type: "long"
- uid: "com.azure.cosmos.DatabaseAccount.setMediaLink(java.lang.String)"
  id: "setMediaLink(java.lang.String)"
  parent: "com.azure.cosmos.DatabaseAccount"
  langs:
  - "java"
  name: "setMediaLink(String medialink)"
  nameWithType: "DatabaseAccount.setMediaLink(String medialink)"
  fullName: "com.azure.cosmos.DatabaseAccount.setMediaLink(String medialink)"
  overload: "com.azure.cosmos.DatabaseAccount.setMediaLink*"
  type: "Method"
  package: "com.azure.cosmos"
  summary: "Set the medialink of the databaseAccount."
  syntax:
    content: " void setMediaLink(String medialink)"
    parameters:
    - id: "medialink"
      type: "java.lang.String"
      description: "the media link."
- uid: "com.azure.cosmos.DatabaseAccount.setMediaStorageUsageInMB(long)"
  id: "setMediaStorageUsageInMB(long)"
  parent: "com.azure.cosmos.DatabaseAccount"
  langs:
  - "java"
  name: "setMediaStorageUsageInMB(long value)"
  nameWithType: "DatabaseAccount.setMediaStorageUsageInMB(long value)"
  fullName: "com.azure.cosmos.DatabaseAccount.setMediaStorageUsageInMB(long value)"
  overload: "com.azure.cosmos.DatabaseAccount.setMediaStorageUsageInMB*"
  type: "Method"
  package: "com.azure.cosmos"
  syntax:
    content: " void setMediaStorageUsageInMB(long value)"
    parameters:
    - id: "value"
      type: "long"
- uid: "com.azure.cosmos.DatabaseAccount.setReadableLocations(java.lang.Iterable<com.azure.cosmos.DatabaseAccountLocation>)"
  id: "setReadableLocations(java.lang.Iterable<com.azure.cosmos.DatabaseAccountLocation>)"
  parent: "com.azure.cosmos.DatabaseAccount"
  langs:
  - "java"
  name: "setReadableLocations(Iterable<DatabaseAccountLocation> locations)"
  nameWithType: "DatabaseAccount.setReadableLocations(Iterable<DatabaseAccountLocation> locations)"
  fullName: "com.azure.cosmos.DatabaseAccount.setReadableLocations(Iterable<DatabaseAccountLocation> locations)"
  overload: "com.azure.cosmos.DatabaseAccount.setReadableLocations*"
  type: "Method"
  package: "com.azure.cosmos"
  summary: "Sets the list of readable locations for this database account.\n\nThe list of readable locations are returned by the service."
  syntax:
    content: " void setReadableLocations(Iterable<DatabaseAccountLocation> locations)"
    parameters:
    - id: "locations"
      type: "java.lang.Iterable<com.azure.cosmos.DatabaseAccountLocation>"
      description: "the list of readable locations."
- uid: "com.azure.cosmos.DatabaseAccount.setWritableLocations(java.lang.Iterable<com.azure.cosmos.DatabaseAccountLocation>)"
  id: "setWritableLocations(java.lang.Iterable<com.azure.cosmos.DatabaseAccountLocation>)"
  parent: "com.azure.cosmos.DatabaseAccount"
  langs:
  - "java"
  name: "setWritableLocations(Iterable<DatabaseAccountLocation> locations)"
  nameWithType: "DatabaseAccount.setWritableLocations(Iterable<DatabaseAccountLocation> locations)"
  fullName: "com.azure.cosmos.DatabaseAccount.setWritableLocations(Iterable<DatabaseAccountLocation> locations)"
  overload: "com.azure.cosmos.DatabaseAccount.setWritableLocations*"
  type: "Method"
  package: "com.azure.cosmos"
  summary: "Sets the list of writable locations for this database account.\n\nThe list of writable locations are returned by the service."
  syntax:
    content: " void setWritableLocations(Iterable<DatabaseAccountLocation> locations)"
    parameters:
    - id: "locations"
      type: "java.lang.Iterable<com.azure.cosmos.DatabaseAccountLocation>"
      description: "the list of writable locations."
- uid: "com.azure.cosmos.DatabaseAccount.toJson()"
  id: "toJson()"
  parent: "com.azure.cosmos.DatabaseAccount"
  langs:
  - "java"
  name: "toJson()"
  nameWithType: "DatabaseAccount.toJson()"
  fullName: "com.azure.cosmos.DatabaseAccount.toJson()"
  overload: "com.azure.cosmos.DatabaseAccount.toJson*"
  type: "Method"
  package: "com.azure.cosmos"
  syntax:
    content: "public String toJson()"
    return:
      type: "java.lang.String"
references:
- uid: "com.azure.cosmos.DatabaseAccount.DatabaseAccount*"
  name: "DatabaseAccount"
  nameWithType: "DatabaseAccount.DatabaseAccount"
  fullName: "com.azure.cosmos.DatabaseAccount.DatabaseAccount"
  package: "com.azure.cosmos"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "com.azure.cosmos.DatabaseAccount.getDatabasesLink*"
  name: "getDatabasesLink"
  nameWithType: "DatabaseAccount.getDatabasesLink"
  fullName: "com.azure.cosmos.DatabaseAccount.getDatabasesLink"
  package: "com.azure.cosmos"
- uid: "com.azure.cosmos.DatabaseAccount.setDatabasesLink*"
  name: "setDatabasesLink"
  nameWithType: "DatabaseAccount.setDatabasesLink"
  fullName: "com.azure.cosmos.DatabaseAccount.setDatabasesLink"
  package: "com.azure.cosmos"
- uid: "com.azure.cosmos.DatabaseAccount.getMediaLink*"
  name: "getMediaLink"
  nameWithType: "DatabaseAccount.getMediaLink"
  fullName: "com.azure.cosmos.DatabaseAccount.getMediaLink"
  package: "com.azure.cosmos"
- uid: "com.azure.cosmos.DatabaseAccount.setMediaLink*"
  name: "setMediaLink"
  nameWithType: "DatabaseAccount.setMediaLink"
  fullName: "com.azure.cosmos.DatabaseAccount.setMediaLink"
  package: "com.azure.cosmos"
- uid: "com.azure.cosmos.DatabaseAccount.getAddressesLink*"
  name: "getAddressesLink"
  nameWithType: "DatabaseAccount.getAddressesLink"
  fullName: "com.azure.cosmos.DatabaseAccount.getAddressesLink"
  package: "com.azure.cosmos"
- uid: "com.azure.cosmos.DatabaseAccount.setAddressesLink*"
  name: "setAddressesLink"
  nameWithType: "DatabaseAccount.setAddressesLink"
  fullName: "com.azure.cosmos.DatabaseAccount.setAddressesLink"
  package: "com.azure.cosmos"
- uid: "long"
  spec.java:
  - uid: "long"
    name: "long"
    fullName: "long"
- uid: "com.azure.cosmos.DatabaseAccount.getMaxMediaStorageUsageInMB*"
  name: "getMaxMediaStorageUsageInMB"
  nameWithType: "DatabaseAccount.getMaxMediaStorageUsageInMB"
  fullName: "com.azure.cosmos.DatabaseAccount.getMaxMediaStorageUsageInMB"
  package: "com.azure.cosmos"
- uid: "com.azure.cosmos.DatabaseAccount.setMaxMediaStorageUsageInMB*"
  name: "setMaxMediaStorageUsageInMB"
  nameWithType: "DatabaseAccount.setMaxMediaStorageUsageInMB"
  fullName: "com.azure.cosmos.DatabaseAccount.setMaxMediaStorageUsageInMB"
  package: "com.azure.cosmos"
- uid: "com.azure.cosmos.DatabaseAccount.getMediaStorageUsageInMB*"
  name: "getMediaStorageUsageInMB"
  nameWithType: "DatabaseAccount.getMediaStorageUsageInMB"
  fullName: "com.azure.cosmos.DatabaseAccount.getMediaStorageUsageInMB"
  package: "com.azure.cosmos"
- uid: "com.azure.cosmos.DatabaseAccount.setMediaStorageUsageInMB*"
  name: "setMediaStorageUsageInMB"
  nameWithType: "DatabaseAccount.setMediaStorageUsageInMB"
  fullName: "com.azure.cosmos.DatabaseAccount.setMediaStorageUsageInMB"
  package: "com.azure.cosmos"
- uid: "com.azure.cosmos.ConsistencyPolicy"
  name: "ConsistencyPolicy"
  nameWithType: "ConsistencyPolicy"
  fullName: "com.azure.cosmos.ConsistencyPolicy"
- uid: "com.azure.cosmos.DatabaseAccount.getConsistencyPolicy*"
  name: "getConsistencyPolicy"
  nameWithType: "DatabaseAccount.getConsistencyPolicy"
  fullName: "com.azure.cosmos.DatabaseAccount.getConsistencyPolicy"
  package: "com.azure.cosmos"
- uid: "com.azure.cosmos.implementation.ReplicationPolicy"
  name: "ReplicationPolicy"
  nameWithType: "ReplicationPolicy"
  fullName: "com.azure.cosmos.implementation.ReplicationPolicy"
- uid: "com.azure.cosmos.DatabaseAccount.getReplicationPolicy*"
  name: "getReplicationPolicy"
  nameWithType: "DatabaseAccount.getReplicationPolicy"
  fullName: "com.azure.cosmos.DatabaseAccount.getReplicationPolicy"
  package: "com.azure.cosmos"
- uid: "com.azure.cosmos.DatabaseAccount.getSystemReplicationPolicy*"
  name: "getSystemReplicationPolicy"
  nameWithType: "DatabaseAccount.getSystemReplicationPolicy"
  fullName: "com.azure.cosmos.DatabaseAccount.getSystemReplicationPolicy"
  package: "com.azure.cosmos"
- uid: "java.util.Map<java.lang.String,java.lang.Object>"
  spec.java:
  - uid: "java.util.Map"
    name: "Map"
    fullName: "java.util.Map"
  - name: "<"
    fullName: "<"
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
  - name: ","
    fullName: ","
  - uid: "java.lang.Object"
    name: "Object"
    fullName: "java.lang.Object"
  - name: ">"
    fullName: ">"
- uid: "com.azure.cosmos.DatabaseAccount.getQueryEngineConfiguration*"
  name: "getQueryEngineConfiguration"
  nameWithType: "DatabaseAccount.getQueryEngineConfiguration"
  fullName: "com.azure.cosmos.DatabaseAccount.getQueryEngineConfiguration"
  package: "com.azure.cosmos"
- uid: "java.lang.Iterable<com.azure.cosmos.DatabaseAccountLocation>"
  spec.java:
  - uid: "java.lang.Iterable"
    name: "Iterable"
    fullName: "java.lang.Iterable"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.cosmos.DatabaseAccountLocation"
    name: "DatabaseAccountLocation"
    fullName: "com.azure.cosmos.DatabaseAccountLocation"
  - name: ">"
    fullName: ">"
- uid: "com.azure.cosmos.DatabaseAccount.getWritableLocations*"
  name: "getWritableLocations"
  nameWithType: "DatabaseAccount.getWritableLocations"
  fullName: "com.azure.cosmos.DatabaseAccount.getWritableLocations"
  package: "com.azure.cosmos"
- uid: "com.azure.cosmos.DatabaseAccount.setWritableLocations*"
  name: "setWritableLocations"
  nameWithType: "DatabaseAccount.setWritableLocations"
  fullName: "com.azure.cosmos.DatabaseAccount.setWritableLocations"
  package: "com.azure.cosmos"
- uid: "com.azure.cosmos.DatabaseAccount.getReadableLocations*"
  name: "getReadableLocations"
  nameWithType: "DatabaseAccount.getReadableLocations"
  fullName: "com.azure.cosmos.DatabaseAccount.getReadableLocations"
  package: "com.azure.cosmos"
- uid: "com.azure.cosmos.DatabaseAccount.setReadableLocations*"
  name: "setReadableLocations"
  nameWithType: "DatabaseAccount.setReadableLocations"
  fullName: "com.azure.cosmos.DatabaseAccount.setReadableLocations"
  package: "com.azure.cosmos"
- uid: "boolean"
  spec.java:
  - uid: "boolean"
    name: "boolean"
    fullName: "boolean"
- uid: "com.azure.cosmos.DatabaseAccount.getEnableMultipleWriteLocations*"
  name: "getEnableMultipleWriteLocations"
  nameWithType: "DatabaseAccount.getEnableMultipleWriteLocations"
  fullName: "com.azure.cosmos.DatabaseAccount.getEnableMultipleWriteLocations"
  package: "com.azure.cosmos"
- uid: "com.azure.cosmos.DatabaseAccount.setEnableMultipleWriteLocations*"
  name: "setEnableMultipleWriteLocations"
  nameWithType: "DatabaseAccount.setEnableMultipleWriteLocations"
  fullName: "com.azure.cosmos.DatabaseAccount.setEnableMultipleWriteLocations"
  package: "com.azure.cosmos"
- uid: "com.azure.cosmos.DatabaseAccount.populatePropertyBag*"
  name: "populatePropertyBag"
  nameWithType: "DatabaseAccount.populatePropertyBag"
  fullName: "com.azure.cosmos.DatabaseAccount.populatePropertyBag"
  package: "com.azure.cosmos"
- uid: "com.azure.cosmos.DatabaseAccount.toJson*"
  name: "toJson"
  nameWithType: "DatabaseAccount.toJson"
  fullName: "com.azure.cosmos.DatabaseAccount.toJson"
  package: "com.azure.cosmos"
- uid: "com.azure.cosmos.Resource"
  name: "Resource"
  nameWithType: "Resource"
  fullName: "com.azure.cosmos.Resource"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "com.azure.cosmos.JsonSerializable.<T>getObject(java.lang.String,java.lang.Class<T>,boolean...)"
  name: "JsonSerializable.<T>getObject(String,Class<T>,)"
  nameWithType: "JsonSerializable.<T>getObject(String,Class<T>,)"
  fullName: "com.azure.cosmos.JsonSerializable.<T>getObject(java.lang.String,java.lang.Class<T>,boolean...)"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "com.azure.cosmos.JsonSerializable.<T>set(java.lang.String,T)"
  name: "JsonSerializable.<T>set(String,T)"
  nameWithType: "JsonSerializable.<T>set(String,T)"
  fullName: "com.azure.cosmos.JsonSerializable.<T>set(java.lang.String,T)"
- uid: "com.azure.cosmos.JsonSerializable.getObjectByPath(java.util.List<java.lang.String>)"
  name: "JsonSerializable.getObjectByPath(List<String>)"
  nameWithType: "JsonSerializable.getObjectByPath(List<String>)"
  fullName: "com.azure.cosmos.JsonSerializable.getObjectByPath(java.util.List<java.lang.String>)"
- uid: "com.azure.cosmos.JsonSerializable.toJson()"
  name: "JsonSerializable.toJson()"
  nameWithType: "JsonSerializable.toJson()"
  fullName: "com.azure.cosmos.JsonSerializable.toJson()"
- uid: "com.azure.cosmos.Resource.setId(java.lang.String)"
  name: "Resource.setId(String)"
  nameWithType: "Resource.setId(String)"
  fullName: "com.azure.cosmos.Resource.setId(java.lang.String)"
- uid: "com.azure.cosmos.JsonSerializable.getMap()"
  name: "JsonSerializable.getMap()"
  nameWithType: "JsonSerializable.getMap()"
  fullName: "com.azure.cosmos.JsonSerializable.getMap()"
- uid: "com.azure.cosmos.JsonSerializable.setMapper(com.fasterxml.jackson.databind.ObjectMapper)"
  name: "JsonSerializable.setMapper(ObjectMapper)"
  nameWithType: "JsonSerializable.setMapper(ObjectMapper)"
  fullName: "com.azure.cosmos.JsonSerializable.setMapper(com.fasterxml.jackson.databind.ObjectMapper)"
- uid: "com.azure.cosmos.Resource.getETag()"
  name: "Resource.getETag()"
  nameWithType: "Resource.getETag()"
  fullName: "com.azure.cosmos.Resource.getETag()"
- uid: "com.azure.cosmos.JsonSerializable.getCollection(java.lang.String)"
  name: "JsonSerializable.getCollection(String)"
  nameWithType: "JsonSerializable.getCollection(String)"
  fullName: "com.azure.cosmos.JsonSerializable.getCollection(java.lang.String)"
- uid: "com.azure.cosmos.JsonSerializable.getBoolean(java.lang.String)"
  name: "JsonSerializable.getBoolean(String)"
  nameWithType: "JsonSerializable.getBoolean(String)"
  fullName: "com.azure.cosmos.JsonSerializable.getBoolean(java.lang.String)"
- uid: "com.azure.cosmos.Resource.setETag(java.lang.String)"
  name: "Resource.setETag(String)"
  nameWithType: "Resource.setETag(String)"
  fullName: "com.azure.cosmos.Resource.setETag(java.lang.String)"
- uid: "com.azure.cosmos.JsonSerializable.remove(java.lang.String)"
  name: "JsonSerializable.remove(String)"
  nameWithType: "JsonSerializable.remove(String)"
  fullName: "com.azure.cosmos.JsonSerializable.remove(java.lang.String)"
- uid: "com.azure.cosmos.Resource.getAltLink()"
  name: "Resource.getAltLink()"
  nameWithType: "Resource.getAltLink()"
  fullName: "com.azure.cosmos.Resource.getAltLink()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "com.azure.cosmos.JsonSerializable.getValue(com.fasterxml.jackson.databind.JsonNode)"
  name: "JsonSerializable.getValue(JsonNode)"
  nameWithType: "JsonSerializable.getValue(JsonNode)"
  fullName: "com.azure.cosmos.JsonSerializable.getValue(com.fasterxml.jackson.databind.JsonNode)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "com.azure.cosmos.Resource.getSelfLink()"
  name: "Resource.getSelfLink()"
  nameWithType: "Resource.getSelfLink()"
  fullName: "com.azure.cosmos.Resource.getSelfLink()"
- uid: "com.azure.cosmos.Resource.setResourceId(java.lang.String)"
  name: "Resource.setResourceId(String)"
  nameWithType: "Resource.setResourceId(String)"
  fullName: "com.azure.cosmos.Resource.setResourceId(java.lang.String)"
- uid: "com.azure.cosmos.JsonSerializable.getObject(java.lang.String)"
  name: "JsonSerializable.getObject(String)"
  nameWithType: "JsonSerializable.getObject(String)"
  fullName: "com.azure.cosmos.JsonSerializable.getObject(java.lang.String)"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "com.azure.cosmos.Resource.validateResource(com.azure.cosmos.Resource)"
  name: "Resource.validateResource(Resource)"
  nameWithType: "Resource.validateResource(Resource)"
  fullName: "com.azure.cosmos.Resource.validateResource(com.azure.cosmos.Resource)"
- uid: "com.azure.cosmos.JsonSerializable.has(java.lang.String)"
  name: "JsonSerializable.has(String)"
  nameWithType: "JsonSerializable.has(String)"
  fullName: "com.azure.cosmos.JsonSerializable.has(java.lang.String)"
- uid: "com.azure.cosmos.JsonSerializable.getLong(java.lang.String)"
  name: "JsonSerializable.getLong(String)"
  nameWithType: "JsonSerializable.getLong(String)"
  fullName: "com.azure.cosmos.JsonSerializable.getLong(java.lang.String)"
- uid: "com.azure.cosmos.Resource.setSelfLink(java.lang.String)"
  name: "Resource.setSelfLink(String)"
  nameWithType: "Resource.setSelfLink(String)"
  fullName: "com.azure.cosmos.Resource.setSelfLink(java.lang.String)"
- uid: "com.azure.cosmos.JsonSerializable.toJson(com.azure.cosmos.SerializationFormattingPolicy)"
  name: "JsonSerializable.toJson(SerializationFormattingPolicy)"
  nameWithType: "JsonSerializable.toJson(SerializationFormattingPolicy)"
  fullName: "com.azure.cosmos.JsonSerializable.toJson(com.azure.cosmos.SerializationFormattingPolicy)"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "com.azure.cosmos.Resource.setTimestamp(java.time.OffsetDateTime)"
  name: "Resource.setTimestamp(OffsetDateTime)"
  nameWithType: "Resource.setTimestamp(OffsetDateTime)"
  fullName: "com.azure.cosmos.Resource.setTimestamp(java.time.OffsetDateTime)"
- uid: "com.azure.cosmos.Resource.setAltLink(java.lang.String)"
  name: "Resource.setAltLink(String)"
  nameWithType: "Resource.setAltLink(String)"
  fullName: "com.azure.cosmos.Resource.setAltLink(java.lang.String)"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "com.azure.cosmos.Resource.getId()"
  name: "Resource.getId()"
  nameWithType: "Resource.getId()"
  fullName: "com.azure.cosmos.Resource.getId()"
- uid: "com.azure.cosmos.JsonSerializable.getString(java.lang.String)"
  name: "JsonSerializable.getString(String)"
  nameWithType: "JsonSerializable.getString(String)"
  fullName: "com.azure.cosmos.JsonSerializable.getString(java.lang.String)"
- uid: "com.azure.cosmos.Resource.getResourceId()"
  name: "Resource.getResourceId()"
  nameWithType: "Resource.getResourceId()"
  fullName: "com.azure.cosmos.Resource.getResourceId()"
- uid: "com.azure.cosmos.JsonSerializable.populatePropertyBag()"
  name: "JsonSerializable.populatePropertyBag()"
  nameWithType: "JsonSerializable.populatePropertyBag()"
  fullName: "com.azure.cosmos.JsonSerializable.populatePropertyBag()"
- uid: "com.azure.cosmos.JsonSerializable.getInt(java.lang.String)"
  name: "JsonSerializable.getInt(String)"
  nameWithType: "JsonSerializable.getInt(String)"
  fullName: "com.azure.cosmos.JsonSerializable.getInt(java.lang.String)"
- uid: "com.azure.cosmos.JsonSerializable.getDouble(java.lang.String)"
  name: "JsonSerializable.getDouble(String)"
  nameWithType: "JsonSerializable.getDouble(String)"
  fullName: "com.azure.cosmos.JsonSerializable.getDouble(java.lang.String)"
- uid: "com.azure.cosmos.JsonSerializable.<T>toObject(java.lang.Class<T>)"
  name: "JsonSerializable.<T>toObject(Class<T>)"
  nameWithType: "JsonSerializable.<T>toObject(Class<T>)"
  fullName: "com.azure.cosmos.JsonSerializable.<T>toObject(java.lang.Class<T>)"
- uid: "com.azure.cosmos.JsonSerializable.getLogger()"
  name: "JsonSerializable.getLogger()"
  nameWithType: "JsonSerializable.getLogger()"
  fullName: "com.azure.cosmos.JsonSerializable.getLogger()"
- uid: "com.azure.cosmos.JsonSerializable.<T>getList(java.lang.String,java.lang.Class<T>,boolean...)"
  name: "JsonSerializable.<T>getList(String,Class<T>,)"
  nameWithType: "JsonSerializable.<T>getList(String,Class<T>,)"
  fullName: "com.azure.cosmos.JsonSerializable.<T>getList(java.lang.String,java.lang.Class<T>,boolean...)"
- uid: "com.azure.cosmos.Resource.getTimestamp()"
  name: "Resource.getTimestamp()"
  nameWithType: "Resource.getTimestamp()"
  fullName: "com.azure.cosmos.Resource.getTimestamp()"
- uid: "com.azure.cosmos.JsonSerializable.toString()"
  name: "JsonSerializable.toString()"
  nameWithType: "JsonSerializable.toString()"
  fullName: "com.azure.cosmos.JsonSerializable.toString()"
- uid: "com.azure.cosmos.JsonSerializable.<T>getCollection(java.lang.String,java.lang.Class<T>,boolean...)"
  name: "JsonSerializable.<T>getCollection(String,Class<T>,)"
  nameWithType: "JsonSerializable.<T>getCollection(String,Class<T>,)"
  fullName: "com.azure.cosmos.JsonSerializable.<T>getCollection(java.lang.String,java.lang.Class<T>,boolean...)"
- uid: "com.azure.cosmos.JsonSerializable.get(java.lang.String)"
  name: "JsonSerializable.get(String)"
  nameWithType: "JsonSerializable.get(String)"
  fullName: "com.azure.cosmos.JsonSerializable.get(java.lang.String)"
- uid: "java.lang.String,java.lang.Object"
  name: "String,Object"
  nameWithType: "String,Object"
  fullName: "java.lang.String,java.lang.Object"
- uid: "java.util.Map"
  name: "Map"
  nameWithType: "Map"
  fullName: "java.util.Map"
- uid: "com.azure.cosmos.DatabaseAccountLocation"
  name: "DatabaseAccountLocation"
  nameWithType: "DatabaseAccountLocation"
  fullName: "com.azure.cosmos.DatabaseAccountLocation"
- uid: "java.lang.Iterable"
  name: "Iterable"
  nameWithType: "Iterable"
  fullName: "java.lang.Iterable"
- uid: "T>,boolean...)"
  name: "T>,)"
  nameWithType: "T>,)"
  fullName: "T>,boolean...)"
- uid: "com.azure.cosmos.JsonSerializable."
  name: "JsonSerializable."
  nameWithType: "JsonSerializable."
  fullName: "com.azure.cosmos.JsonSerializable."
- uid: "T>getObject(java.lang.String,java.lang.Class"
  name: "T>getObject(String,Class"
  nameWithType: "T>getObject(String,Class"
  fullName: "T>getObject(java.lang.String,java.lang.Class"
- uid: "T>set(java.lang.String,T)"
  name: "T>set(String,T)"
  nameWithType: "T>set(String,T)"
  fullName: "T>set(java.lang.String,T)"
- uid: "com.azure.cosmos.JsonSerializable.getObjectByPath(java.util.List"
  name: "JsonSerializable.getObjectByPath(List"
  nameWithType: "JsonSerializable.getObjectByPath(List"
  fullName: "com.azure.cosmos.JsonSerializable.getObjectByPath(java.util.List"
- uid: "java.lang.String>)"
  name: "String>)"
  nameWithType: "String>)"
  fullName: "java.lang.String>)"
- uid: "T>toObject(java.lang.Class"
  name: "T>toObject(Class"
  nameWithType: "T>toObject(Class"
  fullName: "T>toObject(java.lang.Class"
- uid: "T>)"
  name: "T>)"
  nameWithType: "T>)"
  fullName: "T>)"
- uid: "T>getList(java.lang.String,java.lang.Class"
  name: "T>getList(String,Class"
  nameWithType: "T>getList(String,Class"
  fullName: "T>getList(java.lang.String,java.lang.Class"
- uid: "T>getCollection(java.lang.String,java.lang.Class"
  name: "T>getCollection(String,Class"
  nameWithType: "T>getCollection(String,Class"
  fullName: "T>getCollection(java.lang.String,java.lang.Class"
