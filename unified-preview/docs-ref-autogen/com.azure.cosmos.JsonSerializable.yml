### YamlMime:ManagedReference
items:
- uid: "com.azure.cosmos.JsonSerializable"
  id: "JsonSerializable"
  parent: "com.azure.cosmos"
  children:
  - "com.azure.cosmos.JsonSerializable.<T>getCollection(java.lang.String,java.lang.Class<T>,boolean...)"
  - "com.azure.cosmos.JsonSerializable.<T>getList(java.lang.String,java.lang.Class<T>,boolean...)"
  - "com.azure.cosmos.JsonSerializable.<T>getObject(java.lang.String,java.lang.Class<T>,boolean...)"
  - "com.azure.cosmos.JsonSerializable.<T>set(java.lang.String,T)"
  - "com.azure.cosmos.JsonSerializable.<T>toObject(java.lang.Class<T>)"
  - "com.azure.cosmos.JsonSerializable.JsonSerializable()"
  - "com.azure.cosmos.JsonSerializable.JsonSerializable(com.fasterxml.jackson.databind.node.ObjectNode)"
  - "com.azure.cosmos.JsonSerializable.JsonSerializable(java.lang.String)"
  - "com.azure.cosmos.JsonSerializable.JsonSerializable(java.lang.String,com.fasterxml.jackson.databind.ObjectMapper)"
  - "com.azure.cosmos.JsonSerializable.get(java.lang.String)"
  - "com.azure.cosmos.JsonSerializable.getBoolean(java.lang.String)"
  - "com.azure.cosmos.JsonSerializable.getCollection(java.lang.String)"
  - "com.azure.cosmos.JsonSerializable.getDouble(java.lang.String)"
  - "com.azure.cosmos.JsonSerializable.getInt(java.lang.String)"
  - "com.azure.cosmos.JsonSerializable.getLogger()"
  - "com.azure.cosmos.JsonSerializable.getLong(java.lang.String)"
  - "com.azure.cosmos.JsonSerializable.getMap()"
  - "com.azure.cosmos.JsonSerializable.getObject(java.lang.String)"
  - "com.azure.cosmos.JsonSerializable.getObjectByPath(java.util.List<java.lang.String>)"
  - "com.azure.cosmos.JsonSerializable.getString(java.lang.String)"
  - "com.azure.cosmos.JsonSerializable.getValue(com.fasterxml.jackson.databind.JsonNode)"
  - "com.azure.cosmos.JsonSerializable.has(java.lang.String)"
  - "com.azure.cosmos.JsonSerializable.populatePropertyBag()"
  - "com.azure.cosmos.JsonSerializable.propertyBag"
  - "com.azure.cosmos.JsonSerializable.remove(java.lang.String)"
  - "com.azure.cosmos.JsonSerializable.setMapper(com.fasterxml.jackson.databind.ObjectMapper)"
  - "com.azure.cosmos.JsonSerializable.toJson()"
  - "com.azure.cosmos.JsonSerializable.toJson(com.azure.cosmos.SerializationFormattingPolicy)"
  - "com.azure.cosmos.JsonSerializable.toString()"
  langs:
  - "java"
  name: "JsonSerializable"
  nameWithType: "JsonSerializable"
  fullName: "com.azure.cosmos.JsonSerializable"
  type: "Class"
  package: "com.azure.cosmos"
  summary: "Represents a base resource that can be serialized to JSON in the Azure Cosmos DB database service."
  syntax:
    content: "public class JsonSerializable"
  inheritance:
  - "java.lang.Object"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.azure.cosmos.JsonSerializable.<T>getCollection(java.lang.String,java.lang.Class<T>,boolean...)"
  id: "<T>getCollection(java.lang.String,java.lang.Class<T>,boolean...)"
  parent: "com.azure.cosmos.JsonSerializable"
  langs:
  - "java"
  name: "<T>getCollection(String propertyName, Class<T> c, boolean[] convertFromCamelCase)"
  nameWithType: "JsonSerializable.<T>getCollection(String propertyName, Class<T> c, boolean[] convertFromCamelCase)"
  fullName: "com.azure.cosmos.JsonSerializable.<T>getCollection(String propertyName, Class<T> c, boolean[] convertFromCamelCase)"
  overload: "com.azure.cosmos.JsonSerializable.getCollection*"
  type: "Method"
  package: "com.azure.cosmos"
  summary: "Gets an object collection."
  syntax:
    content: "public Collection<T> <T>getCollection(String propertyName, Class<T> c, boolean[] convertFromCamelCase)"
    parameters:
    - id: "propertyName"
      type: "java.lang.String"
      description: "the property to get"
    - id: "c"
      type: "java.lang.Class<T>"
      description: "the class of the object. If c is a POJO class, it must be a member (and not an anonymous or local)\n and a static one."
    - id: "convertFromCamelCase"
      type: "boolean[]"
      description: "boolean indicating if String should be converted from camel case to upper case\n separated by underscore,\n before converting to required class."
    return:
      type: "java.util.Collection<T>"
      description: "the object collection."
- uid: "com.azure.cosmos.JsonSerializable.<T>getList(java.lang.String,java.lang.Class<T>,boolean...)"
  id: "<T>getList(java.lang.String,java.lang.Class<T>,boolean...)"
  parent: "com.azure.cosmos.JsonSerializable"
  langs:
  - "java"
  name: "<T>getList(String propertyName, Class<T> c, boolean[] convertFromCamelCase)"
  nameWithType: "JsonSerializable.<T>getList(String propertyName, Class<T> c, boolean[] convertFromCamelCase)"
  fullName: "com.azure.cosmos.JsonSerializable.<T>getList(String propertyName, Class<T> c, boolean[] convertFromCamelCase)"
  overload: "com.azure.cosmos.JsonSerializable.getList*"
  type: "Method"
  package: "com.azure.cosmos"
  summary: "Gets an object List."
  syntax:
    content: "public List<T> <T>getList(String propertyName, Class<T> c, boolean[] convertFromCamelCase)"
    parameters:
    - id: "propertyName"
      type: "java.lang.String"
      description: "the property to get"
    - id: "c"
      type: "java.lang.Class<T>"
      description: "the class of the object. If c is a POJO class, it must be a member (and not an anonymous or local)\n and a static one."
    - id: "convertFromCamelCase"
      type: "boolean[]"
      description: "boolean indicating if String should be converted from camel case to upper case\n separated by underscore,\n before converting to required class."
    return:
      type: "java.util.List<T>"
      description: "the object collection."
- uid: "com.azure.cosmos.JsonSerializable.<T>getObject(java.lang.String,java.lang.Class<T>,boolean...)"
  id: "<T>getObject(java.lang.String,java.lang.Class<T>,boolean...)"
  parent: "com.azure.cosmos.JsonSerializable"
  langs:
  - "java"
  name: "<T>getObject(String propertyName, Class<T> c, boolean[] convertFromCamelCase)"
  nameWithType: "JsonSerializable.<T>getObject(String propertyName, Class<T> c, boolean[] convertFromCamelCase)"
  fullName: "com.azure.cosmos.JsonSerializable.<T>getObject(String propertyName, Class<T> c, boolean[] convertFromCamelCase)"
  overload: "com.azure.cosmos.JsonSerializable.getObject*"
  type: "Method"
  package: "com.azure.cosmos"
  summary: "Gets an object value."
  syntax:
    content: "public T <T>getObject(String propertyName, Class<T> c, boolean[] convertFromCamelCase)"
    parameters:
    - id: "propertyName"
      type: "java.lang.String"
      description: "the property to get."
    - id: "c"
      type: "java.lang.Class<T>"
      description: "the class of the object. If c is a POJO class, it must be a member (and not an anonymous or local)\n and a static one."
    - id: "convertFromCamelCase"
      type: "boolean[]"
      description: "boolean indicating if String should be converted from camel case to upper case\n separated by underscore,\n before converting to required class."
    return:
      type: "T"
      description: "the object value."
- uid: "com.azure.cosmos.JsonSerializable.<T>set(java.lang.String,T)"
  id: "<T>set(java.lang.String,T)"
  parent: "com.azure.cosmos.JsonSerializable"
  langs:
  - "java"
  name: "<T>set(String propertyName, T value)"
  nameWithType: "JsonSerializable.<T>set(String propertyName, T value)"
  fullName: "com.azure.cosmos.JsonSerializable.<T>set(String propertyName, T value)"
  overload: "com.azure.cosmos.JsonSerializable.set*"
  type: "Method"
  package: "com.azure.cosmos"
  summary: "Sets the value of a property."
  syntax:
    content: " void <T>set(String propertyName, T value)"
    parameters:
    - id: "propertyName"
      type: "java.lang.String"
      description: "the property to set."
    - id: "value"
      type: "T"
      description: "the value of the property."
- uid: "com.azure.cosmos.JsonSerializable.<T>toObject(java.lang.Class<T>)"
  id: "<T>toObject(java.lang.Class<T>)"
  parent: "com.azure.cosmos.JsonSerializable"
  langs:
  - "java"
  name: "<T>toObject(Class<T> c)"
  nameWithType: "JsonSerializable.<T>toObject(Class<T> c)"
  fullName: "com.azure.cosmos.JsonSerializable.<T>toObject(Class<T> c)"
  overload: "com.azure.cosmos.JsonSerializable.toObject*"
  type: "Method"
  package: "com.azure.cosmos"
  summary: "Converts to an Object (only POJOs and JSONObject are supported)."
  syntax:
    content: "public T <T>toObject(Class<T> c)"
    parameters:
    - id: "c"
      type: "java.lang.Class<T>"
      description: "the class of the object, either a POJO class or JSONObject. If c is a POJO class, it must be a member\n (and not an anonymous or local) and a static one."
    return:
      type: "T"
      description: "the POJO."
- uid: "com.azure.cosmos.JsonSerializable.JsonSerializable()"
  id: "JsonSerializable()"
  parent: "com.azure.cosmos.JsonSerializable"
  langs:
  - "java"
  name: "JsonSerializable()"
  nameWithType: "JsonSerializable.JsonSerializable()"
  fullName: "com.azure.cosmos.JsonSerializable.JsonSerializable()"
  overload: "com.azure.cosmos.JsonSerializable.JsonSerializable*"
  type: "Constructor"
  package: "com.azure.cosmos"
  syntax:
    content: "protected JsonSerializable()"
- uid: "com.azure.cosmos.JsonSerializable.JsonSerializable(com.fasterxml.jackson.databind.node.ObjectNode)"
  id: "JsonSerializable(com.fasterxml.jackson.databind.node.ObjectNode)"
  parent: "com.azure.cosmos.JsonSerializable"
  langs:
  - "java"
  name: "JsonSerializable(ObjectNode objectNode)"
  nameWithType: "JsonSerializable.JsonSerializable(ObjectNode objectNode)"
  fullName: "com.azure.cosmos.JsonSerializable.JsonSerializable(ObjectNode objectNode)"
  overload: "com.azure.cosmos.JsonSerializable.JsonSerializable*"
  type: "Constructor"
  package: "com.azure.cosmos"
  summary: "Constructor."
  syntax:
    content: " JsonSerializable(ObjectNode objectNode)"
    parameters:
    - id: "objectNode"
      type: "com.fasterxml.jackson.databind.node.ObjectNode"
      description: "the <xref uid=\"\" data-throw-if-not-resolved=\"false\">ObjectNode</xref> that represent the <xref uid=\"com.azure.cosmos.JsonSerializable\" data-throw-if-not-resolved=\"false\">JsonSerializable</xref>"
- uid: "com.azure.cosmos.JsonSerializable.JsonSerializable(java.lang.String)"
  id: "JsonSerializable(java.lang.String)"
  parent: "com.azure.cosmos.JsonSerializable"
  langs:
  - "java"
  name: "JsonSerializable(String jsonString)"
  nameWithType: "JsonSerializable.JsonSerializable(String jsonString)"
  fullName: "com.azure.cosmos.JsonSerializable.JsonSerializable(String jsonString)"
  overload: "com.azure.cosmos.JsonSerializable.JsonSerializable*"
  type: "Constructor"
  package: "com.azure.cosmos"
  summary: "Constructor."
  syntax:
    content: "protected JsonSerializable(String jsonString)"
    parameters:
    - id: "jsonString"
      type: "java.lang.String"
      description: "the json string that represents the JsonSerializable."
- uid: "com.azure.cosmos.JsonSerializable.JsonSerializable(java.lang.String,com.fasterxml.jackson.databind.ObjectMapper)"
  id: "JsonSerializable(java.lang.String,com.fasterxml.jackson.databind.ObjectMapper)"
  parent: "com.azure.cosmos.JsonSerializable"
  langs:
  - "java"
  name: "JsonSerializable(String jsonString, ObjectMapper objectMapper)"
  nameWithType: "JsonSerializable.JsonSerializable(String jsonString, ObjectMapper objectMapper)"
  fullName: "com.azure.cosmos.JsonSerializable.JsonSerializable(String jsonString, ObjectMapper objectMapper)"
  overload: "com.azure.cosmos.JsonSerializable.JsonSerializable*"
  type: "Constructor"
  package: "com.azure.cosmos"
  summary: "Constructor."
  syntax:
    content: " JsonSerializable(String jsonString, ObjectMapper objectMapper)"
    parameters:
    - id: "jsonString"
      type: "java.lang.String"
      description: "the json string that represents the JsonSerializable."
    - id: "objectMapper"
      type: "com.fasterxml.jackson.databind.ObjectMapper"
      description: "the custom object mapper"
- uid: "com.azure.cosmos.JsonSerializable.get(java.lang.String)"
  id: "get(java.lang.String)"
  parent: "com.azure.cosmos.JsonSerializable"
  langs:
  - "java"
  name: "get(String propertyName)"
  nameWithType: "JsonSerializable.get(String propertyName)"
  fullName: "com.azure.cosmos.JsonSerializable.get(String propertyName)"
  overload: "com.azure.cosmos.JsonSerializable.get*"
  type: "Method"
  package: "com.azure.cosmos"
  summary: "Gets a property value as Object."
  syntax:
    content: "public Object get(String propertyName)"
    parameters:
    - id: "propertyName"
      type: "java.lang.String"
      description: "the property to get."
    return:
      type: "java.lang.Object"
      description: "the value of the property."
- uid: "com.azure.cosmos.JsonSerializable.getBoolean(java.lang.String)"
  id: "getBoolean(java.lang.String)"
  parent: "com.azure.cosmos.JsonSerializable"
  langs:
  - "java"
  name: "getBoolean(String propertyName)"
  nameWithType: "JsonSerializable.getBoolean(String propertyName)"
  fullName: "com.azure.cosmos.JsonSerializable.getBoolean(String propertyName)"
  overload: "com.azure.cosmos.JsonSerializable.getBoolean*"
  type: "Method"
  package: "com.azure.cosmos"
  summary: "Gets a boolean value."
  syntax:
    content: "public Boolean getBoolean(String propertyName)"
    parameters:
    - id: "propertyName"
      type: "java.lang.String"
      description: "the property to get."
    return:
      type: "java.lang.Boolean"
      description: "the boolean value."
- uid: "com.azure.cosmos.JsonSerializable.getCollection(java.lang.String)"
  id: "getCollection(java.lang.String)"
  parent: "com.azure.cosmos.JsonSerializable"
  langs:
  - "java"
  name: "getCollection(String propertyName)"
  nameWithType: "JsonSerializable.getCollection(String propertyName)"
  fullName: "com.azure.cosmos.JsonSerializable.getCollection(String propertyName)"
  overload: "com.azure.cosmos.JsonSerializable.getCollection*"
  type: "Method"
  package: "com.azure.cosmos"
  summary: "Gets a JSONObject collection."
  syntax:
    content: " Collection<ObjectNode> getCollection(String propertyName)"
    parameters:
    - id: "propertyName"
      type: "java.lang.String"
      description: "the property to get."
    return:
      type: "java.util.Collection<com.fasterxml.jackson.databind.node.ObjectNode>"
      description: "the JSONObject collection."
- uid: "com.azure.cosmos.JsonSerializable.getDouble(java.lang.String)"
  id: "getDouble(java.lang.String)"
  parent: "com.azure.cosmos.JsonSerializable"
  langs:
  - "java"
  name: "getDouble(String propertyName)"
  nameWithType: "JsonSerializable.getDouble(String propertyName)"
  fullName: "com.azure.cosmos.JsonSerializable.getDouble(String propertyName)"
  overload: "com.azure.cosmos.JsonSerializable.getDouble*"
  type: "Method"
  package: "com.azure.cosmos"
  summary: "Gets a double value."
  syntax:
    content: "public Double getDouble(String propertyName)"
    parameters:
    - id: "propertyName"
      type: "java.lang.String"
      description: "the property to get."
    return:
      type: "java.lang.Double"
      description: "the double value."
- uid: "com.azure.cosmos.JsonSerializable.getInt(java.lang.String)"
  id: "getInt(java.lang.String)"
  parent: "com.azure.cosmos.JsonSerializable"
  langs:
  - "java"
  name: "getInt(String propertyName)"
  nameWithType: "JsonSerializable.getInt(String propertyName)"
  fullName: "com.azure.cosmos.JsonSerializable.getInt(String propertyName)"
  overload: "com.azure.cosmos.JsonSerializable.getInt*"
  type: "Method"
  package: "com.azure.cosmos"
  summary: "Gets an integer value."
  syntax:
    content: "public Integer getInt(String propertyName)"
    parameters:
    - id: "propertyName"
      type: "java.lang.String"
      description: "the property to get."
    return:
      type: "java.lang.Integer"
      description: "the boolean value"
- uid: "com.azure.cosmos.JsonSerializable.getLogger()"
  id: "getLogger()"
  parent: "com.azure.cosmos.JsonSerializable"
  langs:
  - "java"
  name: "getLogger()"
  nameWithType: "JsonSerializable.getLogger()"
  fullName: "com.azure.cosmos.JsonSerializable.getLogger()"
  overload: "com.azure.cosmos.JsonSerializable.getLogger*"
  type: "Method"
  package: "com.azure.cosmos"
  syntax:
    content: "protected Logger getLogger()"
    return:
      type: "org.slf4j.Logger"
- uid: "com.azure.cosmos.JsonSerializable.getLong(java.lang.String)"
  id: "getLong(java.lang.String)"
  parent: "com.azure.cosmos.JsonSerializable"
  langs:
  - "java"
  name: "getLong(String propertyName)"
  nameWithType: "JsonSerializable.getLong(String propertyName)"
  fullName: "com.azure.cosmos.JsonSerializable.getLong(String propertyName)"
  overload: "com.azure.cosmos.JsonSerializable.getLong*"
  type: "Method"
  package: "com.azure.cosmos"
  summary: "Gets a long value."
  syntax:
    content: "public Long getLong(String propertyName)"
    parameters:
    - id: "propertyName"
      type: "java.lang.String"
      description: "the property to get."
    return:
      type: "java.lang.Long"
      description: "the long value"
- uid: "com.azure.cosmos.JsonSerializable.getMap()"
  id: "getMap()"
  parent: "com.azure.cosmos.JsonSerializable"
  langs:
  - "java"
  name: "getMap()"
  nameWithType: "JsonSerializable.getMap()"
  fullName: "com.azure.cosmos.JsonSerializable.getMap()"
  overload: "com.azure.cosmos.JsonSerializable.getMap*"
  type: "Method"
  package: "com.azure.cosmos"
  summary: "Returns the propertybag(JSONObject) in a hashMap"
  syntax:
    content: "public Map<String,Object> getMap()"
    return:
      type: "java.util.Map<java.lang.String,java.lang.Object>"
      description: "the HashMap."
- uid: "com.azure.cosmos.JsonSerializable.getObject(java.lang.String)"
  id: "getObject(java.lang.String)"
  parent: "com.azure.cosmos.JsonSerializable"
  langs:
  - "java"
  name: "getObject(String propertyName)"
  nameWithType: "JsonSerializable.getObject(String propertyName)"
  fullName: "com.azure.cosmos.JsonSerializable.getObject(String propertyName)"
  overload: "com.azure.cosmos.JsonSerializable.getObject*"
  type: "Method"
  package: "com.azure.cosmos"
  summary: "Gets a JSONObject."
  syntax:
    content: " ObjectNode getObject(String propertyName)"
    parameters:
    - id: "propertyName"
      type: "java.lang.String"
      description: "the property to get."
    return:
      type: "com.fasterxml.jackson.databind.node.ObjectNode"
      description: "the JSONObject."
- uid: "com.azure.cosmos.JsonSerializable.getObjectByPath(java.util.List<java.lang.String>)"
  id: "getObjectByPath(java.util.List<java.lang.String>)"
  parent: "com.azure.cosmos.JsonSerializable"
  langs:
  - "java"
  name: "getObjectByPath(List<String> propertyNames)"
  nameWithType: "JsonSerializable.getObjectByPath(List<String> propertyNames)"
  fullName: "com.azure.cosmos.JsonSerializable.getObjectByPath(List<String> propertyNames)"
  overload: "com.azure.cosmos.JsonSerializable.getObjectByPath*"
  type: "Method"
  package: "com.azure.cosmos"
  summary: "Gets the value of a property identified by an array of property names that forms the path."
  syntax:
    content: "public Object getObjectByPath(List<String> propertyNames)"
    parameters:
    - id: "propertyNames"
      type: "java.util.List<java.lang.String>"
      description: "that form the path to the property to get."
    return:
      type: "java.lang.Object"
      description: "the value of the property."
- uid: "com.azure.cosmos.JsonSerializable.getString(java.lang.String)"
  id: "getString(java.lang.String)"
  parent: "com.azure.cosmos.JsonSerializable"
  langs:
  - "java"
  name: "getString(String propertyName)"
  nameWithType: "JsonSerializable.getString(String propertyName)"
  fullName: "com.azure.cosmos.JsonSerializable.getString(String propertyName)"
  overload: "com.azure.cosmos.JsonSerializable.getString*"
  type: "Method"
  package: "com.azure.cosmos"
  summary: "Gets a string value."
  syntax:
    content: "public String getString(String propertyName)"
    parameters:
    - id: "propertyName"
      type: "java.lang.String"
      description: "the property to get."
    return:
      type: "java.lang.String"
      description: "the string value."
- uid: "com.azure.cosmos.JsonSerializable.getValue(com.fasterxml.jackson.databind.JsonNode)"
  id: "getValue(com.fasterxml.jackson.databind.JsonNode)"
  parent: "com.azure.cosmos.JsonSerializable"
  langs:
  - "java"
  name: "getValue(JsonNode value)"
  nameWithType: "JsonSerializable.getValue(JsonNode value)"
  fullName: "com.azure.cosmos.JsonSerializable.getValue(JsonNode value)"
  overload: "com.azure.cosmos.JsonSerializable.getValue*"
  type: "Method"
  package: "com.azure.cosmos"
  syntax:
    content: "static Object getValue(JsonNode value)"
    parameters:
    - id: "value"
      type: "com.fasterxml.jackson.databind.JsonNode"
    return:
      type: "java.lang.Object"
- uid: "com.azure.cosmos.JsonSerializable.has(java.lang.String)"
  id: "has(java.lang.String)"
  parent: "com.azure.cosmos.JsonSerializable"
  langs:
  - "java"
  name: "has(String propertyName)"
  nameWithType: "JsonSerializable.has(String propertyName)"
  fullName: "com.azure.cosmos.JsonSerializable.has(String propertyName)"
  overload: "com.azure.cosmos.JsonSerializable.has*"
  type: "Method"
  package: "com.azure.cosmos"
  summary: "Checks whether a property exists."
  syntax:
    content: "public boolean has(String propertyName)"
    parameters:
    - id: "propertyName"
      type: "java.lang.String"
      description: "the property to look up."
    return:
      type: "boolean"
      description: "true if the property exists."
- uid: "com.azure.cosmos.JsonSerializable.populatePropertyBag()"
  id: "populatePropertyBag()"
  parent: "com.azure.cosmos.JsonSerializable"
  langs:
  - "java"
  name: "populatePropertyBag()"
  nameWithType: "JsonSerializable.populatePropertyBag()"
  fullName: "com.azure.cosmos.JsonSerializable.populatePropertyBag()"
  overload: "com.azure.cosmos.JsonSerializable.populatePropertyBag*"
  type: "Method"
  package: "com.azure.cosmos"
  syntax:
    content: " void populatePropertyBag()"
- uid: "com.azure.cosmos.JsonSerializable.propertyBag"
  id: "propertyBag"
  parent: "com.azure.cosmos.JsonSerializable"
  langs:
  - "java"
  name: "propertyBag"
  nameWithType: "JsonSerializable.propertyBag"
  fullName: "com.azure.cosmos.JsonSerializable.propertyBag"
  type: "Field"
  package: "com.azure.cosmos"
  syntax:
    content: "transient ObjectNode propertyBag"
    return:
      type: "com.fasterxml.jackson.databind.node.ObjectNode"
- uid: "com.azure.cosmos.JsonSerializable.remove(java.lang.String)"
  id: "remove(java.lang.String)"
  parent: "com.azure.cosmos.JsonSerializable"
  langs:
  - "java"
  name: "remove(String propertyName)"
  nameWithType: "JsonSerializable.remove(String propertyName)"
  fullName: "com.azure.cosmos.JsonSerializable.remove(String propertyName)"
  overload: "com.azure.cosmos.JsonSerializable.remove*"
  type: "Method"
  package: "com.azure.cosmos"
  summary: "Removes a value by propertyName."
  syntax:
    content: " void remove(String propertyName)"
    parameters:
    - id: "propertyName"
      type: "java.lang.String"
      description: "the property to remove."
- uid: "com.azure.cosmos.JsonSerializable.setMapper(com.fasterxml.jackson.databind.ObjectMapper)"
  id: "setMapper(com.fasterxml.jackson.databind.ObjectMapper)"
  parent: "com.azure.cosmos.JsonSerializable"
  langs:
  - "java"
  name: "setMapper(ObjectMapper om)"
  nameWithType: "JsonSerializable.setMapper(ObjectMapper om)"
  fullName: "com.azure.cosmos.JsonSerializable.setMapper(ObjectMapper om)"
  overload: "com.azure.cosmos.JsonSerializable.setMapper*"
  type: "Method"
  package: "com.azure.cosmos"
  syntax:
    content: " void setMapper(ObjectMapper om)"
    parameters:
    - id: "om"
      type: "com.fasterxml.jackson.databind.ObjectMapper"
- uid: "com.azure.cosmos.JsonSerializable.toJson()"
  id: "toJson()"
  parent: "com.azure.cosmos.JsonSerializable"
  langs:
  - "java"
  name: "toJson()"
  nameWithType: "JsonSerializable.toJson()"
  fullName: "com.azure.cosmos.JsonSerializable.toJson()"
  overload: "com.azure.cosmos.JsonSerializable.toJson*"
  type: "Method"
  package: "com.azure.cosmos"
  summary: "Converts to a JSON string."
  syntax:
    content: "public String toJson()"
    return:
      type: "java.lang.String"
      description: "the JSON string."
- uid: "com.azure.cosmos.JsonSerializable.toJson(com.azure.cosmos.SerializationFormattingPolicy)"
  id: "toJson(com.azure.cosmos.SerializationFormattingPolicy)"
  parent: "com.azure.cosmos.JsonSerializable"
  langs:
  - "java"
  name: "toJson(SerializationFormattingPolicy formattingPolicy)"
  nameWithType: "JsonSerializable.toJson(SerializationFormattingPolicy formattingPolicy)"
  fullName: "com.azure.cosmos.JsonSerializable.toJson(SerializationFormattingPolicy formattingPolicy)"
  overload: "com.azure.cosmos.JsonSerializable.toJson*"
  type: "Method"
  package: "com.azure.cosmos"
  summary: "Converts to a JSON string."
  syntax:
    content: "public String toJson(SerializationFormattingPolicy formattingPolicy)"
    parameters:
    - id: "formattingPolicy"
      type: "com.azure.cosmos.SerializationFormattingPolicy"
      description: "the formatting policy to be used."
    return:
      type: "java.lang.String"
      description: "the JSON string."
- uid: "com.azure.cosmos.JsonSerializable.toString()"
  id: "toString()"
  parent: "com.azure.cosmos.JsonSerializable"
  langs:
  - "java"
  name: "toString()"
  nameWithType: "JsonSerializable.toString()"
  fullName: "com.azure.cosmos.JsonSerializable.toString()"
  overload: "com.azure.cosmos.JsonSerializable.toString*"
  type: "Method"
  package: "com.azure.cosmos"
  summary: "Gets Simple STRING representation of property bag.\n\nFor proper conversion to json and inclusion of the default values use <xref uid=\"com.azure.cosmos.JsonSerializable.toJson()\" data-throw-if-not-resolved=\"false\">#toJson()</xref>."
  syntax:
    content: "public String toString()"
    return:
      type: "java.lang.String"
      description: "string representation of property bag."
references:
- uid: "com.azure.cosmos.JsonSerializable.JsonSerializable*"
  name: "JsonSerializable"
  nameWithType: "JsonSerializable.JsonSerializable"
  fullName: "com.azure.cosmos.JsonSerializable.JsonSerializable"
  package: "com.azure.cosmos"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "com.fasterxml.jackson.databind.ObjectMapper"
  spec.java:
  - uid: "com.fasterxml.jackson.databind.ObjectMapper"
    name: "ObjectMapper"
    fullName: "com.fasterxml.jackson.databind.ObjectMapper"
- uid: "com.fasterxml.jackson.databind.node.ObjectNode"
  spec.java:
  - uid: "com.fasterxml.jackson.databind.node.ObjectNode"
    name: "ObjectNode"
    fullName: "com.fasterxml.jackson.databind.node.ObjectNode"
- uid: "com.fasterxml.jackson.databind.JsonNode"
  spec.java:
  - uid: "com.fasterxml.jackson.databind.JsonNode"
    name: "JsonNode"
    fullName: "com.fasterxml.jackson.databind.JsonNode"
- uid: "java.lang.Object"
  spec.java:
  - uid: "java.lang.Object"
    name: "Object"
    fullName: "java.lang.Object"
- uid: "com.azure.cosmos.JsonSerializable.getValue*"
  name: "getValue"
  nameWithType: "JsonSerializable.getValue"
  fullName: "com.azure.cosmos.JsonSerializable.getValue"
  package: "com.azure.cosmos"
- uid: "com.azure.cosmos.JsonSerializable.setMapper*"
  name: "setMapper"
  nameWithType: "JsonSerializable.setMapper"
  fullName: "com.azure.cosmos.JsonSerializable.setMapper"
  package: "com.azure.cosmos"
- uid: "org.slf4j.Logger"
  spec.java:
  - uid: "org.slf4j.Logger"
    name: "Logger"
    fullName: "org.slf4j.Logger"
- uid: "com.azure.cosmos.JsonSerializable.getLogger*"
  name: "getLogger"
  nameWithType: "JsonSerializable.getLogger"
  fullName: "com.azure.cosmos.JsonSerializable.getLogger"
  package: "com.azure.cosmos"
- uid: "com.azure.cosmos.JsonSerializable.populatePropertyBag*"
  name: "populatePropertyBag"
  nameWithType: "JsonSerializable.populatePropertyBag"
  fullName: "com.azure.cosmos.JsonSerializable.populatePropertyBag"
  package: "com.azure.cosmos"
- uid: "java.util.Map<java.lang.String,java.lang.Object>"
  spec.java:
  - uid: "java.util.Map"
    name: "Map"
    fullName: "java.util.Map"
  - name: "<"
    fullName: "<"
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
  - name: ","
    fullName: ","
  - uid: "java.lang.Object"
    name: "Object"
    fullName: "java.lang.Object"
  - name: ">"
    fullName: ">"
- uid: "com.azure.cosmos.JsonSerializable.getMap*"
  name: "getMap"
  nameWithType: "JsonSerializable.getMap"
  fullName: "com.azure.cosmos.JsonSerializable.getMap"
  package: "com.azure.cosmos"
- uid: "boolean"
  spec.java:
  - uid: "boolean"
    name: "boolean"
    fullName: "boolean"
- uid: "com.azure.cosmos.JsonSerializable.has*"
  name: "has"
  nameWithType: "JsonSerializable.has"
  fullName: "com.azure.cosmos.JsonSerializable.has"
  package: "com.azure.cosmos"
- uid: "com.azure.cosmos.JsonSerializable.remove*"
  name: "remove"
  nameWithType: "JsonSerializable.remove"
  fullName: "com.azure.cosmos.JsonSerializable.remove"
  package: "com.azure.cosmos"
- uid: "T"
  spec.java:
  - uid: "T"
    name: "T"
    fullName: "T"
- uid: "com.azure.cosmos.JsonSerializable.set*"
  name: "<T>set"
  nameWithType: "JsonSerializable.<T>set"
  fullName: "com.azure.cosmos.JsonSerializable.<T>set"
  package: "com.azure.cosmos"
- uid: "com.azure.cosmos.JsonSerializable.get*"
  name: "get"
  nameWithType: "JsonSerializable.get"
  fullName: "com.azure.cosmos.JsonSerializable.get"
  package: "com.azure.cosmos"
- uid: "com.azure.cosmos.JsonSerializable.getString*"
  name: "getString"
  nameWithType: "JsonSerializable.getString"
  fullName: "com.azure.cosmos.JsonSerializable.getString"
  package: "com.azure.cosmos"
- uid: "java.lang.Boolean"
  spec.java:
  - uid: "java.lang.Boolean"
    name: "Boolean"
    fullName: "java.lang.Boolean"
- uid: "com.azure.cosmos.JsonSerializable.getBoolean*"
  name: "getBoolean"
  nameWithType: "JsonSerializable.getBoolean"
  fullName: "com.azure.cosmos.JsonSerializable.getBoolean"
  package: "com.azure.cosmos"
- uid: "java.lang.Integer"
  spec.java:
  - uid: "java.lang.Integer"
    name: "Integer"
    fullName: "java.lang.Integer"
- uid: "com.azure.cosmos.JsonSerializable.getInt*"
  name: "getInt"
  nameWithType: "JsonSerializable.getInt"
  fullName: "com.azure.cosmos.JsonSerializable.getInt"
  package: "com.azure.cosmos"
- uid: "java.lang.Long"
  spec.java:
  - uid: "java.lang.Long"
    name: "Long"
    fullName: "java.lang.Long"
- uid: "com.azure.cosmos.JsonSerializable.getLong*"
  name: "getLong"
  nameWithType: "JsonSerializable.getLong"
  fullName: "com.azure.cosmos.JsonSerializable.getLong"
  package: "com.azure.cosmos"
- uid: "java.lang.Double"
  spec.java:
  - uid: "java.lang.Double"
    name: "Double"
    fullName: "java.lang.Double"
- uid: "com.azure.cosmos.JsonSerializable.getDouble*"
  name: "getDouble"
  nameWithType: "JsonSerializable.getDouble"
  fullName: "com.azure.cosmos.JsonSerializable.getDouble"
  package: "com.azure.cosmos"
- uid: "java.lang.Class<T>"
  spec.java:
  - uid: "java.lang.Class"
    name: "Class"
    fullName: "java.lang.Class"
  - name: "<"
    fullName: "<"
  - uid: "T"
    name: "T"
    fullName: "T"
  - name: ">"
    fullName: ">"
- uid: "boolean[]"
  spec.java:
  - uid: "boolean"
    name: "boolean"
    fullName: "boolean"
  - name: "[]"
    fullName: "[]"
- uid: "com.azure.cosmos.JsonSerializable.getObject*"
  name: "<T>getObject"
  nameWithType: "JsonSerializable.<T>getObject"
  fullName: "com.azure.cosmos.JsonSerializable.<T>getObject"
  package: "com.azure.cosmos"
- uid: "java.util.List<T>"
  spec.java:
  - uid: "java.util.List"
    name: "List"
    fullName: "java.util.List"
  - name: "<"
    fullName: "<"
  - uid: "T"
    name: "T"
    fullName: "T"
  - name: ">"
    fullName: ">"
- uid: "com.azure.cosmos.JsonSerializable.getList*"
  name: "<T>getList"
  nameWithType: "JsonSerializable.<T>getList"
  fullName: "com.azure.cosmos.JsonSerializable.<T>getList"
  package: "com.azure.cosmos"
- uid: "java.util.Collection<T>"
  spec.java:
  - uid: "java.util.Collection"
    name: "Collection"
    fullName: "java.util.Collection"
  - name: "<"
    fullName: "<"
  - uid: "T"
    name: "T"
    fullName: "T"
  - name: ">"
    fullName: ">"
- uid: "com.azure.cosmos.JsonSerializable.getCollection*"
  name: "<T>getCollection"
  nameWithType: "JsonSerializable.<T>getCollection"
  fullName: "com.azure.cosmos.JsonSerializable.<T>getCollection"
  package: "com.azure.cosmos"
- uid: "java.util.Collection<com.fasterxml.jackson.databind.node.ObjectNode>"
  spec.java:
  - uid: "java.util.Collection"
    name: "Collection"
    fullName: "java.util.Collection"
  - name: "<"
    fullName: "<"
  - uid: "com.fasterxml.jackson.databind.node.ObjectNode"
    name: "ObjectNode"
    fullName: "com.fasterxml.jackson.databind.node.ObjectNode"
  - name: ">"
    fullName: ">"
- uid: "java.util.List<java.lang.String>"
  spec.java:
  - uid: "java.util.List"
    name: "List"
    fullName: "java.util.List"
  - name: "<"
    fullName: "<"
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
  - name: ">"
    fullName: ">"
- uid: "com.azure.cosmos.JsonSerializable.getObjectByPath*"
  name: "getObjectByPath"
  nameWithType: "JsonSerializable.getObjectByPath"
  fullName: "com.azure.cosmos.JsonSerializable.getObjectByPath"
  package: "com.azure.cosmos"
- uid: "com.azure.cosmos.JsonSerializable.toObject*"
  name: "<T>toObject"
  nameWithType: "JsonSerializable.<T>toObject"
  fullName: "com.azure.cosmos.JsonSerializable.<T>toObject"
  package: "com.azure.cosmos"
- uid: "com.azure.cosmos.JsonSerializable.toJson*"
  name: "toJson"
  nameWithType: "JsonSerializable.toJson"
  fullName: "com.azure.cosmos.JsonSerializable.toJson"
  package: "com.azure.cosmos"
- uid: "com.azure.cosmos.SerializationFormattingPolicy"
  name: "SerializationFormattingPolicy"
  nameWithType: "SerializationFormattingPolicy"
  fullName: "com.azure.cosmos.SerializationFormattingPolicy"
- uid: "com.azure.cosmos.JsonSerializable.toString*"
  name: "toString"
  nameWithType: "JsonSerializable.toString"
  fullName: "com.azure.cosmos.JsonSerializable.toString"
  package: "com.azure.cosmos"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "java.lang.String,java.lang.Object"
  name: "String,Object"
  nameWithType: "String,Object"
  fullName: "java.lang.String,java.lang.Object"
- uid: "java.util.Map"
  name: "Map"
  nameWithType: "Map"
  fullName: "java.util.Map"
- uid: "java.lang.Class"
  name: "Class"
  nameWithType: "Class"
  fullName: "java.lang.Class"
- uid: "java.util.List"
  name: "List"
  nameWithType: "List"
  fullName: "java.util.List"
- uid: "java.util.Collection"
  name: "Collection"
  nameWithType: "Collection"
  fullName: "java.util.Collection"
