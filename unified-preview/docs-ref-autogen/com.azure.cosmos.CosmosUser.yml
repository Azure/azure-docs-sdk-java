### YamlMime:ManagedReference
items:
- uid: "com.azure.cosmos.CosmosUser"
  id: "CosmosUser"
  parent: "com.azure.cosmos"
  children:
  - "com.azure.cosmos.CosmosUser.CosmosUser(com.azure.cosmos.CosmosAsyncUser,com.azure.cosmos.CosmosDatabase,java.lang.String)"
  - "com.azure.cosmos.CosmosUser.delete()"
  - "com.azure.cosmos.CosmosUser.getId()"
  - "com.azure.cosmos.CosmosUser.read()"
  - "com.azure.cosmos.CosmosUser.replace(com.azure.cosmos.CosmosUserProperties)"
  langs:
  - "java"
  name: "CosmosUser"
  nameWithType: "CosmosUser"
  fullName: "com.azure.cosmos.CosmosUser"
  type: "Class"
  package: "com.azure.cosmos"
  summary: "The type Cosmos sync user."
  syntax:
    content: "public class CosmosUser"
  inheritance:
  - "java.lang.Object"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.azure.cosmos.CosmosUser.CosmosUser(com.azure.cosmos.CosmosAsyncUser,com.azure.cosmos.CosmosDatabase,java.lang.String)"
  id: "CosmosUser(com.azure.cosmos.CosmosAsyncUser,com.azure.cosmos.CosmosDatabase,java.lang.String)"
  parent: "com.azure.cosmos.CosmosUser"
  langs:
  - "java"
  name: "CosmosUser(CosmosAsyncUser asyncUser, CosmosDatabase database, String id)"
  nameWithType: "CosmosUser.CosmosUser(CosmosAsyncUser asyncUser, CosmosDatabase database, String id)"
  fullName: "com.azure.cosmos.CosmosUser.CosmosUser(CosmosAsyncUser asyncUser, CosmosDatabase database, String id)"
  overload: "com.azure.cosmos.CosmosUser.CosmosUser*"
  type: "Constructor"
  package: "com.azure.cosmos"
  summary: "Instantiates a new Cosmos sync user."
  syntax:
    content: " CosmosUser(CosmosAsyncUser asyncUser, CosmosDatabase database, String id)"
    parameters:
    - id: "asyncUser"
      type: "com.azure.cosmos.CosmosAsyncUser"
      description: "the async user"
    - id: "database"
      type: "com.azure.cosmos.CosmosDatabase"
      description: "the database"
    - id: "id"
      type: "java.lang.String"
      description: "the id"
- uid: "com.azure.cosmos.CosmosUser.delete()"
  id: "delete()"
  parent: "com.azure.cosmos.CosmosUser"
  langs:
  - "java"
  name: "delete()"
  nameWithType: "CosmosUser.delete()"
  fullName: "com.azure.cosmos.CosmosUser.delete()"
  overload: "com.azure.cosmos.CosmosUser.delete*"
  type: "Method"
  package: "com.azure.cosmos"
  summary: "Delete cosmos user."
  syntax:
    content: "public CosmosUserResponse delete()"
    return:
      type: "com.azure.cosmos.CosmosUserResponse"
      description: "the cosmos sync user response"
  exceptions:
  - type: "com.azure.cosmos.CosmosClientException"
    description: "the cosmos client exception"
- uid: "com.azure.cosmos.CosmosUser.getId()"
  id: "getId()"
  parent: "com.azure.cosmos.CosmosUser"
  langs:
  - "java"
  name: "getId()"
  nameWithType: "CosmosUser.getId()"
  fullName: "com.azure.cosmos.CosmosUser.getId()"
  overload: "com.azure.cosmos.CosmosUser.getId*"
  type: "Method"
  package: "com.azure.cosmos"
  summary: "Id string."
  syntax:
    content: "public String getId()"
    return:
      type: "java.lang.String"
      description: "the string"
- uid: "com.azure.cosmos.CosmosUser.read()"
  id: "read()"
  parent: "com.azure.cosmos.CosmosUser"
  langs:
  - "java"
  name: "read()"
  nameWithType: "CosmosUser.read()"
  fullName: "com.azure.cosmos.CosmosUser.read()"
  overload: "com.azure.cosmos.CosmosUser.read*"
  type: "Method"
  package: "com.azure.cosmos"
  summary: "Read cosmos user"
  syntax:
    content: "public CosmosUserResponse read()"
    return:
      type: "com.azure.cosmos.CosmosUserResponse"
      description: "the cosmos sync user response"
  exceptions:
  - type: "com.azure.cosmos.CosmosClientException"
    description: "the cosmos client exception"
- uid: "com.azure.cosmos.CosmosUser.replace(com.azure.cosmos.CosmosUserProperties)"
  id: "replace(com.azure.cosmos.CosmosUserProperties)"
  parent: "com.azure.cosmos.CosmosUser"
  langs:
  - "java"
  name: "replace(CosmosUserProperties userProperties)"
  nameWithType: "CosmosUser.replace(CosmosUserProperties userProperties)"
  fullName: "com.azure.cosmos.CosmosUser.replace(CosmosUserProperties userProperties)"
  overload: "com.azure.cosmos.CosmosUser.replace*"
  type: "Method"
  package: "com.azure.cosmos"
  summary: "Replace cosmos user."
  syntax:
    content: "public CosmosUserResponse replace(CosmosUserProperties userProperties)"
    parameters:
    - id: "userProperties"
      type: "com.azure.cosmos.CosmosUserProperties"
      description: "the user properties"
    return:
      type: "com.azure.cosmos.CosmosUserResponse"
      description: "the cosmos sync user response"
  exceptions:
  - type: "com.azure.cosmos.CosmosClientException"
    description: "the cosmos client exception"
references:
- uid: "com.azure.cosmos.CosmosAsyncUser"
  name: "CosmosAsyncUser"
  nameWithType: "CosmosAsyncUser"
  fullName: "com.azure.cosmos.CosmosAsyncUser"
- uid: "com.azure.cosmos.CosmosDatabase"
  name: "CosmosDatabase"
  nameWithType: "CosmosDatabase"
  fullName: "com.azure.cosmos.CosmosDatabase"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "com.azure.cosmos.CosmosUser.CosmosUser*"
  name: "CosmosUser"
  nameWithType: "CosmosUser.CosmosUser"
  fullName: "com.azure.cosmos.CosmosUser.CosmosUser"
  package: "com.azure.cosmos"
- uid: "com.azure.cosmos.CosmosUser.getId*"
  name: "getId"
  nameWithType: "CosmosUser.getId"
  fullName: "com.azure.cosmos.CosmosUser.getId"
  package: "com.azure.cosmos"
- uid: "com.azure.cosmos.CosmosClientException"
  name: "CosmosClientException"
  nameWithType: "CosmosClientException"
  fullName: "com.azure.cosmos.CosmosClientException"
- uid: "com.azure.cosmos.CosmosUserResponse"
  name: "CosmosUserResponse"
  nameWithType: "CosmosUserResponse"
  fullName: "com.azure.cosmos.CosmosUserResponse"
- uid: "com.azure.cosmos.CosmosUser.read*"
  name: "read"
  nameWithType: "CosmosUser.read"
  fullName: "com.azure.cosmos.CosmosUser.read"
  package: "com.azure.cosmos"
- uid: "com.azure.cosmos.CosmosUserProperties"
  name: "CosmosUserProperties"
  nameWithType: "CosmosUserProperties"
  fullName: "com.azure.cosmos.CosmosUserProperties"
- uid: "com.azure.cosmos.CosmosUser.replace*"
  name: "replace"
  nameWithType: "CosmosUser.replace"
  fullName: "com.azure.cosmos.CosmosUser.replace"
  package: "com.azure.cosmos"
- uid: "com.azure.cosmos.CosmosUser.delete*"
  name: "delete"
  nameWithType: "CosmosUser.delete"
  fullName: "com.azure.cosmos.CosmosUser.delete"
  package: "com.azure.cosmos"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
