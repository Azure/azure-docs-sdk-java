### YamlMime:ManagedReference
items:
- uid: "com.azure.cosmos.implementation.Document"
  id: "Document"
  parent: "com.azure.cosmos.implementation"
  children:
  - "com.azure.cosmos.implementation.Document.Document()"
  - "com.azure.cosmos.implementation.Document.Document(java.lang.String)"
  - "com.azure.cosmos.implementation.Document.Document(java.lang.String,com.fasterxml.jackson.databind.ObjectMapper)"
  - "com.azure.cosmos.implementation.Document.FromObject(java.lang.Object,com.fasterxml.jackson.databind.ObjectMapper)"
  - "com.azure.cosmos.implementation.Document.getTimeToLive()"
  - "com.azure.cosmos.implementation.Document.setId(java.lang.String)"
  - "com.azure.cosmos.implementation.Document.setTimeToLive(java.lang.Integer)"
  langs:
  - "java"
  name: "Document"
  nameWithType: "Document"
  fullName: "com.azure.cosmos.implementation.Document"
  type: "Class"
  package: "com.azure.cosmos.implementation"
  summary: "Represents a document in the Azure Cosmos DB database service.\n\nA document is a structured JSON document. There is no set schema for the JSON documents, and a document may contain any number of custom properties as well as an optional list of attachments. Document is an application resource and can be authorized using the master key or resource keys."
  syntax:
    content: "public class Document extends Resource"
  inheritance:
  - "java.lang.Object"
  - "com.azure.cosmos.JsonSerializable"
  - "com.azure.cosmos.Resource"
  inheritedMembers:
  - "com.azure.cosmos.JsonSerializable.<T>getCollection(java.lang.String,java.lang.Class<T>,boolean...)"
  - "com.azure.cosmos.JsonSerializable.<T>getList(java.lang.String,java.lang.Class<T>,boolean...)"
  - "com.azure.cosmos.JsonSerializable.<T>getObject(java.lang.String,java.lang.Class<T>,boolean...)"
  - "com.azure.cosmos.JsonSerializable.<T>set(java.lang.String,T)"
  - "com.azure.cosmos.JsonSerializable.<T>toObject(java.lang.Class<T>)"
  - "com.azure.cosmos.JsonSerializable.get(java.lang.String)"
  - "com.azure.cosmos.JsonSerializable.getBoolean(java.lang.String)"
  - "com.azure.cosmos.JsonSerializable.getCollection(java.lang.String)"
  - "com.azure.cosmos.JsonSerializable.getDouble(java.lang.String)"
  - "com.azure.cosmos.JsonSerializable.getInt(java.lang.String)"
  - "com.azure.cosmos.JsonSerializable.getLogger()"
  - "com.azure.cosmos.JsonSerializable.getLong(java.lang.String)"
  - "com.azure.cosmos.JsonSerializable.getMap()"
  - "com.azure.cosmos.JsonSerializable.getObject(java.lang.String)"
  - "com.azure.cosmos.JsonSerializable.getObjectByPath(java.util.List<java.lang.String>)"
  - "com.azure.cosmos.JsonSerializable.getString(java.lang.String)"
  - "com.azure.cosmos.JsonSerializable.getValue(com.fasterxml.jackson.databind.JsonNode)"
  - "com.azure.cosmos.JsonSerializable.has(java.lang.String)"
  - "com.azure.cosmos.JsonSerializable.populatePropertyBag()"
  - "com.azure.cosmos.JsonSerializable.remove(java.lang.String)"
  - "com.azure.cosmos.JsonSerializable.setMapper(com.fasterxml.jackson.databind.ObjectMapper)"
  - "com.azure.cosmos.JsonSerializable.toJson()"
  - "com.azure.cosmos.JsonSerializable.toJson(com.azure.cosmos.SerializationFormattingPolicy)"
  - "com.azure.cosmos.JsonSerializable.toString()"
  - "com.azure.cosmos.Resource.getAltLink()"
  - "com.azure.cosmos.Resource.getETag()"
  - "com.azure.cosmos.Resource.getId()"
  - "com.azure.cosmos.Resource.getResourceId()"
  - "com.azure.cosmos.Resource.getSelfLink()"
  - "com.azure.cosmos.Resource.getTimestamp()"
  - "com.azure.cosmos.Resource.setAltLink(java.lang.String)"
  - "com.azure.cosmos.Resource.setETag(java.lang.String)"
  - "com.azure.cosmos.Resource.setId(java.lang.String)"
  - "com.azure.cosmos.Resource.setResourceId(java.lang.String)"
  - "com.azure.cosmos.Resource.setSelfLink(java.lang.String)"
  - "com.azure.cosmos.Resource.setTimestamp(java.time.OffsetDateTime)"
  - "com.azure.cosmos.Resource.validateResource(com.azure.cosmos.Resource)"
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.azure.cosmos.implementation.Document.Document()"
  id: "Document()"
  parent: "com.azure.cosmos.implementation.Document"
  langs:
  - "java"
  name: "Document()"
  nameWithType: "Document.Document()"
  fullName: "com.azure.cosmos.implementation.Document.Document()"
  overload: "com.azure.cosmos.implementation.Document.Document*"
  type: "Constructor"
  package: "com.azure.cosmos.implementation"
  summary: "Initialize a document object."
  syntax:
    content: "public Document()"
- uid: "com.azure.cosmos.implementation.Document.Document(java.lang.String)"
  id: "Document(java.lang.String)"
  parent: "com.azure.cosmos.implementation.Document"
  langs:
  - "java"
  name: "Document(String jsonString)"
  nameWithType: "Document.Document(String jsonString)"
  fullName: "com.azure.cosmos.implementation.Document.Document(String jsonString)"
  overload: "com.azure.cosmos.implementation.Document.Document*"
  type: "Constructor"
  package: "com.azure.cosmos.implementation"
  summary: "Initialize a document object from json string."
  syntax:
    content: "public Document(String jsonString)"
    parameters:
    - id: "jsonString"
      type: "java.lang.String"
      description: "the json string that represents the document object."
- uid: "com.azure.cosmos.implementation.Document.Document(java.lang.String,com.fasterxml.jackson.databind.ObjectMapper)"
  id: "Document(java.lang.String,com.fasterxml.jackson.databind.ObjectMapper)"
  parent: "com.azure.cosmos.implementation.Document"
  langs:
  - "java"
  name: "Document(String jsonString, ObjectMapper objectMapper)"
  nameWithType: "Document.Document(String jsonString, ObjectMapper objectMapper)"
  fullName: "com.azure.cosmos.implementation.Document.Document(String jsonString, ObjectMapper objectMapper)"
  overload: "com.azure.cosmos.implementation.Document.Document*"
  type: "Constructor"
  package: "com.azure.cosmos.implementation"
  summary: "Initialize a document object from json string."
  syntax:
    content: " Document(String jsonString, ObjectMapper objectMapper)"
    parameters:
    - id: "jsonString"
      type: "java.lang.String"
      description: "the json string that represents the document object."
    - id: "objectMapper"
      type: "com.fasterxml.jackson.databind.ObjectMapper"
      description: "the custom object mapper"
- uid: "com.azure.cosmos.implementation.Document.FromObject(java.lang.Object,com.fasterxml.jackson.databind.ObjectMapper)"
  id: "FromObject(java.lang.Object,com.fasterxml.jackson.databind.ObjectMapper)"
  parent: "com.azure.cosmos.implementation.Document"
  langs:
  - "java"
  name: "FromObject(Object document, ObjectMapper objectMapper)"
  nameWithType: "Document.FromObject(Object document, ObjectMapper objectMapper)"
  fullName: "com.azure.cosmos.implementation.Document.FromObject(Object document, ObjectMapper objectMapper)"
  overload: "com.azure.cosmos.implementation.Document.FromObject*"
  type: "Method"
  package: "com.azure.cosmos.implementation"
  syntax:
    content: "public static Document FromObject(Object document, ObjectMapper objectMapper)"
    parameters:
    - id: "document"
      type: "java.lang.Object"
    - id: "objectMapper"
      type: "com.fasterxml.jackson.databind.ObjectMapper"
    return:
      type: "com.azure.cosmos.implementation.Document"
- uid: "com.azure.cosmos.implementation.Document.getTimeToLive()"
  id: "getTimeToLive()"
  parent: "com.azure.cosmos.implementation.Document"
  langs:
  - "java"
  name: "getTimeToLive()"
  nameWithType: "Document.getTimeToLive()"
  fullName: "com.azure.cosmos.implementation.Document.getTimeToLive()"
  overload: "com.azure.cosmos.implementation.Document.getTimeToLive*"
  type: "Method"
  package: "com.azure.cosmos.implementation"
  summary: "Gets the document's time-to-live value."
  syntax:
    content: "public Integer getTimeToLive()"
    return:
      type: "java.lang.Integer"
      description: "the document's time-to-live value in seconds."
- uid: "com.azure.cosmos.implementation.Document.setId(java.lang.String)"
  id: "setId(java.lang.String)"
  parent: "com.azure.cosmos.implementation.Document"
  langs:
  - "java"
  name: "setId(String id)"
  nameWithType: "Document.setId(String id)"
  fullName: "com.azure.cosmos.implementation.Document.setId(String id)"
  overload: "com.azure.cosmos.implementation.Document.setId*"
  type: "Method"
  package: "com.azure.cosmos.implementation"
  summary: "Sets the id"
  syntax:
    content: "public Document setId(String id)"
    parameters:
    - id: "id"
      type: "java.lang.String"
      description: "the name of the resource."
    return:
      type: "com.azure.cosmos.implementation.Document"
      description: "the current instance of the Document"
- uid: "com.azure.cosmos.implementation.Document.setTimeToLive(java.lang.Integer)"
  id: "setTimeToLive(java.lang.Integer)"
  parent: "com.azure.cosmos.implementation.Document"
  langs:
  - "java"
  name: "setTimeToLive(Integer timeToLive)"
  nameWithType: "Document.setTimeToLive(Integer timeToLive)"
  fullName: "com.azure.cosmos.implementation.Document.setTimeToLive(Integer timeToLive)"
  overload: "com.azure.cosmos.implementation.Document.setTimeToLive*"
  type: "Method"
  package: "com.azure.cosmos.implementation"
  summary: "Sets the document's time-to-live value.\n\nA document's time-to-live value is an optional property. If set, the document expires after the specified number of seconds since its last write time. The value of this property should be one of the following:\n\nnull - indicates the time-to-live value for this document inherits from the parent collection's default time-to-live value.\n\nnonzero positive integer - indicates the number of seconds before the document expires. It overrides the default time-to-live value specified on the parent collection, unless the parent collection's default time-to-live is null.\n\n\\-1 - indicates the document never expires. It overrides the default time-to-live value specified on the parent collection, unless the parent collection's default time-to-live is null."
  syntax:
    content: "public void setTimeToLive(Integer timeToLive)"
    parameters:
    - id: "timeToLive"
      type: "java.lang.Integer"
      description: "the document's time-to-live value in seconds."
references:
- uid: "com.azure.cosmos.implementation.Document.Document*"
  name: "Document"
  nameWithType: "Document.Document"
  fullName: "com.azure.cosmos.implementation.Document.Document"
  package: "com.azure.cosmos.implementation"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "com.fasterxml.jackson.databind.ObjectMapper"
  spec.java:
  - uid: "com.fasterxml.jackson.databind.ObjectMapper"
    name: "ObjectMapper"
    fullName: "com.fasterxml.jackson.databind.ObjectMapper"
- uid: "com.azure.cosmos.implementation.Document.setId*"
  name: "setId"
  nameWithType: "Document.setId"
  fullName: "com.azure.cosmos.implementation.Document.setId"
  package: "com.azure.cosmos.implementation"
- uid: "java.lang.Object"
  spec.java:
  - uid: "java.lang.Object"
    name: "Object"
    fullName: "java.lang.Object"
- uid: "com.azure.cosmos.implementation.Document.FromObject*"
  name: "FromObject"
  nameWithType: "Document.FromObject"
  fullName: "com.azure.cosmos.implementation.Document.FromObject"
  package: "com.azure.cosmos.implementation"
- uid: "java.lang.Integer"
  spec.java:
  - uid: "java.lang.Integer"
    name: "Integer"
    fullName: "java.lang.Integer"
- uid: "com.azure.cosmos.implementation.Document.getTimeToLive*"
  name: "getTimeToLive"
  nameWithType: "Document.getTimeToLive"
  fullName: "com.azure.cosmos.implementation.Document.getTimeToLive"
  package: "com.azure.cosmos.implementation"
- uid: "com.azure.cosmos.implementation.Document.setTimeToLive*"
  name: "setTimeToLive"
  nameWithType: "Document.setTimeToLive"
  fullName: "com.azure.cosmos.implementation.Document.setTimeToLive"
  package: "com.azure.cosmos.implementation"
- uid: "com.azure.cosmos.Resource"
  name: "Resource"
  nameWithType: "Resource"
  fullName: "com.azure.cosmos.Resource"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "com.azure.cosmos.JsonSerializable.<T>getObject(java.lang.String,java.lang.Class<T>,boolean...)"
  name: "JsonSerializable.<T>getObject(String,Class<T>,)"
  nameWithType: "JsonSerializable.<T>getObject(String,Class<T>,)"
  fullName: "com.azure.cosmos.JsonSerializable.<T>getObject(java.lang.String,java.lang.Class<T>,boolean...)"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "com.azure.cosmos.JsonSerializable.<T>set(java.lang.String,T)"
  name: "JsonSerializable.<T>set(String,T)"
  nameWithType: "JsonSerializable.<T>set(String,T)"
  fullName: "com.azure.cosmos.JsonSerializable.<T>set(java.lang.String,T)"
- uid: "com.azure.cosmos.JsonSerializable.getObjectByPath(java.util.List<java.lang.String>)"
  name: "JsonSerializable.getObjectByPath(List<String>)"
  nameWithType: "JsonSerializable.getObjectByPath(List<String>)"
  fullName: "com.azure.cosmos.JsonSerializable.getObjectByPath(java.util.List<java.lang.String>)"
- uid: "com.azure.cosmos.JsonSerializable.toJson()"
  name: "JsonSerializable.toJson()"
  nameWithType: "JsonSerializable.toJson()"
  fullName: "com.azure.cosmos.JsonSerializable.toJson()"
- uid: "com.azure.cosmos.Resource.setId(java.lang.String)"
  name: "Resource.setId(String)"
  nameWithType: "Resource.setId(String)"
  fullName: "com.azure.cosmos.Resource.setId(java.lang.String)"
- uid: "com.azure.cosmos.JsonSerializable.getMap()"
  name: "JsonSerializable.getMap()"
  nameWithType: "JsonSerializable.getMap()"
  fullName: "com.azure.cosmos.JsonSerializable.getMap()"
- uid: "com.azure.cosmos.JsonSerializable.setMapper(com.fasterxml.jackson.databind.ObjectMapper)"
  name: "JsonSerializable.setMapper(ObjectMapper)"
  nameWithType: "JsonSerializable.setMapper(ObjectMapper)"
  fullName: "com.azure.cosmos.JsonSerializable.setMapper(com.fasterxml.jackson.databind.ObjectMapper)"
- uid: "com.azure.cosmos.Resource.getETag()"
  name: "Resource.getETag()"
  nameWithType: "Resource.getETag()"
  fullName: "com.azure.cosmos.Resource.getETag()"
- uid: "com.azure.cosmos.JsonSerializable.getCollection(java.lang.String)"
  name: "JsonSerializable.getCollection(String)"
  nameWithType: "JsonSerializable.getCollection(String)"
  fullName: "com.azure.cosmos.JsonSerializable.getCollection(java.lang.String)"
- uid: "com.azure.cosmos.JsonSerializable.getBoolean(java.lang.String)"
  name: "JsonSerializable.getBoolean(String)"
  nameWithType: "JsonSerializable.getBoolean(String)"
  fullName: "com.azure.cosmos.JsonSerializable.getBoolean(java.lang.String)"
- uid: "com.azure.cosmos.Resource.setETag(java.lang.String)"
  name: "Resource.setETag(String)"
  nameWithType: "Resource.setETag(String)"
  fullName: "com.azure.cosmos.Resource.setETag(java.lang.String)"
- uid: "com.azure.cosmos.JsonSerializable.remove(java.lang.String)"
  name: "JsonSerializable.remove(String)"
  nameWithType: "JsonSerializable.remove(String)"
  fullName: "com.azure.cosmos.JsonSerializable.remove(java.lang.String)"
- uid: "com.azure.cosmos.Resource.getAltLink()"
  name: "Resource.getAltLink()"
  nameWithType: "Resource.getAltLink()"
  fullName: "com.azure.cosmos.Resource.getAltLink()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "com.azure.cosmos.JsonSerializable.getValue(com.fasterxml.jackson.databind.JsonNode)"
  name: "JsonSerializable.getValue(JsonNode)"
  nameWithType: "JsonSerializable.getValue(JsonNode)"
  fullName: "com.azure.cosmos.JsonSerializable.getValue(com.fasterxml.jackson.databind.JsonNode)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "com.azure.cosmos.Resource.getSelfLink()"
  name: "Resource.getSelfLink()"
  nameWithType: "Resource.getSelfLink()"
  fullName: "com.azure.cosmos.Resource.getSelfLink()"
- uid: "com.azure.cosmos.Resource.setResourceId(java.lang.String)"
  name: "Resource.setResourceId(String)"
  nameWithType: "Resource.setResourceId(String)"
  fullName: "com.azure.cosmos.Resource.setResourceId(java.lang.String)"
- uid: "com.azure.cosmos.JsonSerializable.getObject(java.lang.String)"
  name: "JsonSerializable.getObject(String)"
  nameWithType: "JsonSerializable.getObject(String)"
  fullName: "com.azure.cosmos.JsonSerializable.getObject(java.lang.String)"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "com.azure.cosmos.Resource.validateResource(com.azure.cosmos.Resource)"
  name: "Resource.validateResource(Resource)"
  nameWithType: "Resource.validateResource(Resource)"
  fullName: "com.azure.cosmos.Resource.validateResource(com.azure.cosmos.Resource)"
- uid: "com.azure.cosmos.JsonSerializable.has(java.lang.String)"
  name: "JsonSerializable.has(String)"
  nameWithType: "JsonSerializable.has(String)"
  fullName: "com.azure.cosmos.JsonSerializable.has(java.lang.String)"
- uid: "com.azure.cosmos.JsonSerializable.getLong(java.lang.String)"
  name: "JsonSerializable.getLong(String)"
  nameWithType: "JsonSerializable.getLong(String)"
  fullName: "com.azure.cosmos.JsonSerializable.getLong(java.lang.String)"
- uid: "com.azure.cosmos.Resource.setSelfLink(java.lang.String)"
  name: "Resource.setSelfLink(String)"
  nameWithType: "Resource.setSelfLink(String)"
  fullName: "com.azure.cosmos.Resource.setSelfLink(java.lang.String)"
- uid: "com.azure.cosmos.JsonSerializable.toJson(com.azure.cosmos.SerializationFormattingPolicy)"
  name: "JsonSerializable.toJson(SerializationFormattingPolicy)"
  nameWithType: "JsonSerializable.toJson(SerializationFormattingPolicy)"
  fullName: "com.azure.cosmos.JsonSerializable.toJson(com.azure.cosmos.SerializationFormattingPolicy)"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "com.azure.cosmos.Resource.setTimestamp(java.time.OffsetDateTime)"
  name: "Resource.setTimestamp(OffsetDateTime)"
  nameWithType: "Resource.setTimestamp(OffsetDateTime)"
  fullName: "com.azure.cosmos.Resource.setTimestamp(java.time.OffsetDateTime)"
- uid: "com.azure.cosmos.Resource.setAltLink(java.lang.String)"
  name: "Resource.setAltLink(String)"
  nameWithType: "Resource.setAltLink(String)"
  fullName: "com.azure.cosmos.Resource.setAltLink(java.lang.String)"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "com.azure.cosmos.Resource.getId()"
  name: "Resource.getId()"
  nameWithType: "Resource.getId()"
  fullName: "com.azure.cosmos.Resource.getId()"
- uid: "com.azure.cosmos.JsonSerializable.getString(java.lang.String)"
  name: "JsonSerializable.getString(String)"
  nameWithType: "JsonSerializable.getString(String)"
  fullName: "com.azure.cosmos.JsonSerializable.getString(java.lang.String)"
- uid: "com.azure.cosmos.Resource.getResourceId()"
  name: "Resource.getResourceId()"
  nameWithType: "Resource.getResourceId()"
  fullName: "com.azure.cosmos.Resource.getResourceId()"
- uid: "com.azure.cosmos.JsonSerializable.populatePropertyBag()"
  name: "JsonSerializable.populatePropertyBag()"
  nameWithType: "JsonSerializable.populatePropertyBag()"
  fullName: "com.azure.cosmos.JsonSerializable.populatePropertyBag()"
- uid: "com.azure.cosmos.JsonSerializable.getInt(java.lang.String)"
  name: "JsonSerializable.getInt(String)"
  nameWithType: "JsonSerializable.getInt(String)"
  fullName: "com.azure.cosmos.JsonSerializable.getInt(java.lang.String)"
- uid: "com.azure.cosmos.JsonSerializable.getDouble(java.lang.String)"
  name: "JsonSerializable.getDouble(String)"
  nameWithType: "JsonSerializable.getDouble(String)"
  fullName: "com.azure.cosmos.JsonSerializable.getDouble(java.lang.String)"
- uid: "com.azure.cosmos.JsonSerializable.<T>toObject(java.lang.Class<T>)"
  name: "JsonSerializable.<T>toObject(Class<T>)"
  nameWithType: "JsonSerializable.<T>toObject(Class<T>)"
  fullName: "com.azure.cosmos.JsonSerializable.<T>toObject(java.lang.Class<T>)"
- uid: "com.azure.cosmos.JsonSerializable.getLogger()"
  name: "JsonSerializable.getLogger()"
  nameWithType: "JsonSerializable.getLogger()"
  fullName: "com.azure.cosmos.JsonSerializable.getLogger()"
- uid: "com.azure.cosmos.JsonSerializable.<T>getList(java.lang.String,java.lang.Class<T>,boolean...)"
  name: "JsonSerializable.<T>getList(String,Class<T>,)"
  nameWithType: "JsonSerializable.<T>getList(String,Class<T>,)"
  fullName: "com.azure.cosmos.JsonSerializable.<T>getList(java.lang.String,java.lang.Class<T>,boolean...)"
- uid: "com.azure.cosmos.Resource.getTimestamp()"
  name: "Resource.getTimestamp()"
  nameWithType: "Resource.getTimestamp()"
  fullName: "com.azure.cosmos.Resource.getTimestamp()"
- uid: "com.azure.cosmos.JsonSerializable.toString()"
  name: "JsonSerializable.toString()"
  nameWithType: "JsonSerializable.toString()"
  fullName: "com.azure.cosmos.JsonSerializable.toString()"
- uid: "com.azure.cosmos.JsonSerializable.<T>getCollection(java.lang.String,java.lang.Class<T>,boolean...)"
  name: "JsonSerializable.<T>getCollection(String,Class<T>,)"
  nameWithType: "JsonSerializable.<T>getCollection(String,Class<T>,)"
  fullName: "com.azure.cosmos.JsonSerializable.<T>getCollection(java.lang.String,java.lang.Class<T>,boolean...)"
- uid: "com.azure.cosmos.JsonSerializable.get(java.lang.String)"
  name: "JsonSerializable.get(String)"
  nameWithType: "JsonSerializable.get(String)"
  fullName: "com.azure.cosmos.JsonSerializable.get(java.lang.String)"
- uid: "T>,boolean...)"
  name: "T>,)"
  nameWithType: "T>,)"
  fullName: "T>,boolean...)"
- uid: "com.azure.cosmos.JsonSerializable."
  name: "JsonSerializable."
  nameWithType: "JsonSerializable."
  fullName: "com.azure.cosmos.JsonSerializable."
- uid: "T>getObject(java.lang.String,java.lang.Class"
  name: "T>getObject(String,Class"
  nameWithType: "T>getObject(String,Class"
  fullName: "T>getObject(java.lang.String,java.lang.Class"
- uid: "T>set(java.lang.String,T)"
  name: "T>set(String,T)"
  nameWithType: "T>set(String,T)"
  fullName: "T>set(java.lang.String,T)"
- uid: "com.azure.cosmos.JsonSerializable.getObjectByPath(java.util.List"
  name: "JsonSerializable.getObjectByPath(List"
  nameWithType: "JsonSerializable.getObjectByPath(List"
  fullName: "com.azure.cosmos.JsonSerializable.getObjectByPath(java.util.List"
- uid: "java.lang.String>)"
  name: "String>)"
  nameWithType: "String>)"
  fullName: "java.lang.String>)"
- uid: "T>toObject(java.lang.Class"
  name: "T>toObject(Class"
  nameWithType: "T>toObject(Class"
  fullName: "T>toObject(java.lang.Class"
- uid: "T>)"
  name: "T>)"
  nameWithType: "T>)"
  fullName: "T>)"
- uid: "T>getList(java.lang.String,java.lang.Class"
  name: "T>getList(String,Class"
  nameWithType: "T>getList(String,Class"
  fullName: "T>getList(java.lang.String,java.lang.Class"
- uid: "T>getCollection(java.lang.String,java.lang.Class"
  name: "T>getCollection(String,Class"
  nameWithType: "T>getCollection(String,Class"
  fullName: "T>getCollection(java.lang.String,java.lang.Class"
