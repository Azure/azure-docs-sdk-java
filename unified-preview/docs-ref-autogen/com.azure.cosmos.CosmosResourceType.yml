### YamlMime:ManagedReference
items:
- uid: "com.azure.cosmos.CosmosResourceType"
  id: "CosmosResourceType"
  parent: "com.azure.cosmos"
  children:
  - "com.azure.cosmos.CosmosResourceType.Attachment"
  - "com.azure.cosmos.CosmosResourceType.Conflict"
  - "com.azure.cosmos.CosmosResourceType.Database"
  - "com.azure.cosmos.CosmosResourceType.Document"
  - "com.azure.cosmos.CosmosResourceType.DocumentCollection"
  - "com.azure.cosmos.CosmosResourceType.Index"
  - "com.azure.cosmos.CosmosResourceType.Offer"
  - "com.azure.cosmos.CosmosResourceType.Permission"
  - "com.azure.cosmos.CosmosResourceType.StoredProcedure"
  - "com.azure.cosmos.CosmosResourceType.System"
  - "com.azure.cosmos.CosmosResourceType.Trigger"
  - "com.azure.cosmos.CosmosResourceType.User"
  - "com.azure.cosmos.CosmosResourceType.UserDefinedFunction"
  - "com.azure.cosmos.CosmosResourceType.value()"
  - "com.azure.cosmos.CosmosResourceType.valueOf(java.lang.String)"
  - "com.azure.cosmos.CosmosResourceType.values()"
  langs:
  - "java"
  name: "CosmosResourceType"
  nameWithType: "CosmosResourceType"
  fullName: "com.azure.cosmos.CosmosResourceType"
  type: "Enum"
  package: "com.azure.cosmos"
  summary: "Resource types in the Azure Cosmos DB database service."
  syntax:
    content: "public enum CosmosResourceType extends Enum<CosmosResourceType>"
  inheritance:
  - "java.lang.Object"
  - "java.lang.Enum"
  inheritedMembers:
  - "java.lang.Enum.<T>valueOf(java.lang.Class<T>,java.lang.String)"
  - "java.lang.Enum.clone()"
  - "java.lang.Enum.compareTo(E)"
  - "java.lang.Enum.equals(java.lang.Object)"
  - "java.lang.Enum.finalize()"
  - "java.lang.Enum.getDeclaringClass()"
  - "java.lang.Enum.hashCode()"
  - "java.lang.Enum.name()"
  - "java.lang.Enum.ordinal()"
  - "java.lang.Enum.toString()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.azure.cosmos.CosmosResourceType.Attachment"
  id: "Attachment"
  parent: "com.azure.cosmos.CosmosResourceType"
  langs:
  - "java"
  name: "Attachment"
  nameWithType: "CosmosResourceType.Attachment"
  fullName: "com.azure.cosmos.CosmosResourceType.Attachment"
  type: "Field"
  package: "com.azure.cosmos"
  syntax:
    content: "public static final CosmosResourceType Attachment"
    return:
      type: "com.azure.cosmos.CosmosResourceType"
- uid: "com.azure.cosmos.CosmosResourceType.Conflict"
  id: "Conflict"
  parent: "com.azure.cosmos.CosmosResourceType"
  langs:
  - "java"
  name: "Conflict"
  nameWithType: "CosmosResourceType.Conflict"
  fullName: "com.azure.cosmos.CosmosResourceType.Conflict"
  type: "Field"
  package: "com.azure.cosmos"
  syntax:
    content: "public static final CosmosResourceType Conflict"
    return:
      type: "com.azure.cosmos.CosmosResourceType"
- uid: "com.azure.cosmos.CosmosResourceType.CosmosResourceType(int)"
  id: "CosmosResourceType(int)"
  parent: "com.azure.cosmos.CosmosResourceType"
  langs:
  - "java"
  name: "CosmosResourceType(int value)"
  nameWithType: "CosmosResourceType.CosmosResourceType(int value)"
  fullName: "com.azure.cosmos.CosmosResourceType.CosmosResourceType(int value)"
  overload: "com.azure.cosmos.CosmosResourceType.CosmosResourceType*"
  type: "Constructor"
  package: "com.azure.cosmos"
  syntax:
    content: "private CosmosResourceType(int value)"
    parameters:
    - id: "value"
      type: "int"
- uid: "com.azure.cosmos.CosmosResourceType.Database"
  id: "Database"
  parent: "com.azure.cosmos.CosmosResourceType"
  langs:
  - "java"
  name: "Database"
  nameWithType: "CosmosResourceType.Database"
  fullName: "com.azure.cosmos.CosmosResourceType.Database"
  type: "Field"
  package: "com.azure.cosmos"
  syntax:
    content: "public static final CosmosResourceType Database"
    return:
      type: "com.azure.cosmos.CosmosResourceType"
- uid: "com.azure.cosmos.CosmosResourceType.Document"
  id: "Document"
  parent: "com.azure.cosmos.CosmosResourceType"
  langs:
  - "java"
  name: "Document"
  nameWithType: "CosmosResourceType.Document"
  fullName: "com.azure.cosmos.CosmosResourceType.Document"
  type: "Field"
  package: "com.azure.cosmos"
  syntax:
    content: "public static final CosmosResourceType Document"
    return:
      type: "com.azure.cosmos.CosmosResourceType"
- uid: "com.azure.cosmos.CosmosResourceType.DocumentCollection"
  id: "DocumentCollection"
  parent: "com.azure.cosmos.CosmosResourceType"
  langs:
  - "java"
  name: "DocumentCollection"
  nameWithType: "CosmosResourceType.DocumentCollection"
  fullName: "com.azure.cosmos.CosmosResourceType.DocumentCollection"
  type: "Field"
  package: "com.azure.cosmos"
  syntax:
    content: "public static final CosmosResourceType DocumentCollection"
    return:
      type: "com.azure.cosmos.CosmosResourceType"
- uid: "com.azure.cosmos.CosmosResourceType.Index"
  id: "Index"
  parent: "com.azure.cosmos.CosmosResourceType"
  langs:
  - "java"
  name: "Index"
  nameWithType: "CosmosResourceType.Index"
  fullName: "com.azure.cosmos.CosmosResourceType.Index"
  type: "Field"
  package: "com.azure.cosmos"
  syntax:
    content: "public static final CosmosResourceType Index"
    return:
      type: "com.azure.cosmos.CosmosResourceType"
- uid: "com.azure.cosmos.CosmosResourceType.Offer"
  id: "Offer"
  parent: "com.azure.cosmos.CosmosResourceType"
  langs:
  - "java"
  name: "Offer"
  nameWithType: "CosmosResourceType.Offer"
  fullName: "com.azure.cosmos.CosmosResourceType.Offer"
  type: "Field"
  package: "com.azure.cosmos"
  syntax:
    content: "public static final CosmosResourceType Offer"
    return:
      type: "com.azure.cosmos.CosmosResourceType"
- uid: "com.azure.cosmos.CosmosResourceType.Permission"
  id: "Permission"
  parent: "com.azure.cosmos.CosmosResourceType"
  langs:
  - "java"
  name: "Permission"
  nameWithType: "CosmosResourceType.Permission"
  fullName: "com.azure.cosmos.CosmosResourceType.Permission"
  type: "Field"
  package: "com.azure.cosmos"
  syntax:
    content: "public static final CosmosResourceType Permission"
    return:
      type: "com.azure.cosmos.CosmosResourceType"
- uid: "com.azure.cosmos.CosmosResourceType.StoredProcedure"
  id: "StoredProcedure"
  parent: "com.azure.cosmos.CosmosResourceType"
  langs:
  - "java"
  name: "StoredProcedure"
  nameWithType: "CosmosResourceType.StoredProcedure"
  fullName: "com.azure.cosmos.CosmosResourceType.StoredProcedure"
  type: "Field"
  package: "com.azure.cosmos"
  syntax:
    content: "public static final CosmosResourceType StoredProcedure"
    return:
      type: "com.azure.cosmos.CosmosResourceType"
- uid: "com.azure.cosmos.CosmosResourceType.System"
  id: "System"
  parent: "com.azure.cosmos.CosmosResourceType"
  langs:
  - "java"
  name: "System"
  nameWithType: "CosmosResourceType.System"
  fullName: "com.azure.cosmos.CosmosResourceType.System"
  type: "Field"
  package: "com.azure.cosmos"
  syntax:
    content: "public static final CosmosResourceType System"
    return:
      type: "com.azure.cosmos.CosmosResourceType"
- uid: "com.azure.cosmos.CosmosResourceType.Trigger"
  id: "Trigger"
  parent: "com.azure.cosmos.CosmosResourceType"
  langs:
  - "java"
  name: "Trigger"
  nameWithType: "CosmosResourceType.Trigger"
  fullName: "com.azure.cosmos.CosmosResourceType.Trigger"
  type: "Field"
  package: "com.azure.cosmos"
  syntax:
    content: "public static final CosmosResourceType Trigger"
    return:
      type: "com.azure.cosmos.CosmosResourceType"
- uid: "com.azure.cosmos.CosmosResourceType.User"
  id: "User"
  parent: "com.azure.cosmos.CosmosResourceType"
  langs:
  - "java"
  name: "User"
  nameWithType: "CosmosResourceType.User"
  fullName: "com.azure.cosmos.CosmosResourceType.User"
  type: "Field"
  package: "com.azure.cosmos"
  syntax:
    content: "public static final CosmosResourceType User"
    return:
      type: "com.azure.cosmos.CosmosResourceType"
- uid: "com.azure.cosmos.CosmosResourceType.UserDefinedFunction"
  id: "UserDefinedFunction"
  parent: "com.azure.cosmos.CosmosResourceType"
  langs:
  - "java"
  name: "UserDefinedFunction"
  nameWithType: "CosmosResourceType.UserDefinedFunction"
  fullName: "com.azure.cosmos.CosmosResourceType.UserDefinedFunction"
  type: "Field"
  package: "com.azure.cosmos"
  syntax:
    content: "public static final CosmosResourceType UserDefinedFunction"
    return:
      type: "com.azure.cosmos.CosmosResourceType"
- uid: "com.azure.cosmos.CosmosResourceType.value()"
  id: "value()"
  parent: "com.azure.cosmos.CosmosResourceType"
  langs:
  - "java"
  name: "value()"
  nameWithType: "CosmosResourceType.value()"
  fullName: "com.azure.cosmos.CosmosResourceType.value()"
  overload: "com.azure.cosmos.CosmosResourceType.value*"
  type: "Method"
  package: "com.azure.cosmos"
  syntax:
    content: "public int value()"
    return:
      type: "int"
- uid: "com.azure.cosmos.CosmosResourceType.valueOf(java.lang.String)"
  id: "valueOf(java.lang.String)"
  parent: "com.azure.cosmos.CosmosResourceType"
  langs:
  - "java"
  name: "valueOf(String name)"
  nameWithType: "CosmosResourceType.valueOf(String name)"
  fullName: "com.azure.cosmos.CosmosResourceType.valueOf(String name)"
  overload: "com.azure.cosmos.CosmosResourceType.valueOf*"
  type: "Method"
  package: "com.azure.cosmos"
  syntax:
    content: "public static CosmosResourceType valueOf(String name)"
    parameters:
    - id: "name"
      type: "java.lang.String"
    return:
      type: "com.azure.cosmos.CosmosResourceType"
- uid: "com.azure.cosmos.CosmosResourceType.values()"
  id: "values()"
  parent: "com.azure.cosmos.CosmosResourceType"
  langs:
  - "java"
  name: "values()"
  nameWithType: "CosmosResourceType.values()"
  fullName: "com.azure.cosmos.CosmosResourceType.values()"
  overload: "com.azure.cosmos.CosmosResourceType.values*"
  type: "Method"
  package: "com.azure.cosmos"
  syntax:
    content: "public static CosmosResourceType[] values()"
    return:
      type: "com.azure.cosmos.CosmosResourceType[]"
references:
- uid: "int"
  spec.java:
  - uid: "int"
    name: "int"
    fullName: "int"
- uid: "com.azure.cosmos.CosmosResourceType.CosmosResourceType*"
  name: "CosmosResourceType"
  nameWithType: "CosmosResourceType.CosmosResourceType"
  fullName: "com.azure.cosmos.CosmosResourceType.CosmosResourceType"
  package: "com.azure.cosmos"
- uid: "com.azure.cosmos.CosmosResourceType[]"
  spec.java:
  - uid: "com.azure.cosmos.CosmosResourceType"
    name: "CosmosResourceType"
    fullName: "com.azure.cosmos.CosmosResourceType"
  - name: "[]"
    fullName: "[]"
- uid: "com.azure.cosmos.CosmosResourceType.values*"
  name: "values"
  nameWithType: "CosmosResourceType.values"
  fullName: "com.azure.cosmos.CosmosResourceType.values"
  package: "com.azure.cosmos"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "com.azure.cosmos.CosmosResourceType.valueOf*"
  name: "valueOf"
  nameWithType: "CosmosResourceType.valueOf"
  fullName: "com.azure.cosmos.CosmosResourceType.valueOf"
  package: "com.azure.cosmos"
- uid: "com.azure.cosmos.CosmosResourceType.value*"
  name: "value"
  nameWithType: "CosmosResourceType.value"
  fullName: "com.azure.cosmos.CosmosResourceType.value"
  package: "com.azure.cosmos"
- uid: "java.lang.Enum<com.azure.cosmos.CosmosResourceType>"
  name: "Enum<CosmosResourceType>"
  nameWithType: "Enum<CosmosResourceType>"
  fullName: "java.lang.Enum<com.azure.cosmos.CosmosResourceType>"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Enum.toString()"
  name: "Enum.toString()"
  nameWithType: "Enum.toString()"
  fullName: "java.lang.Enum.toString()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Enum.clone()"
  name: "Enum.clone()"
  nameWithType: "Enum.clone()"
  fullName: "java.lang.Enum.clone()"
- uid: "java.lang.Enum.finalize()"
  name: "Enum.finalize()"
  nameWithType: "Enum.finalize()"
  fullName: "java.lang.Enum.finalize()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Enum.compareTo(E)"
  name: "Enum.compareTo(E)"
  nameWithType: "Enum.compareTo(E)"
  fullName: "java.lang.Enum.compareTo(E)"
- uid: "java.lang.Enum.name()"
  name: "Enum.name()"
  nameWithType: "Enum.name()"
  fullName: "java.lang.Enum.name()"
- uid: "java.lang.Enum.<T>valueOf(java.lang.Class<T>,java.lang.String)"
  name: "Enum.<T>valueOf(Class<T>,String)"
  nameWithType: "Enum.<T>valueOf(Class<T>,String)"
  fullName: "java.lang.Enum.<T>valueOf(java.lang.Class<T>,java.lang.String)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Enum.getDeclaringClass()"
  name: "Enum.getDeclaringClass()"
  nameWithType: "Enum.getDeclaringClass()"
  fullName: "java.lang.Enum.getDeclaringClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Enum.ordinal()"
  name: "Enum.ordinal()"
  nameWithType: "Enum.ordinal()"
  fullName: "java.lang.Enum.ordinal()"
- uid: "java.lang.Enum.hashCode()"
  name: "Enum.hashCode()"
  nameWithType: "Enum.hashCode()"
  fullName: "java.lang.Enum.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Enum.equals(java.lang.Object)"
  name: "Enum.equals(Object)"
  nameWithType: "Enum.equals(Object)"
  fullName: "java.lang.Enum.equals(java.lang.Object)"
- uid: "java.lang.Enum"
  name: "Enum"
  nameWithType: "Enum"
  fullName: "java.lang.Enum"
- uid: "java.lang.Enum."
  name: "Enum."
  nameWithType: "Enum."
  fullName: "java.lang.Enum."
- uid: "T>,java.lang.String)"
  name: "T>,String)"
  nameWithType: "T>,String)"
  fullName: "T>,java.lang.String)"
- uid: "T>valueOf(java.lang.Class"
  name: "T>valueOf(Class"
  nameWithType: "T>valueOf(Class"
  fullName: "T>valueOf(java.lang.Class"
