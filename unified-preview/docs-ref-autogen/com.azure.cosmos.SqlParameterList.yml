### YamlMime:ManagedReference
items:
- uid: "com.azure.cosmos.SqlParameterList"
  id: "SqlParameterList"
  parent: "com.azure.cosmos"
  children:
  - "com.azure.cosmos.SqlParameterList.<T>toArray(T[])"
  - "com.azure.cosmos.SqlParameterList.SqlParameterList()"
  - "com.azure.cosmos.SqlParameterList.SqlParameterList(com.azure.cosmos.SqlParameter...)"
  - "com.azure.cosmos.SqlParameterList.SqlParameterList(java.util.Collection<com.azure.cosmos.SqlParameter>)"
  - "com.azure.cosmos.SqlParameterList.add(com.azure.cosmos.SqlParameter)"
  - "com.azure.cosmos.SqlParameterList.add(int,com.azure.cosmos.SqlParameter)"
  - "com.azure.cosmos.SqlParameterList.addAll(int,java.util.Collection<? extends com.azure.cosmos.SqlParameter>)"
  - "com.azure.cosmos.SqlParameterList.addAll(java.util.Collection<? extends com.azure.cosmos.SqlParameter>)"
  - "com.azure.cosmos.SqlParameterList.clear()"
  - "com.azure.cosmos.SqlParameterList.contains(java.lang.Object)"
  - "com.azure.cosmos.SqlParameterList.containsAll(java.util.Collection<?>)"
  - "com.azure.cosmos.SqlParameterList.get(int)"
  - "com.azure.cosmos.SqlParameterList.indexOf(java.lang.Object)"
  - "com.azure.cosmos.SqlParameterList.isEmpty()"
  - "com.azure.cosmos.SqlParameterList.iterator()"
  - "com.azure.cosmos.SqlParameterList.lastIndexOf(java.lang.Object)"
  - "com.azure.cosmos.SqlParameterList.listIterator()"
  - "com.azure.cosmos.SqlParameterList.listIterator(int)"
  - "com.azure.cosmos.SqlParameterList.remove(int)"
  - "com.azure.cosmos.SqlParameterList.remove(java.lang.Object)"
  - "com.azure.cosmos.SqlParameterList.removeAll(java.util.Collection<?>)"
  - "com.azure.cosmos.SqlParameterList.retainAll(java.util.Collection<?>)"
  - "com.azure.cosmos.SqlParameterList.set(int,com.azure.cosmos.SqlParameter)"
  - "com.azure.cosmos.SqlParameterList.size()"
  - "com.azure.cosmos.SqlParameterList.subList(int,int)"
  - "com.azure.cosmos.SqlParameterList.toArray()"
  langs:
  - "java"
  name: "SqlParameterList"
  nameWithType: "SqlParameterList"
  fullName: "com.azure.cosmos.SqlParameterList"
  type: "Class"
  package: "com.azure.cosmos"
  summary: "Represents a collection of SQL parameters to for a SQL query in the Azure Cosmos DB database service."
  syntax:
    content: "public final class SqlParameterList implements List<SqlParameter>"
  inheritance:
  - "java.lang.Object"
  implements:
  - "java.util.List<com.azure.cosmos.SqlParameter>"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.azure.cosmos.SqlParameterList.<T>toArray(T[])"
  id: "<T>toArray(T[])"
  parent: "com.azure.cosmos.SqlParameterList"
  langs:
  - "java"
  name: "<T>toArray(T[] parameters)"
  nameWithType: "SqlParameterList.<T>toArray(T[] parameters)"
  fullName: "com.azure.cosmos.SqlParameterList.<T>toArray(T[] parameters)"
  overload: "com.azure.cosmos.SqlParameterList.toArray*"
  type: "Method"
  package: "com.azure.cosmos"
  syntax:
    content: "public T[] <T>toArray(T[] parameters)"
    parameters:
    - id: "parameters"
      type: "T[]"
    return:
      type: "T[]"
- uid: "com.azure.cosmos.SqlParameterList.SqlParameterList()"
  id: "SqlParameterList()"
  parent: "com.azure.cosmos.SqlParameterList"
  langs:
  - "java"
  name: "SqlParameterList()"
  nameWithType: "SqlParameterList.SqlParameterList()"
  fullName: "com.azure.cosmos.SqlParameterList.SqlParameterList()"
  overload: "com.azure.cosmos.SqlParameterList.SqlParameterList*"
  type: "Constructor"
  package: "com.azure.cosmos"
  summary: "Initializes a new instance of the SqlParameterList class."
  syntax:
    content: "public SqlParameterList()"
- uid: "com.azure.cosmos.SqlParameterList.SqlParameterList(com.azure.cosmos.SqlParameter...)"
  id: "SqlParameterList(com.azure.cosmos.SqlParameter...)"
  parent: "com.azure.cosmos.SqlParameterList"
  langs:
  - "java"
  name: "SqlParameterList(SqlParameter[] parameters)"
  nameWithType: "SqlParameterList.SqlParameterList(SqlParameter[] parameters)"
  fullName: "com.azure.cosmos.SqlParameterList.SqlParameterList(SqlParameter[] parameters)"
  overload: "com.azure.cosmos.SqlParameterList.SqlParameterList*"
  type: "Constructor"
  package: "com.azure.cosmos"
  summary: "Initializes a new instance of the SqlParameterList class from an array of parameters."
  syntax:
    content: "public SqlParameterList(SqlParameter[] parameters)"
    parameters:
    - id: "parameters"
      type: "com.azure.cosmos.SqlParameter[]"
      description: "the array of parameters."
- uid: "com.azure.cosmos.SqlParameterList.SqlParameterList(java.util.Collection<com.azure.cosmos.SqlParameter>)"
  id: "SqlParameterList(java.util.Collection<com.azure.cosmos.SqlParameter>)"
  parent: "com.azure.cosmos.SqlParameterList"
  langs:
  - "java"
  name: "SqlParameterList(Collection<SqlParameter> parameters)"
  nameWithType: "SqlParameterList.SqlParameterList(Collection<SqlParameter> parameters)"
  fullName: "com.azure.cosmos.SqlParameterList.SqlParameterList(Collection<SqlParameter> parameters)"
  overload: "com.azure.cosmos.SqlParameterList.SqlParameterList*"
  type: "Constructor"
  package: "com.azure.cosmos"
  summary: "Initializes a new instance of the SqlParameterList class from a collection of parameters."
  syntax:
    content: "public SqlParameterList(Collection<SqlParameter> parameters)"
    parameters:
    - id: "parameters"
      type: "java.util.Collection<com.azure.cosmos.SqlParameter>"
      description: "the collection of parameters."
- uid: "com.azure.cosmos.SqlParameterList.add(com.azure.cosmos.SqlParameter)"
  id: "add(com.azure.cosmos.SqlParameter)"
  parent: "com.azure.cosmos.SqlParameterList"
  langs:
  - "java"
  name: "add(SqlParameter parameter)"
  nameWithType: "SqlParameterList.add(SqlParameter parameter)"
  fullName: "com.azure.cosmos.SqlParameterList.add(SqlParameter parameter)"
  overload: "com.azure.cosmos.SqlParameterList.add*"
  type: "Method"
  package: "com.azure.cosmos"
  syntax:
    content: "public boolean add(SqlParameter parameter)"
    parameters:
    - id: "parameter"
      type: "com.azure.cosmos.SqlParameter"
    return:
      type: "boolean"
- uid: "com.azure.cosmos.SqlParameterList.add(int,com.azure.cosmos.SqlParameter)"
  id: "add(int,com.azure.cosmos.SqlParameter)"
  parent: "com.azure.cosmos.SqlParameterList"
  langs:
  - "java"
  name: "add(int index, SqlParameter element)"
  nameWithType: "SqlParameterList.add(int index, SqlParameter element)"
  fullName: "com.azure.cosmos.SqlParameterList.add(int index, SqlParameter element)"
  overload: "com.azure.cosmos.SqlParameterList.add*"
  type: "Method"
  package: "com.azure.cosmos"
  syntax:
    content: "public void add(int index, SqlParameter element)"
    parameters:
    - id: "index"
      type: "int"
    - id: "element"
      type: "com.azure.cosmos.SqlParameter"
- uid: "com.azure.cosmos.SqlParameterList.addAll(int,java.util.Collection<? extends com.azure.cosmos.SqlParameter>)"
  id: "addAll(int,java.util.Collection<? extends com.azure.cosmos.SqlParameter>)"
  parent: "com.azure.cosmos.SqlParameterList"
  langs:
  - "java"
  name: "addAll(int index, Collection<? extends SqlParameter> c)"
  nameWithType: "SqlParameterList.addAll(int index, Collection<? extends SqlParameter> c)"
  fullName: "com.azure.cosmos.SqlParameterList.addAll(int index, Collection<? extends SqlParameter> c)"
  overload: "com.azure.cosmos.SqlParameterList.addAll*"
  type: "Method"
  package: "com.azure.cosmos"
  syntax:
    content: "public boolean addAll(int index, Collection<? extends SqlParameter> c)"
    parameters:
    - id: "index"
      type: "int"
    - id: "c"
      type: "java.util.Collection<? extends com.azure.cosmos.SqlParameter>"
    return:
      type: "boolean"
- uid: "com.azure.cosmos.SqlParameterList.addAll(java.util.Collection<? extends com.azure.cosmos.SqlParameter>)"
  id: "addAll(java.util.Collection<? extends com.azure.cosmos.SqlParameter>)"
  parent: "com.azure.cosmos.SqlParameterList"
  langs:
  - "java"
  name: "addAll(Collection<? extends SqlParameter> parameters)"
  nameWithType: "SqlParameterList.addAll(Collection<? extends SqlParameter> parameters)"
  fullName: "com.azure.cosmos.SqlParameterList.addAll(Collection<? extends SqlParameter> parameters)"
  overload: "com.azure.cosmos.SqlParameterList.addAll*"
  type: "Method"
  package: "com.azure.cosmos"
  syntax:
    content: "public boolean addAll(Collection<? extends SqlParameter> parameters)"
    parameters:
    - id: "parameters"
      type: "java.util.Collection<? extends com.azure.cosmos.SqlParameter>"
    return:
      type: "boolean"
- uid: "com.azure.cosmos.SqlParameterList.clear()"
  id: "clear()"
  parent: "com.azure.cosmos.SqlParameterList"
  langs:
  - "java"
  name: "clear()"
  nameWithType: "SqlParameterList.clear()"
  fullName: "com.azure.cosmos.SqlParameterList.clear()"
  overload: "com.azure.cosmos.SqlParameterList.clear*"
  type: "Method"
  package: "com.azure.cosmos"
  syntax:
    content: "public void clear()"
- uid: "com.azure.cosmos.SqlParameterList.contains(java.lang.Object)"
  id: "contains(java.lang.Object)"
  parent: "com.azure.cosmos.SqlParameterList"
  langs:
  - "java"
  name: "contains(Object parameter)"
  nameWithType: "SqlParameterList.contains(Object parameter)"
  fullName: "com.azure.cosmos.SqlParameterList.contains(Object parameter)"
  overload: "com.azure.cosmos.SqlParameterList.contains*"
  type: "Method"
  package: "com.azure.cosmos"
  syntax:
    content: "public boolean contains(Object parameter)"
    parameters:
    - id: "parameter"
      type: "java.lang.Object"
    return:
      type: "boolean"
- uid: "com.azure.cosmos.SqlParameterList.containsAll(java.util.Collection<?>)"
  id: "containsAll(java.util.Collection<?>)"
  parent: "com.azure.cosmos.SqlParameterList"
  langs:
  - "java"
  name: "containsAll(Collection<?> parameters)"
  nameWithType: "SqlParameterList.containsAll(Collection<?> parameters)"
  fullName: "com.azure.cosmos.SqlParameterList.containsAll(Collection<?> parameters)"
  overload: "com.azure.cosmos.SqlParameterList.containsAll*"
  type: "Method"
  package: "com.azure.cosmos"
  syntax:
    content: "public boolean containsAll(Collection<?> parameters)"
    parameters:
    - id: "parameters"
      type: "java.util.Collection<?>"
    return:
      type: "boolean"
- uid: "com.azure.cosmos.SqlParameterList.get(int)"
  id: "get(int)"
  parent: "com.azure.cosmos.SqlParameterList"
  langs:
  - "java"
  name: "get(int index)"
  nameWithType: "SqlParameterList.get(int index)"
  fullName: "com.azure.cosmos.SqlParameterList.get(int index)"
  overload: "com.azure.cosmos.SqlParameterList.get*"
  type: "Method"
  package: "com.azure.cosmos"
  syntax:
    content: "public SqlParameter get(int index)"
    parameters:
    - id: "index"
      type: "int"
    return:
      type: "com.azure.cosmos.SqlParameter"
- uid: "com.azure.cosmos.SqlParameterList.indexOf(java.lang.Object)"
  id: "indexOf(java.lang.Object)"
  parent: "com.azure.cosmos.SqlParameterList"
  langs:
  - "java"
  name: "indexOf(Object o)"
  nameWithType: "SqlParameterList.indexOf(Object o)"
  fullName: "com.azure.cosmos.SqlParameterList.indexOf(Object o)"
  overload: "com.azure.cosmos.SqlParameterList.indexOf*"
  type: "Method"
  package: "com.azure.cosmos"
  syntax:
    content: "public int indexOf(Object o)"
    parameters:
    - id: "o"
      type: "java.lang.Object"
    return:
      type: "int"
- uid: "com.azure.cosmos.SqlParameterList.isEmpty()"
  id: "isEmpty()"
  parent: "com.azure.cosmos.SqlParameterList"
  langs:
  - "java"
  name: "isEmpty()"
  nameWithType: "SqlParameterList.isEmpty()"
  fullName: "com.azure.cosmos.SqlParameterList.isEmpty()"
  overload: "com.azure.cosmos.SqlParameterList.isEmpty*"
  type: "Method"
  package: "com.azure.cosmos"
  syntax:
    content: "public boolean isEmpty()"
    return:
      type: "boolean"
- uid: "com.azure.cosmos.SqlParameterList.iterator()"
  id: "iterator()"
  parent: "com.azure.cosmos.SqlParameterList"
  langs:
  - "java"
  name: "iterator()"
  nameWithType: "SqlParameterList.iterator()"
  fullName: "com.azure.cosmos.SqlParameterList.iterator()"
  overload: "com.azure.cosmos.SqlParameterList.iterator*"
  type: "Method"
  package: "com.azure.cosmos"
  syntax:
    content: "public Iterator<SqlParameter> iterator()"
    return:
      type: "java.util.Iterator<com.azure.cosmos.SqlParameter>"
- uid: "com.azure.cosmos.SqlParameterList.lastIndexOf(java.lang.Object)"
  id: "lastIndexOf(java.lang.Object)"
  parent: "com.azure.cosmos.SqlParameterList"
  langs:
  - "java"
  name: "lastIndexOf(Object o)"
  nameWithType: "SqlParameterList.lastIndexOf(Object o)"
  fullName: "com.azure.cosmos.SqlParameterList.lastIndexOf(Object o)"
  overload: "com.azure.cosmos.SqlParameterList.lastIndexOf*"
  type: "Method"
  package: "com.azure.cosmos"
  syntax:
    content: "public int lastIndexOf(Object o)"
    parameters:
    - id: "o"
      type: "java.lang.Object"
    return:
      type: "int"
- uid: "com.azure.cosmos.SqlParameterList.listIterator()"
  id: "listIterator()"
  parent: "com.azure.cosmos.SqlParameterList"
  langs:
  - "java"
  name: "listIterator()"
  nameWithType: "SqlParameterList.listIterator()"
  fullName: "com.azure.cosmos.SqlParameterList.listIterator()"
  overload: "com.azure.cosmos.SqlParameterList.listIterator*"
  type: "Method"
  package: "com.azure.cosmos"
  syntax:
    content: "public ListIterator<SqlParameter> listIterator()"
    return:
      type: "java.util.ListIterator<com.azure.cosmos.SqlParameter>"
- uid: "com.azure.cosmos.SqlParameterList.listIterator(int)"
  id: "listIterator(int)"
  parent: "com.azure.cosmos.SqlParameterList"
  langs:
  - "java"
  name: "listIterator(int index)"
  nameWithType: "SqlParameterList.listIterator(int index)"
  fullName: "com.azure.cosmos.SqlParameterList.listIterator(int index)"
  overload: "com.azure.cosmos.SqlParameterList.listIterator*"
  type: "Method"
  package: "com.azure.cosmos"
  syntax:
    content: "public ListIterator<SqlParameter> listIterator(int index)"
    parameters:
    - id: "index"
      type: "int"
    return:
      type: "java.util.ListIterator<com.azure.cosmos.SqlParameter>"
- uid: "com.azure.cosmos.SqlParameterList.remove(int)"
  id: "remove(int)"
  parent: "com.azure.cosmos.SqlParameterList"
  langs:
  - "java"
  name: "remove(int index)"
  nameWithType: "SqlParameterList.remove(int index)"
  fullName: "com.azure.cosmos.SqlParameterList.remove(int index)"
  overload: "com.azure.cosmos.SqlParameterList.remove*"
  type: "Method"
  package: "com.azure.cosmos"
  syntax:
    content: "public SqlParameter remove(int index)"
    parameters:
    - id: "index"
      type: "int"
    return:
      type: "com.azure.cosmos.SqlParameter"
- uid: "com.azure.cosmos.SqlParameterList.remove(java.lang.Object)"
  id: "remove(java.lang.Object)"
  parent: "com.azure.cosmos.SqlParameterList"
  langs:
  - "java"
  name: "remove(Object parameter)"
  nameWithType: "SqlParameterList.remove(Object parameter)"
  fullName: "com.azure.cosmos.SqlParameterList.remove(Object parameter)"
  overload: "com.azure.cosmos.SqlParameterList.remove*"
  type: "Method"
  package: "com.azure.cosmos"
  syntax:
    content: "public boolean remove(Object parameter)"
    parameters:
    - id: "parameter"
      type: "java.lang.Object"
    return:
      type: "boolean"
- uid: "com.azure.cosmos.SqlParameterList.removeAll(java.util.Collection<?>)"
  id: "removeAll(java.util.Collection<?>)"
  parent: "com.azure.cosmos.SqlParameterList"
  langs:
  - "java"
  name: "removeAll(Collection<?> parameters)"
  nameWithType: "SqlParameterList.removeAll(Collection<?> parameters)"
  fullName: "com.azure.cosmos.SqlParameterList.removeAll(Collection<?> parameters)"
  overload: "com.azure.cosmos.SqlParameterList.removeAll*"
  type: "Method"
  package: "com.azure.cosmos"
  syntax:
    content: "public boolean removeAll(Collection<?> parameters)"
    parameters:
    - id: "parameters"
      type: "java.util.Collection<?>"
    return:
      type: "boolean"
- uid: "com.azure.cosmos.SqlParameterList.retainAll(java.util.Collection<?>)"
  id: "retainAll(java.util.Collection<?>)"
  parent: "com.azure.cosmos.SqlParameterList"
  langs:
  - "java"
  name: "retainAll(Collection<?> parameters)"
  nameWithType: "SqlParameterList.retainAll(Collection<?> parameters)"
  fullName: "com.azure.cosmos.SqlParameterList.retainAll(Collection<?> parameters)"
  overload: "com.azure.cosmos.SqlParameterList.retainAll*"
  type: "Method"
  package: "com.azure.cosmos"
  syntax:
    content: "public boolean retainAll(Collection<?> parameters)"
    parameters:
    - id: "parameters"
      type: "java.util.Collection<?>"
    return:
      type: "boolean"
- uid: "com.azure.cosmos.SqlParameterList.set(int,com.azure.cosmos.SqlParameter)"
  id: "set(int,com.azure.cosmos.SqlParameter)"
  parent: "com.azure.cosmos.SqlParameterList"
  langs:
  - "java"
  name: "set(int index, SqlParameter element)"
  nameWithType: "SqlParameterList.set(int index, SqlParameter element)"
  fullName: "com.azure.cosmos.SqlParameterList.set(int index, SqlParameter element)"
  overload: "com.azure.cosmos.SqlParameterList.set*"
  type: "Method"
  package: "com.azure.cosmos"
  syntax:
    content: "public SqlParameter set(int index, SqlParameter element)"
    parameters:
    - id: "index"
      type: "int"
    - id: "element"
      type: "com.azure.cosmos.SqlParameter"
    return:
      type: "com.azure.cosmos.SqlParameter"
- uid: "com.azure.cosmos.SqlParameterList.size()"
  id: "size()"
  parent: "com.azure.cosmos.SqlParameterList"
  langs:
  - "java"
  name: "size()"
  nameWithType: "SqlParameterList.size()"
  fullName: "com.azure.cosmos.SqlParameterList.size()"
  overload: "com.azure.cosmos.SqlParameterList.size*"
  type: "Method"
  package: "com.azure.cosmos"
  syntax:
    content: "public int size()"
    return:
      type: "int"
- uid: "com.azure.cosmos.SqlParameterList.subList(int,int)"
  id: "subList(int,int)"
  parent: "com.azure.cosmos.SqlParameterList"
  langs:
  - "java"
  name: "subList(int fromIndex, int toIndex)"
  nameWithType: "SqlParameterList.subList(int fromIndex, int toIndex)"
  fullName: "com.azure.cosmos.SqlParameterList.subList(int fromIndex, int toIndex)"
  overload: "com.azure.cosmos.SqlParameterList.subList*"
  type: "Method"
  package: "com.azure.cosmos"
  syntax:
    content: "public List<SqlParameter> subList(int fromIndex, int toIndex)"
    parameters:
    - id: "fromIndex"
      type: "int"
    - id: "toIndex"
      type: "int"
    return:
      type: "java.util.List<com.azure.cosmos.SqlParameter>"
- uid: "com.azure.cosmos.SqlParameterList.toArray()"
  id: "toArray()"
  parent: "com.azure.cosmos.SqlParameterList"
  langs:
  - "java"
  name: "toArray()"
  nameWithType: "SqlParameterList.toArray()"
  fullName: "com.azure.cosmos.SqlParameterList.toArray()"
  overload: "com.azure.cosmos.SqlParameterList.toArray*"
  type: "Method"
  package: "com.azure.cosmos"
  syntax:
    content: "public Object[] toArray()"
    return:
      type: "java.lang.Object[]"
references:
- uid: "com.azure.cosmos.SqlParameterList.SqlParameterList*"
  name: "SqlParameterList"
  nameWithType: "SqlParameterList.SqlParameterList"
  fullName: "com.azure.cosmos.SqlParameterList.SqlParameterList"
  package: "com.azure.cosmos"
- uid: "com.azure.cosmos.SqlParameter[]"
  spec.java:
  - uid: "com.azure.cosmos.SqlParameter"
    name: "SqlParameter"
    fullName: "com.azure.cosmos.SqlParameter"
  - name: "[]"
    fullName: "[]"
- uid: "java.util.Collection<com.azure.cosmos.SqlParameter>"
  spec.java:
  - uid: "java.util.Collection"
    name: "Collection"
    fullName: "java.util.Collection"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.cosmos.SqlParameter"
    name: "SqlParameter"
    fullName: "com.azure.cosmos.SqlParameter"
  - name: ">"
    fullName: ">"
- uid: "com.azure.cosmos.SqlParameter"
  name: "SqlParameter"
  nameWithType: "SqlParameter"
  fullName: "com.azure.cosmos.SqlParameter"
- uid: "boolean"
  spec.java:
  - uid: "boolean"
    name: "boolean"
    fullName: "boolean"
- uid: "com.azure.cosmos.SqlParameterList.add*"
  name: "add"
  nameWithType: "SqlParameterList.add"
  fullName: "com.azure.cosmos.SqlParameterList.add"
  package: "com.azure.cosmos"
- uid: "java.util.Collection<? extends com.azure.cosmos.SqlParameter>"
  spec.java:
  - uid: "java.util.Collection"
    name: "Collection"
    fullName: "java.util.Collection"
  - name: "<"
    fullName: "<"
  - uid: "? extends com.azure.cosmos.SqlParameter"
    name: "SqlParameter"
    fullName: "? extends com.azure.cosmos.SqlParameter"
  - name: ">"
    fullName: ">"
- uid: "com.azure.cosmos.SqlParameterList.addAll*"
  name: "addAll"
  nameWithType: "SqlParameterList.addAll"
  fullName: "com.azure.cosmos.SqlParameterList.addAll"
  package: "com.azure.cosmos"
- uid: "int"
  spec.java:
  - uid: "int"
    name: "int"
    fullName: "int"
- uid: "com.azure.cosmos.SqlParameterList.clear*"
  name: "clear"
  nameWithType: "SqlParameterList.clear"
  fullName: "com.azure.cosmos.SqlParameterList.clear"
  package: "com.azure.cosmos"
- uid: "com.azure.cosmos.SqlParameterList.get*"
  name: "get"
  nameWithType: "SqlParameterList.get"
  fullName: "com.azure.cosmos.SqlParameterList.get"
  package: "com.azure.cosmos"
- uid: "com.azure.cosmos.SqlParameterList.set*"
  name: "set"
  nameWithType: "SqlParameterList.set"
  fullName: "com.azure.cosmos.SqlParameterList.set"
  package: "com.azure.cosmos"
- uid: "com.azure.cosmos.SqlParameterList.remove*"
  name: "remove"
  nameWithType: "SqlParameterList.remove"
  fullName: "com.azure.cosmos.SqlParameterList.remove"
  package: "com.azure.cosmos"
- uid: "java.lang.Object"
  spec.java:
  - uid: "java.lang.Object"
    name: "Object"
    fullName: "java.lang.Object"
- uid: "com.azure.cosmos.SqlParameterList.indexOf*"
  name: "indexOf"
  nameWithType: "SqlParameterList.indexOf"
  fullName: "com.azure.cosmos.SqlParameterList.indexOf"
  package: "com.azure.cosmos"
- uid: "com.azure.cosmos.SqlParameterList.lastIndexOf*"
  name: "lastIndexOf"
  nameWithType: "SqlParameterList.lastIndexOf"
  fullName: "com.azure.cosmos.SqlParameterList.lastIndexOf"
  package: "com.azure.cosmos"
- uid: "java.util.ListIterator<com.azure.cosmos.SqlParameter>"
  spec.java:
  - uid: "java.util.ListIterator"
    name: "ListIterator"
    fullName: "java.util.ListIterator"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.cosmos.SqlParameter"
    name: "SqlParameter"
    fullName: "com.azure.cosmos.SqlParameter"
  - name: ">"
    fullName: ">"
- uid: "com.azure.cosmos.SqlParameterList.listIterator*"
  name: "listIterator"
  nameWithType: "SqlParameterList.listIterator"
  fullName: "com.azure.cosmos.SqlParameterList.listIterator"
  package: "com.azure.cosmos"
- uid: "java.util.List<com.azure.cosmos.SqlParameter>"
  spec.java:
  - uid: "java.util.List"
    name: "List"
    fullName: "java.util.List"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.cosmos.SqlParameter"
    name: "SqlParameter"
    fullName: "com.azure.cosmos.SqlParameter"
  - name: ">"
    fullName: ">"
- uid: "com.azure.cosmos.SqlParameterList.subList*"
  name: "subList"
  nameWithType: "SqlParameterList.subList"
  fullName: "com.azure.cosmos.SqlParameterList.subList"
  package: "com.azure.cosmos"
- uid: "com.azure.cosmos.SqlParameterList.contains*"
  name: "contains"
  nameWithType: "SqlParameterList.contains"
  fullName: "com.azure.cosmos.SqlParameterList.contains"
  package: "com.azure.cosmos"
- uid: "java.util.Collection<?>"
  spec.java:
  - uid: "java.util.Collection"
    name: "Collection"
    fullName: "java.util.Collection"
  - name: "<"
    fullName: "<"
  - uid: "?"
    name: "?"
    fullName: "?"
  - name: ">"
    fullName: ">"
- uid: "com.azure.cosmos.SqlParameterList.containsAll*"
  name: "containsAll"
  nameWithType: "SqlParameterList.containsAll"
  fullName: "com.azure.cosmos.SqlParameterList.containsAll"
  package: "com.azure.cosmos"
- uid: "com.azure.cosmos.SqlParameterList.isEmpty*"
  name: "isEmpty"
  nameWithType: "SqlParameterList.isEmpty"
  fullName: "com.azure.cosmos.SqlParameterList.isEmpty"
  package: "com.azure.cosmos"
- uid: "java.util.Iterator<com.azure.cosmos.SqlParameter>"
  spec.java:
  - uid: "java.util.Iterator"
    name: "Iterator"
    fullName: "java.util.Iterator"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.cosmos.SqlParameter"
    name: "SqlParameter"
    fullName: "com.azure.cosmos.SqlParameter"
  - name: ">"
    fullName: ">"
- uid: "com.azure.cosmos.SqlParameterList.iterator*"
  name: "iterator"
  nameWithType: "SqlParameterList.iterator"
  fullName: "com.azure.cosmos.SqlParameterList.iterator"
  package: "com.azure.cosmos"
- uid: "com.azure.cosmos.SqlParameterList.removeAll*"
  name: "removeAll"
  nameWithType: "SqlParameterList.removeAll"
  fullName: "com.azure.cosmos.SqlParameterList.removeAll"
  package: "com.azure.cosmos"
- uid: "com.azure.cosmos.SqlParameterList.retainAll*"
  name: "retainAll"
  nameWithType: "SqlParameterList.retainAll"
  fullName: "com.azure.cosmos.SqlParameterList.retainAll"
  package: "com.azure.cosmos"
- uid: "com.azure.cosmos.SqlParameterList.size*"
  name: "size"
  nameWithType: "SqlParameterList.size"
  fullName: "com.azure.cosmos.SqlParameterList.size"
  package: "com.azure.cosmos"
- uid: "java.lang.Object[]"
  spec.java:
  - uid: "java.lang.Object"
    name: "Object"
    fullName: "java.lang.Object"
  - name: "[]"
    fullName: "[]"
- uid: "com.azure.cosmos.SqlParameterList.toArray*"
  name: "toArray"
  nameWithType: "SqlParameterList.toArray"
  fullName: "com.azure.cosmos.SqlParameterList.toArray"
  package: "com.azure.cosmos"
- uid: "T[]"
  spec.java:
  - uid: "T"
    name: "T"
    fullName: "T"
  - name: "[]"
    fullName: "[]"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "java.util.Collection"
  name: "Collection"
  nameWithType: "Collection"
  fullName: "java.util.Collection"
- uid: "? extends com.azure.cosmos.SqlParameter"
  name: "? extends SqlParameter"
  nameWithType: "? extends SqlParameter"
  fullName: "? extends com.azure.cosmos.SqlParameter"
- uid: "java.util.ListIterator"
  name: "ListIterator"
  nameWithType: "ListIterator"
  fullName: "java.util.ListIterator"
- uid: "java.util.List"
  name: "List"
  nameWithType: "List"
  fullName: "java.util.List"
- uid: "?"
  name: "?"
  nameWithType: "?"
  fullName: "?"
- uid: "java.util.Iterator"
  name: "Iterator"
  nameWithType: "Iterator"
  fullName: "java.util.Iterator"
