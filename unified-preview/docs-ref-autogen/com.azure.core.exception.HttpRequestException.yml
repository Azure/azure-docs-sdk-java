### YamlMime:ManagedReference
items:
- uid: "com.azure.core.exception.HttpRequestException"
  id: "HttpRequestException"
  parent: "com.azure.core.exception"
  children:
  - "com.azure.core.exception.HttpRequestException.HttpRequestException(java.lang.String,com.azure.core.http.HttpRequest)"
  - "com.azure.core.exception.HttpRequestException.HttpRequestException(java.lang.String,com.azure.core.http.HttpRequest,java.lang.Throwable)"
  - "com.azure.core.exception.HttpRequestException.getRequest()"
  langs:
  - "java"
  name: "HttpRequestException"
  nameWithType: "HttpRequestException"
  fullName: "com.azure.core.exception.HttpRequestException"
  type: "Class"
  package: "com.azure.core.exception"
  summary: "The exception occurred while attempting to connect a socket to a Azure service address and port. Typically, the connection was refused remotely (e.g., no process is listening on the Azure service address/port). These errors are safe to retry."
  syntax:
    content: "public class HttpRequestException extends AzureException"
  inheritance:
  - "java.lang.Object"
  - "java.lang.Throwable"
  - "java.lang.Exception"
  - "java.lang.RuntimeException"
  - "com.azure.core.exception.AzureException"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
  - "java.lang.Throwable.addSuppressed(java.lang.Throwable)"
  - "java.lang.Throwable.fillInStackTrace()"
  - "java.lang.Throwable.getCause()"
  - "java.lang.Throwable.getLocalizedMessage()"
  - "java.lang.Throwable.getMessage()"
  - "java.lang.Throwable.getStackTrace()"
  - "java.lang.Throwable.getSuppressed()"
  - "java.lang.Throwable.initCause(java.lang.Throwable)"
  - "java.lang.Throwable.printStackTrace()"
  - "java.lang.Throwable.printStackTrace(java.io.PrintStream)"
  - "java.lang.Throwable.printStackTrace(java.io.PrintWriter)"
  - "java.lang.Throwable.setStackTrace(java.lang.StackTraceElement[])"
  - "java.lang.Throwable.toString()"
- uid: "com.azure.core.exception.HttpRequestException.HttpRequestException(java.lang.String,com.azure.core.http.HttpRequest)"
  id: "HttpRequestException(java.lang.String,com.azure.core.http.HttpRequest)"
  parent: "com.azure.core.exception.HttpRequestException"
  langs:
  - "java"
  name: "HttpRequestException(String message, HttpRequest request)"
  nameWithType: "HttpRequestException.HttpRequestException(String message, HttpRequest request)"
  fullName: "com.azure.core.exception.HttpRequestException.HttpRequestException(String message, HttpRequest request)"
  overload: "com.azure.core.exception.HttpRequestException.HttpRequestException*"
  type: "Constructor"
  package: "com.azure.core.exception"
  summary: "Initializes a new instance of the ServiceRequestException class."
  syntax:
    content: "public HttpRequestException(String message, HttpRequest request)"
    parameters:
    - id: "message"
      type: "java.lang.String"
      description: "the exception message or the response content if a message is not available"
    - id: "request"
      type: "com.azure.core.http.HttpRequest"
      description: "the HTTP request sends to the Azure service"
- uid: "com.azure.core.exception.HttpRequestException.HttpRequestException(java.lang.String,com.azure.core.http.HttpRequest,java.lang.Throwable)"
  id: "HttpRequestException(java.lang.String,com.azure.core.http.HttpRequest,java.lang.Throwable)"
  parent: "com.azure.core.exception.HttpRequestException"
  langs:
  - "java"
  name: "HttpRequestException(String message, HttpRequest request, Throwable cause)"
  nameWithType: "HttpRequestException.HttpRequestException(String message, HttpRequest request, Throwable cause)"
  fullName: "com.azure.core.exception.HttpRequestException.HttpRequestException(String message, HttpRequest request, Throwable cause)"
  overload: "com.azure.core.exception.HttpRequestException.HttpRequestException*"
  type: "Constructor"
  package: "com.azure.core.exception"
  summary: "Initializes a new instance of the ServiceRequestException class."
  syntax:
    content: "public HttpRequestException(String message, HttpRequest request, Throwable cause)"
    parameters:
    - id: "message"
      type: "java.lang.String"
      description: "the exception message or the response content if a message is not available"
    - id: "request"
      type: "com.azure.core.http.HttpRequest"
      description: "the HTTP request sends to the Azure service"
    - id: "cause"
      type: "java.lang.Throwable"
      description: "the Throwable which caused the creation of this ServiceRequestException"
- uid: "com.azure.core.exception.HttpRequestException.getRequest()"
  id: "getRequest()"
  parent: "com.azure.core.exception.HttpRequestException"
  langs:
  - "java"
  name: "getRequest()"
  nameWithType: "HttpRequestException.getRequest()"
  fullName: "com.azure.core.exception.HttpRequestException.getRequest()"
  overload: "com.azure.core.exception.HttpRequestException.getRequest*"
  type: "Method"
  package: "com.azure.core.exception"
  syntax:
    content: "public HttpRequest getRequest()"
    return:
      type: "com.azure.core.http.HttpRequest"
      description: "information about the associated HTTP response"
references:
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "com.azure.core.http.HttpRequest"
  name: "HttpRequest"
  nameWithType: "HttpRequest"
  fullName: "com.azure.core.http.HttpRequest"
- uid: "com.azure.core.exception.HttpRequestException.HttpRequestException*"
  name: "HttpRequestException"
  nameWithType: "HttpRequestException.HttpRequestException"
  fullName: "com.azure.core.exception.HttpRequestException.HttpRequestException"
  package: "com.azure.core.exception"
- uid: "java.lang.Throwable"
  spec.java:
  - uid: "java.lang.Throwable"
    name: "Throwable"
    fullName: "java.lang.Throwable"
- uid: "com.azure.core.exception.HttpRequestException.getRequest*"
  name: "getRequest"
  nameWithType: "HttpRequestException.getRequest"
  fullName: "com.azure.core.exception.HttpRequestException.getRequest"
  package: "com.azure.core.exception"
- uid: "com.azure.core.exception.AzureException"
  name: "AzureException"
  nameWithType: "AzureException"
  fullName: "com.azure.core.exception.AzureException"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Throwable.printStackTrace(java.io.PrintWriter)"
  name: "Throwable.printStackTrace(PrintWriter)"
  nameWithType: "Throwable.printStackTrace(PrintWriter)"
  fullName: "java.lang.Throwable.printStackTrace(java.io.PrintWriter)"
- uid: "java.lang.Throwable.getCause()"
  name: "Throwable.getCause()"
  nameWithType: "Throwable.getCause()"
  fullName: "java.lang.Throwable.getCause()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Throwable.addSuppressed(java.lang.Throwable)"
  name: "Throwable.addSuppressed(Throwable)"
  nameWithType: "Throwable.addSuppressed(Throwable)"
  fullName: "java.lang.Throwable.addSuppressed(java.lang.Throwable)"
- uid: "java.lang.Throwable.fillInStackTrace()"
  name: "Throwable.fillInStackTrace()"
  nameWithType: "Throwable.fillInStackTrace()"
  fullName: "java.lang.Throwable.fillInStackTrace()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Throwable.initCause(java.lang.Throwable)"
  name: "Throwable.initCause(Throwable)"
  nameWithType: "Throwable.initCause(Throwable)"
  fullName: "java.lang.Throwable.initCause(java.lang.Throwable)"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Throwable.setStackTrace(java.lang.StackTraceElement[])"
  name: "Throwable.setStackTrace(StackTraceElement[])"
  nameWithType: "Throwable.setStackTrace(StackTraceElement[])"
  fullName: "java.lang.Throwable.setStackTrace(java.lang.StackTraceElement[])"
- uid: "java.lang.Throwable.toString()"
  name: "Throwable.toString()"
  nameWithType: "Throwable.toString()"
  fullName: "java.lang.Throwable.toString()"
- uid: "java.lang.Throwable.printStackTrace(java.io.PrintStream)"
  name: "Throwable.printStackTrace(PrintStream)"
  nameWithType: "Throwable.printStackTrace(PrintStream)"
  fullName: "java.lang.Throwable.printStackTrace(java.io.PrintStream)"
- uid: "java.lang.Throwable.getMessage()"
  name: "Throwable.getMessage()"
  nameWithType: "Throwable.getMessage()"
  fullName: "java.lang.Throwable.getMessage()"
- uid: "java.lang.Throwable.getSuppressed()"
  name: "Throwable.getSuppressed()"
  nameWithType: "Throwable.getSuppressed()"
  fullName: "java.lang.Throwable.getSuppressed()"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Throwable.getStackTrace()"
  name: "Throwable.getStackTrace()"
  nameWithType: "Throwable.getStackTrace()"
  fullName: "java.lang.Throwable.getStackTrace()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Throwable.getLocalizedMessage()"
  name: "Throwable.getLocalizedMessage()"
  nameWithType: "Throwable.getLocalizedMessage()"
  fullName: "java.lang.Throwable.getLocalizedMessage()"
- uid: "java.lang.Throwable.printStackTrace()"
  name: "Throwable.printStackTrace()"
  nameWithType: "Throwable.printStackTrace()"
  fullName: "java.lang.Throwable.printStackTrace()"
