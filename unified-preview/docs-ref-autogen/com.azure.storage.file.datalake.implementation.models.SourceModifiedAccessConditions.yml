### YamlMime:ManagedReference
items:
- uid: "com.azure.storage.file.datalake.implementation.models.SourceModifiedAccessConditions"
  id: "SourceModifiedAccessConditions"
  parent: "com.azure.storage.file.datalake.implementation.models"
  children:
  - "com.azure.storage.file.datalake.implementation.models.SourceModifiedAccessConditions.SourceModifiedAccessConditions()"
  - "com.azure.storage.file.datalake.implementation.models.SourceModifiedAccessConditions.getSourceIfMatch()"
  - "com.azure.storage.file.datalake.implementation.models.SourceModifiedAccessConditions.getSourceIfModifiedSince()"
  - "com.azure.storage.file.datalake.implementation.models.SourceModifiedAccessConditions.getSourceIfNoneMatch()"
  - "com.azure.storage.file.datalake.implementation.models.SourceModifiedAccessConditions.getSourceIfUnmodifiedSince()"
  - "com.azure.storage.file.datalake.implementation.models.SourceModifiedAccessConditions.setSourceIfMatch(java.lang.String)"
  - "com.azure.storage.file.datalake.implementation.models.SourceModifiedAccessConditions.setSourceIfModifiedSince(java.time.OffsetDateTime)"
  - "com.azure.storage.file.datalake.implementation.models.SourceModifiedAccessConditions.setSourceIfNoneMatch(java.lang.String)"
  - "com.azure.storage.file.datalake.implementation.models.SourceModifiedAccessConditions.setSourceIfUnmodifiedSince(java.time.OffsetDateTime)"
  langs:
  - "java"
  name: "SourceModifiedAccessConditions"
  nameWithType: "SourceModifiedAccessConditions"
  fullName: "com.azure.storage.file.datalake.implementation.models.SourceModifiedAccessConditions"
  type: "Class"
  package: "com.azure.storage.file.datalake.implementation.models"
  summary: "Additional parameters for create operation."
  syntax:
    content: "public final class SourceModifiedAccessConditions"
  inheritance:
  - "java.lang.Object"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.azure.storage.file.datalake.implementation.models.SourceModifiedAccessConditions.SourceModifiedAccessConditions()"
  id: "SourceModifiedAccessConditions()"
  parent: "com.azure.storage.file.datalake.implementation.models.SourceModifiedAccessConditions"
  langs:
  - "java"
  name: "SourceModifiedAccessConditions()"
  nameWithType: "SourceModifiedAccessConditions.SourceModifiedAccessConditions()"
  fullName: "com.azure.storage.file.datalake.implementation.models.SourceModifiedAccessConditions.SourceModifiedAccessConditions()"
  overload: "com.azure.storage.file.datalake.implementation.models.SourceModifiedAccessConditions.SourceModifiedAccessConditions*"
  type: "Constructor"
  package: "com.azure.storage.file.datalake.implementation.models"
  syntax:
    content: "public SourceModifiedAccessConditions()"
- uid: "com.azure.storage.file.datalake.implementation.models.SourceModifiedAccessConditions.getSourceIfMatch()"
  id: "getSourceIfMatch()"
  parent: "com.azure.storage.file.datalake.implementation.models.SourceModifiedAccessConditions"
  langs:
  - "java"
  name: "getSourceIfMatch()"
  nameWithType: "SourceModifiedAccessConditions.getSourceIfMatch()"
  fullName: "com.azure.storage.file.datalake.implementation.models.SourceModifiedAccessConditions.getSourceIfMatch()"
  overload: "com.azure.storage.file.datalake.implementation.models.SourceModifiedAccessConditions.getSourceIfMatch*"
  type: "Method"
  package: "com.azure.storage.file.datalake.implementation.models"
  summary: "Get the sourceIfMatch property: Specify an ETag value to operate only on blobs with a matching value."
  syntax:
    content: "public String getSourceIfMatch()"
    return:
      type: "java.lang.String"
      description: "the sourceIfMatch value."
- uid: "com.azure.storage.file.datalake.implementation.models.SourceModifiedAccessConditions.getSourceIfModifiedSince()"
  id: "getSourceIfModifiedSince()"
  parent: "com.azure.storage.file.datalake.implementation.models.SourceModifiedAccessConditions"
  langs:
  - "java"
  name: "getSourceIfModifiedSince()"
  nameWithType: "SourceModifiedAccessConditions.getSourceIfModifiedSince()"
  fullName: "com.azure.storage.file.datalake.implementation.models.SourceModifiedAccessConditions.getSourceIfModifiedSince()"
  overload: "com.azure.storage.file.datalake.implementation.models.SourceModifiedAccessConditions.getSourceIfModifiedSince*"
  type: "Method"
  package: "com.azure.storage.file.datalake.implementation.models"
  summary: "Get the sourceIfModifiedSince property: Specify this header value to operate only on a blob if it has been modified since the specified date/time."
  syntax:
    content: "public OffsetDateTime getSourceIfModifiedSince()"
    return:
      type: "java.time.OffsetDateTime"
      description: "the sourceIfModifiedSince value."
- uid: "com.azure.storage.file.datalake.implementation.models.SourceModifiedAccessConditions.getSourceIfNoneMatch()"
  id: "getSourceIfNoneMatch()"
  parent: "com.azure.storage.file.datalake.implementation.models.SourceModifiedAccessConditions"
  langs:
  - "java"
  name: "getSourceIfNoneMatch()"
  nameWithType: "SourceModifiedAccessConditions.getSourceIfNoneMatch()"
  fullName: "com.azure.storage.file.datalake.implementation.models.SourceModifiedAccessConditions.getSourceIfNoneMatch()"
  overload: "com.azure.storage.file.datalake.implementation.models.SourceModifiedAccessConditions.getSourceIfNoneMatch*"
  type: "Method"
  package: "com.azure.storage.file.datalake.implementation.models"
  summary: "Get the sourceIfNoneMatch property: Specify an ETag value to operate only on blobs without a matching value."
  syntax:
    content: "public String getSourceIfNoneMatch()"
    return:
      type: "java.lang.String"
      description: "the sourceIfNoneMatch value."
- uid: "com.azure.storage.file.datalake.implementation.models.SourceModifiedAccessConditions.getSourceIfUnmodifiedSince()"
  id: "getSourceIfUnmodifiedSince()"
  parent: "com.azure.storage.file.datalake.implementation.models.SourceModifiedAccessConditions"
  langs:
  - "java"
  name: "getSourceIfUnmodifiedSince()"
  nameWithType: "SourceModifiedAccessConditions.getSourceIfUnmodifiedSince()"
  fullName: "com.azure.storage.file.datalake.implementation.models.SourceModifiedAccessConditions.getSourceIfUnmodifiedSince()"
  overload: "com.azure.storage.file.datalake.implementation.models.SourceModifiedAccessConditions.getSourceIfUnmodifiedSince*"
  type: "Method"
  package: "com.azure.storage.file.datalake.implementation.models"
  summary: "Get the sourceIfUnmodifiedSince property: Specify this header value to operate only on a blob if it has not been modified since the specified date/time."
  syntax:
    content: "public OffsetDateTime getSourceIfUnmodifiedSince()"
    return:
      type: "java.time.OffsetDateTime"
      description: "the sourceIfUnmodifiedSince value."
- uid: "com.azure.storage.file.datalake.implementation.models.SourceModifiedAccessConditions.setSourceIfMatch(java.lang.String)"
  id: "setSourceIfMatch(java.lang.String)"
  parent: "com.azure.storage.file.datalake.implementation.models.SourceModifiedAccessConditions"
  langs:
  - "java"
  name: "setSourceIfMatch(String sourceIfMatch)"
  nameWithType: "SourceModifiedAccessConditions.setSourceIfMatch(String sourceIfMatch)"
  fullName: "com.azure.storage.file.datalake.implementation.models.SourceModifiedAccessConditions.setSourceIfMatch(String sourceIfMatch)"
  overload: "com.azure.storage.file.datalake.implementation.models.SourceModifiedAccessConditions.setSourceIfMatch*"
  type: "Method"
  package: "com.azure.storage.file.datalake.implementation.models"
  summary: "Set the sourceIfMatch property: Specify an ETag value to operate only on blobs with a matching value."
  syntax:
    content: "public SourceModifiedAccessConditions setSourceIfMatch(String sourceIfMatch)"
    parameters:
    - id: "sourceIfMatch"
      type: "java.lang.String"
      description: "the sourceIfMatch value to set."
    return:
      type: "com.azure.storage.file.datalake.implementation.models.SourceModifiedAccessConditions"
      description: "the SourceModifiedAccessConditions object itself."
- uid: "com.azure.storage.file.datalake.implementation.models.SourceModifiedAccessConditions.setSourceIfModifiedSince(java.time.OffsetDateTime)"
  id: "setSourceIfModifiedSince(java.time.OffsetDateTime)"
  parent: "com.azure.storage.file.datalake.implementation.models.SourceModifiedAccessConditions"
  langs:
  - "java"
  name: "setSourceIfModifiedSince(OffsetDateTime sourceIfModifiedSince)"
  nameWithType: "SourceModifiedAccessConditions.setSourceIfModifiedSince(OffsetDateTime sourceIfModifiedSince)"
  fullName: "com.azure.storage.file.datalake.implementation.models.SourceModifiedAccessConditions.setSourceIfModifiedSince(OffsetDateTime sourceIfModifiedSince)"
  overload: "com.azure.storage.file.datalake.implementation.models.SourceModifiedAccessConditions.setSourceIfModifiedSince*"
  type: "Method"
  package: "com.azure.storage.file.datalake.implementation.models"
  summary: "Set the sourceIfModifiedSince property: Specify this header value to operate only on a blob if it has been modified since the specified date/time."
  syntax:
    content: "public SourceModifiedAccessConditions setSourceIfModifiedSince(OffsetDateTime sourceIfModifiedSince)"
    parameters:
    - id: "sourceIfModifiedSince"
      type: "java.time.OffsetDateTime"
      description: "the sourceIfModifiedSince value to set."
    return:
      type: "com.azure.storage.file.datalake.implementation.models.SourceModifiedAccessConditions"
      description: "the SourceModifiedAccessConditions object itself."
- uid: "com.azure.storage.file.datalake.implementation.models.SourceModifiedAccessConditions.setSourceIfNoneMatch(java.lang.String)"
  id: "setSourceIfNoneMatch(java.lang.String)"
  parent: "com.azure.storage.file.datalake.implementation.models.SourceModifiedAccessConditions"
  langs:
  - "java"
  name: "setSourceIfNoneMatch(String sourceIfNoneMatch)"
  nameWithType: "SourceModifiedAccessConditions.setSourceIfNoneMatch(String sourceIfNoneMatch)"
  fullName: "com.azure.storage.file.datalake.implementation.models.SourceModifiedAccessConditions.setSourceIfNoneMatch(String sourceIfNoneMatch)"
  overload: "com.azure.storage.file.datalake.implementation.models.SourceModifiedAccessConditions.setSourceIfNoneMatch*"
  type: "Method"
  package: "com.azure.storage.file.datalake.implementation.models"
  summary: "Set the sourceIfNoneMatch property: Specify an ETag value to operate only on blobs without a matching value."
  syntax:
    content: "public SourceModifiedAccessConditions setSourceIfNoneMatch(String sourceIfNoneMatch)"
    parameters:
    - id: "sourceIfNoneMatch"
      type: "java.lang.String"
      description: "the sourceIfNoneMatch value to set."
    return:
      type: "com.azure.storage.file.datalake.implementation.models.SourceModifiedAccessConditions"
      description: "the SourceModifiedAccessConditions object itself."
- uid: "com.azure.storage.file.datalake.implementation.models.SourceModifiedAccessConditions.setSourceIfUnmodifiedSince(java.time.OffsetDateTime)"
  id: "setSourceIfUnmodifiedSince(java.time.OffsetDateTime)"
  parent: "com.azure.storage.file.datalake.implementation.models.SourceModifiedAccessConditions"
  langs:
  - "java"
  name: "setSourceIfUnmodifiedSince(OffsetDateTime sourceIfUnmodifiedSince)"
  nameWithType: "SourceModifiedAccessConditions.setSourceIfUnmodifiedSince(OffsetDateTime sourceIfUnmodifiedSince)"
  fullName: "com.azure.storage.file.datalake.implementation.models.SourceModifiedAccessConditions.setSourceIfUnmodifiedSince(OffsetDateTime sourceIfUnmodifiedSince)"
  overload: "com.azure.storage.file.datalake.implementation.models.SourceModifiedAccessConditions.setSourceIfUnmodifiedSince*"
  type: "Method"
  package: "com.azure.storage.file.datalake.implementation.models"
  summary: "Set the sourceIfUnmodifiedSince property: Specify this header value to operate only on a blob if it has not been modified since the specified date/time."
  syntax:
    content: "public SourceModifiedAccessConditions setSourceIfUnmodifiedSince(OffsetDateTime sourceIfUnmodifiedSince)"
    parameters:
    - id: "sourceIfUnmodifiedSince"
      type: "java.time.OffsetDateTime"
      description: "the sourceIfUnmodifiedSince value to set."
    return:
      type: "com.azure.storage.file.datalake.implementation.models.SourceModifiedAccessConditions"
      description: "the SourceModifiedAccessConditions object itself."
references:
- uid: "com.azure.storage.file.datalake.implementation.models.SourceModifiedAccessConditions.SourceModifiedAccessConditions*"
  name: "SourceModifiedAccessConditions"
  nameWithType: "SourceModifiedAccessConditions.SourceModifiedAccessConditions"
  fullName: "com.azure.storage.file.datalake.implementation.models.SourceModifiedAccessConditions.SourceModifiedAccessConditions"
  package: "com.azure.storage.file.datalake.implementation.models"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "com.azure.storage.file.datalake.implementation.models.SourceModifiedAccessConditions.getSourceIfMatch*"
  name: "getSourceIfMatch"
  nameWithType: "SourceModifiedAccessConditions.getSourceIfMatch"
  fullName: "com.azure.storage.file.datalake.implementation.models.SourceModifiedAccessConditions.getSourceIfMatch"
  package: "com.azure.storage.file.datalake.implementation.models"
- uid: "com.azure.storage.file.datalake.implementation.models.SourceModifiedAccessConditions.setSourceIfMatch*"
  name: "setSourceIfMatch"
  nameWithType: "SourceModifiedAccessConditions.setSourceIfMatch"
  fullName: "com.azure.storage.file.datalake.implementation.models.SourceModifiedAccessConditions.setSourceIfMatch"
  package: "com.azure.storage.file.datalake.implementation.models"
- uid: "com.azure.storage.file.datalake.implementation.models.SourceModifiedAccessConditions.getSourceIfNoneMatch*"
  name: "getSourceIfNoneMatch"
  nameWithType: "SourceModifiedAccessConditions.getSourceIfNoneMatch"
  fullName: "com.azure.storage.file.datalake.implementation.models.SourceModifiedAccessConditions.getSourceIfNoneMatch"
  package: "com.azure.storage.file.datalake.implementation.models"
- uid: "com.azure.storage.file.datalake.implementation.models.SourceModifiedAccessConditions.setSourceIfNoneMatch*"
  name: "setSourceIfNoneMatch"
  nameWithType: "SourceModifiedAccessConditions.setSourceIfNoneMatch"
  fullName: "com.azure.storage.file.datalake.implementation.models.SourceModifiedAccessConditions.setSourceIfNoneMatch"
  package: "com.azure.storage.file.datalake.implementation.models"
- uid: "java.time.OffsetDateTime"
  spec.java:
  - uid: "java.time.OffsetDateTime"
    name: "OffsetDateTime"
    fullName: "java.time.OffsetDateTime"
- uid: "com.azure.storage.file.datalake.implementation.models.SourceModifiedAccessConditions.getSourceIfModifiedSince*"
  name: "getSourceIfModifiedSince"
  nameWithType: "SourceModifiedAccessConditions.getSourceIfModifiedSince"
  fullName: "com.azure.storage.file.datalake.implementation.models.SourceModifiedAccessConditions.getSourceIfModifiedSince"
  package: "com.azure.storage.file.datalake.implementation.models"
- uid: "com.azure.storage.file.datalake.implementation.models.SourceModifiedAccessConditions.setSourceIfModifiedSince*"
  name: "setSourceIfModifiedSince"
  nameWithType: "SourceModifiedAccessConditions.setSourceIfModifiedSince"
  fullName: "com.azure.storage.file.datalake.implementation.models.SourceModifiedAccessConditions.setSourceIfModifiedSince"
  package: "com.azure.storage.file.datalake.implementation.models"
- uid: "com.azure.storage.file.datalake.implementation.models.SourceModifiedAccessConditions.getSourceIfUnmodifiedSince*"
  name: "getSourceIfUnmodifiedSince"
  nameWithType: "SourceModifiedAccessConditions.getSourceIfUnmodifiedSince"
  fullName: "com.azure.storage.file.datalake.implementation.models.SourceModifiedAccessConditions.getSourceIfUnmodifiedSince"
  package: "com.azure.storage.file.datalake.implementation.models"
- uid: "com.azure.storage.file.datalake.implementation.models.SourceModifiedAccessConditions.setSourceIfUnmodifiedSince*"
  name: "setSourceIfUnmodifiedSince"
  nameWithType: "SourceModifiedAccessConditions.setSourceIfUnmodifiedSince"
  fullName: "com.azure.storage.file.datalake.implementation.models.SourceModifiedAccessConditions.setSourceIfUnmodifiedSince"
  package: "com.azure.storage.file.datalake.implementation.models"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
