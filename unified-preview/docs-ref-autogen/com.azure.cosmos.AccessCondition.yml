### YamlMime:ManagedReference
items:
- uid: "com.azure.cosmos.AccessCondition"
  id: "AccessCondition"
  parent: "com.azure.cosmos"
  children:
  - "com.azure.cosmos.AccessCondition.AccessCondition()"
  - "com.azure.cosmos.AccessCondition.getCondition()"
  - "com.azure.cosmos.AccessCondition.getType()"
  - "com.azure.cosmos.AccessCondition.setCondition(java.lang.String)"
  - "com.azure.cosmos.AccessCondition.setType(com.azure.cosmos.AccessConditionType)"
  langs:
  - "java"
  name: "AccessCondition"
  nameWithType: "AccessCondition"
  fullName: "com.azure.cosmos.AccessCondition"
  type: "Class"
  package: "com.azure.cosmos"
  summary: "Represents a set of access conditions to be used for operations against the Azure Cosmos DB database service."
  syntax:
    content: "public final class AccessCondition"
  inheritance:
  - "java.lang.Object"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.azure.cosmos.AccessCondition.AccessCondition()"
  id: "AccessCondition()"
  parent: "com.azure.cosmos.AccessCondition"
  langs:
  - "java"
  name: "AccessCondition()"
  nameWithType: "AccessCondition.AccessCondition()"
  fullName: "com.azure.cosmos.AccessCondition.AccessCondition()"
  overload: "com.azure.cosmos.AccessCondition.AccessCondition*"
  type: "Constructor"
  package: "com.azure.cosmos"
  syntax:
    content: "public AccessCondition()"
- uid: "com.azure.cosmos.AccessCondition.getCondition()"
  id: "getCondition()"
  parent: "com.azure.cosmos.AccessCondition"
  langs:
  - "java"
  name: "getCondition()"
  nameWithType: "AccessCondition.getCondition()"
  fullName: "com.azure.cosmos.AccessCondition.getCondition()"
  overload: "com.azure.cosmos.AccessCondition.getCondition*"
  type: "Method"
  package: "com.azure.cosmos"
  summary: "Gets the value of the condition - for AccessConditionType IfMatchs and IfNotMatch, this is the ETag that has to be compared to."
  syntax:
    content: "public String getCondition()"
    return:
      type: "java.lang.String"
      description: "the condition."
- uid: "com.azure.cosmos.AccessCondition.getType()"
  id: "getType()"
  parent: "com.azure.cosmos.AccessCondition"
  langs:
  - "java"
  name: "getType()"
  nameWithType: "AccessCondition.getType()"
  fullName: "com.azure.cosmos.AccessCondition.getType()"
  overload: "com.azure.cosmos.AccessCondition.getType*"
  type: "Method"
  package: "com.azure.cosmos"
  summary: "Gets the condition type."
  syntax:
    content: "public AccessConditionType getType()"
    return:
      type: "com.azure.cosmos.AccessConditionType"
      description: "the condition type."
- uid: "com.azure.cosmos.AccessCondition.setCondition(java.lang.String)"
  id: "setCondition(java.lang.String)"
  parent: "com.azure.cosmos.AccessCondition"
  langs:
  - "java"
  name: "setCondition(String condition)"
  nameWithType: "AccessCondition.setCondition(String condition)"
  fullName: "com.azure.cosmos.AccessCondition.setCondition(String condition)"
  overload: "com.azure.cosmos.AccessCondition.setCondition*"
  type: "Method"
  package: "com.azure.cosmos"
  summary: "Sets the value of the condition - for AccessConditionType IfMatchs and IfNotMatch, this is the ETag that has to be compared to."
  syntax:
    content: "public AccessCondition setCondition(String condition)"
    parameters:
    - id: "condition"
      type: "java.lang.String"
      description: "the condition to use."
    return:
      type: "com.azure.cosmos.AccessCondition"
      description: "the Access Condition"
- uid: "com.azure.cosmos.AccessCondition.setType(com.azure.cosmos.AccessConditionType)"
  id: "setType(com.azure.cosmos.AccessConditionType)"
  parent: "com.azure.cosmos.AccessCondition"
  langs:
  - "java"
  name: "setType(AccessConditionType type)"
  nameWithType: "AccessCondition.setType(AccessConditionType type)"
  fullName: "com.azure.cosmos.AccessCondition.setType(AccessConditionType type)"
  overload: "com.azure.cosmos.AccessCondition.setType*"
  type: "Method"
  package: "com.azure.cosmos"
  summary: "Sets the condition type."
  syntax:
    content: "public AccessCondition setType(AccessConditionType type)"
    parameters:
    - id: "type"
      type: "com.azure.cosmos.AccessConditionType"
      description: "the condition type to use."
    return:
      type: "com.azure.cosmos.AccessCondition"
      description: "the Access Condition"
references:
- uid: "com.azure.cosmos.AccessCondition.AccessCondition*"
  name: "AccessCondition"
  nameWithType: "AccessCondition.AccessCondition"
  fullName: "com.azure.cosmos.AccessCondition.AccessCondition"
  package: "com.azure.cosmos"
- uid: "com.azure.cosmos.AccessConditionType"
  name: "AccessConditionType"
  nameWithType: "AccessConditionType"
  fullName: "com.azure.cosmos.AccessConditionType"
- uid: "com.azure.cosmos.AccessCondition.getType*"
  name: "getType"
  nameWithType: "AccessCondition.getType"
  fullName: "com.azure.cosmos.AccessCondition.getType"
  package: "com.azure.cosmos"
- uid: "com.azure.cosmos.AccessCondition.setType*"
  name: "setType"
  nameWithType: "AccessCondition.setType"
  fullName: "com.azure.cosmos.AccessCondition.setType"
  package: "com.azure.cosmos"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "com.azure.cosmos.AccessCondition.getCondition*"
  name: "getCondition"
  nameWithType: "AccessCondition.getCondition"
  fullName: "com.azure.cosmos.AccessCondition.getCondition"
  package: "com.azure.cosmos"
- uid: "com.azure.cosmos.AccessCondition.setCondition*"
  name: "setCondition"
  nameWithType: "AccessCondition.setCondition"
  fullName: "com.azure.cosmos.AccessCondition.setCondition"
  package: "com.azure.cosmos"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
