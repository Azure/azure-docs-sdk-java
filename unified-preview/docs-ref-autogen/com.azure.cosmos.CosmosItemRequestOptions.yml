### YamlMime:ManagedReference
items:
- uid: "com.azure.cosmos.CosmosItemRequestOptions"
  id: "CosmosItemRequestOptions"
  parent: "com.azure.cosmos"
  children:
  - "com.azure.cosmos.CosmosItemRequestOptions.CosmosItemRequestOptions()"
  - "com.azure.cosmos.CosmosItemRequestOptions.CosmosItemRequestOptions(com.azure.cosmos.PartitionKey)"
  - "com.azure.cosmos.CosmosItemRequestOptions.getAccessCondition()"
  - "com.azure.cosmos.CosmosItemRequestOptions.getConsistencyLevel()"
  - "com.azure.cosmos.CosmosItemRequestOptions.getIndexingDirective()"
  - "com.azure.cosmos.CosmosItemRequestOptions.getPartitionKey()"
  - "com.azure.cosmos.CosmosItemRequestOptions.getPostTriggerInclude()"
  - "com.azure.cosmos.CosmosItemRequestOptions.getPreTriggerInclude()"
  - "com.azure.cosmos.CosmosItemRequestOptions.getSessionToken()"
  - "com.azure.cosmos.CosmosItemRequestOptions.setAccessCondition(com.azure.cosmos.AccessCondition)"
  - "com.azure.cosmos.CosmosItemRequestOptions.setConsistencyLevel(com.azure.cosmos.ConsistencyLevel)"
  - "com.azure.cosmos.CosmosItemRequestOptions.setIndexingDirective(com.azure.cosmos.IndexingDirective)"
  - "com.azure.cosmos.CosmosItemRequestOptions.setPartitionKey(com.azure.cosmos.PartitionKey)"
  - "com.azure.cosmos.CosmosItemRequestOptions.setPostTriggerInclude(java.util.List<java.lang.String>)"
  - "com.azure.cosmos.CosmosItemRequestOptions.setPreTriggerInclude(java.util.List<java.lang.String>)"
  - "com.azure.cosmos.CosmosItemRequestOptions.setSessionToken(java.lang.String)"
  - "com.azure.cosmos.CosmosItemRequestOptions.toRequestOptions()"
  langs:
  - "java"
  name: "CosmosItemRequestOptions"
  nameWithType: "CosmosItemRequestOptions"
  fullName: "com.azure.cosmos.CosmosItemRequestOptions"
  type: "Class"
  package: "com.azure.cosmos"
  summary: "Encapsulates options that can be specified for a request issued to cosmos Item."
  syntax:
    content: "public class CosmosItemRequestOptions"
  inheritance:
  - "java.lang.Object"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.azure.cosmos.CosmosItemRequestOptions.CosmosItemRequestOptions()"
  id: "CosmosItemRequestOptions()"
  parent: "com.azure.cosmos.CosmosItemRequestOptions"
  langs:
  - "java"
  name: "CosmosItemRequestOptions()"
  nameWithType: "CosmosItemRequestOptions.CosmosItemRequestOptions()"
  fullName: "com.azure.cosmos.CosmosItemRequestOptions.CosmosItemRequestOptions()"
  overload: "com.azure.cosmos.CosmosItemRequestOptions.CosmosItemRequestOptions*"
  type: "Constructor"
  package: "com.azure.cosmos"
  summary: "Constructor"
  syntax:
    content: "public CosmosItemRequestOptions()"
- uid: "com.azure.cosmos.CosmosItemRequestOptions.CosmosItemRequestOptions(com.azure.cosmos.PartitionKey)"
  id: "CosmosItemRequestOptions(com.azure.cosmos.PartitionKey)"
  parent: "com.azure.cosmos.CosmosItemRequestOptions"
  langs:
  - "java"
  name: "CosmosItemRequestOptions(PartitionKey partitionKey)"
  nameWithType: "CosmosItemRequestOptions.CosmosItemRequestOptions(PartitionKey partitionKey)"
  fullName: "com.azure.cosmos.CosmosItemRequestOptions.CosmosItemRequestOptions(PartitionKey partitionKey)"
  overload: "com.azure.cosmos.CosmosItemRequestOptions.CosmosItemRequestOptions*"
  type: "Constructor"
  package: "com.azure.cosmos"
  summary: "Constructor"
  syntax:
    content: " CosmosItemRequestOptions(PartitionKey partitionKey)"
    parameters:
    - id: "partitionKey"
      type: "com.azure.cosmos.PartitionKey"
      description: "the partition key"
- uid: "com.azure.cosmos.CosmosItemRequestOptions.getAccessCondition()"
  id: "getAccessCondition()"
  parent: "com.azure.cosmos.CosmosItemRequestOptions"
  langs:
  - "java"
  name: "getAccessCondition()"
  nameWithType: "CosmosItemRequestOptions.getAccessCondition()"
  fullName: "com.azure.cosmos.CosmosItemRequestOptions.getAccessCondition()"
  overload: "com.azure.cosmos.CosmosItemRequestOptions.getAccessCondition*"
  type: "Method"
  package: "com.azure.cosmos"
  summary: "Gets the conditions associated with the request."
  syntax:
    content: "public AccessCondition getAccessCondition()"
    return:
      type: "com.azure.cosmos.AccessCondition"
      description: "the access condition."
- uid: "com.azure.cosmos.CosmosItemRequestOptions.getConsistencyLevel()"
  id: "getConsistencyLevel()"
  parent: "com.azure.cosmos.CosmosItemRequestOptions"
  langs:
  - "java"
  name: "getConsistencyLevel()"
  nameWithType: "CosmosItemRequestOptions.getConsistencyLevel()"
  fullName: "com.azure.cosmos.CosmosItemRequestOptions.getConsistencyLevel()"
  overload: "com.azure.cosmos.CosmosItemRequestOptions.getConsistencyLevel*"
  type: "Method"
  package: "com.azure.cosmos"
  summary: "Gets the consistency level required for the request."
  syntax:
    content: "public ConsistencyLevel getConsistencyLevel()"
    return:
      type: "com.azure.cosmos.ConsistencyLevel"
      description: "the consistency level."
- uid: "com.azure.cosmos.CosmosItemRequestOptions.getIndexingDirective()"
  id: "getIndexingDirective()"
  parent: "com.azure.cosmos.CosmosItemRequestOptions"
  langs:
  - "java"
  name: "getIndexingDirective()"
  nameWithType: "CosmosItemRequestOptions.getIndexingDirective()"
  fullName: "com.azure.cosmos.CosmosItemRequestOptions.getIndexingDirective()"
  overload: "com.azure.cosmos.CosmosItemRequestOptions.getIndexingDirective*"
  type: "Method"
  package: "com.azure.cosmos"
  summary: "Gets the indexing directive (index, do not index etc)."
  syntax:
    content: "public IndexingDirective getIndexingDirective()"
    return:
      type: "com.azure.cosmos.IndexingDirective"
      description: "the indexing directive."
- uid: "com.azure.cosmos.CosmosItemRequestOptions.getPartitionKey()"
  id: "getPartitionKey()"
  parent: "com.azure.cosmos.CosmosItemRequestOptions"
  langs:
  - "java"
  name: "getPartitionKey()"
  nameWithType: "CosmosItemRequestOptions.getPartitionKey()"
  fullName: "com.azure.cosmos.CosmosItemRequestOptions.getPartitionKey()"
  overload: "com.azure.cosmos.CosmosItemRequestOptions.getPartitionKey*"
  type: "Method"
  package: "com.azure.cosmos"
  summary: "Gets the partition key"
  syntax:
    content: " PartitionKey getPartitionKey()"
    return:
      type: "com.azure.cosmos.PartitionKey"
      description: "the partition key"
- uid: "com.azure.cosmos.CosmosItemRequestOptions.getPostTriggerInclude()"
  id: "getPostTriggerInclude()"
  parent: "com.azure.cosmos.CosmosItemRequestOptions"
  langs:
  - "java"
  name: "getPostTriggerInclude()"
  nameWithType: "CosmosItemRequestOptions.getPostTriggerInclude()"
  fullName: "com.azure.cosmos.CosmosItemRequestOptions.getPostTriggerInclude()"
  overload: "com.azure.cosmos.CosmosItemRequestOptions.getPostTriggerInclude*"
  type: "Method"
  package: "com.azure.cosmos"
  summary: "Gets the triggers to be invoked after the operation."
  syntax:
    content: "public List<String> getPostTriggerInclude()"
    return:
      type: "java.util.List<java.lang.String>"
      description: "the triggers to be invoked after the operation."
- uid: "com.azure.cosmos.CosmosItemRequestOptions.getPreTriggerInclude()"
  id: "getPreTriggerInclude()"
  parent: "com.azure.cosmos.CosmosItemRequestOptions"
  langs:
  - "java"
  name: "getPreTriggerInclude()"
  nameWithType: "CosmosItemRequestOptions.getPreTriggerInclude()"
  fullName: "com.azure.cosmos.CosmosItemRequestOptions.getPreTriggerInclude()"
  overload: "com.azure.cosmos.CosmosItemRequestOptions.getPreTriggerInclude*"
  type: "Method"
  package: "com.azure.cosmos"
  summary: "Gets the triggers to be invoked before the operation."
  syntax:
    content: "public List<String> getPreTriggerInclude()"
    return:
      type: "java.util.List<java.lang.String>"
      description: "the triggers to be invoked before the operation."
- uid: "com.azure.cosmos.CosmosItemRequestOptions.getSessionToken()"
  id: "getSessionToken()"
  parent: "com.azure.cosmos.CosmosItemRequestOptions"
  langs:
  - "java"
  name: "getSessionToken()"
  nameWithType: "CosmosItemRequestOptions.getSessionToken()"
  fullName: "com.azure.cosmos.CosmosItemRequestOptions.getSessionToken()"
  overload: "com.azure.cosmos.CosmosItemRequestOptions.getSessionToken*"
  type: "Method"
  package: "com.azure.cosmos"
  summary: "Gets the token for use with session consistency."
  syntax:
    content: "public String getSessionToken()"
    return:
      type: "java.lang.String"
      description: "the session token."
- uid: "com.azure.cosmos.CosmosItemRequestOptions.setAccessCondition(com.azure.cosmos.AccessCondition)"
  id: "setAccessCondition(com.azure.cosmos.AccessCondition)"
  parent: "com.azure.cosmos.CosmosItemRequestOptions"
  langs:
  - "java"
  name: "setAccessCondition(AccessCondition accessCondition)"
  nameWithType: "CosmosItemRequestOptions.setAccessCondition(AccessCondition accessCondition)"
  fullName: "com.azure.cosmos.CosmosItemRequestOptions.setAccessCondition(AccessCondition accessCondition)"
  overload: "com.azure.cosmos.CosmosItemRequestOptions.setAccessCondition*"
  type: "Method"
  package: "com.azure.cosmos"
  summary: "Sets the conditions associated with the request."
  syntax:
    content: "public CosmosItemRequestOptions setAccessCondition(AccessCondition accessCondition)"
    parameters:
    - id: "accessCondition"
      type: "com.azure.cosmos.AccessCondition"
      description: "the access condition."
    return:
      type: "com.azure.cosmos.CosmosItemRequestOptions"
      description: "the current request options"
- uid: "com.azure.cosmos.CosmosItemRequestOptions.setConsistencyLevel(com.azure.cosmos.ConsistencyLevel)"
  id: "setConsistencyLevel(com.azure.cosmos.ConsistencyLevel)"
  parent: "com.azure.cosmos.CosmosItemRequestOptions"
  langs:
  - "java"
  name: "setConsistencyLevel(ConsistencyLevel consistencyLevel)"
  nameWithType: "CosmosItemRequestOptions.setConsistencyLevel(ConsistencyLevel consistencyLevel)"
  fullName: "com.azure.cosmos.CosmosItemRequestOptions.setConsistencyLevel(ConsistencyLevel consistencyLevel)"
  overload: "com.azure.cosmos.CosmosItemRequestOptions.setConsistencyLevel*"
  type: "Method"
  package: "com.azure.cosmos"
  summary: "Sets the consistency level required for the request."
  syntax:
    content: "public CosmosItemRequestOptions setConsistencyLevel(ConsistencyLevel consistencyLevel)"
    parameters:
    - id: "consistencyLevel"
      type: "com.azure.cosmos.ConsistencyLevel"
      description: "the consistency level."
    return:
      type: "com.azure.cosmos.CosmosItemRequestOptions"
      description: "the CosmosItemRequestOptions."
- uid: "com.azure.cosmos.CosmosItemRequestOptions.setIndexingDirective(com.azure.cosmos.IndexingDirective)"
  id: "setIndexingDirective(com.azure.cosmos.IndexingDirective)"
  parent: "com.azure.cosmos.CosmosItemRequestOptions"
  langs:
  - "java"
  name: "setIndexingDirective(IndexingDirective indexingDirective)"
  nameWithType: "CosmosItemRequestOptions.setIndexingDirective(IndexingDirective indexingDirective)"
  fullName: "com.azure.cosmos.CosmosItemRequestOptions.setIndexingDirective(IndexingDirective indexingDirective)"
  overload: "com.azure.cosmos.CosmosItemRequestOptions.setIndexingDirective*"
  type: "Method"
  package: "com.azure.cosmos"
  summary: "Sets the indexing directive (index, do not index etc)."
  syntax:
    content: "public CosmosItemRequestOptions setIndexingDirective(IndexingDirective indexingDirective)"
    parameters:
    - id: "indexingDirective"
      type: "com.azure.cosmos.IndexingDirective"
      description: "the indexing directive."
    return:
      type: "com.azure.cosmos.CosmosItemRequestOptions"
      description: "the CosmosItemRequestOptions."
- uid: "com.azure.cosmos.CosmosItemRequestOptions.setPartitionKey(com.azure.cosmos.PartitionKey)"
  id: "setPartitionKey(com.azure.cosmos.PartitionKey)"
  parent: "com.azure.cosmos.CosmosItemRequestOptions"
  langs:
  - "java"
  name: "setPartitionKey(PartitionKey partitionKey)"
  nameWithType: "CosmosItemRequestOptions.setPartitionKey(PartitionKey partitionKey)"
  fullName: "com.azure.cosmos.CosmosItemRequestOptions.setPartitionKey(PartitionKey partitionKey)"
  overload: "com.azure.cosmos.CosmosItemRequestOptions.setPartitionKey*"
  type: "Method"
  package: "com.azure.cosmos"
  summary: "Sets the partition key"
  syntax:
    content: " CosmosItemRequestOptions setPartitionKey(PartitionKey partitionKey)"
    parameters:
    - id: "partitionKey"
      type: "com.azure.cosmos.PartitionKey"
      description: "the partition key"
    return:
      type: "com.azure.cosmos.CosmosItemRequestOptions"
      description: "the CosmosItemRequestOptions."
- uid: "com.azure.cosmos.CosmosItemRequestOptions.setPostTriggerInclude(java.util.List<java.lang.String>)"
  id: "setPostTriggerInclude(java.util.List<java.lang.String>)"
  parent: "com.azure.cosmos.CosmosItemRequestOptions"
  langs:
  - "java"
  name: "setPostTriggerInclude(List<String> postTriggerInclude)"
  nameWithType: "CosmosItemRequestOptions.setPostTriggerInclude(List<String> postTriggerInclude)"
  fullName: "com.azure.cosmos.CosmosItemRequestOptions.setPostTriggerInclude(List<String> postTriggerInclude)"
  overload: "com.azure.cosmos.CosmosItemRequestOptions.setPostTriggerInclude*"
  type: "Method"
  package: "com.azure.cosmos"
  summary: "Sets the triggers to be invoked after the operation."
  syntax:
    content: "public CosmosItemRequestOptions setPostTriggerInclude(List<String> postTriggerInclude)"
    parameters:
    - id: "postTriggerInclude"
      type: "java.util.List<java.lang.String>"
      description: "the triggers to be invoked after the operation."
    return:
      type: "com.azure.cosmos.CosmosItemRequestOptions"
      description: "the CosmosItemRequestOptions."
- uid: "com.azure.cosmos.CosmosItemRequestOptions.setPreTriggerInclude(java.util.List<java.lang.String>)"
  id: "setPreTriggerInclude(java.util.List<java.lang.String>)"
  parent: "com.azure.cosmos.CosmosItemRequestOptions"
  langs:
  - "java"
  name: "setPreTriggerInclude(List<String> preTriggerInclude)"
  nameWithType: "CosmosItemRequestOptions.setPreTriggerInclude(List<String> preTriggerInclude)"
  fullName: "com.azure.cosmos.CosmosItemRequestOptions.setPreTriggerInclude(List<String> preTriggerInclude)"
  overload: "com.azure.cosmos.CosmosItemRequestOptions.setPreTriggerInclude*"
  type: "Method"
  package: "com.azure.cosmos"
  summary: "Sets the triggers to be invoked before the operation."
  syntax:
    content: "public CosmosItemRequestOptions setPreTriggerInclude(List<String> preTriggerInclude)"
    parameters:
    - id: "preTriggerInclude"
      type: "java.util.List<java.lang.String>"
      description: "the triggers to be invoked before the operation."
    return:
      type: "com.azure.cosmos.CosmosItemRequestOptions"
      description: "the CosmosItemRequestOptions."
- uid: "com.azure.cosmos.CosmosItemRequestOptions.setSessionToken(java.lang.String)"
  id: "setSessionToken(java.lang.String)"
  parent: "com.azure.cosmos.CosmosItemRequestOptions"
  langs:
  - "java"
  name: "setSessionToken(String sessionToken)"
  nameWithType: "CosmosItemRequestOptions.setSessionToken(String sessionToken)"
  fullName: "com.azure.cosmos.CosmosItemRequestOptions.setSessionToken(String sessionToken)"
  overload: "com.azure.cosmos.CosmosItemRequestOptions.setSessionToken*"
  type: "Method"
  package: "com.azure.cosmos"
  summary: "Sets the token for use with session consistency."
  syntax:
    content: "public CosmosItemRequestOptions setSessionToken(String sessionToken)"
    parameters:
    - id: "sessionToken"
      type: "java.lang.String"
      description: "the session token."
    return:
      type: "com.azure.cosmos.CosmosItemRequestOptions"
      description: "the CosmosItemRequestOptions."
- uid: "com.azure.cosmos.CosmosItemRequestOptions.toRequestOptions()"
  id: "toRequestOptions()"
  parent: "com.azure.cosmos.CosmosItemRequestOptions"
  langs:
  - "java"
  name: "toRequestOptions()"
  nameWithType: "CosmosItemRequestOptions.toRequestOptions()"
  fullName: "com.azure.cosmos.CosmosItemRequestOptions.toRequestOptions()"
  overload: "com.azure.cosmos.CosmosItemRequestOptions.toRequestOptions*"
  type: "Method"
  package: "com.azure.cosmos"
  syntax:
    content: " RequestOptions toRequestOptions()"
    return:
      type: "com.azure.cosmos.implementation.RequestOptions"
references:
- uid: "com.azure.cosmos.CosmosItemRequestOptions.CosmosItemRequestOptions*"
  name: "CosmosItemRequestOptions"
  nameWithType: "CosmosItemRequestOptions.CosmosItemRequestOptions"
  fullName: "com.azure.cosmos.CosmosItemRequestOptions.CosmosItemRequestOptions"
  package: "com.azure.cosmos"
- uid: "com.azure.cosmos.PartitionKey"
  name: "PartitionKey"
  nameWithType: "PartitionKey"
  fullName: "com.azure.cosmos.PartitionKey"
- uid: "com.azure.cosmos.AccessCondition"
  name: "AccessCondition"
  nameWithType: "AccessCondition"
  fullName: "com.azure.cosmos.AccessCondition"
- uid: "com.azure.cosmos.CosmosItemRequestOptions.getAccessCondition*"
  name: "getAccessCondition"
  nameWithType: "CosmosItemRequestOptions.getAccessCondition"
  fullName: "com.azure.cosmos.CosmosItemRequestOptions.getAccessCondition"
  package: "com.azure.cosmos"
- uid: "com.azure.cosmos.CosmosItemRequestOptions.setAccessCondition*"
  name: "setAccessCondition"
  nameWithType: "CosmosItemRequestOptions.setAccessCondition"
  fullName: "com.azure.cosmos.CosmosItemRequestOptions.setAccessCondition"
  package: "com.azure.cosmos"
- uid: "com.azure.cosmos.ConsistencyLevel"
  name: "ConsistencyLevel"
  nameWithType: "ConsistencyLevel"
  fullName: "com.azure.cosmos.ConsistencyLevel"
- uid: "com.azure.cosmos.CosmosItemRequestOptions.getConsistencyLevel*"
  name: "getConsistencyLevel"
  nameWithType: "CosmosItemRequestOptions.getConsistencyLevel"
  fullName: "com.azure.cosmos.CosmosItemRequestOptions.getConsistencyLevel"
  package: "com.azure.cosmos"
- uid: "com.azure.cosmos.CosmosItemRequestOptions.setConsistencyLevel*"
  name: "setConsistencyLevel"
  nameWithType: "CosmosItemRequestOptions.setConsistencyLevel"
  fullName: "com.azure.cosmos.CosmosItemRequestOptions.setConsistencyLevel"
  package: "com.azure.cosmos"
- uid: "com.azure.cosmos.IndexingDirective"
  name: "IndexingDirective"
  nameWithType: "IndexingDirective"
  fullName: "com.azure.cosmos.IndexingDirective"
- uid: "com.azure.cosmos.CosmosItemRequestOptions.getIndexingDirective*"
  name: "getIndexingDirective"
  nameWithType: "CosmosItemRequestOptions.getIndexingDirective"
  fullName: "com.azure.cosmos.CosmosItemRequestOptions.getIndexingDirective"
  package: "com.azure.cosmos"
- uid: "com.azure.cosmos.CosmosItemRequestOptions.setIndexingDirective*"
  name: "setIndexingDirective"
  nameWithType: "CosmosItemRequestOptions.setIndexingDirective"
  fullName: "com.azure.cosmos.CosmosItemRequestOptions.setIndexingDirective"
  package: "com.azure.cosmos"
- uid: "java.util.List<java.lang.String>"
  spec.java:
  - uid: "java.util.List"
    name: "List"
    fullName: "java.util.List"
  - name: "<"
    fullName: "<"
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
  - name: ">"
    fullName: ">"
- uid: "com.azure.cosmos.CosmosItemRequestOptions.getPreTriggerInclude*"
  name: "getPreTriggerInclude"
  nameWithType: "CosmosItemRequestOptions.getPreTriggerInclude"
  fullName: "com.azure.cosmos.CosmosItemRequestOptions.getPreTriggerInclude"
  package: "com.azure.cosmos"
- uid: "com.azure.cosmos.CosmosItemRequestOptions.setPreTriggerInclude*"
  name: "setPreTriggerInclude"
  nameWithType: "CosmosItemRequestOptions.setPreTriggerInclude"
  fullName: "com.azure.cosmos.CosmosItemRequestOptions.setPreTriggerInclude"
  package: "com.azure.cosmos"
- uid: "com.azure.cosmos.CosmosItemRequestOptions.getPostTriggerInclude*"
  name: "getPostTriggerInclude"
  nameWithType: "CosmosItemRequestOptions.getPostTriggerInclude"
  fullName: "com.azure.cosmos.CosmosItemRequestOptions.getPostTriggerInclude"
  package: "com.azure.cosmos"
- uid: "com.azure.cosmos.CosmosItemRequestOptions.setPostTriggerInclude*"
  name: "setPostTriggerInclude"
  nameWithType: "CosmosItemRequestOptions.setPostTriggerInclude"
  fullName: "com.azure.cosmos.CosmosItemRequestOptions.setPostTriggerInclude"
  package: "com.azure.cosmos"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "com.azure.cosmos.CosmosItemRequestOptions.getSessionToken*"
  name: "getSessionToken"
  nameWithType: "CosmosItemRequestOptions.getSessionToken"
  fullName: "com.azure.cosmos.CosmosItemRequestOptions.getSessionToken"
  package: "com.azure.cosmos"
- uid: "com.azure.cosmos.CosmosItemRequestOptions.setSessionToken*"
  name: "setSessionToken"
  nameWithType: "CosmosItemRequestOptions.setSessionToken"
  fullName: "com.azure.cosmos.CosmosItemRequestOptions.setSessionToken"
  package: "com.azure.cosmos"
- uid: "com.azure.cosmos.CosmosItemRequestOptions.setPartitionKey*"
  name: "setPartitionKey"
  nameWithType: "CosmosItemRequestOptions.setPartitionKey"
  fullName: "com.azure.cosmos.CosmosItemRequestOptions.setPartitionKey"
  package: "com.azure.cosmos"
- uid: "com.azure.cosmos.CosmosItemRequestOptions.getPartitionKey*"
  name: "getPartitionKey"
  nameWithType: "CosmosItemRequestOptions.getPartitionKey"
  fullName: "com.azure.cosmos.CosmosItemRequestOptions.getPartitionKey"
  package: "com.azure.cosmos"
- uid: "com.azure.cosmos.implementation.RequestOptions"
  name: "RequestOptions"
  nameWithType: "RequestOptions"
  fullName: "com.azure.cosmos.implementation.RequestOptions"
- uid: "com.azure.cosmos.CosmosItemRequestOptions.toRequestOptions*"
  name: "toRequestOptions"
  nameWithType: "CosmosItemRequestOptions.toRequestOptions"
  fullName: "com.azure.cosmos.CosmosItemRequestOptions.toRequestOptions"
  package: "com.azure.cosmos"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "java.util.List"
  name: "List"
  nameWithType: "List"
  fullName: "java.util.List"
