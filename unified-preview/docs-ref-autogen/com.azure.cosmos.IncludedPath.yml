### YamlMime:ManagedReference
items:
- uid: "com.azure.cosmos.IncludedPath"
  id: "IncludedPath"
  parent: "com.azure.cosmos"
  children:
  - "com.azure.cosmos.IncludedPath.IncludedPath()"
  - "com.azure.cosmos.IncludedPath.IncludedPath(java.lang.String)"
  - "com.azure.cosmos.IncludedPath.getIndexes()"
  - "com.azure.cosmos.IncludedPath.getPath()"
  - "com.azure.cosmos.IncludedPath.populatePropertyBag()"
  - "com.azure.cosmos.IncludedPath.setIndexes(java.util.Collection<com.azure.cosmos.Index>)"
  - "com.azure.cosmos.IncludedPath.setPath(java.lang.String)"
  langs:
  - "java"
  name: "IncludedPath"
  nameWithType: "IncludedPath"
  fullName: "com.azure.cosmos.IncludedPath"
  type: "Class"
  package: "com.azure.cosmos"
  summary: "Represents an included path of the IndexingPolicy in the Azure Cosmos DB database service."
  syntax:
    content: "public class IncludedPath extends JsonSerializable"
  inheritance:
  - "java.lang.Object"
  - "com.azure.cosmos.JsonSerializable"
  inheritedMembers:
  - "com.azure.cosmos.JsonSerializable.<T>getCollection(java.lang.String,java.lang.Class<T>,boolean...)"
  - "com.azure.cosmos.JsonSerializable.<T>getList(java.lang.String,java.lang.Class<T>,boolean...)"
  - "com.azure.cosmos.JsonSerializable.<T>getObject(java.lang.String,java.lang.Class<T>,boolean...)"
  - "com.azure.cosmos.JsonSerializable.<T>set(java.lang.String,T)"
  - "com.azure.cosmos.JsonSerializable.<T>toObject(java.lang.Class<T>)"
  - "com.azure.cosmos.JsonSerializable.get(java.lang.String)"
  - "com.azure.cosmos.JsonSerializable.getBoolean(java.lang.String)"
  - "com.azure.cosmos.JsonSerializable.getCollection(java.lang.String)"
  - "com.azure.cosmos.JsonSerializable.getDouble(java.lang.String)"
  - "com.azure.cosmos.JsonSerializable.getInt(java.lang.String)"
  - "com.azure.cosmos.JsonSerializable.getLogger()"
  - "com.azure.cosmos.JsonSerializable.getLong(java.lang.String)"
  - "com.azure.cosmos.JsonSerializable.getMap()"
  - "com.azure.cosmos.JsonSerializable.getObject(java.lang.String)"
  - "com.azure.cosmos.JsonSerializable.getObjectByPath(java.util.List<java.lang.String>)"
  - "com.azure.cosmos.JsonSerializable.getString(java.lang.String)"
  - "com.azure.cosmos.JsonSerializable.getValue(com.fasterxml.jackson.databind.JsonNode)"
  - "com.azure.cosmos.JsonSerializable.has(java.lang.String)"
  - "com.azure.cosmos.JsonSerializable.populatePropertyBag()"
  - "com.azure.cosmos.JsonSerializable.remove(java.lang.String)"
  - "com.azure.cosmos.JsonSerializable.setMapper(com.fasterxml.jackson.databind.ObjectMapper)"
  - "com.azure.cosmos.JsonSerializable.toJson()"
  - "com.azure.cosmos.JsonSerializable.toJson(com.azure.cosmos.SerializationFormattingPolicy)"
  - "com.azure.cosmos.JsonSerializable.toString()"
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.azure.cosmos.IncludedPath.IncludedPath()"
  id: "IncludedPath()"
  parent: "com.azure.cosmos.IncludedPath"
  langs:
  - "java"
  name: "IncludedPath()"
  nameWithType: "IncludedPath.IncludedPath()"
  fullName: "com.azure.cosmos.IncludedPath.IncludedPath()"
  overload: "com.azure.cosmos.IncludedPath.IncludedPath*"
  type: "Constructor"
  package: "com.azure.cosmos"
  summary: "Constructor."
  syntax:
    content: "public IncludedPath()"
- uid: "com.azure.cosmos.IncludedPath.IncludedPath(java.lang.String)"
  id: "IncludedPath(java.lang.String)"
  parent: "com.azure.cosmos.IncludedPath"
  langs:
  - "java"
  name: "IncludedPath(String jsonString)"
  nameWithType: "IncludedPath.IncludedPath(String jsonString)"
  fullName: "com.azure.cosmos.IncludedPath.IncludedPath(String jsonString)"
  overload: "com.azure.cosmos.IncludedPath.IncludedPath*"
  type: "Constructor"
  package: "com.azure.cosmos"
  summary: "Constructor."
  syntax:
    content: "public IncludedPath(String jsonString)"
    parameters:
    - id: "jsonString"
      type: "java.lang.String"
      description: "the json string that represents the included path."
- uid: "com.azure.cosmos.IncludedPath.getIndexes()"
  id: "getIndexes()"
  parent: "com.azure.cosmos.IncludedPath"
  langs:
  - "java"
  name: "getIndexes()"
  nameWithType: "IncludedPath.getIndexes()"
  fullName: "com.azure.cosmos.IncludedPath.getIndexes()"
  overload: "com.azure.cosmos.IncludedPath.getIndexes*"
  type: "Method"
  package: "com.azure.cosmos"
  summary: "Gets the paths that are chosen to be indexed by the user."
  syntax:
    content: "public Collection<Index> getIndexes()"
    return:
      type: "java.util.Collection<com.azure.cosmos.Index>"
      description: "the included paths."
- uid: "com.azure.cosmos.IncludedPath.getPath()"
  id: "getPath()"
  parent: "com.azure.cosmos.IncludedPath"
  langs:
  - "java"
  name: "getPath()"
  nameWithType: "IncludedPath.getPath()"
  fullName: "com.azure.cosmos.IncludedPath.getPath()"
  overload: "com.azure.cosmos.IncludedPath.getPath*"
  type: "Method"
  package: "com.azure.cosmos"
  summary: "Gets path."
  syntax:
    content: "public String getPath()"
    return:
      type: "java.lang.String"
      description: "the path."
- uid: "com.azure.cosmos.IncludedPath.populatePropertyBag()"
  id: "populatePropertyBag()"
  parent: "com.azure.cosmos.IncludedPath"
  langs:
  - "java"
  name: "populatePropertyBag()"
  nameWithType: "IncludedPath.populatePropertyBag()"
  fullName: "com.azure.cosmos.IncludedPath.populatePropertyBag()"
  overload: "com.azure.cosmos.IncludedPath.populatePropertyBag*"
  type: "Method"
  package: "com.azure.cosmos"
  syntax:
    content: " void populatePropertyBag()"
- uid: "com.azure.cosmos.IncludedPath.setIndexes(java.util.Collection<com.azure.cosmos.Index>)"
  id: "setIndexes(java.util.Collection<com.azure.cosmos.Index>)"
  parent: "com.azure.cosmos.IncludedPath"
  langs:
  - "java"
  name: "setIndexes(Collection<Index> indexes)"
  nameWithType: "IncludedPath.setIndexes(Collection<Index> indexes)"
  fullName: "com.azure.cosmos.IncludedPath.setIndexes(Collection<Index> indexes)"
  overload: "com.azure.cosmos.IncludedPath.setIndexes*"
  type: "Method"
  package: "com.azure.cosmos"
  syntax:
    content: "public IncludedPath setIndexes(Collection<Index> indexes)"
    parameters:
    - id: "indexes"
      type: "java.util.Collection<com.azure.cosmos.Index>"
    return:
      type: "com.azure.cosmos.IncludedPath"
- uid: "com.azure.cosmos.IncludedPath.setPath(java.lang.String)"
  id: "setPath(java.lang.String)"
  parent: "com.azure.cosmos.IncludedPath"
  langs:
  - "java"
  name: "setPath(String path)"
  nameWithType: "IncludedPath.setPath(String path)"
  fullName: "com.azure.cosmos.IncludedPath.setPath(String path)"
  overload: "com.azure.cosmos.IncludedPath.setPath*"
  type: "Method"
  package: "com.azure.cosmos"
  summary: "Sets path."
  syntax:
    content: "public IncludedPath setPath(String path)"
    parameters:
    - id: "path"
      type: "java.lang.String"
      description: "the path."
    return:
      type: "com.azure.cosmos.IncludedPath"
      description: "the Included Path."
references:
- uid: "com.azure.cosmos.IncludedPath.IncludedPath*"
  name: "IncludedPath"
  nameWithType: "IncludedPath.IncludedPath"
  fullName: "com.azure.cosmos.IncludedPath.IncludedPath"
  package: "com.azure.cosmos"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "com.azure.cosmos.IncludedPath.getPath*"
  name: "getPath"
  nameWithType: "IncludedPath.getPath"
  fullName: "com.azure.cosmos.IncludedPath.getPath"
  package: "com.azure.cosmos"
- uid: "com.azure.cosmos.IncludedPath.setPath*"
  name: "setPath"
  nameWithType: "IncludedPath.setPath"
  fullName: "com.azure.cosmos.IncludedPath.setPath"
  package: "com.azure.cosmos"
- uid: "java.util.Collection<com.azure.cosmos.Index>"
  spec.java:
  - uid: "java.util.Collection"
    name: "Collection"
    fullName: "java.util.Collection"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.cosmos.Index"
    name: "Index"
    fullName: "com.azure.cosmos.Index"
  - name: ">"
    fullName: ">"
- uid: "com.azure.cosmos.IncludedPath.getIndexes*"
  name: "getIndexes"
  nameWithType: "IncludedPath.getIndexes"
  fullName: "com.azure.cosmos.IncludedPath.getIndexes"
  package: "com.azure.cosmos"
- uid: "com.azure.cosmos.IncludedPath.setIndexes*"
  name: "setIndexes"
  nameWithType: "IncludedPath.setIndexes"
  fullName: "com.azure.cosmos.IncludedPath.setIndexes"
  package: "com.azure.cosmos"
- uid: "com.azure.cosmos.IncludedPath.populatePropertyBag*"
  name: "populatePropertyBag"
  nameWithType: "IncludedPath.populatePropertyBag"
  fullName: "com.azure.cosmos.IncludedPath.populatePropertyBag"
  package: "com.azure.cosmos"
- uid: "com.azure.cosmos.JsonSerializable"
  name: "JsonSerializable"
  nameWithType: "JsonSerializable"
  fullName: "com.azure.cosmos.JsonSerializable"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "com.azure.cosmos.JsonSerializable.<T>getObject(java.lang.String,java.lang.Class<T>,boolean...)"
  name: "JsonSerializable.<T>getObject(String,Class<T>,)"
  nameWithType: "JsonSerializable.<T>getObject(String,Class<T>,)"
  fullName: "com.azure.cosmos.JsonSerializable.<T>getObject(java.lang.String,java.lang.Class<T>,boolean...)"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "com.azure.cosmos.JsonSerializable.<T>set(java.lang.String,T)"
  name: "JsonSerializable.<T>set(String,T)"
  nameWithType: "JsonSerializable.<T>set(String,T)"
  fullName: "com.azure.cosmos.JsonSerializable.<T>set(java.lang.String,T)"
- uid: "com.azure.cosmos.JsonSerializable.getObjectByPath(java.util.List<java.lang.String>)"
  name: "JsonSerializable.getObjectByPath(List<String>)"
  nameWithType: "JsonSerializable.getObjectByPath(List<String>)"
  fullName: "com.azure.cosmos.JsonSerializable.getObjectByPath(java.util.List<java.lang.String>)"
- uid: "com.azure.cosmos.JsonSerializable.toJson()"
  name: "JsonSerializable.toJson()"
  nameWithType: "JsonSerializable.toJson()"
  fullName: "com.azure.cosmos.JsonSerializable.toJson()"
- uid: "com.azure.cosmos.JsonSerializable.getMap()"
  name: "JsonSerializable.getMap()"
  nameWithType: "JsonSerializable.getMap()"
  fullName: "com.azure.cosmos.JsonSerializable.getMap()"
- uid: "com.azure.cosmos.JsonSerializable.setMapper(com.fasterxml.jackson.databind.ObjectMapper)"
  name: "JsonSerializable.setMapper(ObjectMapper)"
  nameWithType: "JsonSerializable.setMapper(ObjectMapper)"
  fullName: "com.azure.cosmos.JsonSerializable.setMapper(com.fasterxml.jackson.databind.ObjectMapper)"
- uid: "com.azure.cosmos.JsonSerializable.getCollection(java.lang.String)"
  name: "JsonSerializable.getCollection(String)"
  nameWithType: "JsonSerializable.getCollection(String)"
  fullName: "com.azure.cosmos.JsonSerializable.getCollection(java.lang.String)"
- uid: "com.azure.cosmos.JsonSerializable.getBoolean(java.lang.String)"
  name: "JsonSerializable.getBoolean(String)"
  nameWithType: "JsonSerializable.getBoolean(String)"
  fullName: "com.azure.cosmos.JsonSerializable.getBoolean(java.lang.String)"
- uid: "com.azure.cosmos.JsonSerializable.remove(java.lang.String)"
  name: "JsonSerializable.remove(String)"
  nameWithType: "JsonSerializable.remove(String)"
  fullName: "com.azure.cosmos.JsonSerializable.remove(java.lang.String)"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "com.azure.cosmos.JsonSerializable.getValue(com.fasterxml.jackson.databind.JsonNode)"
  name: "JsonSerializable.getValue(JsonNode)"
  nameWithType: "JsonSerializable.getValue(JsonNode)"
  fullName: "com.azure.cosmos.JsonSerializable.getValue(com.fasterxml.jackson.databind.JsonNode)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "com.azure.cosmos.JsonSerializable.getObject(java.lang.String)"
  name: "JsonSerializable.getObject(String)"
  nameWithType: "JsonSerializable.getObject(String)"
  fullName: "com.azure.cosmos.JsonSerializable.getObject(java.lang.String)"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "com.azure.cosmos.JsonSerializable.has(java.lang.String)"
  name: "JsonSerializable.has(String)"
  nameWithType: "JsonSerializable.has(String)"
  fullName: "com.azure.cosmos.JsonSerializable.has(java.lang.String)"
- uid: "com.azure.cosmos.JsonSerializable.getLong(java.lang.String)"
  name: "JsonSerializable.getLong(String)"
  nameWithType: "JsonSerializable.getLong(String)"
  fullName: "com.azure.cosmos.JsonSerializable.getLong(java.lang.String)"
- uid: "com.azure.cosmos.JsonSerializable.toJson(com.azure.cosmos.SerializationFormattingPolicy)"
  name: "JsonSerializable.toJson(SerializationFormattingPolicy)"
  nameWithType: "JsonSerializable.toJson(SerializationFormattingPolicy)"
  fullName: "com.azure.cosmos.JsonSerializable.toJson(com.azure.cosmos.SerializationFormattingPolicy)"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "com.azure.cosmos.JsonSerializable.getString(java.lang.String)"
  name: "JsonSerializable.getString(String)"
  nameWithType: "JsonSerializable.getString(String)"
  fullName: "com.azure.cosmos.JsonSerializable.getString(java.lang.String)"
- uid: "com.azure.cosmos.JsonSerializable.populatePropertyBag()"
  name: "JsonSerializable.populatePropertyBag()"
  nameWithType: "JsonSerializable.populatePropertyBag()"
  fullName: "com.azure.cosmos.JsonSerializable.populatePropertyBag()"
- uid: "com.azure.cosmos.JsonSerializable.getInt(java.lang.String)"
  name: "JsonSerializable.getInt(String)"
  nameWithType: "JsonSerializable.getInt(String)"
  fullName: "com.azure.cosmos.JsonSerializable.getInt(java.lang.String)"
- uid: "com.azure.cosmos.JsonSerializable.getDouble(java.lang.String)"
  name: "JsonSerializable.getDouble(String)"
  nameWithType: "JsonSerializable.getDouble(String)"
  fullName: "com.azure.cosmos.JsonSerializable.getDouble(java.lang.String)"
- uid: "com.azure.cosmos.JsonSerializable.<T>toObject(java.lang.Class<T>)"
  name: "JsonSerializable.<T>toObject(Class<T>)"
  nameWithType: "JsonSerializable.<T>toObject(Class<T>)"
  fullName: "com.azure.cosmos.JsonSerializable.<T>toObject(java.lang.Class<T>)"
- uid: "com.azure.cosmos.JsonSerializable.getLogger()"
  name: "JsonSerializable.getLogger()"
  nameWithType: "JsonSerializable.getLogger()"
  fullName: "com.azure.cosmos.JsonSerializable.getLogger()"
- uid: "com.azure.cosmos.JsonSerializable.<T>getList(java.lang.String,java.lang.Class<T>,boolean...)"
  name: "JsonSerializable.<T>getList(String,Class<T>,)"
  nameWithType: "JsonSerializable.<T>getList(String,Class<T>,)"
  fullName: "com.azure.cosmos.JsonSerializable.<T>getList(java.lang.String,java.lang.Class<T>,boolean...)"
- uid: "com.azure.cosmos.JsonSerializable.toString()"
  name: "JsonSerializable.toString()"
  nameWithType: "JsonSerializable.toString()"
  fullName: "com.azure.cosmos.JsonSerializable.toString()"
- uid: "com.azure.cosmos.JsonSerializable.<T>getCollection(java.lang.String,java.lang.Class<T>,boolean...)"
  name: "JsonSerializable.<T>getCollection(String,Class<T>,)"
  nameWithType: "JsonSerializable.<T>getCollection(String,Class<T>,)"
  fullName: "com.azure.cosmos.JsonSerializable.<T>getCollection(java.lang.String,java.lang.Class<T>,boolean...)"
- uid: "com.azure.cosmos.JsonSerializable.get(java.lang.String)"
  name: "JsonSerializable.get(String)"
  nameWithType: "JsonSerializable.get(String)"
  fullName: "com.azure.cosmos.JsonSerializable.get(java.lang.String)"
- uid: "com.azure.cosmos.Index"
  name: "Index"
  nameWithType: "Index"
  fullName: "com.azure.cosmos.Index"
- uid: "java.util.Collection"
  name: "Collection"
  nameWithType: "Collection"
  fullName: "java.util.Collection"
- uid: "T>,boolean...)"
  name: "T>,)"
  nameWithType: "T>,)"
  fullName: "T>,boolean...)"
- uid: "com.azure.cosmos.JsonSerializable."
  name: "JsonSerializable."
  nameWithType: "JsonSerializable."
  fullName: "com.azure.cosmos.JsonSerializable."
- uid: "T>getObject(java.lang.String,java.lang.Class"
  name: "T>getObject(String,Class"
  nameWithType: "T>getObject(String,Class"
  fullName: "T>getObject(java.lang.String,java.lang.Class"
- uid: "T>set(java.lang.String,T)"
  name: "T>set(String,T)"
  nameWithType: "T>set(String,T)"
  fullName: "T>set(java.lang.String,T)"
- uid: "com.azure.cosmos.JsonSerializable.getObjectByPath(java.util.List"
  name: "JsonSerializable.getObjectByPath(List"
  nameWithType: "JsonSerializable.getObjectByPath(List"
  fullName: "com.azure.cosmos.JsonSerializable.getObjectByPath(java.util.List"
- uid: "java.lang.String>)"
  name: "String>)"
  nameWithType: "String>)"
  fullName: "java.lang.String>)"
- uid: "T>toObject(java.lang.Class"
  name: "T>toObject(Class"
  nameWithType: "T>toObject(Class"
  fullName: "T>toObject(java.lang.Class"
- uid: "T>)"
  name: "T>)"
  nameWithType: "T>)"
  fullName: "T>)"
- uid: "T>getList(java.lang.String,java.lang.Class"
  name: "T>getList(String,Class"
  nameWithType: "T>getList(String,Class"
  fullName: "T>getList(java.lang.String,java.lang.Class"
- uid: "T>getCollection(java.lang.String,java.lang.Class"
  name: "T>getCollection(String,Class"
  nameWithType: "T>getCollection(String,Class"
  fullName: "T>getCollection(java.lang.String,java.lang.Class"
