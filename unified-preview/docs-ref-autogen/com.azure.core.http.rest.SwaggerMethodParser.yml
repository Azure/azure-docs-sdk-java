### YamlMime:ManagedReference
items:
- uid: "com.azure.core.http.rest.SwaggerMethodParser"
  id: "SwaggerMethodParser"
  parent: "com.azure.core.http.rest"
  children:
  - "com.azure.core.http.rest.SwaggerMethodParser.SwaggerMethodParser(java.lang.reflect.Method,java.lang.String)"
  - "com.azure.core.http.rest.SwaggerMethodParser.expectsResponseBody()"
  - "com.azure.core.http.rest.SwaggerMethodParser.getBodyContentType()"
  - "com.azure.core.http.rest.SwaggerMethodParser.getBodyJavaType()"
  - "com.azure.core.http.rest.SwaggerMethodParser.getExpectedStatusCodes()"
  - "com.azure.core.http.rest.SwaggerMethodParser.getFullyQualifiedMethodName()"
  - "com.azure.core.http.rest.SwaggerMethodParser.getHttpMethod()"
  - "com.azure.core.http.rest.SwaggerMethodParser.getReturnType()"
  - "com.azure.core.http.rest.SwaggerMethodParser.getReturnValueWireType()"
  - "com.azure.core.http.rest.SwaggerMethodParser.getUnexpectedException(int)"
  - "com.azure.core.http.rest.SwaggerMethodParser.isExpectedResponseStatusCode(int,int[])"
  - "com.azure.core.http.rest.SwaggerMethodParser.setBody(java.lang.Object[])"
  - "com.azure.core.http.rest.SwaggerMethodParser.setContext(java.lang.Object[])"
  - "com.azure.core.http.rest.SwaggerMethodParser.setEncodedFormParameters(java.lang.Object[])"
  - "com.azure.core.http.rest.SwaggerMethodParser.setEncodedQueryParameters(java.lang.Object[])"
  - "com.azure.core.http.rest.SwaggerMethodParser.setHeaders(java.lang.Object[])"
  - "com.azure.core.http.rest.SwaggerMethodParser.setHost(java.lang.Object[])"
  - "com.azure.core.http.rest.SwaggerMethodParser.setPath(java.lang.Object[])"
  - "com.azure.core.http.rest.SwaggerMethodParser.setScheme(java.lang.Object[])"
  langs:
  - "java"
  name: "SwaggerMethodParser"
  nameWithType: "SwaggerMethodParser"
  fullName: "com.azure.core.http.rest.SwaggerMethodParser"
  type: "Class"
  package: "com.azure.core.http.rest"
  summary: "The type to parse details of a specific Swagger REST API call from a provided Swagger interface method."
  syntax:
    content: " class SwaggerMethodParser implements HttpResponseDecodeData"
  inheritance:
  - "java.lang.Object"
  implements:
  - "com.azure.core.implementation.serializer.HttpResponseDecodeData"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.azure.core.http.rest.SwaggerMethodParser.SwaggerMethodParser(java.lang.reflect.Method,java.lang.String)"
  id: "SwaggerMethodParser(java.lang.reflect.Method,java.lang.String)"
  parent: "com.azure.core.http.rest.SwaggerMethodParser"
  langs:
  - "java"
  name: "SwaggerMethodParser(Method swaggerMethod, String rawHost)"
  nameWithType: "SwaggerMethodParser.SwaggerMethodParser(Method swaggerMethod, String rawHost)"
  fullName: "com.azure.core.http.rest.SwaggerMethodParser.SwaggerMethodParser(Method swaggerMethod, String rawHost)"
  overload: "com.azure.core.http.rest.SwaggerMethodParser.SwaggerMethodParser*"
  type: "Constructor"
  package: "com.azure.core.http.rest"
  summary: "Create a SwaggerMethodParser object using the provided fully qualified method name."
  syntax:
    content: " SwaggerMethodParser(Method swaggerMethod, String rawHost)"
    parameters:
    - id: "swaggerMethod"
      type: "java.lang.reflect.Method"
      description: "the Swagger method to parse."
    - id: "rawHost"
      type: "java.lang.String"
      description: "the raw host value from the @Host annotation. Before this can be used as the host value in an HTTP\n     request, it must be processed through the possible host substitutions."
- uid: "com.azure.core.http.rest.SwaggerMethodParser.expectsResponseBody()"
  id: "expectsResponseBody()"
  parent: "com.azure.core.http.rest.SwaggerMethodParser"
  langs:
  - "java"
  name: "expectsResponseBody()"
  nameWithType: "SwaggerMethodParser.expectsResponseBody()"
  fullName: "com.azure.core.http.rest.SwaggerMethodParser.expectsResponseBody()"
  overload: "com.azure.core.http.rest.SwaggerMethodParser.expectsResponseBody*"
  type: "Method"
  package: "com.azure.core.http.rest"
  summary: "Checks whether or not the Swagger method expects the response to contain a body."
  syntax:
    content: "public boolean expectsResponseBody()"
    return:
      type: "boolean"
      description: "true if Swagger method expects the response to contain a body, false otherwise"
- uid: "com.azure.core.http.rest.SwaggerMethodParser.getBodyContentType()"
  id: "getBodyContentType()"
  parent: "com.azure.core.http.rest.SwaggerMethodParser"
  langs:
  - "java"
  name: "getBodyContentType()"
  nameWithType: "SwaggerMethodParser.getBodyContentType()"
  fullName: "com.azure.core.http.rest.SwaggerMethodParser.getBodyContentType()"
  overload: "com.azure.core.http.rest.SwaggerMethodParser.getBodyContentType*"
  type: "Method"
  package: "com.azure.core.http.rest"
  summary: "Get the Content-Type of the body of this Swagger method."
  syntax:
    content: "public String getBodyContentType()"
    return:
      type: "java.lang.String"
      description: "the Content-Type of the body of this Swagger method"
- uid: "com.azure.core.http.rest.SwaggerMethodParser.getBodyJavaType()"
  id: "getBodyJavaType()"
  parent: "com.azure.core.http.rest.SwaggerMethodParser"
  langs:
  - "java"
  name: "getBodyJavaType()"
  nameWithType: "SwaggerMethodParser.getBodyJavaType()"
  fullName: "com.azure.core.http.rest.SwaggerMethodParser.getBodyJavaType()"
  overload: "com.azure.core.http.rest.SwaggerMethodParser.getBodyJavaType*"
  type: "Method"
  package: "com.azure.core.http.rest"
  summary: "Get the type of the body parameter to this method, if present."
  syntax:
    content: "public Type getBodyJavaType()"
    return:
      type: "java.lang.reflect.Type"
      description: "the return type of the body parameter to this method"
- uid: "com.azure.core.http.rest.SwaggerMethodParser.getExpectedStatusCodes()"
  id: "getExpectedStatusCodes()"
  parent: "com.azure.core.http.rest.SwaggerMethodParser"
  langs:
  - "java"
  name: "getExpectedStatusCodes()"
  nameWithType: "SwaggerMethodParser.getExpectedStatusCodes()"
  fullName: "com.azure.core.http.rest.SwaggerMethodParser.getExpectedStatusCodes()"
  overload: "com.azure.core.http.rest.SwaggerMethodParser.getExpectedStatusCodes*"
  type: "Method"
  package: "com.azure.core.http.rest"
  summary: "Get the HTTP response status codes that are expected when a request is sent out for this Swagger method. If the returned int\\[\\] is null, then all status codes less than 400 are allowed."
  syntax:
    content: "public int[] getExpectedStatusCodes()"
    return:
      type: "int[]"
      description: "the expected HTTP response status codes for this Swagger method or null if all status codes less than 400\n     are allowed."
- uid: "com.azure.core.http.rest.SwaggerMethodParser.getFullyQualifiedMethodName()"
  id: "getFullyQualifiedMethodName()"
  parent: "com.azure.core.http.rest.SwaggerMethodParser"
  langs:
  - "java"
  name: "getFullyQualifiedMethodName()"
  nameWithType: "SwaggerMethodParser.getFullyQualifiedMethodName()"
  fullName: "com.azure.core.http.rest.SwaggerMethodParser.getFullyQualifiedMethodName()"
  overload: "com.azure.core.http.rest.SwaggerMethodParser.getFullyQualifiedMethodName*"
  type: "Method"
  package: "com.azure.core.http.rest"
  summary: "Get the fully qualified method that was called to invoke this HTTP request."
  syntax:
    content: "public String getFullyQualifiedMethodName()"
    return:
      type: "java.lang.String"
      description: "the fully qualified method that was called to invoke this HTTP request"
- uid: "com.azure.core.http.rest.SwaggerMethodParser.getHttpMethod()"
  id: "getHttpMethod()"
  parent: "com.azure.core.http.rest.SwaggerMethodParser"
  langs:
  - "java"
  name: "getHttpMethod()"
  nameWithType: "SwaggerMethodParser.getHttpMethod()"
  fullName: "com.azure.core.http.rest.SwaggerMethodParser.getHttpMethod()"
  overload: "com.azure.core.http.rest.SwaggerMethodParser.getHttpMethod*"
  type: "Method"
  package: "com.azure.core.http.rest"
  summary: "Get the HTTP method that will be used to complete the Swagger method's request."
  syntax:
    content: "public HttpMethod getHttpMethod()"
    return:
      type: "com.azure.core.http.HttpMethod"
      description: "the HTTP method that will be used to complete the Swagger method's request"
- uid: "com.azure.core.http.rest.SwaggerMethodParser.getReturnType()"
  id: "getReturnType()"
  parent: "com.azure.core.http.rest.SwaggerMethodParser"
  langs:
  - "java"
  name: "getReturnType()"
  nameWithType: "SwaggerMethodParser.getReturnType()"
  fullName: "com.azure.core.http.rest.SwaggerMethodParser.getReturnType()"
  overload: "com.azure.core.http.rest.SwaggerMethodParser.getReturnType*"
  type: "Method"
  package: "com.azure.core.http.rest"
  summary: "Get the return type for the method that this object describes."
  syntax:
    content: "public Type getReturnType()"
    return:
      type: "java.lang.reflect.Type"
      description: "the return type for the method that this object describes."
- uid: "com.azure.core.http.rest.SwaggerMethodParser.getReturnValueWireType()"
  id: "getReturnValueWireType()"
  parent: "com.azure.core.http.rest.SwaggerMethodParser"
  langs:
  - "java"
  name: "getReturnValueWireType()"
  nameWithType: "SwaggerMethodParser.getReturnValueWireType()"
  fullName: "com.azure.core.http.rest.SwaggerMethodParser.getReturnValueWireType()"
  overload: "com.azure.core.http.rest.SwaggerMethodParser.getReturnValueWireType*"
  type: "Method"
  package: "com.azure.core.http.rest"
  summary: "Get the type that the return value will be send across the network as. If returnValueWireType is not null, then the raw HTTP response body will need to parsed to this type and then converted to the actual returnType."
  syntax:
    content: "public Type getReturnValueWireType()"
    return:
      type: "java.lang.reflect.Type"
      description: "the type that the raw HTTP response body will be sent as"
- uid: "com.azure.core.http.rest.SwaggerMethodParser.getUnexpectedException(int)"
  id: "getUnexpectedException(int)"
  parent: "com.azure.core.http.rest.SwaggerMethodParser"
  langs:
  - "java"
  name: "getUnexpectedException(int code)"
  nameWithType: "SwaggerMethodParser.getUnexpectedException(int code)"
  fullName: "com.azure.core.http.rest.SwaggerMethodParser.getUnexpectedException(int code)"
  overload: "com.azure.core.http.rest.SwaggerMethodParser.getUnexpectedException*"
  type: "Method"
  package: "com.azure.core.http.rest"
  summary: "Get the <xref uid=\"com.azure.core.implementation.http.UnexpectedExceptionInformation\" data-throw-if-not-resolved=\"false\">UnexpectedExceptionInformation</xref> that will be used to generate a RestException if the HTTP response status code is not one of the expected status codes. If an UnexpectedExceptionInformation is not found for the status code the default UnexpectedExceptionInformation will be returned."
  syntax:
    content: "public UnexpectedExceptionInformation getUnexpectedException(int code)"
    parameters:
    - id: "code"
      type: "int"
      description: "Exception HTTP status code return from a REST API."
    return:
      type: "com.azure.core.implementation.http.UnexpectedExceptionInformation"
      description: "the UnexpectedExceptionInformation to generate an exception to throw or return."
- uid: "com.azure.core.http.rest.SwaggerMethodParser.isExpectedResponseStatusCode(int,int[])"
  id: "isExpectedResponseStatusCode(int,int[])"
  parent: "com.azure.core.http.rest.SwaggerMethodParser"
  langs:
  - "java"
  name: "isExpectedResponseStatusCode(int responseStatusCode, int[] additionalAllowedStatusCodes)"
  nameWithType: "SwaggerMethodParser.isExpectedResponseStatusCode(int responseStatusCode, int[] additionalAllowedStatusCodes)"
  fullName: "com.azure.core.http.rest.SwaggerMethodParser.isExpectedResponseStatusCode(int responseStatusCode, int[] additionalAllowedStatusCodes)"
  overload: "com.azure.core.http.rest.SwaggerMethodParser.isExpectedResponseStatusCode*"
  type: "Method"
  package: "com.azure.core.http.rest"
  summary: "Get whether or not the provided response status code is one of the expected status codes for this Swagger method."
  syntax:
    content: "public boolean isExpectedResponseStatusCode(int responseStatusCode, int[] additionalAllowedStatusCodes)"
    parameters:
    - id: "responseStatusCode"
      type: "int"
      description: "the status code that was returned in the HTTP response"
    - id: "additionalAllowedStatusCodes"
      type: "int[]"
      description: "an additional set of allowed status codes that will be merged with the\n     existing set of allowed status codes for this query"
    return:
      type: "boolean"
      description: "whether or not the provided response status code is one of the expected status codes for this Swagger\n     method"
- uid: "com.azure.core.http.rest.SwaggerMethodParser.setBody(java.lang.Object[])"
  id: "setBody(java.lang.Object[])"
  parent: "com.azure.core.http.rest.SwaggerMethodParser"
  langs:
  - "java"
  name: "setBody(Object[] swaggerMethodArguments)"
  nameWithType: "SwaggerMethodParser.setBody(Object[] swaggerMethodArguments)"
  fullName: "com.azure.core.http.rest.SwaggerMethodParser.setBody(Object[] swaggerMethodArguments)"
  overload: "com.azure.core.http.rest.SwaggerMethodParser.setBody*"
  type: "Method"
  package: "com.azure.core.http.rest"
  summary: "Get the object to be used as the value of the HTTP request."
  syntax:
    content: "public Object setBody(Object[] swaggerMethodArguments)"
    parameters:
    - id: "swaggerMethodArguments"
      type: "java.lang.Object[]"
      description: "the method arguments to get the value object from"
    return:
      type: "java.lang.Object"
      description: "the object that will be used as the body of the HTTP request"
- uid: "com.azure.core.http.rest.SwaggerMethodParser.setContext(java.lang.Object[])"
  id: "setContext(java.lang.Object[])"
  parent: "com.azure.core.http.rest.SwaggerMethodParser"
  langs:
  - "java"
  name: "setContext(Object[] swaggerMethodArguments)"
  nameWithType: "SwaggerMethodParser.setContext(Object[] swaggerMethodArguments)"
  fullName: "com.azure.core.http.rest.SwaggerMethodParser.setContext(Object[] swaggerMethodArguments)"
  overload: "com.azure.core.http.rest.SwaggerMethodParser.setContext*"
  type: "Method"
  package: "com.azure.core.http.rest"
  summary: "Get the <xref uid=\"com.azure.core.util.Context\" data-throw-if-not-resolved=\"false\">Context</xref> passed into the proxy method."
  syntax:
    content: "public Context setContext(Object[] swaggerMethodArguments)"
    parameters:
    - id: "swaggerMethodArguments"
      type: "java.lang.Object[]"
      description: "the arguments passed to the proxy method"
    return:
      type: "com.azure.core.util.Context"
      description: "the context, or <xref uid=\"com.azure.core.util.Context.NONE\" data-throw-if-not-resolved=\"false\">Context#NONE</xref> if no context was provided"
- uid: "com.azure.core.http.rest.SwaggerMethodParser.setEncodedFormParameters(java.lang.Object[])"
  id: "setEncodedFormParameters(java.lang.Object[])"
  parent: "com.azure.core.http.rest.SwaggerMethodParser"
  langs:
  - "java"
  name: "setEncodedFormParameters(Object[] swaggerMethodArguments)"
  nameWithType: "SwaggerMethodParser.setEncodedFormParameters(Object[] swaggerMethodArguments)"
  fullName: "com.azure.core.http.rest.SwaggerMethodParser.setEncodedFormParameters(Object[] swaggerMethodArguments)"
  overload: "com.azure.core.http.rest.SwaggerMethodParser.setEncodedFormParameters*"
  type: "Method"
  package: "com.azure.core.http.rest"
  summary: "Get the encoded form parameters that have been added to this value based on the provided method arguments."
  syntax:
    content: "public Iterable<EncodedParameter> setEncodedFormParameters(Object[] swaggerMethodArguments)"
    parameters:
    - id: "swaggerMethodArguments"
      type: "java.lang.Object[]"
      description: "the arguments that will be used to create the form parameters' values"
    return:
      type: "java.lang.Iterable<com.azure.core.http.rest.EncodedParameter>"
      description: "an Iterable with the encoded form parameters"
- uid: "com.azure.core.http.rest.SwaggerMethodParser.setEncodedQueryParameters(java.lang.Object[])"
  id: "setEncodedQueryParameters(java.lang.Object[])"
  parent: "com.azure.core.http.rest.SwaggerMethodParser"
  langs:
  - "java"
  name: "setEncodedQueryParameters(Object[] swaggerMethodArguments)"
  nameWithType: "SwaggerMethodParser.setEncodedQueryParameters(Object[] swaggerMethodArguments)"
  fullName: "com.azure.core.http.rest.SwaggerMethodParser.setEncodedQueryParameters(Object[] swaggerMethodArguments)"
  overload: "com.azure.core.http.rest.SwaggerMethodParser.setEncodedQueryParameters*"
  type: "Method"
  package: "com.azure.core.http.rest"
  summary: "Get the encoded query parameters that have been added to this value based on the provided method arguments."
  syntax:
    content: "public Iterable<EncodedParameter> setEncodedQueryParameters(Object[] swaggerMethodArguments)"
    parameters:
    - id: "swaggerMethodArguments"
      type: "java.lang.Object[]"
      description: "the arguments that will be used to create the query parameters' values"
    return:
      type: "java.lang.Iterable<com.azure.core.http.rest.EncodedParameter>"
      description: "an Iterable with the encoded query parameters"
- uid: "com.azure.core.http.rest.SwaggerMethodParser.setHeaders(java.lang.Object[])"
  id: "setHeaders(java.lang.Object[])"
  parent: "com.azure.core.http.rest.SwaggerMethodParser"
  langs:
  - "java"
  name: "setHeaders(Object[] swaggerMethodArguments)"
  nameWithType: "SwaggerMethodParser.setHeaders(Object[] swaggerMethodArguments)"
  fullName: "com.azure.core.http.rest.SwaggerMethodParser.setHeaders(Object[] swaggerMethodArguments)"
  overload: "com.azure.core.http.rest.SwaggerMethodParser.setHeaders*"
  type: "Method"
  package: "com.azure.core.http.rest"
  summary: "Get the headers that have been added to this value based on the provided method arguments."
  syntax:
    content: "public Iterable<HttpHeader> setHeaders(Object[] swaggerMethodArguments)"
    parameters:
    - id: "swaggerMethodArguments"
      type: "java.lang.Object[]"
      description: "The arguments that will be used to create the headers' values."
    return:
      type: "java.lang.Iterable<com.azure.core.http.HttpHeader>"
      description: "An Iterable with the headers."
- uid: "com.azure.core.http.rest.SwaggerMethodParser.setHost(java.lang.Object[])"
  id: "setHost(java.lang.Object[])"
  parent: "com.azure.core.http.rest.SwaggerMethodParser"
  langs:
  - "java"
  name: "setHost(Object[] swaggerMethodArguments)"
  nameWithType: "SwaggerMethodParser.setHost(Object[] swaggerMethodArguments)"
  fullName: "com.azure.core.http.rest.SwaggerMethodParser.setHost(Object[] swaggerMethodArguments)"
  overload: "com.azure.core.http.rest.SwaggerMethodParser.setHost*"
  type: "Method"
  package: "com.azure.core.http.rest"
  summary: "Get the host to use for HTTP requests for this Swagger method."
  syntax:
    content: "public String setHost(Object[] swaggerMethodArguments)"
    parameters:
    - id: "swaggerMethodArguments"
      type: "java.lang.Object[]"
      description: "the arguments to use for host substitutions"
    return:
      type: "java.lang.String"
      description: "the final host to use for HTTP requests for this Swagger method"
- uid: "com.azure.core.http.rest.SwaggerMethodParser.setPath(java.lang.Object[])"
  id: "setPath(java.lang.Object[])"
  parent: "com.azure.core.http.rest.SwaggerMethodParser"
  langs:
  - "java"
  name: "setPath(Object[] methodArguments)"
  nameWithType: "SwaggerMethodParser.setPath(Object[] methodArguments)"
  fullName: "com.azure.core.http.rest.SwaggerMethodParser.setPath(Object[] methodArguments)"
  overload: "com.azure.core.http.rest.SwaggerMethodParser.setPath*"
  type: "Method"
  package: "com.azure.core.http.rest"
  summary: "Get the path that will be used to complete the Swagger method's request."
  syntax:
    content: "public String setPath(Object[] methodArguments)"
    parameters:
    - id: "methodArguments"
      type: "java.lang.Object[]"
      description: "the method arguments to use with the path substitutions"
    return:
      type: "java.lang.String"
      description: "the path value with its placeholders replaced by the matching substitutions"
- uid: "com.azure.core.http.rest.SwaggerMethodParser.setScheme(java.lang.Object[])"
  id: "setScheme(java.lang.Object[])"
  parent: "com.azure.core.http.rest.SwaggerMethodParser"
  langs:
  - "java"
  name: "setScheme(Object[] swaggerMethodArguments)"
  nameWithType: "SwaggerMethodParser.setScheme(Object[] swaggerMethodArguments)"
  fullName: "com.azure.core.http.rest.SwaggerMethodParser.setScheme(Object[] swaggerMethodArguments)"
  overload: "com.azure.core.http.rest.SwaggerMethodParser.setScheme*"
  type: "Method"
  package: "com.azure.core.http.rest"
  summary: "Get the scheme to use for HTTP requests for this Swagger method."
  syntax:
    content: "public String setScheme(Object[] swaggerMethodArguments)"
    parameters:
    - id: "swaggerMethodArguments"
      type: "java.lang.Object[]"
      description: "the arguments to use for scheme/host substitutions."
    return:
      type: "java.lang.String"
      description: "the final host to use for HTTP requests for this Swagger method."
references:
- uid: "java.lang.reflect.Method"
  spec.java:
  - uid: "java.lang.reflect.Method"
    name: "Method"
    fullName: "java.lang.reflect.Method"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "com.azure.core.http.rest.SwaggerMethodParser.SwaggerMethodParser*"
  name: "SwaggerMethodParser"
  nameWithType: "SwaggerMethodParser.SwaggerMethodParser"
  fullName: "com.azure.core.http.rest.SwaggerMethodParser.SwaggerMethodParser"
  package: "com.azure.core.http.rest"
- uid: "com.azure.core.http.rest.SwaggerMethodParser.getFullyQualifiedMethodName*"
  name: "getFullyQualifiedMethodName"
  nameWithType: "SwaggerMethodParser.getFullyQualifiedMethodName"
  fullName: "com.azure.core.http.rest.SwaggerMethodParser.getFullyQualifiedMethodName"
  package: "com.azure.core.http.rest"
- uid: "com.azure.core.http.HttpMethod"
  name: "HttpMethod"
  nameWithType: "HttpMethod"
  fullName: "com.azure.core.http.HttpMethod"
- uid: "com.azure.core.http.rest.SwaggerMethodParser.getHttpMethod*"
  name: "getHttpMethod"
  nameWithType: "SwaggerMethodParser.getHttpMethod"
  fullName: "com.azure.core.http.rest.SwaggerMethodParser.getHttpMethod"
  package: "com.azure.core.http.rest"
- uid: "int[]"
  spec.java:
  - uid: "int"
    name: "int"
    fullName: "int"
  - name: "[]"
    fullName: "[]"
- uid: "com.azure.core.http.rest.SwaggerMethodParser.getExpectedStatusCodes*"
  name: "getExpectedStatusCodes"
  nameWithType: "SwaggerMethodParser.getExpectedStatusCodes"
  fullName: "com.azure.core.http.rest.SwaggerMethodParser.getExpectedStatusCodes"
  package: "com.azure.core.http.rest"
- uid: "java.lang.Object[]"
  spec.java:
  - uid: "java.lang.Object"
    name: "Object"
    fullName: "java.lang.Object"
  - name: "[]"
    fullName: "[]"
- uid: "com.azure.core.http.rest.SwaggerMethodParser.setScheme*"
  name: "setScheme"
  nameWithType: "SwaggerMethodParser.setScheme"
  fullName: "com.azure.core.http.rest.SwaggerMethodParser.setScheme"
  package: "com.azure.core.http.rest"
- uid: "com.azure.core.http.rest.SwaggerMethodParser.setHost*"
  name: "setHost"
  nameWithType: "SwaggerMethodParser.setHost"
  fullName: "com.azure.core.http.rest.SwaggerMethodParser.setHost"
  package: "com.azure.core.http.rest"
- uid: "com.azure.core.http.rest.SwaggerMethodParser.setPath*"
  name: "setPath"
  nameWithType: "SwaggerMethodParser.setPath"
  fullName: "com.azure.core.http.rest.SwaggerMethodParser.setPath"
  package: "com.azure.core.http.rest"
- uid: "java.lang.Iterable<com.azure.core.http.rest.EncodedParameter>"
  spec.java:
  - uid: "java.lang.Iterable"
    name: "Iterable"
    fullName: "java.lang.Iterable"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.core.http.rest.EncodedParameter"
    name: "EncodedParameter"
    fullName: "com.azure.core.http.rest.EncodedParameter"
  - name: ">"
    fullName: ">"
- uid: "com.azure.core.http.rest.SwaggerMethodParser.setEncodedQueryParameters*"
  name: "setEncodedQueryParameters"
  nameWithType: "SwaggerMethodParser.setEncodedQueryParameters"
  fullName: "com.azure.core.http.rest.SwaggerMethodParser.setEncodedQueryParameters"
  package: "com.azure.core.http.rest"
- uid: "com.azure.core.http.rest.SwaggerMethodParser.setEncodedFormParameters*"
  name: "setEncodedFormParameters"
  nameWithType: "SwaggerMethodParser.setEncodedFormParameters"
  fullName: "com.azure.core.http.rest.SwaggerMethodParser.setEncodedFormParameters"
  package: "com.azure.core.http.rest"
- uid: "java.lang.Iterable<com.azure.core.http.HttpHeader>"
  spec.java:
  - uid: "java.lang.Iterable"
    name: "Iterable"
    fullName: "java.lang.Iterable"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.core.http.HttpHeader"
    name: "HttpHeader"
    fullName: "com.azure.core.http.HttpHeader"
  - name: ">"
    fullName: ">"
- uid: "com.azure.core.http.rest.SwaggerMethodParser.setHeaders*"
  name: "setHeaders"
  nameWithType: "SwaggerMethodParser.setHeaders"
  fullName: "com.azure.core.http.rest.SwaggerMethodParser.setHeaders"
  package: "com.azure.core.http.rest"
- uid: "com.azure.core.util.Context"
  name: "Context"
  nameWithType: "Context"
  fullName: "com.azure.core.util.Context"
- uid: "com.azure.core.http.rest.SwaggerMethodParser.setContext*"
  name: "setContext"
  nameWithType: "SwaggerMethodParser.setContext"
  fullName: "com.azure.core.http.rest.SwaggerMethodParser.setContext"
  package: "com.azure.core.http.rest"
- uid: "int"
  spec.java:
  - uid: "int"
    name: "int"
    fullName: "int"
- uid: "boolean"
  spec.java:
  - uid: "boolean"
    name: "boolean"
    fullName: "boolean"
- uid: "com.azure.core.http.rest.SwaggerMethodParser.isExpectedResponseStatusCode*"
  name: "isExpectedResponseStatusCode"
  nameWithType: "SwaggerMethodParser.isExpectedResponseStatusCode"
  fullName: "com.azure.core.http.rest.SwaggerMethodParser.isExpectedResponseStatusCode"
  package: "com.azure.core.http.rest"
- uid: "com.azure.core.implementation.http.UnexpectedExceptionInformation"
  name: "UnexpectedExceptionInformation"
  nameWithType: "UnexpectedExceptionInformation"
  fullName: "com.azure.core.implementation.http.UnexpectedExceptionInformation"
- uid: "com.azure.core.http.rest.SwaggerMethodParser.getUnexpectedException*"
  name: "getUnexpectedException"
  nameWithType: "SwaggerMethodParser.getUnexpectedException"
  fullName: "com.azure.core.http.rest.SwaggerMethodParser.getUnexpectedException"
  package: "com.azure.core.http.rest"
- uid: "java.lang.Object"
  spec.java:
  - uid: "java.lang.Object"
    name: "Object"
    fullName: "java.lang.Object"
- uid: "com.azure.core.http.rest.SwaggerMethodParser.setBody*"
  name: "setBody"
  nameWithType: "SwaggerMethodParser.setBody"
  fullName: "com.azure.core.http.rest.SwaggerMethodParser.setBody"
  package: "com.azure.core.http.rest"
- uid: "com.azure.core.http.rest.SwaggerMethodParser.getBodyContentType*"
  name: "getBodyContentType"
  nameWithType: "SwaggerMethodParser.getBodyContentType"
  fullName: "com.azure.core.http.rest.SwaggerMethodParser.getBodyContentType"
  package: "com.azure.core.http.rest"
- uid: "java.lang.reflect.Type"
  spec.java:
  - uid: "java.lang.reflect.Type"
    name: "Type"
    fullName: "java.lang.reflect.Type"
- uid: "com.azure.core.http.rest.SwaggerMethodParser.getReturnType*"
  name: "getReturnType"
  nameWithType: "SwaggerMethodParser.getReturnType"
  fullName: "com.azure.core.http.rest.SwaggerMethodParser.getReturnType"
  package: "com.azure.core.http.rest"
- uid: "com.azure.core.http.rest.SwaggerMethodParser.getBodyJavaType*"
  name: "getBodyJavaType"
  nameWithType: "SwaggerMethodParser.getBodyJavaType"
  fullName: "com.azure.core.http.rest.SwaggerMethodParser.getBodyJavaType"
  package: "com.azure.core.http.rest"
- uid: "com.azure.core.http.rest.SwaggerMethodParser.getReturnValueWireType*"
  name: "getReturnValueWireType"
  nameWithType: "SwaggerMethodParser.getReturnValueWireType"
  fullName: "com.azure.core.http.rest.SwaggerMethodParser.getReturnValueWireType"
  package: "com.azure.core.http.rest"
- uid: "com.azure.core.http.rest.SwaggerMethodParser.expectsResponseBody*"
  name: "expectsResponseBody"
  nameWithType: "SwaggerMethodParser.expectsResponseBody"
  fullName: "com.azure.core.http.rest.SwaggerMethodParser.expectsResponseBody"
  package: "com.azure.core.http.rest"
- uid: "com.azure.core.implementation.serializer.HttpResponseDecodeData"
  name: "HttpResponseDecodeData"
  nameWithType: "HttpResponseDecodeData"
  fullName: "com.azure.core.implementation.serializer.HttpResponseDecodeData"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "com.azure.core.http.rest.EncodedParameter"
  name: "EncodedParameter"
  nameWithType: "EncodedParameter"
  fullName: "com.azure.core.http.rest.EncodedParameter"
- uid: "java.lang.Iterable"
  name: "Iterable"
  nameWithType: "Iterable"
  fullName: "java.lang.Iterable"
- uid: "com.azure.core.http.HttpHeader"
  name: "HttpHeader"
  nameWithType: "HttpHeader"
  fullName: "com.azure.core.http.HttpHeader"
