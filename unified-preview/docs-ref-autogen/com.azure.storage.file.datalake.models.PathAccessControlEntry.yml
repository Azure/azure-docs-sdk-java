### YamlMime:ManagedReference
items:
- uid: "com.azure.storage.file.datalake.models.PathAccessControlEntry"
  id: "PathAccessControlEntry"
  parent: "com.azure.storage.file.datalake.models"
  children:
  - "com.azure.storage.file.datalake.models.PathAccessControlEntry.PathAccessControlEntry()"
  - "com.azure.storage.file.datalake.models.PathAccessControlEntry.PathAccessControlEntry(boolean,com.azure.storage.file.datalake.models.AccessControlType,java.lang.String,com.azure.storage.file.datalake.models.RolePermissions)"
  - "com.azure.storage.file.datalake.models.PathAccessControlEntry.PathAccessControlEntry(com.azure.storage.file.datalake.models.PathAccessControlEntry)"
  - "com.azure.storage.file.datalake.models.PathAccessControlEntry.SUPERUSER"
  - "com.azure.storage.file.datalake.models.PathAccessControlEntry.accessControlType()"
  - "com.azure.storage.file.datalake.models.PathAccessControlEntry.accessControlType(com.azure.storage.file.datalake.models.AccessControlType)"
  - "com.azure.storage.file.datalake.models.PathAccessControlEntry.defaultScope()"
  - "com.azure.storage.file.datalake.models.PathAccessControlEntry.defaultScope(boolean)"
  - "com.azure.storage.file.datalake.models.PathAccessControlEntry.entityID()"
  - "com.azure.storage.file.datalake.models.PathAccessControlEntry.entityID(java.lang.String)"
  - "com.azure.storage.file.datalake.models.PathAccessControlEntry.equals(java.lang.Object)"
  - "com.azure.storage.file.datalake.models.PathAccessControlEntry.hashCode()"
  - "com.azure.storage.file.datalake.models.PathAccessControlEntry.parse(java.lang.String)"
  - "com.azure.storage.file.datalake.models.PathAccessControlEntry.parseList(java.lang.String)"
  - "com.azure.storage.file.datalake.models.PathAccessControlEntry.permissions()"
  - "com.azure.storage.file.datalake.models.PathAccessControlEntry.permissions(com.azure.storage.file.datalake.models.RolePermissions)"
  - "com.azure.storage.file.datalake.models.PathAccessControlEntry.serializeList(java.util.List<com.azure.storage.file.datalake.models.PathAccessControlEntry>)"
  - "com.azure.storage.file.datalake.models.PathAccessControlEntry.toString()"
  langs:
  - "java"
  name: "PathAccessControlEntry"
  nameWithType: "PathAccessControlEntry"
  fullName: "com.azure.storage.file.datalake.models.PathAccessControlEntry"
  type: "Class"
  package: "com.azure.storage.file.datalake.models"
  summary: "POSIX access control rights on files and directories.\n\nThe value is a comma-separated list of access control entries, each access control entry (ACE) consists of four elements in the format \"\\[scope:\\]\\[type\\]:\\[id\\]:\\[permissions\\]\":\n\n *  Scope\n *  Type\n *  User or Group Identifier (AAD ObjectId)\n *  Permissions\n\nThe scope must be \"default\" to indicate the ACE belongs to the default Access Control List (ACL) for a directory; otherwise scope is implicit and the ACE belongs to the access ACL.\n\nThere are four ACE types:\n\n *  \"user\": grants rights to the owner or a named user\n *  \"group\" grants rights to the owning group or a named group\n *  \"mask\" restricts rights granted to named users and the members of groups\n *  \"other\" grants rights to all users not found in any of the other entries\n\nThe user or group identifier is omitted for entries of type \"mask\" and \"other\". The user or group identifier is also omitted for the owner and owning group.\n\nThe permission field is a 3-character sequence where the first character is 'r' to grant read access, the second character is 'w' to grant write access, and the third character is 'x' to grant execute permission. If access is not granted, the '-' character is used to denote that the permission is denied.\n\nFor example, the following ACL grants read, write, and execute rights to the file owner and john.doe@contoso, the read right to the owning group, and nothing to everyone else: \"user::rwx,user:john.doe@contoso:rwx,group::r--,other::---,mask::rwx\"."
  syntax:
    content: "public class PathAccessControlEntry"
  inheritance:
  - "java.lang.Object"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.azure.storage.file.datalake.models.PathAccessControlEntry.PathAccessControlEntry()"
  id: "PathAccessControlEntry()"
  parent: "com.azure.storage.file.datalake.models.PathAccessControlEntry"
  langs:
  - "java"
  name: "PathAccessControlEntry()"
  nameWithType: "PathAccessControlEntry.PathAccessControlEntry()"
  fullName: "com.azure.storage.file.datalake.models.PathAccessControlEntry.PathAccessControlEntry()"
  overload: "com.azure.storage.file.datalake.models.PathAccessControlEntry.PathAccessControlEntry*"
  type: "Constructor"
  package: "com.azure.storage.file.datalake.models"
  summary: "Initializes an empty instance of `PathAccessControlEntry`. Constructs an empty instance of <xref uid=\"com.azure.storage.file.datalake.models.RolePermissions\" data-throw-if-not-resolved=\"false\">RolePermissions</xref> for the permissions field."
  syntax:
    content: "public PathAccessControlEntry()"
- uid: "com.azure.storage.file.datalake.models.PathAccessControlEntry.PathAccessControlEntry(boolean,com.azure.storage.file.datalake.models.AccessControlType,java.lang.String,com.azure.storage.file.datalake.models.RolePermissions)"
  id: "PathAccessControlEntry(boolean,com.azure.storage.file.datalake.models.AccessControlType,java.lang.String,com.azure.storage.file.datalake.models.RolePermissions)"
  parent: "com.azure.storage.file.datalake.models.PathAccessControlEntry"
  langs:
  - "java"
  name: "PathAccessControlEntry(boolean defaultScope, AccessControlType accessControlType, String entityID, RolePermissions permissions)"
  nameWithType: "PathAccessControlEntry.PathAccessControlEntry(boolean defaultScope, AccessControlType accessControlType, String entityID, RolePermissions permissions)"
  fullName: "com.azure.storage.file.datalake.models.PathAccessControlEntry.PathAccessControlEntry(boolean defaultScope, AccessControlType accessControlType, String entityID, RolePermissions permissions)"
  overload: "com.azure.storage.file.datalake.models.PathAccessControlEntry.PathAccessControlEntry*"
  type: "Constructor"
  package: "com.azure.storage.file.datalake.models"
  summary: "Initializes a new instance of `PathAccessControlEntry` with the given values."
  syntax:
    content: "public PathAccessControlEntry(boolean defaultScope, AccessControlType accessControlType, String entityID, RolePermissions permissions)"
    parameters:
    - id: "defaultScope"
      type: "boolean"
      description: "Indicates whether this entry belongs to the default ACL for a directory."
    - id: "accessControlType"
      type: "com.azure.storage.file.datalake.models.AccessControlType"
      description: "Indicates which role this entry targets."
    - id: "entityID"
      type: "java.lang.String"
      description: "Specifies the entity for which this entry applies. Must be omitted for types mask or other.\n It must also be omitted when the user or group is the owner."
    - id: "permissions"
      type: "com.azure.storage.file.datalake.models.RolePermissions"
      description: "Specifies the permissions granted to this entry."
- uid: "com.azure.storage.file.datalake.models.PathAccessControlEntry.PathAccessControlEntry(com.azure.storage.file.datalake.models.PathAccessControlEntry)"
  id: "PathAccessControlEntry(com.azure.storage.file.datalake.models.PathAccessControlEntry)"
  parent: "com.azure.storage.file.datalake.models.PathAccessControlEntry"
  langs:
  - "java"
  name: "PathAccessControlEntry(PathAccessControlEntry other)"
  nameWithType: "PathAccessControlEntry.PathAccessControlEntry(PathAccessControlEntry other)"
  fullName: "com.azure.storage.file.datalake.models.PathAccessControlEntry.PathAccessControlEntry(PathAccessControlEntry other)"
  overload: "com.azure.storage.file.datalake.models.PathAccessControlEntry.PathAccessControlEntry*"
  type: "Constructor"
  package: "com.azure.storage.file.datalake.models"
  summary: "Initializes a new instance of `PathAccesControlEntry` with values copied from the provided instance."
  syntax:
    content: "public PathAccessControlEntry(PathAccessControlEntry other)"
    parameters:
    - id: "other"
      type: "com.azure.storage.file.datalake.models.PathAccessControlEntry"
      description: "The instance with values to copy."
- uid: "com.azure.storage.file.datalake.models.PathAccessControlEntry.SUPERUSER"
  id: "SUPERUSER"
  parent: "com.azure.storage.file.datalake.models.PathAccessControlEntry"
  langs:
  - "java"
  name: "SUPERUSER"
  nameWithType: "PathAccessControlEntry.SUPERUSER"
  fullName: "com.azure.storage.file.datalake.models.PathAccessControlEntry.SUPERUSER"
  type: "Field"
  package: "com.azure.storage.file.datalake.models"
  syntax:
    content: "public static final String SUPERUSER"
    return:
      type: "java.lang.String"
- uid: "com.azure.storage.file.datalake.models.PathAccessControlEntry.accessControlType()"
  id: "accessControlType()"
  parent: "com.azure.storage.file.datalake.models.PathAccessControlEntry"
  langs:
  - "java"
  name: "accessControlType()"
  nameWithType: "PathAccessControlEntry.accessControlType()"
  fullName: "com.azure.storage.file.datalake.models.PathAccessControlEntry.accessControlType()"
  overload: "com.azure.storage.file.datalake.models.PathAccessControlEntry.accessControlType*"
  type: "Method"
  package: "com.azure.storage.file.datalake.models"
  summary: "Returns the <xref uid=\"com.azure.storage.file.datalake.models.AccessControlType\" data-throw-if-not-resolved=\"false\">AccessControlType</xref> for this entry."
  syntax:
    content: "public AccessControlType accessControlType()"
    return:
      type: "com.azure.storage.file.datalake.models.AccessControlType"
      description: "The <xref uid=\"com.azure.storage.file.datalake.models.AccessControlType\" data-throw-if-not-resolved=\"false\">AccessControlType</xref> for this entry."
- uid: "com.azure.storage.file.datalake.models.PathAccessControlEntry.accessControlType(com.azure.storage.file.datalake.models.AccessControlType)"
  id: "accessControlType(com.azure.storage.file.datalake.models.AccessControlType)"
  parent: "com.azure.storage.file.datalake.models.PathAccessControlEntry"
  langs:
  - "java"
  name: "accessControlType(AccessControlType accessControlType)"
  nameWithType: "PathAccessControlEntry.accessControlType(AccessControlType accessControlType)"
  fullName: "com.azure.storage.file.datalake.models.PathAccessControlEntry.accessControlType(AccessControlType accessControlType)"
  overload: "com.azure.storage.file.datalake.models.PathAccessControlEntry.accessControlType*"
  type: "Method"
  package: "com.azure.storage.file.datalake.models"
  summary: "Sets the <xref uid=\"com.azure.storage.file.datalake.models.AccessControlType\" data-throw-if-not-resolved=\"false\">AccessControlType</xref> for this entry."
  syntax:
    content: "public PathAccessControlEntry accessControlType(AccessControlType accessControlType)"
    parameters:
    - id: "accessControlType"
      type: "com.azure.storage.file.datalake.models.AccessControlType"
      description: "The <xref uid=\"com.azure.storage.file.datalake.models.AccessControlType\" data-throw-if-not-resolved=\"false\">AccessControlType</xref> for this entry."
    return:
      type: "com.azure.storage.file.datalake.models.PathAccessControlEntry"
      description: "The updated PathAccessControlEntry object."
- uid: "com.azure.storage.file.datalake.models.PathAccessControlEntry.defaultScope()"
  id: "defaultScope()"
  parent: "com.azure.storage.file.datalake.models.PathAccessControlEntry"
  langs:
  - "java"
  name: "defaultScope()"
  nameWithType: "PathAccessControlEntry.defaultScope()"
  fullName: "com.azure.storage.file.datalake.models.PathAccessControlEntry.defaultScope()"
  overload: "com.azure.storage.file.datalake.models.PathAccessControlEntry.defaultScope*"
  type: "Method"
  package: "com.azure.storage.file.datalake.models"
  summary: "Returns whether this ACE is in the default scope."
  syntax:
    content: "public boolean defaultScope()"
    return:
      type: "boolean"
      description: "<code>true</code> if in the default scope and <code>false</code> otherwise."
- uid: "com.azure.storage.file.datalake.models.PathAccessControlEntry.defaultScope(boolean)"
  id: "defaultScope(boolean)"
  parent: "com.azure.storage.file.datalake.models.PathAccessControlEntry"
  langs:
  - "java"
  name: "defaultScope(boolean defaultScope)"
  nameWithType: "PathAccessControlEntry.defaultScope(boolean defaultScope)"
  fullName: "com.azure.storage.file.datalake.models.PathAccessControlEntry.defaultScope(boolean defaultScope)"
  overload: "com.azure.storage.file.datalake.models.PathAccessControlEntry.defaultScope*"
  type: "Method"
  package: "com.azure.storage.file.datalake.models"
  summary: "Sets whether or not this entry is the default for a directory."
  syntax:
    content: "public PathAccessControlEntry defaultScope(boolean defaultScope)"
    parameters:
    - id: "defaultScope"
      type: "boolean"
      description: "<code>true</code> to set as the default scope and <code>false</code> otherwise."
    return:
      type: "com.azure.storage.file.datalake.models.PathAccessControlEntry"
      description: "The updated PathAccessControlEntry object."
- uid: "com.azure.storage.file.datalake.models.PathAccessControlEntry.entityID()"
  id: "entityID()"
  parent: "com.azure.storage.file.datalake.models.PathAccessControlEntry"
  langs:
  - "java"
  name: "entityID()"
  nameWithType: "PathAccessControlEntry.entityID()"
  fullName: "com.azure.storage.file.datalake.models.PathAccessControlEntry.entityID()"
  overload: "com.azure.storage.file.datalake.models.PathAccessControlEntry.entityID*"
  type: "Method"
  package: "com.azure.storage.file.datalake.models"
  summary: "The Azure AAD Object ID or User Principal Name that is associated with this entry."
  syntax:
    content: "public String entityID()"
    return:
      type: "java.lang.String"
      description: "The entity for which this entry applies."
- uid: "com.azure.storage.file.datalake.models.PathAccessControlEntry.entityID(java.lang.String)"
  id: "entityID(java.lang.String)"
  parent: "com.azure.storage.file.datalake.models.PathAccessControlEntry"
  langs:
  - "java"
  name: "entityID(String entityID)"
  nameWithType: "PathAccessControlEntry.entityID(String entityID)"
  fullName: "com.azure.storage.file.datalake.models.PathAccessControlEntry.entityID(String entityID)"
  overload: "com.azure.storage.file.datalake.models.PathAccessControlEntry.entityID*"
  type: "Method"
  package: "com.azure.storage.file.datalake.models"
  summary: "Sets the entity ID to which this entry will apply. Must be null if the type is <xref uid=\"com.azure.storage.file.datalake.models.AccessControlType.MASK\" data-throw-if-not-resolved=\"false\">AccessControlType#MASK</xref> or <xref uid=\"com.azure.storage.file.datalake.models.AccessControlType.OTHER\" data-throw-if-not-resolved=\"false\">AccessControlType#OTHER</xref> or if the user is the owner or the group is the owning group. Must be a valid Azure AAD Object ID or User Principal Name."
  syntax:
    content: "public PathAccessControlEntry entityID(String entityID)"
    parameters:
    - id: "entityID"
      type: "java.lang.String"
      description: "The entity to which this entry will apply."
    return:
      type: "com.azure.storage.file.datalake.models.PathAccessControlEntry"
      description: "The updated PathAccessControlEntry object."
- uid: "com.azure.storage.file.datalake.models.PathAccessControlEntry.equals(java.lang.Object)"
  id: "equals(java.lang.Object)"
  parent: "com.azure.storage.file.datalake.models.PathAccessControlEntry"
  langs:
  - "java"
  name: "equals(Object o)"
  nameWithType: "PathAccessControlEntry.equals(Object o)"
  fullName: "com.azure.storage.file.datalake.models.PathAccessControlEntry.equals(Object o)"
  overload: "com.azure.storage.file.datalake.models.PathAccessControlEntry.equals*"
  type: "Method"
  package: "com.azure.storage.file.datalake.models"
  syntax:
    content: "public boolean equals(Object o)"
    parameters:
    - id: "o"
      type: "java.lang.Object"
    return:
      type: "boolean"
- uid: "com.azure.storage.file.datalake.models.PathAccessControlEntry.hashCode()"
  id: "hashCode()"
  parent: "com.azure.storage.file.datalake.models.PathAccessControlEntry"
  langs:
  - "java"
  name: "hashCode()"
  nameWithType: "PathAccessControlEntry.hashCode()"
  fullName: "com.azure.storage.file.datalake.models.PathAccessControlEntry.hashCode()"
  overload: "com.azure.storage.file.datalake.models.PathAccessControlEntry.hashCode*"
  type: "Method"
  package: "com.azure.storage.file.datalake.models"
  syntax:
    content: "public int hashCode()"
    return:
      type: "int"
- uid: "com.azure.storage.file.datalake.models.PathAccessControlEntry.parse(java.lang.String)"
  id: "parse(java.lang.String)"
  parent: "com.azure.storage.file.datalake.models.PathAccessControlEntry"
  langs:
  - "java"
  name: "parse(String str)"
  nameWithType: "PathAccessControlEntry.parse(String str)"
  fullName: "com.azure.storage.file.datalake.models.PathAccessControlEntry.parse(String str)"
  overload: "com.azure.storage.file.datalake.models.PathAccessControlEntry.parse*"
  type: "Method"
  package: "com.azure.storage.file.datalake.models"
  summary: "Parses the provided string into a `List<{@link PathAccessControlEntry}>`. Must be of the format \"\\[scope:\\]\\[type\\]:\\[id\\]:\\[permissions\\]\"."
  syntax:
    content: "public static PathAccessControlEntry parse(String str)"
    parameters:
    - id: "str"
      type: "java.lang.String"
      description: "The string representation of the ACL."
    return:
      type: "com.azure.storage.file.datalake.models.PathAccessControlEntry"
      description: "The deserialized list."
- uid: "com.azure.storage.file.datalake.models.PathAccessControlEntry.parseList(java.lang.String)"
  id: "parseList(java.lang.String)"
  parent: "com.azure.storage.file.datalake.models.PathAccessControlEntry"
  langs:
  - "java"
  name: "parseList(String str)"
  nameWithType: "PathAccessControlEntry.parseList(String str)"
  fullName: "com.azure.storage.file.datalake.models.PathAccessControlEntry.parseList(String str)"
  overload: "com.azure.storage.file.datalake.models.PathAccessControlEntry.parseList*"
  type: "Method"
  package: "com.azure.storage.file.datalake.models"
  summary: "Deserializes an ACL to the format \"user::rwx,user:john.doe@contoso:rwx,group::r--,other::---,mask=rwx\""
  syntax:
    content: "public static List<PathAccessControlEntry> parseList(String str)"
    parameters:
    - id: "str"
      type: "java.lang.String"
      description: "The <code>String</code> representation of the ACL."
    return:
      type: "java.util.List<com.azure.storage.file.datalake.models.PathAccessControlEntry>"
      description: "The ACL deserialized into a <code>java.util.List</code>"
- uid: "com.azure.storage.file.datalake.models.PathAccessControlEntry.permissions()"
  id: "permissions()"
  parent: "com.azure.storage.file.datalake.models.PathAccessControlEntry"
  langs:
  - "java"
  name: "permissions()"
  nameWithType: "PathAccessControlEntry.permissions()"
  fullName: "com.azure.storage.file.datalake.models.PathAccessControlEntry.permissions()"
  overload: "com.azure.storage.file.datalake.models.PathAccessControlEntry.permissions*"
  type: "Method"
  package: "com.azure.storage.file.datalake.models"
  summary: "Returns the symbolic form of the permissions for this entry."
  syntax:
    content: "public RolePermissions permissions()"
    return:
      type: "com.azure.storage.file.datalake.models.RolePermissions"
      description: "The <xref uid=\"com.azure.storage.file.datalake.models.RolePermissions\" data-throw-if-not-resolved=\"false\">RolePermissions</xref> for this entry."
- uid: "com.azure.storage.file.datalake.models.PathAccessControlEntry.permissions(com.azure.storage.file.datalake.models.RolePermissions)"
  id: "permissions(com.azure.storage.file.datalake.models.RolePermissions)"
  parent: "com.azure.storage.file.datalake.models.PathAccessControlEntry"
  langs:
  - "java"
  name: "permissions(RolePermissions permissions)"
  nameWithType: "PathAccessControlEntry.permissions(RolePermissions permissions)"
  fullName: "com.azure.storage.file.datalake.models.PathAccessControlEntry.permissions(RolePermissions permissions)"
  overload: "com.azure.storage.file.datalake.models.PathAccessControlEntry.permissions*"
  type: "Method"
  package: "com.azure.storage.file.datalake.models"
  summary: "Sets the permissions for this entry."
  syntax:
    content: "public PathAccessControlEntry permissions(RolePermissions permissions)"
    parameters:
    - id: "permissions"
      type: "com.azure.storage.file.datalake.models.RolePermissions"
      description: "<xref uid=\"com.azure.storage.file.datalake.models.RolePermissions\" data-throw-if-not-resolved=\"false\">RolePermissions</xref> to set for this entry."
    return:
      type: "com.azure.storage.file.datalake.models.PathAccessControlEntry"
      description: "The updated PathAccessControlEntry object."
- uid: "com.azure.storage.file.datalake.models.PathAccessControlEntry.serializeList(java.util.List<com.azure.storage.file.datalake.models.PathAccessControlEntry>)"
  id: "serializeList(java.util.List<com.azure.storage.file.datalake.models.PathAccessControlEntry>)"
  parent: "com.azure.storage.file.datalake.models.PathAccessControlEntry"
  langs:
  - "java"
  name: "serializeList(List<PathAccessControlEntry> acl)"
  nameWithType: "PathAccessControlEntry.serializeList(List<PathAccessControlEntry> acl)"
  fullName: "com.azure.storage.file.datalake.models.PathAccessControlEntry.serializeList(List<PathAccessControlEntry> acl)"
  overload: "com.azure.storage.file.datalake.models.PathAccessControlEntry.serializeList*"
  type: "Method"
  package: "com.azure.storage.file.datalake.models"
  summary: "Converts the Access Control List to a `String`. The format is specified in the description of this type."
  syntax:
    content: "public static String serializeList(List<PathAccessControlEntry> acl)"
    parameters:
    - id: "acl"
      type: "java.util.List<com.azure.storage.file.datalake.models.PathAccessControlEntry>"
      description: "The Access Control List to serialize."
    return:
      type: "java.lang.String"
      description: "A <code>String</code> representing the serialized Access Control List"
- uid: "com.azure.storage.file.datalake.models.PathAccessControlEntry.toString()"
  id: "toString()"
  parent: "com.azure.storage.file.datalake.models.PathAccessControlEntry"
  langs:
  - "java"
  name: "toString()"
  nameWithType: "PathAccessControlEntry.toString()"
  fullName: "com.azure.storage.file.datalake.models.PathAccessControlEntry.toString()"
  overload: "com.azure.storage.file.datalake.models.PathAccessControlEntry.toString*"
  type: "Method"
  package: "com.azure.storage.file.datalake.models"
  syntax:
    content: "public String toString()"
    return:
      type: "java.lang.String"
references:
- uid: "com.azure.storage.file.datalake.models.PathAccessControlEntry.PathAccessControlEntry*"
  name: "PathAccessControlEntry"
  nameWithType: "PathAccessControlEntry.PathAccessControlEntry"
  fullName: "com.azure.storage.file.datalake.models.PathAccessControlEntry.PathAccessControlEntry"
  package: "com.azure.storage.file.datalake.models"
- uid: "boolean"
  spec.java:
  - uid: "boolean"
    name: "boolean"
    fullName: "boolean"
- uid: "com.azure.storage.file.datalake.models.AccessControlType"
  name: "AccessControlType"
  nameWithType: "AccessControlType"
  fullName: "com.azure.storage.file.datalake.models.AccessControlType"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "com.azure.storage.file.datalake.models.RolePermissions"
  name: "RolePermissions"
  nameWithType: "RolePermissions"
  fullName: "com.azure.storage.file.datalake.models.RolePermissions"
- uid: "java.lang.Object"
  spec.java:
  - uid: "java.lang.Object"
    name: "Object"
    fullName: "java.lang.Object"
- uid: "com.azure.storage.file.datalake.models.PathAccessControlEntry.equals*"
  name: "equals"
  nameWithType: "PathAccessControlEntry.equals"
  fullName: "com.azure.storage.file.datalake.models.PathAccessControlEntry.equals"
  package: "com.azure.storage.file.datalake.models"
- uid: "int"
  spec.java:
  - uid: "int"
    name: "int"
    fullName: "int"
- uid: "com.azure.storage.file.datalake.models.PathAccessControlEntry.hashCode*"
  name: "hashCode"
  nameWithType: "PathAccessControlEntry.hashCode"
  fullName: "com.azure.storage.file.datalake.models.PathAccessControlEntry.hashCode"
  package: "com.azure.storage.file.datalake.models"
- uid: "com.azure.storage.file.datalake.models.PathAccessControlEntry.toString*"
  name: "toString"
  nameWithType: "PathAccessControlEntry.toString"
  fullName: "com.azure.storage.file.datalake.models.PathAccessControlEntry.toString"
  package: "com.azure.storage.file.datalake.models"
- uid: "com.azure.storage.file.datalake.models.PathAccessControlEntry.parse*"
  name: "parse"
  nameWithType: "PathAccessControlEntry.parse"
  fullName: "com.azure.storage.file.datalake.models.PathAccessControlEntry.parse"
  package: "com.azure.storage.file.datalake.models"
- uid: "java.util.List<com.azure.storage.file.datalake.models.PathAccessControlEntry>"
  spec.java:
  - uid: "java.util.List"
    name: "List"
    fullName: "java.util.List"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.storage.file.datalake.models.PathAccessControlEntry"
    name: "PathAccessControlEntry"
    fullName: "com.azure.storage.file.datalake.models.PathAccessControlEntry"
  - name: ">"
    fullName: ">"
- uid: "com.azure.storage.file.datalake.models.PathAccessControlEntry.serializeList*"
  name: "serializeList"
  nameWithType: "PathAccessControlEntry.serializeList"
  fullName: "com.azure.storage.file.datalake.models.PathAccessControlEntry.serializeList"
  package: "com.azure.storage.file.datalake.models"
- uid: "com.azure.storage.file.datalake.models.PathAccessControlEntry.parseList*"
  name: "parseList"
  nameWithType: "PathAccessControlEntry.parseList"
  fullName: "com.azure.storage.file.datalake.models.PathAccessControlEntry.parseList"
  package: "com.azure.storage.file.datalake.models"
- uid: "com.azure.storage.file.datalake.models.PathAccessControlEntry.defaultScope*"
  name: "defaultScope"
  nameWithType: "PathAccessControlEntry.defaultScope"
  fullName: "com.azure.storage.file.datalake.models.PathAccessControlEntry.defaultScope"
  package: "com.azure.storage.file.datalake.models"
- uid: "com.azure.storage.file.datalake.models.PathAccessControlEntry.accessControlType*"
  name: "accessControlType"
  nameWithType: "PathAccessControlEntry.accessControlType"
  fullName: "com.azure.storage.file.datalake.models.PathAccessControlEntry.accessControlType"
  package: "com.azure.storage.file.datalake.models"
- uid: "com.azure.storage.file.datalake.models.PathAccessControlEntry.entityID*"
  name: "entityID"
  nameWithType: "PathAccessControlEntry.entityID"
  fullName: "com.azure.storage.file.datalake.models.PathAccessControlEntry.entityID"
  package: "com.azure.storage.file.datalake.models"
- uid: "com.azure.storage.file.datalake.models.PathAccessControlEntry.permissions*"
  name: "permissions"
  nameWithType: "PathAccessControlEntry.permissions"
  fullName: "com.azure.storage.file.datalake.models.PathAccessControlEntry.permissions"
  package: "com.azure.storage.file.datalake.models"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "java.util.List"
  name: "List"
  nameWithType: "List"
  fullName: "java.util.List"
