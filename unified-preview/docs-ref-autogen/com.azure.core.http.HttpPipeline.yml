### YamlMime:ManagedReference
items:
- uid: "com.azure.core.http.HttpPipeline"
  id: "HttpPipeline"
  parent: "com.azure.core.http"
  children:
  - "com.azure.core.http.HttpPipeline.HttpPipeline(com.azure.core.http.HttpClient,java.util.List<com.azure.core.http.policy.HttpPipelinePolicy>)"
  - "com.azure.core.http.HttpPipeline.getHttpClient()"
  - "com.azure.core.http.HttpPipeline.getPolicy(int)"
  - "com.azure.core.http.HttpPipeline.getPolicyCount()"
  - "com.azure.core.http.HttpPipeline.send(com.azure.core.http.HttpPipelineCallContext)"
  - "com.azure.core.http.HttpPipeline.send(com.azure.core.http.HttpRequest)"
  - "com.azure.core.http.HttpPipeline.send(com.azure.core.http.HttpRequest,com.azure.core.util.Context)"
  langs:
  - "java"
  name: "HttpPipeline"
  nameWithType: "HttpPipeline"
  fullName: "com.azure.core.http.HttpPipeline"
  type: "Class"
  package: "com.azure.core.http"
  summary: "The HTTP pipeline that HTTP requests and responses will flow through."
  syntax:
    content: "public final class HttpPipeline"
  inheritance:
  - "java.lang.Object"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.azure.core.http.HttpPipeline.HttpPipeline(com.azure.core.http.HttpClient,java.util.List<com.azure.core.http.policy.HttpPipelinePolicy>)"
  id: "HttpPipeline(com.azure.core.http.HttpClient,java.util.List<com.azure.core.http.policy.HttpPipelinePolicy>)"
  parent: "com.azure.core.http.HttpPipeline"
  langs:
  - "java"
  name: "HttpPipeline(HttpClient httpClient, List<HttpPipelinePolicy> pipelinePolicies)"
  nameWithType: "HttpPipeline.HttpPipeline(HttpClient httpClient, List<HttpPipelinePolicy> pipelinePolicies)"
  fullName: "com.azure.core.http.HttpPipeline.HttpPipeline(HttpClient httpClient, List<HttpPipelinePolicy> pipelinePolicies)"
  overload: "com.azure.core.http.HttpPipeline.HttpPipeline*"
  type: "Constructor"
  package: "com.azure.core.http"
  summary: "Creates a HttpPipeline holding array of policies that gets applied to all request initiated through <xref uid=\"com.azure.core.http.HttpPipeline.send(com.azure.core.http.HttpPipelineCallContext)\" data-throw-if-not-resolved=\"false\">HttpPipeline#send(HttpPipelineCallContext)</xref> and it's response."
  syntax:
    content: " HttpPipeline(HttpClient httpClient, List<HttpPipelinePolicy> pipelinePolicies)"
    parameters:
    - id: "httpClient"
      type: "com.azure.core.http.HttpClient"
      description: "the http client to write request to wire and receive response from wire."
    - id: "pipelinePolicies"
      type: "java.util.List<com.azure.core.http.policy.HttpPipelinePolicy>"
      description: "pipeline policies in the order they need to applied, a copy of this array will\n     be made hence changing the original array after the creation of pipeline\n     will not  mutate the pipeline"
- uid: "com.azure.core.http.HttpPipeline.getHttpClient()"
  id: "getHttpClient()"
  parent: "com.azure.core.http.HttpPipeline"
  langs:
  - "java"
  name: "getHttpClient()"
  nameWithType: "HttpPipeline.getHttpClient()"
  fullName: "com.azure.core.http.HttpPipeline.getHttpClient()"
  overload: "com.azure.core.http.HttpPipeline.getHttpClient*"
  type: "Method"
  package: "com.azure.core.http"
  summary: "Get the <xref uid=\"com.azure.core.http.HttpClient\" data-throw-if-not-resolved=\"false\">HttpClient</xref> associated with the pipeline."
  syntax:
    content: "public HttpClient getHttpClient()"
    return:
      type: "com.azure.core.http.HttpClient"
      description: "the <xref uid=\"com.azure.core.http.HttpClient\" data-throw-if-not-resolved=\"false\">HttpClient</xref> associated with the pipeline"
- uid: "com.azure.core.http.HttpPipeline.getPolicy(int)"
  id: "getPolicy(int)"
  parent: "com.azure.core.http.HttpPipeline"
  langs:
  - "java"
  name: "getPolicy(int index)"
  nameWithType: "HttpPipeline.getPolicy(int index)"
  fullName: "com.azure.core.http.HttpPipeline.getPolicy(int index)"
  overload: "com.azure.core.http.HttpPipeline.getPolicy*"
  type: "Method"
  package: "com.azure.core.http"
  summary: "Get the policy at the passed index in the pipeline."
  syntax:
    content: "public HttpPipelinePolicy getPolicy(int index)"
    parameters:
    - id: "index"
      type: "int"
      description: "index of the the policy to retrieve."
    return:
      type: "com.azure.core.http.policy.HttpPipelinePolicy"
      description: "the policy stored at that index."
- uid: "com.azure.core.http.HttpPipeline.getPolicyCount()"
  id: "getPolicyCount()"
  parent: "com.azure.core.http.HttpPipeline"
  langs:
  - "java"
  name: "getPolicyCount()"
  nameWithType: "HttpPipeline.getPolicyCount()"
  fullName: "com.azure.core.http.HttpPipeline.getPolicyCount()"
  overload: "com.azure.core.http.HttpPipeline.getPolicyCount*"
  type: "Method"
  package: "com.azure.core.http"
  summary: "Get the count of policies in the pipeline."
  syntax:
    content: "public int getPolicyCount()"
    return:
      type: "int"
      description: "count of policies."
- uid: "com.azure.core.http.HttpPipeline.send(com.azure.core.http.HttpPipelineCallContext)"
  id: "send(com.azure.core.http.HttpPipelineCallContext)"
  parent: "com.azure.core.http.HttpPipeline"
  langs:
  - "java"
  name: "send(HttpPipelineCallContext context)"
  nameWithType: "HttpPipeline.send(HttpPipelineCallContext context)"
  fullName: "com.azure.core.http.HttpPipeline.send(HttpPipelineCallContext context)"
  overload: "com.azure.core.http.HttpPipeline.send*"
  type: "Method"
  package: "com.azure.core.http"
  summary: "Sends the context (containing an HTTP request) through pipeline."
  syntax:
    content: "public Mono<HttpResponse> send(HttpPipelineCallContext context)"
    parameters:
    - id: "context"
      type: "com.azure.core.http.HttpPipelineCallContext"
      description: "The request context."
    return:
      type: "reactor.core.publisher.Mono<com.azure.core.http.HttpResponse>"
      description: "A publisher upon subscription flows the context through policies, sends the request and emits response\n     upon completion."
- uid: "com.azure.core.http.HttpPipeline.send(com.azure.core.http.HttpRequest)"
  id: "send(com.azure.core.http.HttpRequest)"
  parent: "com.azure.core.http.HttpPipeline"
  langs:
  - "java"
  name: "send(HttpRequest request)"
  nameWithType: "HttpPipeline.send(HttpRequest request)"
  fullName: "com.azure.core.http.HttpPipeline.send(HttpRequest request)"
  overload: "com.azure.core.http.HttpPipeline.send*"
  type: "Method"
  package: "com.azure.core.http"
  summary: "Wraps the `request` in a context and sends it through pipeline."
  syntax:
    content: "public Mono<HttpResponse> send(HttpRequest request)"
    parameters:
    - id: "request"
      type: "com.azure.core.http.HttpRequest"
      description: "The HTTP request to send."
    return:
      type: "reactor.core.publisher.Mono<com.azure.core.http.HttpResponse>"
      description: "A publisher upon subscription flows the context through policies, sends the request, and emits response\n     upon completion."
- uid: "com.azure.core.http.HttpPipeline.send(com.azure.core.http.HttpRequest,com.azure.core.util.Context)"
  id: "send(com.azure.core.http.HttpRequest,com.azure.core.util.Context)"
  parent: "com.azure.core.http.HttpPipeline"
  langs:
  - "java"
  name: "send(HttpRequest request, Context data)"
  nameWithType: "HttpPipeline.send(HttpRequest request, Context data)"
  fullName: "com.azure.core.http.HttpPipeline.send(HttpRequest request, Context data)"
  overload: "com.azure.core.http.HttpPipeline.send*"
  type: "Method"
  package: "com.azure.core.http"
  summary: "Wraps the request in a context with additional metadata and sends it through the pipeline."
  syntax:
    content: "public Mono<HttpResponse> send(HttpRequest request, Context data)"
    parameters:
    - id: "request"
      type: "com.azure.core.http.HttpRequest"
      description: "THe HTTP request to send."
    - id: "data"
      type: "com.azure.core.util.Context"
      description: "Additional metadata to pass along with the request."
    return:
      type: "reactor.core.publisher.Mono<com.azure.core.http.HttpResponse>"
      description: "A publisher upon subscription flows the context through policies, sends the request, and emits response\n     upon completion."
references:
- uid: "com.azure.core.http.HttpClient"
  name: "HttpClient"
  nameWithType: "HttpClient"
  fullName: "com.azure.core.http.HttpClient"
- uid: "java.util.List<com.azure.core.http.policy.HttpPipelinePolicy>"
  spec.java:
  - uid: "java.util.List"
    name: "List"
    fullName: "java.util.List"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.core.http.policy.HttpPipelinePolicy"
    name: "HttpPipelinePolicy"
    fullName: "com.azure.core.http.policy.HttpPipelinePolicy"
  - name: ">"
    fullName: ">"
- uid: "com.azure.core.http.HttpPipeline.HttpPipeline*"
  name: "HttpPipeline"
  nameWithType: "HttpPipeline.HttpPipeline"
  fullName: "com.azure.core.http.HttpPipeline.HttpPipeline"
  package: "com.azure.core.http"
- uid: "int"
  spec.java:
  - uid: "int"
    name: "int"
    fullName: "int"
- uid: "com.azure.core.http.policy.HttpPipelinePolicy"
  name: "HttpPipelinePolicy"
  nameWithType: "HttpPipelinePolicy"
  fullName: "com.azure.core.http.policy.HttpPipelinePolicy"
- uid: "com.azure.core.http.HttpPipeline.getPolicy*"
  name: "getPolicy"
  nameWithType: "HttpPipeline.getPolicy"
  fullName: "com.azure.core.http.HttpPipeline.getPolicy"
  package: "com.azure.core.http"
- uid: "com.azure.core.http.HttpPipeline.getPolicyCount*"
  name: "getPolicyCount"
  nameWithType: "HttpPipeline.getPolicyCount"
  fullName: "com.azure.core.http.HttpPipeline.getPolicyCount"
  package: "com.azure.core.http"
- uid: "com.azure.core.http.HttpPipeline.getHttpClient*"
  name: "getHttpClient"
  nameWithType: "HttpPipeline.getHttpClient"
  fullName: "com.azure.core.http.HttpPipeline.getHttpClient"
  package: "com.azure.core.http"
- uid: "com.azure.core.http.HttpRequest"
  name: "HttpRequest"
  nameWithType: "HttpRequest"
  fullName: "com.azure.core.http.HttpRequest"
- uid: "reactor.core.publisher.Mono<com.azure.core.http.HttpResponse>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.core.http.HttpResponse"
    name: "HttpResponse"
    fullName: "com.azure.core.http.HttpResponse"
  - name: ">"
    fullName: ">"
- uid: "com.azure.core.http.HttpPipeline.send*"
  name: "send"
  nameWithType: "HttpPipeline.send"
  fullName: "com.azure.core.http.HttpPipeline.send"
  package: "com.azure.core.http"
- uid: "com.azure.core.util.Context"
  name: "Context"
  nameWithType: "Context"
  fullName: "com.azure.core.util.Context"
- uid: "com.azure.core.http.HttpPipelineCallContext"
  name: "HttpPipelineCallContext"
  nameWithType: "HttpPipelineCallContext"
  fullName: "com.azure.core.http.HttpPipelineCallContext"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "java.util.List"
  name: "List"
  nameWithType: "List"
  fullName: "java.util.List"
- uid: "com.azure.core.http.HttpResponse"
  name: "HttpResponse"
  nameWithType: "HttpResponse"
  fullName: "com.azure.core.http.HttpResponse"
- uid: "reactor.core.publisher.Mono"
  name: "Mono"
  nameWithType: "Mono"
  fullName: "reactor.core.publisher.Mono"
